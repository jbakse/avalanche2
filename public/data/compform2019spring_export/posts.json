[
  {
    "_id": "24WcmS77yGTt886Gy",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-03-25T00:11:36.286Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/y8vy4pisf2sfp3pcnhse",
        "version": 1553472739,
        "signature": "96e82640b09f3feb9573f23c138d6a7200791e04",
        "width": 1156,
        "height": 1648,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-25T00:12:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 14442814,
        "type": "upload",
        "etag": "343c6a6f43e809370069c365525117ac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553472739/avalanche2019/y8vy4pisf2sfp3pcnhse.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553472739/avalanche2019/y8vy4pisf2sfp3pcnhse.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "7566723",
          "dar": "289:412"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7576558,
        "duration": 15.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-03-26T03:12:22.596Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T13:34:13.94Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T18:39:53.635Z" }
      }
    ],
    "lesson": "Vectors",
    "title": "",
    "description": "Experimenting with matter.js, wanted to use a pile of stars for my poster, but can’t figure out svg output with this library right now.  \n_Code won’t work in browser, because it needs a couple of extra libraries and couldn’t find cdn links for all of them_",
    "inspiration_name": "matterjs",
    "inspiration_url": "http://brm.io/matter-js/demo/#concave",
    "code": "var Engine = Matter.Engine,\n    Render = Matter.Render,\n    Runner = Matter.Runner,\n    Composites = Matter.Composites,\n    Common = Matter.Common,\n    MouseConstraint = Matter.MouseConstraint,\n    Mouse = Matter.Mouse,\n    World = Matter.World,\n    Vertices = Matter.Vertices,\n    Bodies = Matter.Bodies;\n\n// create engine\nvar engine = Engine.create(),\n    world = engine.world;\n// create renderer\nvar render = Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n        width: 583,\n        height: 827,\n        wireframes: false,\n        background: 'rgb(240,240,240)'\n    }\n});\n\nRender.run(render);\n\n// create runner\nvar runner = Runner.create();\nRunner.run(runner, engine);\n\n// add bodies\nWorld.add(world, [\n    // walls\n    Bodies.rectangle(400, 918, 918, 100, { isStatic: true }),\n    Bodies.rectangle(855, 300, 100, 1500, { isStatic: true }),\n    Bodies.rectangle(-1, 300, 1, 1500, { isStatic: true })\n]);\n\nvar star = Vertices.fromPath('50 0 63 38 100 38 69 59 82 100 50 75 18 100 31 59 0 38 37 38');\nVertices.scale(star, 0.4, 0.4)\nvar stack = Composites.stack(300, -200, 5, 12, 10, 25, function(x, y) {\n    var color = Common.choose(['#f00', '#e10000', '#f21111', '#FF6B6B', '#d24444']);\n    return Bodies.fromVertices(x, y, Common.choose([star]), {\n        render: {\n            fillStyle: color\n        }\n    }, true);\n});\n\nWorld.add(world, stack);\n\n// add mouse control\nvar mouse = Mouse.create(render.canvas),\n    mouseConstraint = MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n            stiffness: 0.2,\n            render: {\n                visible: false\n            }\n        }\n    });\n\nWorld.add(world, mouseConstraint);\n\n// keep the mouse in sync with rendering\nrender.mouse = mouse;\n\n// fit the render viewport to the scene\nRender.lookAt(render, {\n    min: { x: 0, y: 0 },\n    max: { x: 800, y: 600 }\n});"
  },
  {
    "_id": "25i8QbEfrFKdhPGcM",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T00:28:58.316Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/io8lbuchlkzm1stnl3f6",
        "version": 1549585765,
        "signature": "d77112a29ccbd9f45df2b6e795c4fcc9bf80572c",
        "width": 656,
        "height": 654,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T00:29:25Z",
        "tags": [],
        "bytes": 28473,
        "type": "upload",
        "etag": "7904edbd7d5097a1380bc173381c445c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549585765/avalanche2019/io8lbuchlkzm1stnl3f6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549585765/avalanche2019/io8lbuchlkzm1stnl3f6.png"
      },
      {
        "public_id": "avalanche2019/ebs49lzjoqnz8rnkwwes",
        "version": 1549587369,
        "signature": "12f38d4ab139b62b2409b5c618cf23d0d7329b8d",
        "width": 650,
        "height": 644,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T00:56:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 298306,
        "type": "upload",
        "etag": "6488d208392cfebf81886a4f1045d747",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549587369/avalanche2019/ebs49lzjoqnz8rnkwwes.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549587369/avalanche2019/ebs49lzjoqnz8rnkwwes.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "98751",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "249470",
          "dar": "325:322"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 354421,
        "duration": 6.733356,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T00:48:41.643Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T11:40:29.015Z" }
      }
    ],
    "title": "",
    "description": "## Make a melody!  🎶\nClick play to get a drum beat and then click `random note` to generate a random synth note in the scale of A# minor.\n\nInspired by the p5.js sound examples.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nlet playButton;\nlet stopButton;\nlet changeNoteButton;\nlet analyzer;\nfunction preload() {\n  myDrums = loadSound(\n    \"https://raw.githubusercontent.com/AndrewLevinson/comp-form/master/week2/sketch-4/drumloop.wav\"\n  );\n}\n\n// The midi notes of a scale\nlet notes = [\n  { noteNum: 58, noteName: \"A#\" },\n  { noteNum: 60, noteName: \"C\" },\n  { noteNum: 63, noteName: \"D#\" },\n  { noteNum: 65, noteName: \"E\" },\n  { noteNum: 66, noteName: \"F#\" },\n  { noteNum: 67, noteName: \"G\" },\n  { noteNum: 70, noteName: \"A#\" }\n];\n\nlet currentNote = notes[Math.floor(Math.random(0, notes.length))];\n\nfunction setup() {\n  colorMode(HSB, 100);\n  textAlign(LEFT);\n  createCanvas(300, 300);\n  backgroundColor = color(99, 40, 90);\n\n  analyzer = new p5.Amplitude();\n  analyzer.setInput(myDrums);\n  osc = new p5.Oscillator(\"triangle\");\n\n  myDrums.amp(0);\n  myDrums.play();\n  myDrums.loop();\n\n  // play\n  playButton = createButton(\"Play\");\n  playButton.position(20, 20);\n  playButton.size(60, 30);\n  playButton.style(\"background-color\", \"fff\");\n  playButton.style(\"border-radius\", \"6px\");\n  playButton.style(\"border\", \"none\");\n  playButton.style(\"font-family\", \"monospaced\");\n  playButton.style(\"text-transform\", \"uppercase\");\n  playButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  playButton.mousePressed(startAll);\n\n  // stop\n  stopButton = createButton(\"Pause\");\n  stopButton.position(100, 20);\n  stopButton.size(60, 30);\n  stopButton.style(\"background-color\", \"fff\");\n  stopButton.style(\"border-radius\", \"6px\");\n  stopButton.style(\"border\", \"none\");\n  stopButton.style(\"font-family\", \"monospaced\");\n  stopButton.style(\"text-transform\", \"uppercase\");\n  stopButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  stopButton.mousePressed(stopAll);\n\n  // change note\n  changeNoteButton = createButton(\"Random Note\");\n  changeNoteButton.position(180, 20);\n  changeNoteButton.size(60, 30);\n  changeNoteButton.style(\"background-color\", \"fff\");\n  changeNoteButton.style(\"border-radius\", \"6px\");\n  changeNoteButton.style(\"border\", \"none\");\n  changeNoteButton.style(\"font-family\", \"monospaced\");\n  changeNoteButton.style(\"text-transform\", \"uppercase\");\n  changeNoteButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  changeNoteButton.mousePressed(changeNote);\n}\n\nfunction draw() {\n  background(backgroundColor);\n  noStroke();\n  fill(\"#3d3d3d\");\n  text(\"A# Blues-y Scale\", 20, height - 20);\n\n  text(`Note: ${currentNote[\"noteName\"]}`, 242, 35);\n\n  // from p5 documentation examples\n  // Get the average (root mean square) amplitude\n  var rms = analyzer.getLevel();\n  fill(80, 50, 90);\n  // Draw an ellipse with size based on volume\n  ellipse(width / 2, height / 2, 10 + rms * 200, 10 + rms * 200);\n}\n\nfunction startAll() {\n  osc.freq(midiToFreq(currentNote[\"noteNum\"]));\n  osc.start();\n  osc.amp(0.3, 0.3);\n\n  myDrums.amp(0.35, 0.05);\n\n  backgroundColor = color(50, 40, 90);\n}\n\nfunction stopAll() {\n  osc.amp(0, 0.5);\n  myDrums.amp(0, 0.5);\n  backgroundColor = color(99, 40, 90);\n}\n\nfunction changeNote() {\n  currentNote = notes[floor(random(0, notes.length))];\n  osc.freq(midiToFreq(currentNote[\"noteNum\"]));\n}"
  },
  {
    "_id": "267KPo6NLgjQxazEn",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T18:35:56.889Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hktmbu64yr7qf0jsxqbm",
        "version": 1552676460,
        "signature": "5932982bc91b63172a3dc9f3dedfbb623159863b",
        "width": 1072,
        "height": 1076,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T19:01:00Z",
        "tags": [],
        "bytes": 1970274,
        "type": "upload",
        "etag": "2dbb8b56ed179dad828ca86e2005467e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552676460/avalanche2019/hktmbu64yr7qf0jsxqbm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552676460/avalanche2019/hktmbu64yr7qf0jsxqbm.png"
      },
      {
        "public_id": "avalanche2019/baqgghkqxdz8rchpikp5",
        "version": 1552676473,
        "signature": "c721ecfbf8b2fae280dfa1ae9ab60bf9f54c38e5",
        "width": 1088,
        "height": 1076,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T19:01:13Z",
        "tags": [],
        "bytes": 1211451,
        "type": "upload",
        "etag": "926e5d0862a1088cf48ac8fe5d1ed11c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552676473/avalanche2019/baqgghkqxdz8rchpikp5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552676473/avalanche2019/baqgghkqxdz8rchpikp5.png"
      },
      {
        "public_id": "avalanche2019/adnmrhfei2epj0b5qo5f",
        "version": 1552676555,
        "signature": "cb5e1772d92f3df66b048aab77a64ceb2e245558",
        "width": 1090,
        "height": 1084,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T19:02:35Z",
        "tags": [],
        "bytes": 1708601,
        "type": "upload",
        "etag": "3533d041c9718e6af56ebf710ebe2e28",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552676555/avalanche2019/adnmrhfei2epj0b5qo5f.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552676555/avalanche2019/adnmrhfei2epj0b5qo5f.png"
      }
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T18:55:07.558Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T20:01:20.169Z" }
      }
    ],
    "title": "",
    "description": "Example of when it would have probably been a lot easier not to use turtles\n\nalso maybe close up mic texture in BW?",
    "inspiration_name": "Honey Comb",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\nlet sideLength = 12;\nconst angle = 360 / 6;\nconst outerAngle = 360 - angle;\nlet r, g, b;\nlet startX, startY;\nlet halflength;\nlet counter;\nlet decrease = false;\n\n//setUp background \nlet inc = 0.02;\nlet scl = 2;\nlet cols, rows;\nlet zOff = 0;\n\nfunction setup() {\n    createCanvas(800, 600);\n    // colorMode(RGB, 255, 255, 255, 1);\n    createCanvas(600, 600);\n    background(0, 0, 0);\n\n    cols = floor(width / scl);\n    rows = floor(height / scl);\n    colorMode(HSB, 360, 100, 100, 1);\n\n    noLoop();\n    myTurtle = new Turtle();\n    angleRad = degrees_to_radians(angle);\n    halfShapeOuterBox = sin(angleRad) * sideLength;\n    shapeOuterBox = 2 * halfShapeOuterBox;\n}\n\nfunction draw() {\n    push();\n    drawBackground();\n    pop();\n    myTurtle.penUp();\n    stroke(255, 255, 255);\n    startX = 0;\n    startY = -300;\n    myTurtle.moveTo(startX, startY);\n    myTurtle.turnTo(90);\n    myTurtle.penDown();\n    h = 42;\n    s = 50;\n    b = 0;\n\n    counter = 0;\n    for (let i = 0; i < 40; i++) {\n        draw1Column();\n        startX += halfShapeOuterBox * 3;\n        startY += sideLength * 1.5;\n        console.log(counter);\n    }\n\n}\n\nfunction drawBackground() {\n    var yOff = 0;\n    for (let y = 0; y < rows; y++) {\n        var xOff = 0;\n        for (let x = 0; x < cols; x++) {\n            let index = (x + y * width) * 4;\n            let brightness = noise(xOff, yOff, zOff) * 255;\n            setColors(brightness);\n\n            //update brightness\n            // if (brightness > treasureheight) {\n            //     treasureheight = brightness;\n            //     treasurePos = {\n            //         x: x * scl,\n            //         y: y * scl,\n            //     };\n            // }\n            xOff += inc;\n            rect(x * scl, y * scl, scl, scl);\n        }\n        yOff += inc;\n        zOff += 0.010;\n    }\n}\n\nfunction draw1Column() {\n    for (let i = 0; i < 25; i++) {\n        stroke(h, s, b);\n        makeHoneyComb();\n\n        if (b >= 100) {\n            decrease = true;\n        }\n\n        if (decrease == true) {\n            b -= .4;\n        } else {\n\n            b += .4;\n        }\n    }\n    counter++;\n    myTurtle.penUp();\n    myTurtle.turnTo(90);\n    if (counter % 2 == 0) {\n        myTurtle.moveTo(startX + (halfShapeOuterBox * 3), startY + (sideLength * 1.5));\n        console.log(\"down\");\n    } else {\n        console.log(\"up\");\n        myTurtle.moveTo(startX + (halfShapeOuterBox * 3), startY - (sideLength * 1.5));\n    }\n\n}\n\n\nfunction makeHoneyComb() {\n\n    myTurtle.moveForward(sideLength * 2);\n    myTurtle.turnLeft(60);\n    myTurtle.penDown();\n    //make how many j\"s random so ir ends up in different places \n    for (let j = 0; j < 5; j++) {\n\n        for (let i = 0; i < 5; i++) {\n\n            myTurtle.turnRight(60);\n            myTurtle.moveForward(sideLength);\n        }\n        myTurtle.turnRight(300);\n        myTurtle.moveForward(sideLength);\n        for (let i = 0; i < 5; i++) {\n\n            myTurtle.turnLeft(60);\n            myTurtle.moveForward(sideLength);\n        }\n    }\n    myTurtle.penUp();\n}\n\nfunction radians_to_degrees(radians) {\n    var degrees = radians * (180 / Math.PI);\n    return degrees;\n}\n\nfunction degrees_to_radians(degrees) {\n    const radians = degrees * (Math.PI / 180);\n    return radians;\n}\n\n\nfunction setColors(brightness) {\n\n    h = 35;\n    s = map(brightness, 0, 255, 0, 100);\n    // s = 30;\n    b = map(brightness, 0, 200, 0, 100);\n\n    fill(h, s, b);\n}"
  },
  {
    "_id": "28XWGdszvYvneXJJp",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:36:40.998Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mgtx3zsepp2zdtxqueqc",
        "version": 1553881014,
        "signature": "92e8b040dca26ce4c55c49fda220c21caf5a75fd",
        "width": 1166,
        "height": 1650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T17:36:54Z",
        "tags": [],
        "bytes": 38625,
        "type": "upload",
        "etag": "8f13fe2db1affcbb6f1d032d9036ba0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553881014/avalanche2019/mgtx3zsepp2zdtxqueqc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553881014/avalanche2019/mgtx3zsepp2zdtxqueqc.jpg"
      },
      {
        "public_id": "avalanche2019/yxpnm7wg1y1cvxh4ok8x",
        "version": 1553881032,
        "signature": "758db0be9e6462bd6719070c061674b5b9f541c2",
        "width": 1148,
        "height": 1640,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T17:37:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 149864,
        "type": "upload",
        "etag": "0193bc14eafb940d9aff34262b3da1e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553881032/avalanche2019/yxpnm7wg1y1cvxh4ok8x.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553881032/avalanche2019/yxpnm7wg1y1cvxh4ok8x.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "68615",
          "dar": "7:10"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 78445,
        "duration": 15.283333,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T17:42:46.603Z" }
      }
    ],
    "title": "",
    "description": "Starting to make this guy fly  \nYou can use arrow up/down on this sketch",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n// width=\"583px\" height=\"827px\"\nvar width = 583;\nvar height = 827;\nvar bounds = new Rectangle(new Point(0, 0), new Point(width, height));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#f1f1f1'\n\nvar flyerSize = 90;\n\nvar flyer1 = new Path.RegularPolygon(new Point(width/2, height/2), 3, flyerSize)\nflyer1.scale(0.7, 1)\n\nvar flyer2 = new Path.RegularPolygon(new Point(width/2, height/2+flyerSize*0.8), 3, flyerSize)\nflyer2.rotation = 180;\nflyer2.scale(0.15, 0.08)\n\nvar flyer3 = flyer2.unite(flyer1);\nflyer3.fillColor = '#fff';\nflyer3.shadowColor = new Color(0, 0, 0, .1);\nflyer3.shadowBlur = 3;\nflyer3.shadowOffset = new Point(0, 12);\n\nvar fold1 = new Path.RegularPolygon(new Point(width/2, height/2), 3, flyerSize)\nfold1.scale(0.15, 1)\n\nvar fold2 = new Path.RegularPolygon(new Point(width/2, height/2+flyerSize*0.8), 3, flyerSize)\nfold2.rotation = 180;\nfold2.scale(0.15, 0.08)\n\nvar fold3 = fold1.unite(fold2)\nfold3.fillColor = '#d1d1d1'\n\nvar fold4 = fold3.clone()\nfold4.scale(0.2, 1)\nfold4.fillColor = '#ccc'\n\nvar fold5 = fold4.clone()\nfold5.scale(0.4, 1)\nfold5.fillColor = '#aaa'\n\nvar group = new Group([flyer3, fold3, fold4, fold5]);\n// group.rotation = 90;\n\ntool.onKeyDown = function(event) {\n  if (event.key == 'up') {\n      // Scale the path by 110%:\n      group.position = group.position + new Point(0,-8);\n      // Prevent the key event from bubbling\n      return false;\n  }\n  if (event.key == 'down') {\n    // Scale the path by 110%:\n    group.position = group.position + new Point(0,8);\n    // Prevent the key event from bubbling\n    return false;\n}\n\n}\n// group.position = new Point(10, 10);\n\n// var fold3 = new Path.RegularPolygon(new Point(width/2, height/2), 3, flyerSize)\n// fold3.scale(0.02, 1)\n// fold3.style = {\n//   fillColor: '#ddd',\n// }\n\n// var baseCut2 = new Path.RegularPolygon(new Point(width/2, height/2+flyerSize*0.8), 3, flyerSize)\n// baseCut2.rotation = 180;\n// baseCut2.scale(0.02, 0.08)\n\n// baseCut2.style = {\n//   fillColor: '#ddd',\n// }"
  },
  {
    "_id": "297yCR5BEp3TCgW6P",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:28:17.564Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/amvpy9l9f8qhyuktpbxh",
        "version": 1555093705,
        "signature": "ca9ffc6120b5ce6e07e7173c6c86a7b85cddc4d0",
        "width": 924,
        "height": 678,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T18:28:25Z",
        "tags": [],
        "bytes": 92534,
        "type": "upload",
        "etag": "571bf0f946ca30c0aea709755ad2bba9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555093705/avalanche2019/amvpy9l9f8qhyuktpbxh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555093705/avalanche2019/amvpy9l9f8qhyuktpbxh.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T19:04:41.162Z" }
      }
    ],
    "title": "",
    "description": "Fortune Cookie machine based from class example. Part 1, want to add some graphics to it.",
    "code": "//require /text/tracery.min.js\n\n\nconst maintitle = {\n    \"title\": [\"#sayings#\"],\n    \"sayings\":[\"The early bird gets the worm, but the second mouse gets the cheese.\",\n               \"Be on the alert to recognize your prime at whatever time of your life it may occur.\",\n               \"Your road to glory will be rocky, but fulfilling.\",\"Courage is not simply one of the virtues, but the form of every virtue at the testing point.\",\n               \"Patience is your alley at the moment. Don’t worry!\",\"Nothing is impossible to a willing heart.\",\n               \"Don’t worry about money. The best things in life are free.\",\n               \"Don’t pursue happiness – create it.\",\"Courage is not the absence of fear; it is the conquest of it.\",\n               \"Nothing is so much to be feared as fear.\",\"All things are difficult before they are easy.\",\n               \"The real kindness comes from within you.\",\"A ship in harbor is safe, but that’s not why ships are built.\",\n               \"You don’t need strength to let go of something. What you really need is understanding.\"]\n}\n\nconst sub={\n    \"subtitle\":[\"Your lucky number is #numbers#, #numbers#, and #numbers#\"],\n    \"numbers\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\n               \"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\n               \"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\n               \"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\n               \"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"]\n}\n\nfunction main() {\n    let grammar1 = tracery.createGrammar(maintitle);\n    let title = grammar1.flatten(\"#title#\");\n    \n    let grammar2 = tracery.createGrammar(sub);\n    let subtitle = grammar2.flatten(\"#subtitle#\");\n\n    const storyDiv = document.createElement('div');\n    storyDiv.style = \"font-size: 40px; margin: 10%; line-height: 1.5;\";\n    storyDiv.textContent = title;\n    \n    const storyDiv2 = document.createElement('div');\n    storyDiv2.style = \"font-size: 20px; margin: 10%; line-height: 0.5;\";\n    storyDiv2.textContent = subtitle;\n    \n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    \n    document.body.insertAdjacentElement(\"beforeend\", storyDiv2);\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "2DyhCzyckiwLPNzRN",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "created_at": { "$date": "2019-03-01T16:08:46.564Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dxismcyusnnia8lyp6uy",
        "version": 1551456593,
        "signature": "e8bdc83ea6e125a5be7bb69d6eede3659dfe1fea",
        "width": 1246,
        "height": 1228,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T16:09:53Z",
        "tags": [],
        "bytes": 76637,
        "type": "upload",
        "etag": "907a179c13171ab67fe57646d03d0133",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551456593/avalanche2019/dxismcyusnnia8lyp6uy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551456593/avalanche2019/dxismcyusnnia8lyp6uy.png"
      },
      {
        "public_id": "avalanche2019/u27hdcrkufj6exqykahy",
        "version": 1551456596,
        "signature": "14cbc673ecd491f1a5271769680a69e20438a4b4",
        "width": 508,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T16:09:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 1686917,
        "type": "upload",
        "etag": "5f2c377662ba42a0bef7dc0356d13df6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551456596/avalanche2019/u27hdcrkufj6exqykahy.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551456596/avalanche2019/u27hdcrkufj6exqykahy.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1103555",
          "dar": "127:120"
        },
        "frame_rate": 60,
        "bit_rate": 1110727,
        "duration": 12.15,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ynkks1tmbkcfynuhku6d",
        "version": 1551456599,
        "signature": "5f04f20cbf4347474c0417b9725f2bba3ba4f594",
        "width": 464,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T16:09:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 3005711,
        "type": "upload",
        "etag": "363d204bc6e26357afe5e771b1040a8c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551456599/avalanche2019/ynkks1tmbkcfynuhku6d.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551456599/avalanche2019/ynkks1tmbkcfynuhku6d.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "732920",
          "dar": "29:30"
        },
        "frame_rate": 60,
        "bit_rate": 739488,
        "duration": 32.516667,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T17:33:10.15Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:42:36.709Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Failing at making them look like DNA, but at least it looks cute?",
    "inspiration_name": "DNA"
  },
  {
    "_id": "2E8oqPwsGGaQgzFB4",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-20T23:53:14.853Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "2M4wSHM7Ti6yQh8ex",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T23:42:01.85Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wkqru2zwbtwhxa9yf2pz",
        "version": 1550101374,
        "signature": "cb1488354ee8cd0c964e398d5f7d6cf9193da873",
        "width": 988,
        "height": 958,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-13T23:42:54Z",
        "tags": [],
        "bytes": 122983,
        "type": "upload",
        "etag": "8dba2ee32890bf6a88b1b92cdf19c4f7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550101374/avalanche2019/wkqru2zwbtwhxa9yf2pz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550101374/avalanche2019/wkqru2zwbtwhxa9yf2pz.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-13T23:50:28.572Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-02-14T00:10:46.884Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-14T05:21:40.972Z" }
      }
    ],
    "title": "",
    "description": "When you have too much homework!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nlet x,y,r;\nlet angle;\nlet slider;\nlet change =false;\nlet face;\nfunction setup() {\n  createCanvas(400, 400);\n  face = createImg('http://architkaushik.com/face.png');\n  face.hide();\n  x=200;\n  y=200;\n  r=10;\n  angle =0;\n  slider = createSlider(-10,10,10);\n  slider.position(150,350);\n  noStroke();\n  \n}\n\nfunction draw() {\n  // console.log();\n \n  background(128, 241, 247);\n \timage (face,70,0,260,333);\n  // fill(247, 168, 126);\n  //   ellipse(200,180,200,200);\n  \n  fill(255);\n  ellipse(160,160,30,30);\n  ellipse(160+80,160,30,30);\n  \n  pupil(slider.value(),160);\n  pupil(slider.value(),160+80);\n    \n}\n\nfunction pupil (value , xPos){\n\n x = r * cos(angle)+xPos;\n\ty = r * sin(angle)+160;\n\n  fill(0);\n  ellipse(x,y,15,15);\n  let val = map(value,-10,10,-3,3);\n  angle =val;\n}"
  },
  {
    "_id": "2TWd25iHp4vC2gZ2Q",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T19:50:25.93Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vkbhtkjlxorfgle6gdfu",
        "version": 1552507123,
        "signature": "abb6feeb7aea69964546a49fc959d17b4113b449",
        "width": 1192,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T19:58:43Z",
        "tags": [],
        "bytes": 1571134,
        "type": "upload",
        "etag": "d1ebed8102faad190619997d049e1f3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552507123/avalanche2019/vkbhtkjlxorfgle6gdfu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552507123/avalanche2019/vkbhtkjlxorfgle6gdfu.png"
      },
      {
        "public_id": "avalanche2019/d60xd54pkcwoygfcw4rd",
        "version": 1552507187,
        "signature": "d54033ee61125ed6b67f7b97fcfd58ddb3f57b2c",
        "width": 1196,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T19:59:47Z",
        "tags": [],
        "bytes": 1615735,
        "type": "upload",
        "etag": "f4b061712d128160ce11f4a74148bcf5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552507187/avalanche2019/d60xd54pkcwoygfcw4rd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552507187/avalanche2019/d60xd54pkcwoygfcw4rd.png"
      },
      {
        "public_id": "avalanche2019/pilc5lksskalaj8wzdfi",
        "version": 1552507784,
        "signature": "52661453fdbb200a5b36adf4238da8b1a7b9e592",
        "width": 1206,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T20:09:44Z",
        "tags": [],
        "bytes": 1431539,
        "type": "upload",
        "etag": "4f21cf8e5839d6c17ac4ee836e6fe380",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552507784/avalanche2019/pilc5lksskalaj8wzdfi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552507784/avalanche2019/pilc5lksskalaj8wzdfi.png"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-13T20:17:52.546Z" }
      }
    ],
    "title": "",
    "description": "Neurons",
    "inspiration_name": "Neurons",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n//draw ellipses \n//turtle starts at ellipse and viends out in different directions\nvar myTurtle;\nlet lineInc, lineLength;\nlet strokeWeightFactor;\n\nfunction setup() {\n    createCanvas(800, 800);\n    colorMode(RGB, 255, 255, 255, 1);\n    // stroke(255);\n    background(0);\n    noLoop();\n    myTurtle = new Turtle();\n}\n\n\nfunction draw() {\n\n    for (let i = 0; i < 50; i++) {\n        var deg = int(random(0, 360));\n        myTurtle.penUp();\n        push();\n        myTurtle.moveTo(width / 2, height / 2);\n        rotate(deg);\n        // drawNeuronPair(width / 2, height / 2);\n        drawNeuronPair(random(800), random(800));\n        pop();\n    }\n\n}\n\nfunction drawNeuronPair(initialX, initialY) {\n\n    myTurtle.turnTo(90);\n    let neuronSpacing = 25;\n    myTurtle.moveTo(initialX, initialY);\n    // myTurtle.turnTo(150);\n    myTurtle.penDown();\n    drawNeuron(myTurtle, 25);\n    myTurtle.penUp();\n    myTurtle.turnTo(90);\n    myTurtle.turnRight(random(150, 190));\n    myTurtle.moveTo(initialX - neuronSpacing, initialY + neuronSpacing);\n    // myTurtle.turnTo(150);\n    myTurtle.penDown();\n    drawNeuron(myTurtle, 25);\n    noLoop();\n\n}\n\n\nfunction drawNeuron(turtle, size) {\n    strokeWeight(size);\n    lineInc = 2;\n    lineLength = 30;\n    stroke(0, 0, random(100, 200), .03);\n    for (var i = 0; i < 90; i++) {\n        turtle.moveForward(random(.6));\n        turtle.turnRight(random(.8, 2));\n    }\n    drawNeuronStem(turtle, size);\n}\n\nfunction drawNeuronStem(turtle, size) {\n    stroke(0, 0, 250, .25);\n    myTurtle.moveForward(lineInc);\n    for (let i = lineInc; i < lineLength; i++) {\n        // size -= map(i, 0, lineLength, 0, size);\n        if (size > 5) {\n            size -= 1;\n        }\n        // stroke(252, 250, 250, .1);\n        stroke(0, 0, random(100, 255), .3);\n        strokeWeight(size);\n        turtle.turnRight(random(.8, 1));\n        myTurtle.moveForward(lineInc);\n    }\n    strokeWeightFactor = 10;\n    drawBranch(50, .55);\n}\n\nfunction drawBranch(length, opacity) {\n    stroke(0, 0, random(100, 255), opacity);\n    // stroke(252, 250, 250, opacity);\n    // console.log(opacity);\n    if (length < 10) {\n        return;\n    }\n    // draw this branch\n    strokeWeightInc = .3;\n\n    strokeWeight(length / strokeWeightFactor);\n    strokeWeightFactor += strokeWeightInc;\n    myTurtle.turnLeft(1);\n    myTurtle.moveForward(length * random(.6, 1));\n\n    myTurtle.moveForward(length * random(.6, 1.2));\n    // left child\n    myTurtle.pushState();\n    myTurtle.turnLeft(random(2, 10));\n    drawBranch(length * random(.6, 1), .91);\n    //drawBranch(length * random(.5, .9));\n    myTurtle.popState();\n    // right child\n    myTurtle.pushState();\n    myTurtle.turnRight(random(10, 30));\n    drawBranch(length * random(.6, 1), 1);\n    //drawBranch(length * random(.5, .9));\n    myTurtle.popState();\n\n}"
  },
  {
    "_id": "2TYgCBAtZfqDzecMd",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T13:03:04.71Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fpgui6voflzumefrmbfw",
        "version": 1550840606,
        "signature": "b913136d16b56724f97e0df460668040efe322d2",
        "width": 770,
        "height": 882,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T13:03:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 3357201,
        "type": "upload",
        "etag": "5c2ca7c4fc6f0907a07ecd337924149a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550840606/avalanche2019/fpgui6voflzumefrmbfw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550840606/avalanche2019/fpgui6voflzumefrmbfw.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "1908997",
          "dar": "55:63"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 1894763,
        "duration": 14.164172,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/isjvwm1uwwafjat0fldl",
        "version": 1550840630,
        "signature": "538bc6ed6325c781f476fa6bfab5ac11d73de2cc",
        "width": 770,
        "height": 882,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T13:03:50Z",
        "tags": [],
        "bytes": 217208,
        "type": "upload",
        "etag": "67881c5da2cd965dbbaf00aa837941c6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550840630/avalanche2019/isjvwm1uwwafjat0fldl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550840630/avalanche2019/isjvwm1uwwafjat0fldl.jpg"
      },
      {
        "public_id": "avalanche2019/f90rsffdhmqctrcpzrhd",
        "version": 1550840652,
        "signature": "6b0a3cba2543c5ca4d73bcb8fbdf479ebfbc4f0e",
        "width": 774,
        "height": 866,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T13:04:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 14771563,
        "type": "upload",
        "etag": "5b6805e725a6fa27d3193038c9cac19d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550840652/avalanche2019/f90rsffdhmqctrcpzrhd.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550840652/avalanche2019/f90rsffdhmqctrcpzrhd.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "5639754",
          "dar": "387:433"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 5623503,
        "duration": 21.014036,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Jimmy is in his chopper, looking for treasure but can't find it. He has gone over the terrain several times over, but it seems to be hidden somewhere. \nHe gets to his lab and creates a 3D map of the entire view. He searches for possible locations at every frame by reducing the terrain size.\nWhile he is looking through the footage frames, he finds the treasure location hidden behind one of the peaks. Instantly, he goes there to retrieve the treasure!",
    "inspiration_name": "Treasure Map Terrain",
    "inspiration_url": "https://youtu.be/IKB1hWWedMk",
    "code": "// TREASURE MAP WITH TERRAIN GENERATOR\n// For logic and notes, view logic_notes.md file on GitHub: https://github.com/akshansh2593/CompForm/blob/master/terrainGenerator/logic_notes.md\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\n// creating a grid\nvar cols; // columns\nvar rows; // rows\nvar scl = 20; // scale\nvar w = 1200; // width\nvar h = 900; // height\n\n// 2D array for storing grid values (x and y)\nvar terrain = [];\n\n// variable to make the grid move\nvar flying = 0;\n\n// CUSTOMIZE\nvar terrainHeight_slider; // change terrain height\n//var terrainColor;\n\n\nfunction setup() {\n    createCanvas(600, 600, WEBGL);\n\n    // grid proportion\n    cols = w / scl;\n    rows = h / scl;\n\n    // Store the x and y grid values in an array\n    for (var x = 0; x < cols; x++) {\n        terrain[x] = [];\n        for (var y = 0; y < rows; y++) {\n            terrain[x][y] = 0;\n        }\n    }\n\n\n    // CUSTOMIZE\n    createP('Change Altitude');\n    terrainHeight_slider = createSlider(20, 300, 160, 20);\n\n}\n\nfunction draw() {\n    background(177, 219, 237); // sky\n\n    // Treasure spot\n    fill(255, 0, 0);\n    push();\n    translate(-width, -height);\n    ellipse(width, height, 20, 20);\n    pop();\n\n    fill(151, 124, 83); // terrain background\n    // noStroke();\n    stroke(0); // terrain edges\n    // noFill();\n    // terrainColor = map(noise(-terrainHeight_slider.value(), terrainHeight_slider.value()), 0, 1, 0, 255);\n\n\n    //flying -= 0.2;\n\n    // Build the terrain\n    var yOff = flying;\n    for (var y = 0; y < rows; y++) {\n        var xOff = 0;\n        for (var x = 0; x < cols; x++) {\n            terrain[x][y] = map(noise(xOff, yOff), 0, 1, -terrainHeight_slider.value(), terrainHeight_slider.value());\n            xOff += 0.2;\n        }\n        yOff += 0.2;\n    }\n\n    // Center align the grid\n    translate(0, 50);\n    rotateX(PI / 3);\n    translate(-w / 2, -h / 2);\n\n    // Create the grid\n    for (var y = 0; y < rows - 1; y++) {\n        beginShape(TRIANGLE_STRIP);\n        for (var x = 0; x < cols; x++) {\n            vertex(x * scl, y * scl, terrain[x][y]);\n            vertex(x * scl, (y + 1) * scl, terrain[x][y + 1]);\n        }\n        endShape();\n    }\n}"
  },
  {
    "_id": "2aSz7zjdMf9FXRd5G",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T04:56:07.02Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/obpakf3y1xhmwkhuojrp",
        "version": 1554353792,
        "signature": "aaff524cb43952ea898a621d59371f96c49b7d99",
        "width": 1388,
        "height": 1308,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-04T04:56:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 11642969,
        "type": "upload",
        "etag": "74e5997a08d34c821ed3a042cdf69355",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554353792/avalanche2019/obpakf3y1xhmwkhuojrp.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554353792/avalanche2019/obpakf3y1xhmwkhuojrp.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "8346421",
          "dar": "347:327"
        },
        "frame_rate": 60,
        "bit_rate": 8545298,
        "duration": 10.9,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T19:20:39.494Z" }
      }
    ],
    "title": "",
    "description": "Still building this up. Posting today's progress (mostly under-the-hood cleanup so I can do more complicated things tomorrow)."
  },
  {
    "_id": "2bMWih5NaXGgukia8",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T19:06:56.54Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l7zgmg9ozmix3mlxucd7",
        "version": 1557428825,
        "signature": "e7d887bd7c89e0cca590645378a40bba0e9d6b2b",
        "width": 724,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T19:07:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 1011895,
        "type": "upload",
        "etag": "e9eda55aaf577f77935665be51ebee45",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557428825/avalanche2019/l7zgmg9ozmix3mlxucd7.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557428825/avalanche2019/l7zgmg9ozmix3mlxucd7.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "236185",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "282829",
          "dar": "181:180"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 527371,
        "duration": 15.35,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T23:06:48.035Z" }
      }
    ],
    "title": "",
    "description": "inflate the balloon until it pops (with sound)"
  },
  {
    "_id": "2c8PPnPvCP5uj3Asf",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:54:46.048Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gukqhvcpt7eavmwfbwa8",
        "version": 1550854502,
        "signature": "74e326fe10a87a3b23e012f9efe1f1488488c697",
        "width": 1570,
        "height": 1520,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T16:55:02Z",
        "tags": [],
        "bytes": 585179,
        "type": "upload",
        "etag": "f26363d5c0b4d4dc088eeb6a1e3fa837",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550854502/avalanche2019/gukqhvcpt7eavmwfbwa8.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550854502/avalanche2019/gukqhvcpt7eavmwfbwa8.jpg"
      },
      {
        "public_id": "avalanche2019/iraa48g2hi40snyekx3k",
        "version": 1550854508,
        "signature": "de80aba7f688d52dcf0adba205f11cfcc8f24444",
        "width": 1678,
        "height": 1708,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T16:55:08Z",
        "tags": [],
        "bytes": 870328,
        "type": "upload",
        "etag": "9215708389f208c411f28b3939152b3d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550854508/avalanche2019/iraa48g2hi40snyekx3k.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550854508/avalanche2019/iraa48g2hi40snyekx3k.jpg"
      },
      {
        "public_id": "avalanche2019/l95ri0u5t7xqjo9xdrii",
        "version": 1550854511,
        "signature": "a02c94fc78a6c8a101d1ce19ae21b5ba15aeaa9e",
        "width": 1060,
        "height": 1064,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T16:55:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 3177005,
        "type": "upload",
        "etag": "8d892b47c8d943e155a787f3d79df158",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550854511/avalanche2019/l95ri0u5t7xqjo9xdrii.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550854511/avalanche2019/l95ri0u5t7xqjo9xdrii.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1288283",
          "dar": "265:266"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1297840,
        "duration": 19.583333,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Poor man’s spirograph :)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\nconst w = 800;\nconst h = 800;\n\nfunction setup() {\n  createCanvas(w, h);\n  noFill();\n  strokeWeight(0.18);\n  stroke(30);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  colorMode(HSB, 1, 1, 1, 1);\n  // Static image:\n  // translate(w / 2, h / 2);\n  // for (let index = 0; index < 500000; index++) {\n  //   rotate(-index * 0.000002);\n  //   let x = 200 * sin(index) + noise(index * 0.01) * 160;\n  //   let y = 200 * cos(index) + noise((index + 1) * 0.01) * 160;\n\n  //   stroke(sin(index + 1));\n  //   let radius = cos(index + 1) * 3;\n  //   ellipse(x, y, radius, radius);\n  // }\n}\n\nfunction draw() {\n  frameRate(60);\n  translate(w / 2, h / 2);\n  rotate(-frameCount * 0.1);\n  let x = 200 * sin(frameCount) + noise(frameCount * 0.05) * 50;\n  let y = 200 * cos(frameCount) + noise((frameCount + 1) * 0.05) * 50;\n  // x = ((sin(frameCount) + 1) / 2) * width;\n  // y = (noise(sin(frameCount) * sin(millis() * 0.001)) * height) / 2;\n  stroke(sin(frameCount + 1));\n  let radius = cos(frameCount + 1) * 3;\n  ellipse(x, y, radius, radius);\n}"
  },
  {
    "_id": "2hHuFiivj2tCrwfaP",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-03-01T07:00:00.533Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k8mkeau4kjre6fqtlwsx",
        "version": 1551423621,
        "signature": "084315ba6752d2f4c8babf2859db8ad0db1ce914",
        "width": 988,
        "height": 598,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T07:00:21Z",
        "tags": [],
        "bytes": 33042,
        "type": "upload",
        "etag": "17671415272acd6578300b57b4ce6a0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551423621/avalanche2019/k8mkeau4kjre6fqtlwsx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551423621/avalanche2019/k8mkeau4kjre6fqtlwsx.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:39:32.322Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Line challenge– part 2",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// line challenge part 2\n\n\nvar amplitude_slider, speed_slider, frequency_slider;\nvar active = 0;\nvar startX = 70;\nvar startY = 40;\nvar endX = 400;\nvar endY = 40;\nvar amplitude = .4;\n\n\nfunction setup() {\n    createCanvas(500, 300);\n\n\n    createP('time speed');\n    speed_slider = createSlider(10, 100, 40);\n    createP('frequency');\n    frequency_slider = createSlider(10, 60, 40);\n\n}\n\n\nfunction draw() {\n    background(15, 34, 56);\n    // rectMode(CENTER);\n\n    var speed = speed_slider.value() / 1000;\n    var frequency = frequency_slider.value() / 5;\n    active = speed + active;\n    noiseDetail(1, .5);\n\n    for (i = 0; i < 1; i += .02) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n        var offsetX = noise(frequency*i + active) * amplitude * 80;\n        var offsetY = noise(frequency *i + active) * amplitude * 80;\n\n        noStroke();\n        fill(9, 21, 35)\n        rect(x + offsetX, y + offsetY+200, 10, 13);\n\n        fill(255, 30, 82,110)\n        rect(x + offsetX, y + offsetY, 10, 200);\n\n\n    }\n\n}"
  },
  {
    "_id": "2mvR3PkMxbaB3XS6m",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T01:46:19.02Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zhwht0tdlbypukzhkibf",
        "version": 1554428784,
        "signature": "d58216ce0ac52abc56f7918aed672e7124c08280",
        "width": 990,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T01:46:24Z",
        "tags": [],
        "bytes": 52601,
        "type": "upload",
        "etag": "b73f688af0b86f30df21a7a5d8645da1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554428784/avalanche2019/zhwht0tdlbypukzhkibf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554428784/avalanche2019/zhwht0tdlbypukzhkibf.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T01:52:04.407Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T03:29:19.86Z" }
      }
    ],
    "title": "",
    "description": "simple but kinda mesmerizing",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// code from metronome class example\n\nvar balls_count = 10\n\nfunction setup() {\n    createCanvas(500, 500);\n    frameRate(45);\n}\n\nfunction draw() {\n    background(20);\n    const theta1 = map(frameCount, 0, 70, 0, 0.3 * PI);\n    const angle1 = sin(theta1) * 4;\n\n    const theta2 = map(frameCount, 0, 70, 0, 0.2 * PI);\n    const angle2 = sin(theta2) * 5;\n\n    noFill();\n    strokeWeight(0.4);\n    stroke(255);\n    ellipse(250,250,132,132);\n    ellipse(250,250,251,251);\n\n    move(250, 250, 3, angle1, angle2)\n}\n\nfunction move(x, y, size, angle1, angle2) {\n    push();\n    noStroke();\n    translate(x, y);\n    scale(size);\n    push();\n    rotate(angle1);\n    fill('#ff3a33');\n    ellipse(0, -40, 4, 4);\n    pop();\n    rotate(angle2);\n    fill('#ff3a33');\n    ellipse(0, -20, 4, 4);\n    pop();\n}"
  },
  {
    "_id": "2nBrtT4NYDzqT5NFT",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-03-01T18:53:21.2Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/o7xmvn5um4xicxa7t5mk",
        "version": 1551466409,
        "signature": "bc89ee5abf00ae9c8853ccddd8760711a6197168",
        "width": 1200,
        "height": 896,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T18:53:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 6261472,
        "type": "upload",
        "etag": "290cd657aba060fd85ce3502cbea71d7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551466409/avalanche2019/o7xmvn5um4xicxa7t5mk.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551466409/avalanche2019/o7xmvn5um4xicxa7t5mk.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "3194342",
          "dar": "75:56"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3204164,
        "duration": 15.633333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:10:53.317Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "challenge ii+",
    "code": "let yoff1 = 0.0; // 2nd dimension of perlin noise\nvar ts_slider;\nvar amplitude_slider;\nvar f_slider;\n\nfunction setup() {\n  createCanvas(600, 400);\n  colorMode(HSB, 255);\n  // createP('Time Speed');\n  //   ts_slider = createSlider(0, 100, 50);\n  createP('Amplitude');\n    amplitude_slider = createSlider(200, 300, 250);\n  createP('Frequency');\n    f_slider = createSlider(1, 10, 5);\n}\n\nfunction draw() {\n  background(230);\n  //var ts = ts_slider.value() / 2000;\n  var amplitude = amplitude_slider.value() ;\n  var f = f_slider.value() ;\n\n  fill(255);\n  // We are going to draw a polygon out of the wave points\n  //stroke(255);\n  strokeWeight(6);\n  beginShape(POINTS);\n\n  //let xoff = 0; // Option #1: 2D Noise\n   let xoff1 = yoff1; // Option #2: 1D Noise\n\n  // Iterate over horizontal pixels\n  for (let x1 = 0; x1 <= 600; x1 += f) {\n    // Calculate a y value according to noise, map to\n\n    // Option #1: 2D Noise\n    let y1 = map(noise(xoff1, yoff1), 0, 1, 200, amplitude);\n\n    // Option #2: 1D Noise\n    // let y = map(noise(xoff), 0, 1, 200,300);\n\n    // Set the vertex\n    stroke(y1,255-y1,y1);\n    vertex(x1, y1);\n    line(x1,height,x1,y1);\n    \n    // Increment x dimension for noise\n    xoff1 += 0.05;\n  }\n  // increment y dimension for noise\n  yoff1 += 0.03;\n  //vertex(width, height);\n  //vertex(0, height);\n  endShape(close);\n  \n  \n  \n}"
  },
  {
    "_id": "2xudcbsmApb3jgTLB",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T00:03:05.393Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qprxcvpvw7dkvrwhnkoa",
        "version": 1549585591,
        "signature": "f83b4707bef164ed856839502544af3c15549e6a",
        "width": 1292,
        "height": 872,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T00:26:31Z",
        "tags": [],
        "bytes": 320301,
        "type": "upload",
        "etag": "2a093260d3a8b1261b00f0f6ccba7a20",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549585591/avalanche2019/qprxcvpvw7dkvrwhnkoa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549585591/avalanche2019/qprxcvpvw7dkvrwhnkoa.png"
      },
      {
        "public_id": "avalanche2019/iztlzjbapm2vq1oywqpj",
        "version": 1549585595,
        "signature": "f6170a0696064c81f7a7fb779c741930271d2ec7",
        "width": 1310,
        "height": 900,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T00:26:35Z",
        "tags": [],
        "bytes": 333219,
        "type": "upload",
        "etag": "a86201316784993ad9049109a9f6d817",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549585595/avalanche2019/iztlzjbapm2vq1oywqpj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549585595/avalanche2019/iztlzjbapm2vq1oywqpj.png"
      },
      {
        "public_id": "avalanche2019/wqwqadsdnk9qm2bwwwyd",
        "version": 1549585599,
        "signature": "ba9b08a41a98f145fbea16434e9593496908a56c",
        "width": 1322,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T00:26:39Z",
        "tags": [],
        "bytes": 368683,
        "type": "upload",
        "etag": "78a86095ce99bb893a3816f241d90510",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549585599/avalanche2019/wqwqadsdnk9qm2bwwwyd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549585599/avalanche2019/wqwqadsdnk9qm2bwwwyd.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "If [Sol LeWitt](https://www.google.com/search?rlz=1C5CHFA_enUS807US807&biw=1440&bih=798&tbm=isch&sa=1&ei=iMpcXPr1KIiIggf3koTQCw&q=sol+lewitt+drawings+instructions&oq=sol+lewitt+drawings+instructions&gs_l=img.3..0i8i30.2521.4139..4316...0.0..0.60.693.13......1....1..gws-wiz-img.......0i30.9PGZtUmj1_E) made ditties.\n\nUsing a lexicon of four words (\"la\", \"di\", \"da\", \"dum\"), randomly composes them into a phrase (e.g. \"la la di da\"), and displays the step-by-step instructions for how to produce this by voice.\n\nSee also [https://en.wikipedia.org/wiki/Phonetics](https://en.wikipedia.org/wiki/Phonetics).",
    "inspiration_name": "Sol LeWitt Wall Drawing",
    "inspiration_url": "https://www.google.com/search?rlz=1C5CHFA_enUS807US807&tbm=isch&q=sol+lewitt&chips=q:sol+lewitt,g_1:wall+drawing:7XikEVZ83VA%3D,g_1:instructions:O5YHAZ5NZ7k%3D&usg=AI4_-kSGUlq3HwNtc-na3PbnvnI9qAZyzA&sa=X&ved=0ahUKEwjj866H66rgAhVKdt8KHajKCccQ4lYIKCgA&biw=1440&bih=798&dpr=2#imgrc=y3JhSmnQPQb_7M:",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\n// With each run, generates a little sequence of \"la\", \"di\", \"da\", \"dum\"s.\n// Provies Sol Lewitt- style instructions for how to pronounce the\n// ranomly generated sequence.\n\nconst font_size = 15,\n    row_height = font_size * 1.5,\n    canvas_width = 800,\n    canvas_height = 800;\n\nlet rand_phrase_string_raw = \"\",\n    rand_phrase_string,\n    instruction_num = 1,\n    y = row_height;\n\nfunction setup() {\n    createCanvas(canvas_height, canvas_width);\n    textFont(\"Georgia\");\n    textSize(font_size);\n\n    // Var \"dict\" is an array that will act as our dictionary.\n    // Every item in this dictionary has a spelling (graphemes),\n    // and a pronunciation (phonemes).\n    // We'll use the graphemes to print the title of the piece.\n    // We'll use the phonemes to find \"instructions\" for executing \n    // the piece.\n    dict = [\n        {graphemes: \"LA\", phonemes: [\"l\",\"a\"]},\n        {graphemes: \"DI\", phonemes: [\"d\",\"i\"]},\n        {graphemes: \"DA\", phonemes: [\"d\",\"a\"]},\n        {graphemes: \"DUM\", phonemes: [\"d\", \"u\", \"m\"]}\n    ];\n\n    rand_phrase = chooseRandomPhrase();\n    displayPhraseTitle(rand_phrase_string);\n    displayPhraseInstructions(rand_phrase);\n}\n\nfunction chooseRandomPhrase() {\n    // chooseRandomPhrase returns an array of numbers\n    // between 0 and 3, like [0, 0, 1, 3], and stores the corresponding\n    // dictionary words as a string, like \"LA LA DI DUM\". \n\n    let rand_phrase_dict_indexes = [];\n    let rand_phrase_dict_index;\n    for (i = 0; i < 4; i++) {\n        rand_phrase_dict_index = Math.floor(random(0, dict.length));\n        rand_phrase_dict_indexes.push(rand_phrase_dict_index);\n        rand_phrase_string_raw = rand_phrase_string_raw.concat(\" \" + dict[rand_phrase_dict_index].graphemes);\n        rand_phrase_string = trim(rand_phrase_string_raw);\n    }\n    return rand_phrase_dict_indexes;\n}\n\nfunction displayPhraseTitle(rand_phrase_string) {\n    textAlign(CENTER);\n    text(rand_phrase_string, canvas_width / 2, y);\n    y += row_height * 2;\n    textAlign(LEFT);\n}\n\nfunction displayPhraseInstructions(rand_phrase_dict_indexes) {\n    // displayPhraseInstructions takes in a random array of [0-3] numbers.\n    // It uses each as an index number, and retrieves the corresponding word\n    // from our dictionary.\n    //   e.g. [0, 0, 1, 3] -> LA LA DI DUM\n    // It then retrieves and prints the instructions for how to\n    // pronounce this phrase, sound by sound.\n\n    let start_instruction = \". Breathe in.\";\n    text(instruction_num + start_instruction, 10, y);\n    instruction_num++;\n    y += row_height;\n\n    for (w in rand_phrase_dict_indexes) { // for word in phrase\n        word = dict[rand_phrase_dict_indexes[w]];\n        // console.log(\"word:\", word.graphemes);\n        for (p in word.phonemes) { // for phoneme in word\n            phoneme = word.phonemes[p];\n            // console.log(\"phoneme:\", phoneme);\n            for (i in getPhonemeInstructions(phoneme)) { // for instruction in phoneme\n                instruction = getPhonemeInstructions(phoneme)[i];\n                // console.log(instruction_num + \".\\t\" + instruction);\n                text((instruction_num + \".\\t\" + instruction), 10, y);\n                instruction_num++;\n                y += row_height;\n            }\n        }\n    }\n\n    let end_instruction = \". Repeat as desired.\";\n    text(instruction_num + end_instruction, 10, y);\n}\n\nfunction getPhonemeInstructions(phoneme) {\n    // getPhonemeInstructions takes in a phoneme (ie. sound) and returns \n    // the corresponding instructions for how to produce that sound\n    // with your mouth, nose, etc.\n\n    switch (phoneme) {\n        case \"l\":\n            instructions = [\n                \"Place the tip of your tongue near your superior alveolar ridge.\",\n                \"Raise the back of your tongue near the soft palate at the back of your mouth.\",\n                \"With your tongue in this position, vibrate your vocal cords and release past the sides of your tongue.\"\n            ];\n            break;\n        case \"a\":\n            instructions = [\n                \"Place your tongue as low and as far back in your mouth as possible, without creating a constriction.\",\n                \"With your tongue in this position, vibrate your vocal cords and release air.\"\n            ];\n            break;\n        case \"d\":\n            instructions = [\n                \"Raise the tip of your tongue to touch your alveolar ridge, temporarily stopping all airflow.\",\n                \"With your tongue in this position, vibrate your vocal cords and release a burst of air.\"\n            ];\n            break;\n        case \"i\":\n            instructions = [\n                \"Place your tongue as high and as far forward in your mouth as possible, without creating a constriction.\",\n                \"With your tongue in this position, vibrate your vocal cords and release air.\"\n            ];\n            break;\n        case \"u\":\n            instructions = [\n                \"Place your tongue as far back in your mouth as possible, without creating a constriction.\",\n                \"With your tongue in this position, vibrate your vocal cords and release air.\"\n            ];\n            break;\n        case \"m\":\n            instructions = [\n                \"Close your lips together, so that they constrict airflow.\",\n                \"With your lips in this position, vibrate your vocal cords and release air through your nose.\"\n            ];\n            break;\n        default:\n            instructions = [\"error returning instruction\"];\n    }\n    return instructions;\n}"
  },
  {
    "_id": "32Fk3affMrteS6cmp",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "created_at": { "$date": "2019-03-01T15:53:32.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ruwxhkfzuuyiee554y5g",
        "version": 1551455635,
        "signature": "bda6dd5f5ee57074c7c6880091b12e8e89392a1f",
        "width": 714,
        "height": 710,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T15:53:55Z",
        "tags": [],
        "bytes": 611932,
        "type": "upload",
        "etag": "ad5b325a299904feec57fc81767d5193",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551455635/avalanche2019/ruwxhkfzuuyiee554y5g.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551455635/avalanche2019/ruwxhkfzuuyiee554y5g.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T17:19:24.869Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:25:43.396Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge Extend",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet pos = [];\n\nfunction setup() {\n\t  colorMode(HSB, 1);\n     createCanvas(400, 400);\n       for (let i = 0; i < 1000; i++) {\n    pos.push(new Circles(0.2));\n  }\n}\n\n\nfunction draw() {\n    background(0,0,0.2);\n    noStroke();\n    ellipseMode(CENTER);\n\n    \n    for (let i = 0; i < pos.length; i++) {\n    pos[i].move();\n    pos[i].display(0.2);\n\t\tpos[i].display2();\n  }\n    \n    \n}\n\nclass Circles {\n\t\n  constructor(noiseFrequency) {\n  \n for (var i = 0; i < 100; i++) {\n    this.x = noise(i * noiseFrequency, 0) * width;\n    this.y = noise(i*noiseFrequency,height)*height;\n    this.diameter = random(0,10);\n    this.speed = 10;\n    }\n  }\n\n  move() {\n    this.x += random(-this.speed, this.speed);\n    this.y += random(-this.speed, this.speed);\n  }\n\n  display(noiseFrequency) {\n    let h = map(this.diameter,0,10,1,0);\n    let s = 1;\n    let b = 1;\n    fill(h, s, b);\n    ellipse(this.x, this.y, this.diameter, this.diameter);\n }\n\tdisplay2(){\n\tstroke(random(0,1));\n\tnoFill();\n\tellipse(this.x, this.y, this.diameter+5, this.diameter+5);\n\t\tellipse(this.x, this.y, this.diameter+10, this.diameter+10);\n\t\tellipse(this.x, this.y, this.diameter+15, this.diameter+15);\n\t\tellipse(this.x, this.y, this.diameter+20, this.diameter+20);\n\t}\n}"
  },
  {
    "_id": "35wayf2RJ84HinMAQ",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T00:36:13.123Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cdxoero80jjxwdfiuobj",
        "version": 1551918979,
        "signature": "480e8906a98cd2c581514f21d70efcd3909f30c4",
        "width": 500,
        "height": 492,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-07T00:36:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 193383,
        "type": "upload",
        "etag": "70bbd51a295c8caf7ec1a0f17deaf02c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551918979/avalanche2019/cdxoero80jjxwdfiuobj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551918979/avalanche2019/cdxoero80jjxwdfiuobj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "242919",
          "dar": "125:123"
        },
        "frame_rate": 60,
        "bit_rate": 286493,
        "duration": 5.4,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Remixing a pixel example from this week with some constraints.",
    "code": "/*\n * @name Constrain\n * @description Move the mouse across the screen to move \n * the circle. The program constrains the circle to its box.\n */\nvar mx = 1;\nvar my = 1;\nvar easing = 0.05;\nvar radius = 24;\nvar edge = 100;\nvar inner = edge + radius;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noStroke(); \n  ellipseMode(RADIUS);\n  rectMode(CORNERS);\n}\n\nfunction draw() {\n  //background(230);\n  \n  img = createImage(10, 10);\n    img.loadPixels();\n\n    for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n            var c = color(x * 0, y * 25, c * 0);\n            img.set(x, y, c);\n        }\n    }\n\n    img.updatePixels();\n\n    noSmooth();\n    image(img, 0, 0, width, height);\n    //noLoop();\n  \n  if (abs(mouseX - mx) > 0.1) {\n    mx = mx + (mouseX - mx) * easing;\n  }\n  if (abs(mouseY - my) > 0.1) {\n    my = my + (mouseY- my) * easing;\n  }\n  \n  mx = constrain(mx, inner, width - inner);\n  my = constrain(my, inner, height - inner);\n  fill(20, 20, 20, 0);\n  stroke(255);\n  rect(edge, edge, width-edge, height-edge);\n  fill(255);\n  ellipse(mx, my, radius, radius);\n}"
  },
  {
    "_id": "3CtAWRyWRu2tRx5JF",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-29T20:11:22.939Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qgqmrm6takfhafr2ujs0",
        "version": 1548792689,
        "signature": "be44d23e397920ade017e3dbeae894c60e16c747",
        "width": 583,
        "height": 582,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-29T20:11:29Z",
        "tags": [],
        "bytes": 53918,
        "type": "upload",
        "etag": "fba1749a1a58ea966f7e1223d94c3dbc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548792689/avalanche2019/qgqmrm6takfhafr2ujs0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548792689/avalanche2019/qgqmrm6takfhafr2ujs0.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:01:40.862Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:41:47.112Z" }
      }
    ],
    "title": "",
    "description": "Experimenting with color - Made with Illustrator",
    "inspiration_name": "Chroma Study-Inspired by Albers"
  },
  {
    "_id": "3CtWEyCE4cPwnNtAe",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T03:04:17.351Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yesfrwiadg9gkbtkxgdv",
        "version": 1553828698,
        "signature": "9a517beda676c01ef8df6980358a48db025f0b90",
        "width": 1188,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T03:04:58Z",
        "tags": [],
        "bytes": 308906,
        "type": "upload",
        "etag": "bfe6636c0124ad764bef70e592c26ea1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553828698/avalanche2019/yesfrwiadg9gkbtkxgdv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553828698/avalanche2019/yesfrwiadg9gkbtkxgdv.png"
      },
      {
        "public_id": "avalanche2019/tvbis9hpzwkkql0zacmy",
        "version": 1553829203,
        "signature": "43daf8a7f392d435eaeeabf8511dde1ec590f390",
        "width": 1176,
        "height": 1184,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-29T03:13:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 12555168,
        "type": "upload",
        "etag": "36c665f9af407a8dd410d05779a8ee16",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553829203/avalanche2019/tvbis9hpzwkkql0zacmy.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553829203/avalanche2019/tvbis9hpzwkkql0zacmy.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "5548279",
          "dar": "147:148"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 5552927,
        "duration": 18.088,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T04:50:49.266Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Tinsley's sketch and interested in Vertigo Graphics. Made with processing"
  },
  {
    "_id": "3GsbZhZkBNpQbdjnS",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-24T21:58:10.25Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/f7thnqcopkhku4wklmth",
        "version": 1556143393,
        "signature": "73725f62a5a2d26ae8f3ac35e98e6f2a06f86a48",
        "width": 910,
        "height": 380,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-24T22:03:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 468540,
        "type": "upload",
        "etag": "c8c2d6de9f4e8f2f26ce60aef1ced011",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556143393/avalanche2019/f7thnqcopkhku4wklmth.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556143393/avalanche2019/f7thnqcopkhku4wklmth.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "86726",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "6818",
          "dar": "91:38"
        },
        "is_audio": false,
        "frame_rate": 28.75,
        "bit_rate": 95885,
        "duration": 39.079184,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/nkr8xoxfo5xrmqexjlku",
        "version": 1556143398,
        "signature": "870a8da68878edb2d64f6cd5b52fd39ea3d444fc",
        "width": 900,
        "height": 284,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-24T22:03:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 459316,
        "type": "upload",
        "etag": "9deef461a81dec0e209fac5e161cedd7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556143398/avalanche2019/nkr8xoxfo5xrmqexjlku.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556143398/avalanche2019/nkr8xoxfo5xrmqexjlku.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "88815",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "Main",
          "bit_rate": "5298",
          "dar": "225:71"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 96906,
        "duration": 37.918163,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ej7urfcrjh4rnurzgsrp",
        "version": 1556143401,
        "signature": "606657438be6eb11a20b56ce6444f9546185d731",
        "width": 910,
        "height": 380,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-24T22:03:21Z",
        "tags": [],
        "bytes": 21052,
        "type": "upload",
        "etag": "201c30504507f8b815080685afcbbc29",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556143401/avalanche2019/ej7urfcrjh4rnurzgsrp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556143401/avalanche2019/ej7urfcrjh4rnurzgsrp.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Inspired by the tone pattern of Beethoven's Für Elise from the last sketch, I have created a melody generator. \nThe measures have an A A B B C structure.\nThe structure of measures partly resembles the structure of Für Elise. \nThe music needs some work to match what the actual tone should sound like.",
    "inspiration_name": "Für Elise Melody Generator",
    "inspiration_url": "http://compform.net/music/",
    "code": "// Tone.js\n// Custom Melody\n\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// Idea: \n// Following the scale from Fur Elise, creating a custom melody to create different versions of that piece\n\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200; // how fast the beat would play\n\nwindow.onmousedown = () => {\n    // Play the melody!\n\n    const melody = generate();\n    play(melody);\n};\n\nconst cmajor = ['E5', 'D#5', 'D5', 'C5', 'G4', 'G5', 'A4', 'B4'];\nconst cminor = ['C3', 'D3', 'Eb3', 'F3', 'G3', 'Ab3', 'B3'];\nconst notes = cmajor;\n\nlet degree = 0;\n\nfunction generate() {\n    // choose a starting place\n    degree = randomInt(0, 8);\n\n    // generate some measures\n    const a = generateMeasure();\n    const b = generateMeasure();\n    const c = generateMeasure();\n\n    // last note should be the tonic\n    c[c.length - 1][0] = notes[0];\n\n    // arrange the measures and return\n    return [].concat(a, a, b, b, c);\n}\n\nfunction generateMeasure() {\n    const m = [];\n\n    let timeLeft = Tone.Time('1m');\n\n    while (timeLeft.toSeconds() > 0) {\n        // choose note\n        const change = sample([-1, 1, -1, 1, 2, -2, 3, -3]);\n        degree = constrain(degree + change, 0, 7);\n        const note = notes[degree];\n\n        // choose length\n        let length = Tone.Time('4n');\n        if (Math.random() < 0.5) {\n            length = Tone.Time('2n');\n        }\n        if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n            length = timeLeft;\n        }\n\n        // keep track of time\n        timeLeft = Tone.Time(timeLeft - length);\n\n        // add the note to the melody\n        m.push([note, length]);\n    }\n\n    return m;\n}\n\nfunction play(melody) {\n    let t = Tone.now();\n    for (const note of melody) {\n        console.log(note[0], note[1].toNotation());\n        if (note[0] !== 'rest') {\n            // synth.triggerAttackRelease(note[0], note[1]), t);\n            synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.05, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n}\n\nconsole.log('click for music!');\n\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max + min));\n}\n\nfunction sample(data) {\n    const index = Math.floor(Math.random(data.length));\n    return data[index];\n}\n\nfunction constrain(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n}"
  },
  {
    "_id": "3KWtRHYqiHhdwHEBp",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-03T18:00:06.024Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tne6qsq5h9yunloforis",
        "version": 1551636017,
        "signature": "ce2130d92324bfadb459ce14e52d000a1b6f0864",
        "width": 1256,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-03T18:00:17Z",
        "tags": [],
        "bytes": 1485267,
        "type": "upload",
        "etag": "adf6e9c4b0161f508eb279d35c736e5d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551636017/avalanche2019/tne6qsq5h9yunloforis.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551636017/avalanche2019/tne6qsq5h9yunloforis.png"
      },
      {
        "public_id": "avalanche2019/rdiazzogv6ztob9unaiq",
        "version": 1551636028,
        "signature": "ad8230b5a866e9d621f8738c13c374fc4e97b02b",
        "width": 1230,
        "height": 604,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-03T18:00:28Z",
        "tags": [],
        "bytes": 555927,
        "type": "upload",
        "etag": "ee928f24f79eb81b9d5d607d8801a47a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551636028/avalanche2019/rdiazzogv6ztob9unaiq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551636028/avalanche2019/rdiazzogv6ztob9unaiq.png"
      },
      {
        "public_id": "avalanche2019/heybmp4e41b68igwxprt",
        "version": 1551655810,
        "signature": "7d7de558f27aa74d376293deda5552cbcc753b82",
        "width": 1400,
        "height": 2422,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-03T23:30:10Z",
        "tags": [],
        "bytes": 3044956,
        "type": "upload",
        "etag": "e347137bad2bc411348283542fc90e28",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551655810/avalanche2019/heybmp4e41b68igwxprt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551655810/avalanche2019/heybmp4e41b68igwxprt.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Using Roberto Burle Marx drawings (already amazing) as a way to get oriented with pixel access and manipulation.",
    "inspiration_name": "Roberto Burle Marx",
    "inspiration_url": "https://www.google.com/search?q=roberto+burle+marx&rlz=1C5CHFA_enUS807US807&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjr_9_2xubgAhVkZN8KHZp-Bm0Q_AUIDigB&biw=1024&bih=766",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// This code relies on local files, but adding it to the\n// site for record-keeping and sharing anyway.\n// It contains messy traces of some of the different\n// things I tried.\n\n// Base code comes from class exercise. Thanks!\n\nvar worldImage;\n\nfunction preload() {\n    // worldImage = loadImage(\"./assets/burle_marx_00.jpg\");\n    // worldImage = loadImage(\"./assets/burle_marx_01.jpg\");\n    // worldImage = loadImage(\"./assets/burle_marx_02.jpg\");\n    // worldImage = loadImage(\"./assets/burle_marx_03.jpg\");\n    // worldImage = loadImage(\"./assets/burle_marx_04.jpg\");\n    // worldImage = loadImage(\"./assets/burle_marx_06.jpg\");\n    worldImage = loadImage(\"./assets/burle_marx_08.jpg\");\n\n    // worldImage = loadImage(\"./assets/olmsted_00.jpg\");\n    // worldImage = loadImage(\"./assets/olmsted_01.jpg\");\n    // worldImage = loadImage(\"./assets/olmsted_02.jpg\");\n}\n\nfunction setup() {\n    createCanvas(630, 1200);\n}\n\nfunction draw() {\n    noStroke();\n    let default_color = color(247, 233, 173, 100);\n\n    translate(15, 15);\n\n    var spacing = 600 / worldImage.width;\n    for (var y = 0; y < worldImage.height; y++) {\n        for (var x = 0; x < worldImage.width; x++) {\n            var in_color = worldImage.get(x, y);\n            // var in_color_above = worldImage.get(x, y - 1);\n            let alpha = 170;\n            // let alpha = noise(in_color[0], 0) * 255;\n            stroke(in_color[0], in_color[1], in_color[2], alpha);\n            strokeWeight(1);\n            var dot_size = 15 - lightness(in_color) / 255 * 30;\n            // line(\n            //     x * spacing + spacing * .5,\n            //     y * spacing + spacing * .5,\n            //     x * spacing + spacing * .5 + random(dot_size),\n            //     y * spacing + spacing * .5 + random(dot_size)\n            // );\n\n            // ellipse(\n            //     x * spacing + spacing * .5,\n            //     y * spacing + spacing * .5,\n            //     dot_size,\n            //     dot_size \n            // );\n            \n            if (\n                // in_color[1] > in_color[0] &&\n                // in_color[1] > in_color[2]\n                in_color[1] > in_color[0] ||\n                in_color[2] > in_color[0] ||\n                (\n                    in_color[0] > in_color[1] + 50 &&\n                    in_color[0] > in_color[2] + 50\n                )\n            ) {\n                strokeWeight(2);\n                line(\n                    x * spacing + spacing * .5 - noise(dot_size, 0) * 3,\n                    y * spacing + spacing * .5 - noise(dot_size, 1) * 3,\n                    x * spacing + spacing * .5 + noise(dot_size, 0) * 25,\n                    y * spacing + spacing * .5 + noise(dot_size, 1) * 25\n                );\n            } else {\n                stroke(default_color);\n                strokeWeight(noise(x, y) * 3);\n                line(\n                    x * spacing + spacing * .5 - noise(dot_size, 0) * 3,\n                    y * spacing + spacing * .5 - noise(dot_size, 1) * 3,\n                    x * spacing + spacing * .5 + noise(dot_size, 0) * 25,\n                    y * spacing + spacing * .5 + noise(dot_size, 1) * 25\n                );\n            }\n\n            // if ( // if green\n            //     in_color[1] > in_color[0] &&\n            //     in_color[1] > in_color[2]\n            // ) {\n            //     if (\n            //         in_color[1] > in_color_above[1]\n            //     ) {\n            //         strokeWeight(.5);\n            //         stroke(in_color[0], in_color[1], in_color[2]);\n            //         line(\n            //             x * spacing + spacing * .5 - 20,\n            //             y * spacing + spacing * .5,\n            //             x * spacing + spacing * .5 + 20,\n            //             y * spacing + spacing * .5\n            //         );\n            //     }\n            // }\n        }\n    }\n\n    noLoop();\n}"
  },
  {
    "_id": "3L2k4bGXRYvjW33t6",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:42:08.759Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tkv88jdp2cqxfymqlhms",
        "version": 1553881338,
        "signature": "15c176d7ebe99f05e144eb8ebcb464702f704741",
        "width": 1584,
        "height": 2448,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T17:42:18Z",
        "tags": [],
        "bytes": 1383138,
        "type": "upload",
        "etag": "b8986b77fac920599d1f5717e2858664",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553881338/avalanche2019/tkv88jdp2cqxfymqlhms.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553881338/avalanche2019/tkv88jdp2cqxfymqlhms.jpg"
      },
      {
        "public_id": "avalanche2019/qzt8dyiegzyqjhaohgop",
        "version": 1553881456,
        "signature": "b66a1fc816379c293e1e320b377459ea374c5b92",
        "width": 6601,
        "height": 10200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T17:44:16Z",
        "tags": [],
        "bytes": 1855668,
        "type": "upload",
        "etag": "a1c9ee611320bcc26ac1975172ccc0b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553881456/avalanche2019/qzt8dyiegzyqjhaohgop.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553881456/avalanche2019/qzt8dyiegzyqjhaohgop.jpg"
      },
      {
        "public_id": "avalanche2019/ufddh2ul7eox0osmydva",
        "version": 1553881474,
        "signature": "ac5e0a1f8bcd53102ad6a64e73121e7fe2dffcc1",
        "width": 750,
        "height": 747,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T17:44:34Z",
        "tags": [],
        "bytes": 68975,
        "type": "upload",
        "etag": "729b1c6756f08fc6531e43dfeafaa46a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553881474/avalanche2019/ufddh2ul7eox0osmydva.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553881474/avalanche2019/ufddh2ul7eox0osmydva.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:29:37.463Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a poster to highlight the importance of making our choices when we see an ad. \n\nThere are several parts to this poster. \n1. I sketched Uncle Sam and customized his hat to match the system of advertisement that we are connected with. \n2. I created a pattern of website ads in Paper.js\n3. I customized the pattern as per the poster dimensions in Illustrator. \n4. Finally, I compiled the pieces in Photoshop and designed the poster. \n\nThe poster serves as a remark to the way propaganda was initiated by the government to recruit men for war, which was later adopted by companies to advertise their products.",
    "inspiration_name": "Make Your Choices",
    "inspiration_url": "https://en.wikipedia.org/wiki/Uncle_Sam",
    "code": "// Vector art for Poster\n// A pattern of website with ads\n\n// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// Idea: Create a webpage pattern\n// 1. Create a rectangle (webpage)\n// 2. Add textboxes (placeholders for heading and body text)\n// 3. Add randomized colored rectangles inside it (ads)\n// 4. Create a group of this shape (group)\n// 5. Create a pattern using this group\n// 6. Save the pattern as SVG\n\n\n///////////////////////////////\n// Creating the webpage content\n///////////////////////////////\n\n// Webpage Outline\nvar webpageOuter = new Rectangle(new Point(20, 20), new Point(440, 220));\nvar webpage_outline = new Path.Rectangle(webpageOuter);\nwebpage_outline.fillColor = 'white';\nwebpage_outline.strokeColor = 'black';\nwebpage_outline.style = {\n    shadowColor: new Color(0, 0, 0, 0.5),\n    shadowBlur: 12,\n    shadowOffset: new Point(5, 5)\n};\n\n// Website Navigation\nvar nav = new Rectangle(new Point(20, 20), new Point(440, 40));\nvar navigation = new Path.Rectangle(nav);\nnavigation.fillColor = 'black';\n// navigation.strokeColor = 'black';\n\n// Heading\nvar heading1 = new Rectangle(new Point(100, 120), new Point(240, 130));\nvar heading1_content = new Path.Rectangle(heading1);\nheading1_content.fillColor = 'black';\n// heading1_content.strokeColor = 'red';\nvar heading2 = new Rectangle(new Point(100, 135), new Point(240, 145));\nvar heading2_content = new Path.Rectangle(heading2);\nheading2_content.fillColor = 'black';\n// heading2_content.strokeColor = 'red';\n\n// Paragraph\nvar line1 = new Rectangle(new Point(100, 155), new Point(220, 160));\nvar line1_content = new Path.Rectangle(line1);\nline1_content.fillColor = 'grey';\n// line1_content.strokeColor = 'red';\nvar line2 = new Rectangle(new Point(100, 165), new Point(200, 170));\nvar line2_content = new Path.Rectangle(line2);\nline2_content.fillColor = 'grey';\n// line2_content.strokeColor = 'red';\nvar line3 = new Rectangle(new Point(100, 175), new Point(210, 180));\nvar line3_content = new Path.Rectangle(line3);\nline3_content.fillColor = 'grey';\n// line3_content.strokeColor = 'red';\nvar line4 = new Rectangle(new Point(100, 185), new Point(220, 190));\nvar line4_content = new Path.Rectangle(line4);\nline4_content.fillColor = 'grey';\n// line4_content.strokeColor = 'red';\n\n\n///////////////////////////\n// Creating the webpage ads\n///////////////////////////\n\n// Header Ad\nvar header1 = new Rectangle(new Point(100, 40), new Point(360, 100));\nvar header_ad = new Path.Rectangle(header1);\nheader_ad.fillColor = 'red';\n// header_ad.strokeColor = 'red';\n\n// Sidebar Ad\nvar sidebar = new Rectangle(new Point(280, 110), new Point(400, 220));\nvar sidebar_ad = new Path.Rectangle(sidebar);\nsidebar_ad.fillColor = 'red';\n// sidebar_ad.strokeColor = 'red';\n\n// Footer Ad\nvar footer1 = new Rectangle(new Point(100, 200), new Point(240, 220));\nvar footer1_ad = new Path.Rectangle(footer1);\nfooter1_ad.fillColor = 'red';\n// footer1_ad.strokeColor = 'red';\n\n\n///////////////////////\n// Grouping the webpage\n///////////////////////\n\nvar webpageContent_group = new Group({\n    children: [webpage_outline, navigation, heading1_content, heading2_content, line1_content, line2_content, line3_content, line4_content]\n        // Move the group to the center of the view:\n        // position: view.center\n});\nvar webpageAd_group = new Group({\n    children: [header_ad, sidebar_ad, footer1_ad]\n        // Move the group to the center of the view:\n        // position: view.center\n});\n\nvar webpageFull_group = new Group({\n    children: [webpageContent_group, webpageAd_group],\n    position: view.center\n});\n\n\n/////////////////////\n// Creating a pattern\n/////////////////////\n\n// Making copies of the webpage group:\nfor (var i = 0; i < 10; i++) {\n    webpageAd_group.fillColor = Color.random();\n    var webpageCopy = webpageFull_group.clone();\n    // Distribute the copies horizontally, so we can see them:\n    webpageCopy.position = view.size * Point.random() + i * 0.5;\n    webpageCopy.scale(i * 0.2);\n    // webpageCopy.rotate(i);\n}\n\n\n////////////////////////////\n// Exporting the file as SVG\n////////////////////////////\n\nfunction onKeyDown(event) {\n    if (event.key === 's') {\n        downloadAsSVG();\n    }\n}\n\nfunction downloadAsSVG(fileName) {\n    // use default name if not provided\n    fileName = fileName || \"Webpage_Pattern.svg\"\n        // create a data url of the file\n    var svgData = project.exportSVG({\n        asString: true\n    });\n    var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n    // create a link to the data, and \"click\" it\n    var link = document.createElement(\"a\");\n    link.download = fileName;\n    link.href = url;\n    link.click();\n}"
  },
  {
    "_id": "3LBuZQqnkMDe884v8",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-02T22:39:38.417Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zcmto8wmzacvj6uagri0",
        "version": 1549154839,
        "signature": "4a4aa09831cd48e9773eea424c5e8c0daed549ac",
        "width": 1584,
        "height": 995,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-03T00:47:19Z",
        "tags": [],
        "bytes": 550898,
        "type": "upload",
        "etag": "8f23d85f3ad68e51c139b1791aa2c3cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549154839/avalanche2019/zcmto8wmzacvj6uagri0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549154839/avalanche2019/zcmto8wmzacvj6uagri0.png"
      },
      {
        "public_id": "avalanche2019/rvtlotcnjvq4iwop0ysy",
        "version": 1549154855,
        "signature": "4be1921eb8d766807802ddb2e2e8c2e043c3d4ba",
        "width": 1262,
        "height": 1058,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-03T00:47:35Z",
        "tags": [],
        "bytes": 691395,
        "type": "upload",
        "etag": "75add211affaf55b3aca1bd46ae6f90e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549154855/avalanche2019/rvtlotcnjvq4iwop0ysy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549154855/avalanche2019/rvtlotcnjvq4iwop0ysy.png"
      },
      {
        "public_id": "avalanche2019/dvjawr2la9m6lthnikas",
        "version": 1549154862,
        "signature": "54a3713ead2840ffd37b63ccfaead129aa44bcb1",
        "width": 1718,
        "height": 1076,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-03T00:47:42Z",
        "tags": [],
        "bytes": 1494447,
        "type": "upload",
        "etag": "f4895af01d50cc0c27a7b996a3372c5e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549154862/avalanche2019/dvjawr2la9m6lthnikas.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549154862/avalanche2019/dvjawr2la9m6lthnikas.png"
      }
    ],
    "votes": [
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-03T15:12:16.501Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-04T04:10:38.484Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-06T21:11:00.954Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:35:02.553Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T05:37:08.666Z" }
      }
    ],
    "title": "",
    "description": "Random: Overlap dots v.s. No overlap dots.\nComparing low/middle/normal/high bias distribution",
    "inspiration_name": "Yayoi Kusama's Obliteration Room",
    "inspiration_url": "https://medium.com/cma-thinker/to-infinity-and-beyond-inside-the-obliteration-room-at-the-cleveland-museum-of-art-fc03e10b5d8c",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n//code learn from : https://www.youtube.com/watch?v=XATr_jdh-44\nvar circles = [];\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tvar protection = 0;\n\t\n\twhile(circles.length<300){\n\t\tvar circle ={\n\t\t\tx:random(width),\n\t\t\ty:random(height),\n\t\t\t//pure random\n\t\t\t// r:random(10,50)\n\t\t\t//low bias distribution\n\t\t\t// r: min(random(10,50),random(10,50),random(10,50))\n\t   \t//normal distribution\n\t\t\t// r: (random(10,50)+random(10,50)+random(10,50))/3\n\t\t\t//high bias distribution\n\t\t\t// r: max(random(10,50),random(10,50),random(10,50))\n\t\t\t//middle bias distribution\n\t\t\tr: (random(10,50)+random(10,50))/2\n\t\t};\n\t\n\tvar overlapping = false;\n\tfor (var j = 0; j < circles.length; j++){\n\t\tvar other = circles[j];\n\t\tvar d = dist(circle.x, circle.y, other.x, other.y);\n\t\tif (d < circle.r + other.r){\n\t\t\toverlapping = true;\n\t  }\n\t}\n  \n\tif (!overlapping){\n\t\tcircles.push(circle);\n\t}\n\t\t\n\t\tprotection++;\n\t\tif(protection > 10000){\n\t\t\tbreak;\n\t\t}\n}\n\n\t\n\tfor(var i =0; i<circles.length;i++){\n\t\tvar listOfColors = [color('#CC271E'), color('#0C5E17'), color('#125896'), color('#F5B505'), color('#D5215E'), color('#F24A01')];\n\t  noStroke();\n\t\tfill(listOfColors[int(random(0, listOfColors.length))]);\n\t  ellipse(circles[i].x,circles[i].y,circles[i].r*2,circles[i].r*2)\n\t}\n}\n//overlapping dots start here\nfunction draw() {\n\t// pure random\n\tvar x = random(0,width);\n\tvar y = random(0,height);\n\t\n// \tmiddle bias distribution \n// \tvar x = random(0,width);\n// \tvar y = (random(0,height)+random(0,height))/2;\n\t\n// \tnormal distribution \n//\tvar r = (random(5,50)+random(5,50)+random(5,50))/3;\n\t\n// \tpure random\n\tvar r= random(5,30);\n\t\n// \tlow bias distribution\n //\tvar r= min(random(5,50),random(5,50),random(5,50));\n\t\n// \thigh bias distribution\n// \tvar r= max(random(10,50),random(10,50),random(10,50));\n\t\n\tvar listOfColors = [color('#CC271E'), color('#0C5E17'), color('#125896'), color('#F5B505'), color('#D5215E'), color('#F24A01')];\n\t  noStroke();\n\t\tfill(listOfColors[int(random(0, listOfColors.length))]);\n ellipse(x,y,r*2,r*2)\n}"
  },
  {
    "_id": "3Me9Y47qG82oNiEtb",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T07:17:51.503Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eo2tcwkh22kkv39n0wuc",
        "version": 1552634277,
        "signature": "90144fb043b1829e80c573659ac6294a9b5cc0aa",
        "width": 994,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T07:17:57Z",
        "tags": [],
        "bytes": 1257707,
        "type": "upload",
        "etag": "526b09314573bacb3ef522a354908c1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552634277/avalanche2019/eo2tcwkh22kkv39n0wuc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552634277/avalanche2019/eo2tcwkh22kkv39n0wuc.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "messy lines",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n\nvar myTurtle;\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n}\n\nfunction draw() {\n     background(color('#FFDD12'));\n    frameRate(5);\n\n\n    strokeWeight(2);\n\n\n    myTurtle.penDown();\n\n    for (var i = 0; i < 400; i += 10) {\n        stroke(random(105,255), random(130), random(200,250), 180);\n//        stroke(random(254,255), random(0,255), random(0,15), 80);\n//        stroke(255,80);\n        myTurtle.penUp();\n        myTurtle.moveTo(50, 50);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(250, 250);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(450, 450);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(50, 450);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(450, 50);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n    }\n\n    noLoop();\n}\n\n\n\nfunction drawCircle(t) {\n    for (var i = 0; i < 360; i++) {\n        t.moveForward(random(tan(i)+200));\n        t.turnRight(1);\n    }\n}"
  },
  {
    "_id": "3MvHPBJYCmt6tAMbt",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T16:33:31.734Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hho4aeynnorxsehxqkvy",
        "version": 1556814863,
        "signature": "b35bdf2a53cc5e5f3c6a6ecf9b44f77c641bc5d9",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T16:34:23Z",
        "tags": [],
        "bytes": 1231616,
        "type": "upload",
        "etag": "f5aaf98d7f5f29f52df237305f8b4af2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556814863/avalanche2019/hho4aeynnorxsehxqkvy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556814863/avalanche2019/hho4aeynnorxsehxqkvy.jpg"
      },
      {
        "public_id": "avalanche2019/wfgcar1oj6ebk2ku8oxi",
        "version": 1556814867,
        "signature": "c40592bace8eff49078d29d2a4c12b2167cc18f6",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T16:34:27Z",
        "tags": [],
        "bytes": 1175902,
        "type": "upload",
        "etag": "490cd72abff58c64a0c86eca041354e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556814867/avalanche2019/wfgcar1oj6ebk2ku8oxi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556814867/avalanche2019/wfgcar1oj6ebk2ku8oxi.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T16:49:15.103Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T18:02:26.798Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:21:05.495Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:35:28.963Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Chess Queen"
  },
  {
    "_id": "3Nf6TaMNg7SPvRWyr",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T03:31:05.384Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mrkdxegwsdgqcq2jprli",
        "version": 1556854275,
        "signature": "bb20a3f2ce4995a488f97e5f10b0b10a73d6786e",
        "width": 1152,
        "height": 896,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T03:31:15Z",
        "tags": [],
        "bytes": 198715,
        "type": "upload",
        "etag": "b60d2d2f891e48fbb01f29cf749eca97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556854275/avalanche2019/mrkdxegwsdgqcq2jprli.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556854275/avalanche2019/mrkdxegwsdgqcq2jprli.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T04:14:37.446Z" }
      }
    ],
    "title": "",
    "description": "Squigly things with perspective just below 0,0,0 to look like reflections of shapes below",
    "inspiration_name": "OpenSCAD doc example",
    "inspiration_url": "https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Commented_Example_Projects"
  },
  {
    "_id": "3NoXHkK6mikJJ28Ro",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:08:08.362Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fzhhotewvkixy5zta1et",
        "version": 1557515298,
        "signature": "3ef53493255eac6180fe998595851f253eb81cac",
        "width": 1196,
        "height": 1100,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T19:08:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 1044626,
        "type": "upload",
        "etag": "1cac20a32db2551220b4ff77b5450b3f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557515298/avalanche2019/fzhhotewvkixy5zta1et.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557515298/avalanche2019/fzhhotewvkixy5zta1et.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "776320",
          "dar": "299:275"
        },
        "frame_rate": 15,
        "bit_rate": 778603,
        "duration": 10.733333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Had to make the pong balls all pigs too. Little pigs attacking a big pig."
  },
  {
    "_id": "3QgcCe9FvyKZhyv87",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T19:29:58.026Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/b8xs15soxweriwh6wuzf",
        "version": 1556825410,
        "signature": "322524be1366eb87a7845b7c09890ffe93c5b9df",
        "width": 1288,
        "height": 856,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T19:30:10Z",
        "tags": [],
        "bytes": 60383,
        "type": "upload",
        "etag": "c87ca82d2c7f4b3ec52efcaec713bca6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825410/avalanche2019/b8xs15soxweriwh6wuzf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825410/avalanche2019/b8xs15soxweriwh6wuzf.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "3SJAtyJ2kSnDwMKRQ",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T15:59:56.599Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/luhbgjzxgo454ugz0gv5",
        "version": 1556294481,
        "signature": "64e443cee78dd22c4280ebfac76b62f2c2576d6a",
        "width": 604,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T16:01:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 4895002,
        "type": "upload",
        "etag": "ca8dd04122bc3b68dc27922186e0b535",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556294481/avalanche2019/luhbgjzxgo454ugz0gv5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556294481/avalanche2019/luhbgjzxgo454ugz0gv5.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "225110",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "397337",
          "dar": "151:120"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 630426,
        "duration": 62.116667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Drum Machine check box using tone.js. The checkboxes were made in html so if you want to play around with it, the code is here: https://github.com/Nedelstein/CompForm/tree/master/wk12_sk05",
    "inspiration_name": "Tone Js Tutorial",
    "inspiration_url": "https://www.youtube.com/watch?v=8T4SCksjrQ4",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nfunction sequencer() {\n  const kick = new Tone.Player(\"audio/kick-electro02.wav\").toMaster();\n  const snare = new Tone.Player(\"audio/snare-noise.wav\").toMaster();\n  const hihat = new Tone.Player(\"audio/hihat-digital.wav\").toMaster();\n  const clap = new Tone.Player(\"audio/clap-tape.wav\").toMaster();\n  const cowbell = new Tone.Player(\"audio/cowbell-808.wav\").toMaster();\n\n  let index = 0;\n\n  Tone.Transport.scheduleRepeat(repeat, \"8n\");\n  Tone.Transport.start();\n  function repeat() {\n    let step = index % 8;\n    let kickInputs = document.querySelector(\n      `.kick input:nth-child(${step + 1})`\n    );\n    let snareInputs = document.querySelector(\n      `.snare input:nth-child(${step + 1})`\n    );\n    let hihatInputs = document.querySelector(\n      `.hihat input:nth-child(${step + 1})`\n    );\n    let clapInputs = document.querySelector(\n      `.clap input:nth-child(${step + 1})`\n    );\n    let cowbellInputs = document.querySelector(\n      `.cowbell input:nth-child(${step + 1})`\n    );\n    if (kickInputs.checked) {\n      kick.start();\n    }\n    if (snareInputs.checked) {\n      snare.start();\n    }\n    if (hihatInputs.checked) {\n      hihat.start();\n    }\n    if (clapInputs.checked) {\n      clap.start();\n    }\n    if (cowbellInputs.checked) {\n      cowbell.start();\n    }\n    index++;\n  }\n}\n\nsequencer();"
  },
  {
    "_id": "3SLy5FgCGBuBHMqxi",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T15:47:22.447Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/b1oybqgfrvmsm1bg7rwl",
        "version": 1552664854,
        "signature": "7ea3ef10c9b1b10c5e8f55da9446136fd9032996",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T15:47:34Z",
        "tags": [],
        "bytes": 289108,
        "type": "upload",
        "etag": "591dcea1d1b4ec506dd37f83c01ae4ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552664854/avalanche2019/b1oybqgfrvmsm1bg7rwl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552664854/avalanche2019/b1oybqgfrvmsm1bg7rwl.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:42:17.211Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T17:47:56.866Z" }
      }
    ],
    "title": "",
    "description": "Modified the class example in order to create new patterns"
  },
  {
    "_id": "3a5PTsP2NQpjDjmzd",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-01T20:14:21.831Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/swjlfquzbnbjlx5s71yu",
        "version": 1551471297,
        "signature": "d8b6e0a3fc0e65db1d23b8b5da7a61a35773366e",
        "width": 2522,
        "height": 1354,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T20:14:57Z",
        "tags": [],
        "bytes": 151882,
        "type": "upload",
        "etag": "923501c4bece59044584e4a88b6ed320",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551471297/avalanche2019/swjlfquzbnbjlx5s71yu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551471297/avalanche2019/swjlfquzbnbjlx5s71yu.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": ""
  },
  {
    "_id": "3cY6AHvF83S4fHxTv",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:34:38.744Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jdhew99f2xwhxk4rhdvd",
        "version": 1552667690,
        "signature": "a3011199f8e0808d548e2cd7b6be5e17e6aa208a",
        "width": 1002,
        "height": 1004,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:34:50Z",
        "tags": [],
        "bytes": 556606,
        "type": "upload",
        "etag": "53929a4c8abaeb189afb9408d4c52c56",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552667690/avalanche2019/jdhew99f2xwhxk4rhdvd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552667690/avalanche2019/jdhew99f2xwhxk4rhdvd.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Series of deteriorating shrinking colorful arches"
  },
  {
    "_id": "3cdyPhjb7FPcfm8s2",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "created_at": { "$date": "2019-02-26T22:24:21.035Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mliixo1ae5lxmxqmg4cx",
        "version": 1551219865,
        "signature": "86e269ae98fd569b3312b970b85b61152d43c9c5",
        "width": 400,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T22:24:25Z",
        "tags": [],
        "bytes": 27732,
        "type": "upload",
        "etag": "7768647c2a27aa49a319abde395b42db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551219865/avalanche2019/mliixo1ae5lxmxqmg4cx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551219865/avalanche2019/mliixo1ae5lxmxqmg4cx.png"
      },
      {
        "public_id": "avalanche2019/j7yios2bg29m63fkdjyj",
        "version": 1551219868,
        "signature": "31bcee643503521abd9c6f2ac88a5fa0627b4f03",
        "width": 400,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T22:24:28Z",
        "tags": [],
        "bytes": 26459,
        "type": "upload",
        "etag": "76fad70b4c8751b4827feea6bc60c897",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551219868/avalanche2019/j7yios2bg29m63fkdjyj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551219868/avalanche2019/j7yios2bg29m63fkdjyj.png"
      },
      {
        "public_id": "avalanche2019/odo76zycmxphk6uinyfb",
        "version": 1551219872,
        "signature": "61db435c0b47538c7e9b0d3ae5551e7f830821b0",
        "width": 400,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T22:24:32Z",
        "tags": [],
        "bytes": 25825,
        "type": "upload",
        "etag": "9d174dd54433a611fe68a165fdb80f82",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551219872/avalanche2019/odo76zycmxphk6uinyfb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551219872/avalanche2019/odo76zycmxphk6uinyfb.png"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": ""
  },
  {
    "_id": "3dpPYYn8TpBsLjoe9",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T15:30:41.14Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/speqz71d9zruklslsvzt",
        "version": 1556897449,
        "signature": "8e55b941139529d33b306e06ef203054f724cc3e",
        "width": 618,
        "height": 762,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T15:30:49Z",
        "tags": [],
        "bytes": 28066,
        "type": "upload",
        "etag": "c6dd4f503c7802c118bc19d118371a43",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556897449/avalanche2019/speqz71d9zruklslsvzt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556897449/avalanche2019/speqz71d9zruklslsvzt.png"
      },
      {
        "public_id": "avalanche2019/jjgfx1lnwhby301jjhve",
        "version": 1556897455,
        "signature": "e31d978c5b4b7aad8047e9e76cc0fcab1a847ed2",
        "width": 426,
        "height": 684,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T15:30:55Z",
        "tags": [],
        "bytes": 21182,
        "type": "upload",
        "etag": "bc653c31dec54ad21c5ee9384add21d9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556897455/avalanche2019/jjgfx1lnwhby301jjhve.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556897455/avalanche2019/jjgfx1lnwhby301jjhve.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:43:16.406Z" }
      }
    ],
    "title": "",
    "code": "translate([0,0,-25])\nlinear_extrude(height=50,twist=360)\nsquare(7,5,center=true);\n\ntranslate([0,5,25])\nrotate([0,90,0])\ncylinder(10,3.5,3.5,center=true,$fn=50);\n\ntranslate([0,-5,25])\nrotate([0,90,0])\ncylinder(10,3.5,3.5,center=true,$fn=50);\n\ntranslate([0,0,27.5])\ncube([10,13.5,5],center=true);\n\ntranslate([0,0,32])\ncube([20,20,5],center=true);\n\ntranslate([0,0,-27.5])\ncube([20,20,5],center=true);"
  },
  {
    "_id": "3etF4FZst5rhdD8tc",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T18:08:01.805Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yoockkyhrzomvba4z84w",
        "version": 1557511829,
        "signature": "184da29ceed3f141634d4eb45c619e77ccffcc0a",
        "width": 1248,
        "height": 940,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T18:10:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 676811,
        "type": "upload",
        "etag": "310f49c7f481dce658429f11727bb559",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557511829/avalanche2019/yoockkyhrzomvba4z84w.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557511829/avalanche2019/yoockkyhrzomvba4z84w.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1487648",
          "dar": "312:235"
        },
        "frame_rate": 60,
        "bit_rate": 1537333,
        "duration": 3.522,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "How about raw meat instead of human, titan? (When titan eats human, score--)"
  },
  {
    "_id": "3j9EcT7e7C8doe4om",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-31T22:21:30.985Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hmuakqc3dy24jwvufexu",
        "version": 1554070908,
        "signature": "dfda80da85fe9318cbdefeb2f44289116322246f",
        "width": 2886,
        "height": 3332,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-31T22:21:48Z",
        "tags": [],
        "bytes": 2276660,
        "type": "upload",
        "etag": "39317e6b2894f5ee91a90b939922f26c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554070908/avalanche2019/hmuakqc3dy24jwvufexu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554070908/avalanche2019/hmuakqc3dy24jwvufexu.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "laser cut alphabet of my paper script typeface"
  },
  {
    "_id": "3jsCNoRuSfruKXkvN",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T17:34:18.288Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gt9zqinarjx7pxftfnyc",
        "version": 1550684079,
        "signature": "8b23b2424c3eae9bf6a17f551763cda7fc0c015b",
        "width": 1780,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-20T17:34:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 7676966,
        "type": "upload",
        "etag": "18f5767d5672071b009e6aa3df0afb50",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550684079/avalanche2019/gt9zqinarjx7pxftfnyc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550684079/avalanche2019/gt9zqinarjx7pxftfnyc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "5080417",
          "dar": "445:278"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5096740,
        "duration": 12.05,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Three of the same blobs but slightly changing the vertices completely changes the shape.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nlet radius;\nlet pos;\nlet x, y;\nlet xOffset = 1000;\nlet yOffset = 1000;\nlet noiseScale = 340;\nlet g, b;\n\nfunction setup(){\n\tcreateCanvas(windowWidth, windowHeight);\n\tsmooth();\n}\n\nfunction draw(){\n\tbackground(127);\n\tblob(x,y);\n}\t\n\nfunction blob(){\n\t\tradius = 40;\n\t\tnoStroke();\n\n\t\tg = map(mouseY, 0, height, 0, 255);\n\t\tb = map(mouseX, 0, width, 0,255);\n\n\t\tpush();\n\t\ttranslate(width/2, height/2);\n\n\t\tfill(255,g,b);\n\t\tbeginShape();\n\t\tfor(let a = 0; a < TWO_PI; a +=TWO_PI/radius){\n\t\t\tlet x = radius * sin(a);\n\t\t\tlet y = radius * cos(a);\n\n\t\t\tlet new_x = x + (noise(((x + xOffset)/noiseScale), ((y + yOffset)/noiseScale))) * 100 * sin(a);\n\t\t\tlet new_y = y + (noise(((x + xOffset)/noiseScale), ((y + yOffset)/noiseScale))) * 100 * cos(a);\n\n\t\t\tvertex(new_x,new_y);\n\t\t\t// ellipse(x,y,5,5);\n\t\t\tnew_x +=mouseX;\n\t\t\tnew_y+=mouseY;\t\t\t\n\t\t}\n\t\tendShape();\n\t\tpop();\n\t\t\n\t\tpush();\n\t\ttranslate(width/3, height/3);\n\t\tbeginShape();\n\t\tfill(b,g,255);\n\t\tfor(let a = 0; a < TWO_PI; a +=TWO_PI/radius){\n\t\t\tlet x = radius * sin(a);\n\t\t\tlet y = radius * cos(a);\n\n\t\t\tlet new_x = x + (noise(((x + xOffset)/noiseScale) * 10, ((y + yOffset)/noiseScale))) * 100 * sin(a * 5);\n\t\t\tlet new_y = y + (noise(((x + xOffset)/noiseScale), ((y + yOffset)/noiseScale))) * 100 * cos(a);\n\n\t\t\tvertex(new_x,new_y);\n\t\t\t// ellipse(x,y,5,5);\n\n\t\t\tnew_x +=mouseX;\n\t\t\tnew_y+=mouseY;\t\t\t\n\t\t}\n\t\tendShape();\n\t\tpop();\n\n\t\tpush();\n\t\ttranslate(width/1.5, height/1.5);\n\n\t\tfill(g, 255, b);\n\t\tbeginShape();\n\t\tfor(let a = 0; a < TWO_PI; a +=TWO_PI/radius){\n\t\t\tlet x = radius * sin(a);\n\t\t\tlet y = radius * cos(a);\n\n\t\t\tlet new_x = x + (noise(((x + xOffset)/noiseScale), ((y + yOffset)/noiseScale))) * 100 * sin(a * 2);\n\t\t\tlet new_y = y + (noise(((x + xOffset)/noiseScale) * 10, ((y + yOffset)/noiseScale))) * 100 * cos(a * 5);\n\n\t\t\tvertex(new_x,new_y);\n\t\t\t// ellipse(x,y,5,5);\n\t\t\tnew_x +=mouseX;\n\t\t\tnew_y+=mouseY;\t\t\t\n\t\t}\n\t\tendShape();\n\t\tpop();\n\n\t\txOffset +=3;\n\t\tyOffset +=3;\t\t\n}"
  },
  {
    "_id": "3m3LpAgrgyEtmT7ZN",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T16:02:38.749Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/itnp3jn7khaxob8sye0e",
        "version": 1554480297,
        "signature": "ca4331cdd291bc192b3e24dc290fc1bf327d6eb7",
        "width": 640,
        "height": 468,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T16:04:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 330636,
        "type": "upload",
        "etag": "d225450bfafc699446b93c6d6f512c98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554480297/avalanche2019/itnp3jn7khaxob8sye0e.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554480297/avalanche2019/itnp3jn7khaxob8sye0e.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "256481",
          "dar": "160:117"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 264244,
        "duration": 10.01,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "low quality space animation",
    "inspiration_name": "space"
  },
  {
    "_id": "3ufQvqQZs5sZ3oAFd",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T03:40:30.619Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/m0wcdzonvar1dlter1yh",
        "version": 1549597549,
        "signature": "5ce2462b12f10487ce47249fdd396f56481d18ef",
        "width": 1676,
        "height": 1668,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T03:45:49Z",
        "tags": [],
        "bytes": 156406,
        "type": "upload",
        "etag": "414f63d5c7e6645b9fcdb7d25910ded5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549597549/avalanche2019/m0wcdzonvar1dlter1yh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549597549/avalanche2019/m0wcdzonvar1dlter1yh.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T03:49:35.082Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T15:00:43.786Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T16:11:45.784Z" }
      }
    ],
    "title": "",
    "description": "**Suprematism** (Brownian motion really doesn’t look like cracks)  \n\n*Followed Shiffman’s tutorial on 2D Noise for the canvas*",
    "inspiration_name": "Kazimir Malevich, Black Square (1913)",
    "inspiration_url": "https://www.tate.org.uk/art/artists/kazimir-malevich-1561/five-ways-look-malevichs-black-square",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nconst w = window.innerWidth;\nconst h = w;\nconst inc = 0.01;\n\nfunction setup() {\n  createCanvas(w, h);\n  // colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  // rectMode(CENTER);\n  pixelDensity(1);\n\n  window.canvasColor = color(226, 226, 226);\n  window.black = color(25, 23, 11);\n  background(canvasColor);\n\n  prepareCanvas();\n  paintSquare();\n}\n\nfunction draw() {}\n\nfunction prepareCanvas() {\n  canvasNoise(27);\n}\n\nfunction canvasNoise(alpha) {\n  let yoff = 0;\n  loadPixels();\n  for (let x = 0; x < w; x++) {\n    let xoff = 0;\n    for (let y = 0; y < h; y++) {\n      var index = (x + y * width) * 4;\n      var r = noise(xoff, yoff) * 255;\n      // red\n      pixels[index + 0] = r;\n      // green\n      pixels[index + 1] = r;\n      // blue\n      pixels[index + 2] = r;\n      // alpha\n      pixels[index + 3] = alpha;\n\n      xoff += inc;\n    }\n    yoff += inc;\n  }\n  updatePixels();\n}\n\nfunction noiseSquare() {\n  let yoff = 0;\n  for (let x = 0; x < w; x++) {\n    let xoff = 0;\n    for (let y = 0; y < h; y++) {\n      var r = noise(xoff, yoff) * 255;\n      stroke(r, 15);\n      if (x > w * 0.159 && x < w * 0.857 && y > h * 0.151 && y < h * 0.843) {\n        point(x, y);\n        xoff += inc;\n      }\n    }\n    yoff += inc;\n  }\n}\n\nfunction paintSquare() {\n  push();\n  fill(black);\n  rectMode(CORNERS);\n  // rect(w * 0.159, h * 0.151, w * 0.857, h * 0.843);\n  beginShape();\n  vertex(w * 0.159, h * 0.151);\n  vertex(w * 0.851, h * 0.143);\n  vertex(w * 0.857, h * 0.843);\n  vertex(w * 0.164, h * 0.858);\n  endShape(CLOSE);\n  // noiseSquare();\n  sketchyOutline();\n  drawScratches();\n  pop();\n}\n\nfunction drawScratches() {\n  push();\n  let gridSize = 20;\n  for (let x = 0; x < gridSize; x++) {\n    for (let y = 0; y < gridSize; y++) {\n      if (random(1) > 1/gridSize*y) {\n        drawBrownianPath(\n          w * 0.25 + ((x * w) / gridSize) * 0.52,\n          w * 0.25 + ((y * w) / gridSize) * 0.52,\n          random(6, 10),\n          random(1, 40)\n        );\n      }\n    }\n  }\n  pop();\n}\n\nfunction sketchyOutline() {\n  push();\n  let amplitude = 0.05;\n  let gran = 80;\n  print(\"yes\");\n  stroke(black);\n  strokeWeight(w * 0.007);\n  strokeJoin(ROUND);\n  drawSketchyline(\n    { x: w * 0.159, y: h * 0.151 },\n    { x: w * 0.851, y: h * 0.143 },\n    gran,\n    amplitude\n  );\n  drawSketchyline(\n    { x: w * 0.851, y: h * 0.143 },\n    { x: w * 0.857, y: h * 0.843 },\n    gran,\n    amplitude\n  );\n  drawSketchyline(\n    { x: w * 0.857, y: h * 0.843 },\n    { x: w * 0.164, y: h * 0.858 },\n    gran,\n    amplitude\n  );\n  drawSketchyline(\n    { x: w * 0.164, y: h * 0.858 },\n    { x: w * 0.159, y: h * 0.151 },\n    gran,\n    amplitude\n  );\n  pop();\n}\n\nfunction drawSketchyline(point1, point2, granularity, amplitude) {\n  const startP = Object.assign({}, point1);\n  let nextP = Object.assign({}, point1);\n  let prevP = Object.assign({}, point1);\n  const endP = Object.assign({}, point2);\n\n  const vector = { x: endP.x - startP.x, y: endP.y - startP.y };\n  const pRVector = { x: vector.y, y: -vector.x };\n  const pLVector = { x: -vector.y, y: vector.x };\n  const steps = granularity * 2;\n  const scaleFactor = 1 / steps;\n  let randomArray = [];\n  for (let i = 0; i < steps / 2; i++) {\n    const r = random(1);\n    randomArray.push(r);\n  }\n  randomMinusArray = randomArray.map(x => -x);\n  randomArray = randomArray.concat(randomMinusArray);\n  randomArray = shuffle(randomArray);\n  for (let i = 0; i < steps; i++) {\n    nextP.x +=\n      vector.x * scaleFactor +\n      pRVector.x * scaleFactor * randomArray[0] * amplitude;\n    nextP.y +=\n      vector.y * scaleFactor +\n      pRVector.y * scaleFactor * randomArray[0] * amplitude;\n    line(prevP.x, prevP.y, nextP.x, nextP.y);\n    prevP.x = nextP.x;\n    prevP.y = nextP.y;\n    randomArray.splice(0, 1);\n  }\n}\n\nfunction drawBrownianPath(x, y, segmentLength, steps) {\n  for (var step = 0; step < steps; step++) {\n    var nextX, nextY;\n\n    ////////////////////////////////////////////////////////////////////\n    // even distribution\n    if (step < steps / 2) {\n      stroke(min(random(20, 250),random(40, 250)), (step * 255) / steps);\n      // console.log((step * 255) / steps);\n    } else {\n      stroke(min(random(20, 250), random(40, 250)), 255 - (step * 122) / steps);\n      // console.log(step, 255 - (step * 255) / steps);\n    }\n    nextX = x + random(-segmentLength, segmentLength);\n    nextY = y + random(-segmentLength, segmentLength);\n\n    line(x, y, nextX, nextY);\n\n    x = nextX;\n    y = nextY;\n  }\n}"
  },
  {
    "_id": "3utpTDzghrDCxakMe",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T15:45:51.319Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yn65rkwrxydbllnlfxap",
        "version": 1556293568,
        "signature": "9edbeb22f122f2fd7ebbd2404fc66cad99f6d076",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T15:46:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 806395,
        "type": "upload",
        "etag": "4542ba18301f14ef21f63ca5ebef1534",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556293568/avalanche2019/yn65rkwrxydbllnlfxap.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556293568/avalanche2019/yn65rkwrxydbllnlfxap.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "130287",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "247007",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 402794,
        "duration": 16.016,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with midi piano and drum samples"
  },
  {
    "_id": "3wXKC4db6NNQhfeFK",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-18T22:25:09.451Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xozgfgiq2w56adn83ukm",
        "version": 1552948136,
        "signature": "6e794ab631f79dd8a7893d04ba6e6758da66b27e",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-18T22:28:56Z",
        "tags": [],
        "bytes": 3576079,
        "type": "upload",
        "etag": "a333e990ebcd04548e2db45e0d365ec6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552948136/avalanche2019/xozgfgiq2w56adn83ukm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552948136/avalanche2019/xozgfgiq2w56adn83ukm.jpg"
      },
      {
        "public_id": "avalanche2019/gafxncl1d0ufxg2rrx7m",
        "version": 1552948150,
        "signature": "6eb1648fc638e84c943d1448e00ecf9ed8c87c3d",
        "width": 1491,
        "height": 943,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-18T22:29:10Z",
        "tags": [],
        "bytes": 352907,
        "type": "upload",
        "etag": "cfc04b026bab6da8e64636297e6c576e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552948150/avalanche2019/gafxncl1d0ufxg2rrx7m.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552948150/avalanche2019/gafxncl1d0ufxg2rrx7m.jpg"
      },
      {
        "public_id": "avalanche2019/lcixdyqzeeprlgeq34el",
        "version": 1552948171,
        "signature": "b14d687c4e8de6b5713de50df700a061ead03abc",
        "width": 1920,
        "height": 910,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-18T22:29:31Z",
        "tags": [],
        "bytes": 759500,
        "type": "upload",
        "etag": "a10dc0f41d4df79d355eac698e53da67",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552948171/avalanche2019/lcixdyqzeeprlgeq34el.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552948171/avalanche2019/lcixdyqzeeprlgeq34el.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-19T09:57:30.587Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-25T01:40:45.656Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T01:25:19.513Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-04-02T05:55:00.867Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have designed a bookmark with an anchor pattern using computationally generated art. \n1. I created the anchor pattern art in Paper.js\n2. I exported it as an SVG and updated the design in Adobe Illustrator\n3. I laser cut the design to create the bookmark",
    "inspiration_name": "Anchor Pattern Bookmark Design",
    "code": "// Vector art for Bookmark\n\n// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n\n// Idea:\n// 1. Create an anchor shape\n// 2. Create a pattern using that shape\n// 3. Export the file in SVG and import in Illustrator\n// 4. Adjust the pattern on a bookmark sized artboard\n// 5. Laser cut the file to create bookmark designs\n\n\n////////////////////////////////////\n// Creating the anchor for bookmark\n////////////////////////////////////\n// ANCHOR TOP\nvar innerCircle = new Path.Circle(new Point(100, 35), 15);\ninnerCircle.strokeColor = 'blue';\ninnerCircle.fillColor = 'yellow';\nvar outerCircle = new Path.Circle(new Point(100, 35), 30);\nouterCircle.strokeColor = 'red'; // stroke of the anchor\nouterCircle.strokeWidth = 0.4;\nouterCircle.fillColor = 'white'; // color of the anchor\n\nvar rectLocation1 = new Rectangle(new Point(10, 75), new Point(190, 95));\n// var horizontalRectangle = new Path.Rectangle(rectLocation1);\nvar radius = new Size(3, 3);\nvar curvedRect = new Path.Rectangle(rectLocation1, radius);\ncurvedRect.fillColor = 'black';\ncurvedRect.strokeColor = 'red';\n// horizontalRectangle.fillColor = \"black\";\n// horizontalRectangle.strokeColor = 'red';\n\nvar rectLocation2 = new Rectangle(new Point(90, 55), new Point(110, 375));\nvar verticalRectangle = new Path.Rectangle(rectLocation2);\nverticalRectangle.fillColor = 'black';\nverticalRectangle.strokeColor = 'red';\n\nvar outerCircle_vertRect = outerCircle.unite(verticalRectangle);\nvar upperBody = outerCircle_vertRect.unite(curvedRect);\n\n// ANCHOR BASE\nvar curvedPath = new Path();\ncurvedPath.strokeColor = 'blue';\n// top curve\ncurvedPath.add(\n    new Point(30, 350),\n    new Point(10, 360),\n    new Point(20, 320),\n    new Point(60, 330),\n    new Point(45, 340),\n    new Point(100, 370), // center\n    new Point(155, 340),\n    new Point(140, 330),\n    new Point(180, 320),\n    new Point(190, 360),\n    new Point(170, 350));\n// bottom curve\ncurvedPath.add(\n    new Point(140, 390),\n    new Point(110, 410),\n    new Point(100, 420), // center\n    new Point(90, 410),\n    new Point(60, 390));\ncurvedPath.closed = true;\n// curvedPath.selected = true;\ncurvedPath.smooth();\ncurvedPath.fillColor = 'black';\n\nvar fullAnchor = upperBody.unite(curvedPath);\nvar fullAnchor_punched = fullAnchor.subtract(innerCircle);\n\nfullAnchor_punched.style = {\n    fillColor: 'white',\n    shadowColor: new Color(0, 0, 0, .5),\n    shadowBlur: 12,\n    // shadowOffset: new Point(5, 5),\n};\n\n\n///////////////////////////////////////////\n// Creating the pattern using Anchor Shape\n///////////////////////////////////////////\n// SYMBOL doesn't work with ExportSVG\n// var anchorSymbol = new Symbol(fullAnchor_punched);\n// // Place 1000 instances of the symbol in the project in random\n// // positions in the view:\n// for (var i = 0; i < 1000; i++) {\n//     var position = view.size * Point.random();\n//     var placed = anchorSymbol.place(position - i * 0.5);\n//     placed.scale(i * 0.0010);\n//     placed.rotate(i);\n// }\n\n\n// Using group instead of symbols\nvar group = new Group({\n    children: [fullAnchor_punched],\n    // Move the group to the center of the view:\n    position: view.center\n});\n\n// Make 1000 copies of the anchor:\nfor (var i = 0; i < 1000; i++) {\n    var copy = group.clone();\n    // Distribute the copies horizontally, so we can see them:\n    copy.position = view.size * Point.random() - i * 0.5;\n    copy.scale(i * 0.001);\n    copy.rotate(i);\n}\n\n\n\n//////////////////////////\n// Export the file as SVG\n//////////////////////////\n// Since this code is not in paperscript, it may be put in the HTML file\n// Didn't work when I tried.\n\nfunction onKeyDown(event) {\n    if (event.key === 's') {\n        downloadAsSVG();\n    }\n}\n\nfunction downloadAsSVG(fileName) {\n    // use default name if not provided\n    fileName = fileName || \"output.svg\"\n        // create a data url of the file\n    var svgData = project.exportSVG({ asString: true });\n    var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n    // create a link to the data, and \"click\" it\n    var link = document.createElement(\"a\");\n    link.download = fileName;\n    link.href = url;\n    link.click();\n}\n\n// Other trials with exporting as SVG: didn't work\n\n// document.body.appendChild(project.exportSVG());\n// console.log('Export SVG', Date.now() - start);\n\n// function downloadAsSVG() {\n//     var svg = project.exportSVG({\n//         asString: true\n//     });\n//     downloadDataUri({\n//         data: 'data:image/svg+xml;base64,' + btoa(svg),\n//         filename: 'export.svg'\n//     });\n// }"
  },
  {
    "_id": "3yvHEEgA5c6zxw2ak",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T03:40:04.836Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/iahbpsbhx9iu5wyawohl",
        "version": 1550720601,
        "signature": "c645fa5ab6f3318cd17c35b6c19965aafbd4c166",
        "width": 938,
        "height": 888,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-21T03:43:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 9450569,
        "type": "upload",
        "etag": "482c864da02c8f12641b8ba9f674f8ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550720601/avalanche2019/iahbpsbhx9iu5wyawohl.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550720601/avalanche2019/iahbpsbhx9iu5wyawohl.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1377",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "1567100",
          "dar": "469:444"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 1570760,
        "duration": 48.129525,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/nmvc3rawj454q3zdwghv",
        "version": 1550720661,
        "signature": "8a503f0bd8d9ef8989f7cc1600b2772ac4011e7c",
        "width": 943,
        "height": 621,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-21T03:44:21Z",
        "tags": [],
        "bytes": 350152,
        "type": "upload",
        "etag": "136f96e7ed18cccec50a3ce3c025fecc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550720661/avalanche2019/nmvc3rawj454q3zdwghv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550720661/avalanche2019/nmvc3rawj454q3zdwghv.jpg"
      },
      {
        "public_id": "avalanche2019/wi7s74u4lhsdpmfhxkao",
        "version": 1550720666,
        "signature": "8cda670da0ed51e60848092fa02b95bd6bdfc821",
        "width": 940,
        "height": 619,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-21T03:44:26Z",
        "tags": [],
        "bytes": 589404,
        "type": "upload",
        "etag": "36f5aa28c684127897619bcede1dc5bd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550720666/avalanche2019/wi7s74u4lhsdpmfhxkao.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550720666/avalanche2019/wi7s74u4lhsdpmfhxkao.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Following from yesterday's sketch, I have customized the Flow Field pattern, making changes in the color, rotation, and size of the particles. \nSee the different variations: HSB color, HSB color with alpha, grayscale, sepia, and mouse hover in the code.",
    "inspiration_name": "Custom Flow Field",
    "inspiration_url": "http://colorizer.org/",
    "code": "https://github.com/akshansh2593/CompForm/tree/master/customFlowField"
  },
  {
    "_id": "42cz74uBEYoaTJYio",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T00:55:42.019Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yvbozlhodsrhiq8obdtz",
        "version": 1549501517,
        "signature": "f4285e0bfa8024acca0d64b52573a744e599c38a",
        "width": 1200,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T01:05:17Z",
        "tags": [],
        "bytes": 2608082,
        "type": "upload",
        "etag": "9d9d3b0cb6e4fd778e8f82c143fe3b92",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549501517/avalanche2019/yvbozlhodsrhiq8obdtz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549501517/avalanche2019/yvbozlhodsrhiq8obdtz.png"
      },
      {
        "public_id": "avalanche2019/hjbia2uvvvsdlok2sd8a",
        "version": 1549501529,
        "signature": "222fe03177905f5d3ff08bdbc077a3f171274a9f",
        "width": 1320,
        "height": 1312,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T01:05:29Z",
        "tags": [],
        "bytes": 3059855,
        "type": "upload",
        "etag": "308c3e7fff52ada6decda44ceed07cd5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549501529/avalanche2019/hjbia2uvvvsdlok2sd8a.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549501529/avalanche2019/hjbia2uvvvsdlok2sd8a.png"
      },
      {
        "public_id": "avalanche2019/z9xo12knvxh8hocrl1po",
        "version": 1549501566,
        "signature": "71a71f8babf879c6364ef9badf06bd5034afadd1",
        "width": 1196,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T01:06:06Z",
        "tags": [],
        "bytes": 776514,
        "type": "upload",
        "etag": "f79872786d0dedfa44444741d24c5f05",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549501566/avalanche2019/z9xo12knvxh8hocrl1po.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549501566/avalanche2019/z9xo12knvxh8hocrl1po.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Using a sin function and drawing points instead of strands, I could model more complex shapes of tighter curls pattern \n\nI  randomized , width, length and tightness of curls controlled to a general texture. Using sin to dictate the waves I was able to remove a lot of code to manipulate curvature points",
    "inspiration_name": "Curl Texture",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\nlet time = 0;\nlet curlWidth = 40;\nlet frequency = 0.15; //frequency //how fast they rotate \nlet pointTightness = 1;\nlet pointDiameter = 2;\n\n\nfunction setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n    smooth();\n\n    colorMode(RGB, 255, 255, 255, 1);\n\n    // stroke(255, 102, 0, 1);\n    fill(255, 102, 0);\n    noStroke();\n\n\n    for (tuft = 1; tuft < 15; tuft++) {\n        //starting point for a tuft of hair \n        origin = tuft * 40;\n        tuftLength = Math.floor(Math.random() * 100) + 500;\n\n\n        // width  is length of strands \n        for (strands = 0; strands < 50; strands++) {\n            let red = Math.floor(50 * Math.random() + 100);\n            let green = Math.floor(20 * Math.random() + 40);\n            let opacity = Math.random() - .2;\n            fill(red, green, 10, opacity);\n            length = tuftLength + (Math.random() * 70);\n            originDeviation = (Math.random() * 30) + 5;\n            strandOriginX = origin + originDeviation;\n            curlTightnessDeviation = random(.04, .045);\n            curlWidthDeviation = Math.floor(Math.random() * 15) + 25;\n            // curlWidth += curlWidthDeviation;\n            //single strand of hair\n            for (i = 0; i < length; i += pointTightness) {\n\n                //bigger phase, the less curcles \n                let curlTightness = i * curlTightnessDeviation;\n                ellipse(strandOriginX + curlWidth + curlWidthDeviation * sin(frequency + curlTightness), i, pointDiameter, pointDiameter);\n\n            }\n        }\n    }\n}"
  },
  {
    "_id": "45cTwkLQ7kFQX2xrh",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T13:35:46.468Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zdpexqo7xs1fyltfznt5",
        "version": 1549546854,
        "signature": "f8078a7f4fb31393742aacfa13c011259d28dca5",
        "width": 861,
        "height": 464,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T13:40:54Z",
        "tags": [],
        "bytes": 26515,
        "type": "upload",
        "etag": "d0956f76be493cccfac8c55c4fe68650",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549546854/avalanche2019/zdpexqo7xs1fyltfznt5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549546854/avalanche2019/zdpexqo7xs1fyltfznt5.jpg"
      },
      {
        "public_id": "avalanche2019/xuyfohf7m4drbnh6qtuk",
        "version": 1549547152,
        "signature": "35e80a6028c29b6f4912b1a28c0a0ccecfeaba79",
        "width": 1882,
        "height": 938,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T13:45:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 4143682,
        "type": "upload",
        "etag": "f64440891521bbf8fd2f8bb751b05790",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549547152/avalanche2019/xuyfohf7m4drbnh6qtuk.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549547152/avalanche2019/xuyfohf7m4drbnh6qtuk.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1607241",
          "dar": "941:469"
        },
        "frame_rate": 15,
        "bit_rate": 1609196,
        "duration": 20.6,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:28:04.374Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-07T15:28:06.663Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T17:35:58.535Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-07T19:00:21.299Z" }
      }
    ],
    "title": "",
    "description": "Random Undersea World\n--\nA randomly generated digital aquarium :)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\n\nvar seaweeds = [];\nvar seafloor_bk;\nvar seafloor;\nvar bubbles = [];\nvar fishes = [];\n\nvar fishColors = [];\nvar seaweedColors = [];\n\nfunction setup() {\n  createCanvas(960, 480);\n\n  fishColors = [color(232, 191, 179), color(223, 109, 78), color(132, 101, 165)];\n  seaweedColors = [color(165, 204, 198), color(136, 195, 173), color(136, 195, 173), color(219, 233, 213)];\n  for (var i = 0; i < 7; i++)\n    seaweeds.push(new Seaweed(random(100, width - 100), random(height, height + 100)));\n\n  for (var i = 0; i < 10; i++) {\n    bubbles.push(new Bubble());\n  }\n\n  for (var i = 0; i < 8; i++) {\n    fishes.push(new Fish());\n  }\n\n  seafloor = new Seafloor(color(237, 216, 154));\n  seafloor_bk = new Seafloor(color(234, 176, 90));\n  //noLoop();\n  noFill();\n}\n\nfunction draw() {\n  background(245, 243, 231);\n\n  seafloor_bk.show();\n\n  for (let seaweed of seaweeds)\n    seaweed.show();\n\n  for (let fish of fishes)\n    fish.show();\n\n  seafloor.show();\n\n  for (let bubble of bubbles)\n    bubble.show();\n\n}\n\nclass Fish {\n  constructor() {\n    this.x = random(0, width);\n    this.y = random(height * 0.15, height * 0.8);\n    this.w = random(20, 60);\n    this.h = this.w * random(0.4, 0.7);\n    this.col = fishColors[Math.floor(Math.random() * fishColors.length)];\n    this.xspeed = random(0.7, 2);\n    if (random() < 0.5)\n      this.xspeed *= -1;\n  }\n  show() {\n\n    noStroke();\n    fill(this.col);\n    this.x += this.xspeed;\n    if (this.x < -150 || this.x > width + 150) {\n      //turn\n      this.xspeed *= -1;\n      this.y = random(height * 0.15, height * 0.8);\n      this.w = random(20, 50);\n      this.h = random(15, 25);\n    }\n\n    push();\n    translate(this.x, this.y);\n    //  console.log(this.xsppeed);\n    if (this.xspeed < 0) {\n\n      beginShape();\n      curveVertex(-this.w, 0);\n      curveVertex(-this.w, 0);\n      curveVertex(-this.w * 0.3, -this.h);\n      curveVertex(this.w, 0);\n      curveVertex(this.w, this.h * 0.3);\n      endShape(CLOSE);\n\n      beginShape();\n      curveVertex(-this.w, 0);\n      curveVertex(-this.w, 0);\n      curveVertex(-this.w * 0.3, this.h * 0.8);\n      curveVertex(this.w, 0);\n      curveVertex(this.w, -this.h * 0.3);\n      endShape(CLOSE);\n\n    } else {\n\n      beginShape();\n      curveVertex(this.w, 0);\n      curveVertex(this.w, 0);\n      curveVertex(this.w * 0.3, -this.h);\n      curveVertex(-this.w, 0);\n      curveVertex(-this.w, this.h * 0.3);\n      endShape(CLOSE);\n\n      beginShape();\n      curveVertex(this.w, 0);\n      curveVertex(this.w, 0);\n      curveVertex(this.w * 0.3, this.h * 0.8);\n      curveVertex(-this.w, 0);\n      curveVertex(-this.w, -this.h * 0.3);\n      endShape(CLOSE);\n\n    }\n\n    pop();\n\n  }\n}\nclass Bubble {\n  constructor() {\n    this.basex = random(0, width);\n    this.x = this.basex;\n    this.y = random(height, height * 1.5);\n    this.r = random(10, 40);\n    this.yspeed = random(1, 5);\n    this.xspeed = random(-5, 5);\n\n    this.random1 = random(20, 40);\n    this.random2 = random(0.004, 0.006);\n  }\n\n  show() {\n    fill(166, 208, 243, 150);\n    this.y -= this.yspeed;\n    this.x = this.basex + sin(millis() * this.random2) * this.random1;\n    ellipse(this.x, this.y, this.r, this.r);\n    fill(255, 200);\n    ellipse(this.x - this.r * 0.2, this.y - this.r * 0.2, this.r * 0.2);\n    if (this.y < 0) {\n      this.basex = random(0, width);\n      this.x = this.basex;\n      this.y = random(height, height * 1.5);\n    }\n  }\n}\nclass Seafloor {\n  constructor(color) {\n    this.vertex = [];\n    var count = 5;\n    //  let = 0.02;\n    this.vertex.push(createVector(0, height + 100));\n    this.vertex.push(createVector(0, height + 100));\n    this.col = color;\n\n    for (var i = 0; i < 4; i++) {\n      var x = this.vertex[i + 1].x + random(width * 0.15, width * 0.25);\n      var y = random(height * 0.8, height * 1.2);\n      this.vertex.push(createVector(x, y, 0))\n    }\n\n    this.vertex.push(createVector(width, height + 100));\n    this.vertex.push(createVector(width, height + 100));\n\n    this.vertex.sort(function(a, b) {\n      return b.x - a.x;\n    });\n  }\n  show() {\n    noStroke();\n    fill(this.col);\n    beginShape();\n\n    for (let v of this.vertex) {\n      curveVertex(v.x, v.y);\n      //text(i, v.x, v.y);\n\n    }\n    endShape(CLOSE);\n  }\n}\n\nclass Seaweed {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.col = seaweedColors[Math.floor(Math.random() * seaweedColors.length)];\n    //this.kitten = random(kittens);\n    this.parts = [];\n    this.contourVertexes = [];\n    this.contourVertexes2 = [];\n    this.contourVertexes3 = [];\n\n    this.rot = random(-1, 1) * PI / 4;\n    this.partNum = floor(random(2, 7));\n\n    //var isTail = true;\n    for (var i = 0; i < this.partNum; i++) {\n      var pct = i / this.partNum;\n\n      var minR = 25;\n      var maxR = 50;\n      this.r = random(minR, maxR);\n      var isHead;\n      if (i == this.partNum - 1) {\n        isHead = true;\n        this.r = minR;\n      } else\n        isHead = false;\n\n\n      this.parts[i] = new SeaweedPart(0, 0 - i * maxR, this.r, isHead, pct);\n    }\n\n\n  }\n\n  updateContour() {\n    //console.log(\"update contour\");\n    this.contourVertexes = [];\n    this.contourVertexes2 = [];\n    this.contourVertexes3 = [];\n    var partNum = 5;\n    //var isTail = true;\n    for (var i = 0; i < this.partNum; i++) {\n      this.contourVertexes = this.contourVertexes.concat(this.parts[i].vertexes);\n      this.contourVertexes2 = this.contourVertexes2.concat(this.parts[i].vertexes2);\n    }\n    this.contourVertexes3 = this.contourVertexes.concat(this.contourVertexes2.reverse());\n\n  }\n\n  show() {\n\n    //---\n    push();\n    translate(this.x, this.y);\n    rotate(this.rot);\n    this.updateContour();\n    //\n    //stroke(0);\n    //fill(166, 204, 197);\n    fill(this.col);\n    noStroke();\n    beginShape();\n    curveVertex(this.contourVertexes3[0].x, this.contourVertexes3[0].y);\n    var tp = 0;\n    for (var v of this.contourVertexes3) {\n      curveVertex(v.x, v.y);\n      //ellipse(v.x, v.y, 5, 5);  //show every contour point\n    }\n    curveVertex(this.contourVertexes3[this.contourVertexes3.length - 1].x, this.contourVertexes3[this.contourVertexes3.length - 1].y);\n    endShape(CLOSE);\n\n    //debug\n    // stroke(0);\n    // for (var i = 0; i < this.contourVertexes3.length; i++) {\n    //   text(i, this.contourVertexes3[i].x, this.contourVertexes3[i].y);\n    // }\n\n\n\n    beginShape();\n    curveVertex(this.parts[0].x, this.parts[0].y);\n    for (let part of this.parts) {\n      part.updateVertexes();\n      part.show();\n\n      //text(part.pct, part.x, part.y);\n      curveVertex(part.nx, part.ny);\n    }\n    curveVertex(this.parts[this.parts.length - 1].x, this.parts[this.parts.length - 1].y);\n    stroke(255, 60);\n    strokeWeight(3);\n    endShape();\n\n    pop();\n\n  }\n\n\n\n}\n\nclass SeaweedPart {\n  constructor(x, y, r, isHead, pct) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n    //this.kitten = random(kittens);\n    this.isHead = isHead;\n    this.nx = x;\n    this.ny = y;\n\n    this.pct = pct;\n    //create vertexes\n    this.vertexes = [];\n    this.vertexes2 = [];\n    this.steps = floor(map(this.pct, 0, 1, 7, 3));\n    if (this.isHead == true)\n      this.steps = floor(random(1, 4));\n\n    this.updateVertexes();\n  }\n\n  show() {\n\n    //moving\n    this.nx = this.x + (sin(millis() * 0.01 + this.pct * 8) * 20 + 20) * this.pct;\n\n    noFill();\n    strokeWeight(5)\n    stroke(136, 197, 174);\n    //ellipse(this.nx, this.ny, this.r, this.r);\n\n\n  }\n\n  updateVertexes() {\n    // console.log(this.nx);\n    this.vertexes = [];\n    this.vertexes2 = [];\n\n\n\n    var startIndex;\n    if (this.isHead == true)\n      startIndex = 0;\n    else\n      startIndex = 1;\n\n    for (var i = startIndex; i < this.steps - 1; i++) {\n      var yoffset = sin(-PI / 2 - i * (PI / this.steps)) * this.r / 2;\n      var xoffset = cos(-PI / 2 - i * (PI / this.steps)) * this.r / 2;\n\n      //  var randomRadius = 10;\n      this.vertexes.push(createVector(this.nx + xoffset, this.ny + yoffset));\n      this.vertexes2.push(createVector(this.nx - xoffset, this.ny + yoffset));\n    }\n    this.vertexes = this.vertexes.reverse();\n\n    this.vertexes2 = this.vertexes2.reverse();\n    if (this.isHead)\n      this.vertexes2.pop();\n  }\n\n}"
  },
  {
    "_id": "48nASHzzjXnw2kJdA",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "created_at": { "$date": "2019-02-01T06:32:51.864Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hmgxhxhtbprujmuzpmb0",
        "version": 1549002855,
        "signature": "1eef6755addb8258d9ac5c339886cf66e49ec351",
        "width": 800,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T06:34:15Z",
        "tags": [],
        "bytes": 90038,
        "type": "upload",
        "etag": "dd9ce9116c885067dc26834ce84001ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549002855/avalanche2019/hmgxhxhtbprujmuzpmb0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549002855/avalanche2019/hmgxhxhtbprujmuzpmb0.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "inspiration_name": "Tiles 1",
    "description": "Geometry"
  },
  {
    "_id": "49Ffmtyk6HznBCzM7",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T15:00:47.037Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yrlrnlugxwgcfhh383j2",
        "version": 1554476489,
        "signature": "d7606d3801c00887f98bc90a7679307cc1afb0ef",
        "width": 2576,
        "height": 1404,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T15:01:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 6262719,
        "type": "upload",
        "etag": "5d45611319273e0bf5e7bae713dd6ce2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554476489/avalanche2019/yrlrnlugxwgcfhh383j2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554476489/avalanche2019/yrlrnlugxwgcfhh383j2.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "6457446",
          "dar": "644:351"
        },
        "frame_rate": 60,
        "bit_rate": 7202839,
        "duration": 6.955833,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qdang6an6skurkkpdgxa",
        "version": 1554476606,
        "signature": "ff332219944a9189c1b0ac1369e75d3217c3b60c",
        "width": 1238,
        "height": 1328,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T15:03:26Z",
        "tags": [],
        "bytes": 110753,
        "type": "upload",
        "etag": "16d409dc4c08e03127035b210004d9da",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554476606/avalanche2019/qdang6an6skurkkpdgxa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554476606/avalanche2019/qdang6an6skurkkpdgxa.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Testing out a few options to speed up the animation without losing too much of the feel or content.\n\nTrying to find options that don't kill my browser :) Still hoping to add sound in a final sketch"
  },
  {
    "_id": "4EArWkRTeMw8BC2X6",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T17:08:38.808Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ndnnj85jjlxevgnpbvtt",
        "version": 1550596672,
        "signature": "c7ae60dd6783b1593fdb065c8f6cf36eb5a5d15f",
        "width": 1780,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T17:17:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 17039233,
        "type": "upload",
        "etag": "d70980ce79c71dc4aa6af846dfe6037c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550596672/avalanche2019/ndnnj85jjlxevgnpbvtt.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550596672/avalanche2019/ndnnj85jjlxevgnpbvtt.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "22891589",
          "dar": "445:278"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 22909893,
        "duration": 5.95,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ix2ni1fuejmodc71yz3k",
        "version": 1550596697,
        "signature": "3e0f6a6a3d32e1c5fd0df31f162254d2d5044cd5",
        "width": 1780,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T17:18:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 17228248,
        "type": "upload",
        "etag": "f3da0d020ea1ec82c0fd29ac02d16a2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550596697/avalanche2019/ix2ni1fuejmodc71yz3k.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550596697/avalanche2019/ix2ni1fuejmodc71yz3k.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "22638061",
          "dar": "445:278"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 22656327,
        "duration": 6.083333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/tgwt17dgsxtcxetv3u7b",
        "version": 1550596786,
        "signature": "c0c791531d8f5463b8d2f302e0d0d8721aa59859",
        "width": 1780,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T17:19:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 16567358,
        "type": "upload",
        "etag": "0d84402517592ea998b36fc2285a91ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550596786/avalanche2019/tgwt17dgsxtcxetv3u7b.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550596786/avalanche2019/tgwt17dgsxtcxetv3u7b.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "22637854",
          "dar": "445:278"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 22656216,
        "duration": 5.85,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-21T23:16:38.333Z" }
      }
    ],
    "title": "",
    "description": "Playing around with a circle mesh and different noise parameters. It's rendering way different on the web editor. Not entirely sure what I've created here...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet r;\nlet total = 100;\nlet x, y, z;\nlet globe = [];\n\n\nfunction setup() {\n\n  createCanvas(windowWidth, windowHeight, WEBGL);\n\n// colorMode(HSB);\n  for(let i = 0; i < total; i++){\n    globe[i] = [];\n  \n  for(let j = 0; j < total; j++){\n    globe[i][j] = 0;\n  }\n  }\n\n}\n\nfunction draw() {\n  // perspective(60 * PI/180, width/height, 1, 5000);\n  background(0);\n  // fill(255);\n\n  r = 220;\n\n  for(let i =0; i < total; i++){\n    let lat = map(i, 0, total +1, -HALF_PI, HALF_PI);\n    for(let j = 0; j< total +1; j++){\n      let lon = map(j, 0, total, -PI, PI);\n      x = r * sin(lon) * cos(lat);\n      y = r * sin(lon) * sin(lat);\n      z = r * cos(lon);\n\n      globe[i][j] = new createVector(x,y,z);\n    }\n  }\n  fill(255,0,0, 150);\n  stroke(255);\n  strokeWeight(4);\nrotateX(PI/2.5);\n// rotateY(PI/2);\n  for(let i =0; i < total; i ++){\n    beginShape(TRIANGLE_STRIP);\n    for(let j = 0; j< total + 1; j++){\n\n      // let n = noise(i, millis() * 0.001);\n      let n = noise(j, millis() * 0.001);\n      // let n = noise(i, j, millis() *0.001);\n\n      // let nX = noise(j, millis()*0.001);\n      let nx = noise(i, millis()*0.001);\n      // let nx = noise(i, j, millis()*0.001);\n\n\n      let v1 = globe[i][j];\n      \n      vertex(v1.x, v1.y, v1.z * n);\n      // let v2 = globe[i + 1][j];\n      vertex(v1.x + 1, v1.y + 1, (v1.z + 1) * n);\n    }\n    endShape();\n  }\n}"
  },
  {
    "_id": "4Fio6o8W7osbzB3Fe",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:17:16.242Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ojpipszczf7i7k01ioid",
        "version": 1553879848,
        "signature": "4c2aebbcd291eefff728003632096979be4cfa54",
        "width": 964,
        "height": 964,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T17:17:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 41467,
        "type": "upload",
        "etag": "037d68f2524ca847582591db59f171c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553879848/avalanche2019/ojpipszczf7i7k01ioid.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553879848/avalanche2019/ojpipszczf7i7k01ioid.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "78751",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 86165,
        "duration": 3.85,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T17:37:57.853Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-03-29T18:29:18.566Z" }
      }
    ],
    "title": "",
    "description": "Sorry",
    "inspiration_name": "paper js example",
    "inspiration_url": "http://paperjs.org/"
  },
  {
    "_id": "4GbeY6W4WYfgBkjg5",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:49:56.802Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dh6tfu6o6mveycdaqpom",
        "version": 1552063834,
        "signature": "c81838c4cca08e1bdbc84c7b4edbf13c7420e376",
        "width": 882,
        "height": 886,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:50:34Z",
        "tags": [],
        "bytes": 412191,
        "type": "upload",
        "etag": "2b5471482c351d15809f6f8fb9402e28",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063834/avalanche2019/dh6tfu6o6mveycdaqpom.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063834/avalanche2019/dh6tfu6o6mveycdaqpom.png"
      },
      {
        "public_id": "avalanche2019/df8kpmnqleraf6tcnkid",
        "version": 1552063887,
        "signature": "15e0bde1bbc6a8f0d1e425219db7ddfd22b91497",
        "width": 998,
        "height": 1016,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:51:27Z",
        "tags": [],
        "bytes": 285869,
        "type": "upload",
        "etag": "72ad5c0247956dd22d77b816946e60b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063887/avalanche2019/df8kpmnqleraf6tcnkid.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063887/avalanche2019/df8kpmnqleraf6tcnkid.png"
      },
      {
        "public_id": "avalanche2019/zofvhd1x1rmvpjv21qev",
        "version": 1552063894,
        "signature": "9fb829648c8a992bf0659512b25109648e95249b",
        "width": 664,
        "height": 654,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:51:34Z",
        "tags": [],
        "bytes": 350833,
        "type": "upload",
        "etag": "6c496be6fa1fbf4921c8cf222c530626",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063894/avalanche2019/zofvhd1x1rmvpjv21qev.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063894/avalanche2019/zofvhd1x1rmvpjv21qev.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T16:57:34.275Z" }
      }
    ],
    "title": "",
    "description": "CHALLANGE:  GENERATIONAL DOG BREEDING: \n1. Using the same structure as my previous dog breeding equation \n2. I run this program twice and get two results \n3. I then take the  two results and feed it them  into the equation (changing the tiling numbers and the random seed and input ) and get two new results \n4. Go to 2 and repeat \n\nImage 1 is a result of 4th generation breeding \nAs you could imagine with the individual pixel processing of all of these images (even with getQuick function ) this took about 40 minutes to produce this outcome \n\n-second and third images are 1 from generations 2 and 3",
    "inspiration_name": "CHALLANGE",
    "code": "ar face1, face2;\n\nvar tileDivisions = 100;\nvar tileSize;\nvar tilePosX;\nvar tilePosY;\n\n//setting up texture variables \n\nfunction preload() {\n    face1 = loadImage(\"gen2_ONE.png\");\n    face2 = loadImage(\"gen2_TWO.png\");\n\n    noLoop();\n}\n\nfunction setup() {\n    createCanvas(300, 800);\n    face1.loadPixels();\n    face2.loadPixels();\n    background(255);\n    fill(255, 0, 0);\n    noStroke();\n    colorMode(RGB, 255, 255, 255);\n\n    //texture set up \n}\n\nfunction draw() {\n    // set drawing styles\n    // drawScreen()\n    // drawScreen(person2);\n    drawMerged();\n    noLoop();\n    // noSmooth();\n}\n\nfunction drawMerged() {\n    let merged = mergeImages();\n\n    let posX = 0;\n    let posY = 0;\n    let counter = 0;\n    for (let i = 0; i < merged.length; i++) {\n        if (i % tileDivisions == 0) {\n            // if (i == 10 || i == 20 || i == 30 || i == 40 || i == 50 || i == 60 || i == 70 || i == 80 || i == 90) {\n            posY += tileHeight - 1;\n            posX = 0;\n        }\n        image(merged[i], posX, posY, merged[i].width, merged[i].height);\n        console.log(merged[i]);\n        console.log(posX);\n        console.log(posY);\n        posX += tileWidth - 1;\n    }\n}\n\n\nfunction mergeImages() {\n\n    let image1Tiles = createImageTiles(face1);\n    let image2Tiles = createImageTiles2(face2);\n    console.log(image1Tiles);\n    console.log(image2Tiles);\n    let mergedTiles = [];\n    for (let i = 0; i < image1Tiles.length; i++) {\n        let r = random(2);\n        console.log(r);\n        if (r > .8) {\n            mergedTiles.push(image1Tiles[i]);\n        } else {\n            mergedTiles.push(image2Tiles[i]);\n        }\n\n    }\n    // console.log(mergedTiles);\n    return mergedTiles;\n}\n\nfunction createImageTiles(img) {\n    tileWidth = img.width / tileDivisions;\n    tileHeight = img.width / tileDivisions;\n    let tiles = [];\n    let row, column;\n    for (column = 0; column < tileDivisions; column++) {\n        for (row = 0; row < tileDivisions; row++) {\n            tile = create1Tile(face1, tileWidth, tileHeight, row, column);\n            tiles.push(tile);\n        }\n    }\n    console.log(tiles);\n    // img.updatePixels();\n    return tiles;\n}\n\nfunction createImageTiles2(img) {\n    tileWidth = img.width / tileDivisions;\n    tileHeight = img.width / tileDivisions;\n    let tiles = [];\n    let row, column;\n    for (column = 0; column < tileDivisions; column++) {\n        for (row = 0; row < tileDivisions; row++) {\n            tile = create1Tile2(face2, tileWidth, tileHeight, row, column);\n            tiles.push(tile);\n        }\n    }\n    // }\n    console.log(tiles);\n    // img.updatePixels();\n    return tiles;\n}\n\nfunction create1Tile(img, tileWidth, tileHeight, row, column) {\n    tile = createImage(int(tileWidth), int(tileHeight));\n    tile.loadPixels();\n    for (y = 0; y < tile.height; y++) {\n        for (x = 0; x < tile.width; x++) {\n            let pixelX = int(x + row * tileWidth);\n            // console.log(pixelX);\n            let pixelY = int(y + column * tileWidth);\n            // console.log(pixelY);\n            pixelValue = getQuick(img, pixelX, pixelY);\n            let light = lightness(pixelValue);\n            console.log(light);\n            let depth = map(light, 0, 100, 0, 255);\n\n            // let r = getQuick(img, pixelX, pixelY)[0];\n            // let g = getQuick(img, pixelX, pixelY)[1];\n            // let b = getQuick(img, pixelX, pixelY)[2];\n            // let c = color(r, g, b);\n            // console.log(r);\n            let c = color(depth);\n            console.log(c);\n            tile.set(x, y, c);\n        }\n    }\n    tile.updatePixels();\n    return tile;\n}\n\nfunction create1Tile2(img, tileWidth, tileHeight, row, column) {\n    tile = createImage(int(tileWidth), int(tileHeight));\n    tile.loadPixels();\n    for (y = 0; y < tile.height; y++) {\n        for (x = 0; x < tile.width; x++) {\n            //get the pixel color values \n            //make a color for that \n            //set image with that pixel \n            let pixelX = int(x + row * tileWidth);\n            // console.log(pixelX);\n            let pixelY = int(y + column * tileWidth);\n            // console.log(pixelY);\n            pixelValue = getQuick2(img, pixelX, pixelY);\n            let light = lightness(pixelValue);\n            console.log(light);\n            let depth = map(light, 0, 100, 0, 255);\n            // let r = getQuick2(img, pixelX, pixelY)[0];\n            // let g = getQuick2(img, pixelX, pixelY)[1];\n            // let b = getQuick2(img, pixelX, pixelY)[2];\n            // let c = color(r, g, b);\n            // console.log(r);\n            let c = color(depth);\n            console.log(c);\n            tile.set(x, y, c);\n        }\n    }\n    tile.updatePixels();\n    return tile;\n}\n\n//get quick function by Justin Bakse\nfunction getQuick(img, x, y) {\n    var i = (y * img.width + x) * 4;\n    return [\n        face1.pixels[i],\n        face1.pixels[i + 1],\n        face1.pixels[i + 2],\n        face1.pixels[i + 3],\n    ];\n}\n\nfunction getQuick2(img, x, y) {\n    var i = (y * img.width + x) * 4;\n    return [\n        face2.pixels[i],\n        face2.pixels[i + 1],\n        face2.pixels[i + 2],\n        face2.pixels[i + 3],\n    ];\n}"
  },
  {
    "_id": "4HhRr4TyW2wSRmwkZ",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T16:36:36.289Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fgfjdbhmyshhc33z0iot",
        "version": 1556296641,
        "signature": "c074a0468b32532b100d489f2968ea91c9843103",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T16:37:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 5482862,
        "type": "upload",
        "etag": "1f3f6cf9d8bdc4cb8631188ef440d191",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556296641/avalanche2019/fgfjdbhmyshhc33z0iot.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556296641/avalanche2019/fgfjdbhmyshhc33z0iot.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "125548",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1272702",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 1431995,
        "duration": 30.6306,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Been playing around in Logic this week using programmed drums, and adding digital effects to a few recorded guitar riffs (trimmed length gave me a/v syncing issues)"
  },
  {
    "_id": "4KXQgZCN9uKCyLoPw",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T18:06:27.173Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "4LbDn3WN2Gju8xxjX",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-01-27T18:50:50.748Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tnkw0gufxfganh4kk9mi",
        "version": 1548615071,
        "signature": "698682b865e9b693c73c357794c6537927072961",
        "width": 2016,
        "height": 1242,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-27T18:51:11Z",
        "tags": [],
        "bytes": 538000,
        "type": "upload",
        "etag": "e3dfa19da24c57efc52dc5c752341b18",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548615071/avalanche2019/tnkw0gufxfganh4kk9mi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548615071/avalanche2019/tnkw0gufxfganh4kk9mi.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Classmate Tile Set"
  },
  {
    "_id": "4NCQbscCB8BKwHtCE",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-01T23:07:43.16Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rnb6r0qfwtmjdcuq4cqh",
        "version": 1554160261,
        "signature": "f8e78069f9e32bd656c610415cd826824cc140e7",
        "width": 960,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-01T23:11:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 11389121,
        "type": "upload",
        "etag": "7cfa12815ce664dce9863634281c4723",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554160261/avalanche2019/rnb6r0qfwtmjdcuq4cqh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554160261/avalanche2019/rnb6r0qfwtmjdcuq4cqh.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2250",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "5458089",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 5466777,
        "duration": 16.666667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qpatteo3qlqamwdtgcir",
        "version": 1554160277,
        "signature": "ffef48707d7bc8233beaf2e531d2e98a694bfd8d",
        "width": 960,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-01T23:11:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 11384626,
        "type": "upload",
        "etag": "80ba9af70d40b5925869fd7be1d96cf3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554160277/avalanche2019/qpatteo3qlqamwdtgcir.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554160277/avalanche2019/qpatteo3qlqamwdtgcir.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2250",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "5455993",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 5464620,
        "duration": 16.666667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-06T02:43:28.727Z" }
      }
    ],
    "title": "",
    "description": "Noisy Daffodil. First with color, second without.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n\nlet x, y;\nlet radius;\nlet col = [];\n\nlet circles = [];\nlet alpha;\n\nlet dirX, dirY;\nlet angle;\nlet xOffset, yOffset;\n\nlet width = 960;\nlet height = 720;\n\nlet noiseVal = 0;\nlet bigRadius;\n\nlet EXPORT = false;\n\nfunction setup() {\n  angleMode(DEGREES);\n  frameRate(2);\n  createCanvas(width, height);\n  radius = 10;\n\n  for (let i = 0; i < 7700; i++) {\n    alpha = random(1, 100);\n    col[i] = color(255, alpha);\n    circles[i] = new Circle();\n  }\n}\n\nfunction draw() {\n  background(0);\n  console.log(frameCount);\n  // fill(0, 15);\n  // rect(0, 0, width, height);\n\n  for (let i = 0; i < circles.length; i++) {\n    fill(col[i]);\n    // circles[i].update();\n    circles[i].drawCircle();\n  }\n  bigRadius = 400 * noise(noiseVal);\n  noiseVal += 0.1;\n\n  if (EXPORT) {\n    saveFrame(\"EXPORT\", frameCount, \"jpg\", 250);\n  }\n  if (frameCount > 250) {\n    noLoop();\n  }\n}\n\nfunction Circle() {\n  let centeroff = width / 2 + random(-100, 100) * TWO_PI;\n  // bigRadius *= noise(noiseVal);\n\n  // this.x = (width / 2) * cos(TWO_PI) + random(-200, 200);\n  // this.y = (height / 2) * sin(TWO_PI) + random(-200, 200);\n\n  this.drawCircle = function() {\n    let r = bigRadius * sqrt(random());\n\n    this.x = r * cos(centeroff) + width / 2;\n    this.y = r * sin(centeroff) + height / 2;\n    angle = random(360);\n    let distance = random(10);\n    xOffset = cos(angle) * distance;\n    yOffset = sin(angle) * distance;\n    noStroke();\n\n    ellipse(this.x + xOffset, this.y + yOffset, radius, radius);\n  };\n}\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n    return;\n  }\n\n  if (!extension) {\n    extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "4b3wNGkKEp8azkZfv",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T02:23:45.751Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sj5ykh6618kpizbfkyww",
        "version": 1548901437,
        "signature": "24283d6751dd0a3863495e859ab7ca80c9540abd",
        "width": 3001,
        "height": 3004,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T02:23:57Z",
        "tags": [],
        "bytes": 126670,
        "type": "upload",
        "etag": "10553d25cbff0f985b560545c623872c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548901437/avalanche2019/sj5ykh6618kpizbfkyww.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548901437/avalanche2019/sj5ykh6618kpizbfkyww.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:48.226Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:06:00.703Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T23:01:50.096Z" }
      }
    ],
    "title": "",
    "inspiration_name": "بتول"
  },
  {
    "_id": "4bD3jnsDGDjF7oF8N",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:36:05.874Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wksljvyp1xqvxar9xqaa",
        "version": 1554485794,
        "signature": "69b3b5fe6832c2ba0669d1bab235ac4ea6235b59",
        "width": 900,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T17:36:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 5840858,
        "type": "upload",
        "etag": "54b62ab98b83beb7e424b7746e950e98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554485794/avalanche2019/wksljvyp1xqvxar9xqaa.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554485794/avalanche2019/wksljvyp1xqvxar9xqaa.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "247203",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "5681538",
          "dar": "5:4"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 5939855,
        "duration": 7.866667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-05T17:41:53.609Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-06T02:45:22.922Z" }
      }
    ],
    "title": "",
    "description": "?",
    "inspiration_name": "Jimothy Lacoste",
    "inspiration_url": "https://www.youtube.com/watch?v=FvGpoKhTbVA"
  },
  {
    "_id": "4buYxuj6mfN2748im",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T14:52:38.193Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kquwfufyqfxhqmq3qa18",
        "version": 1556895165,
        "signature": "cb13aa722108b7d94c696baa3f47d4f11e22663a",
        "width": 960,
        "height": 544,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-03T14:52:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 9074076,
        "type": "upload",
        "etag": "28f594be87b174d16d3358ee01619594",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556895165/avalanche2019/kquwfufyqfxhqmq3qa18.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556895165/avalanche2019/kquwfufyqfxhqmq3qa18.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "47219",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1214710"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1266886,
        "duration": 57.3,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:31:37.215Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:44:17.677Z" }
      }
    ],
    "title": "",
    "description": "3D Breathing origami II (with balloon inside, and failed)"
  },
  {
    "_id": "4ecbwntFMTGLAhwnD",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-03-30T21:59:02.168Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ozzblnczpjetshlcdqmy",
        "version": 1553983551,
        "signature": "856ebadef4ebf26b88e0b33f77aac147be72a342",
        "width": 1418,
        "height": 786,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-30T22:05:51Z",
        "tags": [],
        "bytes": 33138,
        "type": "upload",
        "etag": "df1aad0d29a6d053916518c198994f66",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553983551/avalanche2019/ozzblnczpjetshlcdqmy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553983551/avalanche2019/ozzblnczpjetshlcdqmy.jpg"
      },
      {
        "public_id": "avalanche2019/du2fkyb2s9o2bb8lk6vx",
        "version": 1553983772,
        "signature": "4272dfe8ace7976083a2a0f479915fe3233a59d2",
        "width": 1408,
        "height": 792,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-30T22:09:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 11195209,
        "type": "upload",
        "etag": "f295ec598f72acd358b7450ae67dbd2d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553983772/avalanche2019/du2fkyb2s9o2bb8lk6vx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553983772/avalanche2019/du2fkyb2s9o2bb8lk6vx.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1768647",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1777605,
        "duration": 50.383333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "This didn’t go as planned. It’s real-time animation, because more spheres didn’t look nicer and tried to make it loosely in sync with a waltz, but was hard to make transitions smooth.",
    "inspiration_name": "p5 3D sine example",
    "inspiration_url": "https://p5js.org/examples/3d-sine-cosine-in-3d.html",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar action = 3;\nvar counter = 0; \nvar width = 710;\nvar height = 400;\nvar EXPORT = false;\nvar maxFrame = 1500; \nfunction setup() {\n  createCanvas(710, 400, WEBGL);\n}\n\nfunction draw() {\n  frameRate(30)\n  background(235);\n  ambientLight(220);\n  \n  let locX = sin(frameCount*0.01)*height - height / 2;\n  let locY = cos(frameCount*0.01)*width - width / 2;\n  pointLight(255, 255, 255, locX, locY, 100);\n\n  \n  counter += action * 0.1;\n  rotateZ(counter * 0.01);\n  rotateX(counter * 0.1);\n  rotateY(counter * 0.01);\n\n  \n\n\n  for (let j = 0; j < 10; j++) {\n    push();\n    for (let i = 0; i < 80; i++) {\n      translate(\n        cos(frameCount * 0.005) * 100,\n        cos(frameCount * 0.005) * 100,\n        cos(cos(frameCount*0.005)+i * 0.002)\n      );\n      rotateZ(counter * 0.0008);\n      push();\n      noStroke();\n      specularMaterial(255);\n      sphere(20);\n      pop();\n    }\n    pop();\n  }\n  if (EXPORT) {\n    saveFrame(\"EXPORT\", frameCount, \"jpg\", maxFrame);\n  }\n  // if (frameCount > maxFrame) {\n  //     noLoop();\n  // }\n}\n\nfunction keyPressed() {\n  if (keyCode === UP_ARROW) {\n    action++\n  } else if (keyCode === DOWN_ARROW) {\n    action--\n  }\n  console.log(action);\n}\n\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n    return;\n  }\n\n  if (!extension) {\n    extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "4n3z4vkCrbtRMwovo",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T04:18:51.823Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/c2d1928rtvnoclqvjjpy",
        "version": 1553746771,
        "signature": "b83c6f669b17d06639e757e3ada193eb88b39e89",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T04:19:31Z",
        "tags": [],
        "bytes": 394207,
        "type": "upload",
        "etag": "8499b5353d7145a8139542a1fa0e4dd3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553746771/avalanche2019/c2d1928rtvnoclqvjjpy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553746771/avalanche2019/c2d1928rtvnoclqvjjpy.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Inspired by the in-class challenge. Square that increases in size and rotates to create spiral",
    "inspiration_name": "In-Class Challenge"
  },
  {
    "_id": "4qCdBSz6SYEvhCyGP",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-10T22:15:46.476Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aitp2lob6nlfthvvvaii",
        "version": 1549836955,
        "signature": "6531dc43586e7c58864c8946b1fa9c1cb73b9d0e",
        "width": 1284,
        "height": 1358,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-10T22:15:55Z",
        "tags": [],
        "bytes": 152548,
        "type": "upload",
        "etag": "d12dd9456a91dd1cf05b360ddc7da68a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549836955/avalanche2019/aitp2lob6nlfthvvvaii.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549836955/avalanche2019/aitp2lob6nlfthvvvaii.png"
      },
      {
        "public_id": "avalanche2019/nau7ksltcendp9r0rzrl",
        "version": 1549836967,
        "signature": "5ea73cfd0c40dff2ffd56877f205659e2bc705dd",
        "width": 1258,
        "height": 1360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-10T22:16:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 6153313,
        "type": "upload",
        "etag": "0c8a213b95ee495743562e47136135bc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549836967/avalanche2019/nau7ksltcendp9r0rzrl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549836967/avalanche2019/nau7ksltcendp9r0rzrl.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "9001823",
          "dar": "37:40"
        },
        "frame_rate": 15,
        "bit_rate": 9004847,
        "duration": 5.466667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-02-10T22:19:14.102Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-10T22:30:32.349Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-02-11T01:49:00.51Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "funny",
        "created_at": { "$date": "2019-02-11T16:08:57.114Z" }
      }
    ],
    "title": "",
    "description": "Emojis fall from the sky based on mood parameter (dropdown option)\n---\n\n`made with p5`",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet selector, happy, sad, hippo;\nlet emoji = 0;\nlet paused = false;\n\nlet emotions = [];\nlet shapes = [];\n\nfunction preload() {\n  happy = loadImage(\n    \"https://raw.githubusercontent.com/AndrewLevinson/comp-form/master/week3/sketch-1/happy.png\"\n  );\n  emotions.push(happy);\n  sad = loadImage(\n    \"https://raw.githubusercontent.com/AndrewLevinson/comp-form/master/week3/sketch-1/sad.png\"\n  );\n  emotions.push(sad);\n  hippo = loadImage(\n    \"https://raw.githubusercontent.com/AndrewLevinson/comp-form/master/week3/sketch-1/hippo.png\"\n  );\n  emotions.push(hippo);\n}\n\nclass Shape {\n  constructor(x, y, r) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n  }\n}\n\nfunction setup() {\n  // create select\n  createP(`It's rainning moods and I'm feelin'...`);\n  selector = createSelect();\n  selector.option(\"Happy\", \"happy\");\n  selector.option(\"Sad\", \"sad\");\n  selector.option(\"Like a Hippo\", \"hippo\");\n  createP(\" \");\n\n  createCanvas(600, 600, WEBGL);\n  colorMode(HSB, 100);\n  background(color(30, 15, 95));\n}\n\nfunction draw() {\n  frameRate(30);\n  moveStuff();\n  drawStuff();\n}\n\nfunction moveStuff() {\n  for (const b of shapes) {\n    b.x += 0.4;\n    b.y++;\n  }\n}\n\nfunction drawStuff() {\n  translate(-300, -300);\n\n  shapes.push(new Shape(Math.random() * 500, 0, Math.random() * 30));\n\n  noStroke();\n  background(color(30, 15, 95));\n\n  if (selector.value() === \"happy\") {\n    emoji = 0;\n    background(80, 15, 95);\n  } else if (selector.value() === \"sad\") {\n    emoji = 1;\n    background(0, 10, 10);\n  } else if (selector.value() === \"hippo\") {\n    emoji = 2;\n    background(30, 15, 95);\n  }\n\n  for (const b of shapes) {\n    texture(emotions[emoji]);\n    ellipse(b.x, b.y, b.r);\n  }\n}\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < 400 && mouseY > 0 && mouseY < 400) {\n    paused ? loop() : noLoop();\n    paused = !paused;\n  }\n}"
  },
  {
    "_id": "4xKwQHWD4pf2YAAG6",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T16:43:31.037Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x2koszhrirzqen0g49we",
        "version": 1557506627,
        "signature": "faa34c5ed5ac94d6c95c9bbe7926ea4f2830a942",
        "width": 600,
        "height": 300,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-10T16:43:47Z",
        "tags": [],
        "bytes": 29439,
        "type": "upload",
        "etag": "a3350403922f6a86f01ee6992764ab60",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557506627/avalanche2019/x2koszhrirzqen0g49we.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557506627/avalanche2019/x2koszhrirzqen0g49we.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Swat! pong"
  },
  {
    "_id": "4zwMNY7WhCu6k2y9c",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:32:38.612Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Getting started with the class example, added reversed measures and more variance in the note lengths",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\n\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n  // Play the melody!\n\n  const melody = generate();\n  play(melody);\n};\n\nconst cmajor = ['C3', 'D3', 'E3', 'F3', 'G3', 'A3', 'B3'];\nconst cminor = ['E3', 'F#3', 'G3', 'A3', 'B3', 'C3', 'D3'];\nconst notes = cminor;\n\nlet degree = 0;\n\nfunction generate() {\n  // choose a starting place\n  degree = randomInt(0, 7);\n\n  // generate some measures\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  const ar = a.reverse()\n  const br = b.reverse()\n  // last note should be the tonic\n  c[c.length - 1][0] = notes[0];\n\n  // arrange the measures and return\n  return [].concat(a, b, br, ar, a, c);\n}\n\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time('1m');\n\n  while (timeLeft.toSeconds() > 0) {\n    // choose note\n    const change = sample([1, -1, -2, 2, -2, 3, -3, 3, -2]);\n    degree = constrain(degree + change, 0, 6);\n    const note = notes[degree];\n\n    // choose length\n    let length = Tone.Time('8n');\n    if (Math.random() < 0.2) {\n      length = Tone.Time('2n');\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n\n    // keep track of time\n    timeLeft = Tone.Time(timeLeft - length);\n\n    // add the note to the melody\n    m.push([note, length]);\n  }\n\n  return m;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.105, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\nconsole.log('click for music!');\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}"
  },
  {
    "_id": "54eTEcoMGGxDh6gCJ",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T04:33:46.018Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lnngq0u8awkxvqeemh00",
        "version": 1554957320,
        "signature": "c0fab626d43c503897b01053f9870a5ada268bbb",
        "width": 796,
        "height": 1170,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-11T04:35:20Z",
        "tags": [],
        "bytes": 131316,
        "type": "upload",
        "etag": "5e0d7181643b56bbacfeac9afc92bcb3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554957320/avalanche2019/lnngq0u8awkxvqeemh00.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554957320/avalanche2019/lnngq0u8awkxvqeemh00.jpg"
      },
      {
        "public_id": "avalanche2019/o1n4xp1vlul31frtuknr",
        "version": 1554957768,
        "signature": "4c56434ee04407aaaa750187593e90c32f2aa3d0",
        "width": 806,
        "height": 1158,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-11T04:42:48Z",
        "tags": [],
        "bytes": 147222,
        "type": "upload",
        "etag": "408dc128e1eeb9ca94df32a6784da923",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554957768/avalanche2019/o1n4xp1vlul31frtuknr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554957768/avalanche2019/o1n4xp1vlul31frtuknr.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T16:51:32.079Z" }
      }
    ],
    "title": "",
    "description": "Starting with the weekly challenge, using tracery and trying an exposition right now.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// require /text/tracery.min.js\n\nvar link = document.createElement('link');\nlink.setAttribute('rel', 'stylesheet');\nlink.setAttribute('type', 'text/css');\nlink.setAttribute('href', 'https://fonts.googleapis.com/css?family=Petit+Formal+Script');\ndocument.head.appendChild(link);\n\ndocument.body.style.background = \"#444\";\ndocument.body.style.color = \"#eee\";\n\nconst storyGrammar = {\n  'top': ['#div#'],\n  'div': ['<div style=\"text-align: center; font-family: Petit Formal Script, cursive; font-size: 30px; margin: 10px; width: 300px; margin: auto;\">#content#</div>'],\n  'content': ['#story#'],\n  'story': ['#beginning#'],\n  'beginning': ['<section>#beginning-content#</section>'],\n  'beginning-content': ['<p>#beginning-starter#.</p> <p>#beginning-hero-introduction#</p>'],\n  'beginning-starter': ['It was a dark and stormy night #add-night# #scene#'],\n    'add-night': ['and it was only 37.4 °F', 'and it was raining #scene-domain-attr# #scene-domain#', 'and it was snowing'],\n    'scene': ['in the #scene-attr# #scene-place# of #scene-domain-attr# #scene-domain#'],\n    'scene-attr': ['cloudy', 'gloomy', 'dull', 'misty', 'foggy', 'murky', 'shadowy'],\n    'scene-place': ['desert', 'wilderness', 'barren land', 'solitude', 'forest', 'jungle', 'swampland'],\n    'scene-domain-attr': ['abstract', 'empty', 'shallow', 'broken', 'haunted', 'crumbled', 'ruptured'],\n    'scene-domain': ['words', 'sentences', 'grammars', 'computations', 'methods', 'functions', 'objects', 'variables', 'circles', 'shapes', 'forms', 'patterns', 'figures', 'canvasses', 'symmetry'],\n  'beginning-hero-introduction': ['When suddenly our hero, #hero-name#, enters the scene.'],\n    'hero-name': ['the #hero-adj# greeting “hello #hero-adj# world!”', 'a #hero-adj# #hero-adj# circle', 'a #hero-adj# Java-Script library to create #scene-attr# #scene-domain#', ' a pile of #scene-domain# dragged through the #hero-adj# iterations of a for-loop'],\n    'hero-adj': ['bleak', 'tired', 'desolate', 'grim', 'mundane', 'generic'],\n  'incident': [''],\n  'middle': [''],\n  'end': [''],\n  'character': [''],\n  'relationship': [''],\n  'action': [''],\n  'victim-name': [],\n  'victim-adj': []\n}\n\n\nfunction main() {\n  let grammar = tracery.createGrammar(storyGrammar);\n  let story = grammar.flatten('#top#');\n\n  const storyDiv = document.createElement('div');\n  storyDiv.innerHTML = story;\n\n  document.body.insertAdjacentElement('beforeend', storyDiv);\n\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "5962yeHW2hLoibTcu",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-30T05:17:14.701Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zisi6indqcwzk0wbupth",
        "version": 1548825613,
        "signature": "8e53d2f37b6bd6014b2f39790ef70ee85618eb82",
        "width": 1604,
        "height": 1610,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-30T05:20:13Z",
        "tags": [],
        "bytes": 397100,
        "type": "upload",
        "etag": "c52ea5cae2655a2b8899c489203d2eb1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548825613/avalanche2019/zisi6indqcwzk0wbupth.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548825613/avalanche2019/zisi6indqcwzk0wbupth.jpg"
      },
      {
        "public_id": "avalanche2019/zenyotlzuoip60ygltxs",
        "version": 1548825618,
        "signature": "6a9cd5f9d059d9b6ba0951704305dba4063f6a3a",
        "width": 1608,
        "height": 1604,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-30T05:20:18Z",
        "tags": [],
        "bytes": 313891,
        "type": "upload",
        "etag": "e7f13299f48203418110ead8686bf249",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548825618/avalanche2019/zenyotlzuoip60ygltxs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548825618/avalanche2019/zenyotlzuoip60ygltxs.jpg"
      },
      {
        "public_id": "avalanche2019/nj4xse725qlht9jovcy9",
        "version": 1548825624,
        "signature": "7be03d1b3ed249403a5a6ec6f3b901108b15eedd",
        "width": 802,
        "height": 594,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-30T05:20:24Z",
        "tags": [],
        "bytes": 34056,
        "type": "upload",
        "etag": "bb28ee76bfeb5a2031f2708202d9f887",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548825624/avalanche2019/nj4xse725qlht9jovcy9.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548825624/avalanche2019/nj4xse725qlht9jovcy9.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:56.518Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:06.934Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:22.316Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:12.15Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:16.857Z" }
      }
    ],
    "title": "",
    "description": "These tiles know about their surroundings (except the last one, that was an earlier stage). The first one is weighted towards more connections the second one favors less connections.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nconst tileSize = 40;\nconst gridW = 20;\nconst gridH = 20;\nconst w = gridW * tileSize;\nconst h = gridH * tileSize;\nlet tileMatrix = Array(gridW * gridH);\ntileMatrix.fill([2, 2, 2, 2]);\nlet tiles = [];\nlet currentPos = {\n  x: getRandomInt(gridW),\n  y: getRandomInt(gridH)\n};\n\nlet index = 0;\nlet myStop = false;\n\nconst connectFactor = 0.3;\nlet circleFactor = connectFactor + 0.3;\nconst offsetCorrection = (tileSize * connectFactor) / 2;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction setup() {\n  window.cBack = color(0, 180, 255, 128);\n  window.cFront = color(255, 128);\n  window.cGrid = color(255);\n  createCanvas(w, h);\n  background(250);\n  grid();\n  startLabyrinth();\n  drawLabyrinth();\n}\n\nfunction draw() {\n  frameRate(20);\n  if (myStop == false) {\n    moveAround();\n  }\n}\n\nfunction stop() {\n  myStop = true;\n}\n\nclass Tile {\n  constructor(x, y, connected) {\n    this.x = x * tileSize;\n    this.y = y * tileSize;\n    this.connected = connected;\n    this.tileIndex = y * gridW + x;\n    tileMatrix[this.tileIndex] = this.connected;\n    this.conSum = connected.reduce(getSum);\n    // console.log(this.connected, this.conSum, this.tileIndex);\n    this.draw = function() {\n      push();\n      angleMode(DEGREES);\n      translate(this.x, this.y);\n      // translate(tileSize / 2, tileSize / 2);\n      // rotate(90 * connects);\n      // translate(-tileSize / 2, -tileSize / 2);\n      fill(cBack);\n      rect(0, 0, tileSize, tileSize);\n      fill(cFront);\n\n      push();\n      translate(tileSize / 2, tileSize / 2);\n      if (this.conSum == 1) {\n        const rotateFactor = this.connected.indexOf(1);\n        // console.log(rotateFactor);\n        rotate(90 * rotateFactor);\n        translate(0, -tileSize / 2);\n        arc(0, 0, tileSize, tileSize, 0, 180);\n      }\n      if (this.conSum == 2) {\n        if (this.connected[0] == 1 && this.connected[3] == 1) {\n          // rotate(90);\n          translate(-tileSize / 2, -tileSize / 2);\n          arc(0, 0, 2 * tileSize, 2 * tileSize, 0, 90);\n        }\n        if (this.connected[0] == 1 && this.connected[1] == 1) {\n          rotate(90);\n          translate(-tileSize / 2, -tileSize / 2);\n          arc(0, 0, 2 * tileSize, 2 * tileSize, 0, 90);\n        }\n        if (this.connected[1] == 1 && this.connected[2] == 1) {\n          rotate(180);\n          translate(-tileSize / 2, -tileSize / 2);\n          arc(0, 0, 2 * tileSize, 2 * tileSize, 0, 90);\n        }\n        if (this.connected[2] == 1 && this.connected[3] == 1) {\n          rotate(270);\n          translate(-tileSize / 2, -tileSize / 2);\n          arc(0, 0, 2 * tileSize, 2 * tileSize, 0, 90);\n        }\n        if (this.connected[0] == 1 && this.connected[2] == 1) {\n          // rotate(90);\n          translate(0, -tileSize / 2);\n          arc(0, 0, tileSize, tileSize, 0, 180);\n          translate(0, tileSize);\n          rotate(180);\n          arc(0, 0, tileSize, tileSize, 0, 180);\n        }\n        if (this.connected[1] == 1 && this.connected[3] == 1) {\n          rotate(90);\n          translate(0, -tileSize / 2);\n          arc(0, 0, tileSize, tileSize, 0, 180);\n          translate(0, tileSize);\n          rotate(180);\n          arc(0, 0, tileSize, tileSize, 0, 180);\n        }\n      }\n      if (this.conSum == 3) {\n        const rotateFactor = this.connected.indexOf(0);\n        // console.log(rotateFactor);\n        rotate(90 * rotateFactor);\n        rotate(180);\n        for (let i = 0; i < 3; i++) {\n          rotate(90 * i);\n          push();\n          translate(0, -tileSize / 2);\n          arc(0, 0, tileSize, tileSize, 0, 180);\n          pop();\n        }\n      }\n      if (this.conSum == 4) {\n        translate(-tileSize / 2, -tileSize / 2);\n        for (let i = 0; i < 4; i++) {\n          translate(tileSize / 2, tileSize / 2);\n          rotate(90 * i);\n          translate(-tileSize / 2, -tileSize / 2);\n          arc(0, 0, tileSize, tileSize, 0, 90);\n        }\n      }\n      pop();\n      pop();\n    };\n  }\n}\n\nfunction startLabyrinth() {\n  noStroke();\n  // first tile\n  let initial = [];\n  for (let index = 0; index < 4; index++) {\n    initial.push(floor(random(2)));\n  }\n  // initial = [1, 1, 1, 1];\n  tiles.push(new Tile(currentPos.x, currentPos.y, initial));\n  for (let index = 0; index < 100; index++) {}\n}\n\nfunction moveAround() {\n  let next = [];\n  if (floor(random(2)) == 0) {\n    // console.log(currentPos);\n    let plusOrMinus;\n    if (currentPos.x < 1) {\n      plusOrMinus = 1;\n    } else if (currentPos.x == gridW - 1) {\n      plusOrMinus = -1;\n    } else {\n      plusOrMinus = Math.random() < 0.5 ? -1 : 1;\n    }\n    currentPos.x += plusOrMinus;\n  } else {\n    let plusOrMinus;\n    if (currentPos.y < 1) {\n      plusOrMinus = 1;\n    } else if (currentPos.y == gridH - 1) {\n      plusOrMinus = -1;\n    } else {\n      plusOrMinus = Math.random() < 0.5 ? -1 : 1;\n    }\n    currentPos.y += plusOrMinus;\n  }\n  next = getNextArray();\n  tiles.push(new Tile(currentPos.x, currentPos.y, next));\n  tiles[1].draw();\n  tiles.splice(0, 1);\n}\n\nfunction getNextArray() {\n  let next = [2, 2, 2, 2];\n  const abovePosition = { x: currentPos.x, y: currentPos.y - 1 };\n  // console.log(currentPos, abovePosition, getTileIndex(abovePosition));\n  const belowPosition = { x: currentPos.x, y: currentPos.y + 1 };\n  const leftPosition = { x: currentPos.x - 1, y: currentPos.y };\n  const rightPosition = { x: currentPos.x + 1, y: currentPos.y };\n  const myPositions = [\n    abovePosition,\n    belowPosition,\n    leftPosition,\n    rightPosition\n  ];\n\n  let myTileIndicies = myPositions.map(x => {\n    let tileIndex = getTileIndex(x);\n    if (tileIndex < 0 || tileIndex > tileMatrix.length - 1) {\n      tileIndex = floor(random(tileMatrix.length - 2));\n    }\n    return tileIndex;\n  });\n  // console.log(myTileIndicies);\n\n  const myTileConnections = myTileIndicies.map(x => tileMatrix[x]);\n\n  next[3] = myTileConnections[2][1];\n  next[2] = myTileConnections[1][0];\n  next[1] = myTileConnections[3][3];\n  next[0] = myTileConnections[0][2];\n\n  // next[2] = myTileConnections[0][0];\n  // next[2] = myTileConnections[1][1];\n  // next[1] = myTileConnections[3][3];\n\n  // console.log(myTileConnections);\n  // console.log(next);\n\n  // next = next.map(x => (x == 2 ? (x = floor(random(2))) : x));\n  next = next.map(x => {\n    if (x == 2) {\n      const randomNumber = random(10);\n      if (randomNumber < 4) {\n        x = 0;\n      } else {\n        x = 1;\n      }\n    }\n    return x;\n  });\n  // console.log(next);\n\n  return next;\n}\n\nfunction getTileIndex(posObj) {\n  tileIndex = posObj.y * gridW + posObj.x;\n  // console.log(tileIndex);\n  return tileIndex;\n}\n\nfunction drawLabyrinth() {\n  for (const tile of tiles) {\n    tile.draw();\n  }\n}\n\nfunction grid() {\n  // grid\n  for (let index = 0; index < gridW; index++) {\n    stroke(cGrid);\n    line(index * tileSize, 0, index * tileSize, h);\n  }\n  for (let index = 0; index < gridH; index++) {\n    stroke(cGrid);\n    line(0, index * tileSize, w, index * tileSize);\n  }\n}\n\n// https://www.w3schools.com/jsref/jsref_reduce.asp\nfunction getSum(total, num) {\n  return total + num;\n}"
  },
  {
    "_id": "59kirqP3ev2qHe3w9",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T02:51:26.571Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lokyfbsey5iqdtd34qpb",
        "version": 1552618301,
        "signature": "ceb81e7e8948048c1714d96c48ce8857db23bf17",
        "width": 588,
        "height": 1452,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T02:51:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 8122724,
        "type": "upload",
        "etag": "8efd8c3e15bf399104e6f5061ea9123e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552618301/avalanche2019/lokyfbsey5iqdtd34qpb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552618301/avalanche2019/lokyfbsey5iqdtd34qpb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5820671",
          "dar": "49:121"
        },
        "frame_rate": 60,
        "bit_rate": 5827963,
        "duration": 11.15,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/hggyfbukotvp0faxmz2l",
        "version": 1552618315,
        "signature": "1255ad70625aa66aa18ae8caef7785a87979e1ef",
        "width": 570,
        "height": 1428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T02:51:55Z",
        "tags": [],
        "bytes": 1365765,
        "type": "upload",
        "etag": "fb424f0ca8d870c313698240ebb9a5e3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552618315/avalanche2019/hggyfbukotvp0faxmz2l.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552618315/avalanche2019/hggyfbukotvp0faxmz2l.png"
      },
      {
        "public_id": "avalanche2019/wmqr5lgzfwlbhbqpxbge",
        "version": 1552674114,
        "signature": "f598fc221ecb5918aac55129c7544dd500eafef9",
        "width": 590,
        "height": 1192,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T18:21:54Z",
        "tags": [],
        "bytes": 2009376,
        "type": "upload",
        "etag": "2e690b0a11701a917712f15b0537e0e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552674114/avalanche2019/wmqr5lgzfwlbhbqpxbge.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552674114/avalanche2019/wmqr5lgzfwlbhbqpxbge.png"
      }
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T04:35:19.569Z" }
      }
    ],
    "title": "",
    "description": "Multiple Pentagons Drawing",
    "inspiration_name": "Woven Fabric",
    "code": "var myTurtle;\n\nfunction setup() {\n\tcreateCanvas(300, windowHeight);\n  colorMode(HSB,350);\n  frameRate();\n  background(124,118,0,95);\n\tmyTurtle = new Turtle();\n    s = 200;\n  \tb = 200;\n  \th = 200;\n}\n\nfunction draw() {\n  \n\tmyTurtle.moveTo(width / 2, height / 2);\n\n\tnoFill();\n\tstrokeWeight(.08);\n\n\t// put the pen down to draw\n\tmyTurtle.penDown();\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(25));\n\tdrawPentagon(myTurtle);\n  \n//   myTurtle.turnRight(\n//     sin(frameCount * 0.1) * 22 +\n//       cos(frameCount * 0.01) * 12 +\n//       sin(frameCount * 0.001) * 32\n//   );\n//   if (\n//     myTurtle.x > width ||\n//     myTurtle.x < 0 ||\n//     myTurtle.y > height ||\n//     myTurtle.y < 0\n//   )\n    \n    \n\n\tmyTurtle.moveTo(random(width/2), random(height/2));\n\tmyTurtle.turnTo(random(5));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width/2), random(height/2));\n\tmyTurtle.turnTo(random(5));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width/2), random(height/2));\n\tmyTurtle.turnTo(random(5));\n\tdrawPentagon(myTurtle);\n\t\n  myTurtle.penUp();\n  \n\t// put the pen down to draw\n\t//myTurtle.pushState()\n  myTurtle.penDown();\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(15));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width), random(height*PI));\n\tmyTurtle.turnTo(random(15));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(-25));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(-15));\n\tdrawPentagon(myTurtle);\n\t\n  myTurtle.penUp();\n  \n  \t// put the pen down to draw\n\tmyTurtle.penDown();\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(.5));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(-5));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(5));\n\tdrawPentagon(myTurtle);\n\n\tmyTurtle.moveTo(random(width), random(height));\n\tmyTurtle.turnTo(random(-13));\n\tdrawPentagon(myTurtle);\n  stroke(h,s,b);\n\t\n  //myTurtle.penUp();\n  //myTurtle.popState()\n\n}\n\n\n// draw a pentagon using the turtle provided\nfunction drawPentagon(t) {\n\tfor (var i = 0; i < 2; i++) {\n\t\tt.moveForward(100);\n\t\tt.turnRight(100);\n    t.moveBackward(50);\n    t.turnLeft(-100);\n    \n    \n    \n\t}\n}"
  },
  {
    "_id": "5D8siaMPuez6MTEur",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T04:01:02.649Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hwk2embmmu4qu0wwkvs6",
        "version": 1555646604,
        "signature": "bc49487ec1a96a9c2018c41092608359f0808d92",
        "width": 986,
        "height": 992,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T04:03:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 2601149,
        "type": "upload",
        "etag": "142221f7e701131b96e210154812abd8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555646604/avalanche2019/hwk2embmmu4qu0wwkvs6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555646604/avalanche2019/hwk2embmmu4qu0wwkvs6.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "105497",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "3174025",
          "dar": "493:496"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 3285662,
        "duration": 6.333333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T04:39:05.969Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T06:01:35.454Z" }
      }
    ],
    "title": "",
    "description": "Remixed Batool's sketch with Justin's bouncing ball example to try to make a beat where sounds fire when balls make contact with fft lines.",
    "inspiration_name": "Batool's fft",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n// code from FFT class example and ball bouncing example with class sound files\n\nlet fft;\nlet fft2;\nlet fft3;\n\nlet hat;\nlet kick;\nlet snare;\nlet clap;\n\nlet playing = false;\n\nfunction preload() {\n  hat = loadSound(\"/sound/sketches/hat.wav\");\n  kick = loadSound(\"/sound/sketches/kick.wav\");\n  snare = loadSound(\"/sound/sketches/snare.wav\");\n  clap = loadSound(\"/sound/sketches/clap.wav\");\n}\n\nfunction setup() {\n  createCanvas(500, 500);\n\n  // ball 1\n  x = 200;\n  y = 00;\n  dX = 5;\n  dY = 31;\n\n  // ball 2\n  x2 = 200;\n  y2 = 00;\n  dX2 = 10;\n  dY2 = 20;\n\n  // ball 3\n  x3 = 200;\n  y3 = 00;\n  dX3 = 8;\n  dY3 = 18;\n\n  fft = new p5.FFT(0, 128);\n  fft.setInput(kick);\n\n  fft2 = new p5.FFT(0, 128);\n  fft2.setInput(hat);\n\n  fft3 = new p5.FFT(0, 128);\n  fft3.setInput(clap);\n}\n\nfunction draw() {\n  background(50);\n  fill(255);\n  noStroke();\n\n  const data = fft3.waveform();\n  const data2 = fft2.waveform();\n  const data3 = fft.waveform();\n\n  for (let i = 0; i < 128; i++) {\n    const x = map(i, 0, 128, 0, 500);\n    const y = map(data2[i], -1, 1, 200, 10);\n    fill(255, 255, 56);\n    ellipse(x, y, 5, 5);\n  }\n  for (let i = 0; i < 128; i++) {\n    const x = map(i, 0, 128, 0, 500);\n    const y = map(data[i], -1, 1, 480, 10);\n    fill(255, 56, 212);\n    ellipse(x, y, 5, 5);\n  }\n  for (let i = 0; i < 128; i++) {\n    const x = map(i, 0, 128, 0, 500);\n    const y = map(data3[i], -1, 1, 760, 10);\n    fill(56, 255, 225);\n    ellipse(x, y, 5, 5);\n  }\n\n  // ball 1\n  push();\n  fill(56, 255, 225);\n  x += dX;\n  y += dY;\n\n  if (x > 495) {\n    dX = -abs(dX);\n  }\n  if (y > 375) {\n    dY = -abs(dY);\n    // insert sound at bottom level hits\n    kick.play();\n  }\n  if (x < 5) {\n    dX = abs(dX);\n  }\n  if (y < 5) {\n    dY = abs(dY);\n  }\n\n  ellipse(x, y, 10, 10);\n  pop();\n\n  // ball 2\n  push();\n  fill(255, 56, 212);\n  x2 += dX2;\n  y2 += dY2;\n\n  if (x2 > 495) {\n    dX2 = -abs(dX2);\n  }\n  if (y2 > 220) {\n    dY2 = -abs(dY2);\n    // insert sound at bottom level hits\n    clap.play();\n  }\n  if (x2 < 5) {\n    dX2 = abs(dX2);\n  }\n  if (y2 < 5) {\n    dY2 = abs(dY2);\n  }\n\n  ellipse(x2, y2, 10, 10);\n  pop();\n\n  // ball 3\n  push();\n  fill(255, 255, 56);\n  x3 += dX3;\n  y3 += dY3;\n\n  if (x3 > 495) {\n    dX3 = -abs(dX3);\n  }\n  if (y3 > 90) {\n    dY3 = -abs(dY3);\n    // insert sound at bottom level hits\n    hat.play();\n  }\n  if (x3 < 5) {\n    dX3 = abs(dX3);\n  }\n  if (y3 < 5) {\n    dY3 = abs(dY3);\n  }\n\n  ellipse(x3, y3, 10, 10);\n  pop();\n}",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?http://sketches2019.compform.net/posts/rsaudP3HZeNsgGbxi/code"
  },
  {
    "_id": "5EYxx66aWjsnMPrP3",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T23:37:06.336Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/a5epfh3goupejjpe1unp",
        "version": 1556753839,
        "signature": "61b4aa0322bf54bd8ba041a7104adae7a61d4a8d",
        "width": 1032,
        "height": 818,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T23:37:19Z",
        "tags": [],
        "bytes": 74645,
        "type": "upload",
        "etag": "7b0f8733f9107c1c765046f61eb667f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556753839/avalanche2019/a5epfh3goupejjpe1unp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556753839/avalanche2019/a5epfh3goupejjpe1unp.png"
      },
      {
        "public_id": "avalanche2019/lykra68lwc3tavm8plhf",
        "version": 1556753851,
        "signature": "91c3671103ba01a8ae51281bbfbae0a7f697c973",
        "width": 888,
        "height": 836,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T23:37:31Z",
        "tags": [],
        "bytes": 37730,
        "type": "upload",
        "etag": "7d9295a9c8c528a6fe8d56bbfa6d497c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556753851/avalanche2019/lykra68lwc3tavm8plhf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556753851/avalanche2019/lykra68lwc3tavm8plhf.png"
      },
      {
        "public_id": "avalanche2019/sspmz9favr8sanxtdcsc",
        "version": 1556753864,
        "signature": "e8348b34d69be0350bbc04c485c708505c2ae2a6",
        "width": 882,
        "height": 760,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T23:37:44Z",
        "tags": [],
        "bytes": 45614,
        "type": "upload",
        "etag": "b9b8d6c06c6a3dac374b2d1f48628e64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556753864/avalanche2019/sspmz9favr8sanxtdcsc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556753864/avalanche2019/sspmz9favr8sanxtdcsc.png"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-01T23:38:36.205Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:32:55.305Z" }
      }
    ],
    "title": "",
    "description": "Escher inspired infinite staircase"
  },
  {
    "_id": "5JrphDkExbKYsKuDX",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T03:00:31.594Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bliecsuggrmkkl2x0rvd",
        "version": 1549336123,
        "signature": "d56fb76205adac1f1f58d5bb5b5aafce9c30c179",
        "width": 798,
        "height": 592,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-05T03:08:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 642801,
        "type": "upload",
        "etag": "3770b7eb0f81a6ebcf8adf6deebe2e66",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549336123/avalanche2019/bliecsuggrmkkl2x0rvd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549336123/avalanche2019/bliecsuggrmkkl2x0rvd.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "674818",
          "dar": "399:296"
        },
        "frame_rate": 60,
        "bit_rate": 715880,
        "duration": 7.183333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/j82ds2vrevpgyeopogdc",
        "version": 1549375959,
        "signature": "dcebce63d8bcdd0cf04c81d8f97d861725fb31ca",
        "width": 798,
        "height": 592,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-05T14:12:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 133608,
        "type": "upload",
        "etag": "da35d7816c6878aa0bb03912e1ca7bc7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549375959/avalanche2019/j82ds2vrevpgyeopogdc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549375959/avalanche2019/j82ds2vrevpgyeopogdc.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "186635",
          "dar": "399:296"
        },
        "frame_rate": 60,
        "bit_rate": 235778,
        "duration": 4.533333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A twitchy eye of Sauron. Playing with Perlin noise and Dan Shiffman. So, how do I post the sketch so it plays in the tool?",
    "code": "var xoff1 = 0;\nvar xoff2 = 1000;\n\nfunction setup() {\n  createCanvas(800, 600);\n}\n\nfunction draw () {\n  background(0);\n  //fill(75, 75);\n  //rect(0, 0, 400, 600);\n  //rect(500, 0, 400, 600);\n\n  //var x = random(width);\n  var x = map(noise(xoff1), 0, 1, 0, width);\n  var y = map(noise(xoff2), 0, 1, 0, width);\n\n  xoff1 += 0.02;\n  xoff2 += 0.02;\n\n\n  fill(81,81, 61, 80);\n  ellipse(x, y, 800, 800);\n\n  noStroke();\n  fill(168, 166, 31, 35);\n  ellipse(400, 300, y, 800);\n  \n  noStroke();\n  fill(168, 166, 31, 50);\n  ellipse(400, x, y, 200);\n\n}"
  },
  {
    "_id": "5M954vqsn2mQKYgpT",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T04:16:55.018Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yrhe2yodsatep9np7zc7",
        "version": 1555561026,
        "signature": "457d292d4e4c6df3c9b52fceeff4e4e9202aaf18",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-18T04:17:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 7690546,
        "type": "upload",
        "etag": "51acebca0a4e812d31fd48bd391ee010",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555561026/avalanche2019/yrhe2yodsatep9np7zc7.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555561026/avalanche2019/yrhe2yodsatep9np7zc7.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "158587",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "324931",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 492478,
        "duration": 124.906,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/gqdbduya1lp6sy1eszyt",
        "version": 1555561199,
        "signature": "6b93edced6411ec6bcf7eed2c388af7b28bb7802",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-18T04:19:59Z",
        "tags": [],
        "bytes": 88270,
        "type": "upload",
        "etag": "cc225e773b695e5e195f264d7de6d809",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555561199/avalanche2019/gqdbduya1lp6sy1eszyt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555561199/avalanche2019/gqdbduya1lp6sy1eszyt.png"
      },
      {
        "public_id": "avalanche2019/jz2feomx0pgovilk6zn4",
        "version": 1555561205,
        "signature": "613b28630f988484c82c7e10b323745be9a954b1",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-18T04:20:05Z",
        "tags": [],
        "bytes": 134973,
        "type": "upload",
        "etag": "4314ac0a05a74c5dd23afb078fef585e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555561205/avalanche2019/jz2feomx0pgovilk6zn4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555561205/avalanche2019/jz2feomx0pgovilk6zn4.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a 2-minute piece of toy box music using Garage Band and animated it using After Effects. \nI have used colors, polar coordinates, analog, and digital waveforms, along with 3D text to achieve the visualization.",
    "inspiration_name": "Toy Box Sound Visualization",
    "inspiration_url": "https://youtu.be/iJimO9Oftqo"
  },
  {
    "_id": "5MWh6QLMvpnErqhiD",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T07:24:15.182Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ppqm6pouvz3izqm34jfy",
        "version": 1555658662,
        "signature": "1af35ac1d49f41802b2dbd45c966a4c2df2e3e5a",
        "width": 592,
        "height": 592,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T07:24:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 1944023,
        "type": "upload",
        "etag": "f6dbf297a700046480f271e273d81078",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555658662/avalanche2019/ppqm6pouvz3izqm34jfy.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555658662/avalanche2019/ppqm6pouvz3izqm34jfy.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "193212",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "708957",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 12,
        "bit_rate": 905934,
        "duration": 17.166992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// Processing\nPVector position;\nPVector velocity;\nfloat drag;\n\nimport processing.sound.*;\nSoundFile container;\nSoundFile door;\nSoundFile kitchen;\nSoundFile meow;\nSoundFile mouse;\nSoundFile water;\n\nboolean playing = false;\n\n\nvoid setup() {\n  size(600, 600);\n  container = new SoundFile(this, \"container_3.mp3\");\n  door = new SoundFile(this, \"door_1.mp3\");\n  kitchen = new SoundFile(this, \"kitchen1_5.mp3\");\n  meow = new SoundFile(this, \"meow_1.mp3\");\n  mouse = new SoundFile(this, \"mouse_1.mp3\");\n  water = new SoundFile(this, \"water_3.mp3\");\n\n  position = new PVector(100, 100);\n  velocity = new PVector(random(-5, 5), random(-5, 5));\n\n}\n\nvoid draw() {\n  fill(map(mouseX,0,width,0,255));\n  ellipse (position.x, position.y, 100, 100); \n  PVector diff = new PVector (mouseX - position.x, mouseY - position.y);\n  diff.normalize();\n  diff.mult(10);\n  position.add(diff);\n\n  if (position.x > width || position.x <0 ) {\n        kitchen.play();\n    velocity.x = -velocity.x;\n\n  }\n\n  if (position.y > height || position.y <0) {\n        kitchen.play();\n    velocity.y = - velocity.y;\n\n  }\n  \n  if (frameCount % 15 == 0) {\n    mouse.play();\n  }\n  if (frameCount % 30 == 0) {\n    water.play();\n  }\n  //if (frameCount % 90 == 0) {\n  //  kitchen.play();\n  //}\n  if (frameCount % 60 == 0) {\n    meow.play();\n  }\n  if (frameCount % 120 == 0) {\n    door.play();\n  }\n  if (frameCount % 240 == 0) {\n    container.play();\n  }\n}",
    "description": "Recorded sound in my apt to replace sounds in class drum kit example: food container, bathroom sink, cat's meowing, kitchenware, bedroom door, and mouse clicking. Placed them in different rate to generate background sound, added a sound effect every time ellipse hits the border",
    "inspiration_name": "Drum Kit example"
  },
  {
    "_id": "5QAbRK7H8q8msJCP2",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:12:39.599Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ol89eu8cqhpby8oiqa0v",
        "version": 1549649780,
        "signature": "4a1abba592cf218597be6330d9cddc3b73c5422f",
        "width": 2643,
        "height": 2504,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:16:20Z",
        "tags": [],
        "bytes": 6043921,
        "type": "upload",
        "etag": "f3a987da1533a29ffee61f58d7c5d770",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549649780/avalanche2019/ol89eu8cqhpby8oiqa0v.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549649780/avalanche2019/ol89eu8cqhpby8oiqa0v.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T18:53:44.117Z" }
      }
    ],
    "title": "",
    "description": "Random Dice"
  },
  {
    "_id": "5Rs4mLXqvXPN4kCNh",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T05:43:54.501Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fbc143kllezmd5k4bfwg",
        "version": 1550555549,
        "signature": "1fded77e0e228cdffbc7a078b51ba1202e95cc23",
        "width": 1414,
        "height": 1410,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-19T05:52:29Z",
        "tags": [],
        "bytes": 1159458,
        "type": "upload",
        "etag": "32b11de6a1f7b7ab2082af708bb26c29",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550555549/avalanche2019/fbc143kllezmd5k4bfwg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550555549/avalanche2019/fbc143kllezmd5k4bfwg.png"
      },
      {
        "public_id": "avalanche2019/wsbnixen4agd6pqgwtkj",
        "version": 1550582407,
        "signature": "e07bf39b39d1936f9cdc8d45bb50941f7efa2519",
        "width": 1432,
        "height": 1426,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-19T13:20:07Z",
        "tags": [],
        "bytes": 1555258,
        "type": "upload",
        "etag": "ba4a1c9c466f6217933ab5ea0877382c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550582407/avalanche2019/wsbnixen4agd6pqgwtkj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550582407/avalanche2019/wsbnixen4agd6pqgwtkj.png"
      },
      {
        "public_id": "avalanche2019/uwxsalkaoyrdaeeglqi7",
        "version": 1550582423,
        "signature": "516dc46785632f9922bef013e4a406279c483023",
        "width": 2254,
        "height": 3361,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-19T13:20:23Z",
        "tags": [],
        "bytes": 2092249,
        "type": "upload",
        "etag": "57d3e2ff3cb79b48ae03944e35ed34f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550582423/avalanche2019/uwxsalkaoyrdaeeglqi7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550582423/avalanche2019/uwxsalkaoyrdaeeglqi7.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T05:49:11.138Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T13:11:00.515Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T16:58:15.134Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-20T06:12:51.702Z" }
      }
    ],
    "title": "",
    "description": "First explorations in Perlin noise, without a plan.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\n// Draws concentric circles with noise(), beginShape(), endShape().\n// Refresh the sketch for a new image.\n// Credits:\n// - makeRing() function from https://www.youtube.com/watch?v=76fiD5DvzeQ.\n\nconst canvas = {\n    w: 800,\n    h: 800\n};\n\nfunction setup() {\n    createCanvas(canvas.w, canvas.h);\n\n    // line and canvas aesthetics\n    stroke(0, 0, 85);\n    background(250, 250, 250);\n    noFill();\n    strokeWeight(.15);\n    angleMode(DEGREES);\n\n    makeShape(300);\n}\n\nfunction makeRing(radius) {\n    // Uses https://www.youtube.com/watch?v=76fiD5DvzeQ, adds noise\n    beginShape();\n    for (let a = 0; a < 360; a += 1) {\n        let x = radius * sin(a) + canvas.w / 3;\n        let y = radius * cos(a) + canvas.h / 3;\n        let n = noise(x * .01, y * .001)\n        vertex(x + (radius * .7) * n, y + (radius * .7) * n);\n    }\n    endShape(CLOSE);\n}\n\nfunction makeShape(numRings) {\n    for (let i = 1; i < numRings; i += 3) {\n        makeRing(i);\n    }\n}"
  },
  {
    "_id": "5SNNe52zDzAYQKdWb",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-03-01T01:38:23.073Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r63hpqnbsmxkujaxjxqw",
        "version": 1551404310,
        "signature": "4cf8d4f28a81ec594f323ac782608d72e0076f79",
        "width": 796,
        "height": 788,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T01:38:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 3426422,
        "type": "upload",
        "etag": "3d91d4f018cae0de338ea50c4c348de9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551404310/avalanche2019/r63hpqnbsmxkujaxjxqw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551404310/avalanche2019/r63hpqnbsmxkujaxjxqw.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7110562",
          "dar": "199:197"
        },
        "frame_rate": 60,
        "bit_rate": 7119837,
        "duration": 3.85,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 1 Part2",
    "inspiration_name": "Color Strip"
  },
  {
    "_id": "5T5sMBxZqqzMSeYca",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-29T06:56:36.405Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ms6xzrccq5mebznch7od",
        "version": 1548968485,
        "signature": "f5778cc19bf291906e83c388c23a994bcf3b6bd7",
        "width": 1324,
        "height": 1098,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T21:01:25Z",
        "tags": [],
        "bytes": 366941,
        "type": "upload",
        "etag": "5e6f849e8826cab6ad62b4a231c5b39a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548968485/avalanche2019/ms6xzrccq5mebznch7od.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548968485/avalanche2019/ms6xzrccq5mebznch7od.png"
      },
      {
        "public_id": "avalanche2019/mwc8uiomso1fhbmrqzon",
        "version": 1548968499,
        "signature": "01c319a920ff95582730a3af04096090b41ad2b2",
        "width": 1248,
        "height": 1222,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T21:01:39Z",
        "tags": [],
        "bytes": 623440,
        "type": "upload",
        "etag": "64f3727483a46e2268718be9c093fdac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548968499/avalanche2019/mwc8uiomso1fhbmrqzon.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548968499/avalanche2019/mwc8uiomso1fhbmrqzon.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:04:31.212Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Felipe Pantone",
    "inspiration_url": "https://www.felipepantone.com/"
  },
  {
    "_id": "5XRDE947yHnkGmbhF",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T12:28:43.782Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ioixcfhhrwfwveuxslh5",
        "version": 1556281893,
        "signature": "1ddacb4f7b7e053c4f0c2d87de3650b5391bc337",
        "width": 1848,
        "height": 890,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T12:31:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 952177,
        "type": "upload",
        "etag": "ca6c0d4d447354e6c0690eecd95d5e59",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556281893/avalanche2019/ioixcfhhrwfwveuxslh5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556281893/avalanche2019/ioixcfhhrwfwveuxslh5.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "199528",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1481758",
          "dar": "924:445"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2320025,
        "duration": 3.283333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/azyfkvc7tgx51n4moodi",
        "version": 1556282543,
        "signature": "146ace67c109be9c729d03a492a2f6f7ef443433",
        "width": 1023,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-26T12:42:23Z",
        "tags": [],
        "bytes": 151500,
        "type": "upload",
        "etag": "d105381576d192669f195e80de381a91",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556282543/avalanche2019/azyfkvc7tgx51n4moodi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556282543/avalanche2019/azyfkvc7tgx51n4moodi.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A piano-based melody with straight-forward backbeat. I tried using Song Maker by Google Labs.\n\nhttps://musiclab.chromeexperiments.com/Song-Maker/song/6449390220738560",
    "inspiration_name": "Charlie Brown's theme song",
    "inspiration_url": "https://musiclab.chromeexperiments.com/Song-Maker/song/6449390220738560",
    "code": "<iframe width=\"560\" height=\"315\" src=\"https://musiclab.chromeexperiments.com/Song-Maker/embed/6449390220738560\" frameborder=\"0\" allowfullscreen></iframe>"
  },
  {
    "_id": "5biTEESvnPsB8XPny",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T15:58:10.108Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cknjr944m951k4wuhgfy",
        "version": 1550852070,
        "signature": "0e9789b452a5c506a2d99df1d41d68badec7563a",
        "width": 838,
        "height": 840,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T16:14:30Z",
        "tags": [],
        "bytes": 158632,
        "type": "upload",
        "etag": "361e92689f93d48cc6086017fb48e073",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550852070/avalanche2019/cknjr944m951k4wuhgfy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550852070/avalanche2019/cknjr944m951k4wuhgfy.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Vapor Wave Cloud Effect",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar inc = 0.06;\nvar density = 4;\nvar zoff = 0.0;\n \nfunction setup() {\n  createCanvas(500, 500);\n  noStroke();\n  frameRate(4);\n}\n \nfunction draw() {\n  background(0);\n  var xoff = 0.0;\n  var yoff = 0.0;\n  for (var y = 0; y < height; y += density) {\n    for (var x = 0; x < width; x += density) {\n      var r = noise(xoff, yoff, zoff) * 255;\n      var g = noise(xoff, yoff, zoff) * 100;\n      fill(r, g, 255);\n      rect(y, x, density, density);\n      xoff += inc;\n    }\n    xoff = 0;\n    yoff += inc;\n  }\n  zoff += inc;\n}"
  },
  {
    "_id": "5dm2Hw7WKHfjpuuyW",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T20:05:21.749Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uctgoerutfhn3cvowj2v",
        "version": 1549051568,
        "signature": "6420158f5274a420c98e2f5fe96fb8d811394861",
        "width": 2361,
        "height": 1837,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T20:06:08Z",
        "tags": [],
        "bytes": 262261,
        "type": "upload",
        "etag": "aa2b2d7af108818df68242a7f572a949",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549051568/avalanche2019/uctgoerutfhn3cvowj2v.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549051568/avalanche2019/uctgoerutfhn3cvowj2v.png"
      },
      {
        "public_id": "avalanche2019/gruadvxrwnmjuxxzw39f",
        "version": 1549051596,
        "signature": "43fc3e061599cd3e0d659becf7b7fa04f0149218",
        "width": 2341,
        "height": 1828,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T20:06:36Z",
        "tags": [],
        "bytes": 245460,
        "type": "upload",
        "etag": "144590cd2fb2d764fa96946f2a6551c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549051596/avalanche2019/gruadvxrwnmjuxxzw39f.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549051596/avalanche2019/gruadvxrwnmjuxxzw39f.png"
      },
      {
        "public_id": "avalanche2019/ej2tphqqlq5jwrqc0wy9",
        "version": 1549051627,
        "signature": "d8ffb9806e75c4a2c203f2a93db7d038d88150bf",
        "width": 2341,
        "height": 1586,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T20:07:07Z",
        "tags": [],
        "bytes": 316273,
        "type": "upload",
        "etag": "397c1714f48ccd1a8f7c3cfe520c45d4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549051627/avalanche2019/ej2tphqqlq5jwrqc0wy9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549051627/avalanche2019/ej2tphqqlq5jwrqc0wy9.png"
      }
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:53.627Z" }
      }
    ],
    "title": "",
    "description": "Origami Font Wall"
  },
  {
    "_id": "5hRxXeTpDpSQ4zbAA",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-26T02:35:59.306Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ouu0p1f6zoznowmm6dy6",
        "version": 1553568004,
        "signature": "7be6d54af26fd546dbd2a8af8df0353c9606ce8f",
        "width": 1164,
        "height": 1650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-26T02:40:04Z",
        "tags": [],
        "bytes": 78183,
        "type": "upload",
        "etag": "58356cf613c9ed640dc106a4f2544b17",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553568004/avalanche2019/ouu0p1f6zoznowmm6dy6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553568004/avalanche2019/ouu0p1f6zoznowmm6dy6.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T01:25:10.187Z" }
      }
    ],
    "title": "",
    "description": "I think this is going to be my poster.  \nA bit minimal, but took me a while to think of an **event:**  \nA hundred years ago there was an attempt to establish a radical basic democracy (with collective means of production) in Bavaria in Germany. Lasted for 4 weeks and was run over by the Preussian army.   \nThe text roughly translates to:  \n_**The liberation of the workers  \ncan only be the work of the workers**_  \n(it’s sounds bit nicer in German)  \nThe red text is the information on dates and place",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\nvar width = 583;\nvar height = 827;\nvar bounds = new Rectangle(new Point(0, 0), new Point(width, height));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#e9e9e9'\n\nvar center = new Point(width/2, height*0.29);\nvar points = 5;\nvar size = 250;\nvar radius1 = size*0.38;\nvar radius2 = size;\nvar path = new Path.Star(center, points, radius1, radius2);\n\npath.rotation = 180;\n// path.fillColor = '#f10000';\npath.strokeColor = '#fff'\npath.strokeWidth = 1\n\nvar lines = ['ES KANN', 'DIE BEFREIUNG', 'DER ARBEITER', 'NUR DAS WERK', 'DER ARBEITER SEIN']\n// var lines = ['Es kann', 'die Befreiung', 'der Arbeiter', 'nur das Werk', 'der Arbeiter sein']\n\nfor (var i = 0; i < lines.length; i++) {\n  var e = lines[i];\n  console.log(e,i);\n  var text = new PointText({\n    point: [width/2, height*0.25+35*i],\n    justification: 'center',\n    content: e,\n    fillColor: 'white',\n    fontFamily: 'Helvetiva',\n    fontWeight: 'bold',\n    fontSize: 35\n  });\n}\n\nlines = ['100 Jahre', 'Münchner Räterepublik', '12. April 1919 – 3. Mai 1919', 'Freistaat Bayern']\n\nfor (var i = 0; i < lines.length; i++) {\n  var e = lines[i];\n  console.log(e,i);\n  var text = new PointText({\n    point: [width/2, height*0.85+15*i],\n    justification: 'center',\n    content: e,\n    fillColor: '#e00000',\n    fontFamily: 'Futura',\n    fontWeight: 'bold',\n    fontSize: 10\n  });\n}"
  },
  {
    "_id": "5jKZf67tyPJ2CqWhP",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T17:59:27.787Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mnxxf0lva8ddktdbqmsv",
        "version": 1553795974,
        "signature": "d708ac8780b5762ff039b65f27943287d9d47a33",
        "width": 488,
        "height": 488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T17:59:34Z",
        "tags": [],
        "bytes": 258964,
        "type": "upload",
        "etag": "e04c82813dc1ea968e5e287e11b86f10",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553795974/avalanche2019/mnxxf0lva8ddktdbqmsv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553795974/avalanche2019/mnxxf0lva8ddktdbqmsv.png"
      },
      {
        "public_id": "avalanche2019/bs46efguo3dtotqgmjjc",
        "version": 1553795979,
        "signature": "bab78cf0e6b239a17258a4cceb6ce2b0b6ca7328",
        "width": 488,
        "height": 488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T17:59:39Z",
        "tags": [],
        "bytes": 283293,
        "type": "upload",
        "etag": "c50143099c9cdbffd625fc765639b95c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553795979/avalanche2019/bs46efguo3dtotqgmjjc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553795979/avalanche2019/bs46efguo3dtotqgmjjc.png"
      },
      {
        "public_id": "avalanche2019/pmsuf4qc7rhd1jnyiwzd",
        "version": 1553795982,
        "signature": "ad4f1309255a896e41a69778b20addf578616f33",
        "width": 488,
        "height": 488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T17:59:42Z",
        "tags": [],
        "bytes": 236902,
        "type": "upload",
        "etag": "6d05ab436408c19de00c02caba1ff144",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553795982/avalanche2019/pmsuf4qc7rhd1jnyiwzd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553795982/avalanche2019/pmsuf4qc7rhd1jnyiwzd.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Botanical riffs. Justin's plants are so darn cool I had to play around with that code.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n\nvar width = 600;\nvar height = 600;\nvar cluster_count = 30;\nvar cluster_radius = 130;\nvar dot_count = 70;\nvar dot_radius = 70;\n\n// var bounds = new Rectangle(new Point(0, 0), new Point(width, height));\n// var rectangle = new Path.Rectangle(bounds);\n// rectangle.fillColor = \"#EEE\";\n\ncreateClusters();\n// project.activeLayer.scale(0.25);\n\nfunction createClusters() {\n  var cluster_points = [];\n  var i;\n  for (i = 0; i < cluster_count; i++) {\n    cluster_points.push(\n      new Point(randomRange(0, width), randomRange(0, height))\n    );\n  }\n  relaxPoints(\n    cluster_points,\n    cluster_radius * 0.1,\n    false,\n    cluster_radius * 0.1,\n    10\n  );\n\n  cluster_points.sort(function(a, b) {\n    return a.y < b.y ? -1 : 1;\n  });\n  for (i = 0; i < cluster_points.length; i++) {\n    var point = cluster_points[i];\n    createCluster(point);\n  }\n}\n\nfunction createCluster(cluster_point) {\n  var dot_points = [];\n  var i;\n  for (i = 0; i < dot_count; i++) {\n    // console.log(cluster_point, cluster_point + randomPoint * cluster_radius);\n    dot_points.push(randomPoint() * cluster_radius * 0.5);\n  }\n  relaxPoints(dot_points, dot_radius * 1.4, 0, dot_radius * 0.1, 100);\n  dot_points.sort(function(a, b) {\n    return a.length < b.length ? 1 : -1;\n  });\n\n  var types = [\"leaf\", \"vine\", \"flower\", \"vine\"];\n  var type = pick(types);\n\n  if (type === \"leaf\") createLeafPlant(cluster_point, dot_points);\n  if (type === \"flower\") createFlowerPlant(cluster_point, dot_points);\n  if (type === \"vine\") createVinePlant(cluster_point, dot_points);\n}\n\nfunction createFlowerPlant(cluster_point, dot_points) {\n  base_color = new Color(0.3, 0.3, 0.5, .25);\n  tint = Math.min(randomRange(0, 0), randomRange(0, 0.2));\n  tint_color = new Color(tint, tint, tint, 0);\n  cluster_color = base_color - tint_color;\n\n//   if (chance(0.5)) {\n//     flower_color = new Color(0.7, 0.1, 0.1);\n//   } else {\n//     flower_color = new Color(2, 1, 1);\n//   }\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    if (chance(0.2)) {\n      createFlower(cluster_point, dot_point, flower_color);\n    } else {\n      createDot(cluster_point, dot_point, cluster_color);\n    }\n  }\n}\n\nfunction createVinePlant(cluster_point, dot_points) {\n  base_color = new Color(0.6, 0.2, 0.4, .25);\n  tint = Math.min(randomRange(0, 0), randomRange(0, 0));\n  tint_color = new Color(tint, tint, tint, 0);\n  cluster_color = base_color - tint_color;\n\n  vine_color = cluster_color * 1.1;\n\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    if (chance(0.3)) {\n      createVine(cluster_point, dot_point, vine_color);\n      createDot(cluster_point, dot_point, cluster_color);\n    } else {\n      createDot(cluster_point, dot_point, cluster_color);\n    }\n  }\n}\n\nfunction createLeafPlant(cluster_point, dot_points) {\n  base_color = new Color(0.7, 0.1, 0.25, .25);\n  tint = Math.min(randomRange(0, 0.2), randomRange(0, 0.2));\n  tint_color = new Color(tint, tint, tint, 0);\n  cluster_color = base_color - tint_color;\n\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    createDot(cluster_point, dot_point, cluster_color);\n  }\n}\n\nfunction createDot(cluster_point, dot_point, cluster_color) {\n  var path = new Path.Circle(cluster_point + dot_point, dot_radius);\n  tint = Math.min(randomRange(0, 0.05), randomRange(0, 0.05));\n  tint_color = new Color(tint, tint, tint, 0);\n  dot_color = cluster_color - tint_color;\n  path.style = {\n    fillColor: dot_color,\n    shadowColor: new Color(0, 0, 0, 0.3),\n    shadowBlur: 16,\n    shadowOffset: new Point(randomRange(-2, 2), randomRange(0.5, 2))\n  };\n}\n\nfunction createFlower(cluster_point, dot_point, base_color) {\n  tint = Math.min(randomRange(0, 0.05), randomRange(0, 0.05));\n  tint_color = new Color(tint, tint, tint, 0);\n  flower_color = base_color - tint_color;\n\n  var d = dot_point / 100;\n  var i;\n  var paths = [];\n  for (i = 0; i < 10; i++) {\n    var path = new Path.Circle(\n      cluster_point + dot_point,\n      map(i, 0, 10, dot_radius, dot_radius * 0.25)\n    );\n    path.style = {\n      fillColor: flower_color,\n      shadowColor: new Color(0, 0, 0, 0.1),\n      shadowBlur: 16,\n      shadowOffset: new Point(randomRange(-2, 2), randomRange(0.5, 2))\n    };\n    paths.push(path);\n    d = d + [0, 0.02];\n    dot_point += d * i;\n  }\n  //  var path = unite(paths);\n}\n\nfunction createVine(cluster_point, dot_point, base_color) {\n  tint = Math.min(randomRange(0, 0.05), randomRange(0, 0.05));\n  tint_color = new Color(tint, tint, tint, 0);\n  flower_color = base_color - tint_color;\n\n  var i;\n  var paths = [];\n  var length = Math.min(randomRange(10, 40), randomRange(10, 40));\n  var offset_x = 0;\n  for (i = 0; i < length; i++) {\n    var offset_point = [offset_x, i * dot_radius * 0.6];\n    offset_x += randomRange(-5, 5);\n    var path = new Path.Circle(\n      cluster_point + dot_point + offset_point,\n      dot_radius * 0.4\n    );\n    path.style = {\n      fillColor: flower_color,\n      shadowColor: new Color(0, 0, 0, 0.3),\n      shadowBlur: 16,\n      shadowOffset: new Point(randomRange(-2, 2), randomRange(0.5, 2))\n    };\n    paths.push(path);\n  }\n  //  var path = unite(paths);\n}\n\nfunction unite(a) {\n  console.log(a);\n  var path = a[0];\n  path.remove();\n  var i;\n  for (i = 1; i < a.length; i++) {\n    a[i].remove();\n    console.log(i, a.length);\n    path = path.unite(a[i]);\n  }\n  project.activeLayer.addChild(path);\n  return path;\n}\n\nfunction map(x, inMin, inMax, outMin, outMax) {\n  var n = (x - inMin) / (inMax - inMin);\n  return n * (outMax - outMin) + outMin;\n}\nfunction randomRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction randomPoint() {\n  return new Point(randomRange(-1, 1), randomRange(-1, 1));\n}\n\nfunction chance(t) {\n  return Math.random() < t;\n}\n\nfunction pick(a) {\n  var i = Math.floor(Math.random() * a.length);\n  return a[i];\n}\nfunction relaxPoints(points, min, max, stepSize, steps) {\n  min = min * min;\n  max = max * max;\n  for (step = 0; step < steps; step++) {\n    for (i1 = 0; i1 < points.length; i1++) {\n      for (i2 = 0; i2 < points.length; i2++) {\n        if (i1 === i2) continue;\n        p1 = points[i1];\n        p2 = points[i2];\n        var n = (p1 - p2).normalize();\n        var dist = p1.getDistance(p2, true);\n        if (dist < min) {\n          p1 = p1 + n * stepSize;\n          p2 = p2 - n * stepSize;\n        }\n        if (max && dist > max) {\n          p1 = p1 - n * stepSize;\n          p2 = p2 + n * stepSize;\n        }\n        points[i1] = p1;\n        points[i2] = p2;\n      }\n    }\n  }\n}"
  },
  {
    "_id": "5jv8nAa3p4tR4rjTk",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-27T22:43:22.565Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vbieh8ohtckr3ngihkco",
        "version": 1556405020,
        "signature": "b8c5ac14e028167641e6170a1b633a78d8f46c48",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-27T22:43:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 12328473,
        "type": "upload",
        "etag": "4bbd68b5cb815eb72300e8e247956777",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556405020/avalanche2019/vbieh8ohtckr3ngihkco.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556405020/avalanche2019/vbieh8ohtckr3ngihkco.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "9497740",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 9794867,
        "duration": 10.033333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/iubp95s9nyahtbjk5crq",
        "version": 1556405067,
        "signature": "e40eead4a405408945bf3718bf6402e82f259b38",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-27T22:44:27Z",
        "tags": [],
        "bytes": 281404,
        "type": "upload",
        "etag": "b28b3fb6d1da1bd38bc5868675c5f373",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556405067/avalanche2019/iubp95s9nyahtbjk5crq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556405067/avalanche2019/iubp95s9nyahtbjk5crq.png"
      },
      {
        "public_id": "avalanche2019/vnkl5s44rrxdbu4py3qu",
        "version": 1556405074,
        "signature": "839b70c7f2fdf7f38713bf48d53a03feaf80574e",
        "width": 1258,
        "height": 650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-27T22:44:34Z",
        "tags": [],
        "bytes": 119687,
        "type": "upload",
        "etag": "e47449f2f479dcae42993371e0163338",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556405074/avalanche2019/vnkl5s44rrxdbu4py3qu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556405074/avalanche2019/vnkl5s44rrxdbu4py3qu.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created an art piece to show local news, trying to survive in a landscape governed by the national news media organizations and technology giants (Google, FB, Amazon). \nI have used Cinema 4D and Illustrator to create this effect. \n\nI have given this model for CNC cutting. So, should get the file in about 2-3 days.",
    "inspiration_name": "Local News Art Piece"
  },
  {
    "_id": "5qcfLSuKaEgxNFQrk",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-01T19:06:25.849Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vn0q5ypezkrftnfdrvz1",
        "version": 1551467253,
        "signature": "d8b4d2d444d2095632392a363d9256797e2e9136",
        "width": 2540,
        "height": 1392,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T19:07:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 5191797,
        "type": "upload",
        "etag": "a3ae3f384ae4ed55db609d481f7ab497",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551467253/avalanche2019/vn0q5ypezkrftnfdrvz1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551467253/avalanche2019/vn0q5ypezkrftnfdrvz1.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "1474277",
          "dar": "635:348"
        },
        "frame_rate": 60,
        "bit_rate": 1478091,
        "duration": 28.1,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/j1quoalsmaivu1bfisqh",
        "version": 1551467264,
        "signature": "bb665a206e62d97f58e1ea087cc3ba010d5532b8",
        "width": 2526,
        "height": 1372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T19:07:44Z",
        "tags": [],
        "bytes": 455995,
        "type": "upload",
        "etag": "facd17239e1563bcf00e6e71d773025f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551467264/avalanche2019/j1quoalsmaivu1bfisqh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551467264/avalanche2019/j1quoalsmaivu1bfisqh.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:11:30.23Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Perlin noise circles"
  },
  {
    "_id": "5qxkZikLpwjsd2TWx",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:57:27.13Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Just playing around with note lengths, couldn’t figure out how to make them even faster or reduce the time between notes better, will work on that.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\n\n/**\n *  PIANO\n */\n\nvar piano = new Tone.PolySynth(3, Tone.Synth, {\n  \"oscillator\" : {\n    \"type\" : \"fatsawtooth\",\n    \"count\" : 4,\n    \"spread\" : 30\n  },\n  \"envelope\" : {\n    \"attack\" : 0.01,\n    \"decay\" : 0.1,\n    \"sustain\" : 0.5,\n    \"release\" : 0.4,\n    \"attackCurve\" : \"exponential\"\n  },\n  \"volume\": -15\n}).toMaster()\n// synth.chain(delay, reverb);\n\nvar cChord = [\"C4\", \"E4\", \"G4\", \"B4\", \"C5\"];\nvar dChord = [\"D4\", \"F4\", \"A4\", \"C5\", \"D5\"];\nvar gChord = [\"B3\", \"D4\", \"E4\", \"A4\"];\nvar counter = 1;\nvar pianoPart = new Tone.Part(function(time, chord){\n  console.log(counter);\n  if (counter < 7) {\n    counter++;\n  } else {\n    counter = 0;\n  }\n  let noteValue = Math.pow(2, counter)\n  let string = `${noteValue}n`\n  piano.triggerAttackRelease(chord, string, time);\n}, [[\"0:0:2\", cChord], [\"0:1\", dChord], [\"0:1:3\", dChord], [\"0:2:2\", dChord], [\"0:3\", cChord], [\"0:3:2\", gChord]]);\n\npianoPart.start(0);\npianoPart.loop = true;\n// pianoPart.loopEnd = \"1m\";\npianoPart.humanize = true;\npianoPart.probability = 1\n\n\n\n\n//set the transport \nTone.Transport.bpm.value = 118;\n\nwindow.onmousedown = () => {\n  // Play the melody!\n\n  Tone.Transport.toggle()\n};"
  },
  {
    "_id": "5sEPqir7C8adtdFAR",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T17:52:31.834Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nhwt3ksufypiq4vezmib",
        "version": 1555091792,
        "signature": "208f868d593c9e7694989ceb30db7c3a24e0d996",
        "width": 1024,
        "height": 538,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T17:56:32Z",
        "tags": [],
        "bytes": 76322,
        "type": "upload",
        "etag": "b391330524fbe14e90d08a291d8d1b76",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555091792/avalanche2019/nhwt3ksufypiq4vezmib.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555091792/avalanche2019/nhwt3ksufypiq4vezmib.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Using Markov Chain, a mix of Game of Thrones Fire and Blood book and a Washington Post article about Trump and his daughter leading the world bank.",
    "code": "// code from Markov Chain Example in class\n\nconst trump_washingtonpost = \"President Trump considered nominating his eldest daughter, Ivanka Trump, to be president of the World Bank in part because “she’s very good with numbers,” according to a new interview published Friday. Speaking to the Atlantic, Trump lavished praise on his daughter, a 37-year-old White House adviser, and suggested she would be suitable for other administration positions, including U.S. ambassador to the United Nations. “She’s a natural diplomat,” Trump said. “She would’ve been great at the United Nations, as an example.” Asked why he didn’t nominate her, Trump replied: “If I did, they’d say nepotism, when it would’ve had nothing to do with nepotism. But she would’ve been incredible.” Trump added: “I even thought of Ivanka for the World Bank. . . . She would’ve been great at that because she’s very good with numbers.”\";\n\nconst got_fnb = \"The maesters of the Citadel who keep the histories of Westeros have used Aegon’s Conquest as their touchstone for the past three hundred years. Births, deaths, battles, and other events are dated either AC (After the Conquest) or BC (Before the Conquest).True scholars know that such dating is far from precise. Aegon Targaryen’s conquest of the Seven Kingdoms did not take place in a single day.More than two years passed between Aegon’s landing and his Oldtown coronation…and even then the Conquest remained incomplete, since Dorne remained unsubdued.Sporadic attempts to bring the Dornishmen into the realm continued all through King Aegon’s reign and well into the reigns of his sons, making it impossible to fix a precise end date for the Wars of Conquest. And I bet you couldn’t even tell the difference.\";\n\n\nconst model = generateModel(trump_washingtonpost + \" \" + got_fnb);\nconst output_text = generateText(\"Trump\", model);\n\ndocument.body.innerHTML = output_text;\n\nfunction generateModel(input_text) {\n    const words = input_text.split(\" \");\n    const model = {};\n\n    // loop through all the words except the last one.\n    for (let i = 0; i < words.length - 1; i++) {\n        const target_word = words[i];\n        const next_word = words[i + 1];\n\n        if (!model[target_word]) {\n            model[target_word] = [];\n        }\n\n        model[target_word].push(next_word);\n    }\n\n    return model;\n}\n\n\n\nfunction generateText(first_word, model) {\n    // start with the word passed in\n    let output_text = first_word;\n    let current_word = first_word;\n    for (let i = 0; i < 120; i++) {\n        // choose the next word by sampling from options in the model\n        current_word = sample(model[current_word]);\n\n        // append word to output\n        output_text += \" \";\n        output_text += current_word;\n\n        // if we get to a word that ends with \".\" we are done.\n        const last_character = current_word.substr(current_word.length - 1);\n        if (last_character === \".\") {\n            break;\n        }\n    }\n    return output_text;\n}\n\nfunction sample(array) {\n    const index = Math.floor(Math.random() * array.length);\n    return array[index];\n}\n\ninjectInterface();\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\n\t\tbody {\n\t\t\tbackground-color: #c6bdb3;\n\t\t\ttext-align: center;\n\t\t\tfont-family: serif;\n\t\t\tfont-weight: bold;\n\t\t\tpadding: 50px;\n\t\t\tline-height: 2em;\n\t\t}\n\n\t</style>\n\n`);\n}"
  },
  {
    "_id": "5vSN8wrSutrvMusji",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T17:15:30.556Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/owlbpis64pcueryywjfu",
        "version": 1550251233,
        "signature": "1081197f1a867145ba1e995c3c9a0e869915ce54",
        "width": 2716,
        "height": 3778,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T17:20:33Z",
        "tags": [],
        "bytes": 1276080,
        "type": "upload",
        "etag": "880c8b91dbfcefbf1c8e07d2af88a8d7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550251233/avalanche2019/owlbpis64pcueryywjfu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550251233/avalanche2019/owlbpis64pcueryywjfu.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Executing instructions by hand. Parameters here include paper size, paper color, number of [\"Sparaxis\" units](https://i.pinimg.com/originals/28/cb/24/28cb24980f4669961ec868ad5698d3cb.png). Instructions written by Ekaterina Lukasheva.\n\nSome pretend and simplified code, if the original instructions were translated into javascript-like instructions and parameters:\n```\nconst paper_width = 2;\nconst paper_height = paper_width * 2;\n// \"sparaxis unit\" is the basic unit of the shape\nconst num_sparaxis_units = 12;\n// together, the \"sparaxis units\" combine to form a composite shape\nconst sparaxis_units = []; \n\nfor (let i = 0; i < num_sparaxis_units; i++) {\nthisUnit = createSparaxisUnit(paper_color, paper_size);\nsparaxis_units.push(thisUnit);\n}\n```",
    "inspiration_name": "Ekaterina Lukasheva"
  },
  {
    "_id": "63iLqa7TKtRMFpdLF",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T00:06:07.633Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hmdv2vhqe470e1zfkvmx",
        "version": 1554422779,
        "signature": "313c1606a77240148eb8dbe10bb51938b4af032b",
        "width": 956,
        "height": 958,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T00:06:19Z",
        "tags": [],
        "bytes": 44095,
        "type": "upload",
        "etag": "373789e982fcc8065807f35e9150b944",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554422779/avalanche2019/hmdv2vhqe470e1zfkvmx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554422779/avalanche2019/hmdv2vhqe470e1zfkvmx.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T03:29:16.449Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// code from class (mapping noise–vary over distance from center).\n\nfunction setup() {\n    createCanvas(480, 480);\n    rectMode(CENTER);\n    noStroke()\n    smooth();\n}\n\n\nfunction draw() {\n    background(\"#ff2445\");\n    var n;\n    fill(37, 254, 247);\n\n    for (let y = 100; y < 400; y += 40) {\n        for (let x = 100; x < 400; x += 40) {\n            n = noise(x);\n            n = noise(dist(5, 250, x, y) * 0.01 +  millis() * 0.001);\n            let diameter = n * 30;\n            rect(x, y, diameter, diameter,2);\n        }\n    }\n}"
  },
  {
    "_id": "65CMohNr4qHKQmkkg",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "created_at": { "$date": "2019-02-28T22:19:31.937Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pjfbzkqhfslh4lqtj1mt",
        "version": 1551392385,
        "signature": "53e14ec025112a275ab40afd8ab99ac587c56311",
        "width": 1248,
        "height": 748,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T22:19:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 18101706,
        "type": "upload",
        "etag": "c4b64dcd35bc608f87b20686b2ba4b61",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551392385/avalanche2019/pjfbzkqhfslh4lqtj1mt.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551392385/avalanche2019/pjfbzkqhfslh4lqtj1mt.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "239753",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "10386178",
          "dar": "312:187"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10635028,
        "duration": 13.616667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "challange 2 add on",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nlet amplitude_slider, frequency_slider, time_slider;\nvar startX = -150;\nvar startY = 200;\nvar endX = 450;\nvar endY = -250;\n\nlet waveCounter = 0;\n\nvar noiseFrequency = .02;\nlet waves = [];\nlet numWaves = 30;\nlet step = 1;\nlet waveSeperationMultiplier = 13;\nlet b = 0;\n\nfunction setup() {\n    createCanvas(500, 300);\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 200, 120);\n    createP('Frequency');\n    frequency_slider = createSlider(0, .07, .02, .01);\n    createP('Time Speed');\n    time_slider = createSlider(0, 10, 2);\n    background(50);\n\n    colorMode(HSB, 360, 100, 100, 1);\n\n    for (let w = 0; w < numWaves; w++) {\n        wave = createWave();\n        wave.startX += w * waveSeperationMultiplier,\n            wave.startY = w * waveSeperationMultiplier,\n            wave.endX += w * waveSeperationMultiplier,\n            wave.endY += w * waveSeperationMultiplier,\n            waves[w] = wave;\n    }\n}\n\nfunction draw() {\n    background(0, .05);\n    ellipseMode(CENTER);\n    noiseDetail(1, .5);\n\n    noStroke();\n\n    for (let w = 0; w < numWaves; w++) {\n        waves[w].drawWave();\n        waves[w].updateStartPos();\n    }\n}\n\n\nfunction createWave() {\n    var wave = new Object();\n    wave = {\n        startX: -150,\n        startY: 100,\n        endX: 250,\n        endY: -150,\n        drawWave() {\n            for (i = 0; i < 1; i += noiseFrequency) {\n                var x = lerp(this.startX, this.endX, i);\n                var y = lerp(this.startY, this.endY, i);\n                // hint: drive offsetX and offsetY with noise() instead of random()\n                w = noise(x * frequency_slider.value() + millis() * time_slider.value() * noiseFrequency / 10);\n                var offsetX = w * amplitude_slider.value();\n                var offsetY = noise(x) * noiseFrequency;\n\n                if (b == 100) {\n                    b = random(0, 100);\n                }\n                b++\n                fill(203, 100, b, .1);\n                ellipse(x + offsetX, y + offsetY, 15, 15);\n\n            }\n        },\n        updateStartPos() {\n\n            this.startX += step;\n            this.startY += step;\n            this.endY += step;\n            this.endX += step;\n            if (this.startY > width) {\n                this.startX = -150;\n                this.startY = 100;\n                this.endX = 250;\n                this.endY = -150;\n            }\n        }\n        // wave.drawWave()\n\n    };\n\n    return wave;\n}"
  },
  {
    "_id": "6Aq9Csu8T8Ty6oSCx",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "created_at": { "$date": "2019-02-01T03:51:12.937Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zmvlngnhncksluifyuda",
        "version": 1548993215,
        "signature": "c40ef216cc949f51491ea9593575a95862029683",
        "width": 1188,
        "height": 1192,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T03:53:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 18908356,
        "type": "upload",
        "etag": "3655f46cf48f921d320902a2b110029d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548993215/avalanche2019/zmvlngnhncksluifyuda.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548993215/avalanche2019/zmvlngnhncksluifyuda.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "4727985",
          "dar": "297:298"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4736957,
        "duration": 31.933333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:07.074Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "random tiles"
  },
  {
    "_id": "6B2GBG4Ae5T8hXdWz",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T15:35:33.93Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aveamgo42uzquhrw3n9f",
        "version": 1555688139,
        "signature": "dbde17d6a4505c4753a9789722e20e8840cb3eac",
        "width": 1192,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T15:35:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 829277,
        "type": "upload",
        "etag": "18ed236857f2624c42ae262692e29bda",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555688139/avalanche2019/aveamgo42uzquhrw3n9f.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555688139/avalanche2019/aveamgo42uzquhrw3n9f.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "223547",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "927814",
          "dar": "149:148"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1160504,
        "duration": 5.716667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "funny",
        "created_at": { "$date": "2019-04-19T16:02:14.936Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-19T20:04:02.415Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-04-20T01:09:26.753Z" }
      }
    ],
    "title": "",
    "description": "Yelling. Using microphone as sound input.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/addons/p5.dom.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/addons/p5.sound.js\n\nlet mouthX, mouthY;\n\nlet mic;\nlet bubbles;\n\nfunction setup() {\n  createCanvas(600, 600);\n  ellipseMode(CENTER);\n\n  mouthX = 150;\n  mouthY = 75;\n\n  mic = new p5.AudioIn();\n  mic.start();\n}\n\nfunction draw() {\n  background(0);\n  noStroke();\n\n  micLevel = mic.getLevel();\n\n  fill(255, 255, 0);\n  ellipse(width / 2, height / 2, 400, 400);\n\n  fill(255);\n  ellipse(width / 2 - 80, height / 2 - 80, 80, map(micLevel, 0, 0.15, 50, 25));\n\n  ellipse(width / 2 + 80, height / 2 - 80, 80, map(micLevel, 0, 0.15, 50, 25));\n\n  fill(0);\n  ellipse(width / 2 + 80, height / 2 - 80, 15, 15);\n  ellipse(width / 2 - 80, height / 2 - 80, 15, 15);\n\n  noFill();\n  stroke(0);\n  strokeWeight(2);\n  ellipse(\n    width / 2,\n    height / 2 + 80,\n    map(micLevel, 0, 0.15, 50, 140),\n    map(micLevel, 0, 0.15, 30, 130)\n  );\n\n  // console.log(micLevel);\n}"
  },
  {
    "_id": "6B5K8nyXEXRs7HjFJ",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T05:22:42.637Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eldywjnspywks1txjhiv",
        "version": 1550812994,
        "signature": "16bf16eb1b0e1b671464791b8c2e49ed97fdebce",
        "width": 7200,
        "height": 3600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T05:23:14Z",
        "tags": [],
        "bytes": 6256674,
        "type": "upload",
        "etag": "946a9889ca53bb1005fa3a241a83cd00",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550812994/avalanche2019/eldywjnspywks1txjhiv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550812994/avalanche2019/eldywjnspywks1txjhiv.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Treasure Map(Kinda, water is your treasure.)\nMountain: Noise as brush, done in Maya.",
    "inspiration_name": "Pakkamule",
    "inspiration_url": "https://www.google.com/search?biw=1383&bih=658&tbm=isch&sa=1&ei=KopvXLKYC6WJggeK1Sw&q=pakkamule&oq=pakkamule&gs_l=img.3...0.0..25714...0.0..0.0.0.......1......gws-wiz-img.toF39CRqWgU"
  },
  {
    "_id": "6EzBJrWPQpHrFzc4C",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-27T23:52:00.596Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/thgrxai1ifbsj6qjjopo",
        "version": 1553731094,
        "signature": "b548d3a34fce0e098d6c2c8a8b1dfee1711e49fc",
        "width": 992,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-27T23:58:14Z",
        "tags": [],
        "bytes": 1072009,
        "type": "upload",
        "etag": "2479c5a5473d509ca589034fd4d28363",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553731094/avalanche2019/thgrxai1ifbsj6qjjopo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553731094/avalanche2019/thgrxai1ifbsj6qjjopo.png"
      },
      {
        "public_id": "avalanche2019/lrl32pf57wpzod6sq0n2",
        "version": 1553737194,
        "signature": "52dde45016ecd79c850c77bdd1b76a57772f3260",
        "width": 986,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T01:39:54Z",
        "tags": [],
        "bytes": 2010950,
        "type": "upload",
        "etag": "cca7dfd6998dd08e88620e5b89cce737",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553737194/avalanche2019/lrl32pf57wpzod6sq0n2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553737194/avalanche2019/lrl32pf57wpzod6sq0n2.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Lung 4",
    "code": "var worldImage;\n\nfunction preload() {\n    worldImage = loadImage(\"lung_2.png\");\n\n}\n\nfunction setup() {\n    createCanvas(500, 500);\n\n}\n\n\nfunction draw() {\n    background(255,255,255);\n\n\n    var spacing = 500 / worldImage.width;\n    for (var y = 0; y < worldImage.height; y++) {\n        for (var x = 0; x < worldImage.width; x++) {\n            var in_color = worldImage.get(x, y);\n            var dot_size = lightness(in_color) / 255 * 10;\n          line(0,dot_size,dot_size,0);\n          \n\n          for (let i = 0; i < 10; i ++) {\n    ellipse(x * spacing + spacing * 0.5, y * spacing + spacing * 0.5, dot_size, dot_size);\n    rotate(PI/5);\n            fill(y * 2,  200,x * 2);\n            \n  }\n \n\n\n        }\n    }\n\n\n\n    noLoop();\n}"
  },
  {
    "_id": "6F59iGHZef3e7ktQ5",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:25:50.948Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n3qe5gv1wwsylqve73np",
        "version": 1548458791,
        "signature": "d3b09d9b780b7fa8cdb491fb175bf1966b31f300",
        "width": 1020,
        "height": 1884,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:26:31Z",
        "tags": [],
        "bytes": 265603,
        "type": "upload",
        "etag": "aa7960bb1074c6f067c3ad0d0c583308",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458791/avalanche2019/n3qe5gv1wwsylqve73np.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458791/avalanche2019/n3qe5gv1wwsylqve73np.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "6RRN5RvF4EryxaAT5",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T05:12:33.075Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aglbepp1eg4j1qbfgrhv",
        "version": 1549516378,
        "signature": "4550ec81bbca41d5b2e3d445341d02e06be2209e",
        "width": 954,
        "height": 790,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T05:12:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 5824826,
        "type": "upload",
        "etag": "ac2c5e7709cbd41acbe8df56eaa0f487",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549516378/avalanche2019/aglbepp1eg4j1qbfgrhv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549516378/avalanche2019/aglbepp1eg4j1qbfgrhv.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "94538",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "1008938",
          "dar": "477:395"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 1103902,
        "duration": 42.190658,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/rs0u3ucp7oaira5zl1ul",
        "version": 1549516393,
        "signature": "eee50fff16aae5574a368218670c6c0b874a38f5",
        "width": 749,
        "height": 749,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T05:13:13Z",
        "tags": [],
        "bytes": 529273,
        "type": "upload",
        "etag": "5d5c0699cfc3a5d5ff8afe74256bc3cc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549516393/avalanche2019/rs0u3ucp7oaira5zl1ul.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549516393/avalanche2019/rs0u3ucp7oaira5zl1ul.jpg"
      },
      {
        "public_id": "avalanche2019/ecxhyrpdgvevkzhwegbz",
        "version": 1549516398,
        "signature": "d2d281474ebe527498fbbc12419db4035325644b",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T05:13:18Z",
        "tags": [],
        "bytes": 537850,
        "type": "upload",
        "etag": "b7fcc4c67f4e8b2d17ddc1da5df631a1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549516398/avalanche2019/ecxhyrpdgvevkzhwegbz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549516398/avalanche2019/ecxhyrpdgvevkzhwegbz.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "I have created a random music generator which randomizes the music on pressing shuffle. \nI have also added a random interactive pattern which changes on mouseover. \n\nCode: https://github.com/akshansh2593/CompForm/tree/master/musicGenerator\n\nMusic credits: samplefocus.com.",
    "inspiration_name": "Random Music Generator",
    "inspiration_url": "https://youtu.be/Pn1g1wjxl_0"
  },
  {
    "_id": "6SQwHzWNx96HTB6he",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-28T17:58:32.197Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lwj8b0a6vun58kbgspit",
        "version": 1556474324,
        "signature": "1687dc308e0e4bdb446a5fe80713f81fcec8b4ae",
        "width": 1156,
        "height": 778,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-28T17:58:44Z",
        "tags": [],
        "bytes": 51305,
        "type": "upload",
        "etag": "af58b692767a35998ac5e6655e04d6a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556474324/avalanche2019/lwj8b0a6vun58kbgspit.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556474324/avalanche2019/lwj8b0a6vun58kbgspit.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "business card / post-it holder. going to print it tomorrow."
  },
  {
    "_id": "6Zgn83kXbefEKooTk",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T17:31:59.128Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/thfk7ipxvegjt52jcsz4",
        "version": 1556904727,
        "signature": "ada7f20c0df341e1c1287d3f0f68fa9b32da34d8",
        "width": 1520,
        "height": 1274,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-03T17:32:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 838127,
        "type": "upload",
        "etag": "87316d211d210ffc86009c5e3bb05377",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556904727/avalanche2019/thfk7ipxvegjt52jcsz4.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556904727/avalanche2019/thfk7ipxvegjt52jcsz4.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "86975",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "1024288",
          "dar": "760:637"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 1117498,
        "duration": 6.000023,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "First time playing around in three.js. Trying to make a space station.",
    "inspiration_name": "getting started docs",
    "inspiration_url": "https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene"
  },
  {
    "_id": "6dbsFd37jaYrsgNdx",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:53:31.438Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k5guzvzxtdtlmqnbxpmm",
        "version": 1555700028,
        "signature": "944e0df03d757d085456839c83a3583df7582e84",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T18:53:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 18080163,
        "type": "upload",
        "etag": "0ef3e2f0cecce713b239a76a24196de5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555700028/avalanche2019/k5guzvzxtdtlmqnbxpmm.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555700028/avalanche2019/k5guzvzxtdtlmqnbxpmm.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "115738",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "4084246",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 4237443,
        "duration": 34.1341,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T20:06:16.912Z" }
      }
    ],
    "title": "",
    "description": "Machine \"breathing\" sound"
  },
  {
    "_id": "6dwERbHzNB2j37PCF",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T16:36:40.88Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jhd6jnzqrladhmqzvfnu",
        "version": 1554482247,
        "signature": "d9c44ab159eaa003708cf22a8cfdacadd0dde5f8",
        "width": 5400,
        "height": 3600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-05T16:37:27Z",
        "tags": [],
        "bytes": 1037425,
        "type": "upload",
        "etag": "d50827e67ef2ffdbb786d0d24886c37f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554482247/avalanche2019/jhd6jnzqrladhmqzvfnu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554482247/avalanche2019/jhd6jnzqrladhmqzvfnu.jpg"
      },
      {
        "public_id": "avalanche2019/dxvar2cojdsinvadagsw",
        "version": 1554482256,
        "signature": "90e79095ff3724bcf16f0ecd0475f5f70a1dc01f",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T16:37:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 1506391,
        "type": "upload",
        "etag": "a363bd5d4aa11657beff019a5359744b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554482256/avalanche2019/dxvar2cojdsinvadagsw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554482256/avalanche2019/dxvar2cojdsinvadagsw.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "5454588",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 5884339,
        "duration": 2,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "With sound."
  },
  {
    "_id": "6ebbMvQnuMaBfXH59",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T16:24:55.866Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fhn6te6ivoq1iu9kgf31",
        "version": 1554827255,
        "signature": "34103f68b1c8bf6d76939fbeae9d55327c5782e8",
        "width": 1550,
        "height": 606,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T16:27:35Z",
        "tags": [],
        "bytes": 185302,
        "type": "upload",
        "etag": "0b9d4e74920a55a47c7fed594b8aab1b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554827255/avalanche2019/fhn6te6ivoq1iu9kgf31.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554827255/avalanche2019/fhn6te6ivoq1iu9kgf31.png"
      },
      {
        "public_id": "avalanche2019/zurmoevfwqtzhdevobak",
        "version": 1554827266,
        "signature": "085653146ff5c66a3fefca15440a9a422776c8ef",
        "width": 1548,
        "height": 592,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T16:27:46Z",
        "tags": [],
        "bytes": 103694,
        "type": "upload",
        "etag": "acf0f434c1ddbc5c79b0586251578c4f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554827266/avalanche2019/zurmoevfwqtzhdevobak.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554827266/avalanche2019/zurmoevfwqtzhdevobak.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "getting going with Marcov Chains, made a song mixer that takes two songs and a keyword from the user then produces a mixed lyrics song based on inputs, example is  mixing bear necessities with Ru Paul song haha , want to eventually use song lyric API to work with any two songs instead of hard coded ones"
  },
  {
    "_id": "6i3yMebqorsyqSLTB",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T20:56:56.701Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j9tg1okvychpbrj4jkqj",
        "version": 1549573022,
        "signature": "bce7e524d5f6acef3b1d7eb6bd9b3dcf825247f9",
        "width": 1096,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-07T20:57:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 7923443,
        "type": "upload",
        "etag": "6d7b68bb822b3f431dd2177488a462e0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549573022/avalanche2019/j9tg1okvychpbrj4jkqj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549573022/avalanche2019/j9tg1okvychpbrj4jkqj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2208228",
          "dar": "137:90"
        },
        "frame_rate": 60,
        "bit_rate": 2214850,
        "duration": 28.619333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/tfrzjga0xavzjyfbm6xp",
        "version": 1549573027,
        "signature": "ac2a271d8c9d09fe0fc68386168328b9f3101ffa",
        "width": 1254,
        "height": 1044,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T20:57:07Z",
        "tags": [],
        "bytes": 53263,
        "type": "upload",
        "etag": "96695eab8c1f34fd46482eb789291662",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549573027/avalanche2019/tfrzjga0xavzjyfbm6xp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549573027/avalanche2019/tfrzjga0xavzjyfbm6xp.png"
      },
      {
        "public_id": "avalanche2019/g72p6kmtzb3u83c8zeok",
        "version": 1549573032,
        "signature": "972bc9eec8419e5b1d96a3e7a377091797a089bb",
        "width": 1472,
        "height": 1292,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T20:57:12Z",
        "tags": [],
        "bytes": 54505,
        "type": "upload",
        "etag": "7f0eb20b6f1d7b42ea0c69a6d21b49e4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549573032/avalanche2019/g72p6kmtzb3u83c8zeok.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549573032/avalanche2019/g72p6kmtzb3u83c8zeok.png"
      }
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T23:10:11.017Z" }
      }
    ],
    "title": "",
    "description": "Tadpoles swimming. Made with Processing.",
    "inspiration_name": "thoughts",
    "inspiration_url": "https://www.openprocessing.org/sketch/649483"
  },
  {
    "_id": "6iAjWy9BBru85Wsim",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T01:03:39.566Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xg0tjdei1kriiynlofog",
        "version": 1554944631,
        "signature": "b6c2ab91a4d45a8047916056011acfe58eda282d",
        "width": 1382,
        "height": 1398,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T01:03:51Z",
        "tags": [],
        "bytes": 244989,
        "type": "upload",
        "etag": "97d39d0ec2412373804a443f02164d90",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554944631/avalanche2019/xg0tjdei1kriiynlofog.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554944631/avalanche2019/xg0tjdei1kriiynlofog.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "some wisdom for y'all created with markov chain using kanye tweets",
    "inspiration_name": "Coding Train",
    "inspiration_url": "https://www.youtube.com/watch?v=9r8CmofnbAQ",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/addons/p5.dom.js\n\nlet order = 4;\nlet ngrams = {};\nlet button;\n\nlet tweets;\nlet beginnings = [];\n\nfunction preload() {\n  tweets = loadStrings(\"https://raw.githubusercontent.com/Nedelstein/CompForm/master/wk10_sk03/kanye.txt\");\n  console.log(tweets);\n}\n\nfunction setup() {\n  noCanvas();\n  for (let j = 0; j < tweets.length; j++) {\n    let txt = tweets[j];\n    for (let i = 0; i < txt.length - order; i++) {\n      let gram = txt.substring(i, i + order);\n      if (i == 0) {\n        beginnings.push(gram);\n      }\n\n      if (!ngrams[gram]) {\n        ngrams[gram] = [];\n      }\n      ngrams[gram].push(txt.charAt(i + order));\n    }\n  }\n  button = createButton(\"generate\");\n  button.mousePressed(markovIt);\n  console.log(ngrams);\n}\n\nfunction markovIt() {\n  let currentGram = random(beginnings);\n  let result = currentGram;\n  for (let i = 0; i < 60; i++) {\n    let possibilities = ngrams[currentGram];\n    if (!possibilities) {\n      break;\n    }\n\n    let next = random(possibilities);\n    result += next;\n    let len = result.length;\n    currentGram = result.substring(len - order, len);\n  }\n  createP(result);\n}"
  },
  {
    "_id": "6krv7JNGGRjGtScy5",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:50:43.508Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qsesut6rydmuxiepxosi",
        "version": 1554486668,
        "signature": "f1548470766463f987c36274b53866ad15c20c1a",
        "width": 656,
        "height": 596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T17:51:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 11562768,
        "type": "upload",
        "etag": "b957cded605878091acb8ff51af8995b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554486668/avalanche2019/qsesut6rydmuxiepxosi.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554486668/avalanche2019/qsesut6rydmuxiepxosi.mov",
        "audio": {},
        "video": {
          "pix_format": "rgb24",
          "codec": "qtrle",
          "level": -99,
          "bit_rate": "24618586",
          "dar": "164:149"
        },
        "frame_rate": 60,
        "bit_rate": 27073795,
        "duration": 3.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "first test",
    "inspiration_name": "test"
  },
  {
    "_id": "6qo7FQHR5kPcWdjug",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T02:23:54.629Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j2aonvdmh3jaqmear4j1",
        "version": 1548901439,
        "signature": "5b27e61bffeb963d17869ea08f7fba383e4a552a",
        "width": 1046,
        "height": 750,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T02:23:59Z",
        "tags": [],
        "bytes": 169574,
        "type": "upload",
        "etag": "91e955c0a396dbc933c881bf749d29b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548901439/avalanche2019/j2aonvdmh3jaqmear4j1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548901439/avalanche2019/j2aonvdmh3jaqmear4j1.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Wonder Garden"
  },
  {
    "_id": "6syikR9aRPGNTwfW5",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "created_at": { "$date": "2019-02-26T20:28:02.709Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/say3m3eaohgp73blfoch",
        "version": 1551212924,
        "signature": "cd05f340ce014ee1ab31db13896a1e031495aadd",
        "width": 708,
        "height": 686,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T20:28:44Z",
        "tags": [],
        "bytes": 55865,
        "type": "upload",
        "etag": "fd92a84bd11d798bd402116b8654c4a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551212924/avalanche2019/say3m3eaohgp73blfoch.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551212924/avalanche2019/say3m3eaohgp73blfoch.png"
      },
      {
        "public_id": "avalanche2019/ygj2fbccjsr5daypc6zz",
        "version": 1551212941,
        "signature": "49647662772db3a2d168facba27f6535e5e86a19",
        "width": 792,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T20:29:01Z",
        "tags": [],
        "bytes": 410452,
        "type": "upload",
        "etag": "34d03fd4a9d259920b1206abb7d16ebc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551212941/avalanche2019/ygj2fbccjsr5daypc6zz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551212941/avalanche2019/ygj2fbccjsr5daypc6zz.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-28T01:15:20.179Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge #1, and an interpretation towards extending the code."
  },
  {
    "_id": "6t7bkzrxXwETwGRer",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "created_at": { "$date": "2019-05-07T18:11:48.555Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/canckynwirbcylmbruop",
        "version": 1557252737,
        "signature": "8afbe746d6f636f8933fcd7a9298cfa11b0e2d81",
        "width": 1596,
        "height": 1152,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-07T18:12:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 4919438,
        "type": "upload",
        "etag": "745b48c71ff59cc5d8fb64c47df6eceb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557252737/avalanche2019/canckynwirbcylmbruop.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557252737/avalanche2019/canckynwirbcylmbruop.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "316010",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "4088554",
          "dar": "133:96"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4457611,
        "duration": 8.828833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-05-10T17:51:47.085Z" }
      }
    ],
    "lesson": "Microgames!",
    "title": "",
    "code": "getting started in play looking at the astroid sketch"
  },
  {
    "_id": "6u6Dg2pRBHJ9NadSo",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:32:06.821Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yk2puu1fv9tioeabbt5i",
        "version": 1548459191,
        "signature": "f36da789285ee2d834449c6c960db3d0745f1a26",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:33:11Z",
        "tags": [],
        "bytes": 1550889,
        "type": "upload",
        "etag": "8f183eeaee81143aec8ef726a2caf1c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459191/avalanche2019/yk2puu1fv9tioeabbt5i.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459191/avalanche2019/yk2puu1fv9tioeabbt5i.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "6vKjn6wAcNuEYnwka",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T07:16:13.941Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yo1cub4ep27eyi5uwfwd",
        "version": 1553760875,
        "signature": "194fd4bf542bfaff3a0a42a1ec44a2ad576cc200",
        "width": 640,
        "height": 360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-28T08:14:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 18746683,
        "type": "upload",
        "etag": "cca08b6748535c063ff25151d1454fb1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553760875/avalanche2019/yo1cub4ep27eyi5uwfwd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553760875/avalanche2019/yo1cub4ep27eyi5uwfwd.mov",
        "audio": {},
        "video": {
          "pix_format": "yuva444p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "47297194"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 47312733,
        "duration": 3.169833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T15:19:19.941Z" }
      }
    ],
    "title": "",
    "description": "Rotated rounded rectangle",
    "inspiration_name": "Paper.js tutorial",
    "inspiration_url": "http://paperjs.org/examples/",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.js\n\n\n\n        var amount = 25;\n        var colors = ['black', 'white','black', 'white'];\n      \n        var circlePaths = []; \n        \n        for (var i = 0; i < amount; i++) {\n            var rect = new Rectangle([0, 0], [50, 50]);\n            rect.center = [250,250];\n            var path = new Path.Rectangle(rect, 10);\n            path.fillColor = colors[i % 4];\n            var scale = (1 - i / amount) * 15;\n            path.scale(scale);\n        }\n\n        var children = project.activeLayer.children;\n        function onFrame(event) {\n            for (var i = 0, l = children.length; i < l; i++) {\n                var item = children[i];\n                var delta = [500,50] / (i + 5);\n                item.rotate(Math.sin((event.count + i)/10 ) * 10);\n             \n            }\n        }\n        \nvar path = new Path.Circle({\n    center: [0, 0],\n    radius: 100,\n    fillColor: 'yellow'\n});\n\ntool.onMouseMove = function(event) {\n    path.position = event.point;\n}"
  },
  {
    "_id": "6vNpcKat6stGtXMWw",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-02-25T18:57:31.417Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pyeuvlvgolfsy6pcrmfc",
        "version": 1551121063,
        "signature": "4197cfc5bd878e48e8d07b64f2e2fee6fd5c3e2c",
        "width": 1090,
        "height": 1486,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-25T18:57:43Z",
        "tags": [],
        "bytes": 513043,
        "type": "upload",
        "etag": "d5b577841e12cf8da9af83b9932f329c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551121063/avalanche2019/pyeuvlvgolfsy6pcrmfc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551121063/avalanche2019/pyeuvlvgolfsy6pcrmfc.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Noise",
    "title": "",
    "description": "A reworking of my earlier Georg Nees grid, this time using triangles and noise (rather than rectangles and random)."
  },
  {
    "_id": "6zF57sRicnbRJKPTP",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "created_at": { "$date": "2019-03-01T20:11:31.351Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bpiiuydai7njqwfdz6ej",
        "version": 1551471131,
        "signature": "519a77e87a5e77b73e727d97fa0ccb141978a628",
        "width": 1178,
        "height": 1176,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-01T20:12:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 3975773,
        "type": "upload",
        "etag": "309ec5354a86b5e6e4201f175e94fd05",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551471131/avalanche2019/bpiiuydai7njqwfdz6ej.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551471131/avalanche2019/bpiiuydai7njqwfdz6ej.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "3178323",
          "dar": "589:588"
        },
        "frame_rate": 15,
        "bit_rate": 3180618,
        "duration": 10,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Use grid placement to create a portrait filter comprised of lines of varied thickness"
  },
  {
    "_id": "6zn9KHM6TS5huTgpY",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T19:21:22.726Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hwjzn7c9nrifgoeuum9x",
        "version": 1556911294,
        "signature": "84c1d269de6677e6039c58931d3467685245711f",
        "width": 1080,
        "height": 1080,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T19:21:34Z",
        "tags": [],
        "bytes": 186887,
        "type": "upload",
        "etag": "17f4e0925760da93774016f0dce003e1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556911294/avalanche2019/hwjzn7c9nrifgoeuum9x.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556911294/avalanche2019/hwjzn7c9nrifgoeuum9x.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "3D PRINTED"
  },
  {
    "_id": "72EmK7Q7XeXmJkHpk",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T19:48:15.491Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jxdmreqfbjsn74p0qufy",
        "version": 1553888937,
        "signature": "fa47cafd3dcb085a9a0f9e9b62ba56e23d6de4ae",
        "width": 672,
        "height": 640,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:48:57Z",
        "tags": [],
        "bytes": 207160,
        "type": "upload",
        "etag": "6e3e26a19565bba6b129ba3a1a4ee2cf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888937/avalanche2019/jxdmreqfbjsn74p0qufy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888937/avalanche2019/jxdmreqfbjsn74p0qufy.jpg"
      },
      {
        "public_id": "avalanche2019/e5wfvhsglyudscorz5hm",
        "version": 1553888947,
        "signature": "244085536898b2012467786b0554435798f5ff57",
        "width": 1920,
        "height": 906,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:49:07Z",
        "tags": [],
        "bytes": 1225074,
        "type": "upload",
        "etag": "76a0852405a6e455fe2dd99c9a19b237",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888947/avalanche2019/e5wfvhsglyudscorz5hm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888947/avalanche2019/e5wfvhsglyudscorz5hm.jpg"
      },
      {
        "public_id": "avalanche2019/bcqbo6u8ygihv0d5egpd",
        "version": 1553888954,
        "signature": "529aaa554f142ba329bbac017d71d012b4699c42",
        "width": 1289,
        "height": 908,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:49:14Z",
        "tags": [],
        "bytes": 189387,
        "type": "upload",
        "etag": "426bfab65b6ba72927790a8c213c8ed5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888954/avalanche2019/bcqbo6u8ygihv0d5egpd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888954/avalanche2019/bcqbo6u8ygihv0d5egpd.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "For details, see the full work:\nhttp://sketches2019.compform.net/users/BRWMuGgSmfRbg9b2p",
    "inspiration_name": "Variations of Anchor Pattern"
  },
  {
    "_id": "74HkHzk8tYwYp4P6N",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T23:25:34.515Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h7irjaotzzsnneyl25rj",
        "version": 1550100349,
        "signature": "72b5900800132cb6377d8ad207a1f8b59cc1984c",
        "width": 744,
        "height": 750,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-13T23:25:49Z",
        "tags": [],
        "bytes": 257216,
        "type": "upload",
        "etag": "3f6f445b8908e941a0ec3790f6173453",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550100349/avalanche2019/h7irjaotzzsnneyl25rj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550100349/avalanche2019/h7irjaotzzsnneyl25rj.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar size_slider, dark_slider;\n\nfunction setup() {\n  createCanvas(500, 500);\n  createP('Ellipse Size');\n  size_slider = createSlider(10, 60, 30);\n\n  createP('Mouse Brightness');\n  dark_slider = createSlider(10, 500,255);\n\n}\n\nfunction draw() {\n\n  background(0);\n  for (var i = 0; i <= width; i += s) {\n    for (var j = 0; j <= height; j += s) {\n      var da = dark_slider.value();\n      var b = map(i, 0, width, 0, 255);\n      var g = map(j, 0, width, 0, 255);\n      var d = dist(i, j, mouseX, mouseY);\n      var o = map(d, 0, 50, 0, da);\n      var s = size_slider.value();\n      \n\n      fill(0, g, b, o);\n      ellipse(i, j, s, s);\n    }\n  }\n}"
  },
  {
    "_id": "76jn4Wu4q9DqtoAky",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:24:28.941Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x3bekr5ukuco9cz9eyrm",
        "version": 1548458673,
        "signature": "d82eb16b42aa3640ee9644be4eb680b49d000f81",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:24:33Z",
        "tags": [],
        "bytes": 495755,
        "type": "upload",
        "etag": "b4a1b272467eb406c66d55c036068f5d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458673/avalanche2019/x3bekr5ukuco9cz9eyrm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458673/avalanche2019/x3bekr5ukuco9cz9eyrm.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "FI- Short for my name Fei.",
    "inspiration_name": "FI"
  },
  {
    "_id": "78HDSNmFpgRDxpcAj",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-28T17:40:11.912Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ycaaep5h9p97aa84tbrt",
        "version": 1556473217,
        "signature": "2636402a119ba6e386b4962ac7372c8cb7e2bad0",
        "width": 900,
        "height": 900,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-28T17:40:17Z",
        "tags": [],
        "bytes": 34466,
        "type": "upload",
        "etag": "0bc343f5c82ac42c751dca74022b30b0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556473217/avalanche2019/ycaaep5h9p97aa84tbrt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556473217/avalanche2019/ycaaep5h9p97aa84tbrt.png"
      },
      {
        "public_id": "avalanche2019/z8flc0jwixnfirmfrcm9",
        "version": 1556484819,
        "signature": "b626bde4253b4fd4f7a5425a876652dda0ca01e9",
        "width": 382,
        "height": 500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-28T20:53:39Z",
        "tags": [],
        "bytes": 26343,
        "type": "upload",
        "etag": "d7084011193e235cbf28ff7968de2799",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556484819/avalanche2019/z8flc0jwixnfirmfrcm9.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556484819/avalanche2019/z8flc0jwixnfirmfrcm9.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:22:06.702Z" }
      }
    ],
    "title": "",
    "description": "First - very rough - pass at a castle done in OpenSCAD. Looks like this might take up a post or two. The design is based on the sheng, a Chinese instrument."
  },
  {
    "_id": "78LaT2Jh5uSEbKi6T",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T00:01:42.027Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x2ogpxm1mhje2bjmm8yb",
        "version": 1550016106,
        "signature": "4d8822761da5e10dee7e12dbd6880a6a104236c6",
        "width": 822,
        "height": 1082,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-13T00:01:46Z",
        "tags": [],
        "bytes": 42994,
        "type": "upload",
        "etag": "c1619318a46c148724023cd30c0a1c62",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550016106/avalanche2019/x2ogpxm1mhje2bjmm8yb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550016106/avalanche2019/x2ogpxm1mhje2bjmm8yb.png"
      },
      {
        "public_id": "avalanche2019/vsyhxcyxv2ab8uycryt6",
        "version": 1550016112,
        "signature": "0643059279767c5e52e6bfe068b17dc79e3f7169",
        "width": 1152,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-13T00:01:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 5380953,
        "type": "upload",
        "etag": "b8f756c6c90ff09127db433e3e1d5422",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550016112/avalanche2019/vsyhxcyxv2ab8uycryt6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550016112/avalanche2019/vsyhxcyxv2ab8uycryt6.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "247748",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1835236",
          "dar": "8:5"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2091382,
        "duration": 20.583333,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-13T12:43:02.488Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T20:29:14.601Z" }
      }
    ],
    "title": "",
    "description": "Customized Poster.",
    "inspiration_name": "Les Graphiquants",
    "inspiration_url": "http://les-graphiquants.fr/projets.html#!/air-poster-2014",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nlet fby_slider,fpy_slider,sby_slider;\nfunction setup() {\n  createCanvas(400, 530);\n  noStroke();\n  background(255); \n  fby_slider = createSlider(0, 560, 130);\n  let text1 = createP('First Blue Rect Y_pos');\n  text1.position(420,20);\n  fby_slider.position(420, 60);\n  let text2 = createP('First Pink Rect Y_pos');\n  text2.position(620,20);\n  fpy_slider = createSlider(0, 360, 130);\n   fpy_slider.position(620,60);\n  var text3 =createP('Second Blue Rect Y_pos');\n  text3.position(420,120);\n  sby_slider = createSlider(0, 160, 100);\n    sby_slider.position(420,160);\n  var text4 =createP('Yellow Semi R');\n  text4.position(620,120);\n  semi_slider = createSlider(0, 400, 250);\n  semi_slider.position(620,160);\n  \n\t\n}\n\n\nfunction draw() {\nvar y = fby_slider.value();\nvar y2 = fpy_slider.value();\nvar y3 = sby_slider.value();\nvar semi = semi_slider.value();\n fill('#011669');\n  rect(0,0,400,y);\n  fill('#E01B62');\n  rect(0,y,400,y2);\n  fill('#011669');\n  rect(0,y+y2,400,y3);\n  fill('#E01B62');\n  rect(0,y+y2+y3,400,170);\n  fill('#E7CE2A');\n  arc(200, y, y*2, y*2, PI, 0);\n   fill('#276B40');\narc(200, y, y2*2, y2*2, 0, PI);\n  fill('#E7CE2A');\n  arc(200, 560, semi,semi, PI, 0);\n  fill(0);\n \n}"
  },
  {
    "_id": "79Q8Z8YkLe5CZrYGj",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T04:27:06.431Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yy1orlt1dz0d7expjnrc",
        "version": 1550723267,
        "signature": "83caa163078c7ea9d789a3f530b0f2241a73c49d",
        "width": 688,
        "height": 694,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T04:27:47Z",
        "tags": [],
        "bytes": 19894,
        "type": "upload",
        "etag": "1fbc0c2aa2e3eed9b18b3a2d32dcd29b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550723267/avalanche2019/yy1orlt1dz0d7expjnrc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550723267/avalanche2019/yy1orlt1dz0d7expjnrc.png"
      },
      {
        "public_id": "avalanche2019/a5rjyghkql5pfthslv6m",
        "version": 1550723270,
        "signature": "a4a04ef465904b92db78bd6ab001efbdbec7bba5",
        "width": 654,
        "height": 670,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T04:27:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 261207,
        "type": "upload",
        "etag": "c9ba7370ab5f11e15e0aaab0ae9ef9a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550723270/avalanche2019/a5rjyghkql5pfthslv6m.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550723270/avalanche2019/a5rjyghkql5pfthslv6m.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "370220",
          "dar": "327:335"
        },
        "frame_rate": 15,
        "bit_rate": 373152,
        "duration": 5.6,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-21T04:40:27.183Z" }
      }
    ],
    "title": "",
    "description": "Bzzzzzzzzz 🐝🐝🐝",
    "inspiration_name": "The Coding Train",
    "inspiration_url": "https://www.youtube.com/watch?v=y7sgcFhk6ZM&list=PLRqwX-V7Uu6bgPNQAdxQZpJuJCjeOr7VD&index=3",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet w = 300;\nlet h = 300;\nlet emoji;\nlet paused = false;\n\nlet xoff1 = 0;\nlet xoff2 = 10000;\n\nfunction preload() {\n  emoji = loadImage(\n    \"https://raw.githubusercontent.com/AndrewLevinson/comp-form/master/week4/sketch-2/bee.png\"\n  );\n}\n\nfunction setup() {\n  createCanvas(w, h, WEBGL);\n  colorMode(HSB, 100);\n  background(color(30, 15, 95));\n}\n\nfunction draw() {\n  // frameRate(30);\n  moveStuff();\n  drawStuff();\n}\n\nfunction moveStuff() {\n  xoff1 += 0.03;\n  xoff2 += 0.02;\n}\n\nfunction drawStuff() {\n  translate(-w / 2, -h / 2);\n\n  noStroke();\n  background(80, 15, 95);\n\n  texture(emoji);\n  noiseSeed(1);\n  ellipse(noise(xoff1) * w, noise(xoff2) * h, 30);\n  noiseSeed(2);\n  ellipse(noise(xoff1) * w, noise(xoff2) * h, 30);\n  noiseSeed(3);\n  ellipse(noise(xoff1) * w, noise(xoff2) * h, 30);\n}\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < 400 && mouseY > 0 && mouseY < 400) {\n    paused ? loop() : noLoop();\n    paused = !paused;\n  }\n}"
  },
  {
    "_id": "79uAXmn28xx9XbnKe",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T03:35:26.447Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/brhqt7lllfabwrx1loho",
        "version": 1553830532,
        "signature": "1ad7566c005b46f9e01bd844ec17b2bbd2ce3f4e",
        "width": 1188,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T03:35:32Z",
        "tags": [],
        "bytes": 64676,
        "type": "upload",
        "etag": "8b8e87beae3446ac7f98ece4d5da1604",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553830532/avalanche2019/brhqt7lllfabwrx1loho.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553830532/avalanche2019/brhqt7lllfabwrx1loho.png"
      },
      {
        "public_id": "avalanche2019/j9wrclfdarblevu5xh9w",
        "version": 1553830608,
        "signature": "d44f7c144164ec55175a3706d103767acf5a2b87",
        "width": 1176,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T03:36:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 6149455,
        "type": "upload",
        "etag": "63a3605e44abd93cf26a0d04b2b2eb3f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553830608/avalanche2019/j9wrclfdarblevu5xh9w.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553830608/avalanche2019/j9wrclfdarblevu5xh9w.mov",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "mjpeg",
          "level": -99,
          "profile": "192",
          "bit_rate": "7193343",
          "dar": "147:148"
        },
        "frame_rate": 20,
        "bit_rate": 7194448,
        "duration": 6.838,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Moving rectangles"
  },
  {
    "_id": "7AwbM2unac5DRGgwW",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "created_at": { "$date": "2019-02-01T04:50:48.369Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gbwdqxt8efvfttg9lav6",
        "version": 1548996679,
        "signature": "f8c46970640b52b782e63b3dc121f30f77aa60a4",
        "width": 1200,
        "height": 1188,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T04:51:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 18387812,
        "type": "upload",
        "etag": "e324700331dc51b47e67b9ecdd7c65af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548996679/avalanche2019/gbwdqxt8efvfttg9lav6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548996679/avalanche2019/gbwdqxt8efvfttg9lav6.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "7261112",
          "dar": "100:99"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7270304,
        "duration": 20.233333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:59.713Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:12.523Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:38.881Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "random terrain generator-processing"
  },
  {
    "_id": "7BWfHCeiYhaoT3pJs",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T02:07:54.46Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eljxefnrsqykjpjoc18s",
        "version": 1550801292,
        "signature": "6a0ce9a5ae731cd889ca9614772d73a0fe9acf2a",
        "width": 992,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T02:08:12Z",
        "tags": [],
        "bytes": 1472032,
        "type": "upload",
        "etag": "70a625b3c761dfddc93fa65eba59fbd2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550801292/avalanche2019/eljxefnrsqykjpjoc18s.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550801292/avalanche2019/eljxefnrsqykjpjoc18s.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:41:33.697Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T21:08:55.968Z" }
      }
    ],
    "title": "",
    "description": "Water texture made by Mapping Noise code from class",
    "inspiration_name": "Mapping Noise",
    "inspiration_url": "http://compform.net/noise/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n    createCanvas(500, 500);\n    rectMode(CENTER);\n    noFill();\n    smooth();\n    strokeWeight(0.185);\n    stroke(22, 103, 135);\n}\n\nfunction draw() {\n    background(119, 236, 255);\n    let n;\n    for (let y = 0; y < 500; y += 2) {\n        for (let x = 0; x < 500; x += 2) {\n            n = noise(x, y, millis() * .001);\n            n = noise(x*.004, y*.004, millis() * .0003);\n            let diameter = n * 15;\n            rect(x, y, diameter, diameter);\n        }\n    }\n}"
  },
  {
    "_id": "7CnQ4huMEX9yFFGPF",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-27T18:38:49.21Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lmuyqgwe7tduicmzlher",
        "version": 1553711958,
        "signature": "e68538c20e92cf463c9d7932773cca0ea2638b18",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-27T18:39:18Z",
        "tags": [],
        "bytes": 1613751,
        "type": "upload",
        "etag": "e05b17b8148ab40cd1c59a25708f5b5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553711958/avalanche2019/lmuyqgwe7tduicmzlher.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553711958/avalanche2019/lmuyqgwe7tduicmzlher.jpg"
      },
      {
        "public_id": "avalanche2019/tfk8txgiim6uaatrfl9x",
        "version": 1553711982,
        "signature": "b0a929669608f12448709cb26aef0576c5f78ad7",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-27T18:39:42Z",
        "tags": [],
        "bytes": 1535430,
        "type": "upload",
        "etag": "c3390263397bf0ec6333df9bb55b24f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553711982/avalanche2019/tfk8txgiim6uaatrfl9x.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553711982/avalanche2019/tfk8txgiim6uaatrfl9x.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Laser cut the bookmarks today. At first I had the center diamond cut out but decided I wanted to keep it engraved. Also board turned blue after being laser cut.",
    "inspiration_name": "Akshansh",
    "inspiration_url": "https://i.ytimg.com/vi/tJypc4ejxfU/maxresdefault.jpg"
  },
  {
    "_id": "7G32FxfML9MwFKtj7",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-02-01T04:24:59.972Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dchzfdlapl46htehbgsu",
        "version": 1548995115,
        "signature": "8a7daefed456289ac7bcc1a37913ea8794e61450",
        "width": 1422,
        "height": 1420,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T04:25:15Z",
        "tags": [],
        "bytes": 161492,
        "type": "upload",
        "etag": "4627c475ecda24bdaf58fdbe30959dbc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548995115/avalanche2019/dchzfdlapl46htehbgsu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548995115/avalanche2019/dchzfdlapl46htehbgsu.png"
      },
      {
        "public_id": "avalanche2019/uever6nrqemltkq7mcgi",
        "version": 1548995121,
        "signature": "b642b1220f28c3b8cc6200f6056922b71a7ddc64",
        "width": 1422,
        "height": 1420,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T04:25:21Z",
        "tags": [],
        "bytes": 194397,
        "type": "upload",
        "etag": "5dba479619a23c1d100d812093d44ac6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548995121/avalanche2019/uever6nrqemltkq7mcgi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548995121/avalanche2019/uever6nrqemltkq7mcgi.png"
      },
      {
        "public_id": "avalanche2019/mgcep0wrwzprktqlcb9v",
        "version": 1548995126,
        "signature": "37a571e9da841e41d5f056443d8e2c6d7e665cb1",
        "width": 1424,
        "height": 1422,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T04:25:26Z",
        "tags": [],
        "bytes": 141184,
        "type": "upload",
        "etag": "f602087ce8589dfd735e6f3016fc4800",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548995126/avalanche2019/mgcep0wrwzprktqlcb9v.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548995126/avalanche2019/mgcep0wrwzprktqlcb9v.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:18.244Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:55.99Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:39:16.203Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2019-11-03T03:43:20.884Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Truchet tiles at various densities, p5",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// Truchet tiles\n\nlet debugging = false; // true turns on logging\n\n// Canvas specs\nconst canvas_width = 700,\n      canvas_height = canvas_width,\n      num_cols = 10,\n      num_rows = num_cols,\n      tile_width = canvas_width / num_cols,\n      stroke_color = \"#0b53bf\",\n      stroke_weight = 5,\n      background_color = \"#9aafc7\",\n      rows = [],            // An array of row arrays, retrievable by row number\n      tilesOnThisRow = [];  // An array of Tile objects, retrievable by col number;\n\n\nfunction setup() {\n  const canvas = createCanvas(canvas_width + 2, canvas_height + 2);\n  canvas.parent(\"sketch-container\");\n  stroke(stroke_color);\n  strokeWeight(stroke_weight);\n  background(background_color);\n  noFill();\n\n  for (row = 0; row < num_rows; row++) {\n    for (col = 0; col < num_cols; col++) {\n      tilesOnThisRow[col] = new Tile(col, row); // Add new tile to row\n      tilesOnThisRow[col].layTile();\n      rows[row] = tilesOnThisRow; // Add row to array of rows\n    }\n  }\n  if (debugging) { console.log(rows); }\n}\n\nclass Tile {\n  constructor(col, row) {\n    this.x = col * tile_width;\n    this.y = row * tile_width;\n    this.rand_chooser = -1 + random(2); // rand num btwn 0 and 1\n  }\n\n  // TODO: clean methods\n  layTile() {\n    if (this.rand_chooser > 0) {\n      // Top left\n      arc(\n        this.x + tile_width, this.y,\n        tile_width, tile_width,\n        PI / 2, -PI\n      );\n      // Bottom right\n      arc(\n        this.x, this.y + tile_width,\n        tile_width, tile_width,\n        -PI / 2, 0\n      );\n    } else {\n      // Top right \n      arc(\n        this.x, this.y,\n        tile_width, tile_width,\n        0, PI / 2\n      );\n      // Bottom left\n      arc(\n        this.x + tile_width, this.y + tile_width,\n        tile_width, tile_width,\n        -PI, -PI / 2\n      );\n    }\n  }\n}"
  },
  {
    "_id": "7HTXPpkJRihJynCAR",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "created_at": { "$date": "2019-02-28T23:22:40.067Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jan8cg0twwneufcxcjcm",
        "version": 1551448110,
        "signature": "7cd69baf9601bacaa7ca3a4888040b0639bbd9bc",
        "width": 842,
        "height": 842,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T13:48:30Z",
        "tags": [],
        "bytes": 84961,
        "type": "upload",
        "etag": "f6b029810a6487cd2b44bc0522967e88",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551448110/avalanche2019/jan8cg0twwneufcxcjcm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551448110/avalanche2019/jan8cg0twwneufcxcjcm.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n//Analyze: The sketch shows a group of ellipses with different\n//         radius / color gathering together. The radius of the\n//         ellipses seems randomly distributed (doesn't follow\n//         a visible pattern). The position of the ellipses looks\n//         random but seems to follow a high frequency noise pattern\n//         The colors of the ellipse seems to be all over the color\n//         spectrum but it seems that the smaller the diameter, the\n//         more red the ellipse will be.\n            \n//Strategize: Change the randomly displayed position to be displayed\n//            according to noise. Change noiseFrequency from 0.02\n//            to 0.2. Play around with rgb first then hsb, try and\n//            find the correct colors used.\n\n\nfunction setup() {\n\t  colorMode(HSB, 1);\n    createCanvas(400, 400);\n\t    background(0,0,0.2);\n}\n\n\nfunction draw() {\n\n\n    noStroke();\n    ellipseMode(CENTER);\n\n\n    var noiseFrequency = .2;\n\n    for (var i = 0; i < 100; i++) {\n        // these points are not scattered in the same way\n        // how can you make the arrangement match the challenge?\n\t\t\t\n        let x = noise(i*noiseFrequency,0)*width;\n        let y = noise(i*noiseFrequency,height)*height;\n\n        // the diameter shouldn't always be 10, it needs to vary\n        var diameter = noise(i*noiseFrequency,1)*20;\n\n        // the colors also need to change\n        // what colorMode would be easiest to work with?\n\t    let h = map(diameter,0,20,1,0.19);\n        let s = 1;\n        let b = 1;\n        fill(h, s, b)\n\n        ellipse(x, y, diameter, diameter);\n    }\n\n    noLoop();\n}"
  },
  {
    "_id": "7J5qxcKbnxWQv7fhZ",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "created_at": { "$date": "2019-03-01T17:10:30.418Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ej3soxkvnr7btc2aieqc",
        "version": 1551460239,
        "signature": "d119c26c2a738023471aeb119641b99fbb81dd3b",
        "width": 804,
        "height": 494,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T17:10:39Z",
        "tags": [],
        "bytes": 33004,
        "type": "upload",
        "etag": "23c8bc069cdd6f4830e30e353a3be00b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551460239/avalanche2019/ej3soxkvnr7btc2aieqc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551460239/avalanche2019/ej3soxkvnr7btc2aieqc.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// draws a rectangle, where you tell it to!\n\n//Analyze: The sketch shows a moving wave made of white ellipses \n//         with same radius. This wave is moving according to\n//         three parameters: amplitute, frequency and speed. Amplitute\n//         controls the height of the moving wave; Frequency controls\n//         the density of the moving wave; Speed controls how fast\n//         the wave is moving.\n\n//         \n            \n//Strategize: Change the randomly moving xoffs and yoffs to be\n//            moving according to noise. Add other 2 sliders to\n//            be an input parameter. Play with frameCount to make\n//            the sketch move.\n\n\n\nvar amplitude_slider;\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\n\nfunction setup() {\n    createCanvas(500, 300);\n\n\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 200, 50);\n    \n    createP('Frequency');\n    frequency_slider = createSlider(0, 100, 50);\n    \n    createP('Speed');\n    speed_slider = createSlider(0, 25, 10);\n\n\n}\n\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n\n    var amplitude = amplitude_slider.value() / 100;\n    var frequency = frequency_slider.value()/100;\n    var speed = speed_slider.value()/100;\n\n\n    noiseDetail(1, .5);\n\n\n\n    fill(255);\n    noStroke();\n\n    // study this loop. do you understand how the line of ellipses is created?\n    for (i = 0; i < 1; i += .02) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n\n        // hint: drive offsetX and offsetY with noise() instead of random()\n        var offsetX = noise(i * frequency) * amplitude;\n        var offsetY = noise(i * frequency * 10, frameCount * speed)*amplitude*y;\n\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n\n\n\n}"
  },
  {
    "_id": "7Jrcwt7c5z5WE2pGS",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T15:54:44.396Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "7M97XTMNyit8o4ECE",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-07T23:51:20.259Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xoldknrc4z36addjb7et",
        "version": 1554681094,
        "signature": "21fcab7aad87ea6f26310212537898dbbbeefa8b",
        "width": 1102,
        "height": 1004,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-07T23:51:34Z",
        "tags": [],
        "bytes": 85701,
        "type": "upload",
        "etag": "105bad6f908783a7d6c07d4d5abbffb7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554681094/avalanche2019/xoldknrc4z36addjb7et.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554681094/avalanche2019/xoldknrc4z36addjb7et.png"
      },
      {
        "public_id": "avalanche2019/gf0yvymlh8wkvy7mzkfu",
        "version": 1554681166,
        "signature": "c7b2e84346cd7d48f0c0ebc822f150c8bdf7c88c",
        "width": 1100,
        "height": 1014,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-07T23:52:46Z",
        "tags": [],
        "bytes": 85422,
        "type": "upload",
        "etag": "0a9bb294f1e1f78694f2779150c53f2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554681166/avalanche2019/gf0yvymlh8wkvy7mzkfu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554681166/avalanche2019/gf0yvymlh8wkvy7mzkfu.png"
      },
      {
        "public_id": "avalanche2019/hlggnouz3ga5es4uor7l",
        "version": 1554681197,
        "signature": "bae81ff2bececf78e7d930d547c567cd55f30c41",
        "width": 1102,
        "height": 1012,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-07T23:53:17Z",
        "tags": [],
        "bytes": 110510,
        "type": "upload",
        "etag": "fc89a7d7b20f5a69868ec5844c797de5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554681197/avalanche2019/hlggnouz3ga5es4uor7l.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554681197/avalanche2019/hlggnouz3ga5es4uor7l.png"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-08T02:05:54.021Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-08T14:08:10.163Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-04-10T06:38:10.774Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T06:22:58.359Z" }
      }
    ],
    "title": "",
    "description": "Donald Trump writes the Great American Novel Generator - getting set up, testing and having fun with the text generators.",
    "inspiration_name": "Starter Code  from Justin's Title Generator",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\n\nfunction generateTitle() {\n\tvar name_prefixes = [\"lowlifes\", \"Losers\", \"Total loser\", \"Morons\", \"Facelifts\", \"Big Beautiful Wall\",  \"Cyber\", \"Dummies\",];\n\tvar primary_nouns = [\"Covfefe\", \"Chai-Na\", \"Loser\", \"Fire and Fury\", \"Fake News\", \"Billions and Billions of Dollars\", \"Fox News\", \"illegals\"];\n\tvar adjectives = [\"Crooked\", \"YUUUGE\", \"Bigly\", \"many, many, many\", \"Terrific\", \"Tremendous\", \"Illegal\", \"very very happy\", \"Loser\", \"Phenomenal\"];\n\tvar secondary_nouns = [\"Loser\", \"Terrorist\", \"Immigrant\", \"Chai-Na\", \"Covfefe\", \"Fake News\"];\n\n\tvar name_prefix = sample(name_prefixes);\n\tvar primary_noun = sample(primary_nouns);\n\tvar adjective = sample(adjectives);\n\tvar secondary_noun = sample(secondary_nouns);\n\n\tvar title = \"\";\n\tif (Math.random() < 0.5) {\n\t\ttitle = `${name_prefix} ${primary_noun} and the ${adjective} ${secondary_noun}`;\n\t}\n\telse {\n\t\ttitle = `The ${adjective} ${secondary_noun} of ${name_prefix} ${primary_noun}`;\n\t}\n\n\treturn title;\n}\n\nfunction generateSubtitle() {\n\tvar story_adjectives = [\"Totally Lost\", \"Forgotten\", \"Very very Happy\", \"Massive\", \"YUUGE\", \"GREAT\", \"Very, very Bad\", \"Incredible\", \"Truly great\", \"Unbelievable\", \"major, major\", \"Vast vast\" ];\n\tvar story_formats = [\"Story, believe me.\", \"Fiasco, never seen before, ever.\", \"Super-luxury, I have many many friends.\", \"Law, not gonna happen folks.\", \"Impeachment, to be perfectly honest.\", \"Collusion, believe me. \", \"Wall, that I can tell you.\", \"Tweet… okay?\", \"Lie, A lot of people tell me …\", \"Disaster, Everybody’s talking about it.\",\"Disaster, The Likes of which have never been seen before.\"];\n\n\tvar adjective = sample(story_adjectives);\n\tvar format = sample(story_formats);\n\tvar subtitle = `A  ${adjective}  ${format}`;\n\n\treturn subtitle;\n\t\n\t\n}\n\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\n\n\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t\t\n\t\t#author {\n\t\t\tmargin-top: .10em;\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 18px;\n\t\t\tfont-weight: bold;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n\t\t<div id=\"author\">By Donald Trump</div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "7NHdt9k5CAaSYqDRr",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T04:53:36.281Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-04-26T18:29:41.959Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Mission impossible",
    "inspiration_url": "https://www.youtube.com/watch?v=FCO95esUzBw",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// melody from https://medium.com/dev-red/tutorial-lets-make-music-with-javascript-and-tone-js-f6ac39d95b8c\n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n\n  ['G4', '3n'],\n  ['G4', '5n'],\n  ['rest', '0.2s'],\n  ['G4', '5n'],\n  ['rest', '0.3s'],\n  ['Bb4', '5n'],\n  ['C5', '4n'],\n  ['G4', '3n'],\n  ['G4', '4n'],\n  ['rest', '0.3s'],\n  ['G4', '4n'],\n  ['rest', '0.2s'],\n  ['F4', '4n'],\n  ['F#4', '3n'],\n  ['G4', '4n'],\n  ['rest', '0.2s'],\n  ['G4', '5n'],\n  ['rest', '0.2s'],\n  ['G4', '5n'],\n  ['rest', '0.3s'],\n  ['Bb4', '5n'],\n  ['C5', '4n'],\n  ['G4', '3n'],\n  ['G4', '4n'],\n  ['rest', '0.3s'],\n  ['G4', '4n'],\n  ['rest', '0.2s'],\n  ['F4', '4n'],\n  ['F#4', '3n'],\n  ['G4', '3n'],\n\n];\n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n\n};\nconsole.log('click for music!');"
  },
  {
    "_id": "7QJ47YNBQKrGfjmcJ",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-16T12:32:17.255Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lnekmdncdv3kgahoz8av",
        "version": 1555417943,
        "signature": "4fcd8dc08a8a42c859bafbe3ddd407e53711456d",
        "width": 1000,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-16T12:32:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 2143178,
        "type": "upload",
        "etag": "4c4c7c65f0191be8aad12eb7fd3f1527",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555417943/avalanche2019/lnekmdncdv3kgahoz8av.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555417943/avalanche2019/lnekmdncdv3kgahoz8av.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "238171",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "604958",
          "dar": "25:18"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 853006,
        "duration": 20.1,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-17T04:28:04.933Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-17T17:49:42.188Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T21:02:08.953Z" }
      }
    ],
    "title": "",
    "description": "Getting familiar with pure data"
  },
  {
    "_id": "7RAgCTDsfN2BKxvcE",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T17:40:21.206Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rqhvb7eo3qbgsmwtmuyi",
        "version": 1550166026,
        "signature": "9eb23abeafcb993aa733a1a20e535c3ddbfb1aaf",
        "width": 1032,
        "height": 944,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T17:40:26Z",
        "tags": [],
        "bytes": 51139,
        "type": "upload",
        "etag": "a52ed5f146c5acf02730df55731b77fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550166026/avalanche2019/rqhvb7eo3qbgsmwtmuyi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550166026/avalanche2019/rqhvb7eo3qbgsmwtmuyi.png"
      },
      {
        "public_id": "avalanche2019/zwsjob8b9bulnsz45z6y",
        "version": 1550166030,
        "signature": "6103bb90743534accbf3e6ced60bda08ccc93dec",
        "width": 528,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-14T17:40:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 325160,
        "type": "upload",
        "etag": "18cdb86a504abbb15178d529ceee5083",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550166030/avalanche2019/zwsjob8b9bulnsz45z6y.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550166030/avalanche2019/zwsjob8b9bulnsz45z6y.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "216712",
          "dar": "11:10"
        },
        "frame_rate": 60,
        "bit_rate": 223926,
        "duration": 11.616667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T19:51:05.364Z" }
      }
    ],
    "title": "",
    "description": "☾ Night Sky - sketch 1 (use slider to go through all moon phases)",
    "inspiration_name": "Moon Phase API",
    "inspiration_url": "https://editor.p5js.org/shiffman/sketches/B1hMJeQa"
  },
  {
    "_id": "7Y7KnvvQdSjW7eLYn",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T17:52:54.038Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "hmmm...Work in Progress:(",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n  ['C6', '2n'],\n ['C6', '2n'],\n  ['C6', '2n'],\n  ['C6', '2n'],\n  ['C6', '4n'],\n  \n   ['rest', '0.2s'],\n   \n   ['C7', '4n'],\n    ['B6', '4n'],\n  ['C7', '8n'],\n   ['rest', '0.2s'],\n   \n  ['F7', '4n'],\n  ['F7', '4n'],\n  ['rest', '0.2s'],\n  \n  ['Bb', '4n'],\n  ['C7', '4n'],\n  ['Bb', '2n'],\n\n//   ['rest', '1m'],\n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "7YHu85HTnYHoPkauY",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T02:43:12.588Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hmi8mhgdrli9mibxdhjp",
        "version": 1556851466,
        "signature": "f159ec044db3ba29c3fffbcdba8b849722c978d0",
        "width": 1998,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T02:44:26Z",
        "tags": [],
        "bytes": 262882,
        "type": "upload",
        "etag": "ba587600ef73f98a6cf5c024748702e4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556851466/avalanche2019/hmi8mhgdrli9mibxdhjp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556851466/avalanche2019/hmi8mhgdrli9mibxdhjp.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:54:16.491Z" }
      }
    ],
    "title": "",
    "description": "lollipop",
    "code": "$fn=300;\n\nrotate([90,0,0]) translate([0,20,0])union(){\n color(\"pink\"){  \nrotate_extrude(convexity = 10)\ntranslate([10, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n \n color(\"yellow\"){\nrotate_extrude(convexity = 10)\ntranslate([9, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n \n \n  color(\"lightblue\"){  \nrotate_extrude(convexity = 10)\ntranslate([8, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n \n   color(\"lightgreen\"){  \nrotate_extrude(convexity = 10)\ntranslate([7, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n \n    color(\"lightyellow\"){  \nrotate_extrude(convexity = 10)\ntranslate([6, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n \n     color(\"lightpink\"){  \nrotate_extrude(convexity = 10)\ntranslate([5, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n \n  \n color(\"yellow\"){\nrotate_extrude(convexity = 10)\ntranslate([4, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n  color(\"lightblue\"){\nrotate_extrude(convexity = 10)\ntranslate([3, 0, 0])\ncircle(r = 2, $fn = 100);\n }\n \n   color(\"lightgreen\"){\nrotate_extrude(convexity = 10)\ntranslate([1, 0, 0])\ncircle(r = 1, $fn = 100);\n }\n \n}\n\n    color(\"orange\"){\n        translate([0,0,0]) cube([1,1,20],true); \n   }"
  },
  {
    "_id": "7aKraW6AB3PSf2tEB",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T05:17:48.016Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pb6fvoceq2qcueep6w8l",
        "version": 1555651076,
        "signature": "78016aaf8ce7c7dbd0b372321799996c1ebca472",
        "width": 734,
        "height": 756,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T05:17:56Z",
        "tags": [],
        "bytes": 236123,
        "type": "upload",
        "etag": "87085b01c3efb343ddce0220c9c30f56",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555651076/avalanche2019/pb6fvoceq2qcueep6w8l.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555651076/avalanche2019/pb6fvoceq2qcueep6w8l.png"
      },
      {
        "public_id": "avalanche2019/xvnq8pgusnhkpirmsgvj",
        "version": 1555651093,
        "signature": "d5e0cf79bb978ff4213f72481b8478767fa7bad8",
        "width": 796,
        "height": 756,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T05:18:13Z",
        "tags": [],
        "bytes": 235733,
        "type": "upload",
        "etag": "9d6d76df7ded1ea8677c550f3b040c04",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555651093/avalanche2019/xvnq8pgusnhkpirmsgvj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555651093/avalanche2019/xvnq8pgusnhkpirmsgvj.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Sorry I had to post it...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.dom.min.js\n// balls code from https://editor.p5js.org/samchasan/sketches/ryJmJrlhZ\n\n\nvar myBall = [];\nvar r = 10;\nlet kick;\nlet hat;\n\nvar gif_createImg;\n\nlet playing = false;\n\n\nfunction preload() {\n hat = loadSound(\"/sound/sketches/hat.wav\");\n  kick = loadSound(\"/sound/sketches/kick.wav\");\n\n\n\n  gif_createImg = createImg('https://media.giphy.com/media/mACQOxJzNLxYHWQgB9/giphy.gif');\n\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  for (var i = 0; i<43; i++){\n   myBall.push(new Ball());\n   }\n\n  const startButton = createButton('play');\n  startButton.mousePressed(start);\n\n  const stopButton = createButton('stop');\n  stopButton.mousePressed(stop);\n}\n\n\nfunction start() {\n  playing = true;\n}\n\nfunction stop() {\n  playing = false;\n}\n\nfunction draw() {\n  clear();\n  for (var i = 0; i< myBall.length; i++){\n   myBall[i].display();\n   myBall[i].move();\n   myBall[i].bounce();\n   }\n  gif_createImg.position(10, 50);\n  gif_createImg.style(\"z-index: -1\");\n  if (playing) {\n\n    if (frameCount % 25 === 0) {\n      kick.play();\n    }\n    if (frameCount % 50 === 0) {\n      hat.play();\n    }\n    // if (frameCount % 70 === 0) {\n    //   hat.play();\n    // }\n    if (frameCount % 80 === 0) {\n      kick.play();\n    }\n\n  }\n}\n\nclass Ball{\n  constructor() {\n  this.x = random(width);\n  this.y = random(height);\n  this.xspeed = random(2,5);\n  this.yspeed = random(2,5);\n  }\n\n  display() {\n  var color1 = random(255);\n  var color2 = random(255);\n  var color3 = random(255);\n  noStroke();\n  fill(color1,color2,color3)\n  ellipse(this.x, this.y, r*2, r*2);\n  }\n\n  move() {\n  this.x += this.xspeed;\n  this.y += this.yspeed;\n  }\n\n  bounce() {\n  if (this.x > width - r || this.x < r) {\n    this.xspeed = -this.xspeed;\n  }\n\n  if (this.y > height - r || this.y < r) {\n    this.yspeed = -this.yspeed;\n  }\n  }\n}"
  },
  {
    "_id": "7cJT2ga2eDuCH4Xxu",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:34:23.324Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uxcc7cv26k4irbwdqrdc",
        "version": 1550854142,
        "signature": "44e4ccce7d5bd2acb04f5ae5ddd6aa2bbde942a4",
        "width": 988,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T16:49:02Z",
        "tags": [],
        "bytes": 220610,
        "type": "upload",
        "etag": "7f5fd248db57eba7f1de346dd12b84ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550854142/avalanche2019/uxcc7cv26k4irbwdqrdc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550854142/avalanche2019/uxcc7cv26k4irbwdqrdc.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "code from class (mapping noise–vary over distance from center).",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n    createCanvas(500, 500);\n    rectMode(CENTER);\n    noFill();\n    smooth();\n    strokeWeight(0.4);\n    stroke(250,250,250,60);\n}\n\n\nfunction draw() {\n    background(\"#052138\");\n    let n;\n\n    for (let y = 100; y < 400; y += 8) {\n        for (let x = 100; x < 400; x += 8) {\n\n            n = noise(x);\n            n = noise(dist(70, 70, x, y) * .1);\n            n = noise(dist(70, 70, x, y) * .01, millis() * .005);\n            n = noise(dist(70, 70, x, y) * .01 +  millis() * .001);\n            let diameter = n * 10;\n            rect(x, y, diameter, diameter,1);\n        }\n    }\n}"
  },
  {
    "_id": "7cZjNZJYAh4zh4NwB",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T19:09:48.973Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lia79cehhxky3adkkyqo",
        "version": 1555700998,
        "signature": "4a6447c815cd6e4d488e7fa7d8420aab79822477",
        "width": 396,
        "height": 394,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-19T19:09:58Z",
        "tags": [],
        "bytes": 16786,
        "type": "upload",
        "etag": "f07a65d5912e562f4df6721453b58303",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555700998/avalanche2019/lia79cehhxky3adkkyqo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555700998/avalanche2019/lia79cehhxky3adkkyqo.jpg"
      },
      {
        "public_id": "avalanche2019/p9v7td3sw4uujfvl9wtx",
        "version": 1555701008,
        "signature": "a9b4310287311d337361f89c3ce775a9f9c3c12c",
        "width": 388,
        "height": 384,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T19:10:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 3567299,
        "type": "upload",
        "etag": "fccd3ccb813dc7760af9043103466dcc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555701008/avalanche2019/p9v7td3sw4uujfvl9wtx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555701008/avalanche2019/p9v7td3sw4uujfvl9wtx.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "338169",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "1151768",
          "dar": "97:96"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1496768,
        "duration": 19.066667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "First attempt to make the gradient reactive, but couldn’t figure out how to separate the frequency bands properly",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\n\nvar w = 200;\nvar h = 200;\nvar circleDistance = 5;\nvar circleSize = 20;\n\nfunction preload() {\n  change = loadSound('03_change_for_the_better_0008FBOAIA16.wav');\n  // change = loadSound('05_y_r_u_so_supercillious_0004_1FBOAIA16.wav');\n}\n\nfunction setup() {\n  colorMode(HSB, 360, 1, 1, 1)\n  frameRate(30)\n  noStroke()\n  createCanvas(w, h);\n  window.button = createButton('start');\n  button.mousePressed(togglePlay);\n  background(0, 1, 1);\n  fft = new p5.FFT();\n  amplitude = new p5.Amplitude();\n}\nfunction draw() {\n  if (play) {\n    myUpdate()\n  }\n}\n\nfunction myUpdate() {\n  var spectrum = fft.analyze();\n  var smooth = fft.smooth(0.4);\n  // console.log(fft.getEnergy(\"bass\"));\n  var bass = parseInt(fft.getEnergy(\"bass\"));\n  var mapBass = map(bass, 0, 255, 180, 210);\n  var mid = parseInt(fft.getEnergy(\"mid\"));\n  var mapMid = map(mid, 0, 255, 0, 90);\n  var treble = parseInt(fft.getEnergy(\"treble\"));\n  var mapTreble = map(treble, 0, 255, 270, 300);\n  // console.log(mid, mapMid, treble, mapTreble);\n\n  push()\n  var levelL = amplitude.getLevel(0);\n  var hueLevelL = map(levelL, 0, 0.5, 0, 360);\n  var levelR = amplitude.getLevel(1);\n  var hueLevelR = map(levelR, 0, 0.5, 360, 0);\n  let acc = sin(frameCount*0.01)\n  let accMap = map(acc, -1, 1, -2*PI, 2*PI)\n  translate(w/2, h/2)\n  rotate(mapBass*0.5)\n  translate(-w/2, -h/2)\n  makeCircles(140, w/2, h/2, mapBass + mapMid, 70 + mapTreble);\n  pop()\n  beginShape();\n  for (i = 0; i < spectrum.length; i++) {\n    vertex(i, map(spectrum[i].ctr, 0, 255, height, 0));\n  }\n  endShape();\n}\n\nfunction makeCircles(num, x, y, startHue, endHue) {\n  for (let i = 0; i < num; i += circleDistance) {\n        makeCircle(i, x, y, startHue, endHue, num);\n    }\n}\n\nfunction makeCircle(radius, xP, yP, startHue, endHue, num) {\n  let circum = 2 * PI * radius\n  for (let a = 0; a < circum/radius - circum/radius*0.1/num; a += PI/radius) {\n    let x = radius * sin(a) + xP;\n    let y = radius * cos(a) + yP;\n    let hue = map(a, 0, 2*PI, startHue, endHue)\n    fill(hue, 1, 1, 0.2)\n    ellipse(x, y, circleSize, circleSize)\n  }\n}\n\nvar play = false;\nfunction togglePlay() {\n  if (play) {\n    change.pause()\n    play = false;\n    button.elt.innerHTML = \"start\"\n\n  } else {\n    play = true;\n    change.play(0, 1, 1);\n    button.elt.innerHTML = \"stop\"\n\n  }\n}"
  },
  {
    "_id": "7ct4xy5z4PociHm7j",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-29T21:03:25.017Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/imw5m7myxt2lmnzmklgf",
        "version": 1548795812,
        "signature": "6d0a99a57bb5fbc4cc20be3f896c9023040ee80a",
        "width": 982,
        "height": 944,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-29T21:03:32Z",
        "tags": [],
        "bytes": 74799,
        "type": "upload",
        "etag": "73acede0e3c87c2c1cbd0157194fc49d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548795812/avalanche2019/imw5m7myxt2lmnzmklgf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548795812/avalanche2019/imw5m7myxt2lmnzmklgf.png"
      },
      {
        "public_id": "avalanche2019/zrocb2s6t8va24dqghwj",
        "version": 1548795854,
        "signature": "0dae9dcb1ee41b5096879d4e4565beb8a3d9af1a",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-29T21:04:14Z",
        "tags": [],
        "bytes": 2303645,
        "type": "upload",
        "etag": "443943a3976ef0e5dd2f4a74e71a2d95",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548795854/avalanche2019/zrocb2s6t8va24dqghwj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548795854/avalanche2019/zrocb2s6t8va24dqghwj.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Made using Alonso's tiles with Illustrator."
  },
  {
    "_id": "7dJ5QMsgBzGbSuYP5",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T17:39:51.445Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mp6vef0l8sokfqf8aqvc",
        "version": 1556905200,
        "signature": "1a7a93b9d6e6a5caebcf1fc725c1b3b0824cdef2",
        "width": 1200,
        "height": 4348,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T17:40:00Z",
        "tags": [],
        "bytes": 753609,
        "type": "upload",
        "etag": "7bfd9b2f3891cfb68ff880cc8f665e31",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556905200/avalanche2019/mp6vef0l8sokfqf8aqvc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556905200/avalanche2019/mp6vef0l8sokfqf8aqvc.jpg"
      },
      {
        "public_id": "avalanche2019/ciydnk5g4sffjto6tzif",
        "version": 1556905399,
        "signature": "4ff8dd9b92840f3e678c368cb4187fc957624521",
        "width": 2436,
        "height": 1388,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-03T17:43:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 19894484,
        "type": "upload",
        "etag": "bccf8e9bcc589d9f5d2aa77d8df1348f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556905399/avalanche2019/ciydnk5g4sffjto6tzif.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556905399/avalanche2019/ciydnk5g4sffjto6tzif.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "24042447",
          "dar": "609:347"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 26234482,
        "duration": 6.066667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-05-03T17:42:46.583Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T17:43:32.27Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T18:23:48.629Z" }
      }
    ],
    "title": "",
    "description": "Brutalist architecture show reel.",
    "code": "$fn = 12;\n\n// Floor\ncolor (\"LightGrey\") {\n    square([200000,200000],true);\n}\n\n// Sky\n//color (\"LightCyan\") {\n//    sphere(9000);\n//}\n\nmodule cloud () {\n    translate([0,0,0]) sphere(200);\n    translate([200,10,20]) sphere(150);\n    translate([100,40,-20]) sphere(180);\n    translate([-140,40,-60]) sphere(120);\n    translate([0,120,-80]) sphere(80);\n    translate([60,-120,-80]) sphere(80);\n    translate([280,40,-100]) sphere(100);\n    translate([60,80,80]) sphere(120);\n}\n\nmodule clouds () {\n    color(\"White\") { \n        translate([900,7000,500]) cloud();\n        translate([3000,8500,900]) rotate([0,0,-40]) cloud();\n        translate([1900,3000,700]) rotate([0,0,180]) cloud();\n        translate([900,-7000,500]) cloud();\n        translate([-3000,8500,900]) rotate([0,0,-40]) cloud();\n        translate([1900,-3000,700]) rotate([0,0,180]) cloud();\n        translate([-5900,2500,600]) rotate([0,0,70]) cloud();\n        translate([-1200,0,1400]) rotate([0,0,70]) cloud();\n        translate([2000,-1200,800]) rotate([0,0,-70]) cloud();\n    }\n    \n}\n\n// A tree\ntree_height = 30;\nmodule tree () {\n    color(\"BurlyWood\")  {\n        cylinder(h=tree_height, r1=4, r2=3, center=false, $fn = 5);\n    }\n    color(\"ForestGreen\")  {\n        translate([0,0,tree_height]) sphere(d = 30, $fn = 5);\n    }\n}\n\n// A group of trees\nmodule tree_group () {\n    random_number_of_trees = rands(2,5,1)[0];\n    for (r = [0:random_number_of_trees]) {\n        translate([rands(-40,40,1)[0],rands(-40,40,1)[0],0]) tree();\n    }\n}\n\n// A small garden of trees\n\n// radius\nradius_ring = 300;\nmodule tree_group_scatter () {\n    random_number_of_tree_groups = rands(1000,2000,1)[0];\n    for (r = [0:random_number_of_tree_groups]) {\n        random_rotation=rands(0,360,1)[0];\n        rotate([0,0,random_rotation]) translate([radius_ring+rands(500,14000,1)[0],radius_ring+rands(50,400,1)[0],0]) tree_group();\n    }\n}\n\n translate([0,radius_ring+100,0]) \n\nclouds();\ntree_group_scatter();\n\ncolor (\"SlateGrey\") {\nfor (i = [0:540]) {\n//    rotate([0,0,0]) \n    \n//    rotate([i*12,i,0])\n    translate([0,i*2,400+i*2])\n    rotate([1*i*0.01,1,1*i])\n    translate([sin(i*0.0060)*100,sin(i*6)*400,i]) rotate([0,i,i*5]) sphere(600, $fn=1);\n}\n\n//cylinder(h=100, r=410, center=true, $fn=60);\n}"
  },
  {
    "_id": "7firgX26rWiLcZ5mT",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T22:53:53.83Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zufd7rqnjqsrn9jnqxya",
        "version": 1549493698,
        "signature": "dd74656a5bae5f9547460f059eba7010aa725bb1",
        "width": 800,
        "height": 790,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T22:54:58Z",
        "tags": [],
        "bytes": 194772,
        "type": "upload",
        "etag": "36aca06bfe4ff4bde50a47b1f15abffc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549493698/avalanche2019/zufd7rqnjqsrn9jnqxya.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549493698/avalanche2019/zufd7rqnjqsrn9jnqxya.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with randomGaussian and randomColor - and just got my idea of the north star - changes on click",
    "code": "var r,g,b,a;\n\n//declare randomColor\nvar randomColor;\n\nlet distribution = new Array(200);\nfunction setup() {\n   createCanvas(400, 400);\n   noLoop()\n  for (let i = 0; i < distribution.length; i++) {\n     distribution[i] = floor(randomGaussian(0, 75));\n   }\n }\nfunction draw() {\n   background(36);\n  translate(width / 2, width / 2);\n  for (let i = 0; i < distribution.length; i++) {\n     rotate(TWO_PI / distribution.length);\n     //fill(230);\n    \tstroke(random(25), random(255), random(255));\n     let dist = abs(distribution[i]);\n     line(0, 0, dist, 0);\n    \n    \n   }\n }"
  },
  {
    "_id": "7nF7B2yGQri8wGHN8",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T04:39:08.694Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tyvmzjxyjmttjgopnzva",
        "version": 1555649812,
        "signature": "f7f825cb9a513034d5f2a4e725bff48a75193447",
        "width": 500,
        "height": 500,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T04:56:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 11423986,
        "type": "upload",
        "etag": "abd8e0ece46a3eaf03d4a0342ec824f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555649812/avalanche2019/tyvmzjxyjmttjgopnzva.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555649812/avalanche2019/tyvmzjxyjmttjgopnzva.mov",
        "audio": {
          "codec": "pcm_s16le",
          "bit_rate": "1536000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "rgb24",
          "codec": "qtrle",
          "level": -99,
          "bit_rate": "6764324",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 12,
        "bit_rate": 9139188,
        "duration": 10,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Thunderstorm"
  },
  {
    "_id": "7t26pxLXq8QGx6XJj",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T14:54:14.681Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ytqrzhspcj5x9oag1x76",
        "version": 1553871296,
        "signature": "2ac901b8fbd89d882d86ea24c09b8b88c896d5f9",
        "width": 1638,
        "height": 1352,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T14:54:56Z",
        "tags": [],
        "bytes": 661291,
        "type": "upload",
        "etag": "faea891cfa1f986880d6aead038d34dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553871296/avalanche2019/ytqrzhspcj5x9oag1x76.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553871296/avalanche2019/ytqrzhspcj5x9oag1x76.png"
      },
      {
        "public_id": "avalanche2019/bpjvomlicvwc4jyfvkwf",
        "version": 1553871303,
        "signature": "a8f868fe6a4851a7d9518be2ae12189143359e8a",
        "width": 1544,
        "height": 1188,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T14:55:03Z",
        "tags": [],
        "bytes": 476473,
        "type": "upload",
        "etag": "f0efac29663ac2228c72021fbbcfeb1f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553871303/avalanche2019/bpjvomlicvwc4jyfvkwf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553871303/avalanche2019/bpjvomlicvwc4jyfvkwf.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Fake 3D effect with shadows and blur",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar width = 500;\nvar height = 500;\n\nvar squareX = getRandom(0, 700);\nvar squareY = getRandom(0, 700);\n\nvar square = new Path.Rectangle(squareX, squareY, 50, 50);\n\nvar circle = new Path.Circle(new Point(220, 100), 70);\n// circle.strokeColor = \"red\";\nvar copy = circle.clone();\nmoreCircles();\n\nfunction moreCircles() {\n  for (i = 0; i < 25; i++) {\n    // copy.fillColor = \"cyan\";\n    // copy.strokeColor = new Color(\"rgb(150, 50, 100)\");\n    copy.position = new Point(getRandom(0, 700), getRandom(0, 700));\n\n    var distance = square.position - copy.position;\n    console.log(distance.length);\n    // if (distance.length < 75) {\n    //   copy.fillColor = \"green\";\n    // } else {\n    //   copy.fillColor = \"cyan\";\n    // }\n  }\n}\n\nsquare.strokeColor = \"black\";\nsquare.fillColor = \"blue\";\n\nfunction getRandom(min, max) {\n  return min + Math.floor(Math.random() * (max - min));\n}\n\nvar destination = Point.random() * view.size;\nfunction onFrame(event) {\n  var vector = destination - square.position;\n\n  square.position += vector / 60;\n\n  if (vector.length < 5) {\n    destination = Point.random() * view.size;\n  }\n  var comboPath = square.subtract(circle);\n  comboPath.style = {\n    // strokeColor: \"green\",\n    dashArray: [10, 5],\n    fillColor: \"cyan\",\n    shadowColor: new Color(0, 0, 0, 0.5),\n    shadowBlur: 12,\n    shadowOffset: new Point(5, 5)\n  };\n}\n\nfunction onKeyDown(event) {\n  if (event.key === \"s\") {\n    downloadAsSVG();\n  }\n}\n\nfunction downloadAsSVG(fileName) {\n  // use default name if not provided\n  fileName = fileName || \"output.svg\";\n\n  // create a data url of the file\n  var svgData = project.exportSVG({ asString: true });\n  var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n  // create a link to the data, and \"click\" it\n  var link = document.createElement(\"a\");\n  link.download = fileName;\n  link.href = url;\n  link.click();\n}"
  },
  {
    "_id": "7v3TSarJKcKhyaTBn",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T14:33:48.006Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rc9ztix6xo3cw7rlqw7y",
        "version": 1553870040,
        "signature": "9f4fa20023cab9b6ffc38631eccada50265c872c",
        "width": 1562,
        "height": 1302,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T14:34:00Z",
        "tags": [],
        "bytes": 737184,
        "type": "upload",
        "etag": "602ea4eec93e8e82e83b607867394b79",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553870040/avalanche2019/rc9ztix6xo3cw7rlqw7y.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553870040/avalanche2019/rc9ztix6xo3cw7rlqw7y.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "7w8MXe3bF4jpYiZ2r",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T04:45:12.538Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/opetxyvweraxvt1bimfo",
        "version": 1552020331,
        "signature": "b958fc96cea5d866b38be43c27192a4114baa82b",
        "width": 1264,
        "height": 948,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T04:45:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 6241554,
        "type": "upload",
        "etag": "7a25b3779cb5fda07d2286c344364b6f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552020331/avalanche2019/opetxyvweraxvt1bimfo.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552020331/avalanche2019/opetxyvweraxvt1bimfo.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "14045334",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 14065473,
        "duration": 3.55,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T05:05:52.948Z" }
      }
    ],
    "title": "",
    "description": "White Walker",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/addons/p5.dom.js\nlet cam;\n\nlet rVid, gVid, bVid;\n\nlet rotX, rotY;\n\nlet vScale = 4;\n\nfunction setup() {\n  createCanvas(640, 480);\n  pixelDensity(1);\n  rectMode(CENTER);\n  imageMode(CENTER);\n\n  cam = createCapture(VIDEO);\n  // cam.size(width, height);\n  cam.size(width / vScale, height / vScale);\n  // rVid = image(cam, width / 2, height / 2);\n  // gVid = image(cam, width / 2, height / 2);\n  // bVid = image(cam, width / 2, height / 2);\n}\n\nfunction draw() {\n  background(0);\n  noStroke();\n  loadPixels();\n  cam.loadPixels();\n  // rVid.loadPixels();\n  // gVid.loadPixels();\n  // bVid.loadPixels();\n\n  cam.hide();\n\n  for (let y = 0; y < cam.height; y++) {\n    for (let x = 0; x < cam.width; x++) {\n      let pixelRed = getQuick(cam, x, y)[0];\n      let pixelGreen = getQuick(cam, x, y)[1];\n      let pixelBlue = getQuick(cam, x, y)[2];\n      let pixelAlpha = getQuick(cam, x, y)[3];\n      let bright = (pixelRed + pixelBlue + pixelGreen) / 3;\n\n      let r = 255 - pixelRed;\n      let g = 255 - pixelGreen;\n      let b = 255 - pixelBlue;\n\n      fill(r, g, b);\n      rect(x * vScale, y * vScale, vScale, vScale);\n      // fill(pixelRed, 0, 0);\n      // image(cam, 0, 0);\n      // cam.updatePixels();\n      // updatePixels();\n      // push();\n      // fill(pixelRed, 0, 0);\n      // rVid.updatePixels();\n      // pop();\n\n      // push();\n      // fill(0, pixelGreen, 0);\n      // gVid.updatePixels();\n      // pop();\n\n      // push();\n      // fill(0, 0, pixelBlue);\n      // bVid.updatePixels();\n      // pop();\n    }\n  }\n  // image(cam, 0, 0);'\n  cam.updatePixels();\n}\nfunction getQuick(img, x, y) {\n  var i = (img.width - x + 1 + img.width * y) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3]\n  ];\n}"
  },
  {
    "_id": "7wdBDJCZKDcwKBhQf",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T05:47:48.854Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xb4dfyit6wm0rnerooz6",
        "version": 1555652890,
        "signature": "eba2423e570672c1f11cc0758e8a2c9e066d7acd",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T05:48:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 3388612,
        "type": "upload",
        "etag": "d96237db4f525beb7d67cb46cb904238",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555652890/avalanche2019/xb4dfyit6wm0rnerooz6.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555652890/avalanche2019/xb4dfyit6wm0rnerooz6.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "117564",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "2607847",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 2749422,
        "duration": 9.85985,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T11:04:27.619Z" }
      }
    ],
    "title": "",
    "description": "Processing sketch added on to previous VOCALOID sketch. Minim and Sound libraries used."
  },
  {
    "_id": "7zxWA4r8BWj4gQ5iN",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-30T03:26:19.185Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mlfhv7ssu8xoxyurwfat",
        "version": 1548818790,
        "signature": "29ebbd4004314a6b44cb4058754d6de9903ebb85",
        "width": 2162,
        "height": 2517,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-30T03:26:30Z",
        "tags": [],
        "bytes": 205594,
        "type": "upload",
        "etag": "91e520a88396a3faa0205e66c41751ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548818790/avalanche2019/mlfhv7ssu8xoxyurwfat.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548818790/avalanche2019/mlfhv7ssu8xoxyurwfat.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:07.873Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:15.982Z" }
      }
    ],
    "title": "",
    "description": "Made using Janice's tiles."
  },
  {
    "_id": "826m4Nv8DAhPLX8v2",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T15:45:40.954Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gdpumfzyyhkvcydncj8h",
        "version": 1556898355,
        "signature": "9f8c25254ef37734937ecb7b6fef63a020c14502",
        "width": 2372,
        "height": 1584,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T15:45:55Z",
        "tags": [],
        "bytes": 297163,
        "type": "upload",
        "etag": "6e38b8dacf727e46d953447f3aadebe6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556898355/avalanche2019/gdpumfzyyhkvcydncj8h.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556898355/avalanche2019/gdpumfzyyhkvcydncj8h.jpg"
      },
      {
        "public_id": "avalanche2019/f1wr6mdj8dsrepxcfr7g",
        "version": 1556898415,
        "signature": "4cc65d7118fbed72da353b3a291fcebda342ff5d",
        "width": 2336,
        "height": 1564,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-03T15:46:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 17717078,
        "type": "upload",
        "etag": "ae7efd8c8ef2419139edb782a08eb375",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556898415/avalanche2019/f1wr6mdj8dsrepxcfr7g.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556898415/avalanche2019/f1wr6mdj8dsrepxcfr7g.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "14306215",
          "dar": "584:391"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 14374182,
        "duration": 9.8605,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Made a flower … and a castle",
    "code": "//color (\"LimeGreen\") {\n//    square([200000,200000],true);\n//}\n\n\n$fn=4;\n// Define brick\nbrick_length = 20;\nbrick_height = 5;\nbrick_depth = 20;\n// Define ring\nbricks_per_ring = 20;\ncircumference_ring = brick_length*bricks_per_ring-300;\nradius_ring = circumference_ring/(2*PI);\nradius_ring_plus_space = radius_ring+90;\n// Define wall\nnumber_of_rings = 40;\n\nmodule wall_ring () {\n    for (r = [0:bricks_per_ring]) {\n        rotate([0,0,1/bricks_per_ring*r]) translate([0,radius_ring_plus_space,0]) cube([  brick_length,brick_depth,brick_height],false);\n    }\n}\nmodule wall() {\n    for (l = [0:number_of_rings]) {\n        rotate([0,0,180/bricks_per_ring*l]) translate([0,0,(brick_height)*l]) wall_ring();\n    }\n}\n\nwall();\n\n// Archi\nmodule top () {\n    for (i = [0:180]) {\n//    rotate([i,-i,i]) \n    rotate([0,0,0])\n    translate([0,0,0]) rotate([i*0.05,i*0.1,i]) sphere(30);\n    }\n}\n\n\n\nmodule soft_ice(height) {\n\nlinear_extrude(height = height, twist = -180, scale = 0, center = false, slices = 800)\ncircle(10, center = true, $fn=8);\n}\n\n\nmodule soft_ice_tower() {    \n    cylinder(h=20, r=10, center=false, $fn=8);\n    translate([0,0,20]) soft_ice(height=80);\n}\n\nmodule ring_of_towers() {\n    for (i = [0:6]) {\n            rotate(360/6*i,0,0)\n            translate([116,0,i*34])\n    //        rotate([0,0,180]) \n            soft_ice_tower();\n    }\n}\nrotate([0,0,85]) ring_of_towers();\n\n\nmodule banana() {\n    for (i = [0:180]) {\n        translate([sin(i)*25,0,i*1]) \n        rotate([0,0,0]) \n        sphere(sin(i)*10);\n    }\n}\n\nmodule spiky_tower_base() {\n    for (i = [0:4]) {\n        rotate(-360/5*i,0,0)\n        translate([47,0,0])\n        rotate([0,7,180]) \n        banana();\n    }\n}\n\nspiky_tower_base();\n\ntranslate([0,0,190]) sphere(15, $fn=9);\nmodule spike() {\n    for (i = [0:130]) {\n        translate([sin(i)*5,0,i*0.18]) \n        rotate([0,0,0]) \n        sphere(sin(i)*4.5);\n    }\n}\n\nmodule center_spike() {\n    translate([-46,0,45]) rotate([0,100,0]) spike();\n}\n\nmodule spiky_crown(number, translate, rotate) {\n    for (i = [0:(number-1)]) {\n        rotate(-360/number*i,0,0)\n        translate([translate,0,0])\n        rotate([0,rotate,180]) \n        center_spike();\n    }\n}\n\n\ntranslate([0,0,150]) spiky_crown(number=20, translate=0, rotate=10);\ntranslate([0,0,155]) spiky_crown(number=10, translate=0, rotate=20);\n\ntranslate([0,0,158]) spiky_crown(number=3, translate=4, rotate=30);"
  },
  {
    "_id": "827mHia5TvLgs9yK2",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T18:20:45.235Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aitjdrwt44fwcqyilcne",
        "version": 1549563735,
        "signature": "1115b5e55fe49f52c7c3c94f73219b662bcdf7ab",
        "width": 800,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T18:22:15Z",
        "tags": [],
        "bytes": 28648,
        "type": "upload",
        "etag": "31f70a0ddbeac045ffb454cdb0cf02f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549563735/avalanche2019/aitjdrwt44fwcqyilcne.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549563735/avalanche2019/aitjdrwt44fwcqyilcne.png"
      },
      {
        "public_id": "avalanche2019/svo3sbhabn5s4lzjvtew",
        "version": 1549563739,
        "signature": "4ea86c3184f5ad744c56c6d0abdca521b5d2f776",
        "width": 794,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T18:22:19Z",
        "tags": [],
        "bytes": 27837,
        "type": "upload",
        "etag": "fe88e9ffa4e4bb7b9081e46d49e0ae1c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549563739/avalanche2019/svo3sbhabn5s4lzjvtew.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549563739/avalanche2019/svo3sbhabn5s4lzjvtew.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Random rectangles appearing in colors. Credit to happycoding on ideas and some code. [googe](google.com)",
    "inspiration_url": "https://happycoding.io/examples/processing/for-loops/random-circles",
    "code": "function setup() {\n    createCanvas(400, 400);\n    background(32);\n  }\n  \n  function draw(){\n    var rectX = random(10, 100);\n    var rectY = random(10, 100);\n    var rectW = random(width);\n    var rectH = random(height);\n\n    fill(random(255), random(255), random(255));\n    rect(rectX, rectY, rectW, rectH);\n  }"
  },
  {
    "_id": "8BC2zKBbZr5AoSFEp",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T03:59:34.4Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/csdc7jpnqtaaldiwo6tr",
        "version": 1553833219,
        "signature": "0d47ee57b0af2e0b92fa45f03f5f9625af1a0951",
        "width": 784,
        "height": 558,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T04:20:19Z",
        "tags": [],
        "bytes": 33898,
        "type": "upload",
        "etag": "127781795bd7db8d3714f2aa8064e0bd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553833219/avalanche2019/csdc7jpnqtaaldiwo6tr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553833219/avalanche2019/csdc7jpnqtaaldiwo6tr.jpg"
      },
      {
        "public_id": "avalanche2019/gwg7ryhawpmp26alyu9t",
        "version": 1553833230,
        "signature": "d72c08dfc775b982f68801b8946867e08e443005",
        "width": 2100,
        "height": 1824,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T04:20:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 20759471,
        "type": "upload",
        "etag": "07b8eef9b117ef479c61ef1191fc69f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553833230/avalanche2019/gwg7ryhawpmp26alyu9t.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553833230/avalanche2019/gwg7ryhawpmp26alyu9t.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "10954958",
          "dar": "175:152"
        },
        "frame_rate": 60,
        "bit_rate": 10962096,
        "duration": 15.15,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Revolving 9.  Not really sure why this took me so long to get the colors to randomize.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n\tvar group = new Group();\n\t\n\tfor (var i = 0; i < 10; i++) {\n\tvar center = new Point(100 + i * 50, 200);\n\tvar path = new Path.Circle(center, 200);\n\tpath.fillColor = Color.random();\n    //path.fillColor = 'turquoise';\n\t group.addChild(path);\n\t\n\t// Make circle 50% transparent:\n    path.opacity = 0.5;\n}\n\nfunction onFrame(event) {\n    // Rotate the group by 1 degree from\n    // the centerpoint of the view:\n    group.rotate(1, view.center);\n        path.fillColor.hue += 0.75;\n\n}\n\n// Save a reference to the children array in a variable,\n// so we don't end up with very long lines of code:\n    var children = project.activeLayer.children;\n    \n    \n\n// Iterate through the items contained within the array:\n    for (var i = 0; i < children.length; i++) {\n\tvar child = children[i];\n\n\t// Change the fill color of the child to a random\n\t// value between 0 and 360:\n\t//child.fillColor.hue = Math.random() * 260;\n\n};"
  },
  {
    "_id": "8EPnj7CMbJpMDih5H",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T19:46:57.864Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wzmzhoyocf2hq83okvvm",
        "version": 1550260024,
        "signature": "026c26830842763ff8ad9b6852077283b8313911",
        "width": 1676,
        "height": 1280,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T19:47:04Z",
        "tags": [],
        "bytes": 1464652,
        "type": "upload",
        "etag": "c1a65c8f4beddfb731ad37773206122b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550260024/avalanche2019/wzmzhoyocf2hq83okvvm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550260024/avalanche2019/wzmzhoyocf2hq83okvvm.png"
      },
      {
        "public_id": "avalanche2019/nxzcbksfasa8zp6u9dt4",
        "version": 1550260027,
        "signature": "c91da8e4c4cb8a402c2d797def507a4c8102311d",
        "width": 1084,
        "height": 458,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T19:47:07Z",
        "tags": [],
        "bytes": 77387,
        "type": "upload",
        "etag": "7b3454d66beac284a8c1208c29a4c043",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550260027/avalanche2019/nxzcbksfasa8zp6u9dt4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550260027/avalanche2019/nxzcbksfasa8zp6u9dt4.png"
      },
      {
        "public_id": "avalanche2019/cocuixavigseo71lls1g",
        "version": 1550260033,
        "signature": "11aa290333068ac1c4443a8cdf49d8ffe4ce9543",
        "width": 1122,
        "height": 852,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T19:47:13Z",
        "tags": [],
        "bytes": 651399,
        "type": "upload",
        "etag": "e44c3fe14b7578ee201d879ac67f4c00",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550260033/avalanche2019/cocuixavigseo71lls1g.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550260033/avalanche2019/cocuixavigseo71lls1g.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Asks for amount of column/rows. Generates a gradient according to those parameters."
  },
  {
    "_id": "8FDBecm8p5R9jLNXk",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T16:07:08.483Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/q2ca5dfvjxvsfamptfp8",
        "version": 1557504445,
        "signature": "c7605e1023e023eddd4685d7ca3ed8a7f1d7528e",
        "width": 880,
        "height": 916,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T16:07:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 2915643,
        "type": "upload",
        "etag": "dc9ef0f8387be11bf78bcb1a35fb865c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557504445/avalanche2019/q2ca5dfvjxvsfamptfp8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557504445/avalanche2019/q2ca5dfvjxvsfamptfp8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1483518",
          "dar": "220:229"
        },
        "frame_rate": 60,
        "bit_rate": 1520213,
        "duration": 15.343333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Snake"
  },
  {
    "_id": "8Lxwd7RwjohPCqZbq",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-03-01T16:11:30.656Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/i5q48ydsfznqclvhnkue",
        "version": 1551456825,
        "signature": "68d3e333b1859c1a75d6cbf7efcfc481254d433e",
        "width": 648,
        "height": 842,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-01T16:13:45Z",
        "tags": [],
        "bytes": 83286,
        "type": "upload",
        "etag": "b9f7cb8fcf2830ca5f953da7aeeb50ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551456825/avalanche2019/i5q48ydsfznqclvhnkue.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551456825/avalanche2019/i5q48ydsfznqclvhnkue.jpg"
      },
      {
        "public_id": "avalanche2019/xmoxk0jgfqrxinthlmhr",
        "version": 1551456829,
        "signature": "55d224ce4e61a35e91fcf180731996580cc2a3ca",
        "width": 648,
        "height": 842,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-01T16:13:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 696470,
        "type": "upload",
        "etag": "951cf2dfb2fc2827139ec57824835ddb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551456829/avalanche2019/xmoxk0jgfqrxinthlmhr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551456829/avalanche2019/xmoxk0jgfqrxinthlmhr.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "146867",
          "dar": "324:421"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 151105,
        "duration": 36.873265,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/g3lniet0d05hr3doqwkv",
        "version": 1551456834,
        "signature": "ff48ca42aaf0c930d9acbfacbb210a4ab5f7c4b1",
        "width": 648,
        "height": 842,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-01T16:13:54Z",
        "tags": [],
        "bytes": 74582,
        "type": "upload",
        "etag": "35fa0ad05d29b3b5ba2d79499e877888",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551456834/avalanche2019/g3lniet0d05hr3doqwkv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551456834/avalanche2019/g3lniet0d05hr3doqwkv.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-01T19:25:38.7Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "This project is an extension to the Dot Pattern Match challenge. In this, I have created a word map using RiTa.js with p5.js.\nI have replaced the ellipses with random text.\nThe user has the option to customize the words by changing the number of syllables (1-5) and the parts of speech of the words present on the word map.\n\nSpecial thanks to Shiffman for introducing me to this library.",
    "inspiration_name": "Word Map",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Since the code uses another library, it may not work. \n// Check the code on GitHub: https://github.com/akshansh2593/CompForm/tree/master/wordMap\n\n/////////////////////////////////////////////////////////////////////\n\n// Creating a word map using RiTa.js in p5.js.\n// An extension to the tactic of placing random dots on the screen\n\n// For notes, refer notes.md file\n// GitHub link: https://github.com/akshansh2593/CompForm/blob/master/wordMap/notes.md\n\n\n// Basic Stuff\nvar wordCount;\nvar lexicon; // Variable to store reference to the lexicon\nvar hueValue; // vary the Hue value\nvar colorNoise;\n\n// Customization\nvar changeSyllable_button;\nvar syllableCount_slider;\nvar partsOfSpeech_dropdown;\nvar partOfSpeech_pennTag;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n\n    wordCount = 50;\n    lexicon = new RiLexicon();\n\n\n    createP('Change the number of syllables (1-5)');\n    syllableCount_slider = createSlider(1, 5, 1, 1);\n    syllableCount_slider.changed(randomizeWord);\n\n    createP('Change the part of speech');\n    partsOfSpeech_dropdown = createSelect();\n    partsOfSpeech_dropdown.option(\"Noun\"); // noun\n    partsOfSpeech_dropdown.option(\"Verb\"); // verb\n    partsOfSpeech_dropdown.option(\"Adjective\"); // adjective\n    partsOfSpeech_dropdown.option(\"Adverb\"); // adverb\n    partsOfSpeech_dropdown.changed(randomizeWord);\n\n}\n\n\nfunction draw() {\n\n    randomizeWord(); // run by default\n    changeSyllable_button.mousePressed(randomizeWord); // change when mousePressed\n\n    noLoop();\n}\n\n\n\n// Arrangement\nfunction randomizeWord() {\n    background(0);\n    colorMode(HSB);\n    var noiseFrequency = 10; // play with this value\n\n    for (i = 0; i < wordCount; i++) {\n        noiseSeed(1);\n        var xPos = noise(i * noiseFrequency) * width;\n        noiseSeed(10002);\n        var yPos = noise(i * noiseFrequency) * height;\n\n        // Color\n        hueValue = random(0, 360);\n        var colorNoise = noise(hueValue * noiseFrequency) * 360;\n        fill(colorNoise, 100, 100);\n\n        // Font Size\n        var fontSize = map(colorNoise, 0, 360, 4, 20);\n        textSize(fontSize);\n\n        // add a random word at every position\n\n        // condition for parts of speech (change words to PENN tags)\n        if (partsOfSpeech_dropdown.value() === \"Noun\") {\n            partOfSpeech_pennTag = \"nn\";\n        }\n        if (partsOfSpeech_dropdown.value() === \"Verb\") {\n            partOfSpeech_pennTag = \"vb\";\n        }\n        if (partsOfSpeech_dropdown.value() === \"Adjective\") {\n            partOfSpeech_pennTag = \"jj\";\n        }\n        if (partsOfSpeech_dropdown.value() === \"Adverb\") {\n            partOfSpeech_pennTag = \"rb\";\n        }\n\n        text(lexicon.randomWord(partOfSpeech_pennTag, syllableCount_slider.value()), xPos, yPos);\n\n    }\n}"
  },
  {
    "_id": "8PP9G6japnp7Frzow",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:49:44.481Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/leabeekdjnlau4ksjiyy",
        "version": 1553881793,
        "signature": "bd9f1063fa0b7d9be247adfb861867887e389b44",
        "width": 2324,
        "height": 2324,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T17:49:53Z",
        "tags": [],
        "bytes": 634199,
        "type": "upload",
        "etag": "9048f434a7ed2dbc772db831c1a8fb75",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553881793/avalanche2019/leabeekdjnlau4ksjiyy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553881793/avalanche2019/leabeekdjnlau4ksjiyy.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Ma Sierpinski triangle model failed...TuT"
  },
  {
    "_id": "8PxNfGmYDnhTdBzzt",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-25T01:46:15.712Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/deujqurody1mpgbmfewh",
        "version": 1553478384,
        "signature": "9969c581c06a7ae788f7f582c20b4c4becd5d763",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-25T01:46:24Z",
        "tags": [],
        "bytes": 532263,
        "type": "upload",
        "etag": "be43ba153968696498a6432677864aca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553478384/avalanche2019/deujqurody1mpgbmfewh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553478384/avalanche2019/deujqurody1mpgbmfewh.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Lines on top of lines. Made with p5"
  },
  {
    "_id": "8QXZsXSkK88A9Rgmy",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-02-01T06:06:00.536Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jddfadfdaq00otsii7uc",
        "version": 1549001172,
        "signature": "3eed7bdb37fd781af91176bbdce473a71c417211",
        "width": 3008,
        "height": 3007,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T06:06:12Z",
        "tags": [],
        "bytes": 116832,
        "type": "upload",
        "etag": "6dfe7ea0e6927180d0c8d92042d62efc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549001172/avalanche2019/jddfadfdaq00otsii7uc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549001172/avalanche2019/jddfadfdaq00otsii7uc.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:06.848Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "inspiration_name": "nightmare"
  },
  {
    "_id": "8SrYPLjBNPst2XbCS",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T00:33:15.512Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bmmwzx15afvtukumseve",
        "version": 1556843626,
        "signature": "0c4ba4ac6ee940a24f6eb6a30e0f1a7c36ce1561",
        "width": 1024,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T00:33:46Z",
        "tags": [],
        "bytes": 847734,
        "type": "upload",
        "etag": "54c7d4ce8d230b5deca675f1b3e58f80",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556843626/avalanche2019/bmmwzx15afvtukumseve.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556843626/avalanche2019/bmmwzx15afvtukumseve.jpg"
      },
      {
        "public_id": "avalanche2019/vejkishloqchahtordin",
        "version": 1556843657,
        "signature": "344c4ee434be9c55cf8468b1bce0e5b0ba9c6a4f",
        "width": 1526,
        "height": 1524,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:34:17Z",
        "tags": [],
        "bytes": 588183,
        "type": "upload",
        "etag": "f712167bbb41748257f3585d220c210f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556843657/avalanche2019/vejkishloqchahtordin.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556843657/avalanche2019/vejkishloqchahtordin.png"
      },
      {
        "public_id": "avalanche2019/z1wuig9yy9akcxaoldd8",
        "version": 1556843663,
        "signature": "614b11d7a2214900a947adeeccac5cd23ce82997",
        "width": 1000,
        "height": 920,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T00:34:23Z",
        "tags": [],
        "bytes": 118982,
        "type": "upload",
        "etag": "c104df65af8a50b5ca806ea56ca4ab72",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556843663/avalanche2019/z1wuig9yy9akcxaoldd8.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556843663/avalanche2019/z1wuig9yy9akcxaoldd8.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T13:04:14.067Z" }
      }
    ],
    "title": "",
    "description": "Uploading some files from the wings texture for the butterfly because they honestly took me +1 hour to get right. Don't know how to show the depth map for the texture but it was based on the coloring of the image + some manual arrangements."
  },
  {
    "_id": "8n9tYEoFZfevx5kSh",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:33:10.563Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bqhsljcxk330u8umcrjn",
        "version": 1553884409,
        "signature": "ba87c6c18842dbb3cd3a36064c14d69423e42446",
        "width": 3600,
        "height": 3600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:33:29Z",
        "tags": [],
        "bytes": 956671,
        "type": "upload",
        "etag": "d995f17886d5328fbdb0f059b5c4a283",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553884409/avalanche2019/bqhsljcxk330u8umcrjn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553884409/avalanche2019/bqhsljcxk330u8umcrjn.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:36:07.201Z" }
      }
    ],
    "title": "",
    "description": "Vector-3D model"
  },
  {
    "_id": "8npMRKNzrLvuuLtic",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "created_at": { "$date": "2019-01-26T23:30:25.662Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n9g45irxz1jbduj2veb1",
        "version": 1548545436,
        "signature": "1e3a00c9df2dc104151a8719e6a3d80cc1a7fedb",
        "width": 1280,
        "height": 912,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-26T23:30:36Z",
        "tags": [],
        "bytes": 1685829,
        "type": "upload",
        "etag": "9bbc694c59daf226c723e26f98fcacae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548545436/avalanche2019/n9g45irxz1jbduj2veb1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548545436/avalanche2019/n9g45irxz1jbduj2veb1.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "A greeting with Brooke's tiles"
  },
  {
    "_id": "8q9GGvaCR5i5EXJbS",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T19:44:06.685Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vyzwn1agspgbcnthyj2e",
        "version": 1550778255,
        "signature": "be46e2fe7e89958d662f72453af113f567369330",
        "width": 1090,
        "height": 1390,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T19:44:15Z",
        "tags": [],
        "bytes": 722790,
        "type": "upload",
        "etag": "bfd658c64e4e6186f2efbfa58559de9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550778255/avalanche2019/vyzwn1agspgbcnthyj2e.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550778255/avalanche2019/vyzwn1agspgbcnthyj2e.png"
      },
      {
        "public_id": "avalanche2019/uuanhrhh04ffgdmnfh0c",
        "version": 1550785842,
        "signature": "6a7a979385ba46569db2d8e58800a38eb8458f5e",
        "width": 1248,
        "height": 520,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T21:50:42Z",
        "tags": [],
        "bytes": 777874,
        "type": "upload",
        "etag": "f8b77951341588d9cc90d04d98bcea1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550785842/avalanche2019/uuanhrhh04ffgdmnfh0c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550785842/avalanche2019/uuanhrhh04ffgdmnfh0c.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T01:08:50.418Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-22T01:12:27.496Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T03:11:29.551Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:01:34.339Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:41:59.724Z" }
      }
    ],
    "title": "",
    "description": "Treasure Map: *X marks the spot.*\n\nWas inspired by Felix's Feb 19th sketch to use graphemes, in this case the opening text to Treasure Island.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Turns the intro of Treasure Island into a treasure map, where\n// a red x marks the spot.\n// Text from https://www.gutenberg.org/files/120/120-h/120-h.htm.\n\nconst noiseOn = true; // toggle for debugging\nconst w = 550, h = 700, border = {x: 100, y: 50};\nconst fnt = \"Courier\", fntSize = 5; // min 5\nlet lines;\nlet letters = [];\n\nfunction preload() {\n    lines = loadStrings(\"https://raw.githubusercontent.com/annagarbier/compform/master/treasure_island.txt\");\n}\n\nfunction setup() {\n    createCanvas(w, h);\n    background(224, 220, 212, 100);\n    fill(114, 110, 102);\n    textFont(fnt);\n    textSize(9);\n\n    makeLetterArray();\n    drawLetterGrid();\n}\n\nfunction makeLetterArray() {\n    let txtNorm = join(lines, \"\").replace(/[^A-Za-z0-9]/g,\"\");\n    letters = txtNorm.split(\"\");\n}\n\n// noisy position\nfunction drawLetterGrid() {\n    let letterIndex = 0;\n    translate(-border.x / 2, -border.y / 2);\n    for (let y = border.y; y < h - border.y; y += fntSize + 1) {\n        for (let x = border.x; x < w - border.x; x += fntSize + 1) {\n            // choose letter\n            let letter = letters[letterIndex];\n            \n            push();\n            let n = 0;\n            \n            // Toggle (x, y, z) noise for debugging purposes\n            if (noiseOn) {\n                n = noise(x * .01, y * .01, millis() * .0005);\n            }\n            let noisyPos = {\n                x: x + n * 80,\n                y: y + n * 80\n            };\n\n            // text formatting\n            if (letter === \"x\") {\n                textStyle(BOLD);\n                textSize(fntSize + 5);\n                fill(255, 0, 0);\n            }\n\n            // style the edge of the map\n            let cntr = {\n                x: w / 2 + border.x,\n                y: h / 2 + border.y\n            }\n            let distToCntr = dist(noisyPos.x, noisyPos.y, cntr.x, cntr.y);\n\n            // draw the letter\n            if (distToCntr < w / 3 + n * 200) {\n                text(letter, noisyPos.x, noisyPos.y);\n            }\n            pop();\n\n            // if we've reached the end of the letters array, repeat\n            // else move to the next letter.\n            if (letterIndex === letters.length) {\n                letterIndex = 0;\n            } else {\n                letterIndex++;\n            }\n        }\n    }\n}",
    "inspiration_name": "Treasure Island & Felix's Feb 19 sketch",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?http://sketches2019.compform.net/posts/9w3xEwLhwNdoyYFBR/code"
  },
  {
    "_id": "8vZ3ZdEGHfjPJFoZw",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:35:33.969Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ysdeyeiqvc2htglwthjo",
        "version": 1553884539,
        "signature": "deb117854e2f895fb0491d9669d7edd3bb49182c",
        "width": 1728,
        "height": 1728,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:35:39Z",
        "tags": [],
        "bytes": 1132833,
        "type": "upload",
        "etag": "945ffba56e4425f9ef2cb73e416abacf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553884539/avalanche2019/ysdeyeiqvc2htglwthjo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553884539/avalanche2019/ysdeyeiqvc2htglwthjo.jpg"
      },
      {
        "public_id": "avalanche2019/wylflz1mhp3pjdfb1r5c",
        "version": 1553884542,
        "signature": "57ae6a4d0bd7b3cde2bd30e21201f20f9101d309",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T18:35:42Z",
        "tags": [],
        "bytes": 74178,
        "type": "upload",
        "etag": "ea973fea4809b2cd1b2cd6b81eed5046",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553884542/avalanche2019/wylflz1mhp3pjdfb1r5c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553884542/avalanche2019/wylflz1mhp3pjdfb1r5c.png"
      },
      {
        "public_id": "avalanche2019/jmdapmj2yhy0go5nox10",
        "version": 1553884544,
        "signature": "267b66d0ca917df17f9cb3d2b7a74cc0e0c97c71",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T18:35:44Z",
        "tags": [],
        "bytes": 64075,
        "type": "upload",
        "etag": "511b1a652320147ea1e69ea0a5c30ebd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553884544/avalanche2019/jmdapmj2yhy0go5nox10.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553884544/avalanche2019/jmdapmj2yhy0go5nox10.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Final poster for dota2 TI9"
  },
  {
    "_id": "95WkkhF4uRDQ6WNvc",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:42:52.979Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/m9gumka8zjigoqumbuse",
        "version": 1553881385,
        "signature": "e9ac66eca38035e29e8844eeef300f411419e538",
        "width": 3681,
        "height": 3372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T17:43:05Z",
        "tags": [],
        "bytes": 595680,
        "type": "upload",
        "etag": "ee4d93c37b339faef081811e60a7ffcf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553881385/avalanche2019/m9gumka8zjigoqumbuse.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553881385/avalanche2019/m9gumka8zjigoqumbuse.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Final prep for laser lab; will do a few small experiments..."
  },
  {
    "_id": "96QpLDBSBKiPnNP5t",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T22:12:35.16Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/il20mnfwdfsnepje8ejo",
        "version": 1550614361,
        "signature": "3bf794c208058709fb4c3759a083f63fa026eb3e",
        "width": 1364,
        "height": 880,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-19T22:12:41Z",
        "tags": [],
        "bytes": 1822728,
        "type": "upload",
        "etag": "96c676fd324a5d2087a73e66dc2c5696",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550614361/avalanche2019/il20mnfwdfsnepje8ejo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550614361/avalanche2019/il20mnfwdfsnepje8ejo.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-20T02:26:43.036Z" }
      }
    ],
    "title": "",
    "description": "try to create holographic texture",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n//code learn from openprocessing \n\nlet nx = 0;\nlet ny = 0;\n\nfunction setup () {\n  createCanvas (600, 400);\n  colorMode (HSB);\n  \n}\n\n\nfunction draw () {\n  background(frameCount*0.3% 360, 255, 255);\n  strokeWeight(2);\n  stroke('#E0C0FF');\n  drawStream ();\n}\n\nfunction drawStream () {\n    \t\n  nx = mouseX;\n  for (var i=-10; i<width+10; i += 10) {\n    ny = mouseY;\n    for (var j=-10; j<width+10; j += 10) {\n     let angle = map (noise (nx, ny), 0, 1.0, 0, 4*PI);\n     let x = 50 * cos (angle);\n      let y = 50 * sin (angle);\n      line (i, j, i+x, j+y);\n      ny += 0.008;\n    }\n    nx += 0.008;\n  }\n   \n}"
  },
  {
    "_id": "98aH45LxA7qKBD6xt",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "created_at": { "$date": "2019-02-01T02:27:56.696Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xphwn7imxvt1r3cjil7e",
        "version": 1548988199,
        "signature": "6878323a892d35b928b10fb67c7801a0f1095543",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T02:29:59Z",
        "tags": [],
        "bytes": 5545011,
        "type": "upload",
        "etag": "3c48ea8c7113092fbd7186437eaf1696",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548988199/avalanche2019/xphwn7imxvt1r3cjil7e.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548988199/avalanche2019/xphwn7imxvt1r3cjil7e.jpg"
      },
      {
        "public_id": "avalanche2019/fqafu7zxsnp9seo4euep",
        "version": 1548988201,
        "signature": "8b76202bbba4be4e3d11ef7ba5ed61b8708eb838",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T02:30:01Z",
        "tags": [],
        "bytes": 5081898,
        "type": "upload",
        "etag": "013b195f7140b8253c639d1a2d7742cf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548988201/avalanche2019/fqafu7zxsnp9seo4euep.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548988201/avalanche2019/fqafu7zxsnp9seo4euep.jpg"
      },
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "First draft sketches with paper and pen."
  },
  {
    "_id": "9BNBsGzXFYQHZEop3",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T04:40:10.348Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pelqtvzre9vxmvucal3j",
        "version": 1549515030,
        "signature": "1e519396f81109735ae0ebb1b0fb6d03afc6ee90",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T04:50:30Z",
        "tags": [],
        "bytes": 58033,
        "type": "upload",
        "etag": "5479b20b3f3f0d773e46d52c7ec152a3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549515030/avalanche2019/pelqtvzre9vxmvucal3j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549515030/avalanche2019/pelqtvzre9vxmvucal3j.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T05:08:01.172Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-07T05:08:03.636Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T02:38:08.076Z" }
      }
    ],
    "title": "",
    "description": "Challenge: Mondrian\nevery time the circle is clicked, colors change randomly.",
    "inspiration_name": "Piet Mondrian",
    "inspiration_url": "https://upload.wikimedia.org/wikipedia/commons/7/76/Piet_Mondriaan%2C_1921_-_Composition_en_rouge%2C_jaune%2C_bleu_et_noir.jpg",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nvar length = 500;\nwindow.setup = function(){\n  createCanvas(500,500);\n  background(\"#f7f7f7\");\n}\n\n// from https://p5js.org/examples/hello-p5-interactivity-1.html\nwindow.mousePressed = function(){\n\n  let m = dist(mouseX, mouseY, 50, 450);\n  if (m < 50) {\n    noStroke();\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(0,0,50,25);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(300,400,50,50);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(150,25,150,150);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(350,175,125,75);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(150,250,150,50);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(125,300,25,100);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(0,200,50,100);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(50,25,100,50);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(125,400,75,100);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(350,450,125,50);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(125,175,25,75);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(300,0,50,25);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(475,25,25,150);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(300,250,50,50);\n\n    fill(random([\"#f8c819\",\"blue\",\"red\",\"#000000\",\"#f7f7f7\"]));\n    rect(50,75,75,100);\n  }\n}\n\nwindow.draw = function(){\n  //Grids\n  stroke(0);\n  strokeWeight(8);\n  //vertical lines\n  line(50,0,50,length)\n  line(125,75,125,length)\n  line(150,0,150,length-100)\n  line(300,0,300,length)\n  line(350,0,350,length)\n  line(475,0,475,length)\n  line(200,400,200,length)\n\n  // horizontal lines\n  line(0,25,length,25)\n  line(50,75,150,75)\n  line(0,200,50,200)\n  line(0,175,length,175)\n  line(125,250,length-25,250)\n  line(0,300,length,300)\n  line(50,400,350,400)\n  line(300,450,length-25,450)\n\n  //click\n  strokeWeight(8);\n  stroke(0);\n  fill(\"#f7f7f7\");\n  ellipse(50,450,75,75);\n  noStroke();\n  fill(10);\n  textSize(18);\n  text('click!',30,457)\n}"
  },
  {
    "_id": "9ETyjcsQNw3jYsAep",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "created_at": { "$date": "2019-02-01T00:17:56.12Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bhyuqb3uau3eubyxem0d",
        "version": 1548980283,
        "signature": "00dd77749b8481504e70ef64f4e39cf7b0506565",
        "width": 646,
        "height": 940,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T00:18:03Z",
        "tags": [],
        "bytes": 1287401,
        "type": "upload",
        "etag": "d7d648ad7ba782e1a45e82feee46ae90",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548980283/avalanche2019/bhyuqb3uau3eubyxem0d.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548980283/avalanche2019/bhyuqb3uau3eubyxem0d.png"
      },
      {
        "public_id": "avalanche2019/haf9kpnaupec6jyaeula",
        "version": 1548980287,
        "signature": "c4c7d034b9db2dabdd9350d8e38c1d4b97a92d97",
        "width": 1634,
        "height": 1300,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T00:18:07Z",
        "tags": [],
        "bytes": 1266574,
        "type": "upload",
        "etag": "262d5aac222794ae079ebdd56a37d62c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548980287/avalanche2019/haf9kpnaupec6jyaeula.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548980287/avalanche2019/haf9kpnaupec6jyaeula.png"
      },
      {
        "public_id": "avalanche2019/ycutvsi8um0az3z2zusr",
        "version": 1548980291,
        "signature": "582fb2097d09050720c9e222ed759941324dc1a9",
        "width": 1254,
        "height": 1042,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T00:18:11Z",
        "tags": [],
        "bytes": 320500,
        "type": "upload",
        "etag": "e874c3082a56344c425727827e08ec7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548980291/avalanche2019/ycutvsi8um0az3z2zusr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548980291/avalanche2019/ycutvsi8um0az3z2zusr.png"
      }
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Glitched image using Illustrator, showing tile-like pixels."
  },
  {
    "_id": "9FGMb69NzvYpNwmjF",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-02-18T13:42:42.776Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pmcxncp39dx1zb50kpfi",
        "version": 1550497623,
        "signature": "be3a20d452fdca59708c136f03bfccb84f522c7a",
        "width": 926,
        "height": 618,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-18T13:47:03Z",
        "tags": [],
        "bytes": 17992,
        "type": "upload",
        "etag": "2424611338a4289354169f95b820590e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550497623/avalanche2019/pmcxncp39dx1zb50kpfi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550497623/avalanche2019/pmcxncp39dx1zb50kpfi.jpg"
      },
      {
        "public_id": "avalanche2019/s1ux2xsw9v7kziws8dbx",
        "version": 1550497631,
        "signature": "b0db7038a64efcabdbe73fd2ed0f35f7a0a24034",
        "width": 926,
        "height": 620,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-18T13:47:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 100792,
        "type": "upload",
        "etag": "35e13b9b19c532afe36463b88b499ca4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550497631/avalanche2019/s1ux2xsw9v7kziws8dbx.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550497631/avalanche2019/s1ux2xsw9v7kziws8dbx.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "24313",
          "dar": "463:310"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 28127,
        "duration": 28.667415,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/r7z7rdhhhaanm3j1tbem",
        "version": 1550497636,
        "signature": "330bb3b672aacf0e106fde7bc2c3255a4a749da6",
        "width": 926,
        "height": 620,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-18T13:47:16Z",
        "tags": [],
        "bytes": 17415,
        "type": "upload",
        "etag": "c7b79798efa45469333c01ab6af3545f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550497636/avalanche2019/r7z7rdhhhaanm3j1tbem.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550497636/avalanche2019/r7z7rdhhhaanm3j1tbem.jpg"
      }
    ],
    "votes": [],
    "lesson": "Noise",
    "title": "",
    "description": "In this project, I have created the Big Dipper constellation using p5.js.\nThe stars twinkle with noise effect and the positions are relative to the screen. \n\nI wanted to create the night sky with stars flickering at random locations, but I was unable to generate random (fixed) positions. \nI would be glad if someone could help me do that.",
    "inspiration_name": "Big Dipper",
    "inspiration_url": "https://en.wikipedia.org/wiki/Big_Dipper",
    "code": "// Program to create a Big Dipper constellation using Noise. \n// Tried to create the entire night sky but didn't work. \n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet twinkle1;\nlet twinkle2;\nlet diameter1;\nlet diameter2;\n\n\nfunction setup() {\n    createCanvas(window.innerWidth, window.innerHeight);\n    noStroke();\n}\n\n\nfunction draw() {\n\n    background(0);\n\n    twinkleStars();\n\n    // Creating Big Dipper (hard code the coordinates)\n    createStars(1 * width / 15, 2 * height / 15);\n    createStars(4 * width / 15, 3 * height / 15);\n    createStars(6 * width / 15, 5.5 * height / 15);\n    createStars(8 * width / 15, 8 * height / 15);\n    createStars(7.5 * width / 15, 11 * height / 15);\n    createStars(13 * width / 15, 9 * height / 15);\n    createStars(12 * width / 15, 13 * height / 15);\n}\n\n\n// CREATE STARS\nfunction createStars(posX, posY) {\n    // pending: create multiple stars at random locations\n    ellipse(posX, posY, diameter1, diameter2);\n    ellipse(posX, posY, diameter2, diameter1);\n\n}\n\n// MAKE STARS TWINKLE\nfunction twinkleStars() {\n    fill(255, 50 + noise(millis() * 0.001) * 255); // flicker\n    noiseSeed(1);\n    twinkle1 = noise(millis() * 0.0001);\n    noiseSeed(20); // different movement across x & y\n    twinkle2 = noise(millis() * 0.0010);\n    diameter1 = twinkle1 * 40;\n    diameter2 = twinkle2 * 20;\n}"
  },
  {
    "_id": "9K2uKpwvxqNWh6Miy",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-03-01T13:16:44.68Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fpwm2jhg38njdyrvbzkp",
        "version": 1551446328,
        "signature": "8842f30b8185027fe1c5e9ecb5d04133bf694334",
        "width": 992,
        "height": 868,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T13:18:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 15502414,
        "type": "upload",
        "etag": "d0cff1379d6f951af387e2c0e971ef54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551446328/avalanche2019/fpwm2jhg38njdyrvbzkp.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551446328/avalanche2019/fpwm2jhg38njdyrvbzkp.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3424172",
          "dar": "8:7"
        },
        "frame_rate": 60,
        "bit_rate": 3474157,
        "duration": 35.697667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 2 Part 1"
  },
  {
    "_id": "9LZv9Q6nQaisad36c",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T21:22:57.989Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ssx0gnji0zyat9dhlf1r",
        "version": 1551907386,
        "signature": "79ec7b223100929f8ade213893ff2d38af3abc07",
        "width": 496,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T21:23:06Z",
        "tags": [],
        "bytes": 401535,
        "type": "upload",
        "etag": "9522a3600d755e8bb8ffff9ba6094887",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551907386/avalanche2019/ssx0gnji0zyat9dhlf1r.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551907386/avalanche2019/ssx0gnji0zyat9dhlf1r.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-06T23:46:50.622Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Tribal",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/p5.min.js\n\nvar testImage;\n\nfunction preload() {\n    testImage = loadImage(\"Untitled-1.jpg\");\n}\n\nfunction setup() {\n    // create a place to draw\n    createCanvas(250, 250);\n\n    // load up the pixel[] array so we can read colors out of it later\n    testImage.loadPixels();\n}\n\n\nfunction draw() {\n    // clear the background\n    //background(0, 0, 0);\n\n    // set drawing styles\n    background(255,245,0);\n  \tstroke(128, 0, 0);\n    stroke(255, 140, 0, 80);  \n\n    //var start = millis();\n\n    // loop over every x,y pixel coordinate in the image\n    for (x = 0; x < 640; x++) {\n        for (y = 0; y < 320; y++) {\n\n            // slow\n            // this is _really_ slow, it might crash your browser\n            // var pixelRed = red(testImage.get(x, y));\n\n            // quick\n            var pixelRed = getQuick(testImage, x, y)[0];\n\n           var c = color(random(255), random(255), random(255));\n          \n            // pick a random value and compare it pixelRed\n            // for example:\n            // if pixelRed is 0, we'll never draw\n            // if pixelRed is 255, we'll always draw\n            // if pixelRed is 127, we'll draw 50% of the time\n            if (random(255) < pixelRed) {\n                drawGrassBlade(x, y);\n            }\n        }\n    }\n\n    //var end = millis();\n\n    noLoop();\n}\n\nfunction drawGrassBlade(x, y) {\n\n    var bladeHeight = min(\n        random(1, 30), random(1, 30), random(1, 60),\n        random(1, 60), random(1, 60), random(1, 60)\n    );\n\n    var bladeLean = random(-.5,.30);\n    bladeLean *= bladeHeight;\n\n    line(x, y, x + bladeLean, y - bladeHeight);\n\n}\n\n\n// find the RGBA values of the pixel at x, y in the img.pixels array\n// see: http://p5js.org/reference/#/p5/pixels[]\n// we don't need to worry about screen pixel density here, because we are not reading from the screen\n\nfunction getQuick(img, x, y) {\n\n    var i = (y * img.width + x) * 4;\n    return [\n        testImage.pixels[i],\n        testImage.pixels[i + 1],\n        testImage.pixels[i + 2],\n        testImage.pixels[i + 3],\n    ];\n}",
    "description": "Started with Reaction Diffusion -- and came up with weird type."
  },
  {
    "_id": "9Lm78BRQciantyFWM",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T18:54:10.192Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cxdlazef0xjoqmkw3sku",
        "version": 1557514457,
        "signature": "dc08cda5e4a435b4901aee87d87e553051ea2a8c",
        "width": 1120,
        "height": 744,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T18:54:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 1693191,
        "type": "upload",
        "etag": "efcef0316a09ead6c082f3456ea216f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557514457/avalanche2019/cxdlazef0xjoqmkw3sku.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557514457/avalanche2019/cxdlazef0xjoqmkw3sku.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3378148",
          "dar": "140:93"
        },
        "frame_rate": 60,
        "bit_rate": 4219133,
        "duration": 3.2105,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I need to get better at popping the BahLOoOOons"
  },
  {
    "_id": "9QHWAdGy34rwxTdGN",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T03:26:20.638Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dqcheesgnesaak2m6dun",
        "version": 1553829987,
        "signature": "b4b5ad2fec9677757dbb06f26f9bfb1f12e2b226",
        "width": 1188,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T03:26:27Z",
        "tags": [],
        "bytes": 605174,
        "type": "upload",
        "etag": "2b83270795fcb9fd5e4b7eea8ccff386",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553829987/avalanche2019/dqcheesgnesaak2m6dun.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553829987/avalanche2019/dqcheesgnesaak2m6dun.png"
      },
      {
        "public_id": "avalanche2019/hfsomaj8gelzy208brhh",
        "version": 1553830456,
        "signature": "cbbf678534a8f2c8666aad8cf05c1b0e200d4e3d",
        "width": 1176,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T03:34:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 1783363,
        "type": "upload",
        "etag": "cdbcecccea02a043afb360fc7d5e7534",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553830456/avalanche2019/hfsomaj8gelzy208brhh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553830456/avalanche2019/hfsomaj8gelzy208brhh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "587525",
          "dar": "147:148"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 590468,
        "duration": 24.162,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Continuation in Vertigo aesthetics"
  },
  {
    "_id": "9gMe9sGaLDMjEJLCb",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-01T20:45:36.15Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yhkz0ea5tsui3x9lwtqp",
        "version": 1551473160,
        "signature": "9e7769956504a45befc9cbb78eee63c899f0c435",
        "width": 2492,
        "height": 1292,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T20:46:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 18219700,
        "type": "upload",
        "etag": "e620980c3db151b50a0d43ea69fe4d7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551473160/avalanche2019/yhkz0ea5tsui3x9lwtqp.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551473160/avalanche2019/yhkz0ea5tsui3x9lwtqp.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "22358447",
          "dar": "623:323"
        },
        "frame_rate": 60,
        "bit_rate": 22366893,
        "duration": 6.516667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Trying to make some perlin noise rain"
  },
  {
    "_id": "9gbSPzejJb5rA73ii",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T05:02:14.022Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lyunr5s9blnfonunx1lz",
        "version": 1549515775,
        "signature": "f2383e3d4f523cde1448947e7749c0cf947cb7bb",
        "width": 1170,
        "height": 1176,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T05:02:55Z",
        "tags": [],
        "bytes": 1060606,
        "type": "upload",
        "etag": "fe68350c3428da0adc47cf2bf1543227",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549515775/avalanche2019/lyunr5s9blnfonunx1lz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549515775/avalanche2019/lyunr5s9blnfonunx1lz.png"
      },
      {
        "public_id": "avalanche2019/wycnv609yrognift4rf1",
        "version": 1549515788,
        "signature": "5ba4734899c5b5c834659707519a064cae803a10",
        "width": 1196,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T05:03:08Z",
        "tags": [],
        "bytes": 3987715,
        "type": "upload",
        "etag": "683531cd84926f6b69f32b82d498d477",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549515788/avalanche2019/wycnv609yrognift4rf1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549515788/avalanche2019/wycnv609yrognift4rf1.png"
      },
      {
        "public_id": "avalanche2019/einh1r54ttek7zfueyhc",
        "version": 1549515820,
        "signature": "125a9c86a2705b146855ccb607e973abf304bd80",
        "width": 1190,
        "height": 1188,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T05:03:40Z",
        "tags": [],
        "bytes": 3916555,
        "type": "upload",
        "etag": "4ec0f2e9dda9706c2d8fe54c1cab4f0d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549515820/avalanche2019/einh1r54ttek7zfueyhc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549515820/avalanche2019/einh1r54ttek7zfueyhc.png"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:34:41.463Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T19:55:03.482Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T20:47:38.876Z" }
      }
    ],
    "title": "",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\nlet time = 0;\nlet curlWidth = 10;\nlet frequency = 0.15; //frequency //how fast they rotate \nlet pointTightness = 1;\nlet pointDiameter = 1;\nlet hairColors = [];\n\nfunction setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n    smooth();\n\n    colorMode(RGB, 255, 255, 255, 1);\n\n    // stroke(255, 102, 0, 1);\n    fill(255, 102, 0);\n    noStroke();\n\n    // }\n    // window.draw = function () {\n    clear();\n    background(0, 0, 0);\n    for (tuft = 1; tuft < 15; tuft++) {\n        //starting point for a tuft of hair \n        origin = tuft * 40;\n        tuftLength = Math.floor(Math.random() * 40) + 550;\n\n        //maybe drawing this all the time \n        // or maybe as you draw the strands you see the colors change from one to the next \n        // width  is length of strands \n        let yOffset = random(-100, -50);\n        for (strands = 0; strands < 50; strands++) {\n            //strand opacity \n            // let opacity = (Math.random() - .2)\n            length = tuftLength + (Math.random() * 90);\n            let opacity = (map(length, 550, 680, 0, 1)) - .1;\n            color\n            let lavander = {\n                r: random(220, 230),\n                g: random(118, 230),\n                b: random(218, 230),\n            };\n            // fill(lavander.r, lavander.g, lavander.b, opacity);\n            blonde = {\n                r: random(189, 228),\n                g: random(183, 232),\n                b: random(107, 170),\n            };\n\n\n            fill(blonde.r, blonde.g, blonde.b, opacity);\n\n            let red = {\n                r: random(100, 150),\n                g: random(40, 50),\n                b: random(8, 12),\n            };\n            // fill(red.r, red.g, red.b, opacity);\n\n\n\n            originDeviation = (Math.random() * 30) + 5;\n            strandOriginX = origin + originDeviation;\n            curlTightnessDeviation = random(.04, .043);\n            curlTightnessDeviation2 = random(.04, .043);\n            curlWidthDeviation = Math.floor(Math.random() * 15) + 10;\n            curlWidthDeviation2 = Math.floor(Math.random() * 15) + 10;\n            let twistDeviation = random((-1), (-.3));\n\n            //single strand of hair\n\n            for (i = 0; i < length; i += pointTightness) {\n                let curlTightness = i * curlTightnessDeviation;\n                curlTightness *= Math.floor(Math.random() * 1) + 1;\n                let curTightness2 = i * curlTightnessDeviation2;\n                curTightness2 *= Math.floor(Math.random() * 1) + 1;\n                //bigger phase, the less curcles \n                ellipse(strandOriginX + curlWidth + curlWidthDeviation * sin(frequency + curlTightness), i + yOffset, pointDiameter, pointDiameter);\n                ellipse(strandOriginX + curlWidth + curlWidthDeviation2 * (twistDeviation) * sin(frequency + curTightness2), i + yOffset, pointDiameter, pointDiameter);\n\n            }\n            // time++;\n        }\n    }\n}",
    "description": "texture number 4: double helix ringlets \n\nusing guided randomization to create ringlet curls that spin around one another in gives tufts. \nCoarser texture and experimenting with making different hair colors. Probably should have used HSB, RGB was hard to find good ranges"
  },
  {
    "_id": "9greh5pwRFcaH6jLK",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T07:12:16.654Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "9jaLbrqehriFpmkzu",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T01:04:30.09Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "9miLtXnYe7mvyTgXZ",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T04:52:00.764Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/t8lmfb99it3lmiwmtnt1",
        "version": 1552020725,
        "signature": "8be39d531c5132d6e06c8b1006d8591930ece2b4",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T04:52:05Z",
        "tags": [],
        "bytes": 102846,
        "type": "upload",
        "etag": "4c7b274d63409aa769004e81636f40cb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552020725/avalanche2019/t8lmfb99it3lmiwmtnt1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552020725/avalanche2019/t8lmfb99it3lmiwmtnt1.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "play without plan",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\npixelSize = 100;\nfunction setup() {\n createCanvas(500, 500);\n}\n\nfunction draw() {\n background(200,100,10);\n img = createImage(pixelSize, pixelSize);\n img.loadPixels();\n\n for (var i = 0; i < pixelSize; i++) {\n  for (var j = 0; j < pixelSize; j++) {\n   var c = color(cos(index(j+i, i)/100)*200,\n                 tan(index(j+i+200, i+300)*100)*900*100,\n                 cos(index(noise(j*0.1), noise(i*.1))*50)*2500);\n   \n   img.set(i, j, c);\n  }\n }\n\n img.updatePixels();\n noSmooth();\n image(img, 0, 0, width, height);\n noLoop();\n}\n\nfunction index(x, y) {\n return x + y * pixelSize;\n}"
  },
  {
    "_id": "9v5pPzHQfYgTjHn5K",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:15:22.415Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cdtjdgl6whk0w8e5wh7w",
        "version": 1548458762,
        "signature": "e7b32af01f95b586fd5f99e8c569b5596a360d0a",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:26:02Z",
        "tags": [],
        "bytes": 2922578,
        "type": "upload",
        "etag": "7cee6b96dfb5493c2a1d356497d7f22b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458762/avalanche2019/cdtjdgl6whk0w8e5wh7w.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458762/avalanche2019/cdtjdgl6whk0w8e5wh7w.jpg"
      },
      {
        "public_id": "avalanche2019/fg7c9hxocmbmtxn43jzs",
        "version": 1548458765,
        "signature": "fbebc9f5eb9bd1dc17f378d0aa86a6c66887501a",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:26:05Z",
        "tags": [],
        "bytes": 2649627,
        "type": "upload",
        "etag": "15b35b564becd87bc862b7d000979514",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458765/avalanche2019/fg7c9hxocmbmtxn43jzs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458765/avalanche2019/fg7c9hxocmbmtxn43jzs.jpg"
      },
      {
        "public_id": "avalanche2019/a2svioey4ujh2uont1ix",
        "version": 1548458769,
        "signature": "c8b77d646c95495e5b9c4d77a0e9844e9c8bbfc6",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:26:09Z",
        "tags": [],
        "bytes": 2797067,
        "type": "upload",
        "etag": "50cf7d3d8254ca8a23665e7664905653",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458769/avalanche2019/a2svioey4ujh2uont1ix.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458769/avalanche2019/a2svioey4ujh2uont1ix.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "These sets of images are a dream within a dream. \nThe alien ponders over their life as a child, who further thinks about their life as a newborn.",
    "inspiration_name": "Tile Inception",
    "inspiration_url": "https://www.imdb.com/title/tt1375666/"
  },
  {
    "_id": "9vgsLaZdHqKymXMgW",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T17:33:52.98Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wbcqasoyqbtmtdl2ru9b",
        "version": 1555090437,
        "signature": "70a529c013c8e7498a01f114ad93658b3ec82c32",
        "width": 2520,
        "height": 1448,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T17:33:57Z",
        "tags": [],
        "bytes": 299447,
        "type": "upload",
        "etag": "881c0e15d21c55b4b5842837f1502c7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555090437/avalanche2019/wbcqasoyqbtmtdl2ru9b.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555090437/avalanche2019/wbcqasoyqbtmtdl2ru9b.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "#ItWasADarkAndStormyNightChallenge. When you call your dog a \"good boy\", but not your cat..."
  },
  {
    "_id": "9w3xEwLhwNdoyYFBR",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T17:04:50.024Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bhr7gn8bkczgunbhbaa1",
        "version": 1550595905,
        "signature": "bb7c1f3b77017c4e47147ab35c666cb3ccad117d",
        "width": 1232,
        "height": 1232,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T17:05:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 19240357,
        "type": "upload",
        "etag": "c942c495cc1939c133326fe89c0f6d5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550595905/avalanche2019/bhr7gn8bkczgunbhbaa1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550595905/avalanche2019/bhr7gn8bkczgunbhbaa1.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "314776",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "12194904",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 13534455,
        "duration": 11.372667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T17:36:11.452Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-19T20:23:45.181Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:35:01.532Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T20:54:55.503Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-22T20:54:56.27Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-22T21:07:57.375Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T21:15:51.477Z" }
      }
    ],
    "title": "",
    "description": "Thought it was a good idea to start with sound with this week’s topic. click and drag to change a bandwith-filter: mouse X controls the filter range and mouse Y the filter frequency.",
    "inspiration_name": "P5 sound note envelope example",
    "inspiration_url": "https://p5js.org/examples/sound-note-envelope.html",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nvar osc, envelope, fft;\n\nvar scaleArray = [110, 122, 30, 32, 81, 82, 134];\nvar note = 0;\nvar gridAmount = 1024;\nvar gridColumns = 32;\nvar gridRows = gridAmount / gridColumns;\n// console.log(gridRows);\nvar margin = { top: 80, right: 80, bottom: 80, left: 80 };\nvar w = 600 - (margin.left + margin.right);\nvar h = 600 - (margin.top + margin.bottom);\nvar gridSize = w / gridColumns;\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  createCanvas(w + margin.left + margin.right, h + margin.top + margin.bottom);\n  createP(\"\");\n  // selType = createSelect();\n  // selType.option(\"white\");\n  // selType.option(\"pink\");\n  // selType.option(\"brown\");\n\n  filter = new p5.BandPass();\n  noise = new p5.Noise(\"white\");\n  // noise.amp(0.4);\n  noise.disconnect();\n  noise.connect(filter);\n  noise.start();\n\n  fft = new p5.FFT();\n  filter.amp(0.4, 0.4);\n  noStroke();\n  filter.freq(400);\n  filter.res(40);\n}\n\nfunction draw() {\n  translate(margin.left, margin.top);\n\n  filter.amp(0.4, 0.4);\n  background(0, 0, 0.9);\n\n  // set the BandPass frequency based on mouseX\n\n  if (mouseIsPressed && mouseY < height) {\n    var freq = map(mouseY, 0, height, 02, 14000);\n    filter.freq(freq);\n    // give the filter a narrow band (lower res = wider bandpass)\n    filter.res(map(mouseX, margin.left, width - margin.right, 10, 300, true));\n  } else {\n    // filter.res(10);\n  }\n\n  // plot FFT.analyze() frequency analysis on the canvas\n  var spectrum = fft.analyze();\n  // console.log(spectrum);\n  for (var i = 0; i < spectrum.length; i++) {\n    xPos = (i % gridColumns) * gridSize;\n    yPos = floor(i / gridColumns) * gridSize;\n    fill(0, 0, 0.4);\n    textSize(10);\n    textAlign(CENTER);\n    text(spectrum[i], xPos, yPos);\n  }\n}\n\nfunction mouseClicked() {\n  noise.start();\n}"
  },
  {
    "_id": "9wngD6xzhH5BBfSrb",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T18:57:38.404Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fffugvqmbdl2dbzvoton",
        "version": 1557428322,
        "signature": "8dffb33e74b49d183f92d34f76422df701aa0079",
        "width": 852,
        "height": 562,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-09T18:58:42Z",
        "tags": [],
        "bytes": 51000,
        "type": "upload",
        "etag": "9e8b654bbc63d8eb86072618afc9a36d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557428322/avalanche2019/fffugvqmbdl2dbzvoton.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557428322/avalanche2019/fffugvqmbdl2dbzvoton.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "played around with existing code from glitch credit url: https://glitch.com/edit/#!/mayo-hero?path=public/game.js:1:0\nadded in super mario  escapes.",
    "inspiration_url": "https://glitch.com/edit/#!/mayo-hero?path=public/game.js:1:0"
  },
  {
    "_id": "9wuS7eFeihFBvGZtr",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-02-01T06:04:21.867Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vn57ahhez5szgg8wztzg",
        "version": 1549001102,
        "signature": "d3f5a29767469e7e4ecb9f2253f741e6fbb0b05d",
        "width": 7200,
        "height": 5400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T06:05:02Z",
        "tags": [],
        "bytes": 2834410,
        "type": "upload",
        "etag": "1896558d473d4298e5c30669baf737b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549001102/avalanche2019/vn57ahhez5szgg8wztzg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549001102/avalanche2019/vn57ahhez5szgg8wztzg.jpg"
      },
      {
        "public_id": "avalanche2019/l6wrnzjqifsbjtwpi4aq",
        "version": 1549001130,
        "signature": "f5f374ec41a6a673819cddcb2835b0acd9586501",
        "width": 7200,
        "height": 5400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T06:05:30Z",
        "tags": [],
        "bytes": 3118152,
        "type": "upload",
        "etag": "a59dd7f4c23637dbd0196f403cde53d2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549001130/avalanche2019/l6wrnzjqifsbjtwpi4aq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549001130/avalanche2019/l6wrnzjqifsbjtwpi4aq.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:32.271Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:41.314Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:24.717Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Taking apart Chinese characters and re-organize them."
  },
  {
    "_id": "9xD3HDibqZZunPqbJ",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T03:25:05.506Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kvarhnywwrlxo5ugixtc",
        "version": 1555557911,
        "signature": "399654cb0a620ed792212e553b6a295f2d5b47d1",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T03:25:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 4012893,
        "type": "upload",
        "etag": "6407508aaab377073b739173c0a9adb6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555557911/avalanche2019/kvarhnywwrlxo5ugixtc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555557911/avalanche2019/kvarhnywwrlxo5ugixtc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "247464",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "2896100",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 3154531,
        "duration": 10.176833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Play around with the high-heel sound effect",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\nlet mySound;\nlet fft;\n\nfunction preload() {\n    mySound = loadSound('highheel.mp3');\n\n}\n\nfunction setup() {\n    createCanvas(1000, 700);\n\n    fft = new p5.FFT(0, 128);\n    fft.setInput(mySound);\n\n    startButton = createButton('start');\n    startButton.mousePressed(start);\n\n    stopButton = createButton('stop');\n    stopButton.mousePressed(stop);\n}\n\nfunction start() {\n    mySound.loop(0, 0.5, 1, 0, 2);\n}\n\nfunction stop() {\n    mySound.pause();\n}\n\nfunction draw() {\n    background(0);\n \n    noStroke();\n\n    const data = fft.waveform();\n\n    for (let i = 0; i < 128; i+=2) {\n        const x = map(i, 10, 128, 0, 1000);\n        const y = map(data[i], -1, 1, 10, 0);\n        fill(map(data[i], -1, 1, 10, 0));\n        rect(x, y, 5, 1200);\n        fill(data[i]*1000,data[i]*1000,data[i]*10000);\n        rect(x+5, y+5, 5, 1200);\n        fill(data[i]*10000,data[i]*1000,data[i]*1000);\n        rect(x+10, y+10, 5, 1200);\n    }\n}"
  },
  {
    "_id": "9xEbATAn42sxQYysz",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T22:43:13.616Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ajyqnaifxfrss2ceofqd",
        "version": 1548974598,
        "signature": "f92353546fe07044e061f336b39f643db3bcf857",
        "width": 3300,
        "height": 2550,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T22:43:18Z",
        "tags": [],
        "bytes": 3283797,
        "type": "upload",
        "etag": "674aaf3bf1362876785df5b83a2689b6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548974598/avalanche2019/ajyqnaifxfrss2ceofqd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548974598/avalanche2019/ajyqnaifxfrss2ceofqd.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:44.718Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:34.557Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Old sweater pattern. Color palette inspired by Spider Man. Created using Illustrator and Photoshop."
  },
  {
    "_id": "9zrTdkawudtgMcT83",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T18:27:42.353Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dzvnm9rngtghqzojavae",
        "version": 1557512889,
        "signature": "16bbfbc34d0971fc1516f47194ab0604c8b5cb7c",
        "width": 1658,
        "height": 1136,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T18:28:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 367240,
        "type": "upload",
        "etag": "928a6066289e043b7c5d96bfe93ff55a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557512889/avalanche2019/dzvnm9rngtghqzojavae.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557512889/avalanche2019/dzvnm9rngtghqzojavae.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "674654",
          "dar": "829:568"
        },
        "frame_rate": 15,
        "bit_rate": 677981,
        "duration": 4.333333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Racoon is hungry for muffins! With score tracking",
    "inspiration_name": "Open Games Sprites",
    "inspiration_url": "https://opengameart.org/"
  },
  {
    "_id": "A5PMXDtDXPwd4e4bT",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T15:15:36.381Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lda4pvfk9tn5bvimfdgn",
        "version": 1556291760,
        "signature": "e370ca87231c936f227bc5f76e79d99d7134129d",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T15:16:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 13240714,
        "type": "upload",
        "etag": "4f3ea8950a56d969e9a0e8a7f19ce539",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556291760/avalanche2019/lda4pvfk9tn5bvimfdgn.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556291760/avalanche2019/lda4pvfk9tn5bvimfdgn.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "28501606",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 31123497,
        "duration": 3.4034,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Mix of programmed and manual work... leaves it a little imprecise but saw through a rough version of the original idea. **Might need to turn sound up to hear.**"
  },
  {
    "_id": "A5kthfjCDnHpPwZJw",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T17:33:36.97Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/go9gtmwydufkawn8j55n",
        "version": 1552671222,
        "signature": "19b3ec21cebf234f8880675ddf6ff8815ba4572f",
        "width": 498,
        "height": 498,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T17:33:42Z",
        "tags": [],
        "bytes": 43351,
        "type": "upload",
        "etag": "3c05ed56d82deb2979201847425e15ad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552671222/avalanche2019/go9gtmwydufkawn8j55n.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552671222/avalanche2019/go9gtmwydufkawn8j55n.png"
      },
      {
        "public_id": "avalanche2019/dava2j4laehodjskpjcy",
        "version": 1552671228,
        "signature": "d92c53c393430a8957402bff66b1557bd5b5885e",
        "width": 498,
        "height": 498,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T17:33:48Z",
        "tags": [],
        "bytes": 20117,
        "type": "upload",
        "etag": "5e117acdc938d33e114958ac73ee9f8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552671228/avalanche2019/dava2j4laehodjskpjcy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552671228/avalanche2019/dava2j4laehodjskpjcy.png"
      },
      {
        "public_id": "avalanche2019/iygeaxwjz48zmmkjhyc3",
        "version": 1552671233,
        "signature": "9368e30f526b5f7eeea5316d51c91f1d3ca044b7",
        "width": 498,
        "height": 498,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T17:33:53Z",
        "tags": [],
        "bytes": 38795,
        "type": "upload",
        "etag": "14a7f791b844c0bcce7b824b3bf66f0f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552671233/avalanche2019/iygeaxwjz48zmmkjhyc3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552671233/avalanche2019/iygeaxwjz48zmmkjhyc3.png"
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T18:22:10.315Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:50:44.107Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:51:10.957Z" }
      }
    ],
    "title": "",
    "description": "I'm loving playing with L-systems, seeing how fluid they can be. These feel like the spiral doodles I draw in meetings.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nlet turnOptions = [];\nlet forwardOptions = [];\n\n// playing with these will create some radically different effects\nconst stepDist = 10;\nconst turnDeg = 10;\nconst strokeWt = .2;\n\nlet hexRed;\nlet hexYellow;\nlet hexBlue;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n\n    noFill();\n    strokeWeight(strokeWt);\n    background(245, 245, 245);\n    \n    for (let i = 0; i < 360; i += turnDeg) {\n        turnOptions.push(i);\n    }\n\n    hexRed = color(\"#000000\");\n    hexYellow = color(\"#000000\");\n    hexBlue = color(\"#000000\");\n\n    chooseRandColor();\n  \n}\n\nfunction draw() {\n    myTurtle.moveTo(width / 2, height / 2);\n    myTurtle.penDown();\n\n    // put the pen down to draw\n    for (let i = 0; i < 800; i++) {\n\n        let nX = noise(myTurtle.x * .1, 0, 0);\n        let nY = noise(0, myTurtle.y * .1, 100);\n        let thisTurnIndex = Math.floor(random(turnOptions.length));\n        let thisTurn = turnOptions[thisTurnIndex];\n\n        if (myTurtle.x < width && myTurtle.x > 0) {\n            if (myTurtle.y < height && myTurtle.y > 0) {\n                myTurtle.moveForward(stepDist);\n                myTurtle.turnRight(thisTurn + ((random(-1, 1) * nY) / 10));\n            }\n        }\n\n        if (thisTurn === 90) {\n            chooseRandColor();\n        }\n\n        push();\n        for (let i = 0; i < 10; i++) {\n            let thisTurn = turnOptions[thisTurnIndex];\n            if (myTurtle.x < width && myTurtle.x > 0) {\n                if (myTurtle.y < height && myTurtle.y > 0) {\n                    myTurtle.moveForward(stepDist);\n                    myTurtle.turnRight(thisTurn);\n                }\n            }\n        }\n        pop();\n    }\n  \n\tnoLoop();\n}\n\nfunction chooseRandColor() {\n    let randC = random();\n    if (randC < (1/3)) {\n        stroke(color(hexRed));\n        fill(color(hexRed));\n    } else if (randC < (2/3)) {\n        stroke(color(hexYellow));\n        fill(color(hexYellow));\n    } else if (randC < 1) {\n        stroke(color(hexBlue));\n        fill(color(hexBlue));\n    }\n}\n\n// Turtle\n// Basic turtle graphics implementation:\n// https://en.wikipedia.org/wiki/Turtle_graphics\n// For more info on Javascript OOP:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript\n//\n// The turtle's coordinate system uses pixels for distance and degrees for rotations\n// 0 degrees is straight right (east); positive degrees are clockwise\n\n// Turtle constructor\n// takes optional x, y starting coordinates (default is center of sketch)\nfunction Turtle(x, y) {\n  // assign default values to x and y if they were not passed\n  if (typeof x === \"undefined\") {\n    x = width * 0.5;\n  }\n  if (typeof y === \"undefined\") {\n    y = height * 0.5;\n  }\n  this.x = x;\n  this.y = y;\n  this.bearingRadians = 0;\n  this.isPenDown = true;\n  this._stateStack = [];\n}\n\n// moveTo instantly transports the turtle to the provided x, y location, drawing a line if pen is down\nTurtle.prototype.moveTo = function (newX, newY) {\n  if (this.isPenDown) {\n    line(this.x, this.y, newX, newY);\n  }\n  this.x = newX;\n  this.y = newY;\n};\n\n// moveForward moves the turtle along its current bearing, drawing a line if pen is down\nTurtle.prototype.moveForward = function (distance) {\n  var newX = this.x + cos(this.bearingRadians) * distance;\n  var newY = this.y + sin(this.bearingRadians) * distance;\n  this.moveTo(newX, newY);\n};\n\n// moveBackward moves the turtle backward from its current bearing, drawing a line if pen is down\nTurtle.prototype.moveBackward = function (distance) {\n  this.moveForward(-distance);\n};\n\n// turnTo changes the turtle's bearing to the provided angle in degrees\nTurtle.prototype.turnTo = function (angleDegrees) {\n  this.bearingRadians = radians(angleDegrees);\n};\n\n// turnRight rotates the turtle's bearing clockwise by the provided angle in degrees\nTurtle.prototype.turnRight = function (amountDegrees) {\n  this.bearingRadians += radians(amountDegrees);\n};\n\n// turnLeft rotates the turtle's bearing counter-clockwise by the provided angle in degrees\nTurtle.prototype.turnLeft = function (amountDegrees) {\n  this.bearingRadians -= radians(amountDegrees);\n};\n\n// penUp tells the turtle to move without drawing\nTurtle.prototype.penUp = function () {\n  this.isPenDown = false;\n};\n\n// penDown tells the turtle to draw a line when it moves\nTurtle.prototype.penDown = function () {\n  this.isPenDown = true;\n};\n\n// pushState records the turtle's current state (position, bearing, etc.) to a stack so that changes can be undone easily\nTurtle.prototype.pushState = function () {\n  this._stateStack.push({\n    x: this.x,\n    y: this.y,\n    bearingRadians: this.bearingRadians,\n    isPenDown: this.isPenDown\n  });\n};\n\n// popState restores the turtle's state to the top recorded state on the stack\nTurtle.prototype.popState = function () {\n  if (this._stateStack.length === 0) {\n    console.error(\n      \"Turtle: No states left on stack. Make sure your calls to .pushState and .popState are balanced.\"\n    );\n    return;\n  }\n  var state = this._stateStack.pop();\n  this.x = state.x;\n  this.y = state.y;\n  this.bearingRadians = state.bearingRadians;\n  this.isPenDown = state.isPenDown;\n};\n\n// image draws and image centered on the turtle's current location and alligned with the turtle's rotation (forward = up)\nTurtle.prototype.image = function (i, w, h) {\n  // w, h are optional parameters to this function and to p5's image\n  // p5's image function will draw the image at its \"normal\" size if w and h are undefined\n\n  push();\n  translate(this.x, this.y);\n  rotate(this.bearingRadians + PI * 0.5);\n  imageMode(CENTER);\n  image(i, 0, 0, w, h);\n  pop();\n};"
  },
  {
    "_id": "A9cW8c2vv2kyWhJKs",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T02:06:06.752Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "A Chinese song",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n  ['C4', '4n'],\n  ['D4', '4n'],\n  ['E4', '2n'],\n\n   ['E4', '4n'],\n   ['G4', '4n'],\n  ['a4', '2n'],\n\n    ['a4', '4n'],\n       ['E5', '4n'],\n        ['D5', '4n'],\n            ['C5', '4n'],\n             ['C5', '4n'],\n               ['a4', '4n'],\n                  ['G4', '2n'],\n\n  ['a4', '4n'],\n    ['G4', '4n'],\n       ['E4', '4n'],\n        ['D4', '4n'],\n          ['C4', '2n'],\n\n            ['a3', '4n'],\n              ['C4', '4n'],\n                ['D4', '2n'],\n                   ['D4', '4n'],\n                      ['C4', '4n'],\n                      ['D4', '2n'],\n  \n \n   ['rest', '2m'],\n\n \n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "AC3jAiQ6jo9xurhFc",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T11:31:32.116Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zahlizjm2aba7lsn7k6h",
        "version": 1549625546,
        "signature": "6615af1d3b16154542c38dfe20e5a45307aff5b6",
        "width": 904,
        "height": 894,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T11:32:26Z",
        "tags": [],
        "bytes": 74316,
        "type": "upload",
        "etag": "d20e79e03c7686251e5db623c237d01f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549625546/avalanche2019/zahlizjm2aba7lsn7k6h.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549625546/avalanche2019/zahlizjm2aba7lsn7k6h.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I have created a painting canvas for creating Mondrian style paintings. \nThe user can select from a custom shape and color to create their custom painting.\nI have used keyboard inputs to change the colors (1: white, 2: black, 3: red, 3: yellow, 5: blue) and dimensions (q: tall, w: wide, e: square) of the tiles.",
    "inspiration_name": "Custom Mondrian Painting",
    "inspiration_url": "https://en.wikipedia.org/wiki/Piet_Mondrian",
    "code": "// Recreate Mondrian painting style\n// Idea: create RGB rectangles and black borders. Make the user create a Mondrian style painting by using the canvas as a sticker sheet. \n// Colors and dimensions would change on key selection\n\nlet font, fontSize = 10;\nlet boxWidth, boxHeight; // dimensions of the box\n\nfunction preload() {\n    font = loadFont('Montserrat/Montserrat-Regular.ttf');\n}\n\nfunction setup() {\n    createCanvas(700, 700);\n    background(255);\n    mousePressed();\n\n    // Instruction window\n    fill(0);\n    rect(0, height - 40, width, 40);\n    textFont(font);\n    textSize(fontSize);\n    textAlign(CENTER, CENTER);\n    fill(255);\n    text(\"Create your own Mondrian. Press 'q' for tall tiles,'w' for long tiles, and 'e' for square tiles.\", width * 0.5, height - 30);\n    text(\"Choose 1 for white, 2 for black, 3 for red, 4 for yellow, & 5 for blue.\", width * 0.5, height - 12);\n}\n\n// function to paste objects on mouse click\nfunction mousePressed() {\n\n    strokeWeight(3);\n    //rectMode(CENTER);\n    rect(mouseX, mouseY, boxWidth, boxHeight);\n}\n\n// function to change colors and dimensions of the boxes\nfunction keyReleased() {\n    // change color\n    if (key === '1') {\n        fill(255); // white\n    } else if (key === '2') {\n        fill(0); // black\n    } else if (key === '3') {\n        fill(255, 0, 0); // red\n    } else if (key === '4') {\n        fill(255, 255, 0); // yellow\n    } else if (key === '5') {\n        fill(15, 127, 191); // blue\n    }\n\n    // set dimensions for the box\n    if (key === 'q') {\n        boxWidth = 80;\n        boxHeight = 160;\n    } else if (key === 'w') {\n        boxWidth = 160;\n        boxHeight = 80;\n    } else if (key === 'e') {\n        boxWidth = 160;\n        boxHeight = 160;\n    }\n}"
  },
  {
    "_id": "ACvBXTQd6oG6Y7jBb",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T17:57:22.33Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l3oz9h3vcujmm84krl5g",
        "version": 1549043848,
        "signature": "a6bc15236fc6bc27b5ef108597ffdec77c00778f",
        "width": 730,
        "height": 687,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T17:57:28Z",
        "tags": [],
        "bytes": 66202,
        "type": "upload",
        "etag": "84d6bc100e4cf063ce9845134800a7bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549043848/avalanche2019/l3oz9h3vcujmm84krl5g.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549043848/avalanche2019/l3oz9h3vcujmm84krl5g.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "The Golem of Pre-history. Two tiles, a straight line and elbow joint, as  map for a short Twine story. started as a typical dungeon crawler then I started writing started and it became, well, something else. \n\nhttp://philome.la/bmack/the-golem-of-pre-history",
    "inspiration_name": "The Golem of Pre-history",
    "inspiration_url": "http://philome.la/bmack/the-golem-of-pre-history"
  },
  {
    "_id": "ACxqgruCSnq9khYxn",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-25T01:04:50.382Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/grw6bg0ijsj2jefi8jzk",
        "version": 1556154311,
        "signature": "df20ea4fa1e10633a7d9eb332ec455c94e72e97f",
        "width": 1920,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-25T01:05:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 15569499,
        "type": "upload",
        "etag": "695ec39eed91052c1ec2793e54ada64f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556154311/avalanche2019/grw6bg0ijsj2jefi8jzk.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556154311/avalanche2019/grw6bg0ijsj2jefi8jzk.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "100545",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 51,
          "profile": "High",
          "bit_rate": "2369175"
        },
        "is_audio": false,
        "frame_rate": 120,
        "bit_rate": 2575422,
        "duration": 48.363333,
        "rotation": 270
      },
      {
        "public_id": "avalanche2019/sigkur2pwpxoqfpek6ug",
        "version": 1556154427,
        "signature": "5a0307cf9f742b9fa10d00d52779e8e6c905eb13",
        "width": 1920,
        "height": 1403,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-25T01:07:07Z",
        "tags": [],
        "bytes": 232587,
        "type": "upload",
        "etag": "c44381207977c573fe31fe54f9fd6551",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556154427/avalanche2019/sigkur2pwpxoqfpek6ug.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556154427/avalanche2019/sigkur2pwpxoqfpek6ug.jpg"
      },
      {
        "public_id": "avalanche2019/jiwzyimfgs44kck1qe4k",
        "version": 1556154432,
        "signature": "8ed900f08b2972fe3d5bf40d9db0f2ff9e371843",
        "width": 1910,
        "height": 1391,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-25T01:07:12Z",
        "tags": [],
        "bytes": 502311,
        "type": "upload",
        "etag": "8de3f38b7d05b8d77c4ba30fa6873257",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556154432/avalanche2019/jiwzyimfgs44kck1qe4k.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556154432/avalanche2019/jiwzyimfgs44kck1qe4k.png"
      }
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-25T21:30:34.614Z" }
      }
    ],
    "title": "",
    "description": "In this piece, I have played and recorded a piece from Game of Throne's theme music. I have played it on a Grand Piano in Garage Band.\nInspired by Brooke's GoT sketches.",
    "inspiration_name": "Game of Thrones Theme Music",
    "inspiration_url": "http://sketches2019.compform.net/users/WYacRHNkqf6GiFHDS"
  },
  {
    "_id": "AENQyuYarvg4X8C24",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T19:06:32.368Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kmbg1tnzbzehztlj75ym",
        "version": 1550863417,
        "signature": "7e41fa1fa442281799fb59c494ec97345a276119",
        "width": 654,
        "height": 668,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T19:23:37Z",
        "tags": [],
        "bytes": 15251,
        "type": "upload",
        "etag": "d5cbf5bb76a6417644263ce2feb3c293",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550863417/avalanche2019/kmbg1tnzbzehztlj75ym.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550863417/avalanche2019/kmbg1tnzbzehztlj75ym.png"
      },
      {
        "public_id": "avalanche2019/uczxq6qavi3fd3b6lavy",
        "version": 1550868098,
        "signature": "4a921aa483e6c65f3d6eee62f1ee21c34b8e87f1",
        "width": 650,
        "height": 644,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T20:41:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 231077,
        "type": "upload",
        "etag": "72cebb1a812b23def0ff61517a4cdff3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550868098/avalanche2019/uczxq6qavi3fd3b6lavy.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550868098/avalanche2019/uczxq6qavi3fd3b6lavy.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "100106",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "191612",
          "dar": "325:322"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 298162,
        "duration": 6.200023,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Loading in a drum sample to power the amplitude in the noise calculation for the ellipse (remix of my week 2 version)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nlet playButton;\nlet stopButton;\nlet analyzer;\nfunction preload() {\n  myDrums = loadSound(\n    \"https://raw.githubusercontent.com/AndrewLevinson/comp-form/master/week2/sketch-4/drumloop.wav\"\n  );\n}\n\nfunction setup() {\n  colorMode(HSB, 100);\n  createCanvas(300, 300);\n  backgroundColor = color(99, 40, 90);\n\n  analyzer = new p5.Amplitude();\n  analyzer.setInput(myDrums);\n\n  myDrums.amp(0);\n  myDrums.play();\n  myDrums.loop();\n  // play\n  playButton = createButton(\"Play\");\n  playButton.position(20, 20);\n  playButton.size(60, 30);\n  playButton.style(\"background-color\", \"fff\");\n  playButton.style(\"border-radius\", \"6px\");\n  playButton.style(\"border\", \"none\");\n  playButton.style(\"font-family\", \"monospace\");\n  playButton.style(\"text-transform\", \"uppercase\");\n  playButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  playButton.mousePressed(startAll);\n\n  // stop\n  stopButton = createButton(\"Pause\");\n  stopButton.position(100, 20);\n  stopButton.size(60, 30);\n  stopButton.style(\"background-color\", \"fff\");\n  stopButton.style(\"border-radius\", \"6px\");\n  stopButton.style(\"border\", \"none\");\n  stopButton.style(\"font-family\", \"monospace\");\n  stopButton.style(\"text-transform\", \"uppercase\");\n  stopButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  stopButton.mousePressed(stopAll);\n}\n\nfunction draw() {\n  background(backgroundColor);\n  noStroke();\n  fill(\"#3d3d3d\");\n\n  // Get the average (root mean square) amplitude\n  var rms = analyzer.getLevel();\n  fill(80, 50, 90);\n\n  // Draw an ellipse with size based on noise\n  let r = 25 + noise(rms * 10) * 100;\n  ellipse(width / 2, height / 2, r);\n}\n\nfunction startAll() {\n  myDrums.amp(0.35, 0.05);\n  backgroundColor = color(50, 40, 90);\n}\n\nfunction stopAll() {\n  myDrums.amp(0, 0.5);\n  backgroundColor = color(99, 40, 90);\n}"
  },
  {
    "_id": "AEdGmujHWHJhJ4ZP3",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T19:54:35.224Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sebekw2pc8cm2xvpmgwf",
        "version": 1550865286,
        "signature": "5a1f17c09d7cba369061f79e84bb99eb1eb5d17a",
        "width": 2524,
        "height": 708,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T19:54:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 3235383,
        "type": "upload",
        "etag": "227c171040a0413c0bbf80dc1710cef5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550865286/avalanche2019/sebekw2pc8cm2xvpmgwf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550865286/avalanche2019/sebekw2pc8cm2xvpmgwf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2841999",
          "dar": "631:177"
        },
        "frame_rate": 60,
        "bit_rate": 2849511,
        "duration": 9.083333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "AFbMxxj6R8wzhDvke",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-26T18:23:39.638Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/soqa1prt2w5twjsizhbx",
        "version": 1553823475,
        "signature": "28437602b6767fffc66b8b2ad9a3f45318e20830",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:37:55Z",
        "tags": [],
        "bytes": 277910,
        "type": "upload",
        "etag": "d02f7c84240527b29b804c3f760d9acd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553823475/avalanche2019/soqa1prt2w5twjsizhbx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553823475/avalanche2019/soqa1prt2w5twjsizhbx.png"
      },
      {
        "public_id": "avalanche2019/ks8heuij2y54rt4itboj",
        "version": 1553823478,
        "signature": "8dbd836e8dd734f9e2480d6ab5a365f75b8c2414",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:37:58Z",
        "tags": [],
        "bytes": 154020,
        "type": "upload",
        "etag": "d1d2cc7026790c27dd368a42fcbd6b8a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553823478/avalanche2019/ks8heuij2y54rt4itboj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553823478/avalanche2019/ks8heuij2y54rt4itboj.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T16:10:04.263Z" }
      }
    ],
    "title": "",
    "description": "Before and after illustrator",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n// code from class (Challenging Challenges) \n\nvar center = new Point(250, 250);\nvar bounds = new Rectangle(new Point(0, 0), new Point(500, 500));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#111111';\n\nfor (var i = 0; i < 55; i++) {\n    var bounds = new Rectangle(center - [i * 2, i * 2], center + [i * 2, i * 2]);\n    var path = new Path.Rectangle(bounds);\n    path.strokeWidth = 0.185;\n    path.strokeColor = '#B8ACD4';\n    path.strokeJoin = 'round';\n    path.rotate(i * -1.1);\n    path.dashArray = [1.5, 1.5];\n}"
  },
  {
    "_id": "AFwDdyt8KWYpYBmAi",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T02:41:16.172Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/toxcwebyjn0nyeg5k8bu",
        "version": 1552617687,
        "signature": "f73130e2dea946682ecb5dd07dffe2b128c45b23",
        "width": 500,
        "height": 500,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T02:41:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 18308912,
        "type": "upload",
        "etag": "9418b6e9b0fc9fbb92d6d371a0e88dee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552617687/avalanche2019/toxcwebyjn0nyeg5k8bu.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552617687/avalanche2019/toxcwebyjn0nyeg5k8bu.mov",
        "audio": {},
        "video": {
          "pix_format": "yuva444p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "8125605"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 8129165,
        "duration": 18.018,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/tifmc4ky6zj6afzpjxkt",
        "version": 1552617696,
        "signature": "c40085ccbb3c9e5a0bab6f987309f85f8b3ebc8a",
        "width": 978,
        "height": 978,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T02:41:36Z",
        "tags": [],
        "bytes": 115876,
        "type": "upload",
        "etag": "a3ec39b2a8f0a9d7b95c16b5e037b089",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552617696/avalanche2019/tifmc4ky6zj6afzpjxkt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552617696/avalanche2019/tifmc4ky6zj6afzpjxkt.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:22:36.354Z" }
      }
    ],
    "title": "",
    "description": "sketch was done in After Effects, by changing the twist angle, trim path and rotation speed"
  },
  {
    "_id": "AMRTEZmhNmXX4iJNh",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T20:02:02.124Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "What does noise sound like?",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.7.0/Tone.js\n\nlet yoff = 0.0;\nlet xoff = 0;\nlet synth;\nlet notes = ['A3', 'B2', 'C3', 'D2', 'E3', 'F3', 'F4','C3', 'D4', 'D3', 'B3', 'G4', 'E3', 'F4'];\nlet spots = [];\nlet stepSize = 50;\nlet cols = [];\n\nlet slider;\nlet start = false;\nlet freeverb;\n\nfunction setup() {\n\tcreateCanvas(600, 600);\n\tfreeverb = new Tone.Freeverb({\n\t\troomSize: 0.5,\n\t\tdampening: 3000\n\t}).toMaster();\n\tsynth = new Tone.PolySynth(4, Tone.Synth).connect(freeverb);\n\n\tbackground(255);\n\tnoStroke();\n\tslider = createSlider(10, 200, 100);\n\tslider.position(200, 30);\n\n\tlet cold = createP(\"cold\");\n\tcold.position(150, 15);\n\n\tlet hot = createP(\"hot\");\n\thot.position(350, 15);\n\n\tassignValues(slider.value());\n\n\n\n}\n\nfunction draw() {\n\n\n\n\tlet sval = map(slider.value(), 10, 200, 0.9, 0.2);\n\tfreeverb.roomSize.value = sval;\n\n\ttranslate(0, 40);\n\tfor (var y = 0; y < height / stepSize; y++) {\n\t\tfor (var x = 0; x < width / stepSize; x++) {\n\t\t\t//fill(0,100);\n\n\t\t\tif (mouseX > x * stepSize &&\n\t\t\t\tmouseX < x * stepSize + 50 &&\n\t\t\t\tmouseY > y * stepSize &&\n\t\t\t\tmouseY < y * stepSize + 50) {\n\t\t\t\tfill(0);\n\t\t\t\tplay(spots[x][y].note);\n\t\t\t\tsynth.triggerRelease(spots[x][y].note);\n\t\t\t\tstart = false;\n\n\t\t\t} else\n\t\t\t\tfill(spots[x][y].colr);\n\t\t\trect(x * stepSize, y * stepSize, 50, 50);\n\n\t\t}\n\n\t}\n\n}\n\n\n\n\nfunction mouseReleased() {\n\tif (mouseX > 200 & mouseX < 500 && mouseY > 10 && mouseY < 50) {\n\t\tassignValues(slider.value());\n\t}\n}\n\nfunction mouseMoved() {\n\n\tif (mouseY > 40 && mouseY < height) {\n\t\tstart = true;\n\t} else\n\t\tstart = false;\n}\n\nfunction play(notePick) {\n\tif (start) {\n\t\tsynth.triggerAttackRelease(notePick, '2n')\n\t}\n}\n\n\n\nfunction getColorx(val) {\n\n\tvar x = map(noise(xoff, yoff), 0, 1, val, 200);\n\treturn x;\n}\n\nfunction getColory() {\n\tvar y = map(noise(xoff, yoff), 0, 1, 50, 150);\n\treturn y;\n}\n\nfunction assignValues(value) {\n\n\tfor (let x = 0; x < width / stepSize; x++) {\n\t\tspots[x] = [];\n\t\tcols[x] = []; // create nested array\n\t\tfor (let y = 0; y < height / stepSize; y++) {\n\t\t\t// let rand = Math.floor(random(0, 7));\n\t\t\t\n\t\t\t//cleanup-----------\n\t\t\tlet rand;\n\t\t\t\n\t\t\tif (value < 100) {\n\t\t\t\trand = Math.floor(map(getColorx(value), value, 100, 0, 6));\n\t\t\t} else if (value > 100) {\n\t\t\t\trand = Math.floor(map(getColorx(value), value, 200, 6, notes.length));\n\t\t\t\t}else{\n\t\t\t\trand = Math.floor(random(0, 7));\n\t\t\t\t}\n\t\t\tspots[x][y] = {\n\t\t\t\tcolr: color(getColorx(value), getColory(), 100),\n\t\t\t\t//map it\n\t\t\t\tnote: notes[rand]\n\n\t\t\t};\n\n\t\t\txoff += 0.05;\n\t\t}\n\t\tyoff += 0.01;\n\t}\n\n\n\n}"
  },
  {
    "_id": "ANXTm6DcQtGbnQNmq",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T07:01:47.955Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x0od8kuj0resww2ywoqv",
        "version": 1552633315,
        "signature": "6de4fe1214ce80a0b45a0d46e0e30691e27d2a63",
        "width": 996,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T07:01:55Z",
        "tags": [],
        "bytes": 859623,
        "type": "upload",
        "etag": "43c22ea8b3c37b81c29c40bff7a7fd4c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552633315/avalanche2019/x0od8kuj0resww2ywoqv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552633315/avalanche2019/x0od8kuj0resww2ywoqv.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "circles",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n\nvar myTurtle;\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n}\n\nfunction draw() {\n    background(0);\n    frameRate(5);\n\n\n    strokeWeight(1);\n\n\n    myTurtle.penDown();\n\n    for (var i = 0; i < 400; i += 10) {\n        stroke(random(105,255), random(130), random(200,250), 80);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(50, 50);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(250, 250);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(450, 450);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(50, 450);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n        myTurtle.penUp();\n        myTurtle.moveTo(450, 50);\n        myTurtle.penDown();\n        myTurtle.turnTo(random(10, 505));\n        drawCircle(myTurtle);\n\n    }\n\n    noLoop();\n}\n\n\n\nfunction drawCircle(t) {\n    fill(random(105,255), random(130), random(200,250), 80);\n    for (var i = 0; i < 360; i++) {\n        t.moveForward(1);\n        t.turnRight(1);\n    }\n}"
  },
  {
    "_id": "ARidT9vBxF3KzHtjS",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T01:13:43.401Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ffy98r63p2dwprwoedse",
        "version": 1550711631,
        "signature": "347be083128e9d7faf381d3349468219f86d169e",
        "width": 1594,
        "height": 1072,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T01:13:51Z",
        "tags": [],
        "bytes": 77508,
        "type": "upload",
        "etag": "36ace9eb4978b770967b620bf4ef952a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550711631/avalanche2019/ffy98r63p2dwprwoedse.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550711631/avalanche2019/ffy98r63p2dwprwoedse.png"
      },
      {
        "public_id": "avalanche2019/fv4ox6nv7gk9ylgtrl7w",
        "version": 1550711643,
        "signature": "1ddfded07facc1aa811d91d45bea1d804c978dc4",
        "width": 1728,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T01:14:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 4776503,
        "type": "upload",
        "etag": "b8976a2cbba76f821e5b261feaafd423",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550711643/avalanche2019/fv4ox6nv7gk9ylgtrl7w.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550711643/avalanche2019/fv4ox6nv7gk9ylgtrl7w.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "6105836",
          "dar": "8:5"
        },
        "frame_rate": 60,
        "bit_rate": 6113923,
        "duration": 6.25,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-21T04:37:16.754Z" }
      }
    ],
    "title": "",
    "description": "Using adobe after effects, the wiggly noise here gives another dimension to the flat circle",
    "inspiration_name": "Gradient Grain",
    "inspiration_url": "https://www.youtube.com/watch?v=GREgqcSKj4w&t=272s"
  },
  {
    "_id": "AWoGXCommy7BPxQBG",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T17:48:06.775Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/d55pe1fn7kv55v2xavc8",
        "version": 1555091348,
        "signature": "41ea36f34a813271c0003253eb0c9ce92a45c464",
        "width": 2868,
        "height": 1244,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-12T17:49:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 19580092,
        "type": "upload",
        "etag": "a342a1e7bb5e6b96dcb00d0ccc7bb0fa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555091348/avalanche2019/d55pe1fn7kv55v2xavc8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555091348/avalanche2019/d55pe1fn7kv55v2xavc8.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "17459402",
          "dar": "717:311"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 18059691,
        "duration": 8.6735,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T18:00:26.704Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T19:10:47.45Z" }
      }
    ],
    "title": "",
    "description": "Logging slot machine outcomes :)  \n_… Somehow lost the code, sorry!_"
  },
  {
    "_id": "AXMSkm4QDkfdYavsy",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-27T22:29:09.174Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fvqyic2flxae1aonvoup",
        "version": 1556404160,
        "signature": "d2e244a65e1fa1264a15eb27f094b853d4559c8d",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-27T22:29:20Z",
        "tags": [],
        "bytes": 872015,
        "type": "upload",
        "etag": "5e42195850b9b34599750d4841e5d244",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556404160/avalanche2019/fvqyic2flxae1aonvoup.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556404160/avalanche2019/fvqyic2flxae1aonvoup.png"
      },
      {
        "public_id": "avalanche2019/y9xf1sroed0ccbap2qil",
        "version": 1556404167,
        "signature": "aaa9772c1836428d09d72c5a491686db71d594b2",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-27T22:29:27Z",
        "tags": [],
        "bytes": 780387,
        "type": "upload",
        "etag": "ee53e4327c7d6d76c4a8bd75f5a09b62",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556404167/avalanche2019/y9xf1sroed0ccbap2qil.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556404167/avalanche2019/y9xf1sroed0ccbap2qil.png"
      },
      {
        "public_id": "avalanche2019/sxiktnl4lmnvve3bt2au",
        "version": 1556404170,
        "signature": "00817825a36805ffccea13a91de17f8d91a35525",
        "width": 946,
        "height": 985,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-27T22:29:30Z",
        "tags": [],
        "bytes": 466901,
        "type": "upload",
        "etag": "e2ebc30f3617f1e93a7190baf80679f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556404170/avalanche2019/sxiktnl4lmnvve3bt2au.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556404170/avalanche2019/sxiktnl4lmnvve3bt2au.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Built on the last version to create a more advanced version of Major Major 3D model. \nThe 3D look is more in line with the show theme. \nSpecial thanks: June Lee\n\nFaced some issues with 3D printing. \nThe line width was too low for it to be stable for a 3D printer, and the with a big size, the model cost was insanely high ($1000 for a model).\nSo, had to do away with the idea of 3D print. :/",
    "inspiration_name": "Major Major Perspective Model",
    "inspiration_url": "http://majormajor.parsons.edu/"
  },
  {
    "_id": "AYecb8KJdQwSyzATh",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:47:59.677Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ihqyyivwezzjkj2yuczj",
        "version": 1552074486,
        "signature": "97bd533a3968c7551d46945d7859bb19470f6956",
        "width": 996,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:48:06Z",
        "tags": [],
        "bytes": 1230737,
        "type": "upload",
        "etag": "529dbd51561156f12c1f9f2c58ebeffc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552074486/avalanche2019/ihqyyivwezzjkj2yuczj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552074486/avalanche2019/ihqyyivwezzjkj2yuczj.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Modified Lung 2-nd edition.",
    "code": "var testImage;\n\nfunction preload() {\n    testImage = loadImage(\"lung_5.png\");\n    noLoop();\n}\n\nfunction setup() {\n    // create a place to draw\n    createCanvas(500, 500);\n\n    // load up the pixel[] array so we can read colors out of it later\n    testImage.loadPixels();\n}\n\n\nfunction draw() {\n    // clear the background\n    background(255);\n\n    // set drawing styles\n    stroke(255, 0, 0);\n    //fill(255, 255, 255);\n    stroke(0, 0, 0, 20);\n\n    var start = millis();\n\n    // loop over every x,y pixel coordinate in the image\n    for (x = 0; x < 500; x++) {\n        for (y = 0; y < 500; y++) {\n\n            // slow\n            // this is _really_ slow, it might crash your browser\n            // var pixelRed = red(testImage.get(x, y));\n\n            // quick\n            var pixelRed = getQuick(testImage, x, y)[0];\n\n\n            // pick a random value and compare it pixelRed\n            // for example:\n            // if pixelRed is 0, we'll never draw\n            // if pixelRed is 255, we'll always draw\n            // if pixelRed is 127, we'll draw 50% of the time\n            if (random(255) < pixelRed) {\n                drawGrassBlade(x, y);\n            }\n        }\n    }\n\n    var end = millis();\n\n    console.log(`took ${floor(end - start)} ms`);\n\n    noLoop();\n}\n\nfunction drawGrassBlade(x, y) {\n\n    var bladeHeight = min(\n        random(1, 10), random(1, 10), random(1, 10),\n        random(1, 10), random(1, 10), random(1, 10)\n    );\n\n    var bladeLean = random(-0.1, 0.1);\n    bladeLean *= bladeHeight;\n\n    line(x, y, x + bladeLean, y - bladeHeight);\n\n}\n\n\n// find the RGBA values of the pixel at x, y in the img.pixels array\n// see: http://p5js.org/reference/#/p5/pixels[]\n// we don't need to worry about screen pixel density here, because we are not reading from the screen\n\nfunction getQuick(img, x, y) {\n\n    var i = (y * img.width + x) * 4;\n    return [\n        testImage.pixels[i],\n        testImage.pixels[i + 1],\n        testImage.pixels[i + 2],\n        testImage.pixels[i + 3],\n    ];\n}"
  },
  {
    "_id": "AfHNHqbxKJ8s8Cuod",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T07:07:48.47Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vjpgvl5daivpach8qbgj",
        "version": 1550214473,
        "signature": "7507f29c06d55116c20f4332f828f4a188da1b4c",
        "width": 1392,
        "height": 784,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T07:07:53Z",
        "tags": [],
        "bytes": 496169,
        "type": "upload",
        "etag": "1b097efecbcac4fd437bdb1bae3dbbf6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550214473/avalanche2019/vjpgvl5daivpach8qbgj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550214473/avalanche2019/vjpgvl5daivpach8qbgj.png"
      },
      {
        "public_id": "avalanche2019/zl9wnstvd1brzkti71c1",
        "version": 1550218730,
        "signature": "053d50ad286d1e6912575a1933ffa8f8bb7950a8",
        "width": 640,
        "height": 400,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T08:18:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 10933887,
        "type": "upload",
        "etag": "b6d189530878b2445f76355c114e5db8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550218730/avalanche2019/zl9wnstvd1brzkti71c1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550218730/avalanche2019/zl9wnstvd1brzkti71c1.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "246426",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4131332",
          "dar": "8:5"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4384516,
        "duration": 19.95,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Audio as Parameter\nhttps://editor.p5js.org/tinsleyfok/\nsketches/Cj3A2kM0g",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons//p5.sound.min.js\n\n//only work locally\nvar mic, fft;\n\nfunction setup() {\n   createCanvas(710,400);\n   noFill();\n  stroke(255);\n  strokeWeight(2);\n   mic = new p5.AudioIn();\n   mic.start();\n   fft = new p5.FFT();\n   fft.setInput(mic);\n   createP('Wave');\n  wave_slider = createSlider(50, 300, 300);\n \n}\n\nfunction draw() {\n   background(0);\nvar wave = wave_slider.value();\n   var spectrum = fft.analyze();\n      stroke(202,20,13);\n   beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 200, 0) );\n   } \n   endShape();\n  \n    stroke(10,20,200);\n   beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 210, 0) );\n   } \n   endShape();\n  \n     stroke(10,200,20);\n   beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 220, 0) );\n   } \n   endShape();\n  stroke(255);\n     beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 230, 0) );\n   } \n   endShape();\n      stroke(202,20,13);\n     beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 100, 0) );\n   } \n   endShape();\n  \n    stroke(10,20,200);\n   beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 110, 0) );\n   } \n   endShape();\n  \n     stroke(10,200,20);\n   beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 120, 0) );\n   } \n   endShape();\n  stroke(255);\n     beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 130, 0) );\n   } \n   endShape();\n      stroke(202,20,13);\n      beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 300, 0) );\n   } \n   endShape();\n  \n    stroke(10,20,200);\n   beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 310, 0) );\n   } \n   endShape();\n  \n     stroke(10,200,20);\n   beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 320, 0) );\n   } \n   endShape();\n  stroke(255);\n     beginShape();\n   for (i = 0; i<spectrum.length; i++) {\n    vertex(i, map(spectrum[i], 0, wave, 330, 0) );\n   } \n   endShape();\n\n}"
  },
  {
    "_id": "AikF7hvbzAZxFf2o6",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:47:49.516Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Started to try and make a low end, low-fi Ryoji Ikeda inspired piece… \n*the bass line is probably too low for laptop speakers*",
    "inspiration_name": "Ryoji Ikeda",
    "inspiration_url": "https://youtu.be/iD1NeW7NsUY?t=80",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nvar synth = new Tone.MonoSynth(\n  {\n    \"oscillator\": {\n      \"type\"  : \"sine\"\n    },\n    \"volume\": 0\n  }\n).toMaster()\n\n// create a loop\nvar loop = new Tone.Loop(function(time){\n\tsynth.triggerAttackRelease(\"C2\", Tone.Time(\"8n\") - 0.25, time)\n}, \"8n\")\n\nloop.start(0)\nloop.probability = 0.7\n\nvar loop2 = new Tone.Loop(function(time){\n\tsynth.triggerAttackRelease(\"D2\", Tone.Time(\"8n\") - 0.25, time)\n}, \"8n\")\n\nvar synth2 = new Tone.Synth(\n  {\n    \"oscillator\": {\n      \"type\"  : \"sine\"\n    },\n    \"envelope\"  : {\n      \"attack\"  : 0.01 ,\n      \"decay\"  : 0.03 ,\n      \"sustain\"  : 0.1 ,\n      \"release\"  : 0.1\n    },\n    \"volume\": -16\n  }\n)\n\nvar delay = new Tone.FeedbackDelay(0.8);\nvar reverb = new Tone.JCReverb(0.8).connect(Tone.Master);\n\nsynth2.chain(delay, reverb);\n\n\nvar loop3 = new Tone.Loop(function(time){\n\tsynth2.triggerAttackRelease(\"C8\", \"16n\", time)\n}, \"16n\")\n\nloop3.start(0)\nloop3.probability = 0.01\n\nvar trigger = new Tone.Sequence(function(time, note){\n  console.log(\"trigger\");\n}, [\"rest\"])\n\ntrigger.start(0)\ntrigger.probability = 0.1\n\nvar snare = new Tone.NoiseSynth({\n  \"volume\" : -8,\n  \"envelope\" : {\n    \"attack\" : 0.001,\n    \"decay\" : 0.05,\n    \"sustain\" : 0\n  },\n  \"filterEnvelope\" : {\n    \"attack\" : 0.01,\n    \"decay\" : 0.6,\n    \"sustain\" : 0,\n    \"release\" : 0\n  }\n}).toMaster();\n\nvar snarePart = new Tone.Loop(function(time){\n  snare.triggerAttack(time);\n}, \"2n\").start(\"0\");\n\nsnarePart.probability = 0.5\n\nvar synth3 = new Tone.Synth(\n  {\n    \"oscillator\": {\n      \"type\"  : \"sine\"\n    },\n    \"volume\": 0\n  }\n).toMaster()\n\nvar loop4 = new Tone.Loop(function(time){\n\tsynth3.triggerAttackRelease(\"G0\", Tone.Time(\"16n\") - 0.075, time)\n}, \"16n\")\n\nloop4.start(0)\nloop4.probability = 0.2\n\n\nvar synth4 = new Tone.Synth(\n  {\n    \"oscillator\": {\n      \"type\"  : \"sine\"\n    },\n    \"volume\": -9\n  }\n).toMaster()\n\nvar loop5 = new Tone.Loop(function(time){\n\tsynth4.triggerAttackRelease(\"E1\", Tone.Time(\"32n\") - 0.075, time)\n}, \"32n\")\n\nloop5.start(0)\nloop5.probability = 0.01\n\n//set the transport \nTone.Transport.bpm.value = 118;\n\nwindow.onmousedown = () => {\n  // Play the melody!\n\n  Tone.Transport.toggle()\n};"
  },
  {
    "_id": "AmHPh8zMQ7AxSkKaK",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T22:44:02.949Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yi36eenobozsojo3jf1v",
        "version": 1548974646,
        "signature": "4de220bde5028caf6330592b8eeb6d703bbd36b6",
        "width": 3300,
        "height": 2550,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T22:44:06Z",
        "tags": [],
        "bytes": 1746911,
        "type": "upload",
        "etag": "f9da932c5ebcc648415fb1e34fc7bf34",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548974646/avalanche2019/yi36eenobozsojo3jf1v.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548974646/avalanche2019/yi36eenobozsojo3jf1v.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I want to take strokes and radicals of the original Chinese characters apart, then put them together to produce one character which contains the meaning of the original all characters combined. Being inspired by this idea, I create my tiles using strokes and radicals of Chinese characters, and produced my pattern as one character.",
    "inspiration_name": "Typography"
  },
  {
    "_id": "Ana74XBMpHz2nCgis",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-21T11:14:45.799Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dra9lipzj321yn1mgt3a",
        "version": 1553167882,
        "signature": "3d2b6fc35cbbce47c4e8275d907b6db78134d874",
        "width": 1020,
        "height": 1234,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-21T11:31:22Z",
        "tags": [],
        "bytes": 262091,
        "type": "upload",
        "etag": "db33a7829f7bf21e25ee2f25f77869df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553167882/avalanche2019/dra9lipzj321yn1mgt3a.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553167882/avalanche2019/dra9lipzj321yn1mgt3a.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Getting set up with paper.js and getting some sketching momentum back. Played around with the class code Boolean Example.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar center = new Point(250, 250);\n\n// create the red, rotated square\nvar rectangle1 = new Rectangle(new Point(100, 300), new Size(180, 180));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(45);\n// path1.fullySelected = true;\npath1.smooth();\n\n// create the red, rotated square\nvar rectangle2 = new Rectangle(new Point(70, 80), new Size(182, 182));\nvar path2 = new Path.Rectangle(rectangle2);\npath2.strokeColor = 'blue';\npath2.rotate(20);\n// path2.fullySelected = true;\npath2.smooth();\n\n\n// create the green rectangle\nvar rectangle3 = new Rectangle(new Point(206, 90), new Size(185, 185));\nvar path3 = new Path.Rectangle(rectangle3);\npath3.strokeColor = 'green';\n// path3.fullySelected = true;\npath3.smooth();\n\n// create the purple rectangle\nvar rectangle4 = new Rectangle(new Point(280, 410), new Size(220, 220));\nvar path4 = new Path.Rectangle(rectangle4);\npath4.strokeColor = 'purple';\n// path3.fullySelected = true;\npath4.smooth();\n\n// cut the green rectangle from the red square\n// style the result\nvar comboPath = path1.unite(path3);\nvar comboPath2 = comboPath.unite(path2);\nvar comboPath3 = comboPath2.unite(path4);\n\ncomboPath3.style = {\n    strokeColor: new Color(0, 0, .3, 1),\n    fillColor: new Color(0, 0, .3, 1),\n    strokeWidth: 0,\n    shadowColor: new Color(0, 0, .3, .5),\n    shadowBlur: 10,\n    shadowOffset: new Point(5, 5),\n}\n\npath1.remove();\npath2.remove();\npath3.remove();\npath4.remove();\n\ncomboPath.remove();\n// comboPath2.smooth();\ncomboPath2.remove();\ncomboPath3.smooth();\n// comboPath.remove();"
  },
  {
    "_id": "AxjfiNiST2Mwa7w4r",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T18:25:09.061Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ita2vfz7cywkrvanl21n",
        "version": 1552602739,
        "signature": "f0ad5944774f9e16f5e1bf5f7fe0fc94c9f68004",
        "width": 1922,
        "height": 1472,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T22:32:19Z",
        "tags": [],
        "bytes": 832292,
        "type": "upload",
        "etag": "dff13cfb1765d4acbd4c07e61a4effbd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552602739/avalanche2019/ita2vfz7cywkrvanl21n.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552602739/avalanche2019/ita2vfz7cywkrvanl21n.png"
      },
      {
        "public_id": "avalanche2019/atgocycn6hxradefxof4",
        "version": 1552602852,
        "signature": "145b3982b02a7a55d3c1030d7fa9ef63747111e6",
        "width": 1328,
        "height": 1468,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T22:34:12Z",
        "tags": [],
        "bytes": 1944687,
        "type": "upload",
        "etag": "b086d3f911be8f14e0154f52c1ad61af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552602852/avalanche2019/atgocycn6hxradefxof4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552602852/avalanche2019/atgocycn6hxradefxof4.png"
      },
      {
        "public_id": "avalanche2019/gxhunm8jl0cx2iacokeh",
        "version": 1552602863,
        "signature": "ad9c5af86af8fe58620fbf4adc3bb625ad17568d",
        "width": 1968,
        "height": 1444,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T22:34:23Z",
        "tags": [],
        "bytes": 2615437,
        "type": "upload",
        "etag": "0cd2cc7d5c587fb8394db00f9ac01e5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552602863/avalanche2019/gxhunm8jl0cx2iacokeh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552602863/avalanche2019/gxhunm8jl0cx2iacokeh.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Excerpts from more l-system play. These three images are from the same code as each other, with very slight differences.\n\nWill upload parameterized code in a bit."
  },
  {
    "_id": "B4Bv4gA8LEcvYDbnH",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T05:06:11.644Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/q2cw7nhsbuhem9r3zwgr",
        "version": 1554440777,
        "signature": "14a29e87fcff7ce7ed03e57492443ec1ec2cd8f2",
        "width": 1388,
        "height": 1514,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T05:06:17Z",
        "tags": [],
        "bytes": 159780,
        "type": "upload",
        "etag": "2d53db3940796df442d32ecdb3691393",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554440777/avalanche2019/q2cw7nhsbuhem9r3zwgr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554440777/avalanche2019/q2cw7nhsbuhem9r3zwgr.png"
      },
      {
        "public_id": "avalanche2019/avbu3numdvhjnz5cgabx",
        "version": 1554441128,
        "signature": "1d37f8ef2388a5d66ee413ea389143fdd13aa9ec",
        "width": 1340,
        "height": 1272,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T05:12:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 20552021,
        "type": "upload",
        "etag": "9145a40ed69ee2b596cb2a332443fa2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554441128/avalanche2019/avbu3numdvhjnz5cgabx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554441128/avalanche2019/avbu3numdvhjnz5cgabx.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "6428333",
          "dar": "335:318"
        },
        "frame_rate": 60,
        "bit_rate": 6436754,
        "duration": 25.543333,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-05T14:28:35.324Z" }
      }
    ],
    "title": "",
    "description": "Determined to see this idea through, though it's taking longer than expected.\n\nToday's iteration adds more control over where the hand can draw, finishes our familiar Sierpinski triangle, adds ability to pick pen up off the page, and adds some text.\n\nTomorrow's final version will tinker with the final 10%: audio / visual aesthetics and pacing."
  },
  {
    "_id": "BEm2eWyRFb6kKEjQM",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-05-10T17:45:08.278Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mibuhqogvwkirlueebjb",
        "version": 1557510457,
        "signature": "3133cbf419ccdf0bf61c64aa5e2ff743446c9e6d",
        "width": 640,
        "height": 400,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T17:47:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 4044422,
        "type": "upload",
        "etag": "653d455757fceb2f57f967f261ce2883",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557510457/avalanche2019/mibuhqogvwkirlueebjb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557510457/avalanche2019/mibuhqogvwkirlueebjb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "1683778",
          "dar": "8:5"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 1691542,
        "duration": 19.127733,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "work in progress.... cut version to fit here",
    "inspiration_name": "SP1"
  },
  {
    "_id": "BdoAPCyzakcMt4M7i",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T19:13:19.696Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hgwrrwtnozws1vomutsp",
        "version": 1556824413,
        "signature": "9647d5f7b10734e15eb4021faefa56edd809f241",
        "width": 1908,
        "height": 1078,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:13:33Z",
        "tags": [],
        "bytes": 1246989,
        "type": "upload",
        "etag": "5fc238229719bdbec8e6447285e63126",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556824413/avalanche2019/hgwrrwtnozws1vomutsp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556824413/avalanche2019/hgwrrwtnozws1vomutsp.png"
      },
      {
        "public_id": "avalanche2019/uuucamhsewbt47holcjx",
        "version": 1556824423,
        "signature": "1bbb805f3a213d0370b2493fb510d90190c6e92b",
        "width": 1496,
        "height": 1314,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:13:43Z",
        "tags": [],
        "bytes": 622167,
        "type": "upload",
        "etag": "a5969246574540dc89094e4e6626c738",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556824423/avalanche2019/uuucamhsewbt47holcjx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556824423/avalanche2019/uuucamhsewbt47holcjx.png"
      },
      {
        "public_id": "avalanche2019/xcll3qub06x59njwhc0r",
        "version": 1556824428,
        "signature": "dceae41eda96d833d75ea6e1270665fbdb3ae2b7",
        "width": 1932,
        "height": 1074,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:13:48Z",
        "tags": [],
        "bytes": 1264900,
        "type": "upload",
        "etag": "41d33177b668fc5c5b02fa7e3a371689",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556824428/avalanche2019/xcll3qub06x59njwhc0r.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556824428/avalanche2019/xcll3qub06x59njwhc0r.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "More maya 3D room modeling"
  },
  {
    "_id": "BfBiCsLoddJjFCc4G",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T04:16:22.483Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ecbljhnni6vi3g1pwcbk",
        "version": 1552018707,
        "signature": "2062ac3d5bb30323f46630543bb6f21a37f5b367",
        "width": 1664,
        "height": 874,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T04:18:27Z",
        "tags": [],
        "bytes": 788605,
        "type": "upload",
        "etag": "a0d2cbddfdaee9cd1c06f7c67e8750b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552018707/avalanche2019/ecbljhnni6vi3g1pwcbk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552018707/avalanche2019/ecbljhnni6vi3g1pwcbk.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T16:06:23.382Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:11:49.026Z" }
      }
    ],
    "title": "",
    "description": "ex machina",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nvar img;\n\nfunction preload() {\n\t// 500 x 500 px\n\timg = loadImage(\"em.png\");\n}\n\nfunction setup() {\n\tcreateCanvas(570, 700);\n\tbackground(0);\n}\n\nfunction draw() {\n\tbackground(30,20,20);\n\n\t\n\timg.loadPixels();\n\n\n\tfor (var y = 0; y < img.height; y += 10) {\n\t\tfor (var x = 0; x < img.width; x += 10) {\n\n\t\t\t\n      var pixel = img.pixels[(y*img.width+x)*4];\n\t\t\t\n\t\t\tfill(pixel);\n\t\t\tnoStroke();\n\t\t\trectMode(CENTER);\n\t\t\t\n\t\t\tif(pixel> (mouseX+mouseY)/5) {\n        fill(20,300,10);\n\t\t\t\trect(x,y,5,5);}\n\t\t\t\telse{\n\t\t\t\tellipse (x,y,5,5);}\n\t\t\t\n\n\t\n\t\t}\n\t}\n}"
  },
  {
    "_id": "Bjh4TWukFWYS4FshF",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-17T01:46:39.046Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ufmknvhxb7gug6qxt0yy",
        "version": 1555465737,
        "signature": "52e846770f19b5c0e5d9b08a71956be1f3305f03",
        "width": 598,
        "height": 479,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-17T01:48:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 2073501,
        "type": "upload",
        "etag": "eb2b793f3e0899c92a31409efc3a6a1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555465737/avalanche2019/ufmknvhxb7gug6qxt0yy.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555465737/avalanche2019/ufmknvhxb7gug6qxt0yy.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "230192",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "519610",
          "dar": "598:479"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 862461,
        "duration": 19.233333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "First pass at a drum machine with sounds programmed to the up, down, left and right keys. Go ahead, Kanye, drop some beats.",
    "code": "let bass, fx, hat, clap;\nlet f1 = 255;\nlet f2 = 255;\nlet f3 = 255;\nlet f4 = 255;\n\nfunction preload() {\n  bass = loadSound(\"BD_2.wav\");\n  hat = loadSound('OHH.wav');\n  fx = loadSound('fifth.wav');\n  clap = loadSound('CP.wav');\n}\n\nfunction setup() {\n  createCanvas(600, 480);\n}\n\nfunction draw() {\n  background(246, 40, 63);\n  noStroke(0);\n  \n  // up bass drum\n  fill(255, f1, f1);\n  ellipse(300, 110, 200, 200);\n  \n  //left chord\n  fill(255, f3, f3);\n  ellipse(140, 240, 200, 200);\n\n  // right clap\n  fill(255, f4, f4);\n  ellipse(460, 240, 200, 200);\n  \n    //down high hat\n  fill(255, f2, f2);\n  ellipse(300, 370, 200, 200);\n\n  //text labels\n  fill(246, 40, 63);\n  textAlign(CENTER);\n  textSize(20);\n  text(\"UP (Bass drum)\", 300, 120);\n  text(\"LEFT (FX)\", 140, 250);\n  text(\"RIGHT (Clap)\", 460, 250);\n  text(\"DOWN (High Hat)\", 300, 380);\n\n\n}\n\n\nfunction keyPressed() {\n  if (keyCode == UP_ARROW) {\n    bass.play();\n    f1 = 0;\n  }\n  if (keyCode == DOWN_ARROW) {\n    hat.play();\n    f2 = 0;\n  }\n  if (keyCode == LEFT_ARROW) {\n    fx.play();\n    f3 = 0;\n  }\n  if (keyCode == RIGHT_ARROW) {\n    clap.play();\n    f4 = 0;\n  }\n}\n\nfunction keyReleased() {\n  f1 = 255;\n  f2 = 255;\n  f3 = 255;\n  f4 = 255;\n}"
  },
  {
    "_id": "Bk6eLrzuxFhX8kgvC",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-16T17:55:54.993Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nnatitfs2vnsl5chhmqk",
        "version": 1555439124,
        "signature": "cc8761c7f7357e3b0405fff2ecdec8bd5b8757c8",
        "width": 1232,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-16T18:25:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 5602292,
        "type": "upload",
        "etag": "4de105da79318b55795bbbf2aa3462ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555439124/avalanche2019/nnatitfs2vnsl5chhmqk.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555439124/avalanche2019/nnatitfs2vnsl5chhmqk.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "246217",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "9048657",
          "dar": "77:74"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9304844,
        "duration": 4.816667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "started with abstract birds",
    "code": "var soundFile, reverb;\nfunction preload() {\n  img = loadImage(\"large revolving circles.png\");\n  soundFile = loadSound('bird1.wav');\n}\n\n\nfunction setup() {\n  createCanvas(784, 558);\n  reverb = new p5.Reverb();\n  soundFile.disconnect(); // so we'll only hear reverb...\n\n  // connect soundFile to reverb, process w/\n  // 3 second reverbTime, decayRate of 2%\n  reverb.process(soundFile, 1, 8);\n  soundFile.play();\n}\n\nfunction draw() {\n  image(img, 0, 0)\n  background(255);\n    imageMode(CENTER);\n    image(img, 200+sin(frameCount*0.01)*800,\n        5+cos(frameCount*0.035)*100);\n      image(img, 250+sin(frameCount*0.02)*800,\n        3+cos(frameCount*0.036)*300);\n      image(img, 350+sin(frameCount*0.025)*800,\n        2+cos(frameCount*0.033)*600);\n      image(img, 350+sin(frameCount*0.025)*800,\n        1+cos(frameCount*0.030)*750);\n      image(img, 350+sin(frameCount*0.025)*800,\n        .2+cos(frameCount*0.033)*60);\n      image(img, 350+sin(frameCount*0.025)*800,\n        .5+cos(frameCount*0.033)*700);\n  \n}"
  },
  {
    "_id": "BoDA5BSYEGfqigHkJ",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T20:37:24.563Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/w5pn7b3cogr3uyqgl2yj",
        "version": 1550867881,
        "signature": "83f6e3cdf3eb3c359e88b5d2eacbafd381e7cb4f",
        "width": 644,
        "height": 678,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T20:38:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 1694395,
        "type": "upload",
        "etag": "a2da73c38043f70a43473e0d68d025a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550867881/avalanche2019/w5pn7b3cogr3uyqgl2yj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550867881/avalanche2019/w5pn7b3cogr3uyqgl2yj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2307668",
          "dar": "322:339"
        },
        "frame_rate": 15,
        "bit_rate": 2310538,
        "duration": 5.866667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A cooler way to visualize current wind in new york (a remix on my previous sketch, still with real data)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nconst weatherAPI = {\n  key: \"058e5a582368a449e5156441d3403646\",\n  location: {\n    newYork: {\n      zip: 11238,\n      hue: 10\n    },\n    chicago: {\n      zip: 60614,\n      hue: 40\n    },\n    losAngeles: {\n      zip: 90011,\n      hue: 80\n    }\n  }\n};\n\nlet inc = 0.1;\nlet scl = 10;\nlet cols, rows;\nlet zoff = 0;\nlet windMove = 0;\nlet hue = 50;\n\nfunction setup() {\n  colorMode(HSB, 100);\n\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?zip=${\n      weatherAPI.location.newYork.zip\n    },us&units=imperial&appid=${weatherAPI.key}`\n  )\n    .then(res => {\n      return res.json();\n    })\n    .then(data => {\n      console.log(data);\n\n      // use to update zoff noise speed\n      windMove = data.wind.speed * 0.0005;\n\n      hue = weatherAPI.location.losAngeles.hue;\n\n      // data paragraph for current weater\n      createP(`<b>${data.name}:</b> <b>${data.wind.speed}</b> mph wind\n  `);\n    })\n    .then(() => {\n      createCanvas(300, 300);\n      cols = floor(width / scl);\n      rows = floor(height / scl);\n    })\n    .catch(err => {\n      console.log(err);\n      createP(`Something went wrong, try entering a zip code again!`);\n    });\n}\nfunction draw() {\n  background(10);\n\n  // code from coding train 2d noise demo\n  // https://www.youtube.com/watch?v=BjoM9oKOAKY&list=PLRqwX-V7Uu6bgPNQAdxQZpJuJCjeOr7VD&index=6\n  let yoff = 0;\n  for (y = 0; y < rows; y++) {\n    var xoff = 0;\n    for (x = 0; x < cols; x++) {\n      let angle = noise(xoff, yoff, zoff) * TWO_PI;\n      let v = p5.Vector.fromAngle(angle);\n      xoff += inc;\n      stroke(hue, 60, 80);\n      push();\n      translate(x * scl, y * scl);\n      rotate(v.heading());\n      line(0, 0, scl, 0);\n      pop();\n\n      push();\n      translate(x * scl, y * scl);\n      rotate(v.heading());\n      line(width, height, scl, 0);\n      pop();\n    }\n    yoff += inc;\n    zoff += windMove;\n  }\n}",
    "inspiration_name": "Vector Coding Train",
    "inspiration_url": "https://www.youtube.com/watch?v=BjoM9oKOAKY&list=PLRqwX-V7Uu6bgPNQAdxQZpJuJCjeOr7VD&index=6"
  },
  {
    "_id": "BtkX7aCYcCxBB6FTN",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T20:51:19.597Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bzp4cykeaxqxv8xzm1n9",
        "version": 1550868744,
        "signature": "1aaa708cd0a3a122d8fb95bc64a269e3410b6f68",
        "width": 484,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T20:52:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 20505047,
        "type": "upload",
        "etag": "536402373460f0aa8127a92da6c6ed63",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550868744/avalanche2019/bzp4cykeaxqxv8xzm1n9.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550868744/avalanche2019/bzp4cykeaxqxv8xzm1n9.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4739070",
          "dar": "121:120"
        },
        "frame_rate": 60,
        "bit_rate": 4745623,
        "duration": 34.566667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "BuwGSTaScDiKqBA39",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:30:32.273Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/decfgyix6wf4xxjnonwl",
        "version": 1552062754,
        "signature": "2fdeaeecf1ff8cbae516e4dd1ab8075ebacbb6f1",
        "width": 1200,
        "height": 1192,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T16:32:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 4613411,
        "type": "upload",
        "etag": "b2b167079bca542408270b11aa953255",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552062754/avalanche2019/decfgyix6wf4xxjnonwl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552062754/avalanche2019/decfgyix6wf4xxjnonwl.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2347327",
          "dar": "150:149"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2363326,
        "duration": 15.616667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Took Ray's gradient code and added some noise effects to it.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/p5.min.js\n\nvar noiseR;\nvar noiseG;\nvar noiseB;\n\n\nfunction setup() {\n  createCanvas(600, 600); \n//noprotect\t\n\n}  \n  function draw(){\n    var time = millis();\n        for (var i = 0; i < width; i++) {\n    for (var j = 0; j < height; j++) {\n      var r = map(i, 0, width, 0, 255);\n      var g = map(j, 0, height, 0, 255);\n      var b = map(i, 0, width, 0 ,255);\n      \n      noiseR = noise((r * 0.01) + time) * 255;\n      noiseG = noise((g * 0.01) + (time + 10)) * 255;\n      noiseB = noise((b * 0.01) + (time + 20)) * 255;\n      \n      \n      stroke(noiseR, noiseG, noiseB);\n      point(i, j);  \n    }\n  }\n  }"
  },
  {
    "_id": "BvFxQWSKDu2xFQTMN",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T19:35:34.783Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dlgxi6cvsgdgrl3tk10k",
        "version": 1553888149,
        "signature": "eaf06a4f2d9992d21d74d1208b4e4b92a25d0850",
        "width": 922,
        "height": 1312,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T19:35:49Z",
        "tags": [],
        "bytes": 141227,
        "type": "upload",
        "etag": "c95d41e6eff06e33b468905f5386f907",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888149/avalanche2019/dlgxi6cvsgdgrl3tk10k.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888149/avalanche2019/dlgxi6cvsgdgrl3tk10k.png"
      },
      {
        "public_id": "avalanche2019/zhvidnxq05pclmoa8m9h",
        "version": 1553888198,
        "signature": "c89b8647bf809b6788efc86321a556950d790206",
        "width": 914,
        "height": 1308,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T19:36:38Z",
        "tags": [],
        "bytes": 108050,
        "type": "upload",
        "etag": "212dc6ef8a246ea93fbd0a1dbb1b3ed2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888198/avalanche2019/zhvidnxq05pclmoa8m9h.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888198/avalanche2019/zhvidnxq05pclmoa8m9h.png"
      },
      {
        "public_id": "avalanche2019/g3oimhbakccunbgos2ia",
        "version": 1553888232,
        "signature": "a919d4fe911c2369ced11c897acfec576519eb88",
        "width": 924,
        "height": 1308,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T19:37:12Z",
        "tags": [],
        "bytes": 92572,
        "type": "upload",
        "etag": "2fd448f6f5fa83db227b397e6c55de65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888232/avalanche2019/g3oimhbakccunbgos2ia.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888232/avalanche2019/g3oimhbakccunbgos2ia.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Evolution of a James Turrell poster",
    "inspiration_url": "https://www.timeout.com/newyork/art/best-art-posters",
    "inspiration_name": "James Turrell exhibit photo"
  },
  {
    "_id": "Bvns5xEFcGjDHfmxk",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T23:32:21.442Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/v9m2f2u4yqimjmeenzu5",
        "version": 1556839965,
        "signature": "090dc58728f1ce2bf2639720b4d097d7e29545f0",
        "width": 1318,
        "height": 1394,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T23:32:45Z",
        "tags": [],
        "bytes": 142241,
        "type": "upload",
        "etag": "6df93c60c338ec47567055c4e71db8f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556839965/avalanche2019/v9m2f2u4yqimjmeenzu5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556839965/avalanche2019/v9m2f2u4yqimjmeenzu5.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T02:33:25.383Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T03:16:19.847Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-05-03T16:10:35.544Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:21:45.416Z" }
      }
    ],
    "title": "",
    "description": "castle challenge in openSCAD"
  },
  {
    "_id": "BxWC3nSRNY5KhQbaF",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:13:39.746Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rzwkgi7jsdfznv2mhrn7",
        "version": 1552072721,
        "signature": "ff4c7a22f4c60df5bd5ef58efd825e3bcda751ec",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:18:41Z",
        "tags": [],
        "bytes": 68228,
        "type": "upload",
        "etag": "ead1e273350c9d76ba6784e42ec75a25",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552072721/avalanche2019/rzwkgi7jsdfznv2mhrn7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552072721/avalanche2019/rzwkgi7jsdfznv2mhrn7.png"
      },
      {
        "public_id": "avalanche2019/c3vc0bpnlr1vqekyobps",
        "version": 1552072725,
        "signature": "5e67576f8a998a731d4babec08e811df56d046d1",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:18:45Z",
        "tags": [],
        "bytes": 111843,
        "type": "upload",
        "etag": "513af3f92686a5306c5ac82a6d214a9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552072725/avalanche2019/c3vc0bpnlr1vqekyobps.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552072725/avalanche2019/c3vc0bpnlr1vqekyobps.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "not exactly the ouroboros challenge, right image is the original and left is after processing.\n\nimg is from https://www.teepublic.com/long-sleeve-t-shirt/2351322-altered-carbon-ouroboros",
    "inspiration_name": "Floyd-Steinberg Dithering",
    "inspiration_url": "https://www.youtube.com/watch?v=0L2n8Tg2FwI"
  },
  {
    "_id": "BzuwGZJhoYWCxpi2q",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T13:58:26.29Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hxlewfbsxmwwi6zoouu4",
        "version": 1555682623,
        "signature": "189e555441a97e4a935ab0d5bd3a5181838b4eb2",
        "width": 1820,
        "height": 1428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T14:03:43Z",
        "tags": [],
        "bytes": 1353186,
        "type": "upload",
        "etag": "45ae78ab3b64495262ffce59f0fdd637",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555682623/avalanche2019/hxlewfbsxmwwi6zoouu4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555682623/avalanche2019/hxlewfbsxmwwi6zoouu4.png"
      },
      {
        "public_id": "avalanche2019/xcbtbkjo8hzgmyrb6bkb",
        "version": 1555682628,
        "signature": "0a7699cf3d3b819e19421ac7195d5267c087d622",
        "width": 640,
        "height": 388,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T14:03:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 8668368,
        "type": "upload",
        "etag": "2b4e5ccaf86254e8ea86a4ed5d1fbcff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555682628/avalanche2019/xcbtbkjo8hzgmyrb6bkb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555682628/avalanche2019/xcbtbkjo8hzgmyrb6bkb.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "245705",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4319181",
          "dar": "160:97"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4575342,
        "duration": 15.156667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T19:00:49.577Z" }
      }
    ],
    "title": "",
    "description": "Changed a little bit of the previous visualizer. Track by Nicola Cruz."
  },
  {
    "_id": "C4j3jfGyY7wCAmGQY",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T16:05:22.606Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/suhftl11kefwucdngmm9",
        "version": 1549901608,
        "signature": "e49b99746f21f30605cdf2ded348d6df020acaf0",
        "width": 800,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-11T16:13:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 18368096,
        "type": "upload",
        "etag": "d3a77a2967891f831377e171bc722c66",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549901608/avalanche2019/suhftl11kefwucdngmm9.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549901608/avalanche2019/suhftl11kefwucdngmm9.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "8519147",
          "dar": "10:9"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 8535029,
        "duration": 17.216667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/soyv7ydhxkknmmf9ddhe",
        "version": 1549901640,
        "signature": "94e5311a5230ab07b9fa6be9662547f441326684",
        "width": 724,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-11T16:14:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 14366457,
        "type": "upload",
        "etag": "a243b60b5e0b39363f011a7b027406f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549901640/avalanche2019/soyv7ydhxkknmmf9ddhe.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549901640/avalanche2019/soyv7ydhxkknmmf9ddhe.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7956071",
          "dar": "181:180"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7972137,
        "duration": 14.416667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T20:49:07.596Z" }
      }
    ],
    "title": "",
    "description": "Using pixel data from your webcam as parameters. You can change the R,G,B values of each pixel your webcam picks up. You can also turn those pixels into shapes and adjust their sizes. Unfortunately, I don't think this will run on the CompForm site but you can copy the code and run it yourself!",
    "inspiration_name": "Kelly Lougheed Medium Post",
    "inspiration_url": "https://codeburst.io/instagram-filters-with-javascript-p5-js-83f28c9f7fda",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nvar cam;\nvar radio;\n\nvar pixSize;\n\nvar redPix, greenPix, bluePix;\n\nfunction setup() {\n  createCanvas(720, 480);\n  cam = createCapture(VIDEO);\n  cam.size(400, 300);\n  cam.hide();\n  noStroke();\n\n  radio = createRadio();\n  radio.option('Circle');\n  radio.option('Square');\n  radio.option('Triangle');\n  radio.value('Square');\n\n  createP('Shape Size');\n  pixSize = createSlider(0, 25, 0);\n\n  createP('Red Value');\n  redPix = createSlider(0, 255, 0);\n\n  createP('Green Value');\n  greenPix = createSlider(0, 255, 0);\n\n  createP('Blue Value');\n  bluePix = createSlider(0, 255, 0);\n\n}\n\nfunction draw() {\nbackground(255);\n  cam.loadPixels();\n  var val = radio.value();\n  var shapeSize = pixSize.value();\n\n  var skip = 4 + shapeSize;\n  for (var x = 0; x < cam.width; x += skip) {\n    for (var y = 0; y < cam.height; y += skip) {\n      var index = ((y * cam.width) + x) * 4;\n\n      var red_pix = redPix.value();\n      var green_pix = greenPix.value();\n      var blue_pix = bluePix.value();\n\n\n      var redVal = cam.pixels[index] + red_pix;\n      var greenVal = cam.pixels[index + 1] + green_pix;\n      var blueVal = cam.pixels[index + 2] + blue_pix;\n\n      fill(redVal, greenVal, blueVal);\n      if (val === 'Triangle') {\n        triangle(x, y, x + 20, y, x + 10, y - 20);\n      } else if (val === 'Circle') {\n        ellipse(x, y, skip, skip);\n      } else {\n        rect(x, y, skip, skip);\n      }\n\n    }\n  }\n\n}"
  },
  {
    "_id": "C6sFWA843wKP4XoJ8",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-25T00:28:02.87Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-25T00:30:20.845Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-04-25T00:59:23.906Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T18:28:38.612Z" }
      }
    ],
    "title": "",
    "description": "morse code?",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nconst synth = new Tone.Synth({\n  oscillator: {\n    type: \"sine\"\n  },\n  envelope: {\n    attack: 0.15,\n    decay: 0.06,\n    sustain: 0.5,\n    release: 1\n  }\n});\n\n// const synth = new Tone.FMSynth().toMaster();\n\nconst reverb = new Tone.Reverb(1);\nTone.Transport.bpm.value = 200;\n\nsynth.connect(reverb);\nsynth.toMaster();\n\nconst cminor = [\"C4\", \"D4\", \"Eb4\", \"F4\", \"G4\", \"Ab4\", \"B4\"];\n\nconst notes = cminor;\n\nlet degree = 0;\n\nsynth.modulation = window.onmousedown = () => {\n  const triad = generateSong();\n  play(triad);\n};\n\nfunction generateSong() {\n  degree = randomInt(0, 20);\n\n  const a = generateTriad();\n  const b = generateTriad();\n  const c = generateTriad();\n  return [].concat(a, a, b, a, c, a, b, a, c);\n}\n\nfunction generateTriad() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n  while (timeLeft.toSeconds() > 0) {\n    const change = sample([0, 3, 5]);\n    degree = constrain(degree + change, 0, 6);\n    const note = notes[degree];\n\n    let length = Tone.Time(\"4n\");\n    if (Math.random() < 0.5) {\n      length = Tone.Time(\"8n\");\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n    timeLeft = Tone.Time(timeLeft - length);\n    m.push([note, length]);\n  }\n  return m;\n}\n\nfunction play(triad) {\n  let t = Tone.now();\n\n  for (const note of triad) {\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}"
  },
  {
    "_id": "CByCqNt8t7x787tis",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T06:55:11.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/urxidoe4kdk5etkycu5o",
        "version": 1550127318,
        "signature": "3181e10a17134e0d9675c74296c8ec51caeae4dd",
        "width": 844,
        "height": 838,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T06:55:18Z",
        "tags": [],
        "bytes": 1312180,
        "type": "upload",
        "etag": "58fc264af703fbf76736429c5f7f4fe1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550127318/avalanche2019/urxidoe4kdk5etkycu5o.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550127318/avalanche2019/urxidoe4kdk5etkycu5o.png"
      },
      {
        "public_id": "avalanche2019/xzyavatac3f8g8nhkexp",
        "version": 1550128019,
        "signature": "2431f5660a814d59d8b201d631ff1c8b523c8f6c",
        "width": 852,
        "height": 856,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-14T07:06:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 3090393,
        "type": "upload",
        "etag": "3923ccf4ab1b0ac288ec2ff7736664c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550128019/avalanche2019/xzyavatac3f8g8nhkexp.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550128019/avalanche2019/xzyavatac3f8g8nhkexp.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1582755",
          "dar": "213:214"
        },
        "frame_rate": 15,
        "bit_rate": 1584816,
        "duration": 15.6,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T14:50:52.364Z" }
      }
    ],
    "title": "",
    "description": "Search for any image! \n---\nUsing the public [Unsplash API](https://source.unsplash.com/) with `fetch` to return an image from keyword search",
    "inspiration_name": "Image loader p5",
    "inspiration_url": "https://p5js.org/reference/#/p5/loadImage",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet input, button;\n\nfunction setup() {\n  // create canvas\n  colorMode(HSB, 100);\n  createCanvas(400, 400, WEBGL);\n  background(70, 10, 99);\n\n  input = createInput().attribute(\"placeholder\", \" 🕵🏻‍♂️ Search for an image\");\n  input.position(20, 21);\n\n  button = createButton(\"Find It\");\n  button.position(input.x + input.width + 10, 22);\n  button.mousePressed(gen);\n}\n\nfunction gen() {\n  let query = input.value();\n  input.value(\"\");\n\n  fetch(`https://source.unsplash.com/600x600/?${query}`)\n    .then(response => {\n      return response;\n    })\n    .then(data => {\n      loadImage(data.url, img => {\n        texture(img);\n        rect(-200, -200, 400, 400);\n      });\n      // console.log(data.url);\n    })\n    .catch(err => {\n      console.log(\"Error happened during fetching!\", err);\n    });\n}"
  },
  {
    "_id": "CE8BihXo9vzonXEiL",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T22:37:43.694Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l9kb64ckahpxgoswo7lh",
        "version": 1548974548,
        "signature": "22a496e7f74f6076dee0a39860ce8fd8c63b8d18",
        "width": 4800,
        "height": 2700,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T22:42:28Z",
        "tags": [],
        "bytes": 6366758,
        "type": "upload",
        "etag": "6eab7c20b126606c2f0f204749c4e216",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548974548/avalanche2019/l9kb64ckahpxgoswo7lh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548974548/avalanche2019/l9kb64ckahpxgoswo7lh.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:42.39Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:45.236Z" }
      }
    ],
    "title": "",
    "description": "Tiles inspired by Kaleidoscope effect. All original photo shot by me (Icelandic glaciers.)",
    "inspiration_name": "Kaleidoscope effect",
    "inspiration_url": "http://funny.pho.to/kaleidoscope-photo-effect/#"
  },
  {
    "_id": "CE9qdwL7qQCfRCq6m",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "created_at": { "$date": "2019-02-01T03:53:56.051Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jvydxsjpju4rpivbxvac",
        "version": 1548993267,
        "signature": "9b9d8b8257b6e46fe8e7f5ca7e3567070247c8ee",
        "width": 1188,
        "height": 1188,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T03:54:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 13853232,
        "type": "upload",
        "etag": "ef2e0ec5d031194115e20d136833f62c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548993267/avalanche2019/jvydxsjpju4rpivbxvac.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548993267/avalanche2019/jvydxsjpju4rpivbxvac.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "16406979",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 16428787,
        "duration": 6.745833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:02:21.473Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:07.759Z" }
      }
    ],
    "lesson": "Tiles",
    "title": ""
  },
  {
    "_id": "CKi4JnJFcMAeudZzA",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T15:32:00.608Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vrwgb4smqjjon7idmpyl",
        "version": 1554478326,
        "signature": "9589adfa353bcfa230c8d7d72117dc38584a8754",
        "width": 936,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T15:32:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 114723,
        "type": "upload",
        "etag": "5fda39f295f79c6d599f831f5657d045",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554478326/avalanche2019/vrwgb4smqjjon7idmpyl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554478326/avalanche2019/vrwgb4smqjjon7idmpyl.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "213190",
          "dar": "13:10"
        },
        "frame_rate": 60,
        "bit_rate": 222313,
        "duration": 4.128333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Animating an old sketch. Not quite working yet."
  },
  {
    "_id": "CLMkQyNvTd4sj7bdz",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T19:21:31.305Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lgq4wiccmgphzssbfqmt",
        "version": 1550863903,
        "signature": "f11b6e4f21116b04bc1de0cf06611d51925e40f1",
        "width": 1068,
        "height": 1428,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T19:31:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 19511715,
        "type": "upload",
        "etag": "3e12384c4b1fa8c6a0133c60cec1fe26",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550863903/avalanche2019/lgq4wiccmgphzssbfqmt.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550863903/avalanche2019/lgq4wiccmgphzssbfqmt.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "16806666",
          "dar": "89:119"
        },
        "frame_rate": 60,
        "bit_rate": 16814404,
        "duration": 9.283333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/lk81yo38aphfozo1a1qj",
        "version": 1550863908,
        "signature": "85b3241965f16da35d47ab8cad78cd50fa29eb92",
        "width": 1064,
        "height": 1436,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T19:31:48Z",
        "tags": [],
        "bytes": 450056,
        "type": "upload",
        "etag": "e94ecbc0c2c3853cef67a1540aa180bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550863908/avalanche2019/lk81yo38aphfozo1a1qj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550863908/avalanche2019/lk81yo38aphfozo1a1qj.png"
      },
      {
        "public_id": "avalanche2019/lilypjqviygjgwboo5pu",
        "version": 1550863913,
        "signature": "c8efb1423bf3e8eadc451c90fa5695d0c3ab3484",
        "width": 1052,
        "height": 1436,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T19:31:53Z",
        "tags": [],
        "bytes": 655760,
        "type": "upload",
        "etag": "86eb8620008c14a38bba5e7a961402ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550863913/avalanche2019/lilypjqviygjgwboo5pu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550863913/avalanche2019/lilypjqviygjgwboo5pu.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:42:13.325Z" }
      }
    ],
    "title": "",
    "description": "Small tweaks to the previous sketch."
  },
  {
    "_id": "CS3fgRZPRaHtBGcGu",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T19:33:25.41Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tipumqcshoxukbzhw9js",
        "version": 1556912021,
        "signature": "76207aef206d66e7abb038e5bf8ab8fc93a32ba2",
        "width": 860,
        "height": 674,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:33:41Z",
        "tags": [],
        "bytes": 73980,
        "type": "upload",
        "etag": "1460b09183a5367b204b659ecc9a95ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556912021/avalanche2019/tipumqcshoxukbzhw9js.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556912021/avalanche2019/tipumqcshoxukbzhw9js.png"
      },
      {
        "public_id": "avalanche2019/lrqjtrvbmshuv9nxx5gb",
        "version": 1556912025,
        "signature": "d1032d87998fffd2324f1886aae44c5ab669cbb2",
        "width": 1243,
        "height": 934,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:33:45Z",
        "tags": [],
        "bytes": 131441,
        "type": "upload",
        "etag": "ad2c644e0fcd20f649f95e63e2fcee76",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556912025/avalanche2019/lrqjtrvbmshuv9nxx5gb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556912025/avalanche2019/lrqjtrvbmshuv9nxx5gb.png"
      },
      {
        "public_id": "avalanche2019/azvywlbsklblxnuekurf",
        "version": 1556912033,
        "signature": "8ce327ac3563e3640e4f9523155a36e868d668b3",
        "width": 1525,
        "height": 887,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:33:53Z",
        "tags": [],
        "bytes": 211791,
        "type": "upload",
        "etag": "0327d5cf1d2fdeda9ee61e96d16497ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556912033/avalanche2019/azvywlbsklblxnuekurf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556912033/avalanche2019/azvywlbsklblxnuekurf.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "3D lab preparation (result still waiting to print)"
  },
  {
    "_id": "Cfu4oF4KMFSRLsHZF",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:52:18.218Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e7nnqbqkrmodjd86if9i",
        "version": 1555096187,
        "signature": "719663287d036d5e8399aad47ce41eb25050d275",
        "width": 633,
        "height": 551,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:09:47Z",
        "tags": [],
        "bytes": 86852,
        "type": "upload",
        "etag": "21c8a9e77387feeaa5b01db590d48165",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555096187/avalanche2019/e7nnqbqkrmodjd86if9i.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555096187/avalanche2019/e7nnqbqkrmodjd86if9i.png"
      },
      {
        "public_id": "avalanche2019/rnymu3yupoitpa2bxxut",
        "version": 1555096191,
        "signature": "e626ff86f524ca5bc981740f45f8d2cc65b19949",
        "width": 633,
        "height": 551,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:09:51Z",
        "tags": [],
        "bytes": 85630,
        "type": "upload",
        "etag": "4533a3a7bd5f768f224b965683b0ea30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555096191/avalanche2019/rnymu3yupoitpa2bxxut.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555096191/avalanche2019/rnymu3yupoitpa2bxxut.png"
      },
      {
        "public_id": "avalanche2019/jfslvxg4q9ilxkrxohbi",
        "version": 1555096198,
        "signature": "d633bfb3f6a17255f125ac945bbe320d6b79eb8b",
        "width": 633,
        "height": 551,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:09:58Z",
        "tags": [],
        "bytes": 90641,
        "type": "upload",
        "etag": "11b868c1475e0f8cf30c798f408fc521",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555096198/avalanche2019/jfslvxg4q9ilxkrxohbi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555096198/avalanche2019/jfslvxg4q9ilxkrxohbi.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Pretentious spoken word generator. Next step: add the sounds of snapping fingers.",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    \"story\": [\"a #surface# of #adjective#, #adjective# #noun_plural# #verb_ing# a #adjective# #adjective# #noun# and the #verb_ing# of #verb_ed# #noun_plural# #verb_ed# by the #noun#. a #noun# #verb_ing#, a #noun# #verb_ing# in the halo of #adjective# #noun_plural#. the #form# of a #adjective# #noun#, #verb_ing#, lazy in the bleach of #time#. a #shape# of #noun_plural# #verb_ed# against the #surface#. #adjective# #body_part# in a #device# #device_action#. #energies# energy, #verb_ed# #tension# to the point of #verb_ing#. a #adjective# #shape#.\"],\n      \"adjective\": [\"grey\", \"single\", \"bloated\", \"frozen\", \"glistening\", \"wet\", \"cold\", \"white\", \"flat\", \"black\", \"rusty\", \"dark\", \"lazy\", \"lit\"],\n      \"surface\": [\"sheet\", \"wall\", \"road\", \"plane\", \"box\", \"room\", \"slope\", \"hill\"],\n      \"noun\": [\"moon\",\"love\", \"finger\", \"tree\", \"filament\", \"soul\", \"memory\", \"cobweb\", \"spider web\", \"halo\", \"headlight\", \"bleached bone\", \"beam of light\", \"drop of spit\", \"dashboard\", \"tooth\", \"energy\", \"ring\", \"necklace\", \"child\", \"sibling\", \"twin\", \"blade\"],\n      \"noun_plural\": [\"echoes\", \"stars\", \"love\", \"fingers\", \"trees\", \"filaments\", \"souls\", \"memories\", \"cobwebs\", \"spider webs\", \"halos\", \"headlights\", \"bleach\", \"sunlight\", \"spit\", \"teeth\", \"energies\", \"wings\", \"wires\", \"antlers\"],\n      \"verb_ing\": [\"reflecting\", \"borrowing\", \"stealing\", \"tripping\", \"scanning\", \"dreaming\", \"folding\", \"buckling\", \"floating\", \"breaking\", \"fading\", \"mating\", \"merging\", \"grinding\", \"kneeling\", \"praying\"],\n      \"verb_plural\": [\"echoes\", \"sings\", \"whispers\", \"drips\", \"dreams\", \"walks\", \"floats\", \"sizzles\", \"fates\", \"sighs\"],\n      \"verb_ed\": [\"swallowed\", \"stolen\", \"poised\", \"frozen\", \"framed\", \"lost\", \"stretched\", \"twisted\", \"folded\", \"jaded\", \"tilted\", \"shrunken\", \"oiled\", \"soiled\"],\n      \"time\": [\"morning\", \"dawn\", \"afternoon\", \"evening\", \"dusk\"],\n      \"shape\": [\"loop\", \"thread\", \"square\", \"constellation\", \"pyramid\", \"plane\", \"jet\", \"cloud\", \"fog\", \"mountain\"],\n      \"body_part\": [\"teeth\", \"eyes\", \"fingers\", \"mouth\", \"toes\", \"feet\", \"words\"],\n      \"device\": [\"camera\", \"phone\", \"computer\", \"portal\", \"TV monitor\", \"network\", \"hard drive\"],\n      \"device_action\": [\"flash\", \"saved\", \"encoded\", \"downloaded\", \"uploaded\", \"etched\", \"printed\"],\n      \"energies\": [\"potential and kinetic\", \"hot and cold\", \"microscopic\", \"oily\", \"dark and crystalline\", \"potential\", \"kinetic\", \"vibrating\"],\n      \"tension\": [\"loose\", \"taut\", \"tense\", \"tight\", \"wavering\"],\n      \"form\": [\"memory\", \"shadow\", \"sculpture\", \"sketch\", \"veil\"],\n\n    }\n\ndocument.body.style.background = \"#444\";\ndocument.body.style.color = \"#eee\";\n\n    function main() {\n      let grammar = tracery.createGrammar(storyGrammar);\n      let story = grammar.flatten(\"#story#\");\n\n      const storyDiv = document.createElement('div');\n      storyDiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n      storyDiv.textContent = story;\n\n      document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    }\n\n\n    setTimeout(main, 10);"
  },
  {
    "_id": "ChoJdgrRxSXLvF4Q9",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-17T04:28:35.242Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rtqdwtkbfzw2k7xm60wc",
        "version": 1555475349,
        "signature": "c32fe439ce635da858416fb498abc9420c9142ad",
        "width": 994,
        "height": 994,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-17T04:29:09Z",
        "tags": [],
        "bytes": 54938,
        "type": "upload",
        "etag": "2b59bbc6c9ebba49a53eb0a581698ed1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555475349/avalanche2019/rtqdwtkbfzw2k7xm60wc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555475349/avalanche2019/rtqdwtkbfzw2k7xm60wc.jpg"
      },
      {
        "public_id": "avalanche2019/sgqjwc57k6meyiculo48",
        "version": 1555475364,
        "signature": "f0a724441fddf6a47154fb80a23ddd18b4354317",
        "width": 1024,
        "height": 1324,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-17T04:29:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 2194851,
        "type": "upload",
        "etag": "983512c5292389e8ee0f9e7298ff7b7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555475364/avalanche2019/sgqjwc57k6meyiculo48.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555475364/avalanche2019/sgqjwc57k6meyiculo48.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "314607",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "263581",
          "dar": "256:331"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 586270,
        "duration": 29.95,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/vd8iqc8m4cennhoailnl",
        "version": 1555475376,
        "signature": "b6f7a67887c8c28aedb0fa331d5fe2aae3587045",
        "width": 1028,
        "height": 1228,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-17T04:29:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 4255289,
        "type": "upload",
        "etag": "3ad741b82529d7e1bf10350431b88c9e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555475376/avalanche2019/vd8iqc8m4cennhoailnl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555475376/avalanche2019/vd8iqc8m4cennhoailnl.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "317216",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "346580",
          "dar": "257:307"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 671666,
        "duration": 50.683333,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T19:57:21.699Z" }
      }
    ],
    "title": "",
    "description": "Reworked my sequencer to the class drum samples, I like the fact that the samples are repeated for every frame.\nShould work in the browser, you can play around with it. If you change the pixelWidth variable you can have more or less steps.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\nlet img;\nconst canvasWidth = 500;\nconst canvasHeight = 500;\nconst pixelWidth = 16;\nconst pixelHeight = 4;\nconst activeArray = new Array(pixelWidth * pixelHeight).fill(0);\nactiveArray[22] = 1;\n\n\nfunction preload() {\n  hat = loadSound('http://compform.net/sound/sketches/hat.wav');\n  kick = loadSound('http://compform.net/sound/sketches/kick.wav');\n  snare = loadSound('http://compform.net/sound/sketches/snare.wav');\n  clap = loadSound('http://compform.net/sound/sketches/clap.wav');\n  window.samples = [hat, kick, snare, clap];\n\n}\n\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  createP(\"Speed\");\n  window.speedSlider = createSlider(0, 20, 2, 0.5);\n  colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  noSmooth();\n  img = createImage(pixelWidth, pixelHeight);\n}\n\nfunction draw() {\n  frameRate(60);\n  background(0);\n  drawGradient();\n  drawActivePixels();\n  indicatorLine.updateAndPlay();\n}\n\nvar indicatorLine = {\n  x: 75,\n  y1: 0,\n  y2: canvasHeight,\n  currentY: [],\n  draw() {\n    line(this.x, this.y1, this.x, this.y2);\n  },\n  move() {\n    this.x += speedSlider.value();\n    if (this.x > canvasWidth) {\n      this.x = 0;\n    }\n  },\n  updateXPixel() {\n    xPixel = positionToPixel(this.x, 0);\n    return xPixel.x;\n  },\n  checkAgainstActiveArray() {\n    this.currentY = [];\n    for (let y = 0; y < pixelHeight; y++) {\n      yPos = pixelToPosition(this.x, y);\n      pixel = positionToPixel(this.x, yPos.y1);\n      arrayIndex = pixelToArray(pixel.x, pixel.y);\n      this.currentY.push(arrayIndex);\n    }\n    // console.log(this.currentY);\n  },\n  playSound() {\n    this.checkAgainstActiveArray();\n    for (let y = 0; y < this.currentY.length; y++) {\n      if (activeArray[this.currentY[y]] == 1) {\n        samples[y].play()\n      }\n    }\n  },\n  updateAndPlay() {\n    this.move();\n    this.draw();\n    this.playSound();\n  }\n};\n\nfunction mouseClicked() {\n  if (\n    mouseX > 0 &&\n    mouseX < canvasHeight &&\n    mouseY > 0 &&\n    mouseY < canvasHeight\n  ) {\n    mousePixel = identifyMousePositionPixel();\n    onOffArray(mousePixel.x, mousePixel.y);\n    drawActivePixels();\n    indicatorLine.checkAgainstActiveArray();\n  }\n}\n\nfunction drawGradient() {\n  img.loadPixels();\n  for (var y = 0; y < img.height; y++) {\n    for (var x = 0; x < img.width; x++) {\n      var oscA = sin(x + y);\n      var hue = ((oscA + 1) / 2)*10  % 0.5;\n      var c = color(0.5, hue, hue);\n      img.set(x, y, c);\n    }\n  }\n  img.updatePixels();\n  image(img, 0, 0, width, height);\n}\n\nfunction drawActivePixels() {\n  img.loadPixels();\n  for (let i = 0; i < activeArray.length; i++) {\n    if (activeArray[i] == 1) {\n      var pixelPos = arrayToPixel(i);\n      img.set(pixelPos.x, pixelPos.y, color(0, 0, 1, 1));\n    } else {\n      var pixelPos = arrayToPixel(i);\n      img.set(pixelPos.x, pixelPos.y, color(0, 0, 0, 0));\n    }\n  }\n  img.updatePixels();\n  image(img, 0, 0, width, height);\n}\n\nfunction onOffArray(x, y) {\n  index = pixelToArray(x, y);\n  if (activeArray[index] == 0) {\n    activeArray[index] = 1;\n  } else {\n    activeArray[index] = 0;\n  }\n  // console.log(activeArray);\n}\n\nfunction pixelToArray(x, y) {\n  index = y * pixelWidth + x;\n  return index;\n}\n\nfunction arrayToPixel(index) {\n  xPos = index % pixelWidth;\n  yPos = floor(index / pixelWidth);\n  return { x: xPos, y: yPos };\n}\n\nfunction positionToPixel(x, y) {\n  var xPixel = 0;\n  if (x > canvasWidth) {\n    xPixel = pixelWidth - 1;\n  } else if (x < 0) {\n    xPixel = 0;\n  } else {\n    xPixel = floor((x / canvasWidth) * pixelWidth);\n  }\n  var yPixel = 0;\n  if (y > canvasHeight) {\n    yPixel = pixelHeight - 1;\n  } else if (y < 0) {\n    yPixel = 0;\n  } else {\n    yPixel = floor((y / canvasHeight) * pixelHeight);\n  }\n  return { x: xPixel, y: yPixel };\n}\n\nfunction pixelToPosition(x, y) {\n  var xPos1 = x * (canvasWidth / pixelWidth);\n  var xPos2 = (x + 1) * (canvasWidth / pixelWidth);\n  var yPos1 = y * (canvasHeight / pixelHeight);\n  var yPos2 = (y + 1) * (canvasHeight / pixelHeight);\n  return { x1: xPos1, x2: xPos2, y1: yPos1, y2: yPos2 };\n}\n\nfunction identifyMousePositionPixel() {\n  return positionToPixel(mouseX, mouseY);\n}"
  },
  {
    "_id": "CjKrGcFsGrchMLYQ3",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:40:15.71Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e6qauayguihokfzuaaoe",
        "version": 1555699227,
        "signature": "055d7e63a4f6c92b0769b6dac8d195b1614af720",
        "width": 588,
        "height": 582,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T18:40:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 386419,
        "type": "upload",
        "etag": "565cafb33d6368d21248055c1a02900c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555699227/avalanche2019/e6qauayguihokfzuaaoe.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555699227/avalanche2019/e6qauayguihokfzuaaoe.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "101355",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "181557",
          "dar": "98:97"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 288014,
        "duration": 10.733333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Drumbeat sample where ball size is a function of amplitude and mouseX pans the sound left to right.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nlet playButton;\nlet stopButton;\nlet analyzer;\nfunction preload() {\n  myDrums = loadSound(\n    \"https://raw.githubusercontent.com/AndrewLevinson/comp-form/master/week2/sketch-4/drumloop.wav\"\n  );\n}\n\nfunction setup() {\n  colorMode(HSB, 100);\n  createCanvas(300, 300);\n  backgroundColor = color(30, 40, 90);\n\n  analyzer = new p5.Amplitude();\n  analyzer.setInput(myDrums);\n\n  myDrums.amp(0);\n  myDrums.play();\n  myDrums.loop();\n  // play\n  playButton = createButton(\"Play\");\n  playButton.position(20, 20);\n  playButton.size(60, 30);\n  playButton.style(\"background-color\", \"fff\");\n  playButton.style(\"border-radius\", \"6px\");\n  playButton.style(\"border\", \"none\");\n  playButton.style(\"font-family\", \"monospace\");\n  playButton.style(\"text-transform\", \"uppercase\");\n  playButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  playButton.mousePressed(startAll);\n\n  // stop\n  stopButton = createButton(\"Pause\");\n  stopButton.position(100, 20);\n  stopButton.size(60, 30);\n  stopButton.style(\"background-color\", \"fff\");\n  stopButton.style(\"border-radius\", \"6px\");\n  stopButton.style(\"border\", \"none\");\n  stopButton.style(\"font-family\", \"monospace\");\n  stopButton.style(\"text-transform\", \"uppercase\");\n  stopButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  stopButton.mousePressed(stopAll);\n}\n\nfunction draw() {\n  background(backgroundColor);\n  noStroke();\n  fill(\"#3d3d3d\");\n\n  // Get the average (root mean square) amplitude\n  var rms = analyzer.getLevel();\n  fill(80, 50, 90);\n\n  // Draw an ellipse with size based on noise\n  let r = 25 + noise(rms * 10) * 100;\n  ellipse(mouseX, height / 2, r);\n   let freq = map(mouseX, 0, width, -1, 1);\n  myDrums.pan(freq);\n}\n\nfunction startAll() {\n  myDrums.amp(0.35, 0.05);\n\n  backgroundColor = color(50, 40, 90);\n}\n\nfunction stopAll() {\n  myDrums.amp(0, 0.5);\n  backgroundColor = color(99, 40, 90);\n}"
  },
  {
    "_id": "Ck4FPt7efugd8qNMY",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T20:34:51.737Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ucwfhixh5wilw1zxufex",
        "version": 1549658175,
        "signature": "c4d5fafcc32f51e26fa97a87582b3549af6699ca",
        "width": 598,
        "height": 594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T20:36:15Z",
        "tags": [],
        "bytes": 201321,
        "type": "upload",
        "etag": "b11c3238a08116ced7a0b5d99c578988",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549658175/avalanche2019/ucwfhixh5wilw1zxufex.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549658175/avalanche2019/ucwfhixh5wilw1zxufex.png"
      },
      {
        "public_id": "avalanche2019/tbjfsr0n9ouj41irheu2",
        "version": 1549658182,
        "signature": "833b51955196dc8edf642862913b069037c86bad",
        "width": 400,
        "height": 414,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T20:36:22Z",
        "tags": [],
        "bytes": 42241,
        "type": "upload",
        "etag": "d2fccbee48688041f91f6a0f7d6a96f3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549658182/avalanche2019/tbjfsr0n9ouj41irheu2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549658182/avalanche2019/tbjfsr0n9ouj41irheu2.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Maybe about splashing liquid...",
    "code": "var x1,x2,x3; \nvar y1,y2,y3;\nfunction setup() {\n  createCanvas(300, 300);\n\t  background(220);\n\tx1=random(400);\n\ty1=91;\n\t\n\tx2=random(200,400);\n\ty2=40;\n  \n  x3=random(300,400);\n\ty3=40;\n\t\n\t\tnoFill();\n\n\t\n\tfor(var x = 0; x< 40; x++ ){\n\t\tstroke(random(100),random(100),random(150,255));\n    strokeWeight(random(3));\nCurve(x1,y1);\nx1=x1+random(100);\ny1= y1+random(20);\t\t\n    \n\t\t\n\t\tif(x1> width){\n\t\t\tx1 =random(100);\n\t\t\ty1 =y1+random(100);\n\t\t\t }\n    \n    stroke(random(150,255),random(100),random(100));\nCurve(x2,y2);\nx2=x2+random(100);\ny2= y2+random(20);\t\n    if(x2> width){\n\t\t\tx2 =random(100);\n\t\t\ty2 =y2+random(100);\n\t\t\t }\n    stroke(random(255));\nCurve(x3,y3);\nx3=x3+random(100);\ny3= y3+random(20);\t\n    if(x3> width){\n\t\t\tx3 =random(100);\n\t\t\ty3 =y3+random(100);\n\t\t\t }\n\t\n}\n\t\n}\n\nfunction Curve(a,b){\n\t\t\tbeginShape();\n    curveVertex(a,  b);\n    curveVertex(a,  b);\n    curveVertex(random(160),  b-70);\n    curveVertex(random(160),  b-60);\n    curveVertex(a+random(52), b+9);\n    curveVertex(a-random(52), b);\n\t  endShape();\n}\n\n// class Curve {\n\t\n//   constructor(a,b) {\n//     this.x =a;\n//     this.y = b;\n\t\t\n\t\t\n\n//   }\n\t\n\t\n//   display() {\n// noFill();\n// stroke(255, 102, 0);\n// curve(5, 26, 5, 26, 73, 24, 73, 61);\n// stroke(0); \n// curve(5, 26, 73, 24, 73, 61, 15, 65); \n// stroke(255, 102, 0);\n// curve(73, 24, 73, 61, 15, 65, 15, 65);\n//   }\n// }"
  },
  {
    "_id": "Ckxj645SXQZF2XQ8f",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T20:35:11.646Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/elyvl0ejgdy69ikgkdbj",
        "version": 1548967115,
        "signature": "47380f293b14c7f43c83a773a37aac065b47a04f",
        "width": 1732,
        "height": 1298,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T20:38:35Z",
        "tags": [],
        "bytes": 325348,
        "type": "upload",
        "etag": "98990a726ed498466ee4ede44d6a34e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548967115/avalanche2019/elyvl0ejgdy69ikgkdbj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548967115/avalanche2019/elyvl0ejgdy69ikgkdbj.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:41.805Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:01:11.242Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:59.583Z" }
      }
    ],
    "title": "",
    "description": "Alphabet-tiles"
  },
  {
    "_id": "CnMsfpiPFTSuXqNkz",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-02-01T06:50:15.045Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uy5iqmxwt0vkbqruptfv",
        "version": 1549003957,
        "signature": "b2ed03fb2cdafdd27311f5466faf67670a3d8db8",
        "width": 800,
        "height": 448,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-01T06:52:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 766992,
        "type": "upload",
        "etag": "5cfbe016e105a130912707b9cc6af213",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549003957/avalanche2019/uy5iqmxwt0vkbqruptfv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549003957/avalanche2019/uy5iqmxwt0vkbqruptfv.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "High",
          "bit_rate": "1428098"
        },
        "frame_rate": 7.6923076923076925,
        "bit_rate": 1430288,
        "duration": 4.29,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:06:45.167Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "A Processing sketch. Pixels. Random Colors. Tiles."
  },
  {
    "_id": "CoySew3K4ZxgFnafg",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:13:02.998Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jvjjaw965wwm9pzfk391",
        "version": 1554484417,
        "signature": "f33e06146b6ad55036e09397de7cf5092a87353b",
        "width": 1600,
        "height": 1600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-05T17:13:37Z",
        "tags": [],
        "bytes": 97927,
        "type": "upload",
        "etag": "fa3bd617949866b00eca93d2dc35aaab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554484417/avalanche2019/jvjjaw965wwm9pzfk391.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554484417/avalanche2019/jvjjaw965wwm9pzfk391.jpg"
      },
      {
        "public_id": "avalanche2019/wmafizip4aeh0h94aq11",
        "version": 1554484430,
        "signature": "8110c3a1563140d6a20f2295850f7349900ea334",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T17:13:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 1294135,
        "type": "upload",
        "etag": "8196019d841f18c8189ac48370e47c4d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554484430/avalanche2019/wmafizip4aeh0h94aq11.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554484430/avalanche2019/wmafizip4aeh0h94aq11.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "1740927",
          "dar": "1:1"
        },
        "frame_rate": 30,
        "bit_rate": 1744705,
        "duration": 5.933984,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Party hat?",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar EXPORT = false;\nvar maxNumberOfFrames = 178;\nlet img;\nlet vid;\nlet theta = 2;\n\nfunction setup() {\n  createCanvas(800, 800, WEBGL);\n  vid = createVideo(['jpg2/test.mp4']);\n  vid.elt.muted = true;\n  vid.loop();\n  vid.hide();\n  angleMode(DEGREES)\n}\n\nfunction draw() {\n  frameRate(30)\n  rotateX(90)\n  background(250);\n  push();\n  if (frameCount>20) {\n    rotateZ(theta * 0.01);\n    rotateX(theta * 0.01);\n    rotateY(theta * 0.01);\n    // translate(-50, 10, 0);\n  }\n \n  //pass image as texture\n  texture(vid);\n  sphere(150, 50, 50);\n  push()\n  translate(0, 200, 0);\n  cone(105,200)\n  pop()\n  push()\n  // translate(0, -200, 0);\n  // rotateZ(180)\n  // cone(100,200)\n  // pop()\n  pop();\n  if (frameCount > 19 && frameCount < 60) {\n    theta *= 1.14;\n  } else if (frameCount > 60) {\n    theta += 150;\n  }\n  \n\n  if (EXPORT) {\n      saveFrame(\"EXPORT\", frameCount, \"jpg\", maxNumberOfFrames);\n\n  }\n  if (frameCount > maxNumberOfFrames) {\n      noLoop();\n  }\n\n}\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n      return;\n  }\n\n  if (!extension) {\n      extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "Cq8fr6eX8Tp3yMqJE",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T15:36:17.081Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qy9atsgozup3cmede4vm",
        "version": 1549035651,
        "signature": "bad5ea0f5a17dde5f47ad920e5c8fcb38750fc13",
        "width": 1184,
        "height": 1176,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T15:40:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 1988501,
        "type": "upload",
        "etag": "3ae5729646eb218a5267e0441480e170",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549035651/avalanche2019/qy9atsgozup3cmede4vm.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549035651/avalanche2019/qy9atsgozup3cmede4vm.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "252204",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "222493",
          "dar": "148:147"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 482792,
        "duration": 32.95,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "OpenFrameworks tile generator trial 1 --> Random Tile Generation"
  },
  {
    "_id": "Cs596jpZ4S2eDaHrg",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T12:19:56.802Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s4roufagiwgclek0wbcf",
        "version": 1552670851,
        "signature": "aa3ff725fa65c799af77639c43c639ebcbe7cf37",
        "width": 1072,
        "height": 1516,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T17:27:31Z",
        "tags": [],
        "bytes": 1199385,
        "type": "upload",
        "etag": "ac7938b65a39c7e2307039b15271b6ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552670851/avalanche2019/s4roufagiwgclek0wbcf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552670851/avalanche2019/s4roufagiwgclek0wbcf.png"
      },
      {
        "public_id": "avalanche2019/ptbnykrnhzc3lliagaar",
        "version": 1552671379,
        "signature": "2ebfaa90b04a1cc472b09569be280eee8e21ff83",
        "width": 2858,
        "height": 1490,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T17:36:19Z",
        "tags": [],
        "bytes": 2265050,
        "type": "upload",
        "etag": "999bde87c9341e3bdf2090252e08bef3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552671379/avalanche2019/ptbnykrnhzc3lliagaar.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552671379/avalanche2019/ptbnykrnhzc3lliagaar.png"
      },
      {
        "public_id": "avalanche2019/k8syqmtc0x5bjggzk21s",
        "version": 1552671420,
        "signature": "7f030c3918b24b58c6e8dec2a92a00d6f9ffcd04",
        "width": 2838,
        "height": 1520,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T17:37:00Z",
        "tags": [],
        "bytes": 1308542,
        "type": "upload",
        "etag": "766832694ca71c71a75b2fc7c57145c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552671420/avalanche2019/k8syqmtc0x5bjggzk21s.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552671420/avalanche2019/k8syqmtc0x5bjggzk21s.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T12:35:32.544Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T13:48:12.151Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T14:56:15.27Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T15:52:49.357Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T18:22:56.033Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T18:30:20.029Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:54:46.236Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T20:04:15.432Z" }
      }
    ],
    "title": "",
    "description": "Jellyfish (faces?) in progress. Still not sure how to handle body of it.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n// Warning: this is really really messy code.\n\nlet T;\nlet anchor;\n\nfunction setup() {\n    createCanvas(windowWidth, windowHeight);\n    background(1, 6, 15);\n\n    anchor = {\n        x: width / 2,\n        y: height / 4\n    }\n\n    T = new Turtle();\n}\n\nfunction draw() {\n    moveTurtle();\n    noLoop();\n}\n\nfunction moveTurtle() {\n    stroke(255);\n    T.penUp();\n    T.moveTo(anchor.x, anchor.y);\n    T.turnRight(90);\n    T.penDown();\n    push();\n    drawTentacle();\n    drawShortTentacles();\n    drawBody();\n    pop();\n\n    for (let i = 0; i < 3; i++) {\n        // translate(150, 100);\n        translate(random(-400, 400), random(-100, 200));\n        push();\n        drawTentacle();\n        drawShortTentacles();\n        drawBody();\n        pop();\n    }\n    \n}\n\nfunction drawTentacle() {\n    T.pushState();\n    const numTentacles = 100;\n    const numSegmentsPerTentacle = 1000;\n    for (let i = 0; i < numTentacles; i++) {\n        T.penUp();\n        T.moveTo(\n            anchor.x + (random(-40, 40)),\n            anchor.y + (random(-10, 10))\n        );\n        T.penDown();\n        \n        let tentacleLength = random(400, 525);\n        stroke(232, 236, random(244, 250), random(5, 10));\n        // stroke(3, 57, random(102, 120), random(10, 40));\n        T.pushState();\n        let tentacleWeight = min(random(.6, 3), random(.6, 3), random(.6, 3));\n        \n        // main tentacles\n        for (let j = 0; j < numSegmentsPerTentacle; j++) {\n            let segmentLength = tentacleLength / numSegmentsPerTentacle;\n            tentacleWeight -= .001;\n            strokeWeight(tentacleWeight);\n\n            // curve at top\n            if (j < numSegmentsPerTentacle * .15) {\n                T.turnRight(random(-.4, .4));\n            }\n\n            // more curve at end\n            if (j > numSegmentsPerTentacle * .85 + random(.5)) {\n                T.turnRight(random(-.1, .3));\n            }\n\n            T.turnRight(random(-.5, .5));\n            T.moveForward(segmentLength);\n\n            // decoration at very end\n            if (j === numSegmentsPerTentacle - 1) {\n                T.pushState();\n                for (let k = 0; k < 5; k++) {\n                    stroke(3, 57, random(102, 120), random(10, 40));\n                    T.turnRight(random(80));\n                    T.moveForward(.2);\n                }\n                T.popState();\n            }\n        }\n        T.popState();\n    }\n    T.popState();\n}\n\nfunction drawShortTentacles() {\n    T.pushState();\n    const numTentacles = 40;\n    const numSegmentsPerTentacle = 500;\n    for (let i = 0; i < numTentacles; i++) {\n        T.penUp();\n        T.moveTo(\n            anchor.x + (random(-40, 40)),\n            anchor.y + (random(-10, 10))\n        );\n        T.penDown();\n        const tentacleLength = random(100, 250);\n        // stroke(51, 40, 76, random(10, 40));\n        stroke(232, 236, 244, random(5, 10));\n        T.pushState();\n        let tentacleWeight = min(random(.6, 2), random(.6, 2), random(.6, 2));\n        \n        // main tentacles\n        for (let j = 0; j < numSegmentsPerTentacle; j++) {\n            let segmentLength = tentacleLength / numSegmentsPerTentacle;\n            tentacleWeight -= .0001;\n            strokeWeight(tentacleWeight);\n\n            T.turnRight(random(-1.4, 1.4));\n            T.moveForward(segmentLength);\n        }\n        T.popState();\n    }\n    T.popState();\n}\n\nfunction drawBody() {\n    drawBodyOutline();\n    T.penUp();\n    noStroke();\n    T.moveTo(anchor.x, anchor.y);\n    T.pushState();\n    for (let i = 0; i < 350; i++) {\n        fill(232, 236, random(244, 250), random(.2, .4));\n        ellipse(T.x, T.y, 80, 80);\n        T.turnRight(random(360));\n        T.moveForward(random(-20, 20));\n    }\n    T.popState();\n\n    // red\n    for (let j = 0; j < 10; j++) {\n        T.pushState();\n        for (let i = 0; i < 350; i++) {\n            fill(244, 69, 66, random(15, 35));\n            ellipse(T.x, T.y, 3, 3);\n            T.turnRight(random(360));\n            T.moveForward(random(-5, 5));\n        }\n        T.popState();\n    }\n\n    // white\n    for (let k = 0; k < 4; k++) {\n        T.pushState();\n        T.moveTo(anchor.x + random(-10, 10), anchor.y + random(5));\n        for (let i = 0; i < Math.floor(random(60, 90)); i++) {\n            fill(255, random(5, 10));\n            ellipse(T.x, T.y, 5, 10);\n            T.turnRight(random(-2, 2));\n            T.moveForward(random(-1, 5));\n        }\n        T.popState();\n    }\n\n    for (let k = 0; k < 1; k++) {\n        T.pushState();\n        for (let i = 0; i < 350; i++) {\n            fill(255, random(25, 30));\n            ellipse(T.x, T.y, 3, 3);\n            T.turnRight(random(360));\n            T.moveForward(random(-5, 5));\n        }\n        T.popState();\n    }\n        \n\n    // blue\n    for (let k = 0; k < 3; k++) {\n        T.pushState();\n        for (let i = 0; i < 350; i++) {\n            fill(1, 6, 15, random(25, 30));\n            ellipse(T.x, T.y, 3, 3);\n            T.turnRight(random(360));\n            T.moveForward(random(-5, 5));\n        }\n        T.popState();\n    }\n\n    // // white big\n    // for (let k = 0; k < 1; k++) {\n    //     T.pushState();\n    //     T.moveTo(anchor.x + random(-50, 50), anchor.y + random(0, -100));\n    //     for (let i = 0; i < Math.floor(random(60, 90)); i++) {\n    //         fill(255, random(.4, 1));\n    //         ellipse(T.x, T.y, 80, 80);\n    //         T.turnRight(random(360));\n    //         T.moveForward(random(-15, 15));\n    //     }\n    //     T.popState();\n    // }\n\n    // fuzzy background\n    for (let i = 0; i < 250; i++) {\n        fill(232, 236, random(244, 250), random(.2, .8));\n        noStroke();\n        ellipse(anchor.x + random(-150, 100), anchor.y + random(-200, 100), random(100), random(100));\n    }\n\n    for (let i = 0; i < 250; i++) {\n        fill(232, 236, random(244, 250), random(.2, .8));\n        noStroke();\n        ellipse(anchor.x + random(-100, 70), anchor.y + random(-150, 80), random(100), random(100));\n    }\n\n    for (let i = 0; i < 250; i++) {\n        fill(232, 236, random(244, 250), random(.2, .8));\n        noStroke();\n        ellipse(anchor.x + random(-160, 200), anchor.y + random(-150, 50), random(100), random(100));\n    }\n\n}\n\nfunction drawBodyOutline() {\n    noFill();\n    stroke(232, 236, 255, .5);\n    for (let i = 0; i < 5; i++) {   \n        let start = {\n            x: anchor.x - 60,\n            y: anchor.y - 50\n        }\n        let end = {\n            x: anchor.x + 60,\n            y: anchor.y\n        }\n        strokeWeight(150);\n        stroke(255, 6);\n        bezier(\n            start.x + random(-70, 70), start.y + random(-70, 70),\n            start.x - 50 + random(-55, 55), start.y - 70 + random(-55, 55),\n            end.x + 50 + random(-55, 55), end.y - 70 + random(-55, 55),\n            end.x + random(-70, 70), start.y + random(-70, 70), end.y + random(-70, 70), start.y + random(-70, 70)\n        );\n    }\n}"
  },
  {
    "_id": "CthuAbeGkdXLbcYDG",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "created_at": { "$date": "2019-01-26T22:21:32.027Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nwmgeuhhf0uligd8qoas",
        "version": 1548541304,
        "signature": "7fa53e4548683a646316a2e9a58cae3884ee85c2",
        "width": 480,
        "height": 640,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-26T22:21:44Z",
        "tags": [],
        "bytes": 31732,
        "type": "upload",
        "etag": "e0d1c5373b5710a2de62455a1578418a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548541304/avalanche2019/nwmgeuhhf0uligd8qoas.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548541304/avalanche2019/nwmgeuhhf0uligd8qoas.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:42.476Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Brads tiles  - Mexico!"
  },
  {
    "_id": "CuMLjkp92qbaydBXZ",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T05:29:56.249Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/i4f97uprmijsdwiyxxkx",
        "version": 1549518588,
        "signature": "8392e9be77791358792b8c19ab026a0e19fe01cb",
        "width": 1270,
        "height": 968,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T05:49:48Z",
        "tags": [],
        "bytes": 298259,
        "type": "upload",
        "etag": "424990cbb8daf5ce61e9624920437e7e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549518588/avalanche2019/i4f97uprmijsdwiyxxkx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549518588/avalanche2019/i4f97uprmijsdwiyxxkx.jpg"
      },
      {
        "public_id": "avalanche2019/yqfmubhal4pfitgtu2gz",
        "version": 1549518592,
        "signature": "4a504fb300aefb273255d443976aeb6b91395520",
        "width": 1259,
        "height": 843,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T05:49:52Z",
        "tags": [],
        "bytes": 248836,
        "type": "upload",
        "etag": "a7cd36b3dabd6fc1769ecb47b62a1f98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549518592/avalanche2019/yqfmubhal4pfitgtu2gz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549518592/avalanche2019/yqfmubhal4pfitgtu2gz.jpg"
      },
      {
        "public_id": "avalanche2019/u4hr6foqj85tyreremsc",
        "version": 1549518596,
        "signature": "e578fbc169e6ea4883f476d5075c4e5b819fac40",
        "width": 1270,
        "height": 1044,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T05:49:56Z",
        "tags": [],
        "bytes": 147510,
        "type": "upload",
        "etag": "0b9dc8472f90d86a89f044529a259220",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549518596/avalanche2019/u4hr6foqj85tyreremsc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549518596/avalanche2019/u4hr6foqj85tyreremsc.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:27:12.611Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T20:50:49.283Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T05:14:33.309Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T11:47:27.397Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T21:06:35.438Z" }
      }
    ],
    "title": "",
    "description": "Lines!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nconst canvas_width = 1000,\n    canvas_height = 800,\n    drawing_border = 50;\n\nfunction setup() {\n    createCanvas(canvas_width, canvas_height);\n    colorMode(HSB, 1);\n    background(.1, .001, .95);\n\n    let y_start = drawing_border;\n    let y_end = random(200, 300);\n\n    while (y_end < canvas_height - drawing_border) {\n        drawLines(y_start, y_end);\n        y_start = y_end;\n        y_end += random(50, 300);\n    }\n}\n\nfunction drawLines(y_start, y_end) {\n    stroke(.56, .8, random(.2, .7));\n    strokeWeight(random(.8, 1));\n    for (x = drawing_border; x < canvas_width - drawing_border; x += random(4, 3)) {\n        line(x, y_start + random(4), x, y_end + random(4));\n    }\n}"
  },
  {
    "_id": "D32Cw9YkqRnLbYJT3",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T23:03:03.109Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sqgpnqshkxb3d0ivej6j",
        "version": 1554246204,
        "signature": "eafedcb4332826c8fd5782583e6cd914f758aafb",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-02T23:03:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 9126988,
        "type": "upload",
        "etag": "b64104086da9d5f39f43aac403b9e845",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554246204/avalanche2019/sqgpnqshkxb3d0ivej6j.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554246204/avalanche2019/sqgpnqshkxb3d0ivej6j.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "10044095",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 10309097,
        "duration": 7.033333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/xf3rtfmxjgrwc44pov5w",
        "version": 1554246210,
        "signature": "02123b6a3c23abd31fbdcded3882c6d735b47c3f",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-02T23:03:30Z",
        "tags": [],
        "bytes": 650163,
        "type": "upload",
        "etag": "aa2983a8b745b5f50b9fbf8a3830067f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554246210/avalanche2019/xf3rtfmxjgrwc44pov5w.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554246210/avalanche2019/xf3rtfmxjgrwc44pov5w.png"
      },
      {
        "public_id": "avalanche2019/yvvtiritmpzfy6qndybi",
        "version": 1554246218,
        "signature": "a67b3a98056328829edeeb7e42e7906a0a9895f9",
        "width": 1258,
        "height": 650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-02T23:03:38Z",
        "tags": [],
        "bytes": 111531,
        "type": "upload",
        "etag": "863e67540b20e4b0b842ff23e23d3716",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554246218/avalanche2019/yvvtiritmpzfy6qndybi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554246218/avalanche2019/yvvtiritmpzfy6qndybi.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-03T02:14:35.499Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-03T04:17:57.425Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-04T03:18:20.074Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-04T21:57:52.902Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T02:16:37.913Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T06:01:22.757Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T19:58:06.809Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a 3D animation of CompForm title using Cinema 4D and After Effects. \nI have used MoGraph, Cloners, and Physics to achieve the desired look. \nSpecial thanks: GreyscaleGorilla",
    "inspiration_name": "CompForm Title Animation"
  },
  {
    "_id": "D3tmwn3kisZtdoz2Y",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T18:54:32.202Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/azw0jdbtaps1yktryrf3",
        "version": 1550861687,
        "signature": "a9a510af48582d52d73376c2df9f5a56f8d9f425",
        "width": 1436,
        "height": 748,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T18:54:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 1895708,
        "type": "upload",
        "etag": "cf76fd9514e3d80eb60f9693ec1d5cc8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550861687/avalanche2019/azw0jdbtaps1yktryrf3.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550861687/avalanche2019/azw0jdbtaps1yktryrf3.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "297350",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "312087",
          "dar": "359:187"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 617745,
        "duration": 24.55,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "First try on making shifting patterns with modulus and noise. It has some variance but is still needs more development over time. You can change the oscillator type in a drop down. Recording has some reverb, I don’t know why, but I like it",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nvar penOsc, penEnvelope, fft;\n\nvar penScale2 = [60, 64, 69, 72];\nvar penScale = [72, 76, 79, 76];\nvar bassScale = [40, 45, 48];\nvar bassScale2 = [28, 33, 36];\nvar note = 0;\nvar clickedOnce = false;\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  createCanvas(710, 200);\n  penOsc = new p5.SinOsc();\n  penOsc2 = new p5.SinOsc();\n  bassOsc = new p5.SinOsc();\n  bassOsc2 = new p5.SinOsc();\n  myP = createP(\"Choose the oscillator type:\");\n  myP.style(\"font\", \"900 16px/110% Arial, Helvetica, sans-serif\");\n  selType = createSelect();\n  selType.option(\"sine\");\n  selType.option(\"triangle\");\n  selType.option(\"sawtooth\");\n  selType.option(\"square\");\n  // Instantiate the envelope\n  penEnvelope = new p5.Envelope();\n  penEnvelope2 = new p5.Envelope();\n\n  // set attackTime, decayTime, sustainRatio, releaseTime\n  penEnvelope.setADSR(0.05, 0.1, 0.05, 1);\n  penEnvelope2.setADSR(0.1, 0.3, 0.1, 2.5);\n\n  // set attackLevel, releaseLevel\n  penEnvelope.setRange(0.1, 0);\n  penEnvelope2.setRange(0.1, 0);\n\n  // Instantiate the envelope\n  bassEnvelope = new p5.Envelope();\n  bassEnvelope2 = new p5.Envelope();\n\n  // set attackTime, decayTime, sustainRatio, releaseTime\n  bassEnvelope.setADSR(0.001, 0.07, 0.01, 0.001);\n  bassEnvelope2.setADSR(0.001, 0.07, 0.01, 0.001);\n\n  // set attackLevel, releaseLevel\n  bassEnvelope.setRange(0.3, 0);\n  bassEnvelope2.setRange(0.3, 0);\n\n  fft = new p5.FFT();\n  textAlign(CENTER);\n  textSize(24);\n  textStyle(BOLD);\n  textFont(\"Helvetica\");\n  text(\"click to play\", width / 2, height / 2);\n}\n\nfunction draw() {\n  penOsc.oscillator.type = selType.value();\n  penOsc2.oscillator.type = selType.value();\n  bassOsc.oscillator.type = selType.value();\n  bassOsc2.oscillator.type = selType.value();\n  if (clickedOnce) {\n    background(20);\n  }\n  // console.log();\n  n1 = floor(noise(frameCount * 0.001) * 3 + 8);\n  if (floor(noise(frameCount * 0.01) * 90) % n1 == 0 && frameCount % 4 == 0) {\n    penScale = shuffle(penScale);\n    var penMidiValue = penScale[note];\n    var penFreqValue = midiToFreq(penMidiValue);\n    penOsc.freq(penFreqValue);\n    penEnvelope.play(penOsc, 0, 0.1);\n    note = (note + 1) % penScale.length;\n    fill(0);\n    // circle(10, 10, 10);\n  }\n  n2 = floor(noise(frameCount * 0.002) * 2 + 4);\n  if (floor(noise(frameCount * 0.01) * 90) % n2 == 0 && frameCount % 40 == 0) {\n    penScale2 = shuffle(penScale2);\n    var penMidiValue2 = penScale2[note];\n    var penFreqValue2 = midiToFreq(penMidiValue2);\n    penOsc2.freq(penFreqValue2);\n    penEnvelope2.play(penOsc2, 0, 0.1);\n    note = (note + 1) % penScale2.length;\n  }\n  // console.log(frameCount % 800 > 200);\n  if (frameCount > 3000) {\n    if (frameCount % 1000 > 300) {\n      n3 = floor(noise(frameCount * 0.02) * 4 + 10);\n      if (\n        floor(noise(frameCount * 0.01) * 92) % 2 == 0 &&\n        frameCount % n2 == 0\n      ) {\n        bassScale = shuffle(bassScale);\n        var bassMidiValue = bassScale[note];\n        var bassFreqValue = midiToFreq(bassMidiValue);\n        bassOsc.freq(bassFreqValue);\n        bassEnvelope.play(bassOsc, 0, 0.1);\n        note = (note + 1) % bassScale.length;\n      }\n    }\n  }\n  if (frameCount > 1000) {\n    if (frameCount % 800 > 200) {\n      n3 = floor(noise(frameCount * 0.02) * 4 + 5);\n      if (\n        floor(noise(frameCount * 0.01) * 8) % 3 == 0 &&\n        frameCount % n3 == 0\n      ) {\n        bassScale2 = shuffle(bassScale2);\n        var bassMidiValue2 = bassScale2[note];\n        var bassFreqValue2 = midiToFreq(bassMidiValue2);\n        bassOsc2.freq(bassFreqValue2);\n        bassEnvelope2.play(bassOsc2, 0, 0.1);\n        note = (note + 1) % bassScale2.length;\n      }\n    }\n  }\n\n  var spectrum = fft.analyze();\n  // console.log(spectrum);\n  for (var i = 0; i < spectrum.length / 8; i++) {\n    stroke((1 / spectrum.length) * i * 10, 1, 0.8);\n    var x = map(i, 0, spectrum.length / 10, 0, width);\n    var h = map(spectrum[i], 0, 255, 0, height);\n    if (i % 12 == 0) {\n      rect(x, height, 1, -h);\n    }\n  }\n}\n\nfunction mouseClicked() {\n  clickedOnce = true;\n  bassOsc.start();\n  bassOsc2.start();\n  penOsc.start();\n  penOsc2.start();\n  bassOsc.amp(0);\n  bassOsc2.amp(0);\n  penOsc.amp(0);\n  penOsc2.amp(0);\n}"
  },
  {
    "_id": "D4Lnq68tHdhYRAzfp",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T05:01:57.814Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jmoy8t2rknyouaasbxl9",
        "version": 1551934925,
        "signature": "09510dc30f4a94d31d84e98665c2152be3b9d7f3",
        "width": 1162,
        "height": 1246,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T05:02:05Z",
        "tags": [],
        "bytes": 547042,
        "type": "upload",
        "etag": "cff209697e994d3020df514f5eb2c240",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551934925/avalanche2019/jmoy8t2rknyouaasbxl9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551934925/avalanche2019/jmoy8t2rknyouaasbxl9.png"
      },
      {
        "public_id": "avalanche2019/xhapc5sbe0h7vkf4d1my",
        "version": 1552012653,
        "signature": "5be5448809a09e548da320a5e0b174ee89902901",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T02:37:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 1784693,
        "type": "upload",
        "etag": "f8327192faf7e42226d388691f45485d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552012653/avalanche2019/xhapc5sbe0h7vkf4d1my.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552012653/avalanche2019/xhapc5sbe0h7vkf4d1my.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "1093181",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 1097175,
        "duration": 13.013,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T15:28:48.59Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T15:57:00.893Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-07T15:57:03.942Z" }
      }
    ],
    "title": "",
    "description": "Draw any shape on the canvas, and watch it fill with texture.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n\n// Hold and drag mouse on canvas to draw shape. Release\n// to get fill.\n\nconst canvasWidth = 600;\nconst canvasHeight = 600;\nlet cnv;\n\nlet dots = [];\nlet fillPoints = [];\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    fill(254);\n    pixelDensity(1);\n    createP(\"1. Click, hold, draw a (small) shape.\");\n    createP(\"2. Release mouse and wait for the shape to fill.\");\n    createP(\"3. Draw more shapes, or refresh.\");\n}\n\nfunction draw() {\n    setPolygonDots();\n    buildPolygon();\n    // decoratePolygonPoints();\n}\n\nfunction setPolygonDots() {\n    if (mouseIsPressed){\n        polygonDrawActive = true;\n        dots.push({x: mouseX, y: mouseY});\n        ellipse(mouseX, mouseY, .5, .5);\n    }\n}\n\nfunction buildPolygon() {\n    beginShape();\n    for (let dot = 0; dot < dots.length; dot++) {\n        vertex(dots[dot].x, dots[dot].y);\n    }\n}\n\nfunction fillPolygon() {\n    loadPixels();\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let index = (x + y * width) * 4;\n            let thisPixel = pixels[index];\n            if (thisPixel === 254) {\n                fillPoints.push([x, y]);\n            }\n        }\n    }\n}\n\nfunction decoratePolygonPoints() {\n    for (let i = 0; i < fillPoints.length; i++) {\n        push();\n        strokeWeight(.3);\n        stroke(random(50, 60));\n        line(\n            fillPoints[i][0] - random(30),\n            fillPoints[i][1] - random(30),\n            fillPoints[i][0] + random(30),\n            fillPoints[i][1] + random(30)\n        );\n        pop();\n    }\n}\n\nfunction mouseReleased() {\n    push();\n    strokeWeight(0);\n    endShape(CLOSE);\n    fillPolygon();\n    decoratePolygonPoints();\n    pop();\n    dots = [];\n}"
  },
  {
    "_id": "D8eLedAaFcnJ5fiaQ",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T17:59:00.776Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nn0m1raukesvhhhixgrx",
        "version": 1555007272,
        "signature": "eb4a023f6aead155c937da356cb1a44e5cc21c27",
        "width": 700,
        "height": 700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T18:27:52Z",
        "tags": [],
        "bytes": 95603,
        "type": "upload",
        "etag": "8f07bc79f052cddb3aa67f6c90bbd28f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555007272/avalanche2019/nn0m1raukesvhhhixgrx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555007272/avalanche2019/nn0m1raukesvhhhixgrx.png"
      },
      {
        "public_id": "avalanche2019/jdpi5sivke4l7wpv4ycd",
        "version": 1555007275,
        "signature": "1f24758d7acbf0c6d80cc377b4b257dc0e00f1d4",
        "width": 700,
        "height": 700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T18:27:55Z",
        "tags": [],
        "bytes": 91590,
        "type": "upload",
        "etag": "7f22dae91da2be744fd1c023abcc6f77",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555007275/avalanche2019/jdpi5sivke4l7wpv4ycd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555007275/avalanche2019/jdpi5sivke4l7wpv4ycd.png"
      },
      {
        "public_id": "avalanche2019/bnzwzdwmwv7pzdm42snx",
        "version": 1555007280,
        "signature": "7d9c05bfd90b8166c50226ce02dca2ea2fa7e836",
        "width": 700,
        "height": 700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T18:28:00Z",
        "tags": [],
        "bytes": 99563,
        "type": "upload",
        "etag": "a15ea693544f709706e7fd16b8546c5c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555007280/avalanche2019/bnzwzdwmwv7pzdm42snx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555007280/avalanche2019/bnzwzdwmwv7pzdm42snx.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "A dark and stormy, fantasy noir, tragic romance between a hard boiled detective and a monster from the deep.",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    \"story\": [\"It was a dark and stormy night when the #adjective#, #adjective3#, #noun# #verb# its way to surface. It paused, tentacles #tentacles# in the moonlight. Detective #firstname# #lastname# #object#. The inscription on it's side, #adjective2# #gunname#, #weaponverb# in the moonlight. #verb2# - #phrase#, and it's time to #verb3# - the detective #action# forward, the rain washing away the #noun1#.\"],\n    \"phrase\": [\"I have always #emotion# you, #petname#\"],\n    \"subject\": [\"#noun#\", \"#adjective# #noun#\"],\n    \"object\": [\"#verb# out the #weaponadjective# #weapon#\"],\n    \"adverb\": [\"exceptionally\", \"somewhat\"],\n    \"adjective\": [\"cepholopodic\", \"grey\", \"bloated\", \"frozen\", \"glistening\", \"wet\", \"nightmarish\"],\n    \"adjective2\": [\"Little\", \"Painted\", \"Alabaster\", \"Steel\", \"Hot\", \"Poison\"],\n    \"adjective3\": [\"boiling\", \"cadaverous\", \"glowing\", \"fetid\", \"screaming\", \"wailing\"],\n    \"gunname\": [\"Daisy\", \"Juniper\", \"Pansy\", \"Princess\", \"Tony\"],\n    \"emotion\": [\"hated\", \"loved\", \"pitied\", \"admired\"],\n    \"petname\": [\"baby\", \"sweetie\", \"pumpkin\", \"doll-face\", \"my sweet calamari\"], \n    \"noun\": [\"alien\", \"beast\", \"montrosity\", \"creature\", \"leviathan\", \"juggernaut\", \"golem\"],\n    \"noun1\": [\"pain\", \"tears\", \"sweat\", \"blood\", \"love\", \"hate\"],\n    \"verb\": [\"dragged\", \"burrowed\", \"pulled\", \"slipped\", \"peeled\", \"scraped\"],\n    \"verb2\": [\"Whispering\", \"Singing\", \"Moaning\", \"Crooning\", \"Mumbling\", \"Growling\", \"Barking\", \"Thinking\"],\n    \"verb3\": [\"pay\", \"die\", \"get what you deserve\", \"come to Daddy\", \"go back to Hell\", \"take a little trip\"],\n    \"weapon\": [\"vorpal sword\", \"sawed-off shotgun\", \"derringer\", \"gun\", \"Bowie knife\"],\n    \"weaponverb\": [\"pulsed\", \"glowed\", \"danced\", \"whispered\", \"sighed\"],\n    \"action\": [\"lurched\", \"stepped\", \"stumbled\", \"ran\", \"sprinted\", \"flew\"],\n    \"tentacles\": [\"thrashing\", \"whipping\", \"swinging\"],\n    \"firstname\": [\"Roger\", \"Meredith\", \"Crystal\", \"Dugger\", \"Puff\"],\n    \"lastname\": [\"DelMonico\", \"Sugars\", \"Wilson\", \"Jacoby\", \"Chin\"],\n    \"weaponadjective\": [\"ancient\", \"magic\", \"arcane\", \"angel-blessed\", \"holy\", \"demonic\", \"cursed\"]\n}\n\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten(\"#story#\");\n\n    const storyDiv = document.createElement('div');\n    storyDiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n    storyDiv.textContent = story;\n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "DADQa5uGSkYhC3oHc",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-03-01T17:25:51.566Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bz7w79anm1omb2dhq3zq",
        "version": 1551461187,
        "signature": "72d7dc739956c2e29a2acda3b69437c5cbe4c306",
        "width": 1592,
        "height": 1592,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-01T17:26:27Z",
        "tags": [],
        "bytes": 119467,
        "type": "upload",
        "etag": "cc4346e0d4fa43e5874c72cfd4abd251",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551461187/avalanche2019/bz7w79anm1omb2dhq3zq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551461187/avalanche2019/bz7w79anm1omb2dhq3zq.jpg"
      },
      {
        "public_id": "avalanche2019/dgsulj8nitpyl8ccymvo",
        "version": 1551461192,
        "signature": "7c3e35eccf071c731217e1d5d3cdc7b12a8b2156",
        "width": 1596,
        "height": 1596,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-01T17:26:32Z",
        "tags": [],
        "bytes": 122217,
        "type": "upload",
        "etag": "c947cd36c5cac30e2dfe006c59910bcc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551461192/avalanche2019/dgsulj8nitpyl8ccymvo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551461192/avalanche2019/dgsulj8nitpyl8ccymvo.jpg"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 1"
  },
  {
    "_id": "DEEmC9ai5mnTKAy7j",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-10T18:44:33.669Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nenufkfgkrpoo5pabldx",
        "version": 1552243483,
        "signature": "2c3d7f2184d68ac1bb11c939575f920f37d8f82e",
        "width": 1596,
        "height": 1422,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-10T18:44:43Z",
        "tags": [],
        "bytes": 2284230,
        "type": "upload",
        "etag": "d2d1b55f8eb9ca38dd179865f02c1b53",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552243483/avalanche2019/nenufkfgkrpoo5pabldx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552243483/avalanche2019/nenufkfgkrpoo5pabldx.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-11T02:19:52.723Z" }
      }
    ],
    "title": "",
    "description": "Trippy Dream Catcher",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nlet h, s, b;\nlet thickness;\n\nfunction setup() {\n  createCanvas(800, 800);\n  colorMode(HSB, 100);\n  myTurtle = new Turtle();\n  s = 100;\n  b = 100;\n  h = 100;\n}\n\nfunction draw() {\n  background(0);\n\n  myTurtle.pushState();\n  myTurtle.moveTo(0, 0);\n  myTurtle.penDown();\n  for (let i = 0; i < 15000; i++) {\n    h = map(myTurtle.y, 0, height, 1, 100);\n    // s = map(myTurtle.y, 0, height, 1, 100);\n    stroke(h, s, b, 30);\n    squares();\n  }\n  myTurtle.popState();\n\n  myTurtle.penUp();\n  myTurtle.moveTo(width / 4, height / 1.5);\n\n  myTurtle.penDown();\n  myTurtle.pushState();\n  for (let i = 0; i < 500; i++) {\n    h = map(myTurtle.x, 0, width, 1, 100);\n    // thickness = map(myTurtle.x, width / 4, (width * 2) / 3, 4, 1);\n    stroke(h, s, b);\n    strokeWeight(1);\n    myTurtle.moveForward(width / 2);\n    myTurtle.pushState();\n    h = map(myTurtle.x, width, 0, 30, 100);\n    stroke(h, s, b);\n    // strokeWeight(0.5);\n    innerLine();\n    myTurtle.popState();\n    myTurtle.turnLeft(99);\n\n    // myTurtle.turnLeft(random(90, 99));\n  }\n  muTurtle.popState();\n  // noLoop();\n}\n\nfunction innerLine() {\n  myTurtle.turnLeft(135);\n  myTurtle.moveForward(350);\n}\n\nfunction squares() {\n  // myTurtle.penDown();\n  checkEdges();\n  myTurtle.moveForward(random(1, 10) * 5);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(random(1, 10) * 5);\n  myTurtle.turnLeft(90);\n  myTurtle.moveForward(random(1, 10) * 5);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(random(1, 10) * 5);\n  myTurtle.turnLeft(90);\n  myTurtle.moveForward(random(1, 10) * 5);\n  myTurtle.turnRight(90);\n}\n\nfunction checkEdges() {\n  if (myTurtle.x < 0 || myTurtle.x > width) {\n    myTurtle.turnLeft(180);\n  } else if (myTurtle.y < 0 || myTurtle.y > height) {\n    myTurtle.turnLeft(180);\n  }\n}"
  },
  {
    "_id": "DFCZAh3kjLmoZjHzq",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Animation",
    "created_at": { "$date": "2019-03-30T17:13:19.232Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xrgdjiehamigfbiouig3",
        "version": 1554003651,
        "signature": "1161c248732ef6b3e419de481a849c867a9af7dd",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-31T03:40:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 9004481,
        "type": "upload",
        "etag": "510bb8d0e457a6e75a3ada1cfe128880",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554003651/avalanche2019/xrgdjiehamigfbiouig3.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554003651/avalanche2019/xrgdjiehamigfbiouig3.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "253375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "High",
          "bit_rate": "24551282",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 24839947,
        "duration": 2.9,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Dusted off an old sketch and made it move."
  },
  {
    "_id": "DGpqJRquyv7QkFbhC",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T16:06:58.144Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zt9zwknxbn8w1fx7urty",
        "version": 1556899652,
        "signature": "2d909dda37bb943682e66e22df7451ff03ced513",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T16:07:32Z",
        "tags": [],
        "bytes": 1355194,
        "type": "upload",
        "etag": "e9701367922c07c3231044d9c216fb33",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899652/avalanche2019/zt9zwknxbn8w1fx7urty.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899652/avalanche2019/zt9zwknxbn8w1fx7urty.jpg"
      },
      {
        "public_id": "avalanche2019/lj0meqmthiksvabgrgtf",
        "version": 1556899656,
        "signature": "f091d35a99958b427bab2db9c3e94d28c77c113d",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T16:07:36Z",
        "tags": [],
        "bytes": 1248951,
        "type": "upload",
        "etag": "a3b7a79720e93e3fec4ae5feb1b52f29",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899656/avalanche2019/lj0meqmthiksvabgrgtf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899656/avalanche2019/lj0meqmthiksvabgrgtf.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "printed my openscad model"
  },
  {
    "_id": "DKk7udti4Y7eQ7Ldn",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:35:29.869Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wsaqfotjgusn4gmithth",
        "version": 1548459398,
        "signature": "64713a334744ef0eca765193d4fbff723397c512",
        "width": 3143,
        "height": 2468,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:36:38Z",
        "tags": [],
        "bytes": 1526377,
        "type": "upload",
        "etag": "4b5a241be04724bc8f1f0e7db6d05ba9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459398/avalanche2019/wsaqfotjgusn4gmithth.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459398/avalanche2019/wsaqfotjgusn4gmithth.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tiles generated in class",
    "inspiration_name": "inCLass_tiles"
  },
  {
    "_id": "DLDtpRTriZeEJd2hK",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T03:11:59.813Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jvlzzbtxrupvswzesk9i",
        "version": 1554433925,
        "signature": "b21dc6845ec4d3f74596c2e6b9db040752bf1e70",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T03:12:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 763801,
        "type": "upload",
        "etag": "d2a61fcde288a2a5b0edc3b4cadad356",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554433925/avalanche2019/jvlzzbtxrupvswzesk9i.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554433925/avalanche2019/jvlzzbtxrupvswzesk9i.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1260046",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 1271729,
        "duration": 4.8048,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nvar speed=600;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\ttextSize(32);\n}\n\nfunction draw(){\n\tbackground('#e69db7');\n\n\t\nnoStroke();\n\tpush();\n\twindmill1();\n\tpop();\n\tpush();\n\twindmill2();\n\tpop();\n\t\n\tpush();\n\twindmill3();\n\tpop();\n\t\n\tpush();\n\twindmill4();\n  pop();\n\tstrokeWeight(5);\n    stroke(0);\n  line(width/2,height/2,width/2,900);\nfill(0);\n\tellipse(width/2,height/2,20);\n}\n\n\nfunction windmill1(){\n\ttranslate(width/2,height/2);\n\trotate(millis() / speed);\n\tbeginShape();\n\t\n  fill('#d83737');\n\tvertex(0,0);\n\tvertex(0,-200);\n\tvertex(70,-150);\n\tvertex(70,0);\n  vertex(0,0);\n\t\n\tendShape();\n}\n\nfunction windmill2(){\n\ttranslate(width/2,height/2);\n  rotate(millis() / speed);\n\tbeginShape();\n\n\tfill('#f7d850');\n\tvertex(0,0);\n\tvertex(200,0);\n\tvertex(150,70);\n\tvertex(0,70);\n\tvertex(0,0);\n\t\n\tendShape();\n}\n\nfunction windmill3(){\n\ttranslate(width/2,height/2);\n  rotate(millis() / speed);\n\tbeginShape();\n\t\n  fill('#b8dee0');\n\tvertex(0,0);\n\tvertex(0,200);\n\tvertex(-70,150);\n\tvertex(-70,0);\n\tvertex(0,0);\n\t\n\tendShape();\n}\n\n\nfunction windmill4(){\n\ttranslate(width/2,height/2);\n  rotate(millis() / speed);\n\tbeginShape();\n\n\tfill('#1ab57d');\n\tvertex(0,0);\n\tvertex(-200,0);\n\tvertex(-150,-70);\n\tvertex(0,-70);\n\tvertex(0,0);\n\t\n\tendShape();\n}",
    "description": "windmill"
  },
  {
    "_id": "DNCTmJKnCzCdaPyET",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T08:35:04.789Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x4feqb2envsmvnjuvg9n",
        "version": 1552638909,
        "signature": "c2e5fc685a55e6f9b4ded59f814a3e2b5760f57e",
        "width": 992,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T08:35:09Z",
        "tags": [],
        "bytes": 233033,
        "type": "upload",
        "etag": "05db0194c14e9341ac71803a83e1ea57",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552638909/avalanche2019/x4feqb2envsmvnjuvg9n.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552638909/avalanche2019/x4feqb2envsmvnjuvg9n.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T15:48:34.864Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T15:52:51.292Z" }
      }
    ],
    "title": "",
    "description": "Flower",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tnoFill();\n\tbackground(color('#2D2893'));\n\tnoLoop();\n   \n\n\tmyTurtle = new Turtle();\n}\n\n\n\nfunction draw() {\n     strokeWeight(5);\n    stroke(255,50);\n    line(250,220,250,500)\n     strokeWeight(1);\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(200, 200);\n\tmyTurtle.penDown();\n\n\tfor (var i = 0; i < 1000; i++) {\n       \tstroke(random(230,250),random(50,100),random(10),50);\n\t\tmyTurtle.moveForward(100 + i * 0.1);\n\t\tmyTurtle.turnLeft(40);\t\n        myTurtle.turnLeft(60);\n        myTurtle.turnLeft(120);\t\n\t}\n    \n    fill(color('#FFD710'),);\n    ellipse(250,220,40,40);\n    strokeWeight(0);\n    fill(color('#307205'),);\n    triangle(253, 400, 253, 430, 280, 370);\n\n   \n}"
  },
  {
    "_id": "DRTEELQaqr6yz4s7L",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:05:07.913Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lg2gaxuu4hcrw7ng6sko",
        "version": 1555092353,
        "signature": "9d41a36fc9d0aacea5a400af6ac16d1cc15604c7",
        "width": 936,
        "height": 902,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T18:05:53Z",
        "tags": [],
        "bytes": 147572,
        "type": "upload",
        "etag": "f9748d4d73f718895368c70fad1a5672",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555092353/avalanche2019/lg2gaxuu4hcrw7ng6sko.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555092353/avalanche2019/lg2gaxuu4hcrw7ng6sko.png"
      },
      {
        "public_id": "avalanche2019/ibyaghdhlpf4jphvlwof",
        "version": 1555092364,
        "signature": "e8a4cbe082f6eae2bcd30ff9454a007d7aa837ed",
        "width": 974,
        "height": 864,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T18:06:04Z",
        "tags": [],
        "bytes": 138014,
        "type": "upload",
        "etag": "d06035bae592e2960761576bbf3c298c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555092364/avalanche2019/ibyaghdhlpf4jphvlwof.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555092364/avalanche2019/ibyaghdhlpf4jphvlwof.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "'Tis the season for finals monster and demons:\ndark and stormy night challenge",
    "code": "// require /text/tracery.min.js\n    \n    const storyGrammar = {\n    \"story\": [\"It was a dark and Stormy night, #person# was working tirelessly #location# to finish their #project#. Then, all of a sudden, #event1#. they #event2#. The next thing they know #event 3#\"],\n    \"person\" : [\"brooke\", \"jo\", \"anna\", \"janice\", \"akshansh\", \"kathrin\", \"tinsly\", \"brad\", \"alonso\", \"noah\", \"batool\", \"ray\", \"pheobe\", \"andrew\", \"felix\", \"jungu\", \"archit\", \"ivy\", \"kevin\"],\n    \"location\" : [\"on d12\", \"in their apartment\", \"in the making center\", \"in the library\", \"in a dark basement\"],\n    \"project\" : [\"studio final\", \"thesis\", \"research paper\", \"final project\", \"final\"],\n    \"event1\" : [\"#monsterArrives#\"], \n    \"monsterArrives\": [\"#adjective.a# #noun# #monster#, comes in and #action# their #project#, #secondaryAction# all the while\"], \n    \"monster\": [\"witch\", \"warewolf\", \"golem\", \"zombie\", \"Cyclops\", \"Demon\", \"sea-goat\"], \n    \"adjective\": [\"evil\", \"synical\", \"crazed\", \"hateful\", \"sinsister\", \"blood-thirsty\", \"satanic\", \"sinister\", \"spiteful\"],\n    \"noun\": ['arduino', \"laptop\", \"unity\", \"programming\", \"animation\", \"javascript\", \"python\", \"rasberry-pi\", \"breadboard\", \"processing\"],\n    \"action\": [\"smashes\", \"eats\", \"crushes\", \"pours a bucket of water on\", \"steals\", \"breaks\", \"short-circuits\", \"deletes\", \"pours acid on\"], \n    'secondaryAction': [\"hissing\", \"laughing\", \"cackling\", \"chanting\", \"growling\", \"chuckling\"],\n    'event2': [\" #reaction# thinking #thinking#\"], \n    'reaction': ['scream out', 'start crying', 'become paralyzed', 'fall to the ground'],\n    'thinking': ['all is lost', 'i dont even care anymore', 'how can this be', 'this sucks', 'my life is over', 'I am going to fail'],\n    'event 3':['they find themselves #awake# #location# and realize they #realize# and that #state#'],\n    'awake': ['in bed', 'slumped over a table','on the floor', 'head on computer'], \n    'realize': ['were asleep', 'had dozed off in class', 'were emerging from sleep paralysis', 'were day dreaming'],\n    'state':['they have two more weeks to finish the final', 'their project is fine', 'their computer is safe', 'they have been out of school for 5 years', 'thesis isnt unitl next year', 'its summer break'],\n    \n    }\n    \n    \n    function main() {\n        let grammar = tracery.createGrammar(storyGrammar);\n        let story = grammar.flatten(\"#story#\");\n    \n        const storyDiv = document.createElement('div');\n        storyDiv.style = \"font-size: 20px; margin: 10%; line-height: 1.5; font-family: helvetica; color: grey\"; \n        storyDiv.textContent = story;\n    \n        document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    }\n    \n    \n    setTimeout(main, 10);"
  },
  {
    "_id": "DYYFnn4ASLcLroneW",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T01:53:50.158Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/w65vkcttr47ifwhpyzdc",
        "version": 1550628477,
        "signature": "487c0173b48f964a2a47bdfa0dd5571a9356e448",
        "width": 1500,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-20T02:07:57Z",
        "tags": [],
        "bytes": 1227243,
        "type": "upload",
        "etag": "65db2529f766ea67bd673b92c9670f22",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550628477/avalanche2019/w65vkcttr47ifwhpyzdc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550628477/avalanche2019/w65vkcttr47ifwhpyzdc.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-20T17:48:00.904Z" }
      },
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-02-20T18:19:45.298Z" }
      }
    ],
    "title": "",
    "description": "Initial sketches of flowers. Not sure where I want to go with this yet, but thought they looked sweet on their own too.",
    "inspiration_name": "Spiral Shape",
    "inspiration_url": "https://editor.p5js.org/craigson/sketches/H1Q0ZsKT"
  },
  {
    "_id": "DeSnAzahYYJAFg7Fm",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:20:39.253Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kgudf64y5ijdivx8mkmk",
        "version": 1552076486,
        "signature": "56a136a4e9157ea0728e47f201f3ac2031e12dc6",
        "width": 1440,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-08T20:21:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 19294223,
        "type": "upload",
        "etag": "855626adc02573080596836cb279cf9d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552076486/avalanche2019/kgudf64y5ijdivx8mkmk.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552076486/avalanche2019/kgudf64y5ijdivx8mkmk.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "189375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "2841658",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 3038779,
        "duration": 50.76,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:36:24.803Z" }
      }
    ],
    "title": "",
    "description": "⚠️WARNING⚠️: I put this cheesy a$$ piano music and Carl Sagan's speech in the background, look away. Done in Photoshop 3D."
  },
  {
    "_id": "DnCHWFbuyifhoL9nx",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T16:16:29.689Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hlowvfomgqsubf1o74dc",
        "version": 1552580193,
        "signature": "ed3455b91114f8edf1240f0b781ab67df89e180b",
        "width": 598,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T16:16:33Z",
        "tags": [],
        "bytes": 369316,
        "type": "upload",
        "etag": "be9e964853648a977a2d6d71036d38bb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552580193/avalanche2019/hlowvfomgqsubf1o74dc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552580193/avalanche2019/hlowvfomgqsubf1o74dc.png"
      },
      {
        "public_id": "avalanche2019/xglrgspohpdyz8shs7x6",
        "version": 1552580225,
        "signature": "4548f4608843ba9276442802c6e80b2d2c8ab6b7",
        "width": 598,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T16:17:05Z",
        "tags": [],
        "bytes": 424647,
        "type": "upload",
        "etag": "ae7022fa87b85c4a4ea672097cf4424c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552580225/avalanche2019/xglrgspohpdyz8shs7x6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552580225/avalanche2019/xglrgspohpdyz8shs7x6.png"
      },
      {
        "public_id": "avalanche2019/jwjmel0qtpprcmcd58fk",
        "version": 1552580244,
        "signature": "6d4cba3cdda96bc7eb7e63e80c61842bf1111eb3",
        "width": 598,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T16:17:24Z",
        "tags": [],
        "bytes": 481795,
        "type": "upload",
        "etag": "31a4fcf7a4b586354a7f5e8917454fac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552580244/avalanche2019/jwjmel0qtpprcmcd58fk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552580244/avalanche2019/jwjmel0qtpprcmcd58fk.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:00:31.238Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n    createCanvas(600, 600);\n    noFill();\n    stroke(255);\n    background(0);\n    noLoop();\n    myTurtle = new Turtle();\n}\n\n\n\n//tree 1\nfunction draw() {\n    myTurtle.penUp();\n    myTurtle.moveTo(600, 600);\n    myTurtle.turnTo(-70);\n    myTurtle.penDown();\n    drawBranch(500);\n}\n\n\n\n\nfunction drawBranch(length) {\n\n    if (length < 2) {\n        return;\n    }\n\n    // draw this branch\n    strokeWeight(length / 40);\n    myTurtle.moveForward(length * .5);\n    myTurtle.turnLeft(-5);\n    myTurtle.moveForward(length * .55);\n\n    // left child\n    myTurtle.pushState();\n    myTurtle.turnLeft(random(200, 30));\n    drawBranch(length * 0.75);\n    //drawBranch(length * random(.5, .9));\n\n    myTurtle.popState();\n\n    // right child\n    myTurtle.pushState();\n    myTurtle.turnRight(random(50, 20));\n    drawBranch(length * 0.75);\n    //drawBranch(length * random(.5, .9));\n    myTurtle.popState();\n  \n\n\n}\n\n\n// Turtle\n// Basic turtle graphics implementation:\n// https://en.wikipedia.org/wiki/Turtle_graphics\n// For more info on Javascript OOP:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript\n//\n// The turtle's coordinate system uses pixels for distance and degrees for rotations\n// 0 degrees is straight right (east); positive degrees are clockwise\n\n// Turtle constructor\n// takes optional x, y starting coordinates (default is center of sketch)\nfunction Turtle(x, y) {\n  // assign default values to x and y if they were not passed\n  if (typeof x === \"undefined\") {\n    x = width * 0.5;\n  }\n  if (typeof y === \"undefined\") {\n    y = height * 0.5;\n  }\n  this.x = x;\n  this.y = y;\n  this.bearingRadians = 0;\n  this.isPenDown = true;\n  this._stateStack = [];\n}\n\n// moveTo instantly transports the turtle to the provided x, y location, drawing a line if pen is down\nTurtle.prototype.moveTo = function (newX, newY) {\n  if (this.isPenDown) {\n    line(this.x, this.y, newX, newY);\n  }\n  this.x = newX;\n  this.y = newY;\n};\n\n// moveForward moves the turtle along its current bearing, drawing a line if pen is down\nTurtle.prototype.moveForward = function (distance) {\n  var newX = this.x + cos(this.bearingRadians) * distance;\n  var newY = this.y + sin(this.bearingRadians) * distance;\n  this.moveTo(newX, newY);\n};\n\n// moveBackward moves the turtle backward from its current bearing, drawing a line if pen is down\nTurtle.prototype.moveBackward = function (distance) {\n  this.moveForward(-distance);\n};\n\n// turnTo changes the turtle's bearing to the provided angle in degrees\nTurtle.prototype.turnTo = function (angleDegrees) {\n  this.bearingRadians = radians(angleDegrees);\n};\n\n// turnRight rotates the turtle's bearing clockwise by the provided angle in degrees\nTurtle.prototype.turnRight = function (amountDegrees) {\n  this.bearingRadians += radians(amountDegrees);\n};\n\n// turnLeft rotates the turtle's bearing counter-clockwise by the provided angle in degrees\nTurtle.prototype.turnLeft = function (amountDegrees) {\n  this.bearingRadians -= radians(amountDegrees);\n};\n\n// penUp tells the turtle to move without drawing\nTurtle.prototype.penUp = function () {\n  this.isPenDown = false;\n};\n\n// penDown tells the turtle to draw a line when it moves\nTurtle.prototype.penDown = function () {\n  this.isPenDown = true;\n};\n\n// pushState records the turtle's current state (position, bearing, etc.) to a stack so that changes can be undone easily\nTurtle.prototype.pushState = function () {\n  this._stateStack.push({\n    x: this.x,\n    y: this.y,\n    bearingRadians: this.bearingRadians,\n    isPenDown: this.isPenDown\n  });\n};\n\n// popState restores the turtle's state to the top recorded state on the stack\nTurtle.prototype.popState = function () {\n  if (this._stateStack.length === 0) {\n    console.error(\n      \"Turtle: No states left on stack. Make sure your calls to .pushState and .popState are balanced.\"\n    );\n    return;\n  }\n  var state = this._stateStack.pop();\n  this.x = state.x;\n  this.y = state.y;\n  this.bearingRadians = state.bearingRadians;\n  this.isPenDown = state.isPenDown;\n};\n\n// image draws and image centered on the turtle's current location and alligned with the turtle's rotation (forward = up)\nTurtle.prototype.image = function (i, w, h) {\n  // w, h are optional parameters to this function and to p5's image\n  // p5's image function will draw the image at its \"normal\" size if w and h are undefined\n\n  push();\n  translate(this.x, this.y);\n  rotate(this.bearingRadians + PI * 0.5);\n  imageMode(CENTER);\n  image(i, 0, 0, w, h);\n  pop();\n};",
    "description": "Another EDM album cover generator."
  },
  {
    "_id": "Dq3GTjbRqzT6LFE3Y",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-24T18:38:27.64Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hpd4xnphncliq8wwo4oz",
        "version": 1556131118,
        "signature": "b33c8734d8ef16208a0e9ca01011a925efa5d6d7",
        "width": 549,
        "height": 506,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-24T18:38:38Z",
        "tags": [],
        "bytes": 67958,
        "type": "upload",
        "etag": "c7144d40ddccdcd6d64c6be3886702cc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556131118/avalanche2019/hpd4xnphncliq8wwo4oz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556131118/avalanche2019/hpd4xnphncliq8wwo4oz.png"
      },
      {
        "public_id": "avalanche2019/t82lw5m20fn8ncow118z",
        "version": 1556282391,
        "signature": "2725771ce95ad6bf04a1955ecb23fa9784e65ff0",
        "width": 3308,
        "height": 2160,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-26T12:39:51Z",
        "tags": [],
        "bytes": 1408164,
        "type": "upload",
        "etag": "3ef3bf68cc6241fbbcbbac5189a7e94a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556282391/avalanche2019/t82lw5m20fn8ncow118z.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556282391/avalanche2019/t82lw5m20fn8ncow118z.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "More Black Sabbath. A auto-generated tune using notes from Iron Man fed into a context free generator.",
    "code": "// Tone.js\n// Black Sabbath - Iron Man Remixed\n\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n\n// First, create the synth.\n// Synth types: PolySynth, MonoSynth, Synth, DuoSynth, AMSynth, FMSynth, PluckSynth, MetalSynth, etc.\n// const synth = new Tone.Synth().toMaster();\nconst synth = new Tone.PolySynth({\n    //   oscillator: {\n    //type: 'sine',\n    // sine, square, triangle, sawtooth, fat*\n    //   },\n    envelope: {\n        attack: 0.2,\n        decay: 1,\n        sustain: 2,\n        release: 3,\n        \n    },\n});\n\n// Connect to the speakers.\nsynth.toMaster();\n\n\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n\n['E5', '1n'],\n['D5', '1n'],\n['E5', '1n'],\n['E5', '1n'],\n['D5', '2n'],\n['D5', '1n'],\n['D5', '1n'],\n['E5', '2n'],\n['E5', '1n'], \n['E5', '1n'], \n['G5', '4n'], \n['D5', '2n'], \n['F5', '4n'], \n['G5', '4n'], \n['D5', '2n'],\n['F5', '4n'], \n['G5', '4n'], \n['E5', '1n'], \n['F5', '4n'], \n['G5', '4n'], \n['D5', '2n'], \n['F5', '4n'], \n['F5', '4n'], \n['D5', '2n'], \n['E5', '2n'], \n['D5', '1n'], \n['G5', '2n'], \n['E5', '1n'], \n['E5', '1n'], \n['D5', '1n'], \n['D5', '2n'], \n['D5', '1n'], \n['D5', '2n'], \n['G5', '4n'], \n['G5', '2n'], \n['G5', '4n'], \n['F5', '4n'], \n['F5', '4n'], \n['D5', '2n'], \n['F5', '4n'], \n['G5', '2n'], \n];\n\nwindow.onmousedown = (e) => {\n    // Rock on!\n\n    let t = Tone.now();\n    console.log('Iron Man by Black Sabbath:');\n    for (const note of melody) {\n        console.log(note);\n        if (note[0] !== 'rest') {\n            //   synth.triggerAttackRelease(note[0], Tone.Time(note[1]), t);\n            synth.triggerAttackRelease(note[0], Tone.Time(note[1]) + 0.1, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n};\n\nconsole.log('Click to play music!');"
  },
  {
    "_id": "Dq5LfSCG4spqWp3To",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T13:56:57.108Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/afpztawzslpruysld3ha",
        "version": 1555077463,
        "signature": "4bd98bd2177d7a5a34df1affa27192e5bb14a330",
        "width": 1014,
        "height": 140,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T13:57:43Z",
        "tags": [],
        "bytes": 23523,
        "type": "upload",
        "etag": "c9c6d84a1acb23245f61695538bf8a2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555077463/avalanche2019/afpztawzslpruysld3ha.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555077463/avalanche2019/afpztawzslpruysld3ha.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "random generated questions",
    "inspiration_name": "questions"
  },
  {
    "_id": "DqvzGpEunss3aDYb8",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T00:41:53.566Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/glmsx8m8dbrhxz3rlzf4",
        "version": 1554338657,
        "signature": "a9e3995578a4b92ad26243a8c2e1b6e8f5c8b797",
        "width": 504,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-04T00:44:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 244040,
        "type": "upload",
        "etag": "e254e7f63df602d7e2333c3b101bc690",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554338657/avalanche2019/glmsx8m8dbrhxz3rlzf4.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554338657/avalanche2019/glmsx8m8dbrhxz3rlzf4.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "63588",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "1766508",
          "dar": "7:15"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1889342,
        "duration": 1.033333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "'Bye Yellow' - Image sequencing in Photoshop"
  },
  {
    "_id": "DwwmsuXngib5BiCzn",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-30T01:55:56.464Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zaoyowgp0i8qvhb6yjj7",
        "version": 1556589376,
        "signature": "bc04ddc480f4b337c67969926d32082589e3217b",
        "width": 858,
        "height": 894,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-30T01:56:16Z",
        "tags": [],
        "bytes": 52112,
        "type": "upload",
        "etag": "16fd8e8da95cb8a1c574ba9125bba75e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556589376/avalanche2019/zaoyowgp0i8qvhb6yjj7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556589376/avalanche2019/zaoyowgp0i8qvhb6yjj7.png"
      },
      {
        "public_id": "avalanche2019/zatr2svwi7svdb9hz8tg",
        "version": 1556589384,
        "signature": "7d04f3ab2135565a92c22aa0df10047523c77d3d",
        "width": 902,
        "height": 864,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-30T01:56:24Z",
        "tags": [],
        "bytes": 41531,
        "type": "upload",
        "etag": "059fef8d823f973733268ad9012893da",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556589384/avalanche2019/zatr2svwi7svdb9hz8tg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556589384/avalanche2019/zatr2svwi7svdb9hz8tg.png"
      },
      {
        "public_id": "avalanche2019/si9ol0wde6snogxdjodz",
        "version": 1556589428,
        "signature": "049927e2312105f79b6fbd10dd71529f3ee76b17",
        "width": 567,
        "height": 500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-30T01:57:08Z",
        "tags": [],
        "bytes": 27813,
        "type": "upload",
        "etag": "2d702277fc91ab2820d7f95f7e8db527",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556589428/avalanche2019/si9ol0wde6snogxdjodz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556589428/avalanche2019/si9ol0wde6snogxdjodz.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-30T02:48:38.901Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:32:00.783Z" }
      }
    ],
    "title": "",
    "description": "intro opensScad Escher shapes"
  },
  {
    "_id": "DxS6cD3TQNvNjJz5a",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-02-25T19:21:14.183Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rgxyfcr1vzilk2u69ror",
        "version": 1551122608,
        "signature": "f26e1f4e67810b976781e5078a222c3c99f5b620",
        "width": 1060,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-25T19:23:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 12289393,
        "type": "upload",
        "etag": "0ad89a909397b4bfb925b52f4b494f01",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551122608/avalanche2019/rgxyfcr1vzilk2u69ror.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551122608/avalanche2019/rgxyfcr1vzilk2u69ror.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11348996",
          "dar": "53:36"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11365912,
        "duration": 8.65,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "As you mouse over the circles, it gives the illusion of a magnification, but is actually a repulsion force.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet h, s, b;\nb = 100;\n\nlet x, y;\nlet diameter;\n\nlet cursorRad = 10;\n\nlet mousePos;\nlet circPos;\nlet dir;\nlet distance;\n\nlet attraction = p5.createVector;\nlet repulsion = p5.createVector;\n\nlet circles = [];\nlet attractor;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 100);\n  ellipseMode(CENTER);\n\n  //   for (let i = 0; i < circles.length; i++) {\n  //     diameter = min(random(5, 20), random(5, 20));\n  //     let h = map(diameter, 5, 20, 0, 100);\n  //     fill(h, 100, b);\n  //   }\n}\n\nfunction draw() {\n  background(20);\n  attractor = createVector(mouseX, mouseY);\n  noStroke();\n\n  for (let i = 0; i < 300; i++) {\n    let noiseFrequency = 1;\n    x = noise(i * noiseFrequency, 0) * width;\n    y = noise(i * noiseFrequency, 1000) * height;\n\n    circles.push(new Circle(x, y));\n    if (circles.length > 300) {\n      circles.splice(0, 1);\n    }\n  }\n\n  for (let i = 0; i < circles.length; i++) {\n    let circle = circles[i];\n    circle.attracted(attractor);\n\n    circle.update();\n    circle.show();\n  }\n\n  // noLoop();\n}\n\nfunction Circle(x, y) {\n  this.pos = createVector(x, y);\n  // this.prev = createVector(x, y);\n  this.acc = createVector();\n  this.vel = createVector();\n\n  this.update = function() {\n    this.vel.add(this.acc);\n    this.vel.limit(5);\n    this.pos.add(this.vel);\n    this.acc.mult(0);\n  };\n\n  this.show = function() {\n    diameter = min(random(5, 20), random(5, 20));\n    let h = map(diameter, 5, 20, 0, 100);\n    fill(h, 100, b);\n    ellipse(this.pos.x, this.pos.y, diameter, diameter);\n  };\n\n  this.attracted = function(target) {\n    let force = p5.Vector.sub(target, this.pos);\n    let d = force.mag();\n    // d = constrain(d, 1, 25);\n    // let G = 50;\n    // let strength = G / (d * d);\n    // force.setMag(strength);\n    if (d < 100) {\n      force.mult(-10);\n    }\n    this.acc.add(force);\n  };\n}"
  },
  {
    "_id": "DxocEW37gem4xqqvX",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T19:25:49.255Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qytv83hbnyrey5pxr9ie",
        "version": 1556306757,
        "signature": "d82c2e8dab309f22f8643ba416c578c8f5a47385",
        "width": 636,
        "height": 1180,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T19:25:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 7754732,
        "type": "upload",
        "etag": "2fe8514ee27ea28eb30d73a88bfc103c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556306757/avalanche2019/qytv83hbnyrey5pxr9ie.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556306757/avalanche2019/qytv83hbnyrey5pxr9ie.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "308307",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2934406",
          "dar": "159:295"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3250892,
        "duration": 19.083333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "Dy8JJNxLscmcSjApb",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T16:20:20.831Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/urd4vbbbnqbkuloutg8b",
        "version": 1555086686,
        "signature": "daccce9005bfdbdd866e6cacd1949dbcf8e96695",
        "width": 2880,
        "height": 1800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-12T16:31:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 1276178,
        "type": "upload",
        "etag": "6c0478ca07a446fd9f17ee3d5d6d44e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555086686/avalanche2019/urd4vbbbnqbkuloutg8b.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555086686/avalanche2019/urd4vbbbnqbkuloutg8b.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "2597674",
          "dar": "8:5"
        },
        "frame_rate": 60,
        "bit_rate": 2792130,
        "duration": 3.6565,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Random Scam Generator"
  },
  {
    "_id": "E4tMs9McEEZgKXY6J",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:30:39.819Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pet2ur9ag18weuolrgtr",
        "version": 1548459092,
        "signature": "95ba9439442ed05b2021a1edd6998e103b739ccc",
        "width": 3024,
        "height": 4032,
        "format": "heic",
        "resource_type": "image",
        "created_at": "2019-01-25T23:31:32Z",
        "tags": [],
        "bytes": 1018445,
        "type": "upload",
        "etag": "824a5b18d9995e98cc45431297f958a4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459092/avalanche2019/pet2ur9ag18weuolrgtr.heic",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459092/avalanche2019/pet2ur9ag18weuolrgtr.heic"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "E6J4vpRGRCmabvQkS",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-29T04:47:31.809Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pj3uem46lpio2tezwpqk",
        "version": 1548737663,
        "signature": "5553a0328b2c04aaa8ee293171f88bb46b352fff",
        "width": 1420,
        "height": 2039,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-29T04:54:23Z",
        "tags": [],
        "bytes": 1288937,
        "type": "upload",
        "etag": "ee748b7d806dc672610f2ffa1e773850",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548737663/avalanche2019/pj3uem46lpio2tezwpqk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548737663/avalanche2019/pj3uem46lpio2tezwpqk.jpg"
      },
      {
        "public_id": "avalanche2019/rfcdqgwqzcz2cruevxw4",
        "version": 1548737696,
        "signature": "08e2774e7731696c840d8208ba8c2b556fb80204",
        "width": 632,
        "height": 892,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-01-29T04:54:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 10053564,
        "type": "upload",
        "etag": "da1e780f2a38bcfa59d141c90809a5a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548737696/avalanche2019/rfcdqgwqzcz2cruevxw4.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548737696/avalanche2019/rfcdqgwqzcz2cruevxw4.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "95277",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "4117314",
          "dar": "158:223"
        },
        "is_audio": false,
        "frame_rate": 10.583333333333334,
        "bit_rate": 4134765,
        "duration": 19.435102,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/sck9tmogushrxjmdoufg",
        "version": 1548737836,
        "signature": "939bf2292633f81f15829979f1018139da9873cb",
        "width": 1418,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-01-29T04:57:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 18292840,
        "type": "upload",
        "etag": "b4c753463e3ce275d93dace3e56955fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548737836/avalanche2019/sck9tmogushrxjmdoufg.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548737836/avalanche2019/sck9tmogushrxjmdoufg.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "2283",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "18280915",
          "dar": "709:1019"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 18147658,
        "duration": 8.042,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:31.223Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:43.225Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:11.963Z" }
      }
    ],
    "title": "",
    "description": "In this piece, I have created a glitch art of the New York Subway map to depict the superposition of technology on our vision. It is a dystopian look at the use of Augmented Reality and how everything would be overlaid by tech. \nI was inspired by the film Anon.",
    "inspiration_name": "NYC Subway Glitch",
    "inspiration_url": "https://next.reality.news/news/netflix-film-anon-paints-dystopian-view-augmented-reality-obliterates-privacy-0184560/"
  },
  {
    "_id": "E7ipLLkQ2EcTXyvPR",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T16:39:54.049Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/va0gahuyih7pushyvasu",
        "version": 1555692012,
        "signature": "77a354c98a2bb91f32533f4288c00031a0848ea9",
        "width": 786,
        "height": 790,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-19T16:40:12Z",
        "tags": [],
        "bytes": 326365,
        "type": "upload",
        "etag": "8cb73783a7f0d1eaa85f8f69cb205a65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555692012/avalanche2019/va0gahuyih7pushyvasu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555692012/avalanche2019/va0gahuyih7pushyvasu.jpg"
      },
      {
        "public_id": "avalanche2019/giszecbu71bguauvam0t",
        "version": 1555692015,
        "signature": "fb24146ae861fbb7ec6d90efb02775718c4cf159",
        "width": 788,
        "height": 786,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-19T16:40:15Z",
        "tags": [],
        "bytes": 336078,
        "type": "upload",
        "etag": "e0f6a22e84213106e5b5e3e6752db239",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555692015/avalanche2019/giszecbu71bguauvam0t.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555692015/avalanche2019/giszecbu71bguauvam0t.jpg"
      },
      {
        "public_id": "avalanche2019/lmgkruy6rpkzyqgrgglv",
        "version": 1555692246,
        "signature": "c6f46ee4e1cecdfa918adabc98270271ba3b7fe9",
        "width": 784,
        "height": 776,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T16:44:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 15452325,
        "type": "upload",
        "etag": "6ffe7423a3db3b2ffb3965716e3887a5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555692246/avalanche2019/lmgkruy6rpkzyqgrgglv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555692246/avalanche2019/lmgkruy6rpkzyqgrgglv.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "304266",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6673908",
          "dar": "98:97"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7397660,
        "duration": 16.7105,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T16:47:01.747Z" }
      }
    ],
    "title": "",
    "description": "FFT and levels on a song I made a while ago in Ableton Live",
    "inspiration_name": "Song",
    "inspiration_url": "http://felixbuchholz.com/works/oaia",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n// require /turtles/turtle/turtle.js\n\nvar gridAmount = 320;\nvar gridColumns = 18;\nvar gridRows = gridAmount / gridColumns;\n// console.log(gridRows);\nvar margin = { top: 80, right: 80, bottom: 80, left: 80 };\nvar w = 400;\nvar h = 400;\nvar gridSize = w / gridColumns;\n\n\nfunction preload() {\n  // change = loadSound('03_change_for_the_better_0008FBOAIA16.wav');\n  change = loadSound('05_y_r_u_so_supercillious_0004_1FBOAIA16.wav');\n}\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  createCanvas(w , h);\n  window.button = createButton('start');\n  button.mousePressed(togglePlay);\n  background(0, 0, 0.2);\n\n  fft = new p5.FFT();\n  amplitude = new p5.Amplitude();\n}\n\nfunction draw() {\n  if (play) {\n    myUpdate()\n  }\n}\n\nfunction myUpdate() {\n  blendMode(BLEND);\n  background(0.1, 1, 0.3);\n  // blendMode(ADD);\n  // translate(margin.left, margin.top); \n\n  // let x = sin(frameCount * 0.1) * 21 * oscA.value() +\n  // cos(frameCount * 0.01) * 12* oscB.value() +\n  // sin(frameCount * 0.001) * 32* oscC.value();\n\n  // let y = sin(frameCount * 0.001) * 21 * oscA.value() +\n  // cos(frameCount * 0.01) * 12* oscB.value() +\n  // sin(frameCount * 0.1) * 32* oscC.value();\n  \n  var levelL = amplitude.getLevel(0);\n  var sizeL = map(levelL, 0, 1, 700, 2000);\n  fill(0.13, 1, 1, 0.4+levelL);\n  ellipse(0-margin.left, h/2, sizeL, sizeL);\n  \n  var levelR = amplitude.getLevel(1);\n  var sizeR = map(levelR, 0, 1, 700, 2000);\n  console.log(w*0.75);\n  fill(0.13, 1, 1, 0.4+levelR);\n  ellipse(w+margin.left, h/2, sizeR, sizeR);\n\n\n  var spectrum = fft.analyze();\n  // console.log(spectrum);\n  for (var i = 0; i < spectrum.length*0.4; i++) {\n    xPos = (i % gridColumns) * gridSize;\n    yPos = floor(i / gridColumns) * gridSize;\n    noFill();\n    stroke(0.13, 1, 1);\n    strokeWeight(0.5)\n    textSize(100);\n    textAlign(CENTER);\n    text(spectrum[i], xPos, yPos);\n  }\n\n}\n\nvar play = false;\nfunction togglePlay() {\n  if (play) {\n    change.pause()\n    play = false;\n    button.elt.innerHTML = \"start\"\n\n  } else {\n    play = true;\n    change.play(0, 1, 0.5);\n    button.elt.innerHTML = \"stop\"\n\n  }\n}"
  },
  {
    "_id": "EBupFTYKMBio6A8qn",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-06T22:04:14.203Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/m8muw7jy4jvvpjnkzysz",
        "version": 1554588281,
        "signature": "db6980026e76fb5b2d9c070e5a74d47933d27b1a",
        "width": 1540,
        "height": 332,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-06T22:04:41Z",
        "tags": [],
        "bytes": 83578,
        "type": "upload",
        "etag": "758239ce568e428da830ea61a85e8850",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554588281/avalanche2019/m8muw7jy4jvvpjnkzysz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554588281/avalanche2019/m8muw7jy4jvvpjnkzysz.png"
      },
      {
        "public_id": "avalanche2019/y2s8tnmhe7mw9id3pcyf",
        "version": 1554588284,
        "signature": "70a3ea44e3f835be24c87df11005e55a7c97eb9c",
        "width": 1530,
        "height": 338,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-06T22:04:44Z",
        "tags": [],
        "bytes": 82807,
        "type": "upload",
        "etag": "63fb2a22e60cca0892cce940a9ac2209",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554588284/avalanche2019/y2s8tnmhe7mw9id3pcyf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554588284/avalanche2019/y2s8tnmhe7mw9id3pcyf.png"
      },
      {
        "public_id": "avalanche2019/sgdscye6zcoadhxbdv9b",
        "version": 1554588287,
        "signature": "b5728e96d8d907aebe5d386f093458c8bf23236f",
        "width": 1554,
        "height": 268,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-06T22:04:47Z",
        "tags": [],
        "bytes": 80997,
        "type": "upload",
        "etag": "d1523d2b31820d005ebf91a474c23f57",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554588287/avalanche2019/sgdscye6zcoadhxbdv9b.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554588287/avalanche2019/sgdscye6zcoadhxbdv9b.png"
      }
    ],
    "votes": [
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "funny",
        "created_at": { "$date": "2019-04-07T17:15:46.272Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-08T03:21:59.141Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-04-08T14:25:45.224Z" }
      }
    ],
    "title": "",
    "description": "Mythical random title generator.",
    "code": "// require /text/tracery.min.js\n\nconst name = {\n  // top: [\"#div#\"],\n  sentence: \"#noun#, the #adj# #conj# #adj# #noun2#\",\n  noun: [\n    \"Crayon\",\n    \"Boban\",\n    \"Brad\",\n    \"Felix\",\n    \"Brooke\",\n    \"Akshansh\",\n    \"Janice\",\n    \"Anna\",\n    \"Katherin\",\n    \"Phoebe\",\n    \"Ray\",\n    \"Tinsley\",\n    \"Noah\",\n    \"Batool\",\n    \"Andrew\",\n    \"Alonso\",\n    \"Ivy\",\n    \"Jo\",\n    \"Jungu\",\n    \"Archit\",\n    \"Kevin\",\n    \"Justin\"\n  ],\n  adj: [\n    \"slimy\",\n    \"grumpy\",\n    \"sneezy\",\n    \"bear-hugging\",\n    \"wet\",\n    \"arcadian\",\n    \"calamatous\",\n    \"egregious\",\n    \"histronic\",\n    \"luminous\",\n    \"radiant\",\n    \"bearded\",\n    \"sticky\",\n    \"magical\",\n    \"blathering\",\n    \"dusty\",\n    \"thirsty\",\n    \"moist\",\n    \"raspy\",\n    \"cuddly\",\n    \"damp\",\n    \"stale\",\n    \"silky\",\n    \"tart\",\n    \"morose\",\n    \"coarse\",\n    \"knee-slapping\",\n    \"crabby\",\n    \"mushy\",\n    \"elderly\",\n    \"aloof\",\n    \"plastic\",\n    \"macho\",\n    \"educated\",\n    \"neighborly\",\n    \"maniacal\",\n    \"useless\",\n    \"plump\"\n  ],\n  conj: [\"but\", \"yet\", \"and\", \"if not\"],\n  noun2: [\n    \"piglet\",\n    \"starfish\",\n    \"anaconda\",\n    \"choir boy\",\n    \"chair\",\n    \"step stool\",\n    \"bump\",\n    \"lump\",\n    \"llama\",\n    \"goblin shark\",\n    \"narwhal\",\n    \"panda\",\n    \"spiny lumpsucker\",\n    \"fungus beetle\",\n    \"pink fair armadillo\",\n    \"ant\",\n    \"satanic leaf-tailed gecko\",\n    \"womp womp\",\n    \"chicken turtle\",\n    \"blobfish\",\n    \"tertahedron\",\n    \"smart person\",\n    \"grandma\",\n    \"grandpa\",\n    \"uncle\",\n    \"aunt\",\n    \"band-aid\",\n    \"trust fund\",\n    \"cleaver\",\n    \"sandwich\",\n    \"panini\",\n    \"egg mc muffin\",\n    \"failure\",\n    \"dirtbag\",\n    \"nibblet\",\n    \"mistake\",\n    \"apologist\",\n    \"baby\",\n    \"flat-earther\",\n    \"muggle\",\n    \"incident\",\n    \"pizza cutter\",\n    \"salami\",\n    \"bloomin onion\",\n    \"flap\",\n    \"gastrointerologist\"\n  ],\n  // div: [\n  //   '<div style=\"border: 10px #borderType# #borderColor#; margin-top: 50px; text-align: center; text-transform: uppercase; font-size: 50px; font-family: helvetica;\">#sentence#</div>'\n  // ],\n  borderType: [\"dashed\", \"dotted\", \"solid\"],\n  borderColor: [\"cyan\", \"fuschia\", \"purple\", \"navy\", \"green\"]\n};\n\nfunction main() {\n  let grammar = tracery.createGrammar(name);\n  let story = grammar.flatten(\"#sentence#\");\n\n  const storyDiv = document.createElement(\"div\");\n  storyDiv.style =\n    \"border: 10px cyan dotted; margin: 40px; text-align: center; color: fuchsia; text-shadow: 2px 2px 2px cyan; text-transform: uppercase; font-size: 50px; font-family: courier-new\";\n\n  storyDiv.textContent = story;\n\n  document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n  console.log(story);\n}\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "EMbtsNuXKo6yYkjgY",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T03:28:05.847Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l9zh26lbeopf8rk3dbn1",
        "version": 1549510335,
        "signature": "7484d6cd4463498180e5f7939e0eb5925b477f4a",
        "width": 1536,
        "height": 1208,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-07T03:32:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 6269072,
        "type": "upload",
        "etag": "0fe9a3ff55bbce1c9775c1fd40137ea2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549510335/avalanche2019/l9zh26lbeopf8rk3dbn1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549510335/avalanche2019/l9zh26lbeopf8rk3dbn1.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2567227",
          "dar": "192:151"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2582965,
        "duration": 19.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tried to make an infinitely looping portal but this was the result. Click on the mouse repeatedly to add a square to the canvas. Each click only adds one square but it bounces around the screen as it increases in size.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nvar x;\nvar y;\nvar squareSize;\nvar squares = [];\nvar startSquare;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  squareSize = 10;\n  for (var i = 0; i < squares.length; i++) {\n    squares[i] = new Square();\n\n  }\n}\n\nfunction mousePressed() {\n  squares.push(new Square);\n}\n\nfunction draw() {\n  background(0);\n  rectMode(CENTER);\n  for (var i = 0; i < squares.length; i++) {\n    squares[i].drawSquare();\n  }\n}\n\n\nfunction Square() {\n  this.x = width / 2;\n  this.y = height / 2;\n  this.squareSize = 10;\n\n  this.drawSquare = function() {\n\n    noFill();\n    stroke(random(255),random(255), random(255));\n    rect(this.x, this.y, this.squareSize, this.squareSize);\n    this.squareSize += 3;\n    this.x = random(0, windowWidth);\n    this.y = random(0, windowHeight);\n  }\n}"
  },
  {
    "_id": "EXNbvn3qQWqeanS93",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T15:54:50.354Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "EXSKJ38f2B9wpBdkT",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:03:09.797Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vzyykyt2jimtamo8rqdh",
        "version": 1555697252,
        "signature": "d1ebe8bd94212bfc6bdd08bbb43bce6554424b5a",
        "width": 1184,
        "height": 584,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T18:07:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 574721,
        "type": "upload",
        "etag": "baed0da7f863b8451c97a6bc14da3503",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555697252/avalanche2019/vzyykyt2jimtamo8rqdh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555697252/avalanche2019/vzyykyt2jimtamo8rqdh.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "128632",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "1504141",
          "dar": "148:73"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1625801,
        "duration": 2.803991,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "OpenProcessing Sketch",
    "inspiration_url": "https://www.openprocessing.org/sketch/689895"
  },
  {
    "_id": "EYfnZs6RPHFLCNSzc",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:25:14.219Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hpj5duuyevydbequnybg",
        "version": 1555093530,
        "signature": "2b259a8cf944bd8c57919b6941d4210e947ad4df",
        "width": 1354,
        "height": 1350,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-12T18:25:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 484222,
        "type": "upload",
        "etag": "58745e41a95cfc80ed71464ee2798ee4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555093530/avalanche2019/hpj5duuyevydbequnybg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555093530/avalanche2019/hpj5duuyevydbequnybg.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "1464139",
          "dar": "677:675"
        },
        "frame_rate": 60,
        "bit_rate": 1470681,
        "duration": 2.633984,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/mytwybvhfi1za5oyrzsk",
        "version": 1555093534,
        "signature": "58e0616eb5956b6a53ee5034f02400417ee587df",
        "width": 2736,
        "height": 2500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T18:25:34Z",
        "tags": [],
        "bytes": 492721,
        "type": "upload",
        "etag": "0ef0986feb8de4d35539605ce8ad4cba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555093534/avalanche2019/mytwybvhfi1za5oyrzsk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555093534/avalanche2019/mytwybvhfi1za5oyrzsk.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T19:10:44.839Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "EdQjPK8WpyQNhPCZZ",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-08T22:32:56.859Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/onylwenjhezfccs4tmge",
        "version": 1557354785,
        "signature": "ad9f1256a153cf4f73b4774f6c4b9704f8c9a174",
        "width": 976,
        "height": 740,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-08T22:33:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 1199102,
        "type": "upload",
        "etag": "d5398bfa0f178ecf47cd185a8456f3c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557354785/avalanche2019/onylwenjhezfccs4tmge.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557354785/avalanche2019/onylwenjhezfccs4tmge.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "993857",
          "dar": "244:185"
        },
        "frame_rate": 60,
        "bit_rate": 1075990,
        "duration": 8.915333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "EdtbFHxm8L7mfhBML",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:09:15.749Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ghaq6bf2uumvnw23kxlq",
        "version": 1552666171,
        "signature": "cc2d6f1c5e3714689350c7f21f0ac5bb42f20065",
        "width": 1272,
        "height": 1266,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:09:31Z",
        "tags": [],
        "bytes": 159111,
        "type": "upload",
        "etag": "51d42e1b48de32e47d89161908f27942",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552666171/avalanche2019/ghaq6bf2uumvnw23kxlq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552666171/avalanche2019/ghaq6bf2uumvnw23kxlq.png"
      },
      {
        "public_id": "avalanche2019/jsofsiaqdkdw07rfuiqg",
        "version": 1552666175,
        "signature": "0006bf62ec65d6d02f283904b2d1148775e74823",
        "width": 1264,
        "height": 1256,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:09:35Z",
        "tags": [],
        "bytes": 111785,
        "type": "upload",
        "etag": "e30a3f3b5ca1bab1cfefcb5c609cf647",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552666175/avalanche2019/jsofsiaqdkdw07rfuiqg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552666175/avalanche2019/jsofsiaqdkdw07rfuiqg.png"
      },
      {
        "public_id": "avalanche2019/tqnlxghr08jyo0f7ulnt",
        "version": 1552666179,
        "signature": "6335f089c061a14dd81c951826edf0f2a31ebcc5",
        "width": 1276,
        "height": 1268,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T16:09:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 1473132,
        "type": "upload",
        "etag": "82d30d18513bc7779e1f4b5ef75d1724",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552666179/avalanche2019/tqnlxghr08jyo0f7ulnt.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552666179/avalanche2019/tqnlxghr08jyo0f7ulnt.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "746803",
          "dar": "319:317"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 762786,
        "duration": 15.45,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T17:06:00.197Z" }
      }
    ],
    "title": "",
    "description": "Couldn't quite fully recreate the L system but this is still a pretty cool effect",
    "inspiration_name": "sierpinski carpet system",
    "inspiration_url": "http://www.kevs3d.co.uk/dev/lsystems/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet axiom = \"F\";\nlet step = 20;\nlet numLoops = 4;\nlet theRules = [];\ntheRules[0] = [\"F\", \"F+F-F-F-G+F+F+F-F\"];\ntheRules[1] = [\"G\", \"GGG\"];\nlet angle = 90;\nlet currentAngle = 0;\nlet x, y;\nlet whereInString = 0;\nlet h;\n\nfunction setup() {\n  createCanvas(800, 800);\n  colorMode(HSB, 100);\n  myTurtle = new Turtle();\n  background(0);\n  x = 20;\n  y = height / 2;\n\n  myTurtle.penUp();\n  myTurtle.moveTo(x, y);\n  myTurtle.penDown();\n\n  for (let i = 0; i < numLoops; i++) {\n    axiom = lSystem(axiom);\n  }\n}\n\nfunction draw() {\n  h = map(x, 0, height, 0, 100);\n  stroke(h, 100, 100);\n  myTurtle.moveTo(x, y);\n  let k = axiom[whereInString];\n  if (k == \"F\") {\n    x1 = x + step * cos(radians(currentAngle));\n    y1 = y + step * sin(radians(currentAngle));\n    myTurtle.moveTo(x1, y1);\n    x = x1;\n    y = y1;\n  } else if (k == \"+\") {\n    currentAngle += angle;\n  } else if (k == \"-\") {\n    currentAngle -= angle;\n  }\n  whereInString++;\n\n  if (whereInString > axiom.length - 1) {\n    whereInString = 0;\n  }\n}\n\nfunction lSystem(s) {\n  let outputString = \"\";\n\n  //iterate through the rules looking for matches\n  for (let i = 0; i < s.length; i++) {\n    let isMatch = 0;\n    for (let j = 0; j < theRules.length; j++) {\n      if (s[i] == theRules[j][0]) {\n        outputString += theRules[j][1];\n        isMatch = 1;\n        break;\n      }\n    }\n\n    //if nothing matches, copy symbol over\n    if (isMatch == 0) {\n      outputString += s[i];\n    }\n  }\n  return outputString;\n}"
  },
  {
    "_id": "EeboWFLfNFtiCutAX",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T20:54:32.591Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ptxwresctpdl5knlanxf",
        "version": 1549486536,
        "signature": "05611e9b8131fcc90b52449bbae3860b1f402037",
        "width": 992,
        "height": 992,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-06T20:55:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 272147,
        "type": "upload",
        "etag": "797536e358e9d251a3d84dbd48855ec5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549486536/avalanche2019/ptxwresctpdl5knlanxf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549486536/avalanche2019/ptxwresctpdl5knlanxf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "294321",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 300300,
        "duration": 7.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T03:11:53.625Z" }
      }
    ],
    "title": "",
    "description": "Random Lines."
  },
  {
    "_id": "EfyiSA6odCfezKbiQ",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-03-01T20:53:15.903Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yy69dxwcgcmmwbnmswcu",
        "version": 1551473609,
        "signature": "fd207fb855dd941eb33c3870ac0bc774e9f6a988",
        "width": 982,
        "height": 980,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T20:53:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 10628983,
        "type": "upload",
        "etag": "48c0cfc3f0c1ee1b740a653cbd074489",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551473609/avalanche2019/yy69dxwcgcmmwbnmswcu.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551473609/avalanche2019/yy69dxwcgcmmwbnmswcu.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "25889940",
          "dar": "491:490"
        },
        "frame_rate": 60,
        "bit_rate": 25892772,
        "duration": 3.283984,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": ""
  },
  {
    "_id": "Eh9sH56bZXapJBa5Z",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-10T13:10:52.554Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lmkgwyvrb8hflsmfou90",
        "version": 1554901857,
        "signature": "c019bb8647ca419bf8d148d70e9c1094dc9d8691",
        "width": 752,
        "height": 583,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T13:10:57Z",
        "tags": [],
        "bytes": 36158,
        "type": "upload",
        "etag": "c42a9c48a1b249217eeb11764ef721a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554901857/avalanche2019/lmkgwyvrb8hflsmfou90.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554901857/avalanche2019/lmkgwyvrb8hflsmfou90.png"
      },
      {
        "public_id": "avalanche2019/p2bspfaxoxri0kii2dyi",
        "version": 1554901859,
        "signature": "6567ff201334d878262932c535db5de630f0d1f3",
        "width": 752,
        "height": 583,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T13:10:59Z",
        "tags": [],
        "bytes": 34656,
        "type": "upload",
        "etag": "22133c279e28ffa7d61af830b7d94f50",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554901859/avalanche2019/p2bspfaxoxri0kii2dyi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554901859/avalanche2019/p2bspfaxoxri0kii2dyi.png"
      },
      {
        "public_id": "avalanche2019/uudt1ambv5um8ehyai8z",
        "version": 1554901863,
        "signature": "1216d43ef1d3c1a9ed2208f189f7db3049401a5f",
        "width": 752,
        "height": 583,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T13:11:03Z",
        "tags": [],
        "bytes": 36380,
        "type": "upload",
        "etag": "e35f92eb1a613175bb093630d009e92c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554901863/avalanche2019/uudt1ambv5um8ehyai8z.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554901863/avalanche2019/uudt1ambv5um8ehyai8z.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "While working towards an interactive version of the thesis/project concept  generator I designed earlier this semester I accidentally made this...which is probably much cooler than what I'd had planned. I'm bummed I can only share three samples.",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\n\n//Title\nfunction generateTitle() {\n  var name_prefixes = [\"visually rich\", \"non-visual\", \"family/Inter-generational\", \"immersive\", \"hands on\", \"surprising\", \"memorable\", \"critical\", \"speculative\", \"educational\", \"compact\", \"funny\", \"engaging\", \"inclusive\", \"shocking\", \"relaxing\", \"proactive\", \"intuitive\", \"illustrated\", \"lo-poly\", \"sarcastic\"];\n  var primary_nouns = [\"VR\", \"AR\", \"Ai\", \"Wearable\", \"Processing\", \"chatbot\", \"sculptural\", \"Open Frameworks\", \"p5.js\", \"interaction fiction\", \"sketch\", \"painting\", \"analog\", \"projection mapping\", \"film\", \"web series\", \"animated\", \"hand-made\", \"IoT\", \"digital\", \"Chrome extension\", \"sharable\"];\n  var adjectives = [\"Lost\", \"Five\", \"Faded\", \"Ancient\", \"Blackened\", \"Den of\", \"Despairing\", \"Golden\", \"Many\", \"Merry\", \"Clever\", \"Wonderful\", \"Sullen\", \"Angry\", \"Little\", \"Cowardly\", \"Silver\", \"Lasting\", \"Heavy\", \"Festive\", \"Gleeful\", \"Enchanted\", \"Wise\", \"Wistful\", \"Dark\", \"Untold\"];\n  var secondary_nouns = [\"Hearts\", \"Stones\", \"Diamond Dogs\", \"Painted Toes\", \"Songs\", \"Tales\", \"Lords\", \"Promise\", \"Screams\", \"Plagues\", \"Dreams\", \"Roads\", \"Curses\", \"Spells\", \"Gloam\", \"Lands\", \"Marsh\", \"Hearts\", \"Rules\", \"Swamp\", \"Tale\", \"Apex\", \"Beggar\"];\n\n  var name_prefix = sample(name_prefixes);\n  var primary_noun = sample(primary_nouns);\n  var adjective = sample(adjectives);\n  var secondary_noun = sample(secondary_nouns);\n\n  var title = \"\";\n  if (Math.random() < 0.5) {\n    title = `${name_prefix} ${primary_noun} and the ${adjective} ${secondary_noun}`;\n  } else {\n    title = `The ${adjective} ${secondary_noun} of ${name_prefix} ${primary_noun}`;\n  }\n\n  return title;\n}\n\n//Subtitle\nfunction generateSubtitle() {\n  var story_adjectives = [\"personal\", \"societal\", \"global\", \"reusable\", \"emotional\", \"interactive\", \"surprising\", \"replayable\", \"cross platform\", \"thought provoking\", \"darkly humorous\", \"portable\", \"multiplayer\", \"emphathetic\", \"meditative\", \"tattooed\", \"confrontational\", \"political\", \"instructional\"];\n  var story_formats = [\"game\", \"installation\", \"data visualization\", \"social experiement\", \"manifesto\", \"product\", \"service\", \"documentary\", \"app\", \"self promotional piece\", \"recipe\", \"training service\", \"collage\", \"song\", \"conversation\", \"narrative\", \"public intervention\", \"performance\", \"comic book\", \"animation\", \"instrument\", \"web series\"];\n\n  var adjective = sample(story_adjectives);\n  var format = sample(story_formats);\n  var subtitle = `A/An  ${adjective}  ${format}`;\n\n  return subtitle;\n}\n\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\n\n\n\nfunction injectInterface() {\n\n  document.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "EhgErxQfng3gQWGFf",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T19:20:00.564Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/swpfyre0nghkjiznj1ub",
        "version": 1555702656,
        "signature": "ffacaa747a37d460975c2e457f6d081cf7e2cbea",
        "width": 1114,
        "height": 1146,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T19:37:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 764771,
        "type": "upload",
        "etag": "74f0ddb0b2344f3c31bc8613b68cdbcf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555702656/avalanche2019/swpfyre0nghkjiznj1ub.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555702656/avalanche2019/swpfyre0nghkjiznj1ub.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "95422",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "375269",
          "dar": "557:573"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 475505,
        "duration": 12.866667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Updated pong game to make sound effects higher pitch and faster as you level up and speed increases.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\n\n\n\n\n\nlet canvasX = innerWidth * 0.8;\nlet canvasY = innerHeight * 0.8;\nlet speedX = [];\nlet speedY = [];\nlet ballX = [];\nlet ballY = [];\nlet level, paddleSize, score;\nlet color = \"#3A7279\";\nlet highScore = 0;\nlet quantity = 3;\n\nlet kick;\nlet clap;\n\nlet playing = false;\n\nfunction preload() {\n  kick = loadSound('/sound/sketches/kick.wav');\n  clap = loadSound('/sound/sketches/clap.wav');\n}\n\n\nfunction setup() {\n  canvas = createCanvas(canvasX, canvasY);\n//   canvas.parent(\"sketch-holder\");\n  score = 0;\n  // establish ball starting position and speed\n  for (var i = 0; i < quantity; i++) {\n    ballX[i] = random(5, 495);\n    ballY[i] = random(5, 395);\n    speedX[i] = -6;\n    speedY[i] = -6;\n  }\n  // establish starting paddle w x h\n  paddleWidth = 150;\n  paddleHeight = 15;\n}\n\nfunction draw() {\n  background(\"#3d3d3d\");\n\n  // create moving ball that stays within play\n  // create paddle\n  fill(\"#fff\");\n  noStroke();\n  rect(mouseX, windowHeight * 0.725, paddleWidth, paddleHeight, 20);\n\n  for (var i = 0; i < quantity; i++) {\n    fill(\"#EAC771\");\n    noStroke();\n    ellipse(ballX[i], ballY[i], 30, 30);\n    ballX[i] = ballX[i] + speedX[i];\n    ballY[i] = ballY[i] + speedY[i];\n\n    if (ballX[i] >= canvasX - 15 || ballX[i] <= 15) {\n      speedX[i] *= -1;\n      kick.play();\n      \n    }\n    if (ballY[i] <= 15) {\n      speedY[i] *= -1;\n      kick.play();\n    }\n    \n     if (ballY[i] >= canvasY) {\n            kick.stop();\n\n    }\n    // handle ball to paddle contact\n    if (\n      ballX[i] > mouseX &&\n      ballX[i] < mouseX + paddleWidth &&\n      ballY[i] + 15 >= windowHeight * 0.75 - 15 &&\n      ballY[i] < canvasY\n    ) {\n      speedY[i] *= -1;\n      score++;\n      clap.play();\n\n      // make more difficult as you level up\n      if (level == \"INTERMEDIATE\") {\n        speedY[i] = -7;\n        clap.play(0, 1.5, 1.02);\n      }\n      if (level == \"EXPERT\") {\n        speedY[i] = speedY[i] + speedY[i] * 0.05;\n        clap.play(0, 2, 1.1);\n      }\n    }\n\n    // check if all balls are outside canvas\n    function totalLoser(ball) {\n      return ball >= canvasY;\n    }\n\n    // game over message\n    if (ballY.every(totalLoser)) {\n      fill(\"#fff\");\n      noStroke();\n\n      textSize(40);\n      textAlign(CENTER);\n      text(\"Game Over\", canvasX / 2, (windowHeight * 0.65) / 2);\n\n      fill(color);\n      if (level == \"BEGINNER\") {\n        rect(canvasX / 2 + 13, canvasY / 2 - 15, 92, 20, 4);\n      } else if (level == \"INTERMEDIATE\") {\n        rect(canvasX / 2 - 6, canvasY / 2 - 15, 128, 20, 4);\n      } else {\n        rect(canvasX / 2 + 21, canvasY / 2 - 15, 75, 20, 4);\n      }\n\n      textSize(16);\n      fill(\"#fff\");\n      text(\"Your level: \" + level, canvasX / 2, canvasY / 2);\n\n      text(\n        \"But you can do better than \" + score + \" points...\",\n        canvasX / 2,\n        canvasY / 1.8\n      );\n\n      textSize(18);\n      fill(\"#f65856\");\n      text(\"CLICK TO PLAY AGAIN\", mouseX, mouseY - 15);\n\n      // set highscore\n      if (score > highScore) {\n        highScore = score;\n      }\n      // removes canvas when game ends to stop continuous draw function always running during development\n      // remove();\n    }\n  }\n\n  // display score\n  fill(\"#D8D6C4\");\n  textSize(20);\n  textAlign(LEFT);\n  textFont(\"monospace\");\n  text(\"SCORE: \" + score, 16, 30);\n\n  // display high score\n  fill(\"#D8D6C4\");\n  textSize(20);\n  textAlign(LEFT);\n  textFont(\"monospace\");\n  text(\"HIGH SCORE: \" + highScore, 16, 50);\n\n  // level specific outcomes\n  if (score <= 5) {\n    level = \"BEGINNER\";\n    color = \"#3A7279\";\n  }\n  if (score <= 10 && score > 5) {\n    level = \"INTERMEDIATE\";\n    color = \"#99751D\";\n    // speed level 2\n    fill(\"#1DD3B0\");\n    rect(canvasX - 36, 16, 6, 18, 4);\n  }\n  if (score > 10) {\n    level = \"EXPERT\";\n    color = \"#21A736\";\n\n    // speed level 3\n    fill(\"#1DD3B0\");\n    rect(canvasX - 36, 16, 6, 18, 4);\n    fill(\"#1DD3B0\");\n    rect(canvasX - 26, 16, 6, 18, 4);\n  }\n\n  // display speed label top right\n  textSize(15);\n  fill(\"#fff\");\n  textAlign(RIGHT);\n  text(\"Speed: \", canvasX - 46, 30);\n\n  // display bars for speed top right\n  stroke(\"#1DD3B0\");\n  noFill();\n  rect(canvasX - 46, 16, 6, 18, 4);\n  stroke(\"#1DD3B0\");\n  noFill();\n  rect(canvasX - 36, 16, 6, 18, 4);\n  stroke(\"#1DD3B0\");\n  noFill();\n  rect(canvasX - 26, 16, 6, 18, 4);\n  // speed level 1\n  fill(\"#1DD3B0\");\n  rect(canvasX - 46, 16, 6, 18, 4);\n}\n\nfunction mouseReleased() {\n  setup();\n}\n\n// ability to use left and right arrows to control paddle\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    mouseX -= 60;\n  } else if (keyCode === RIGHT_ARROW) {\n    mouseX += 60;\n  }\n}\n\n// centered canvas on window resize\nfunction windowResized() {\n  resizeCanvas(canvasX, canvasY);\n}"
  },
  {
    "_id": "Enckvqz37QuAQewD4",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-05-08T14:02:47.052Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kwmzmok4ekenltzyuust",
        "version": 1557324307,
        "signature": "9d7f13ebcbc52de36c4e23105a12446c2040773a",
        "width": 1280,
        "height": 644,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-08T14:05:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 11891983,
        "type": "upload",
        "etag": "b24292d552418cd9252c2ceaef44c944",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557324307/avalanche2019/kwmzmok4ekenltzyuust.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557324307/avalanche2019/kwmzmok4ekenltzyuust.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "218996",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7315752",
          "dar": "320:161"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7540491,
        "duration": 12.616667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Microgames!",
    "title": "",
    "description": "Hungry llama eats all the grass",
    "code": "let llama;\n\nlet scene_w = 1400;\nlet scene_h = 1400;\nlet llamaPos;\nlet grass;\nlet grassPos;\nlet x, y;\n\nlet distance;\n\nfunction preload() {\n  llama = createImg(\"llama.gif\");\n  grass = loadImage(\"grass.jpg\");\n}\n\nfunction setup() {\n  noCursor();\n  createCanvas(windowWidth, windowHeight);\n\n  grass.resize(30, 30);\n  //   llama.resize(50, 50);\n\n  llamaPos = createVector(100, 100);\n\n  for (let i = 0; i < 1500; i++) {\n    grassPos = createVector(random(width), random(height));\n    image(grass, grassPos.x, grassPos.y);\n  }\n}\n\nfunction draw() {\n  llama.position(llamaPos.x, llamaPos.y);\n\n  llamaPos.x = camera.mouseX - 40;\n  llamaPos.y = camera.mouseY - 40;\n\n  camera.mouseX = llamaPos.x;\n  camera.mouseY = llamaPos.y;\n\n  noStroke();\n  fill(255);\n  rect(llamaPos.x + 100, llamaPos.y + 100, 50, 50);\n}"
  },
  {
    "_id": "EsyRtpEKY6Y7qHnc7",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T01:58:37.858Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ormyzflldwy8migcdtta",
        "version": 1554429524,
        "signature": "9e1065376ab1d739ea5e8f57fbcbcd6d5ae9f969",
        "width": 800,
        "height": 412,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T01:58:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 262388,
        "type": "upload",
        "etag": "6b174560f22f38885cf371a3bced4cc2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554429524/avalanche2019/ormyzflldwy8migcdtta.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554429524/avalanche2019/ormyzflldwy8migcdtta.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "150815",
          "dar": "225:118"
        },
        "frame_rate": 20,
        "bit_rate": 153219,
        "duration": 13.7,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/p7djjeyg4o14z9sfxxeh",
        "version": 1554429527,
        "signature": "ecbb6ecf8be2320234dd40e153b8d1f3e634bc9d",
        "width": 800,
        "height": 412,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T01:58:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 314970,
        "type": "upload",
        "etag": "184ab8aad7d977e01ac409f56b956d42",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554429527/avalanche2019/p7djjeyg4o14z9sfxxeh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554429527/avalanche2019/p7djjeyg4o14z9sfxxeh.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "171995",
          "dar": "225:118"
        },
        "frame_rate": 20,
        "bit_rate": 174377,
        "duration": 14.45,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Trying out Live Animation concept in Unity with Leap Motion"
  },
  {
    "_id": "F2Bcpv3MRPZeKzTpp",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T06:04:17.498Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vfawtwzjttexymlzzyce",
        "version": 1555653897,
        "signature": "68fa3cc78d4165311a6e45060e78ea407f24d32d",
        "width": 992,
        "height": 980,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T06:04:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 309895,
        "type": "upload",
        "etag": "dda6abe8e7a0fdb67bb7bdf042f8cf8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555653897/avalanche2019/vfawtwzjttexymlzzyce.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555653897/avalanche2019/vfawtwzjttexymlzzyce.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "200000",
          "frequency": 44100,
          "channels": 3,
          "channel_layout": "3.0"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "175897",
          "dar": "248:245"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 388217,
        "duration": 6.361995,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "scribbling",
    "inspiration_name": "Brownian Motion",
    "inspiration_url": "https://p5js.org/examples/simulate-brownian-motion.html"
  },
  {
    "_id": "F2XCNzi9wmgPifQ9c",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T05:43:37.578Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ft4hfauljrmzcfzzpequ",
        "version": 1555652948,
        "signature": "030245729b20ea255c88237943b99ad55838dffd",
        "width": 2546,
        "height": 1368,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T05:49:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 17440129,
        "type": "upload",
        "etag": "fda860ce32cb3612703807822dc089d9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555652948/avalanche2019/ft4hfauljrmzcfzzpequ.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555652948/avalanche2019/ft4hfauljrmzcfzzpequ.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "313718",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "6614069",
          "dar": "67:36"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7073190,
        "duration": 19.725333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/mircbl5bjv9ack4yfzp3",
        "version": 1555652959,
        "signature": "0a5699337f8124b258b5b91a449939412444b145",
        "width": 2546,
        "height": 1380,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T05:49:19Z",
        "tags": [],
        "bytes": 3941057,
        "type": "upload",
        "etag": "82642a8dc583a8c104687fb7934ff9e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555652959/avalanche2019/mircbl5bjv9ack4yfzp3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555652959/avalanche2019/mircbl5bjv9ack4yfzp3.png"
      },
      {
        "public_id": "avalanche2019/s8f3j9jfrsiz2o195nau",
        "version": 1555652971,
        "signature": "288dcba1a3750a9b0ddbb7d458dfd357c482a650",
        "width": 2554,
        "height": 1348,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T05:49:31Z",
        "tags": [],
        "bytes": 3034824,
        "type": "upload",
        "etag": "3f7c66ab7ba3662f349a9bbfb8ccef58",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555652971/avalanche2019/s8f3j9jfrsiz2o195nau.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555652971/avalanche2019/s8f3j9jfrsiz2o195nau.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T11:03:56.349Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T12:36:47.222Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T14:31:29.005Z" }
      }
    ],
    "title": "",
    "description": "Having fun with some sound brushes. Just by changing a few parameters and snapping my fingers I was able to generate a Rothkoesque kind of painting and something that resembles those delicious multicolored worm candies."
  },
  {
    "_id": "F5qp4YN6rqTMJxEqz",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-02-01T02:40:23.445Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zulage0cwnnrp0do04y5",
        "version": 1548989068,
        "signature": "fe65065e540a7004a69d75861758064690cf8cf3",
        "width": 3000,
        "height": 2666,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T02:44:28Z",
        "tags": [],
        "bytes": 327814,
        "type": "upload",
        "etag": "95e359f2985a62cb8f18e234cbd119ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548989068/avalanche2019/zulage0cwnnrp0do04y5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548989068/avalanche2019/zulage0cwnnrp0do04y5.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T20:59:58.3Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:00:02.37Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:00:28.098Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:00:36.781Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:00:45.92Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:01:34.549Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:02:01.189Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:19.241Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Thumbs up! (uncanny)"
  },
  {
    "_id": "F6wATd9KkzDZfwrdP",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T05:59:03.766Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n1cikggsybsitqyz555a",
        "version": 1548914387,
        "signature": "0ec407a4eb0c79e4f62dde4dc48e8f81915ea774",
        "width": 1524,
        "height": 1528,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T05:59:47Z",
        "tags": [],
        "bytes": 464128,
        "type": "upload",
        "etag": "e1d91bc8edfa5f8a0b465d7885e32c77",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548914387/avalanche2019/n1cikggsybsitqyz555a.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548914387/avalanche2019/n1cikggsybsitqyz555a.png"
      },
      {
        "public_id": "avalanche2019/z3k6mx9w4sun6hk7e7gm",
        "version": 1548914395,
        "signature": "fe93659ccfca17e6826dc9dbee8228454b620ff9",
        "width": 1236,
        "height": 1242,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T05:59:55Z",
        "tags": [],
        "bytes": 166838,
        "type": "upload",
        "etag": "5231d6da113a92e5fd369dbc8fff68c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548914395/avalanche2019/z3k6mx9w4sun6hk7e7gm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548914395/avalanche2019/z3k6mx9w4sun6hk7e7gm.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:54.065Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:14.83Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:30.307Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:00.421Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:16.086Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:50.079Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:57.938Z" }
      }
    ],
    "title": "",
    "description": "Pyramid tiles, p5",
    "code": "// Pyramid tiles\n// TODO: Add logic for more interesting tile combinations\n//       e.g. rotations, edge matching, etc.\n// TODO: Make Tile object methods cleaner\n\nlet debugging = false; // true turns on logging\n\n// Canvas specs\nconst canvas_width = 750,\n      canvas_height = canvas_width,\n      num_cols = 15,\n      num_rows = num_cols,\n      tile_width = canvas_width / num_cols;\n\nfunction setup() {\n  // Set up canvas\n  const canvas = createCanvas(canvas_width, canvas_height);\n  canvas.parent(\"sketch-container\");\n\n  let rows = [];            // An array of row arrays, retrievable by row number\n  let tilesOnThisRow = [];  // An array of Tile objects, retrievable by col number\n\n  noStroke();\n  for (row = 0; row < num_rows; row++) {\n    for (col = 0; col < num_cols; col++) {\n      tilesOnThisRow[col] = new Tile(col, row); // Add new tile to row\n      tilesOnThisRow[col].drawSouth();\n      tilesOnThisRow[col].drawWest();\n      tilesOnThisRow[col].drawNorth();\n      rows[row] = tilesOnThisRow; // Add row to array of rows\n    }\n  }\n  if (debugging) { console.log(rows); }\n}\n\nclass Tile {\n  constructor(col, row) {\n    this.x = col * tile_width;\n    this.y = row * tile_width;\n    this.rand_pt = {\n      x: this.x + random(.8) * tile_width,\n      y: this.y + random(.8) * tile_width\n    };\n  }\n\n  drawSouth() {\n    fill(0);\n    triangle(\n      this.x, this.y + tile_width,\n      this.rand_pt.x, this.rand_pt.y,\n      this.x + tile_width, this.y + tile_width\n    );\n    noFill();\n  }\n\n  drawEast() {\n    fill(200, 200, 200);\n    triangle(\n      this.x + tile_width, this.y,\n      this.rand_pt.x, this.rand_pt.y,\n      this.x + tile_width, this.y + tile_width\n    );\n    noFill();\n  }\n\n  drawNorth() {\n    fill(200, 200, 200);\n    triangle(\n      this.x, this.y,\n      this.rand_pt.x, this.rand_pt.y,\n      this.x + tile_width, this.y\n    );\n    noFill();\n  }\n\n  drawWest() {\n    fill(100, 100, 100);\n    triangle(\n      this.x, this.y,\n      this.rand_pt.x, this.rand_pt.y,\n      this.x, this.y + tile_width\n    );\n    noFill();\n  }\n}"
  },
  {
    "_id": "FCFPbATPvNivkn2KK",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T21:21:54.21Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u1pf8ldt5frfb8n99jv8",
        "version": 1550697888,
        "signature": "92ddf6b1a4951c1c4cb72200d4ec3ce046bc324b",
        "width": 720,
        "height": 712,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-20T21:24:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 5042678,
        "type": "upload",
        "etag": "adaea64c80bea3f7f1b50adf9b9a391f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550697888/avalanche2019/u1pf8ldt5frfb8n99jv8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550697888/avalanche2019/u1pf8ldt5frfb8n99jv8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "4187488",
          "dar": "90:89"
        },
        "frame_rate": 60,
        "bit_rate": 4194948,
        "duration": 9.616667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Seated Buddha Meditation using noisey color balls",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n//learn from https://www.openprocessing.org/sketch/549321\n\nvar t;\nvar ammt = 40;\nvar balls = [ammt];\nvar bg = false;\nvar images = [];\n\nfunction preload() {\n  images.push(loadImage(\"seatedbudda.png\"));\n  //images.push(loadImage(\"seatedbudda.png\"));\n}\n\nlet img; \n\nfunction setup() {\n\tcreateCanvas(365,359);\n\tbackground(255);\n  img = loadImage('seatedbudda.png');\n  t = 0;\n\tfor(var i = 0; i <= ammt; i++){\n\t\tballs[i] = new Fluid();\n\t}\n}\n\nfunction draw() {\n  \n  image(img, 0, 0);\n  \n   if(bg){\n    background(255);\n  }\n  else{\n    background(255, 25);\n  }\n\n\tfor(var i = 0; i <= ammt; i++){\n\t\tballs[i].display();\n\t\tballs[i].move();\n}\n}\n\nfunction keyPressed(){\n  switch (key) {\n    case ' ':\n      bg = !bg;\n      break;\n  }\n}\n\nfunction Fluid (){\n\tthis.t = random(50);\n\tthis.x = width * noise(this.t+25);\n\tthis.y = height * noise(this.t+20);\n\tthis.r = 0;\n\tthis.g = 0;\n\tthis.b = 0;\n\tthis.diameter = random(1, 20);\n\n\tthis.move = function() {\n\t\tthis.x = width * noise(this.t+55);\n\t\tthis.y = height * noise(this.t+65);\n\t\tthis.t = this.t + 0.002;\n\n\t\tthis.r = 55 * noise(this.t+40);\n\t\tthis.g = 155 * noise(this.t+30);\n\t\tthis.b = 255 * noise(this.t+40);\n// console.log(this.x);\n};\n\nthis.display = function() {\n\tnoStroke();\n\tfill(this.r, this.g, this.b);\n\t// fill('rgba(this.r,this.g,this.b, 0.9)');\n\tellipse(this.x, this.y, this.diameter, this.diameter);\n}\n}"
  },
  {
    "_id": "FDg25KaeE8QsAhdN8",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "created_at": { "$date": "2019-01-28T05:05:46.114Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rxs1shofjn4s74xvoh8s",
        "version": 1548967521,
        "signature": "4b7a38a70f3842cc89d44667fc55a3fc2318a5a5",
        "width": 1255,
        "height": 837,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T20:45:21Z",
        "tags": [],
        "bytes": 1156241,
        "type": "upload",
        "etag": "2f34c1b3c67efc93691c087ee0a7ba1b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548967521/avalanche2019/rxs1shofjn4s74xvoh8s.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548967521/avalanche2019/rxs1shofjn4s74xvoh8s.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Pixel Tile Set (Flowers)"
  },
  {
    "_id": "FEpymeghDQBvkM2ay",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T03:57:32.408Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yave2knz9qdqxrlozqjl",
        "version": 1551844700,
        "signature": "7fe79e35254126a42626d5dbd550c5158a663596",
        "width": 1026,
        "height": 894,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T03:58:20Z",
        "tags": [],
        "bytes": 296146,
        "type": "upload",
        "etag": "daac5bf190380fc5cc087ff478adad5e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551844700/avalanche2019/yave2knz9qdqxrlozqjl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551844700/avalanche2019/yave2knz9qdqxrlozqjl.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T00:59:18.324Z" }
      }
    ],
    "title": "",
    "description": "Process brightness of colors in image and add purple static drop shadow on lower mountains",
    "inspiration_name": "Read Pixels"
  },
  {
    "_id": "FEzKRM9t8m4k8NN6j",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "created_at": { "$date": "2019-02-16T02:16:26.139Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/iviwg4mpngpbcj95ceme",
        "version": 1550328638,
        "signature": "2711c8a0a06bbdb131dc879b88d2bdaa017e3714",
        "width": 794,
        "height": 594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-16T14:50:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 1322744,
        "type": "upload",
        "etag": "d16256bb754071d2381476a49f64be83",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550328638/avalanche2019/iviwg4mpngpbcj95ceme.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550328638/avalanche2019/iviwg4mpngpbcj95ceme.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1936551",
          "dar": "397:297"
        },
        "frame_rate": 60,
        "bit_rate": 2002893,
        "duration": 5.283333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Parameters",
    "title": "",
    "code": "var x = [],\n  y = [],\n  segNum = 100,\n  segLength = 8;\n\nfor (var i = 0; i < segNum; i++) {\n  x[i] = 0;\n  y[i] = 0;\n}\n\nfunction setup() {\n  createCanvas(800, 600);\n  strokeWeight(110);\n  stroke(200, 220, 30);\n}\n\nfunction draw() {\n  background(20, 200, 200);\n  //sets gradient\n  var color1 = color(0, 0, 153);\n\tvar color2 = color(204, 51, 0);\n  setGradient(0, 0, windowWidth, windowHeight, color1, color2, \"Y\");\n  \n  //defines worm segments\n  dragSegment(0, mouseX, mouseY);\n  for( var i=0; i<x.length-1; i++) {\n    dragSegment(i+1, x[i], y[i]);\n  }\n\n}\n\nfunction dragSegment(i, xin, yin) {\n  var dx = xin - x[i];\n  var dy = yin - y[i];\n  var angle = atan2(dy, dx);\n  x[i] = xin - cos(angle) * segLength;\n  y[i] = yin - sin(angle) * segLength;\n  segment(x[i], y[i], angle);\n}\n\nfunction segment(x, y, a) {\n  push();\n  translate(x, y);\n  rotate(a);\n  line(0, 0, segLength, 0);\n  pop();\n}\n\n//sets gradient\nfunction setGradient(x, y, w, h, c1, c2, axis) {\n  noFill();\n  if (axis == \"Y\") {  // Top to bottom gradient\n    for (let i = y; i <= y+h; i++) {\n      var inter = map(i, y, y+h, 0, 1);\n      var c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(x, i, x+w, i);\n    }\n  }  \n  else if (axis == \"X\") {  // Left to right gradient\n    for (let j = x; j <= x+w; j++) {\n      var inter2 = map(j, x, x+w, 0, 1);\n      var d = lerpColor(c1, c2, inter2);\n      stroke(d);\n      line(j, y, j, y+h);\n    }\n  }\n}"
  },
  {
    "_id": "FFg2RpkXW9Xk2Ctra",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T00:17:04.727Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bldgkgixdbtgscvj7guq",
        "version": 1556842639,
        "signature": "bc67124ea350f41d66125b233d3cd9693aca823d",
        "width": 1406,
        "height": 756,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:17:19Z",
        "tags": [],
        "bytes": 65405,
        "type": "upload",
        "etag": "38c8155cadc225141991df00dd0282c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556842639/avalanche2019/bldgkgixdbtgscvj7guq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556842639/avalanche2019/bldgkgixdbtgscvj7guq.png"
      },
      {
        "public_id": "avalanche2019/oxiywde0dzrsb6tu7oyc",
        "version": 1556842671,
        "signature": "d5851d4117b35cac5dae88787e68a10685d9f1b9",
        "width": 1408,
        "height": 750,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:17:51Z",
        "tags": [],
        "bytes": 33841,
        "type": "upload",
        "etag": "cad0a91f713cd273dec90baa492f75a1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556842671/avalanche2019/oxiywde0dzrsb6tu7oyc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556842671/avalanche2019/oxiywde0dzrsb6tu7oyc.png"
      },
      {
        "public_id": "avalanche2019/lr63p44r48f51agpgh2y",
        "version": 1556842721,
        "signature": "f3dead0e3ad5ffcc0661cea43bff7fc8f0d6f7c5",
        "width": 1404,
        "height": 752,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:18:41Z",
        "tags": [],
        "bytes": 53362,
        "type": "upload",
        "etag": "a83be5b080c60d4b085f5dc5277f55ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556842721/avalanche2019/lr63p44r48f51agpgh2y.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556842721/avalanche2019/lr63p44r48f51agpgh2y.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Getting used to OpenSCAD by modeling previous sketch."
  },
  {
    "_id": "FKXCEsPPeu6ZQH7iZ",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T01:59:12.407Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ezpp3kxqazw1ogazjnt2",
        "version": 1557367180,
        "signature": "060692db876402be5ca8f9438079a147b4167b51",
        "width": 1572,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T01:59:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 5168878,
        "type": "upload",
        "etag": "5f5e0a8d94b1a38088063b64351cd72f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557367180/avalanche2019/ezpp3kxqazw1ogazjnt2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557367180/avalanche2019/ezpp3kxqazw1ogazjnt2.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "3438709",
          "dar": "393:199"
        },
        "frame_rate": 60,
        "bit_rate": 3445918,
        "duration": 12,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T14:46:06.404Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T14:46:07.43Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T15:35:59.467Z" }
      }
    ],
    "title": "",
    "description": "Hey Bernie - Run.  With lobbyists trying to stop him."
  },
  {
    "_id": "FNj6sufENqiNDiF6u",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:04:50.801Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rrdejqvjqrxkshybizm0",
        "version": 1552075495,
        "signature": "68e930ec4fa94c2e847539a67dcbbdf821e75f7e",
        "width": 790,
        "height": 668,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T20:04:55Z",
        "tags": [],
        "bytes": 401210,
        "type": "upload",
        "etag": "8269eb252742405d8c9349431f6a2978",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552075495/avalanche2019/rrdejqvjqrxkshybizm0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552075495/avalanche2019/rrdejqvjqrxkshybizm0.png"
      },
      {
        "public_id": "avalanche2019/zksrzs6ccrwkpjrgwwgo",
        "version": 1552075499,
        "signature": "f05baa40f912e76c9d8a6d8ab9c70888b65a58b6",
        "width": 1496,
        "height": 1248,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T20:04:59Z",
        "tags": [],
        "bytes": 1667626,
        "type": "upload",
        "etag": "7bf0fa352ed2c8d7ca2a79231a4f7a2f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552075499/avalanche2019/zksrzs6ccrwkpjrgwwgo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552075499/avalanche2019/zksrzs6ccrwkpjrgwwgo.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing with colors in the class example."
  },
  {
    "_id": "FNqJXaeYudPwH9EJ8",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-03-01T17:58:26.652Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jfisxrla7ddwrhkgmofd",
        "version": 1551463226,
        "signature": "db7e8f15bb515c6b3cdc692cd09bd2232860f07b",
        "width": 2204,
        "height": 2208,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-01T18:00:26Z",
        "tags": [],
        "bytes": 1087455,
        "type": "upload",
        "etag": "39c6b84a6a8b5db1d394f71159d18338",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551463226/avalanche2019/jfisxrla7ddwrhkgmofd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551463226/avalanche2019/jfisxrla7ddwrhkgmofd.jpg"
      },
      {
        "public_id": "avalanche2019/kkp1lelavb7i9rkea1aj",
        "version": 1551463278,
        "signature": "5a4f29da195dc4bc78e40a16480a1b055bc9d20d",
        "width": 1180,
        "height": 1180,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T18:01:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 664877,
        "type": "upload",
        "etag": "97afa332c8bc0e0bb4731c0dbb6deebe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551463278/avalanche2019/kkp1lelavb7i9rkea1aj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551463278/avalanche2019/kkp1lelavb7i9rkea1aj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "768704",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 774576,
        "duration": 6.866992,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge expand"
  },
  {
    "_id": "FPcsEbi8Zxzrg3vq2",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T04:40:41.247Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vt8iunaw8kr6ntxnc9pc",
        "version": 1553748050,
        "signature": "9b57c6736d8282b928cdee8657a84def1d29ec49",
        "width": 841,
        "height": 507,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T04:40:50Z",
        "tags": [],
        "bytes": 353632,
        "type": "upload",
        "etag": "b0a6a19822c5a5285614896d7eb245d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553748050/avalanche2019/vt8iunaw8kr6ntxnc9pc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553748050/avalanche2019/vt8iunaw8kr6ntxnc9pc.png"
      },
      {
        "public_id": "avalanche2019/xkxsbve406sqdoupxqy0",
        "version": 1553748053,
        "signature": "65a02ad1c3bf480c92a2bdb75eec1962a2494837",
        "width": 143,
        "height": 144,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T04:40:53Z",
        "tags": [],
        "bytes": 7444,
        "type": "upload",
        "etag": "367deaca6e16891fc2f6c3e1be132c95",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553748053/avalanche2019/xkxsbve406sqdoupxqy0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553748053/avalanche2019/xkxsbve406sqdoupxqy0.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tried to make a sketch just using the result of the combo path shape (intersect) from class"
  },
  {
    "_id": "FYuFgLgiADpqZDtTi",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-27T16:31:50.992Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zgyupbncptydxj3g4pxm",
        "version": 1553704332,
        "signature": "20c8dccae0f502c4a1237bb6c8259773649c5edf",
        "width": 1120,
        "height": 888,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-27T16:32:12Z",
        "tags": [],
        "bytes": 250671,
        "type": "upload",
        "etag": "f8cd8a5125dd852f216252570e8f4c04",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553704332/avalanche2019/zgyupbncptydxj3g4pxm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553704332/avalanche2019/zgyupbncptydxj3g4pxm.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "playing with areas and angles"
  },
  {
    "_id": "FgiPR3653Ni2JDj63",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-29T19:29:09.595Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/elep4sh1b9dlmxk59la5",
        "version": 1556566161,
        "signature": "cb4bf18913d5dc2f5f0b6a141b54479338d92dbf",
        "width": 1352,
        "height": 1050,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-29T19:29:21Z",
        "tags": [],
        "bytes": 57154,
        "type": "upload",
        "etag": "81611ef2e57971212c3ed185f386ce1d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556566161/avalanche2019/elep4sh1b9dlmxk59la5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556566161/avalanche2019/elep4sh1b9dlmxk59la5.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "castle with a little lookout tower"
  },
  {
    "_id": "FkF44h6fAMcf9PEQp",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T15:06:35.931Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n0ckbr62le9fp31gofx4",
        "version": 1555081608,
        "signature": "25474de8aee676845b9fa4ff2d55b0db42657836",
        "width": 1210,
        "height": 932,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T15:06:48Z",
        "tags": [],
        "bytes": 190514,
        "type": "upload",
        "etag": "34348226528def84f2fd2cabc0ee8a68",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555081608/avalanche2019/n0ckbr62le9fp31gofx4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555081608/avalanche2019/n0ckbr62le9fp31gofx4.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Marvel Questions...",
    "inspiration_name": "marvel"
  },
  {
    "_id": "Fn63TiyQpnxeB2m2Z",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T14:57:24.509Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dbumirll32nnmcytyu7j",
        "version": 1550243118,
        "signature": "885b7a550fac50d057967abb1ea121fd516e6a14",
        "width": 942,
        "height": 1158,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:05:18Z",
        "tags": [],
        "bytes": 1250726,
        "type": "upload",
        "etag": "11a675264fbe4c2ba560440a1274e067",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550243118/avalanche2019/dbumirll32nnmcytyu7j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550243118/avalanche2019/dbumirll32nnmcytyu7j.png"
      },
      {
        "public_id": "avalanche2019/dnwtsmmbif3eyct6hctp",
        "version": 1550243133,
        "signature": "4e572132ce9e16808f0ff048938edbe69f582945",
        "width": 948,
        "height": 1160,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:05:33Z",
        "tags": [],
        "bytes": 1271945,
        "type": "upload",
        "etag": "b7b15c4490ee0aa143b030cc790cd29c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550243133/avalanche2019/dnwtsmmbif3eyct6hctp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550243133/avalanche2019/dnwtsmmbif3eyct6hctp.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "It was a Hair raising Day -- self portrait - fun collage making tho...\n\nwasn't sure where to load my image to run the code.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet bg;\n\nvar button;\n\nfunction setup() {\n  createCanvas(475, 580);\n  \n  button = createButton(\"Give me more hair\");\n  button.mousePressed(newRandomHair);\n  button.position(20,20);\n  \n  //here we use a callback to display the image after loading\n  loadImage('J.png', img => {\n  image(img, 0, 0);\n  });\n  \n }\n\nfunction draw() {\n\n  stroke(65);\n  strokeWeight(2)\n  line(55, 50, 55, 110);\n}\n\nfunction newRandomHair ()\n{line(random(55,width/2), 100, random(55,width/2), random(5, 35));\n\n line(random(width/2,400), 100, random(width/2,400), random(5, 35))\n}"
  },
  {
    "_id": "FnfTgGjrzq6WwpjWW",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:30:46.877Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wyhgdsr1hxxp2s8uuxtx",
        "version": 1552077055,
        "signature": "4ca6d050b6e34f87f9a7902c579483ba3140b2b9",
        "width": 1038,
        "height": 1244,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T20:30:55Z",
        "tags": [],
        "bytes": 71117,
        "type": "upload",
        "etag": "ac5c8eb2e0d7bf041ef2271229e1052a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552077055/avalanche2019/wyhgdsr1hxxp2s8uuxtx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552077055/avalanche2019/wyhgdsr1hxxp2s8uuxtx.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-09T04:03:38.843Z" }
      }
    ],
    "title": "",
    "description": "A small pixel sequencer … to be expanded",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\nlet img;\nconst canvasWidth = 500;\nconst canvasHeight = 500;\nconst pixelWidth = 10;\nconst pixelHeight = 5;\nconst activeArray = new Array(pixelWidth * pixelHeight).fill(0);\nactiveArray[22] = 1;\n\nvar mySynths = [];\nvar myMonos = [];\nfor (let index = 0; index < pixelHeight; index++) {\n  myMonos.push(new p5.MonoSynth());\n  myMonos[index].oscillator.setType(\"sawtooth\");\n  mySynths.push(new p5.PolySynth());\n  mySynths[index].setADSR(0.1, 0.1, 0.1, 0.2);\n}\n\nvar pitches = [\"C3\", \"E3\", \"C3\", \"G3\", \"C2\"];\n// console.log(mySynths);\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  createP(\"Speed\");\n  window.speedSlider = createSlider(0, 20, 2, 0.5);\n  colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  noSmooth();\n  img = createImage(pixelWidth, pixelHeight);\n}\n\nfunction draw() {\n  frameRate(10);\n  background(0);\n  drawGradient();\n  drawActivePixels();\n  indicatorLine.updateAndPlay();\n}\n\nvar indicatorLine = {\n  x: 75,\n  y1: 0,\n  y2: canvasHeight,\n  currentY: [],\n  draw() {\n    line(this.x, this.y1, this.x, this.y2);\n  },\n  move() {\n    this.x += speedSlider.value();\n    if (this.x > canvasWidth) {\n      this.x = 0;\n    }\n  },\n  updateXPixel() {\n    xPixel = positionToPixel(this.x, 0);\n    return xPixel.x;\n  },\n  checkAgainstActiveArray() {\n    this.currentY = [];\n    for (let y = 0; y < pixelHeight; y++) {\n      yPos = pixelToPosition(this.x, y);\n      pixel = positionToPixel(this.x, yPos.y1);\n      arrayIndex = pixelToArray(pixel.x, pixel.y);\n      this.currentY.push(arrayIndex);\n    }\n    // console.log(this.currentY);\n  },\n  playSound() {\n    this.checkAgainstActiveArray();\n    for (let y = 0; y < this.currentY.length; y++) {\n      if (activeArray[this.currentY[y]] == 1) {\n        myMonos[y].triggerAttack(pitches[y], 0.1);\n      } else {\n        // console.log(y);\n        myMonos[y].triggerRelease();\n      }\n    }\n  },\n  updateAndPlay() {\n    this.move();\n    this.draw();\n    this.playSound();\n  }\n};\n\nfunction mouseClicked() {\n  if (\n    mouseX > 0 &&\n    mouseX < canvasHeight &&\n    mouseY > 0 &&\n    mouseY < canvasHeight\n  ) {\n    mousePixel = identifyMousePositionPixel();\n    onOffArray(mousePixel.x, mousePixel.y);\n    drawActivePixels();\n    indicatorLine.checkAgainstActiveArray();\n  }\n}\n\nfunction drawGradient() {\n  img.loadPixels();\n  for (var y = 0; y < img.height; y++) {\n    for (var x = 0; x < img.width; x++) {\n      var oscA = sin(x + y);\n      var hue = (oscA + 1) / 2;\n      var c = color(hue, 1, 0.9);\n      img.set(x, y, c);\n    }\n  }\n  img.updatePixels();\n  image(img, 0, 0, width, height);\n}\n\nfunction drawActivePixels() {\n  img.loadPixels();\n  for (let i = 0; i < activeArray.length; i++) {\n    if (activeArray[i] == 1) {\n      var pixelPos = arrayToPixel(i);\n      img.set(pixelPos.x, pixelPos.y, color(0, 0, 1, 1));\n    } else {\n      var pixelPos = arrayToPixel(i);\n      img.set(pixelPos.x, pixelPos.y, color(0, 0, 0, 0));\n    }\n  }\n  img.updatePixels();\n  image(img, 0, 0, width, height);\n}\n\nfunction onOffArray(x, y) {\n  index = pixelToArray(x, y);\n  if (activeArray[index] == 0) {\n    activeArray[index] = 1;\n  } else {\n    activeArray[index] = 0;\n  }\n  // console.log(activeArray);\n}\n\nfunction pixelToArray(x, y) {\n  index = y * pixelWidth + x;\n  return index;\n}\n\nfunction arrayToPixel(index) {\n  xPos = index % pixelWidth;\n  yPos = floor(index / pixelWidth);\n  return { x: xPos, y: yPos };\n}\n\nfunction positionToPixel(x, y) {\n  var xPixel = 0;\n  if (x > canvasWidth) {\n    xPixel = pixelWidth - 1;\n  } else if (x < 0) {\n    xPixel = 0;\n  } else {\n    xPixel = floor((x / canvasWidth) * pixelWidth);\n  }\n  var yPixel = 0;\n  if (y > canvasHeight) {\n    yPixel = pixelHeight - 1;\n  } else if (y < 0) {\n    yPixel = 0;\n  } else {\n    yPixel = floor((y / canvasHeight) * pixelHeight);\n  }\n  return { x: xPixel, y: yPixel };\n}\n\nfunction pixelToPosition(x, y) {\n  var xPos1 = x * (canvasWidth / pixelWidth);\n  var xPos2 = (x + 1) * (canvasWidth / pixelWidth);\n  var yPos1 = y * (canvasHeight / pixelHeight);\n  var yPos2 = (y + 1) * (canvasHeight / pixelHeight);\n  return { x1: xPos1, x2: xPos2, y1: yPos1, y2: yPos2 };\n}\n\nfunction identifyMousePositionPixel() {\n  return positionToPixel(mouseX, mouseY);\n}"
  },
  {
    "_id": "FuYS9WnquQsdZ7tQx",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-02-27T01:37:12.446Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ax264dbwod9o4bh3wvmo",
        "version": 1551231435,
        "signature": "303f10199a337575a32c24c96873a69236168558",
        "width": 623,
        "height": 623,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-27T01:37:15Z",
        "tags": [],
        "bytes": 26161,
        "type": "upload",
        "etag": "1d2227fe5d99adcce573cfe2169add5e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551231435/avalanche2019/ax264dbwod9o4bh3wvmo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551231435/avalanche2019/ax264dbwod9o4bh3wvmo.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Part 2 of 3: In-Class Challenge; \nSnowmen Noise Placement",
    "inspiration_name": "Snowmen Noise Placement",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// In-Class Challenge\n// Part 2 of 3\n// Snowman Noise Placement\n\nvar xPos, yPos;\nvar xOffset, yOffset;\nvar snowmanCount;\n\nfunction setup() {\n    createCanvas(500, 500);\n    noLoop();\n\n    xPos = width / 2;\n    yPos = width / 2;\n\n    xOffset = width;\n    yOffset = height;\n\n    snowmanCount = 20;\n}\n\nfunction draw() {\n    background(50);\n    fill(200);\n    noStroke();\n    for (let i = 0; i < snowmanCount; i++) {\n        var x = noise(xPos, yPos) * width;\n        var y = noise(yPos) * height;\n\n        ellipse(x, y - 40, 10, 10);\n        ellipse(x, y - 25, 20, 20);\n        ellipse(x, y, 30, 30);\n\n\n        xPos += xOffset;\n        yPos += yOffset;\n    }\n}"
  },
  {
    "_id": "FvmMadwQKB7nGuzQv",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:29:04.033Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nmkq8tshklg77leqjtca",
        "version": 1549651016,
        "signature": "c866739ef15acb2118836d42cee595e4d7d36d00",
        "width": 1472,
        "height": 1368,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:36:56Z",
        "tags": [],
        "bytes": 2993957,
        "type": "upload",
        "etag": "8a132f53fb4abf90ffe24046d78e7c65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549651016/avalanche2019/nmkq8tshklg77leqjtca.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549651016/avalanche2019/nmkq8tshklg77leqjtca.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T19:03:27.032Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T19:32:40.466Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nvar column=300\nvar row=300\nvar square\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  square=windowWidth*0.8\n  background(255)\n  for (var j=0; j<row; j++){\n  for (var i=0; i<column; i++){\n  noStroke()\n  fill(random (239, 255), random (242,255), random (241, 255))\n  rect (i*windowWidth/column, j*windowHeight/row, windowWidth/column, windowWidth/row)}}\n  \n  push();\n  translate(windowWidth*.33, 10);\n  rotate(PI / 12);\n  for (var j=0; j<row; j++){\n  for (var i=0; i<column; i++){\n  noStroke()\n  fill(random (227, 255), random (227,255), random (227, 255))\n  rect (i*square/column, j*square/row, square/column, square/row)}}\n  noFill();\n  stroke(200, 110);\n  rect (0, 0, square, square)\n  pop()\n}\n\nfunction draw() {\n  // background(255)\n  // for (var j=0; j<row; j++){\n  // for (var i=0; i<column; i++){\n  // noStroke()\n  // fill(random (239, 255), random (242,255), random (241, 255))\n  // rect (i*windowWidth/column, j*windowHeight/row, windowWidth/column, windowWidth/row)}}\n}",
    "description": "Challenge - Malevich - Texturizing White on White --",
    "inspiration_name": "Malevich"
  },
  {
    "_id": "G7t3ARCqiLcNDhoFd",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "created_at": { "$date": "2019-03-01T15:52:32.538Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qijim064hodzy8iixooe",
        "version": 1551455567,
        "signature": "a7a487b9c562b99bcfd0bb36335a275a0833111f",
        "width": 484,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T15:52:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 3376096,
        "type": "upload",
        "etag": "4dca0dfdc25d66967e1a1c4d1f0ccd8c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551455567/avalanche2019/qijim064hodzy8iixooe.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551455567/avalanche2019/qijim064hodzy8iixooe.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1250442",
          "dar": "121:120"
        },
        "frame_rate": 60,
        "bit_rate": 1257196,
        "duration": 21.483333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Playing with the parameters and shapes to make a wave."
  },
  {
    "_id": "GBcubS5oQGWgfMknp",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:04:31.622Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dm2kftgbb0with7bwcx1",
        "version": 1555697221,
        "signature": "c1a6d1d8d78fc156ac93dc280e5f3252327e0345",
        "width": 574,
        "height": 568,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-19T18:07:01Z",
        "tags": [],
        "bytes": 23398,
        "type": "upload",
        "etag": "f8bf6df7b779095d6271a7e6b3ed19ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555697221/avalanche2019/dm2kftgbb0with7bwcx1.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555697221/avalanche2019/dm2kftgbb0with7bwcx1.jpg"
      },
      {
        "public_id": "avalanche2019/mlwejmb7e7sujlmhfaq8",
        "version": 1555697228,
        "signature": "35f3ae45b7f55be3bb8b6c88bdf473aab37beaa9",
        "width": 564,
        "height": 564,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T18:07:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 4762151,
        "type": "upload",
        "etag": "37f3823190a1fc946f84a5aebc219686",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555697228/avalanche2019/mlwejmb7e7sujlmhfaq8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555697228/avalanche2019/mlwejmb7e7sujlmhfaq8.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3213829",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3224023,
        "duration": 11.816667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "No sound yet, but that’s a album cover generator, I always wanted to make",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\n\nvar w = 200;\nvar h = 200;\nvar circleDistance = 5;\nvar circleSize = 20;\n\nfunction setup() {\n  createCanvas(w, h);\n  noFill();\n  strokeWeight(0.18);\n  // angleMode(DEGREES);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  colorMode(HSB, 360, 1, 1, 1)\n  background(250);\n  noStroke()\n  frameRate(30)\n  // makeShape(700, width / 3, width / 3);\n  let acc = sin(frameCount*0.01)\n  let accMap = map(acc, -1, 1, -2*PI, 2*PI)\n  translate(w/2, h/2)\n  rotate(accMap)\n  translate(-w/2, -h/2)\n  let oscA = cos(frameCount*0.01)\n  let mapOscA = map(oscA, -1, 1, 0, 360)\n  let oscB = sin(frameCount*0.01)\n  let mapOscB = map(oscB, -1, 1, 0, 360)\n  makeCircles(140, w/2, h/2, mapOscA, mapOscB);\n}\n\nfunction makeCircles(num, x, y, startHue, endHue) {\n  for (let i = 0; i < num; i += circleDistance) {\n        makeCircle(i, x, y, startHue, endHue, num);\n    }\n}\n\nfunction makeCircle(radius, xP, yP, startHue, endHue, num) {\n\n  let circum = 2 * PI * radius\n  for (let a = 0; a < circum/radius - circum/radius*0.1/num; a += PI/radius) {\n    let x = radius * sin(a) + xP;\n    let y = radius * cos(a) + yP;\n    let hue = map(a, 0, 2*PI, startHue, endHue)\n    fill(hue, 1, 1, 0.2)\n    ellipse(x, y, circleSize, circleSize)\n  }\n}\n\n\n\n// function makeShape(numRings, x, y) {\n//   // noise(millis() * 0.001 + 30, millis() * 0.001 + 30);\n//   for (let i = 0; i < numRings; i += 2) {\n//     makeRing(i, x, y);\n//   }\n// }"
  },
  {
    "_id": "GCMQrQEKnqgQ7obMN",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T04:58:28.755Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vib6kzwoqxgcmd6iwtyc",
        "version": 1555563514,
        "signature": "eb8bc8b5a7692e5b0b38d139e36a1c0b647fe68e",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T04:58:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 3053643,
        "type": "upload",
        "etag": "90d6d5131a62d58b82349ea25e035115",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555563514/avalanche2019/vib6kzwoqxgcmd6iwtyc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555563514/avalanche2019/vib6kzwoqxgcmd6iwtyc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "260208",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "11512872",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 11808746,
        "duration": 2.068733,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-04-18T11:12:18.88Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "funny",
        "created_at": { "$date": "2019-04-19T13:29:12.193Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-19T16:21:37.048Z" }
      }
    ],
    "title": "",
    "description": "oh no"
  },
  {
    "_id": "GEJXrfzeuAmLt85CQ",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-03-01T18:13:31.175Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jsmu7i4asb7r0djtzuoq",
        "version": 1551464221,
        "signature": "ab3135c19f0bb297376f1143d508044a2f20ff82",
        "width": 794,
        "height": 794,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-01T18:17:01Z",
        "tags": [],
        "bytes": 46417,
        "type": "upload",
        "etag": "e0e370f55a57aeeca272412e57a0ca8b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551464221/avalanche2019/jsmu7i4asb7r0djtzuoq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551464221/avalanche2019/jsmu7i4asb7r0djtzuoq.jpg"
      },
      {
        "public_id": "avalanche2019/gi5h8xzeiapw9g61hp05",
        "version": 1551464230,
        "signature": "2e8e90e00489075b3667aa8d26d35b2632afdc42",
        "width": 788,
        "height": 788,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T18:17:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 9292403,
        "type": "upload",
        "etag": "eec35817b172e2e63b042679bba67449",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551464230/avalanche2019/gi5h8xzeiapw9g61hp05.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551464230/avalanche2019/gi5h8xzeiapw9g61hp05.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7103408",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7113801,
        "duration": 10.45,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:23:56.735Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:35:14.786Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Chaining oscillators to move through noise to create erratic movement.",
    "inspiration_name": "Dot Challenge",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 1, 1, 1, 1); // for the central bias of hue\n\n  noStroke();\n  ellipseMode(CENTER);\n  // Once I had a good distribution\n  // I used a slider to move through noiseSeed values\n  // to get closer to the goal\n  // noiseSeed(mySlider.value());\n  // console.log(mySlider.value());\n  // window.mySlider = createSlider(600, 603, 601, 0.01);\n  // ***\n  // comment this to see different variations\n  // noiseSeed(61);\n  // ***\n}\n\nfunction draw() {\n  background(0, 1, 1);\n\n  var noiseFrequency = 0.6;\n  oscA = sin(frameCount * 0.1);\n  oscB = cos(frameCount * 0.0004);\n  oscC = sin(oscA + oscB);\n\n  oscD = sin(frameCount * 0.07);\n  oscE = sin(frameCount * 0.008);\n  oscF = cos(oscD + oscE + oscC * 0.1);\n\n  // noiseDetail(5, 0.3); This wasn’t helpful\n  for (var i = 0; i < 100; i++) {\n    myDistance = 100; // make sure x and y are not related (noise walk)\n    myNoiseX = noise(i * noiseFrequency + oscC * 0.1 + frameCount * 0.005, 0);\n    myNoiseY = noise(\n      i * noiseFrequency + oscF * 0.1 + frameCount * 0.005,\n      myDistance\n    );\n    var x = myNoiseX * width;\n    var y = myNoiseY * height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    myDistance = 601.1; // make sure position and diameter are not related\n    myNoiseD = noise(\n      i * noiseFrequency + sin(frameCount * 0.01) + frameCount * 0.001,\n      myDistance\n    );\n    diameter = map(myNoiseD, 0, 1, 4, 20);\n\n    // I actually didn’t need a separate noise function for the hue\n    // diameter and hue are connected\n    // myDistance = 321.94;\n    // myNoiseHue = noise(i * noiseFrequency, myDistance);\n    // Thought I might need to narrow the hue further down,\n    // wasn’t necessary\n    // myHue = map(myNoiseD, 0, 1, 0, 1);\n    // stroke(0, 1, myNoiseD);\n    // strokeWeight(0.18);\n    noFill();\n    fill(0, 0, 1, 1 - myNoiseD);\n    ellipse(x, y, diameter, diameter);\n  }\n}"
  },
  {
    "_id": "GF6MxnETDff9D8B24",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T21:43:17.342Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e91mdk1adqnreld8qzzo",
        "version": 1552513785,
        "signature": "01b88767ae5da117372f19f72477154d0eec36dd",
        "width": 1236,
        "height": 1438,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T21:49:45Z",
        "tags": [],
        "bytes": 2183787,
        "type": "upload",
        "etag": "c81b3114a3cdacbf406fdfb130968867",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552513785/avalanche2019/e91mdk1adqnreld8qzzo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552513785/avalanche2019/e91mdk1adqnreld8qzzo.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Black Hole -- Turtles on the edges",
    "code": "var commands = '';\nvar turtle;\nvar step = 0;\nvar Iteration = 6;\nvar piter = Iteration;\n\nfunction commandSetup() {\n  var seq = 'F+++[F]+++[F]+++[F]';\n  var rule = '[--f-F][fF][++f+F]';\n  \n\n  for (i = 0; i < Iteration; i++) {\n    var newseq = '';\n    for (j = 0; j < seq.length; j++) {\n      if (seq[j] === 'F') {\n        newseq += rule;\n      } else {\n        newseq += seq[j];\n      }\n    }\n    seq = newseq;\n  }\n  commands = seq;\n}\n\nfunction setup() {\n  angleMode(DEGREES);\n  createCanvas(windowWidth, windowHeight);\n\n  commandSetup();\n  turtle = {\n\n    turnangle: 20,\n    len: 80,\n    heading: 70,\n\n    goto: function(x, y) {\n      translate(x, y);\n      rotate(this.heading);\n\n    },\n\n    obey: function(commands) {\n      for (var i = 0; i < commands.length; i++) {\n        var cmd = commands[i];\n\n        switch (cmd) {\n\n          case 'F':\n            line(0, 0, 0, this.len);\n            translate(20, this.len);\n            break;\n\n          case 'f':\n            line(0, 0, 0, this.len);\n            translate(10, this.len);\n            break;\n\n          case '+':\n            rotate(this.turnangle);\n            break;\n\n          case '-':\n            rotate(-this.turnangle);\n            break;\n\n          case '[':\n            push();\n            break;\n\n          case ']':\n            pop();\n            break;\n        }\n      }\n    }\n  }\n\n}\n\nfunction draw() {\n  if (Iteration != piter) {\n    commandSetup();\n  }\n  \n  //draw background\n  blendMode(BLEND);\n  background(0);\n  fill(27, 28, 119, 4);\n  noStroke();\n  for (var r = 0; r < width; r+=8) {\n    ellipse(windowWidth/2, windowHeight/2, r);\n  }\n  \n  //draw turtle lines\n  blendMode(ADD);\n  noFill();\n  stroke(107, 118, 0, 20);\n  turtle.goto(width / 2, height / 2);\n  turtle.obey(commands);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}"
  },
  {
    "_id": "GFycJWof5EqvksEaz",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-23T02:24:25.393Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Game of Thrones intro song style melody, based of the example in class I made rules that the first measures of the GOT title song has then created melody that is like it but not the same, rules are: \n- octave 4\n- 3 measures\n- always start with g\n    - all other g's must come after an f\n    - g is always played for half note\n- f is always played for 8n followed by g\n- c is always played for half note\n    - c is always followed by D or e\n    - c always comes after a g\n- if a D or an e is played, you must play a fg pair after unless it is the end of the measure\n    - e is always played for 4th note unless end of measure\n    - D is always played for 4th note unless end of measure",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 300;\n\nwindow.onmousedown = () => {\n    // Play the melody!\n\n    const melody = generate();\n    console.log(melody);\n    play(melody);\n}\n\nconst gotNotes = ['g4', 'c4', 'D4', 'f4', 'e4'];\n\n\nfunction generate() {\n    // generate some measures\n    const a = generateMeasure();\n    const b = generateMeasure();\n    const c = generateMeasure();\n\n    // first note should always be g\n    a[0][0] = gotNotes[0];\n    // last note should be fg\n    c[c.length - 1][0] = gotNotes[4];\n    // console.log(a);\n    // console.log(b);\n    // console.log(c);\n    // arrange the measures and return\n    return [].concat(a, b, c);\n}\n\nfunction generateMeasure() {\n    const m = [];\n    let timeLeft = Tone.Time('2m');\n\n    while (timeLeft.toSeconds() > 0) {\n\n        var note = randomNote();\n        // console.log(\"random note \" + note);\n        var length = Tone.Time('2n');\n        if (m[0] != null) {\n            //if previous note was D or e, & it is not the end of the measure play an f\n            if (m[m.length - 1][0] == \"D4\" || m[m.length - 1][0] == \"e4\") {\n                //still need to add in part about end of measure \n                note = gotNotes[3];\n                length = Tone.Time('8n');\n                //fg pair always played for half note \n\n            }\n            //if the previous note was an fg pair, play a c \n            else if (m[m.length - 1][0] == \"g4\") {\n                note = gotNotes[1];\n                //c always played for half note \n            } else if (m[m.length - 1][0] == \"f4\") {\n                note = gotNotes[0];\n                //g always played for half note \n            }\n            // if the previous note was c, you must play a D or an e \n            else if (m[m.length - 1][0] == \"c4\") {\n                // choose length\n                note = \"D4\";\n                if (Math.random() < 0.5) {\n                    note = \"e4\";\n                }\n\n                length = Tone.Time('4n')\n            }\n        }\n        // console.log(\"actual note \" + note);\n        if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n            length = timeLeft;\n        }\n\n        // keep track of time\n        timeLeft = Tone.Time(timeLeft - length);\n\n        // add the note to the melody\n        m.push([note, length]);\n\n    }\n    return m;\n}\n\nfunction play(melody) {\n    let t = Tone.now();\n    for (const note of melody) {\n        console.log(note[0], note[1].toNotation());\n        if (note[0] !== 'rest') {\n            // synth.triggerAttackRelease(note[0], note[1]), t);\n            synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.01, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n}\n\nconsole.log('click for music!');\n\nfunction randomNote() {\n    // console.log(gotNotes.length);\n    const index = Math.floor(Math.random() * gotNotes.length);\n    var note = gotNotes[index];\n    return note;\n}"
  },
  {
    "_id": "GQBq2YvXfAbF9rT4M",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T06:24:42.703Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zu8jnbuhtsvnnjr2dsir",
        "version": 1549607092,
        "signature": "0196477c71883e699c6e869d15977556ff6651b1",
        "width": 1202,
        "height": 1202,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T06:24:52Z",
        "tags": [],
        "bytes": 87444,
        "type": "upload",
        "etag": "423e90e862aa5171b9cf81c85267b461",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549607092/avalanche2019/zu8jnbuhtsvnnjr2dsir.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549607092/avalanche2019/zu8jnbuhtsvnnjr2dsir.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Gradient Randomness",
    "code": "let chance;\nlet attempt;\nlet windowHeight = 600,\n  windowWidth = 600;\nlet gridSize = 10;\n\nfunction setup() {\n  createCanvas(windowHeight, windowWidth);\n  noLoop();\n}\n\nfunction draw() {\n  let dice = 0;\n  for (let i = 0; i < windowWidth / gridSize; i++) {\n    dice += 1 / (windowWidth / gridSize);\n    for (let j = 0; j < windowHeight / gridSize; j++) {\n      noStroke();\n      let attempt = random(1);\n      if (attempt < dice) {\n        fill(255);\n      } else {\n        fill(0);\n      }\n      rect(i * gridSize, j * gridSize, gridSize, gridSize);\n    }\n  }\n}"
  },
  {
    "_id": "GQRgtCX3NGJeSDHwq",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T15:58:32.139Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vnx2xqkrpcb2lstpk5xn",
        "version": 1554998348,
        "signature": "e7b606550137d26e793e87acdf175bed927c3b1c",
        "width": 924,
        "height": 68,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T15:59:08Z",
        "tags": [],
        "bytes": 11873,
        "type": "upload",
        "etag": "0070806eeeba168a03404a29a8417787",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554998348/avalanche2019/vnx2xqkrpcb2lstpk5xn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554998348/avalanche2019/vnx2xqkrpcb2lstpk5xn.png"
      },
      {
        "public_id": "avalanche2019/quzhaeywfmlzqbqex92h",
        "version": 1554998352,
        "signature": "bad704157d79c59aece6de8261a85352b459bf6e",
        "width": 1018,
        "height": 150,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T15:59:12Z",
        "tags": [],
        "bytes": 29264,
        "type": "upload",
        "etag": "aca20b2d46755b4f124826b0752f5d98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554998352/avalanche2019/quzhaeywfmlzqbqex92h.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554998352/avalanche2019/quzhaeywfmlzqbqex92h.png"
      },
      {
        "public_id": "avalanche2019/cuwghqizygdfdpakroyc",
        "version": 1554998492,
        "signature": "bcfc2dd18d088c82a29c4c06700bde7d01e6ff63",
        "width": 1466,
        "height": 102,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T16:01:32Z",
        "tags": [],
        "bytes": 22087,
        "type": "upload",
        "etag": "2254916fd89d14b2ee446984c741cbd9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554998492/avalanche2019/cuwghqizygdfdpakroyc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554998492/avalanche2019/cuwghqizygdfdpakroyc.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-11T16:05:03.32Z" }
      }
    ],
    "title": "",
    "description": "JFK's famous inaugural address with Cardi B lyrics mixed in.",
    "inspiration_name": "In class example",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?/text/sketches/markov.js"
  },
  {
    "_id": "GeZdM9qeJxrTHJbSH",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T19:14:18.706Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zonqqcl5y8xprqimzxb3",
        "version": 1550862873,
        "signature": "8ddc06a60d7da61c1e3e940d9d38ab77a6ba2313",
        "width": 960,
        "height": 540,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T19:14:33Z",
        "tags": [],
        "bytes": 186530,
        "type": "upload",
        "etag": "80df1aa7d466fd3665684addffc4b793",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550862873/avalanche2019/zonqqcl5y8xprqimzxb3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550862873/avalanche2019/zonqqcl5y8xprqimzxb3.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Treasure Map in Maya"
  },
  {
    "_id": "GjSTSju8PHqYQrFji",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T03:52:52.541Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ezedxvkjst4re9antsmn",
        "version": 1549857196,
        "signature": "4c65070f8ca9b1c302868f2ba4f8c4aaac9ab81e",
        "width": 937,
        "height": 985,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T03:53:16Z",
        "tags": [],
        "bytes": 586919,
        "type": "upload",
        "etag": "6dbf80fafa2e88ae861a39e502c43f0d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549857196/avalanche2019/ezedxvkjst4re9antsmn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549857196/avalanche2019/ezedxvkjst4re9antsmn.jpg"
      },
      {
        "public_id": "avalanche2019/s8x2nbnhxjb5j6dkwjjn",
        "version": 1549857965,
        "signature": "0ee58b776b2bcfb16e3bb7d802ab6bc3917b9691",
        "width": 938,
        "height": 888,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-11T04:06:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 959541,
        "type": "upload",
        "etag": "77502b17a6411c673e836e8e86e8b86e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549857965/avalanche2019/s8x2nbnhxjb5j6dkwjjn.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549857965/avalanche2019/s8x2nbnhxjb5j6dkwjjn.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "649711",
          "dar": "469:444"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 652484,
        "duration": 11.744717,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/pgfmnylm0rycj13sh9jp",
        "version": 1549857972,
        "signature": "713ff0f4640b6ac92b79d35b861435ab655e1c7d",
        "width": 770,
        "height": 1084,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T04:06:12Z",
        "tags": [],
        "bytes": 314243,
        "type": "upload",
        "etag": "dede237f2d8a03705fd79edf28329c85",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549857972/avalanche2019/pgfmnylm0rycj13sh9jp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549857972/avalanche2019/pgfmnylm0rycj13sh9jp.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Inspired by spirograph design, I have created a custom spirograph generator. \nIt has parameters to change the pattern, position, color, and size.\nStart by clicking on the Randomize Pattern button. \n\nGenerate something different every time!",
    "inspiration_name": "Custom Spirograph",
    "inspiration_url": "https://en.wikipedia.org/wiki/Spirograph",
    "code": "// Creating a spirograph\n// Inspired by the workshop during Processing Community Day\n\n\n// Variables for creating the pattern\nvar angle;\nvar circumference_ratio;\nvar pos_x, pos_y;\n\n// Parameters for generating spirograph\nvar pos_button; // change the position of the spirograph\nvar pattern_change_button; // create a new pattern\nvar color_change_button; // change the color of the dots\nvar dot_size_slider; // change the dot size\nvar pattern_size_slider; // change the size of the pattern\n\n\nfunction setup() {\n    createCanvas(window.innerWidth, 600);\n\n    background(240);\n    angle = 0.0;\n    pos_x = width / 2;\n    pos_y = height / 2;\n\n    // Button Creation\n    pattern_change_button = createButton(\"Randomize Pattern\");\n    pos_button = createButton(\"Randomize Position\");\n    color_change_button = createButton(\"Randomize Color\");\n\n    // Slider Creation\n    createP('Change Pattern Size');\n    pattern_size_slider = createSlider(50, 200, 100);\n    createP('Change Dot Size');\n    dot_size_slider = createSlider(1, 10, 2);\n\n}\n\n\nfunction draw() {\n    content.translate(pos_x, pos_y);\n\n    // Button Action\n    pattern_change_button.mousePressed(changePattern);\n    pos_button.mousePressed(randomizePosition);\n    color_change_button.mousePressed(changeColor);\n\n    strokeWeight(dot_size_slider.value());\n\n    // draw the pattern between begin shape and end shape\n    beginShape();\n    var radius = pattern_size_slider.value() * Math.cos(circumference_ratio * angle);\n    var x = Math.cos(angle) * radius;\n    var y = Math.sin(angle) * radius;\n    vertex(x, y);\n    vertex(x + 0.1, y + 0.1);\n    endShape();\n\n    angle = angle + 0.1;\n\n}\n\nfunction randomizePosition() {\n    // move the pattern around the screen\n    console.log(\"Position has changed.\");\n    pos_x = random(0, width);\n    pos_y = random(0, height);\n\n}\n\nfunction changePattern() {\n    console.log('Pattern has changed.');\n    circumference_ratio = random(50.0) / random(5.0);\n}\n\nfunction changeColor() {\n    console.log('Color has changed.');\n    stroke(random(255), random(255), random(255));\n}"
  },
  {
    "_id": "GmBmxpn92KpZuYn6Z",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:54:22.504Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wcpzlirlk2hdisqautlz",
        "version": 1552075049,
        "signature": "7aebfeb91361af6ea413214c384968abad7830cf",
        "width": 1164,
        "height": 1164,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T19:57:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 2235409,
        "type": "upload",
        "etag": "72ec89a499c9beca40756c8c47ec1e73",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552075049/avalanche2019/wcpzlirlk2hdisqautlz.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552075049/avalanche2019/wcpzlirlk2hdisqautlz.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "4391726",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 4397165,
        "duration": 4.066992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:11:26.914Z" }
      }
    ],
    "title": "",
    "description": "Comp Form."
  },
  {
    "_id": "GsvCKmk4ZwBHguMsq",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T00:40:21.28Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e1gpo8an6qlt4ritpmnd",
        "version": 1549413999,
        "signature": "104479a700c35034585bfde223ec5dc4a7c3b57b",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-06T00:46:39Z",
        "tags": [],
        "bytes": 987295,
        "type": "upload",
        "etag": "1351d398d190f7d143284becfef6b62b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549413999/avalanche2019/e1gpo8an6qlt4ritpmnd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549413999/avalanche2019/e1gpo8an6qlt4ritpmnd.jpg"
      },
      {
        "public_id": "avalanche2019/lrizwckyaizyhepy4k0n",
        "version": 1549414354,
        "signature": "c6ed1fcc91faf1cce4d0b24cc11cd1a084bbb0aa",
        "width": 1920,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-06T00:52:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 3667015,
        "type": "upload",
        "etag": "828582996e696a59d554f928b8a9a5b0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549414354/avalanche2019/lrizwckyaizyhepy4k0n.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549414354/avalanche2019/lrizwckyaizyhepy4k0n.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "2277",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "2932065",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 2925712,
        "duration": 10.005,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/fm1paie7jluzvzewnyws",
        "version": 1549414360,
        "signature": "7b502833d134443385ef0c42c62c6dd33c9c0743",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-06T00:52:40Z",
        "tags": [],
        "bytes": 1120433,
        "type": "upload",
        "etag": "4c5ef154682cbd1e6cb1c11c672a5459",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549414360/avalanche2019/fm1paie7jluzvzewnyws.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549414360/avalanche2019/fm1paie7jluzvzewnyws.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "This sequence of random texts depicts how the information we receive from social media influences us. There is a parallel reality of technology that we fail to see. \nActed by Fifi.",
    "inspiration_name": "Social Media Influence"
  },
  {
    "_id": "GviF6R5skQvEPSKgy",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T06:19:56.88Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n6gvxpcqdivefrw5cyil",
        "version": 1549606878,
        "signature": "d7b7d9c5fab6f4ef28c6ccbde5c9faad2aa95e8e",
        "width": 1184,
        "height": 1180,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T06:21:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 2383415,
        "type": "upload",
        "etag": "4e49aeac9cf2111f0069a22e2004e63a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549606878/avalanche2019/n6gvxpcqdivefrw5cyil.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549606878/avalanche2019/n6gvxpcqdivefrw5cyil.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2830824",
          "dar": "296:295"
        },
        "frame_rate": 60,
        "bit_rate": 2840428,
        "duration": 6.712833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Random Quadrilateral",
    "code": "function setup() {\n  createCanvas(600, 600);\n  background(0);\n  colorMode(HSB, 360, 100, 100, 1);\n  frameRate(2);\n}\n\nfunction draw() {\n  var xa1 = random(0, 300);\n  var ya1 = random(0, 300);\n  var xa2 = random(300, 600);\n  var ya2 = random(0, 300);\n  var xa3 = random(0, 300);\n  var ya3 = random(300, 600);\n  var xa4 = random(300, 600);\n  var ya4 = random(300, 600);\n\n  var xb1 = random(500, 300);\n  var yb1 = random(500, 300);\n  var xb2 = random(300, 700);\n  var yb2 = random(500, 300);\n  var xb3 = random(500, 300);\n  var yb3 = random(300, 700);\n  var xb4 = random(300, 700);\n  var yb4 = random(300, 700);\n\n  strokeWeight(2);\n  stroke(255);\n  noFill();\n  rect(0, 0, 600, 600);\n  quad(xa1, ya1, xa2, ya2, xa3, ya3, xa4, ya4);\n  quad(xb1, yb1, xb2, yb2, xb3, yb3, xb4, yb4);\n}",
    "description": "Random Quadrilateral"
  },
  {
    "_id": "Gw5PN4SazG66DJa3P",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-11T22:29:20.43Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kibuufpaf5vzpqclatvq",
        "version": 1552343777,
        "signature": "c0a6dc64b182ead9a0f597a866615f7c00e4a23f",
        "width": 2234,
        "height": 1508,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-11T22:36:17Z",
        "tags": [],
        "bytes": 281647,
        "type": "upload",
        "etag": "3a5826d5b206cff85635d7a673e1cfbf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552343777/avalanche2019/kibuufpaf5vzpqclatvq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552343777/avalanche2019/kibuufpaf5vzpqclatvq.png"
      },
      {
        "public_id": "avalanche2019/rpv4kwkvx9ldsryo0sv8",
        "version": 1552346076,
        "signature": "7ddc1a493c4a69fea9ffc095df01e45b8730524b",
        "width": 1730,
        "height": 1120,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-11T23:14:36Z",
        "tags": [],
        "bytes": 332714,
        "type": "upload",
        "etag": "74f95d1056026a38e3e27eda70bf7960",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552346076/avalanche2019/rpv4kwkvx9ldsryo0sv8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552346076/avalanche2019/rpv4kwkvx9ldsryo0sv8.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-11T22:32:44.044Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-12T23:53:34.382Z" }
      }
    ],
    "title": "",
    "description": "Brownian turtle movement; just getting started for the week.\n\nThe turtle leaves a circle at every 180% turn. Circle color is random (for now), but could be interesting to iterate on this.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nlet turnOptions = [];\nlet forwardOptions = [];\n\nconst stepDist = 8;\n\nconst hexRed = \"#e0233d\";\nconst hexYellow = \"#e0b023\";\nconst hexBlue = \"#4286f4\";\n\nfunction setup() {\n    createCanvas(windowWidth, windowHeight);\n    myTurtle = new Turtle();\n\n    noFill();\n    // stroke(75, 0, 130, 10);\n    noStroke();\n    // strokeWeight(1);\n    \n    for (let i = 0; i < 360; i += 90) {\n        turnOptions.push(i);\n    }\n}\n\nfunction draw() {\n    background(255);\n    // stroke(255);\n    \n    // teleport to center of canvas\n    myTurtle.moveTo(width / 2, height / 2);\n    myTurtle.penDown();\n\n    // put the pen down to draw\n    for (let i = 0; i < 8000; i++) {\n        let randC = random();\n        if (randC < (1/3)) {\n            fill(color(hexRed), 10);\n            // stroke(color(hexRed), 10);\n        } else if (randC < (2/3)) {\n            fill(color(hexYellow), 10);\n            // stroke(color(hexYellow), 10);\n        } else if (randC < 1) {\n            fill(color(hexBlue), 10);\n            // stroke(color(hexBlue), 10);\n        }\n\n        let thisTurnIndex = Math.floor(random(turnOptions.length));\n        let thisTurn = turnOptions[thisTurnIndex];\n        if (myTurtle.x < width && myTurtle.y > 0) {\n            if (myTurtle.y < height && myTurtle.y > 0) {\n                myTurtle.moveForward(stepDist);\n                myTurtle.turnRight(thisTurn);\n            }\n        }\n        if (thisTurn === 180) {\n            push();\n            noStroke();\n            // fill(75, 0, 130, 80);\n            ellipse(myTurtle.x, myTurtle.y, stepDist, stepDist);\n            pop();\n        }\n    }\n\n\tnoLoop();\n}"
  },
  {
    "_id": "GxjzJWqNwAjWefNcG",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:32:53.585Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/t1qx4mvz7x60k3lsvrtu",
        "version": 1548459322,
        "signature": "f93f214ef10902fd975bfe2fff4749c5b4f12db8",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:35:22Z",
        "tags": [],
        "bytes": 2001181,
        "type": "upload",
        "etag": "22cd48ac745fc66b80017e23c59d85dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459322/avalanche2019/t1qx4mvz7x60k3lsvrtu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459322/avalanche2019/t1qx4mvz7x60k3lsvrtu.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "The Adventure of the Dancing Men",
    "description": "Inspired by the story \"The Adventure of the Dancing Men\" from Sherlock Holmes"
  },
  {
    "_id": "H77PnQY7fzez6nTDx",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T14:01:54.94Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xyw1ubusfin7j02bsj42",
        "version": 1557410531,
        "signature": "e3471106b9747e5cb286f2ff258beb3a9ab6cd0f",
        "width": 1576,
        "height": 928,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T14:02:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 9098527,
        "type": "upload",
        "etag": "ea957af0b71d60f63fed975af6e1cc5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557410531/avalanche2019/xyw1ubusfin7j02bsj42.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557410531/avalanche2019/xyw1ubusfin7j02bsj42.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "4426845",
          "dar": "197:116"
        },
        "frame_rate": 60,
        "bit_rate": 4433799,
        "duration": 16.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Bomb field - inspired by p5.play virtual camera example with new assets",
    "code": "//virtual camera\n//move the mouse around\n//the sprite follows the mouse but appears at the center of the sketch\n//because the camera is following it\n\nvar dog;\nvar bg;\nvar frame;\n//the scene is twice the size of the canvas\nvar SCENE_W = 1600;\nvar SCENE_H = 800;\n\n\nfunction setup() {\n  createCanvas(800, 400);\n\n  //create a sprite and add the 3 animations\n  dog = createSprite(400, 200, 50, 100);\n\n  var myAnimation = dog.addAnimation('floating', 'assets/dog_walking-00.png', 'assets/dog_walking-07.png');\n  myAnimation.offY = 18;\n\n  dog.addAnimation('moving', 'assets/dog_walk0001.png', 'assets/dog_walk0004.png');\n\n  bg = new Group();\n\n  //create some background for visual reference\n  for(var i=0; i<80; i++)\n  {\n    //create a sprite and add the 3 animations\n    var bombs = createSprite(random(-width, SCENE_W+width), random(-height, SCENE_H+height));\n    //cycles through bombs 0 1 2\n    bombs.addAnimation('normal', 'assets/bombs'+i%3+'.png');\n    bg.add(bombs);\n  }\n\n  frame = loadImage('assets/frame.png');\n}\n\nfunction draw() {\n  background(255, 255, 255);\n\n  //mouse trailer, the speed is inversely proportional to the mouse distance\n  dog.velocity.x = (camera.mouseX-ghost.position.x)/20;\n  dog.velocity.y = (camera.mouseY-ghost.position.y)/20;\n\n  //a camera is created automatically at the beginning\n\n  //.5 zoom is zooming out (50% of the normal size)\n  if(mouseIsPressed)\n    camera.zoom = 0.5;\n  else\n    camera.zoom = 1;\n\n  //set the camera position to the dog position\n  camera.position.x = dog.position.x;\n  camera.position.y = dog.position.y;\n\n  //limit the dog movements\n  if(dog.position.x < 0)\n    dog.position.x = 0;\n  if(dog.position.y < 0)\n    dog.position.y = 0;\n  if(dog.position.x > SCENE_W)\n    dog.position.x = SCENE_W;\n  if(dog.position.y > SCENE_H)\n    dog.position.y = SCENE_H;\n\n  //draw the scene\n  //bombs first\n  drawSprites(bg);\n\n  //shadow using p5 drawing\n  noStroke();\n  fill(0, 0, 0, 20);\n  //shadow\n  ellipse(dog.position.x, dog.position.y+90, 80, 30);\n  //character on the top\n  drawSprite(dog);\n\n  //I can turn on and off the camera at any point to restore\n  //the normal drawing coordinates, the frame will be drawn at\n  //the absolute 0,0 (try to see what happens if you don't turn it off\n  camera.off();\n  image(frame, 0, 0);\n}"
  },
  {
    "_id": "H78HrzDhAEDqf3uSH",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "created_at": { "$date": "2019-02-27T00:21:25.805Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/t5lvqozs6dqjvkwefjvd",
        "version": 1551226891,
        "signature": "e945d1a54fd3eee10fb978299be54ee15b1bddaa",
        "width": 796,
        "height": 599,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-27T00:21:31Z",
        "tags": [],
        "bytes": 747346,
        "type": "upload",
        "etag": "c73413941b57e675490742aadceb8b5f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551226891/avalanche2019/t5lvqozs6dqjvkwefjvd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551226891/avalanche2019/t5lvqozs6dqjvkwefjvd.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:40:50.037Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Alternative sketch, challenge 01",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n\nfunction setup() {\n    createCanvas(800, 600);\n}\n\nfunction draw() {\n    background(228, 60, 80);\n    noStroke();\n    ellipseMode(CENTER);\n\n    for (let i = 0; i < 100; i++) {\n        const noiseFrequency = 500;\n// noise\n//position hear center of screen\n        let x = (noise(i * noiseFrequency, 20) * 800);\n        let y = (noise(i * noiseFrequency, 30) * 600);\n\n// noise hue assignment\n        colorMode(HSB, 1);\n        let r = noise(i * noiseFrequency, 100);\n        let h = Math.floor(r * 10) / 10; \n        let s = 1;\n        let b = 1;\n      \tnoFill();\n        stroke(h, s, b);\n\n        diameter = map(h, 0, 1, 200, 600);\n\n        ellipse(x, y, diameter, diameter);\n    }\n\n    noLoop();\n}"
  },
  {
    "_id": "H7vwHBXeeC3bCjg5b",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-28T02:37:12.912Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ytm8c7dhkcm5jceaf3yg",
        "version": 1553740638,
        "signature": "84d877246e01e3e4620ef1b4c3dc75f1f75915a5",
        "width": 1024,
        "height": 1024,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-28T02:37:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 1452571,
        "type": "upload",
        "etag": "df395521ea62ad1a742cb7d6159572b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553740638/avalanche2019/ytm8c7dhkcm5jceaf3yg.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553740638/avalanche2019/ytm8c7dhkcm5jceaf3yg.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "2990",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "4322143",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 4336032,
        "duration": 2.68,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Reproduced Lung Pic",
    "code": "var worldImage;\n\nfunction preload() {\n    worldImage = loadImage(\"lung_14.png\");\n    // worldImage = loadImage(\"/pixels/sketches/world_100.png\");\n}\n\nfunction setup() {\n    createCanvas(500, 500);\n  // noprotect\n}\n\n\nfunction draw() {\n    background(255,255,255);\n\n    //fill(random(200,255),random(200,255),random(200,255),);\n    noStroke();\n\n    var spacing = 500 / worldImage.width;\n    for (var y = 0; y < worldImage.height; y++) {\n        for (var x = 0; x < worldImage.width; x++) {\n            var in_color = worldImage.get(x, y);\n            var dot_size = lightness(in_color) / 255 * 10;\n          line(0,dot_size,dot_size,0);\n          \n            //ellipse(x * spacing + spacing * 0.5, y * spacing + spacing * 0.5, dot_size, dot_size);\n          for (let i = 0; i < 10; i ++) {\n    ellipse(x * spacing + spacing * 0.5, y * spacing + spacing * 0.5, dot_size, dot_size);\n    rotate(PI/4);\n            fill(y * 2, 0,x * 2);\n            \n  }\n           //fill(255,255,255);\n\n          //ellipse(x * spacing - spacing * 2, y * spacing - spacing * 2, dot_size/10, dot_size/10);\n\n          //fill(255);\n        }\n    }\n\n    // we don't draw the image, its just input\n\n    noLoop();\n}"
  },
  {
    "_id": "HC7QFE4vnr392N9qm",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T19:14:51.192Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/somynpxqksu9qmg7uwwj",
        "version": 1556910896,
        "signature": "c93c5a37057ed5a3641fac3d4cf412d17a2fe44e",
        "width": 1167,
        "height": 677,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:14:56Z",
        "tags": [],
        "bytes": 257101,
        "type": "upload",
        "etag": "df34e2b88ffd2fc8469448bc28f698d2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556910896/avalanche2019/somynpxqksu9qmg7uwwj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556910896/avalanche2019/somynpxqksu9qmg7uwwj.png"
      },
      {
        "public_id": "avalanche2019/g1k08yvzxgerg56x83id",
        "version": 1556910904,
        "signature": "4fbf0a95513645a1e8123d3b87fdbfd0ad50e0f3",
        "width": 710,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:15:04Z",
        "tags": [],
        "bytes": 396851,
        "type": "upload",
        "etag": "c897add885a5d5ca648951f6707532fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556910904/avalanche2019/g1k08yvzxgerg56x83id.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556910904/avalanche2019/g1k08yvzxgerg56x83id.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "image with text in OpenSCAD"
  },
  {
    "_id": "HDmuszToFDZNoBhuX",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T03:20:45.419Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eaffwhjkgdp5vamyoksb",
        "version": 1550200866,
        "signature": "f0dd9db78469f047ee16dc99d1a580583c7450fe",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-15T03:21:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 1637393,
        "type": "upload",
        "etag": "793359d61565996cabd6ba2a9bf1f209",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550200866/avalanche2019/eaffwhjkgdp5vamyoksb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550200866/avalanche2019/eaffwhjkgdp5vamyoksb.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "62823",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1237540"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1309914,
        "duration": 10,
        "rotation": 180
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-15T19:02:46.882Z" }
      }
    ],
    "title": "",
    "description": "Tangible parameter controller \"Firework Launcher\"\nMade with arduino + openframework."
  },
  {
    "_id": "HE2xwZpxE6HHWAmhg",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T19:19:59.083Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "HG7ccQSQspDqMD2Zz",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T19:59:14.127Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mpzapmfmzlxa3eq42c7p",
        "version": 1550865565,
        "signature": "dfbd964ae073d101b6d3dfda41d5a749e197d159",
        "width": 2508,
        "height": 1360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T19:59:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 3798467,
        "type": "upload",
        "etag": "79bcf51d5a8d8c62fc5d76a2ee48376b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550865565/avalanche2019/mpzapmfmzlxa3eq42c7p.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550865565/avalanche2019/mpzapmfmzlxa3eq42c7p.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "4028983",
          "dar": "627:340"
        },
        "frame_rate": 60,
        "bit_rate": 4033770,
        "duration": 7.533333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T20:16:01.607Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T20:51:35.984Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-22T20:51:40.27Z" }
      }
    ],
    "title": "",
    "description": "Tried to replicate Gaspar Noe's intro to Enter the Void but failed after many attempts."
  },
  {
    "_id": "HGcnmuoL6WGYxub49",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:29:13.406Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bzljd2hwnyvw9dchd1zs",
        "version": 1552667365,
        "signature": "35d0e8d097939ffa26a9f3e607836ae4086c3a6a",
        "width": 1376,
        "height": 1340,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T16:29:25Z",
        "tags": [],
        "bytes": 55259,
        "type": "upload",
        "etag": "30a67420f794c155c27eeacd2c23c05c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552667365/avalanche2019/bzljd2hwnyvw9dchd1zs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552667365/avalanche2019/bzljd2hwnyvw9dchd1zs.jpg"
      },
      {
        "public_id": "avalanche2019/dqekx1qmujgzrn8nlfqc",
        "version": 1552667370,
        "signature": "81f60f2f652ff96b4acd1291a90b53a006858aaf",
        "width": 758,
        "height": 758,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T16:29:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 34483,
        "type": "upload",
        "etag": "cf0ebb6fcdac31aecf20275f0a22cf14",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552667370/avalanche2019/dqekx1qmujgzrn8nlfqc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552667370/avalanche2019/dqekx1qmujgzrn8nlfqc.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "47398",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 54443,
        "duration": 5.066992,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:29:48.474Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:51:16.901Z" }
      }
    ],
    "title": "",
    "description": "Heart"
  },
  {
    "_id": "HJLn2u3fsXeyNHE3G",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T03:46:54.51Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nzagl32qkkjxa8finoxa",
        "version": 1550202426,
        "signature": "73a2e0d933a6bab7672ba1c07866f9e164de5b93",
        "width": 864,
        "height": 1086,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T03:47:06Z",
        "tags": [],
        "bytes": 346256,
        "type": "upload",
        "etag": "0df0cb38c79731b16c1518e218a28eec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550202426/avalanche2019/nzagl32qkkjxa8finoxa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550202426/avalanche2019/nzagl32qkkjxa8finoxa.png"
      },
      {
        "public_id": "avalanche2019/h3gn7tnoxnef3unngvsl",
        "version": 1550202722,
        "signature": "5c4040a9ed847d410ffc987179e3bbe34e368ea8",
        "width": 898,
        "height": 1310,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T03:52:02Z",
        "tags": [],
        "bytes": 377551,
        "type": "upload",
        "etag": "62d5c62becb711ce0a0db46f778512ee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550202722/avalanche2019/h3gn7tnoxnef3unngvsl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550202722/avalanche2019/h3gn7tnoxnef3unngvsl.png"
      },
      {
        "public_id": "avalanche2019/qo4peyxufl2rouxayxme",
        "version": 1550202733,
        "signature": "2ab580d132acc7ca96bcbd644d90b7a6fe7733dc",
        "width": 922,
        "height": 1306,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T03:52:13Z",
        "tags": [],
        "bytes": 446078,
        "type": "upload",
        "etag": "a79c877501d3f29df9cf2a1722ca77e4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550202733/avalanche2019/qo4peyxufl2rouxayxme.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550202733/avalanche2019/qo4peyxufl2rouxayxme.png"
      }
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T04:22:13.937Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T04:37:18.48Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T14:50:46.156Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T19:02:11.542Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T20:59:39.718Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-15T21:03:59.256Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T21:04:01.657Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T21:15:12.041Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T21:19:22.38Z" }
      }
    ],
    "title": "",
    "description": "Control grid chaos.",
    "inspiration_name": "Georg Nees",
    "inspiration_url": "https://en.wikipedia.org/wiki/Georg_Nees",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// canvas specs\nconst canvasWidth = 500,\n    canvasHeight = canvasWidth * 1.25,\n    border = canvasWidth / 25,\n    numRows = 20,\n    numCols = numRows,\n    rowHeight = (canvasHeight - (2 * border)) / numRows,\n    colWidth = (canvasWidth - (2 * border)) / numCols,\n    canvasCenter = {\n        x: canvasWidth / 2,\n        y: canvasHeight / 2\n    },\n    points = [];\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    background(255, 255, 254);\n\n    for (let r = 0; r < numRows; r++) {\n        for (let c = 0; c < numCols; c++) {\n            points.push(new Point(c * colWidth + border, r * rowHeight + border));\n        }\n    }\n\n    text = createP(\"Warp speed\");\n    warpSlide = createSlider(1, 100, 50);\n}\n\nfunction draw() {\n    background(255);\n    fill(0);\n    stroke(0);\n\n    baseWarpValue = map(warpSlide.value(), 0, 100, .1, .5);\n\n    // based on dist from center of canvas, warp\n    for (i in points) {\n        if (\n            dist(\n                points[i].pos.x, points[i].pos.y,\n                canvasCenter.x - (colWidth / 2), canvasCenter.y - (rowHeight / 2)\n            ) < canvasWidth / 4\n        ) { \n            points[i].warp(3 * baseWarpValue);\n        } else if (\n            dist(\n                points[i].pos.x, points[i].pos.y,\n                canvasCenter.x - (colWidth / 2), canvasCenter.y - (rowHeight / 2)\n            ) < canvasWidth / 2\n        ) {\n            points[i].warp(2 * baseWarpValue);\n        } else {\n            points[i].warp(1 * baseWarpValue);\n        }\n    }\n    connectPoints();\n}\n\nclass Point {\n    constructor(x, y) {\n        this.pos = {\n            x: x,\n            y: y\n        };\n    }\n\n    warp(magnitude) {\n        this.pos.x = constrain(this.pos.x + random(-magnitude, magnitude), 0, canvasWidth);\n        this.pos.y = constrain(this.pos.y + random(-magnitude, magnitude), 0, canvasHeight);\n    }\n}\n\nfunction connectPoints() {\n    // vertical lines\n    for (let i = 0; i < points.length - numRows; i++) {\n        line(\n            points[i].pos.x, points[i].pos.y,\n            points[i + numCols].pos.x, points[i + numCols].pos.y\n        );\n    }\n\n    // horizontal lines\n    for (let j = 0; j < numRows; j++) {\n        for (let i = 0; i < numCols - 1; i++) {\n            row = j;\n            rowStartIndex = j * numCols;\n            line(\n                points[rowStartIndex + i].pos.x, points[rowStartIndex + i].pos.y,\n                points[rowStartIndex + i + 1].pos.x, points[rowStartIndex + i + 1].pos.y\n            );    \n        }\n    }\n}"
  },
  {
    "_id": "HKeawpXxawdG3fuqu",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-27T22:18:02.766Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gastffp4izhxtzwtuqxi",
        "version": 1556403503,
        "signature": "e0c1d15fd70bf3d163f2d6918ad7bf26a685fde1",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-27T22:18:23Z",
        "tags": [],
        "bytes": 1029538,
        "type": "upload",
        "etag": "e92941768957ce5450bd8a63f8bfad11",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556403503/avalanche2019/gastffp4izhxtzwtuqxi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556403503/avalanche2019/gastffp4izhxtzwtuqxi.png"
      },
      {
        "public_id": "avalanche2019/nj3unfaclqll2kv0dmtt",
        "version": 1556403507,
        "signature": "c72b003c9565c7e99afb276a10000b903499c729",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-27T22:18:27Z",
        "tags": [],
        "bytes": 675411,
        "type": "upload",
        "etag": "84d96ec0aaba7e441b00151ce0ebad85",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556403507/avalanche2019/nj3unfaclqll2kv0dmtt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556403507/avalanche2019/nj3unfaclqll2kv0dmtt.png"
      },
      {
        "public_id": "avalanche2019/qkbr8aflsmiumux3izxt",
        "version": 1556403511,
        "signature": "1ceab443189bfa7de8e3cf816f904173817a4cc0",
        "width": 1925,
        "height": 1085,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-27T22:18:31Z",
        "tags": [],
        "bytes": 249602,
        "type": "upload",
        "etag": "8b0bdaaafde399a3584b0460dabfdced",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556403511/avalanche2019/qkbr8aflsmiumux3izxt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556403511/avalanche2019/qkbr8aflsmiumux3izxt.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a 3D model for our studio exhibition, Major Major. \nI have used the type-style from the show's branding theme. \nThe 3D model was prepared in Cinema 4D, with the 2D layout in Illustrator. \n\nI tried to 3D print it today, but the queue was way too long for Makerbot (2 weeks), and the other printers were way too costly to print.",
    "inspiration_name": "Major Major 3D Model",
    "inspiration_url": "http://majormajor.parsons.edu/"
  },
  {
    "_id": "HMr4W7pvZhsnZP5aJ",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T21:37:24.533Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vyzzioagmreefkipxojh",
        "version": 1550007451,
        "signature": "40326e773fa0434ff30faf4695599f7eb89ff66c",
        "width": 1456,
        "height": 1024,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-12T21:37:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 8215392,
        "type": "upload",
        "etag": "deb9353c72bd1c4448134ed4336ceb06",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550007451/avalanche2019/vyzzioagmreefkipxojh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550007451/avalanche2019/vyzzioagmreefkipxojh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1311978",
          "dar": "91:64"
        },
        "frame_rate": 60,
        "bit_rate": 1329530,
        "duration": 49.433333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/bhn5pjunakm0cumvhd1v",
        "version": 1550007870,
        "signature": "28e53cc4a32d81a9af88206c89635c8eec534345",
        "width": 1450,
        "height": 1010,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-12T21:44:30Z",
        "tags": [],
        "bytes": 122217,
        "type": "upload",
        "etag": "0b9961b00716b18b7793092ad8335eb9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550007870/avalanche2019/bhn5pjunakm0cumvhd1v.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550007870/avalanche2019/bhn5pjunakm0cumvhd1v.png"
      },
      {
        "public_id": "avalanche2019/fklnmr4ri6kqc9mdkrql",
        "version": 1550007876,
        "signature": "cc347015ca34bc506be4f3058ab317077a5a142d",
        "width": 1456,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-12T21:44:36Z",
        "tags": [],
        "bytes": 122460,
        "type": "upload",
        "etag": "30f31fca13f8c0c1c53f7905d78bfa4a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550007876/avalanche2019/fklnmr4ri6kqc9mdkrql.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550007876/avalanche2019/fklnmr4ri6kqc9mdkrql.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T22:47:27.082Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-13T00:56:27.285Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-13T00:56:27.896Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-13T01:12:04.036Z" }
      },
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-13T05:47:02.499Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-13T05:50:43.582Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-13T21:14:58.408Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-14T05:24:42.494Z" }
      },
      {
        "voter_id": "iDDWcdkC2BWXZMSyw",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T05:47:06.8Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-15T20:59:42.152Z" }
      }
    ],
    "title": "",
    "description": "Drawing with natural language. Revisions to yesterday's sketch (both inside and out).\n\nParses phrases like:\n\n- \"make a big blue square in the top left\"\n- \"a little triangle\"\n- \"draw a tiny purple circle in the upper right corner\"\n\n...into arguments for a draw function.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// Get user input in the form of a natural language string.\n// Attempt to parse it, and translate it into a simple drawing on\n// the screen. Note that this is a 90-minute prototype. While it has\n// several easy-to-discover limitations, it does the basics\n// well enough to prove that the interaction\n// (i.e. lanuage input -> inmmediate image output) is engaging. \n\n// Canvas specs\nconst canvas = {\n    width: 800,\n    height: 750\n};\n\n// Visually defines the frame of the drawing; sits within canvas\n// TODO: get rid of the hardcoded positioning throughout.\nconst drawSpace = {\n    width: canvas.width - 20,\n    height: canvas.height - 300,\n    pos: {\n        x: 10,\n        y: 10\n    }\n}\n\n// The user input and instructions space.\nconst requestSpace = {\n    width: canvas.width - 20,\n    height: 250,\n    pos: {\n        x: 50,\n        y: drawSpace.pos.y + drawSpace.height + 30\n    }\n}\n\n// Initialize Shape object with default settings.\nlet defaultStroke = \"gray\";\nlet defaultSize = 100;\nlet defaultPos = {\n    x: drawSpace.pos.x + (.5 * drawSpace.width),\n    y: drawSpace.pos.y + (.5 * drawSpace.height)\n}\nlet request;\n\n// keyword lists\nconst colors = [\n    /red/,\n    /orange/,\n    /yellow/,\n    /green/,\n    /blue/,\n    /indigo/,\n    /violet/,\n    /purple/,\n    /pink/,\n    /black/,\n    /brown/,\n    /teal/,\n    /maroon/,\n    /white/,\n    /gray|grey/\n];\n\nconst sizes = [\n    /gigantic|huu+ge/,\n    /huge/, \n    /big/,\n    /medium/,\n    /small|little/,\n    /tiny/\n];\n\nxPositions = [\n    /left/,\n    /right/,\n    /center|middle/\n];\n\nyPositions = [\n    /top|up/,\n    /bottom|down|( |^)low/\n];\n\nconst shapes = [\n    /rectangle|rect|square|box/,\n    /ellipse|circle/,\n    /triangle/\n];\n\n// Setup //////////////////////////////////////////////////////////\nfunction setup() {\n    createCanvas(canvas.width, canvas.height);\n    // drawInputControls();\n    rectMode(CENTER);\n\n    // input controls\n    request = createInput(\"Type here...\");\n    request.position(requestSpace.pos.x, requestSpace.pos.y + 20);\n    request.class('inputbox');\n\n    let instructions = createP(\n        \"Try phrases like 'make a big blue circle' or\" + \n        \" 'draw a purple square in the top left'...\"\n    );\n    instructions.position(requestSpace.pos.x, requestSpace.pos.y + 30);\n\n    shape = new Shape(\n        defaultStroke,\n        defaultSize,\n        defaultPos.x,\n        defaultPos.y,\n        null\n    );\n}\n\nfunction draw() {\n    getInput();\n    refreshDrawSpace();\n    shape.updateDisplaySettings();\n    shape.display();\n}\n\n\n// Drawing space background\nfunction refreshDrawSpace() {\n    background(255);\n    push();\n    rectMode(CORNER);\n    noStroke();\n    fill(247, 245, 225);\n    rect(drawSpace.pos.x, drawSpace.pos.y, drawSpace.width, drawSpace.height);\n\n    let pixelsPerSquare = 15;\n    // Draw horizontal lines\n    for (y = drawSpace.pos.y; y < (drawSpace.pos.y + drawSpace.height); y++) {\n        if (y % pixelsPerSquare === 0) {\n            strokeWeight(.2);\n            stroke(59, 180, 255);\n            line(drawSpace.pos.x, y, drawSpace.pos.x + drawSpace.width, y);\n        }\n    }\n    // Draw vertical lines\n    for (x = drawSpace.pos.x; x < (drawSpace.pos.x + drawSpace.width); x++) {\n        if (x % pixelsPerSquare === 0) {\n            strokeWeight(.2);\n            stroke(59, 180, 255);\n            line(x, drawSpace.pos.y, x, drawSpace.pos.y + drawSpace.height);\n        }\n    }\n    pop();\n}\n\n// Read string input\nfunction getInput() {\n    // Returns a lowercased string from text input\n    return request.value().toLowerCase();\n}\n\nfunction returnColor() {\n    // Returns color; if not defined, returns null\n    let string = getInput();\n    colorSubstring = null;\n\n    for (i = 0; i < colors.length; i++) {\n        let regex = colors[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            colorSubstring = match[0];\n        }\n    }\n    return colorSubstring;\n}\n\nfunction returnSize() {\n    // Returns size; if not defined, returns null\n    let string = getInput();\n    sizeSubstring = null;\n\n    for (i = 0; i < sizes.length; i++) {\n        let regex = sizes[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            sizeSubstring = match[0];\n        }\n    }\n    return sizeSubstring;\n}\n\nfunction returnPosX() {\n    // Returns xposition; if not defined, returns null\n    let string = getInput();\n    posXSubstring = null;\n\n    for (i = 0; i < xPositions.length; i++) {\n        let regex = xPositions[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            posXSubstring = match[0];\n        }\n    }\n    return posXSubstring;\n}\n\nfunction returnPosY() {\n    // Returns yposition; if not defined, returns null\n    let string = getInput();\n    posYSubstring = null;\n\n    for (i = 0; i < yPositions.length; i++) {\n        let regex = yPositions[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            posYSubstring = match[0];\n        }\n    }\n    return posYSubstring;\n}\n\nfunction returnShape() {\n    // Returns shape from string input; if not defined, returns null\n    let string = getInput();\n    shapeSubstring = null;\n\n    for (i = 0; i < shapes.length; i++) {\n        let regex = shapes[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            shapeSubstring = match[0];\n        }\n    }\n    return shapeSubstring;\n}\n\n\n// Shape object is the thing that's drawn on the canvas\n// after parsing the user's input.\nclass Shape {\n    constructor(color, size, xpos, ypos, shape) {\n        this.color = color;\n        this.size = size;\n        this.pos = {\n            x: xpos,\n            y: ypos\n        }\n        this.shape = shape;\n    }\n\n    updateDisplaySettings() {\n        // Set this.color\n        if (returnColor() != null) { // if we're getting a read on color\n            this.color = returnColor();\n        } else {\n            this.color = defaultStroke;\n        }\n\n        // Set this.size\n        // TODO: udpate to `switch` and/or parameterize these blocks.\n        if (returnSize() != null) { // if we're getting a read on size\n            if (\n                returnSize().match(sizes[0])\n            ) {\n                this.size = 400;\n            } else if (\n                returnSize().match(sizes[1])\n            ) {\n                this.size = 300;\n            } else if (\n                returnSize().match(sizes[2])\n            ) {\n                this.size = 200;\n            } else if (\n                returnSize().match(sizes[3])\n            ) {\n                this.size = 100;\n            } else if (\n                returnSize().match(sizes[4])\n            ) {\n                this.size = 50;\n            } else if (\n                returnSize().match(sizes[5])\n            ) {\n                this.size = 10;\n            }\n        } else {\n            this.size = defaultSize;\n        }\n\n        // Set this.pos.x\n        if (returnPosX() != null) { // if we're getting a read on xpos\n            if (\n                returnPosX().match(xPositions[0])\n            ) {\n                this.pos.x = drawSpace.pos.x + this.size / 2 + 10;\n            } else if (\n                returnPosX().match(xPositions[1])\n            ) {\n                this.pos.x = drawSpace.pos.x + drawSpace.width - this.size / 2 - 10;\n            }\n        } else {\n            this.pos.x = defaultPos.x;\n\n        }\n\n        // Set this.pos.y\n        if (returnPosY() != null) { // if we're getting a read on color\n            if (\n                returnPosY().match(yPositions[0])\n            ) {\n                this.pos.y = drawSpace.pos.y + this.size / 2 + 10;\n            } else if (\n                returnPosY().match(yPositions[1])\n            ) {\n                this.pos.y = drawSpace.pos.y + drawSpace.height - this.size / 2 - 10;\n            }\n        } else {\n            this.pos.y = defaultPos.y;\n        }\n\n        // Set this.shape\n        if (returnShape() != null) { // if we're getting a read on color\n            if (\n                returnShape().match(shapes[0])\n            ) {\n                this.shape = \"rect\";\n            } else if (\n                returnShape().match(shapes[1])\n            ) {\n                this.shape = \"ellipse\";\n            } else if (\n                returnShape().match(shapes[2])\n            ) {\n                this.shape = \"triangle\";\n            }\n        } else {\n            this.shape = null;\n        }\n    }\n\n    display() {\n        push();\n        strokeWeight(5);\n        noFill();\n        stroke(this.color);\n\n        if (this.shape) { // if a shape is specified\n            if (this.shape === \"rect\") {\n                // draw rect\n                rect(this.pos.x, this.pos.y, this.size, this.size);\n            } else if (this.shape === \"ellipse\") {\n                // draw ellipse\n                ellipse(this.pos.x, this.pos.y, this.size, this.size);\n            } else if (this.shape === \"triangle\") {\n                // draw triangle\n                triangle(\n                    this.pos.x, this.pos.y - (this.size / 2),\n                    this.pos.x - (this.size / 2), this.pos.y + (this.size / 2),\n                    this.pos.x + (this.size / 2), this.pos.y + (this.size / 2)\n                );\n            }\n        }\n        pop();\n    }\n}"
  },
  {
    "_id": "HQ5ALswSL9QLzdbwf",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-04T16:01:32.032Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nj6pahc1kqe07zj9jmnl",
        "version": 1556985719,
        "signature": "bd080933dd506bb0e5d856dfbd76dff9e53572e1",
        "width": 2251,
        "height": 2896,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-04T16:01:59Z",
        "tags": [],
        "bytes": 3002386,
        "type": "upload",
        "etag": "9b63212460b1b1b0d90effe80bc37249",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556985719/avalanche2019/nj6pahc1kqe07zj9jmnl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556985719/avalanche2019/nj6pahc1kqe07zj9jmnl.jpg"
      },
      {
        "public_id": "avalanche2019/gz3evr5dy7gc7i0xrddb",
        "version": 1556985726,
        "signature": "1f3fad30222d217c59c6d6f41856357dcd58d7fb",
        "width": 454,
        "height": 486,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-04T16:02:06Z",
        "tags": [],
        "bytes": 44134,
        "type": "upload",
        "etag": "3358452d3ec7e9ae72d0e7a148b04bd2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556985726/avalanche2019/gz3evr5dy7gc7i0xrddb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556985726/avalanche2019/gz3evr5dy7gc7i0xrddb.png"
      },
      {
        "public_id": "avalanche2019/vw1oy6zm6bajlzlylzwq",
        "version": 1556985735,
        "signature": "f98c9019184a0adebd37f4822d0544a04da53f3d",
        "width": 3866,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-04T16:02:15Z",
        "tags": [],
        "bytes": 4165795,
        "type": "upload",
        "etag": "f0ae48801d85156c9a8571b70d0d0c51",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556985735/avalanche2019/vw1oy6zm6bajlzlylzwq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556985735/avalanche2019/vw1oy6zm6bajlzlylzwq.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "3D->2D->3D lungs (Part I)"
  },
  {
    "_id": "HRNFKG33KsdTEixB3",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-02-01T05:09:42.934Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/czefmpss0gnjsnqcdi2w",
        "version": 1548997909,
        "signature": "daf400917ef0a956dd2887a960ed6eeea944e8a1",
        "width": 7200,
        "height": 5400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T05:11:49Z",
        "tags": [],
        "bytes": 5019330,
        "type": "upload",
        "etag": "e20798261e5d8af625338932be7e63f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548997909/avalanche2019/czefmpss0gnjsnqcdi2w.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548997909/avalanche2019/czefmpss0gnjsnqcdi2w.jpg"
      },
      {
        "public_id": "avalanche2019/tsezqvjbixxzntempykt",
        "version": 1548997932,
        "signature": "56e0e03524ccb97e04033b79b4860d39317fe769",
        "width": 7200,
        "height": 5400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T05:12:12Z",
        "tags": [],
        "bytes": 5059909,
        "type": "upload",
        "etag": "87efbea02ce8d4f68c47ce51d51f8e87",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548997932/avalanche2019/tsezqvjbixxzntempykt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548997932/avalanche2019/tsezqvjbixxzntempykt.jpg"
      },
      {
        "public_id": "avalanche2019/rvml8srwrta7liwlaclx",
        "version": 1548997957,
        "signature": "da53726c9c6d087e45a5e5b89b85c95eb3e36184",
        "width": 1790,
        "height": 1352,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T05:12:37Z",
        "tags": [],
        "bytes": 4248802,
        "type": "upload",
        "etag": "a6704e8dcfbe08e00ed28c6dba17445e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548997957/avalanche2019/rvml8srwrta7liwlaclx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548997957/avalanche2019/rvml8srwrta7liwlaclx.png"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:15.686Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Making human body as my tiles and put together my initials.",
    "inspiration_name": "Someone's Bio Textbook",
    "inspiration_url": "http://healthdocbox.com/Nutrition/74464523-Hltaap001-recognise-healthy-body-systems.html"
  },
  {
    "_id": "HRhrTyXfstE7S2Qpu",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:17:21.686Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ypuj3bbwrmpplyruw8vl",
        "version": 1552072649,
        "signature": "dd4578d25b5d8bca48fcfbdb5c7ded6b0ec126c7",
        "width": 1072,
        "height": 1374,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:17:29Z",
        "tags": [],
        "bytes": 457157,
        "type": "upload",
        "etag": "39991b093d678dd76b01793804452c9e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552072649/avalanche2019/ypuj3bbwrmpplyruw8vl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552072649/avalanche2019/ypuj3bbwrmpplyruw8vl.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "HSYLby4zruA9iZXyR",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T21:54:30.714Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sl2mlyfdptimczkyopj1",
        "version": 1555019681,
        "signature": "cf936a1a0f476d8227cc0bd5c1dc808723e6e12f",
        "width": 1200,
        "height": 1082,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T21:54:41Z",
        "tags": [],
        "bytes": 158299,
        "type": "upload",
        "etag": "0b2930d36bde642ae458a236f05c6f08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555019681/avalanche2019/sl2mlyfdptimczkyopj1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555019681/avalanche2019/sl2mlyfdptimczkyopj1.png"
      },
      {
        "public_id": "avalanche2019/mjlcg9ugbqua5oq2zeuf",
        "version": 1555019692,
        "signature": "21b34ebd8fcfbd056ea5a4ead5ddd6e6c7fe00fd",
        "width": 1142,
        "height": 1050,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T21:54:52Z",
        "tags": [],
        "bytes": 154489,
        "type": "upload",
        "etag": "0eeef630c8c46e058e85f924c2554c4b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555019692/avalanche2019/mjlcg9ugbqua5oq2zeuf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555019692/avalanche2019/mjlcg9ugbqua5oq2zeuf.png"
      },
      {
        "public_id": "avalanche2019/xfuttjzid11jgjymescn",
        "version": 1555019704,
        "signature": "b4e8e995b7b86782cd4851060b3553660926abeb",
        "width": 1248,
        "height": 1064,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T21:55:04Z",
        "tags": [],
        "bytes": 159446,
        "type": "upload",
        "etag": "95475d5d537bf718dacf3ed2ec7dc06b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555019704/avalanche2019/xfuttjzid11jgjymescn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555019704/avalanche2019/xfuttjzid11jgjymescn.png"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T02:48:45.869Z" }
      }
    ],
    "title": "",
    "description": "Alternate Arby's Slogans.",
    "code": "// require /text/tracery.min.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/addons/p5.dom.js\n\nlet arby;\nlet url =\n  \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f4/Arby%27s_logo.svg/1200px-Arby%27s_logo.svg.png\";\n\nconst slogan = {\n  sentence: \"Arby's, #pronoun# #helpingVerb# #article# #noun#\",\n  pronoun: [\"We\", \"They\", \"I\", \"You\", \"Somebody\", \"A friend I know\"],\n  helpingVerb: [\n    \"have\",\n    \"had\",\n    \"lost\",\n    \"command\",\n    \"demand\",\n    \"require\",\n    \"sweat\",\n    \"want\",\n    \"pray for\",\n    \"lick\",\n    \"sleep with\",\n    \"believe\",\n    \"miss\"\n  ],\n  article: [\"the\", \"those\", \"my\", \"your\", \"our\", \"hidden\", \"mystery\"],\n  noun: [\n    \"Meats\",\n    \"Meat\",\n    \"Gabagoo\",\n    \"Cottage Cheese\",\n    \"Mayonaise\",\n    \"Pickles\",\n    \"Head Cheese\",\n    \"Meat Sweats\",\n    \"Ham Hocks\",\n    \"Loose Meat\",\n    \"Hot Beef Sunday\",\n    \"Scrapple\"\n  ]\n};\n\nlet button;\nfunction preload() {\n  arby = loadImage(url);\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  arby.resize(300, 256);\n  // button = createButton(\"Slogan Generator\");\n  // button.position(160, 350);\n  // button.style(\"background-color\", \"red\");\n  // button.style(\"h\", \"blue\");\n}\n\nfunction draw() {\n  background(255);\n  image(arby, 100, 100);\n  // button.mousePressed(newSlogan);\n  // let writeup = createP(newSlogan.value);\n  // console.log(writeup);\n}\n\nfunction newSlogan() {\n  let grammar = tracery.createGrammar(slogan);\n  story = grammar.flatten(\"#sentence#\");\n  const storyP = document.createElement(\"createDiv\");\n  storyP.style = \"font-size: 30px; color: red; text-align: center\";\n  // storyP.position(400, 200);\n\n  // storyDiv;\n\n  storyP.textContent = story;\n  document.body.insertAdjacentElement(\"beforeend\", storyP);\n  // console.log(story);\n}\n\nsetTimeout(newSlogan, 10);"
  },
  {
    "_id": "HTN6JnhPGou3gH2ua",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:30:07.191Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rw8va2baxublxpvoykys",
        "version": 1552073416,
        "signature": "4376641a9f85e4ef4e2459818059fabf13055c17",
        "width": 1076,
        "height": 1382,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:30:16Z",
        "tags": [],
        "bytes": 2283225,
        "type": "upload",
        "etag": "6f25f4059d1610540def4170db049b1b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552073416/avalanche2019/rw8va2baxublxpvoykys.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552073416/avalanche2019/rw8va2baxublxpvoykys.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "HTdytQELv3SDjcYSF",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T23:11:28.981Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gz7jib1yuxnirfske3pu",
        "version": 1550099520,
        "signature": "9ac11123d618f64e2bf293a385965b9c50e02991",
        "width": 1196,
        "height": 1118,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-13T23:12:00Z",
        "tags": [],
        "bytes": 78251,
        "type": "upload",
        "etag": "c9862574d8038441ae1968577a78b6a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550099520/avalanche2019/gz7jib1yuxnirfske3pu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550099520/avalanche2019/gz7jib1yuxnirfske3pu.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T05:23:54.559Z" }
      }
    ],
    "title": "",
    "description": "What does noise sound like?",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.7.0/Tone.js\n\nlet yoff = 0.0;\nlet xoff = 0;\nlet synth;\nlet notes = ['A3', 'B2', 'C3', 'D2', 'E3', 'F3', 'F4','C3', 'D4', 'D3', 'B3', 'G4', 'E3', 'F4'];\nlet spots = [];\nlet stepSize = 50;\nlet cols = [];\n\nlet slider;\nlet start = false;\nlet freeverb;\n\nfunction setup() {\n\tcreateCanvas(600, 600);\n\tfreeverb = new Tone.Freeverb({\n\t\troomSize: 0.5,\n\t\tdampening: 3000\n\t}).toMaster();\n\tsynth = new Tone.PolySynth(4, Tone.Synth).connect(freeverb);\n\n\tbackground(255);\n\tnoStroke();\n\tslider = createSlider(10, 200, 100);\n\tslider.position(200, 30);\n\n\tlet cold = createP(\"cold\");\n\tcold.position(150, 15);\n\n\tlet hot = createP(\"hot\");\n\thot.position(350, 15);\n\n\tassignValues(slider.value());\n\n\n\n}\n\nfunction draw() {\n\n\n\n\tlet sval = map(slider.value(), 10, 200, 0.9, 0.2);\n\tfreeverb.roomSize.value = sval;\n\n\ttranslate(0, 40);\n\tfor (var y = 0; y < height / stepSize; y++) {\n\t\tfor (var x = 0; x < width / stepSize; x++) {\n\t\t\t//fill(0,100);\n\n\t\t\tif (mouseX > x * stepSize &&\n\t\t\t\tmouseX < x * stepSize + 50 &&\n\t\t\t\tmouseY > y * stepSize &&\n\t\t\t\tmouseY < y * stepSize + 50) {\n\t\t\t\tfill(0);\n\t\t\t\tplay(spots[x][y].note);\n\t\t\t\tsynth.triggerRelease(spots[x][y].note);\n\t\t\t\tstart = false;\n\n\t\t\t} else\n\t\t\t\tfill(spots[x][y].colr);\n\t\t\trect(x * stepSize, y * stepSize, 50, 50);\n\n\t\t}\n\n\t}\n\n}\n\n\n\n\nfunction mouseReleased() {\n\tif (mouseX > 200 & mouseX < 500 && mouseY > 10 && mouseY < 50) {\n\t\tassignValues(slider.value());\n\t}\n}\n\nfunction mouseMoved() {\n\n\tif (mouseY > 40 && mouseY < height) {\n\t\tstart = true;\n\t} else\n\t\tstart = false;\n}\n\nfunction play(notePick) {\n\tif (start) {\n\t\tsynth.triggerAttackRelease(notePick, '2n')\n\t}\n}\n\n\n\nfunction getColorx(val) {\n\n\tvar x = map(noise(xoff, yoff), 0, 1, val, 200);\n\treturn x;\n}\n\nfunction getColory() {\n\tvar y = map(noise(xoff, yoff), 0, 1, 50, 150);\n\treturn y;\n}\n\nfunction assignValues(value) {\n\n\tfor (let x = 0; x < width / stepSize; x++) {\n\t\tspots[x] = [];\n\t\tcols[x] = []; // create nested array\n\t\tfor (let y = 0; y < height / stepSize; y++) {\n\t\t\t// let rand = Math.floor(random(0, 7));\n\t\t\t\n\t\t\t//cleanup-----------\n\t\t\tlet rand;\n\t\t\t\n\t\t\tif (value < 100) {\n\t\t\t\trand = Math.floor(map(getColorx(value), value, 100, 0, 6));\n\t\t\t} else if (value > 100) {\n\t\t\t\trand = Math.floor(map(getColorx(value), value, 200, 6, notes.length));\n\t\t\t\t}else{\n\t\t\t\trand = Math.floor(random(0, 7));\n\t\t\t\t}\n\t\t\tspots[x][y] = {\n\t\t\t\tcolr: color(getColorx(value), getColory(), 100),\n\t\t\t\t//map it\n\t\t\t\tnote: notes[rand]\n\n\t\t\t};\n\n\t\t\txoff += 0.05;\n\t\t}\n\t\tyoff += 0.01;\n\t}\n\n\n\n}"
  },
  {
    "_id": "HTyhHbXbbarBiGpag",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-05-05T02:50:04.234Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ofxu117onjbxa7k1zbsk",
        "version": 1557024642,
        "signature": "3488e4d8ee2a9645c6bce5fc9655fc5bde810062",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-05T02:50:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 10471959,
        "type": "upload",
        "etag": "2a9dc06e3339120872a3b1fa7f01ddcb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557024642/avalanche2019/ofxu117onjbxa7k1zbsk.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557024642/avalanche2019/ofxu117onjbxa7k1zbsk.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "68711",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "5307433",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 5422806,
        "duration": 15.448767,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "theme of my senior project"
  },
  {
    "_id": "HXkb6QQKcdLehdpji",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T16:52:49.353Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uj4epo1vbdiezn8tuppw",
        "version": 1555692780,
        "signature": "562e1e0df0493691e8d704f18631575c9d65bdab",
        "width": 944,
        "height": 944,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T16:53:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 368445,
        "type": "upload",
        "etag": "b26af5f32ce160af772998504495e118",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555692780/avalanche2019/uj4epo1vbdiezn8tuppw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555692780/avalanche2019/uj4epo1vbdiezn8tuppw.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "128537",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "299251",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 441449,
        "duration": 6.652993,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Drum",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\nlet soundA;\n\n\n\n\nvar balls=[];\nvar s;\n\nfunction preload() {\n  soundA = loadSound(\"/sound/sketches/snare.wav\");\n\n}\n\n\nfunction setup() {\n\tcreateCanvas(500, 500,WEBGL);\n  noCursor();\n}\n\nfunction draw() {\n\tbackground(0,12,50);\n  \n\ts = map(random(0.01),0,0.5,1,3);\n\t\n\tfor(b of balls){\n\t\tb.update();\n\t}\n  // print(vol);\n}\n\nfunction mouseDragged(){\n\tballs.push(new Ball(mouseX,mouseY));\n    soundA.play();\n}\n\nclass Ball{\n\tconstructor(x,y){\n\t\tthis.x=x-width/2;\n\t\tthis.y=y-height/2;\n\t\tthis.z=random(-30,30);\n\t\tthis.dx=random(-5,5);\n\t\tthis.dy=random(-5,5);\n\t\tthis.dz=random(-10,4);\n\t\tthis.c=color(255,random(100,180),0,200);\n\t\tthis.size=random(20,50);\n\t}\n\t\n\tupdate(){\n\t\tthis.x+=this.dx;\n\t\tthis.y+=this.dy;\n\t\tthis.z+=this.dz;\n\t\tpush();\n\t\ttranslate(this.x,this.y, this.z);\n  \trotateX(frameCount * 0.01);\n  \trotateY(frameCount * 0.01);\n    fill(this.c);\n  \tsphere(this.size*s);\n\t\tpop();\n\t}\n}"
  },
  {
    "_id": "HZYuK4ttQxRTfiaaB",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T17:05:49.431Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/faucw82nomygbx7rsiuh",
        "version": 1557508077,
        "signature": "69ae5227a7d19679690eff6f6db842e533090805",
        "width": 934,
        "height": 760,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-10T17:07:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 330825,
        "type": "upload",
        "etag": "663384f97b8cb074b4e486d85204a68b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557508077/avalanche2019/faucw82nomygbx7rsiuh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557508077/avalanche2019/faucw82nomygbx7rsiuh.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "125315",
          "dar": "467:380"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 128994,
        "duration": 20.466667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/l5vf0ti36cnrievc1ges",
        "version": 1557508081,
        "signature": "c9b0a9294900c10f7c65b4ef8d0cb020829f3166",
        "width": 934,
        "height": 760,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-10T17:08:01Z",
        "tags": [],
        "bytes": 34611,
        "type": "upload",
        "etag": "6e38abcf7ac04903fd0f99c55da2c65f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557508081/avalanche2019/l5vf0ti36cnrievc1ges.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557508081/avalanche2019/l5vf0ti36cnrievc1ges.jpg"
      },
      {
        "public_id": "avalanche2019/m7i1gv2xxvkxnx7lc0md",
        "version": 1557508084,
        "signature": "d1fe4168a7a2fdfb91bcf2f3d7775c8fde333e7f",
        "width": 934,
        "height": 760,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-10T17:08:04Z",
        "tags": [],
        "bytes": 33809,
        "type": "upload",
        "etag": "504c141777f5e8ccd69a34e2eea02759",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557508084/avalanche2019/m7i1gv2xxvkxnx7lc0md.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557508084/avalanche2019/m7i1gv2xxvkxnx7lc0md.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T23:04:35.76Z" }
      }
    ],
    "title": "",
    "description": "Extending on the last game, I have added animation and jump functionality to this microgame. \nUse the Left and Right Arrow key to move the ball, and the Up arrow key to make it jump. \nBut, I have tweaked the gravity to make it stronger and more \"flappy bird kind.\"\n\nI have used Illustrator to create each animated frame, and p5.play.js to create the interaction. \n\nCollect the coin and finish the game. Avoid going to the ends of the platform as you will fall.",
    "inspiration_name": "Coin Pickup Advanced",
    "inspiration_url": "http://molleindustria.github.io/p5.play/examples/index.html?fileName=keyPresses.js",
    "code": "// Program to move a ball and jump to pickup a coin. \n// In theis advanced, ball will jump and pick coins.\n// The ball and the coins are animated\n\n// Reference: http://molleindustria.github.io/p5.play/examples/index.html?fileName=keyPresses.js\n\n// Github link:\n// https://github.com/akshansh2593/CompForm/tree/master/coinPickup_advanced\n\n\nvar ball;\nvar coin;\nvar platform;\nvar GRAVITY = 2;\nvar JUMP = 10;\n\nfunction setup() {\n    createCanvas(800, 600);\n\n    ball = createSprite(300, 150);\n    // Ball on the platform\n    ball.addAnimation('normal', 'sketches/ball001.png', 'sketches/ball012.png');\n    // Ball in the air\n    ball.addAnimation('stretch', 'sketches/ball_bounce001.png', 'sketches/ball_bounce012.png');\n    ball.setCollider('circle', 0, 0, 64);\n    // ball.debug = true;\n\n    coin = createSprite(500, 200);\n    coin.addAnimation('normal', 'sketches/coin001.png', 'sketches/coin006.png');\n    coin.addImage('transformed', loadImage('sketches/coinTaken.png'));\n    coin.setCollider('circle', 0, 0, 50);\n    // coin.debug = true;\n\n    platform = createSprite(400, 500);\n    platform.addImage(loadImage('sketches/platform.png'));\n\n    ball.depth = 10;\n}\n\nfunction draw() {\n    background(255, 255, 255);\n\n    //if no arrow input set velocity to 0\n    ball.velocity.x = 0;\n\n    if (keyIsDown(LEFT_ARROW)) {\n        ball.velocity.x = -5;\n    }\n    if (keyIsDown(RIGHT_ARROW)) {\n        ball.velocity.x = 5;\n    }\n    if (keyIsDown(UP_ARROW)) {\n        ball.changeAnimation('stretch');\n        ball.animation.rewind();\n        ball.velocity.y = -JUMP;\n    }\n\n    //instead of checking the colliders or bounding box overlaps\n    //I can just check a point against a collider\n    if (coin.overlapPoint(ball.position.x, ball.position.y))\n        coin.changeImage('transformed');\n\n    //Or check a point against the pixels of a sprite animation or image\n    //if the bottom of the ball is not overlapping with the non transparent pixels\n    //of the platform make it fall\n    if (platform.overlapPixel(ball.position.x, ball.position.y + 30) == false)\n        ball.velocity.y += GRAVITY;\n\n    //if the bottom of the ball is overlapping the non transparent pixels\n    //of the platform move it up one pixel until it doesn't overlap anymore\n    while (platform.overlapPixel(ball.position.x, ball.position.y + 30)) {\n        ball.position.y--;\n        ball.velocity.y = 0;\n        ball.changeAnimation('normal');\n    }\n\n    drawSprites();\n}"
  },
  {
    "_id": "HiXRb4RFDFSGwHnA5",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T04:43:20.251Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u9djzacfxlb0ehvfl8ee",
        "version": 1549428221,
        "signature": "dd18b3b3dab0268af15d7b789a04a9e1bad864b4",
        "width": 2880,
        "height": 1444,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T04:43:41Z",
        "tags": [],
        "bytes": 987077,
        "type": "upload",
        "etag": "d97617e8304bd89a3b8317290d57775e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549428221/avalanche2019/u9djzacfxlb0ehvfl8ee.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549428221/avalanche2019/u9djzacfxlb0ehvfl8ee.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-06T15:13:34.673Z" }
      }
    ],
    "title": "",
    "description": "Spin-off of our in-class example. Different random color for rows with random radius' for ellipse. Different on every refresh.\n\n`made with p5`",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\n// inspired by in-class example\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noLoop();\n  noStroke();\n  fill(255, 255, 255);\n}\n\nfunction draw() {\n  let rows = height;\n  let cols = width;\n\n  for (row = 0; row < rows; row++) {\n    // random row color\n    fill(random(255), random(255), random(255));\n    for (col = 0; col < cols; col++) {\n      drawThing(col * 50 + 25, row * 50 + 25);\n    }\n  }\n}\n\nlet brownianRadius = 25;\n\nfunction drawThing(x, y) {\n  let radius;\n  // brownian\n  brownianRadius += random(-5, 5);\n  radius = brownianRadius;\n  stroke(\"black\");\n  ellipse(x, y, radius, radius);\n}"
  },
  {
    "_id": "HoWhjTZYG6Y7rZZrm",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T14:33:06.749Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/scfllxlbavabxxzeipxl",
        "version": 1549895688,
        "signature": "580900a2fcf939ee9a9204cacdc2476846eaaaf1",
        "width": 1594,
        "height": 1116,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-11T14:34:48Z",
        "tags": [],
        "bytes": 195663,
        "type": "upload",
        "etag": "564b07f69f2a9984dffeb53b438bcb3c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549895688/avalanche2019/scfllxlbavabxxzeipxl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549895688/avalanche2019/scfllxlbavabxxzeipxl.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My 90 min is up.  Still trying to globally change circles sizes, as they remain randomly placed.  UPDATE:  figured it out.",
    "inspiration_name": "Inspired from Noah's circles - from 'Random'",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\n\nvar x, y;\nvar radius;\n// var h, s, b;\nvar col = [];\n\nvar circles = [];\nvar r, g, b, a;\n\n//var dirX, dirY;\nvar angle;\nvar xOffset, yOffset;\n\nvar size_slider;\n\nfunction setup() {\n  angleMode(DEGREES);\n  createCanvas(1000, 700);\n  radius = 10;\n //noLoop()\n  \n  createP('Change color and size')\n  slider = createSlider(10, 200, 100);\n  //slider.position(30, 30);\n  slider.style('width', '180px');\n\n\n  for (var i = 0; i < 60; i++) {\n    r = 0;\n    g = random(10);\n    b = random(255);\n    a = random(20, 200);\n    col[i] = color(r, g, b, a);\n    circles[i] = new Circle();\n  }\n}\n\n\nfunction draw() {\n  background(20,0,20);\n  \n  var val = slider.value();\n  //background(200, 100, 200, 1);\n\n  for (var i = 0; i < circles.length; i++) {\n    fill(val, random(10), random (255));\n    circles[i].update();\n    circles[i].drawCircle();\n\n  }\n}\n\n\nfunction mousePressed (){\nloop();\n}\n\nfunction mouseReleased(){\n  noLoop();\n}\n\n\nfunction Circle() {\n  this.x = random(width);\n  this.y = random(height);\n  this.dirX = random(-5, 5);\n  this.dirY = random(-5, 5);\n\n  this.update = function() {\n    this.x += this.dirX;\n    this.y += this.dirY;\n\n    if (this.x >= width - radius / 2) {\n      this.dirX *= -1;\n    } else if (this.x <= 0 + radius / 2) {\n      this.dirX *= -1;\n    } else if (this.y >= height - radius / 2) {\n      this.dirY *= -1;\n    } else if (this.y <= 0 - radius / 2) {\n      this.dirY *= -1;\n    }\n  }\n  this.drawCircle = function() {\n    angle = random(160);\n    var distance = random(9);\n    xOffset = 0;\n    yOffset = 0;\n    noStroke();\n\n    ellipse(this.x + xOffset, this.y + yOffset, slider.value(), slider.value());\n  }\n}\n\n\nvar x, y;\nvar radius;\n// var h, s, b;\nvar col = [];\n\nvar circles = [];\nvar r, g, b, a;\n\n//var dirX, dirY;\nvar angle;\nvar xOffset, yOffset;\n\nvar size_slider;\n\nfunction setup() {\n  angleMode(DEGREES);\n  createCanvas(1000, 700);\n  radius = 10;\n //noLoop()\n  \n  createP('Change color and size')\n  slider = createSlider(10, 200, 100);\n  //slider.position(30, 30);\n  slider.style('width', '180px');\n\n\n  for (var i = 0; i < 60; i++) {\n    r = 0;\n    g = random(10);\n    b = random(255);\n    a = random(20, 200);\n    col[i] = color(r, g, b, a);\n    circles[i] = new Circle();\n  }\n}\n\n\nfunction draw() {\n  background(20,0,20);\n  \n  var val = slider.value();\n  //background(200, 100, 200, 1);\n\n  for (var i = 0; i < circles.length; i++) {\n    fill(val, random(10), random (255));\n    circles[i].update();\n    circles[i].drawCircle();\n\n  }\n}\n\n\nfunction mousePressed (){\nloop();\n}\n\nfunction mouseReleased(){\n  noLoop();\n}\n\n\nfunction Circle() {\n  this.x = random(width);\n  this.y = random(height);\n  this.dirX = random(-5, 5);\n  this.dirY = random(-5, 5);\n\n  this.update = function() {\n    this.x += this.dirX;\n    this.y += this.dirY;\n\n    if (this.x >= width - radius / 2) {\n      this.dirX *= -1;\n    } else if (this.x <= 0 + radius / 2) {\n      this.dirX *= -1;\n    } else if (this.y >= height - radius / 2) {\n      this.dirY *= -1;\n    } else if (this.y <= 0 - radius / 2) {\n      this.dirY *= -1;\n    }\n  }\n  this.drawCircle = function() {\n    angle = random(160);\n    var distance = random(9);\n    xOffset = 0;\n    yOffset = 0;\n    noStroke();\n\n    ellipse(this.x + xOffset, this.y + yOffset, slider.value(), slider.value());\n  }\n}"
  },
  {
    "_id": "HqkfrARDyCtBckjcY",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:52:43.874Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mqgxwkz1eknnxl8h3z4f",
        "version": 1553882889,
        "signature": "37bf137a1f8e9bc85530bb3084f37abfae17484d",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T18:08:09Z",
        "tags": [],
        "bytes": 186179,
        "type": "upload",
        "etag": "37086c8328a3e5c5d67d387afca32e44",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553882889/avalanche2019/mqgxwkz1eknnxl8h3z4f.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553882889/avalanche2019/mqgxwkz1eknnxl8h3z4f.png"
      },
      {
        "public_id": "avalanche2019/ybpwmjrd5jstsypkssyk",
        "version": 1553882927,
        "signature": "e662832a4e789ff0bb473db9760ae419c24eef79",
        "width": 810,
        "height": 550,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T18:08:47Z",
        "tags": [],
        "bytes": 1340034,
        "type": "upload",
        "etag": "6cdf05c303839760dcbad13383344419",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553882927/avalanche2019/ybpwmjrd5jstsypkssyk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553882927/avalanche2019/ybpwmjrd5jstsypkssyk.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Dota 2 International Aegis shape created using gradient and compound path (poster in progress)",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar center = new Point(250, 250);\nvar topLeft = view.center - [80, 80];\nvar bottomRight = view.center + [80, 80];\n\n// create the red, rotated square\n\nvar path1 = new Path.Circle(new Point(250, 250), 200);\n\n\n// // create the green rectangle\n// var rectangle2 = new Rectangle(new Point(0, 100), new Size(250, 300));\n// var path2 = new Path.Rectangle(rectangle2);\n// path2.strokeColor = 'green';\n\n// cut the green rectangle from the red square\n// style the result\n\nvar path4 = new CompoundPath({\n    children: [\n        new Path.Rectangle({\n            center: new Point(80, 380),\n            size: new Point(110,130),\n            radius: 30\n        }),\n        new Path.Rectangle({\n            center: new Point(420, 380),\n            size: new Point(110,130),\n            radius: 30\n        }),\n        new Path.Circle({\n            center : new Point (250,250),\n            radius: 20\n        })\n    ],\n});\n\nvar comboPath = path1.subtract(path4);\ncomboPath.style = {\n    strokeColor: 'black',\n        fillColor: {\n        gradient: {\n            stops: ['#fcf5e0', '#f7e9be', '#a89868']\n        },\n        origin: topLeft,\n        destination: bottomRight\n    },\n    strokeWidth: 2,\n    shadowColor: new Color(0, 0, 0, .5),\n    shadowBlur: 20,\n    shadowOffset: new Point(5, 5),\n}"
  },
  {
    "_id": "HsN2YrBLkb9N2mNya",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T19:28:35.617Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sb7eygzzeknoi2xbd18n",
        "version": 1554492523,
        "signature": "fbb2a60f5d96b939595f59aa1d7fee066ae2ef6b",
        "width": 2304,
        "height": 1334,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T19:28:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 1852146,
        "type": "upload",
        "etag": "3ee13edb4e307cfdd924e57867b3ff45",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554492523/avalanche2019/sb7eygzzeknoi2xbd18n.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554492523/avalanche2019/sb7eygzzeknoi2xbd18n.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "253375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "3423418",
          "dar": "1152:667"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 3704292,
        "duration": 4,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T20:00:53.106Z" }
      }
    ],
    "title": "",
    "description": "Falling rings of circling balls"
  },
  {
    "_id": "JKLN5fCM9NBJhpHqY",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T02:52:17.242Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eqey71sw0eysykvihvx4",
        "version": 1556679154,
        "signature": "d7edfe52d07b81131259ba9f6139fee37becb0d1",
        "width": 850,
        "height": 822,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T02:52:34Z",
        "tags": [],
        "bytes": 40293,
        "type": "upload",
        "etag": "26e1b80d9ca121bf74e5047d179ed365",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556679154/avalanche2019/eqey71sw0eysykvihvx4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556679154/avalanche2019/eqey71sw0eysykvihvx4.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-01T13:30:33.658Z" }
      }
    ],
    "title": "",
    "description": "Still playing with cubes  - cubes in cube",
    "code": "WALL_THICKNESS = 1;\nSIZE = 25;\nSTEPS = 2;\nTOTAL_ROTATION = 60;\nLAYER = 0.2;\n\nmodule make_cube_edges(size, rotation) {\n    d1 = size - WALL_THICKNESS*4; \n    d2 = size + WALL_THICKNESS;\n    rotate([0, 0, rotation])\n    difference() {\n        //full cube\n        cube([size, size, size], true);\n        cube([d2, d1, d1], true);\n        cube([d1, d2, d1], true); \n        cube([d1, d1, d2], true); \n    }        \n}\n\nfor (i=[0:STEPS]) {\n    make_cube_edges(SIZE / exp(i/STEPS), i/STEPS * TOTAL_ROTATION, i>0);\n}"
  },
  {
    "_id": "JMwvzivh6TTsoJ9PN",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T19:52:39.579Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jobdnjyikcx1ck61kgmv",
        "version": 1549050782,
        "signature": "91a4e759758c5593f416aa57932399fb347d7f7a",
        "width": 1668,
        "height": 1188,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T19:53:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 4263141,
        "type": "upload",
        "etag": "c9d1dd167c2aaa87ebe36e08704e9c51",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549050782/avalanche2019/jobdnjyikcx1ck61kgmv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549050782/avalanche2019/jobdnjyikcx1ck61kgmv.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "6402691",
          "dar": "139:99"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6417976,
        "duration": 5.314,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "random hieroglyphs -processing"
  },
  {
    "_id": "JQNaN5gbLRy5rxHvn",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:06:49.509Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "but at least i know how to play twinkle twinkle lil star : ' (...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n  ['C4', '2n'],\n ['C4', '2n'],\n\n     ['A4', '2n'],\n ['A4', '2n'],\n \n   ['B4', '2n'],\n ['B4', '2n'],\n \n  ['A4', '2n'],\n  \n  ['rest', '0.5s'],\n  \n    ['G4', '2n'],\n ['G4', '2n'],\n\n     ['F4', '2n'],\n ['F4', '2n'],\n \n   ['E4', '2n'],\n ['E4', '2n'],\n \n   ['D4', '2n']\n\n\n//   ['rest', '1m'],\n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "JSc2Maf7Lys9bhXGS",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T00:15:13.567Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tohcoyudrnbhkxtkfnf5",
        "version": 1556842533,
        "signature": "74116236918b00b3b100e1254782466d16b1cc5b",
        "width": 1040,
        "height": 600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:15:33Z",
        "tags": [],
        "bytes": 95597,
        "type": "upload",
        "etag": "6916f933cb56af57e309e9ec4d1f957d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556842533/avalanche2019/tohcoyudrnbhkxtkfnf5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556842533/avalanche2019/tohcoyudrnbhkxtkfnf5.png"
      },
      {
        "public_id": "avalanche2019/ukin5xlfes9rzgyq6yvi",
        "version": 1556842603,
        "signature": "b3853302fb00495420a147beef668b63d45bacad",
        "width": 1826,
        "height": 1014,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:16:43Z",
        "tags": [],
        "bytes": 76027,
        "type": "upload",
        "etag": "d80dabab9b7413d36e4a508f53ca3e05",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556842603/avalanche2019/ukin5xlfes9rzgyq6yvi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556842603/avalanche2019/ukin5xlfes9rzgyq6yvi.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Modeled this lamp inspired by a table I saw in a weird 60s ad a while ago. Made using Maya, going to make it in OpenScad next. \n\n(Kinda stressing me out that in the screenshot the bottom and top look off but they are centered, promise!)"
  },
  {
    "_id": "JXMmLCY8Afxepbmv2",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T19:09:40.075Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dc1lxk1zhwutsqaggxyf",
        "version": 1549567168,
        "signature": "cbced0c0c3dc87afc4060dcf2923c49653d9af70",
        "width": 3112,
        "height": 2416,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T19:19:28Z",
        "tags": [],
        "bytes": 643719,
        "type": "upload",
        "etag": "35033702da9351cb2fdbc0091f2a8181",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549567168/avalanche2019/dc1lxk1zhwutsqaggxyf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549567168/avalanche2019/dc1lxk1zhwutsqaggxyf.jpg"
      },
      {
        "public_id": "avalanche2019/kaioe936cyagpqmpfvoo",
        "version": 1549567181,
        "signature": "ad93939d23e629049eb8ff4dc14c4b138dcc5257",
        "width": 3208,
        "height": 2388,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T19:19:41Z",
        "tags": [],
        "bytes": 372125,
        "type": "upload",
        "etag": "0010b6aaa36751d63ba215884a0cdb5c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549567181/avalanche2019/kaioe936cyagpqmpfvoo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549567181/avalanche2019/kaioe936cyagpqmpfvoo.jpg"
      },
      {
        "public_id": "avalanche2019/hm9nxj6stkwwy4tknff0",
        "version": 1549567209,
        "signature": "b235826f1d52f5382cf14de314208aec9e1135e1",
        "width": 2036,
        "height": 1524,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-07T19:20:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 8506986,
        "type": "upload",
        "etag": "4ec52b086bdd8ad91242a9ffb9807458",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549567209/avalanche2019/hm9nxj6stkwwy4tknff0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549567209/avalanche2019/hm9nxj6stkwwy4tknff0.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "High",
          "bit_rate": "15344239",
          "dar": "509:381"
        },
        "frame_rate": 60,
        "bit_rate": 15348644,
        "duration": 4.433984,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Some random boxes."
  },
  {
    "_id": "JXTbLSWhphg3ktPgh",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T20:15:23.878Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fvkftuqznslue56p18mj",
        "version": 1550866548,
        "signature": "2b2bf14e08d2fe58d4eaf24ada2c391ee268a03f",
        "width": 1402,
        "height": 404,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T20:15:48Z",
        "tags": [],
        "bytes": 28292,
        "type": "upload",
        "etag": "af367c46d67a82d52c305cf3aeb6e070",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550866548/avalanche2019/fvkftuqznslue56p18mj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550866548/avalanche2019/fvkftuqznslue56p18mj.jpg"
      },
      {
        "public_id": "avalanche2019/tc5p8xo2gkirpxrexlcg",
        "version": 1550866557,
        "signature": "c86f4cf3c9c9b7eb46bca3426ef164101ff51aed",
        "width": 1428,
        "height": 728,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T20:15:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 3599201,
        "type": "upload",
        "etag": "4c96493cea89834c5d0f7acb9380e42c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550866557/avalanche2019/tc5p8xo2gkirpxrexlcg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550866557/avalanche2019/tc5p8xo2gkirpxrexlcg.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "313737",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "854061",
          "dar": "51:26"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1176049,
        "duration": 24.483333,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T14:53:50.837Z" }
      }
    ],
    "title": "",
    "description": "First take on a moving wave",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\nlet clickedOnce = false;\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  createCanvas(700, 200);\n  noiseOsc = new p5.Noise();\n  // sinOsc = new p5.SinOsc(1);\n  // noiseEnvelope = new p5.Envelope();\n  // // set attackTime, decayTime, sustainRatio, releaseTime\n  // noiseEnvelope.setADSR(0.05, 0.1, 0.05, 1);\n  // // set attackLevel, releaseLevel\n  // penEnvelope.setRange(0.1, 0);\n  pan = new p5.Panner3D();\n\n  // fft = new p5.FFT();\n  createP(\"Octaves\");\n  noiseDetailSlider1 = createSlider(1, 12, 4, 1);\n  createP(\"Falloff\");\n  noiseDetailSlider2 = createSlider(0, 1, 0.25, 0.001);\n  textAlign(CENTER);\n  textSize(24);\n  textStyle(BOLD);\n  textFont(\"Helvetica\");\n  text(\"click to play\", width / 2, height / 2);\n}\n\nfunction draw() {\n  if (clickedOnce) {\n    background(0);\n  }\n  noiseDetail(noiseDetailSlider1.value(), noiseDetailSlider2.value());\n  let xPan = sin(frameCount * noise(frameCount * 0.001) * 0.01);\n  noiseOsc.pan(xPan);\n  translate(width / 2, 0);\n  // console.log(xPan);\n  let xPos = (xPan * width) / 2;\n  // ellipse(xPos, 0, 10, 10);\n  drawWave(xPos);\n}\n\nfunction mouseClicked() {\n  clickedOnce = true;\n  noiseOsc.start();\n  noiseOsc.amp(0.1);\n}\nlet prevXArr = [];\nfunction drawWave(xPos) {\n  noStroke();\n  fill(200);\n  // ellipse(xPos, 20, 10, 10);\n  for (let i = 0; i < prevXArr.length; i++) {\n    // fill(0, 0, 1, i * 0.01);\n    // ellipse(prevXArr[i], i, 2, 2);\n    stroke(0, 0, 1, i * 0.01);\n    strokeWeight(1);\n    line(prevXArr[i], i, prevXArr[i - 1], i - 1);\n  }\n  for (let i = 0; i < prevXArr.length; i++) {\n    // fill(0, 0, 1, i * 0.01);\n    // ellipse(prevXArr[i], height - i, 2, 2);\n    stroke(0, 0, 1, i * 0.01);\n    strokeWeight(1);\n    line(prevXArr[i], height - i, prevXArr[i - 1], height - i - 1);\n  }\n  prevXArr.push(xPos);\n  if (prevXArr.length > height / 2) {\n    prevXArr.splice(0, 1);\n    // console.log(prevXArr);\n  }\n}"
  },
  {
    "_id": "JXx8WebdEHdBojond",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T20:01:58.019Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "JddHo83fp2LPwmSPM",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T04:21:53.191Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l17xvbhbpexkljbq6vc8",
        "version": 1554438464,
        "signature": "832156d67b8f502b1fe521668fcaf3a6b02bd084",
        "width": 980,
        "height": 980,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T04:27:44Z",
        "tags": [],
        "bytes": 35087,
        "type": "upload",
        "etag": "0f89ecf4446462a60365d9855ca7e689",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554438464/avalanche2019/l17xvbhbpexkljbq6vc8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554438464/avalanche2019/l17xvbhbpexkljbq6vc8.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T04:26:04.29Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T05:04:09.682Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T18:12:32.27Z" }
      }
    ],
    "title": "",
    "description": "is it turning clockwise or counterclockwise?",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// original code from https://creative-coding.decontextualize.com/changes-over-time/\n\nfunction setup() {\n  createCanvas(500, 500);\n  fill(255);\n  noStroke();\n}\n\nfunction draw() {\n  background(20);\n  for (let i = 0; i < 300; i++) {\n    ellipse(250+(sin(frameCount/(i+10))*(i*0.6)),400+(-i),1,1);\n  }\n}"
  },
  {
    "_id": "JmzFQsTuy25jkatfx",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:19:17.533Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bcxpwwy9brtpnsidahqo",
        "version": 1554484889,
        "signature": "450baa05203deca418207fe4715a3ef71db87fd6",
        "width": 476,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T17:21:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 146163,
        "type": "upload",
        "etag": "a3109843eac02cea6d09a223ccba8943",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554484889/avalanche2019/bcxpwwy9brtpnsidahqo.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554484889/avalanche2019/bcxpwwy9brtpnsidahqo.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "140111",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "226565",
          "dar": "119:120"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 389378,
        "duration": 3.003,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "JoB2B63iu53Q2bG6H",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T19:31:20.064Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zhgohnjqqzlkiagjzv59",
        "version": 1556911912,
        "signature": "026329e1cfc87df0454785b027422c6c800e8ff6",
        "width": 1542,
        "height": 1010,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:31:52Z",
        "tags": [],
        "bytes": 1121430,
        "type": "upload",
        "etag": "7e39557f00f224cc8c06664a778dc7c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556911912/avalanche2019/zhgohnjqqzlkiagjzv59.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556911912/avalanche2019/zhgohnjqqzlkiagjzv59.png"
      },
      {
        "public_id": "avalanche2019/byp0txjcbiqrteumqmb2",
        "version": 1556911932,
        "signature": "5cea806f385381d82a5b19851eaf83cfa8694dcb",
        "width": 1100,
        "height": 1010,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:32:12Z",
        "tags": [],
        "bytes": 432954,
        "type": "upload",
        "etag": "05c37e2591520ec706ed79669be6ccdd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556911932/avalanche2019/byp0txjcbiqrteumqmb2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556911932/avalanche2019/byp0txjcbiqrteumqmb2.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Original rhino model of D12 Samurai & simplified for 3D printing"
  },
  {
    "_id": "JqGzTDGgG6abFMXcs",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "created_at": { "$date": "2019-02-16T01:00:01.864Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lkfnrscxtivno3z0vuup",
        "version": 1550278808,
        "signature": "2daf148b575c218ced8d418b652867de8419528c",
        "width": 708,
        "height": 392,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-16T01:00:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 109510,
        "type": "upload",
        "etag": "5a0fbfd624720169ae56975fe3fe1005",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550278808/avalanche2019/lkfnrscxtivno3z0vuup.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550278808/avalanche2019/lkfnrscxtivno3z0vuup.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "174408",
          "dar": "177:98"
        },
        "frame_rate": 60,
        "bit_rate": 223679,
        "duration": 3.916667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ly82i1xsobei9dfyxqs2",
        "version": 1550280361,
        "signature": "6c893505912f889ec47b863591fd4c012db5d76b",
        "width": 708,
        "height": 392,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-16T01:26:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 622415,
        "type": "upload",
        "etag": "9fbe4b6dc9bcc13e049979a66e0067d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550280361/avalanche2019/ly82i1xsobei9dfyxqs2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550280361/avalanche2019/ly82i1xsobei9dfyxqs2.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "453950",
          "dar": "177:98"
        },
        "frame_rate": 60,
        "bit_rate": 494634,
        "duration": 10.066667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/cyw3sagmat8r54vcvovb",
        "version": 1550281120,
        "signature": "fe00c172b4b058877406ca6c55b6d199ac8551eb",
        "width": 708,
        "height": 392,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-16T01:38:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 112095,
        "type": "upload",
        "etag": "9b27e04533fe4fed2163988ab839c3df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550281120/avalanche2019/cyw3sagmat8r54vcvovb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550281120/avalanche2019/cyw3sagmat8r54vcvovb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "355865",
          "dar": "177:98"
        },
        "frame_rate": 60,
        "bit_rate": 444674,
        "duration": 2.016667,
        "rotation": 0
      }
    ],
    "votes": [],
    "lesson": "Parameters",
    "title": "",
    "description": "Playing around with sine (sin) function.",
    "code": "let diameter;\nlet angle = 0;\n\nfunction setup() {\n  createCanvas(710, 400);\n  diameter = height - 5;\n  noStroke();\n  fill(255, 12, 100);\n}\n\nfunction draw() {\n  background(0);\n\n  let d1 = 10 + (sin(angle) * diameter) / 2 + diameter / 2;\n  let d2 = 10 + (sin(angle + PI / 2) * diameter) / 2 + diameter / 2;\n  let d3 = 10 + (sin(angle + PI) * diameter) / 2 + diameter / 2;\n\n  rect(0, 0, d2, d1);\n  rect(0, 200, d1, d2);\n  rect(width / 2, height / 2, d2, d2);\n  rect(width, height / 2, d3, d3);\n  rect(200, 100, 150, d2);\n \trect(0, 0, d1, 20);\n  rect(500, 0, 50, d2);\n  rect(550, 0, 20, d2);\n\n  angle += 0.02;\n}"
  },
  {
    "_id": "JqPBsx4fBG2eAzGKC",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T19:44:02.679Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yuqd9h4nj1zpzcnttek9",
        "version": 1550002385,
        "signature": "aaf80c4ffb287064b5ff51be97acd68342112c65",
        "width": 994,
        "height": 1500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-12T20:13:05Z",
        "tags": [],
        "bytes": 501396,
        "type": "upload",
        "etag": "19ba7cdd251bfbac1727487026999437",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550002385/avalanche2019/yuqd9h4nj1zpzcnttek9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550002385/avalanche2019/yuqd9h4nj1zpzcnttek9.png"
      },
      {
        "public_id": "avalanche2019/ikscbbztljafqlb0uwjz",
        "version": 1550002500,
        "signature": "2009bed7065da4626ea78a37d72ec6f6d8e7b2d4",
        "width": 316,
        "height": 480,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-12T20:15:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 6789299,
        "type": "upload",
        "etag": "a8503a5ff5e3c3a66e1a56d1e10ea02e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550002500/avalanche2019/ikscbbztljafqlb0uwjz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550002500/avalanche2019/ikscbbztljafqlb0uwjz.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "128035",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "850395",
          "dar": "79:120"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 990578,
        "duration": 54.783991,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/cc7zqawooxpjmcbnktti",
        "version": 1550002510,
        "signature": "cdc0f730533832a941d33318d58a9c4527ea38b3",
        "width": 980,
        "height": 1516,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-12T20:15:10Z",
        "tags": [],
        "bytes": 291620,
        "type": "upload",
        "etag": "184c1527c98e88fc6779a7b90a93739a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550002510/avalanche2019/cc7zqawooxpjmcbnktti.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550002510/avalanche2019/cc7zqawooxpjmcbnktti.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T20:57:20.264Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-12T20:57:21.034Z" }
      }
    ],
    "title": "",
    "description": "using lines and rotation to create shapes\n\nlook at code to adjust shape variation, rotation speed, line length, and overall size \n\nlots of possible variations",
    "inspiration_name": "Sin/Cos rotation",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\nlet angle = 0;\nlet numLines = 300;\nlet change = 20;\n// let v1 = 0.4\n\nfunction setup() {\n    background(0, 0, 0, 1);\n    createCanvas(600, 600);\n    smooth();\n    colorMode(RGB, 255, 255, 255, 1);\n    stroke(255, 0, 0, .7);\n    noFill();\n    //less can be seen as speed \n\n    createP('variation');\n    variationSlider = createSlider(.1, .7, .3, .05);\n    v1 = variationSlider.value();\n    createP('size');\n    sizeSlider = createSlider(50, 200, 100, 10);\n    size = sizeSlider.value();\n    createP('line length');\n    lengthSlider = createSlider(1, 20, 10, 1);\n    lineLength = lengthSlider.value();\n    createP('speed');\n    speedSlider = createSlider(.005, .04, .01, .005);\n    speedLength = speedSlider.value();\n\n}\n\nfunction draw() {\n    background(0, 0, 0, 1);\n    angle += 0.04;\n    translate(width / 2 - 40, height / 2);\n    rotate(sin(angle));\n    strokeWeight(2);\n    //draw lines \n    for (i = 1; i < numLines; i++) {\n        point1 = {\n            x: point1X(change + i),\n            y: point1Y(change + i),\n        };\n        // point1 = (point1X(change + i), point1Y(change + i));\n\n     \n        point2 = {\n            x: point2X(change + i),\n            y: point2Y(change + i),\n        };\n        line(point1.x, point1.y, point2.x, point2.y);\n    }\n    //bigger lines smaller and more of them \n    change += speedSlider.value();\n}\n\n\nfunction point1X(change) {\n    return sin(change) * lengthSlider.value() + cos(change / variationSlider.value()) * sizeSlider.value();\n}\n\n\nfunction point1Y(change) {\n    return cos(change * 2) * lengthSlider.value() + sin(change / variationSlider.value()) * sizeSlider.value();\n}\n\n\nfunction point2X(change) {\n    return sin(change * 2) * (lengthSlider.value() * 10) + cos(change / variationSlider.value()) * sizeSlider.value();\n}\n\n\nfunction point2Y(change) {\n    return cos(change * 2) * (lengthSlider.value() * 10) + sin(change / variationSlider.value()) * sizeSlider.value();\n}"
  },
  {
    "_id": "JqX3QAXKsMLNzW9md",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T00:05:49.454Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uwlwxmtz7dugr7m25med",
        "version": 1548941171,
        "signature": "829da22835fc00baf1cd048207c0bb24b0d8a58e",
        "width": 1680,
        "height": 408,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T13:26:11Z",
        "tags": [],
        "bytes": 123065,
        "type": "upload",
        "etag": "f9bd44393b72673294dde4e1ec3ac80d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548941171/avalanche2019/uwlwxmtz7dugr7m25med.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548941171/avalanche2019/uwlwxmtz7dugr7m25med.jpg"
      },
      {
        "public_id": "avalanche2019/peibcqeuclk69cmfan2u",
        "version": 1548941178,
        "signature": "9f0cd875155115fea607f6cdf131cf13eb15db34",
        "width": 1680,
        "height": 408,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T13:26:18Z",
        "tags": [],
        "bytes": 141297,
        "type": "upload",
        "etag": "af90b511df8b0bd95f1d1ccb85e1a48c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548941178/avalanche2019/peibcqeuclk69cmfan2u.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548941178/avalanche2019/peibcqeuclk69cmfan2u.jpg"
      },
      {
        "public_id": "avalanche2019/hycwzbha1ahnznzmjhs3",
        "version": 1548941286,
        "signature": "bd1a7036a75c73ca6b421505a7d019ae4f448134",
        "width": 1680,
        "height": 408,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T13:28:06Z",
        "tags": [],
        "bytes": 70338,
        "type": "upload",
        "etag": "b191661402cd8dfdf225d1af1c238458",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548941286/avalanche2019/hycwzbha1ahnznzmjhs3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548941286/avalanche2019/hycwzbha1ahnznzmjhs3.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Single-line alphabet tile evolution"
  },
  {
    "_id": "Jr6Hg2dHWfceFL8Az",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T19:23:28.548Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/egk3w3u7ikiufonik8kg",
        "version": 1548962622,
        "signature": "e1613fc8705917eb0a7fa45f3f22afed6438a4aa",
        "width": 3840,
        "height": 2885,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T19:23:42Z",
        "tags": [],
        "bytes": 253997,
        "type": "upload",
        "etag": "6a85e2de30777ef01240b6fa2d1e8fae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548962622/avalanche2019/egk3w3u7ikiufonik8kg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548962622/avalanche2019/egk3w3u7ikiufonik8kg.jpg"
      },
      {
        "public_id": "avalanche2019/u7fxjrdoolpzz3r0bd8f",
        "version": 1548962631,
        "signature": "a8c639f14902fd7e5b2605ffd150ffbe9c28d7b1",
        "width": 314,
        "height": 366,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T19:23:51Z",
        "tags": [],
        "bytes": 27305,
        "type": "upload",
        "etag": "da2456198603c1b2b9694d4209c1d68f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548962631/avalanche2019/u7fxjrdoolpzz3r0bd8f.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548962631/avalanche2019/u7fxjrdoolpzz3r0bd8f.png"
      },
      {
        "public_id": "avalanche2019/kn4irvkjkflj7jwcxye7",
        "version": 1548962738,
        "signature": "0e9aedcb354ce58860eba37c9b61c389ddc3fa60",
        "width": 444,
        "height": 548,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T19:25:38Z",
        "tags": [],
        "bytes": 33890,
        "type": "upload",
        "etag": "68d3b605562986f36cee1169b6a2a799",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548962738/avalanche2019/kn4irvkjkflj7jwcxye7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548962738/avalanche2019/kn4irvkjkflj7jwcxye7.png"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:58:14.938Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:47.85Z" }
      }
    ],
    "title": "",
    "description": "\"The Three-body Problem\". This is done with Maya and PS, I also 3D scanned my own body with Artec Eva scanner, but failed to rig it.",
    "inspiration_name": "The Three-body Problem"
  },
  {
    "_id": "JsB5C8TCuq5j2ciqg",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T15:55:17.447Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sjt6naqkdseqz2nrmth1",
        "version": 1552061521,
        "signature": "61e46c9eb4966e414225ead16cb7733520d00f91",
        "width": 982,
        "height": 988,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T16:12:01Z",
        "tags": [],
        "bytes": 78370,
        "type": "upload",
        "etag": "fb65aa8ad44675a75e393eea0e3d575c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552061521/avalanche2019/sjt6naqkdseqz2nrmth1.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552061521/avalanche2019/sjt6naqkdseqz2nrmth1.jpg"
      },
      {
        "public_id": "avalanche2019/zbxerv9dvukzh1ohfd2g",
        "version": 1552061525,
        "signature": "da2c108645303245e4d04d078bd7b53452f88ca6",
        "width": 1042,
        "height": 1788,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T16:12:05Z",
        "tags": [],
        "bytes": 156530,
        "type": "upload",
        "etag": "59f2e0ac5115beef0f73297cd6b4c30b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552061525/avalanche2019/zbxerv9dvukzh1ohfd2g.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552061525/avalanche2019/zbxerv9dvukzh1ohfd2g.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Image information reducer or   \n_Pixel Art generator_  \nSome edge detection and and image upload function would be nice.\nSome help from stackoverflow here to calculate closest value in an array (see code)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\n// Used a great function to find the closest value in an array:\n// https://stackoverflow.com/questions/8584902/get-closest-number-out-of-array\n// Joe Grund & Richard Parnaby-King\n\nvar myImage;\nlet myHues = [];\nlet mySats = [];\nlet myLights = [];\nlet huesReduced = [];\nlet satsReduced = [];\nlet lightsReduced = [];\n\nfunction preload() {\n  myImage = loadImage(\n    \"http://res.cloudinary.com/compform2019/image/upload/c_fill,g_face,h_250,w_250/v1/avalanche2019/y1lmzaammdt4h6gebm6v\"\n  );\n}\n\nfunction setup() {\n  pixelDensity(1);\n  createCanvas(myImage.width * 2, myImage.height * 2);\n  myImage.loadPixels();\n  createP(\"Pixelisation\");\n  window.myPixels = createSlider(1, 5, 3, 1);\n  createP(\"Number of hues\");\n  window.nHuesSlider = createSlider(1, 16, 4, 1);\n  createP(\"Number of saturation values\");\n  window.nSatsSlider = createSlider(1, 16, 4, 1);\n  createP(\"Number of lightness values\");\n  window.nLightsSlider = createSlider(1, 32, 20, 1);\n  myUpdate(myPixels.value(), 4, 4, 21);\n  createP(\"done?\");\n  button = createButton(\"update\");\n  button.mousePressed(myUpdate);\n}\n\nfunction myUpdate() {\n  pixelisation = myPixels.value();\n  nHues = nHuesSlider.value();\n  nSats = nSatsSlider.value();\n  nLights = nLightsSlider.value();\n  storeHSL();\n  huesReduced = reduceArray(myHues, nHues);\n  satsReduced = reduceArray(mySats, nSats);\n  lightsReduced = reduceArray(myLights, nLights);\n\n  colorMode(HSL, 360, 100, 100, 1);\n  for (var y = 0; y < myImage.height; y += pixelisation) {\n    for (var x = 0; x < myImage.width; x += pixelisation) {\n      position = y * myImage.width + x;\n      var c = getQuick(myImage, x, y);\n      myColor = color(\n        getClosestValue(huesReduced, myHues[position]),\n        getClosestValue(satsReduced, mySats[position]),\n        getClosestValue(lightsReduced, myLights[position]),\n        1\n      );\n      for (let xi = 0; xi < pixelisation; xi++) {\n        for (let yi = 0; yi < pixelisation; yi++) {\n          myImage.set(x + xi, y + yi, myColor);\n        }\n      }\n    }\n  }\n  myImage.updatePixels();\n  image(myImage, 0, 0, width, height);\n}\n\nfunction getQuick(img, x, y) {\n  var i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3]\n  ];\n}\n\nfunction storeHSL() {\n  for (var y = 0; y < myImage.height; y++) {\n    for (var x = 0; x < myImage.width; x++) {\n      var c = getQuick(myImage, x, y);\n      myHues.push(hue(color(c)));\n      mySats.push(saturation(color(c)));\n      myLights.push(lightness(color(c)));\n    }\n  }\n}\n\n// https://stackoverflow.com/questions/8584902/get-closest-number-out-of-array\nfunction getClosestValue(array, goal) {\n  var closest = array.reduce(function(prev, curr) {\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\n  });\n  return closest;\n}\n\nfunction reduceArray(array, nCategories) {\n  arraySorted = array\n    .slice(0)\n    .filter(x => x != 0)\n    .sort();\n  arrayReduced = [];\n  for (let i = 0; i < nCategories; i++) {\n    index = floor(((arraySorted.length - 1) / nCategories) * i);\n    arrayReduced.push(arraySorted[index]);\n  }\n  return arrayReduced;\n}\n\nfunction getArrAvg(array) {\n  sum = array.reduce((a, b) => a + b);\n  avg = sum / array.length;\n  return avg;\n}",
    "inspiration_name": "Jo’s Sketch – March 8th, 8:46am",
    "inspiration_url": "http://sketches2019.compform.net/users/xrbYhgTEuXQagpop8"
  },
  {
    "_id": "JvfTvvzsP6Q5smwir",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T21:37:55.113Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/svv4x3xm8ckj1oqlguux",
        "version": 1550785285,
        "signature": "729e0c264f601189cdbd863327eccc8fd5faa78e",
        "width": 796,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T21:41:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 9113234,
        "type": "upload",
        "etag": "8d4b183907ab8c50c82fc1f845bac7f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550785285/avalanche2019/svv4x3xm8ckj1oqlguux.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550785285/avalanche2019/svv4x3xm8ckj1oqlguux.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7893416",
          "dar": "199:180"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7910220,
        "duration": 9.216667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Plan-view Tornado With Controls.\n\nInspired by Anna's Noisy Concentric Circles",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\n\nlet w = 800;\nlet h = 800;\nlet x, y, z;\nlet offset = 100;\n\nfunction setup (){\n\tcreateCanvas(w,h);\n\tangleMode(DEGREES);\n\n\tcreateP('Amplitude X');\n\tamplitude_sliderX = createSlider(0, 150, 0);\n\n\tcreateP('Amplitude Y');\n\tamplitude_sliderY = createSlider(0,150,0);\n\n}\n\nfunction draw(){\n\tbackground(0);\n\tmakeShape(Math.floor(w * 0.4));\n}\n\n\nfunction rings(radius){\n\n\tbeginShape();\n// \ttranslate(100,100, 0);\n\t\n\tstroke(255);\n\tnoFill();\n\tstrokeWeight(0.5);\n\tlet numPoints = 500;\n\t\n\tfor (let i = 0; i < numPoints; i++){\n\t\tpush();\n\t\ttranslate(0, 0, 0);\n\t\tx = (w * 0.5) + radius * cos(i * TWO_PI );\n\t\ty = (h * 0.5) + radius * sin(i * TWO_PI );\n\t\tz =0;\n\t\t// vertex(x,y);\n\t\t\n\t\tshapeNoiseX = noise((x * offset), ((y * offset))) * amplitude_sliderX.value() * cos(i);\n\t\tshapeNoiseY = noise((x * offset), ((y * offset))) * amplitude_sliderY.value() * sin(i);\n\n\t\tlet new_x = x + shapeNoiseX;\n\t\tlet new_y = y + shapeNoiseY;\n\n\t\t// vertex(x+shapeNoiseX, y+shapeNoiseY);\n\t\tvertex(new_x, new_y);\n\t\toffset +=0.002;\n\t\t\t\n\t}\nendShape();\npop();\n}\n\nfunction makeShape(numRings){\n\tfor (let i = 0; i < numRings; i+=6){\n\t\trings(i);\n\t}\n}"
  },
  {
    "_id": "K2yj3Z9ojFub5FGZJ",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T15:27:29.697Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x9kkdcpww4at5njaci3l",
        "version": 1552663667,
        "signature": "d9f2f8494767852e61fb5a44088d1c958e9a983e",
        "width": 646,
        "height": 744,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-15T15:27:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 4838368,
        "type": "upload",
        "etag": "0850e946d125a8ae6672e09e02ac802b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552663667/avalanche2019/x9kkdcpww4at5njaci3l.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552663667/avalanche2019/x9kkdcpww4at5njaci3l.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2732892",
          "dar": "323:372"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 2728267,
        "duration": 14.18737,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qbefx1nfy2oaotnggue6",
        "version": 1552663676,
        "signature": "a844625bcaae3735a3b367c2add9bf72ceb905a4",
        "width": 644,
        "height": 744,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-15T15:27:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 2015555,
        "type": "upload",
        "etag": "7b80ae2d04de585a1baf2520c33feb79",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552663676/avalanche2019/qbefx1nfy2oaotnggue6.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552663676/avalanche2019/qbefx1nfy2oaotnggue6.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "1449692",
          "dar": "161:186"
        },
        "is_audio": false,
        "frame_rate": 15.083333333333334,
        "bit_rate": 1454131,
        "duration": 11.088712,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/f3gqvlxbrxycvobpxv2a",
        "version": 1552663685,
        "signature": "da5c51e79d8e5cf0d32e2a1803c21869e92678bb",
        "width": 646,
        "height": 742,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-15T15:28:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 3965474,
        "type": "upload",
        "etag": "f93156de45c544d568130b12ab669562",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552663685/avalanche2019/f3gqvlxbrxycvobpxv2a.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552663685/avalanche2019/f3gqvlxbrxycvobpxv2a.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2450728",
          "dar": "323:371"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 2439700,
        "duration": 13.003152,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I extended on the spiral example to create a camera aperture art using Turtle Graphics and p5.js.",
    "inspiration_name": "Spiral Art Turtle Graphics",
    "inspiration_url": "http://compform.net/turtles/",
    "code": "// Creating a spiral art with Turtle Graphics\n// Reference: http://compform.net/turtles/\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\n// CUSTOMIZATION\nvar cameraApperture_slider;\nvar rotation_noise;\nvar rotationNoise_frequency;\nvar rotationNoise_amplitude;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n    noFill();\n    stroke(255);\n    noLoop();\n\n    myTurtle = new Turtle();\n\n    createP('Change Camera Apperture');\n    cameraApperture_slider = createSlider(1, 15, 5, 1);\n    cameraApperture_slider.changed(draw);\n    rotationNoise_frequency = 100;\n    rotationNoise_amplitude = 10;\n}\n\n\n\nfunction draw() {\n    background(0);\n    rotation_noise = noise(20 * rotationNoise_frequency) * rotationNoise_amplitude;\n\n    myTurtle.penUp();\n    myTurtle.moveTo(250, 385);\n    myTurtle.penDown();\n\n    for (var i = 0; i < 180; i++) {\n        stroke(255, 0);\n        myTurtle.moveForward(25 + i * 0.1);\n        myTurtle.turnLeft(10);\n        drawLeaf();\n    }\n}\n\nfunction drawLeaf() {\n    myTurtle.pushState();\n\n    stroke(0, random(255), random(255), random(255));\n\n    for (i = 0; i < 15; i++) {\n        myTurtle.moveForward(2 * i * cameraApperture_slider.value());\n        myTurtle.turnLeft(19);\n        for (j = 0; j < 20; j++) {\n            myTurtle.penUp();\n            myTurtle.moveBackward(j * 3);\n            myTurtle.penDown();\n            myTurtle.moveForward(j * 8);\n            myTurtle.turnRight(rotation_noise * 2);\n        }\n    }\n\n    myTurtle.popState();\n}"
  },
  {
    "_id": "K6kwWq6p6qLFKLazj",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T17:12:15.582Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pmcqc51um4bj1fpnsucz",
        "version": 1549645981,
        "signature": "747ab91a292db6a2ecf91c49cc6db558c1be07aa",
        "width": 2376,
        "height": 1578,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T17:13:01Z",
        "tags": [],
        "bytes": 1157042,
        "type": "upload",
        "etag": "e72495d63139f81be3fb97d6a8f8ffef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549645981/avalanche2019/pmcqc51um4bj1fpnsucz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549645981/avalanche2019/pmcqc51um4bj1fpnsucz.png"
      },
      {
        "public_id": "avalanche2019/aqjm08aygyfxyjdmjd9a",
        "version": 1549645986,
        "signature": "c38b01a34ba2071422453f8b54ccae617ad9e8d5",
        "width": 2372,
        "height": 1578,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T17:13:06Z",
        "tags": [],
        "bytes": 1379258,
        "type": "upload",
        "etag": "e8b917ea72603b8591680637cc360d71",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549645986/avalanche2019/aqjm08aygyfxyjdmjd9a.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549645986/avalanche2019/aqjm08aygyfxyjdmjd9a.png"
      },
      {
        "public_id": "avalanche2019/lnzoeyfxtf6wv0t8qek5",
        "version": 1549645990,
        "signature": "2f18a5c146b505de85f699277d8c08c5f9573693",
        "width": 2378,
        "height": 1580,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T17:13:10Z",
        "tags": [],
        "bytes": 877162,
        "type": "upload",
        "etag": "044e3a35d25c2b59911c87939f046271",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549645990/avalanche2019/lnzoeyfxtf6wv0t8qek5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549645990/avalanche2019/lnzoeyfxtf6wv0t8qek5.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T18:09:30.869Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T19:03:59.955Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T19:32:45.535Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2020-01-23T12:53:58.004Z" }
      }
    ],
    "title": "",
    "description": "Grass texture sketch. Started adding a building to make it look more landscape-y (still working on it). Made with Processing."
  },
  {
    "_id": "K96MLYKH5F8Wk34cF",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-10T22:58:27.085Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/urvuiu5v5a2l6ba4qxr6",
        "version": 1552258718,
        "signature": "7c96cc80f9ba91ec380d97a56762d106b2c96dc8",
        "width": 622,
        "height": 622,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-10T22:58:38Z",
        "tags": [],
        "bytes": 91151,
        "type": "upload",
        "etag": "f51fc7630d96a9dfc90fd06fa315c2fd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552258718/avalanche2019/urvuiu5v5a2l6ba4qxr6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552258718/avalanche2019/urvuiu5v5a2l6ba4qxr6.jpg"
      },
      {
        "public_id": "avalanche2019/gd5m62d4zg9els5f75zi",
        "version": 1552258724,
        "signature": "290dc480c38ad8d6efacfd840330a3896e2e457e",
        "width": 622,
        "height": 622,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-10T22:58:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 2952208,
        "type": "upload",
        "etag": "bdd41dca543b0954e7029e3a7a0df6d2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552258724/avalanche2019/gd5m62d4zg9els5f75zi.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552258724/avalanche2019/gd5m62d4zg9els5f75zi.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "778197",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 781877,
        "duration": 30.2,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/zkuiqursows3foosojo7",
        "version": 1552258729,
        "signature": "98b25d64b04bbabecfbf74aa87d026366f58f2fa",
        "width": 622,
        "height": 622,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-10T22:58:49Z",
        "tags": [],
        "bytes": 49952,
        "type": "upload",
        "etag": "6aad8603c672763f182cbeaecaaaf95a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552258729/avalanche2019/zkuiqursows3foosojo7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552258729/avalanche2019/zkuiqursows3foosojo7.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-11T03:22:29.105Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a hypnosis pattern using Turtle Graphics. \nPlay with StrokeColorChangeRate variable to increase or decrease the hypnosis level.",
    "inspiration_name": "Turtle Hypnosis Spiral",
    "code": "// Program to create Hypnosis Pattern\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n\nvar myTurtle;\n\n// Tactic: Bouncing Ball\nvar strokeColor;\nvar strokeColorChangeRate;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n    background(0);\n\n    strokeColor = 0;\n    strokeColorChangeRate = 30;\n}\n\nfunction draw() {\n\n    noFill();\n    stroke(strokeColor);\n    strokeWeight(1);\n\n    // move to starting position (without drawing)\n    myTurtle.penUp();\n    myTurtle.moveTo(width / 2, height / 2);\n\n    // Create Spiral Effect\n    penFadeInFadeOut();\n\n    // Generate Shape\n    turtleSquarePattern(myTurtle);\n    turtleTrianglePattern(myTurtle);\n\n    // noLoop();\n}\n\n\nfunction turtleSquarePattern(t) {\n\n    // put the pen down to draw\n    myTurtle.penDown();\n\n    // draw a shape\n    for (var i = 0; i < 10; i++) {\n        t.moveForward(100);\n        t.turnRight(-80);\n    }\n}\n\n\nfunction turtleTrianglePattern(t) {\n\n    // put the pen down to draw\n    t.penDown();\n\n    // draw a shape\n    for (var i = 0; i < 9; i++) {\n        t.moveForward(20);\n        t.penUp();\n        t.moveForward(80);\n        t.penDown();\n        t.turnRight(129);\n    }\n}\n\n\nfunction penFadeInFadeOut() {\n    if (strokeColor < 0) {\n        strokeColorChangeRate = abs(strokeColorChangeRate);\n    }\n    if (strokeColor > 255) {\n        strokeColorChangeRate = -abs(strokeColorChangeRate);\n    }\n    strokeColor += strokeColorChangeRate;\n}"
  },
  {
    "_id": "K9gj5Z2moxQJckkZ2",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:48:30.87Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/asl7rsdj4itnw4lspkpg",
        "version": 1552668517,
        "signature": "9bede5bbf5934a8e142157bd045eac3ed030eb29",
        "width": 460,
        "height": 454,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:48:37Z",
        "tags": [],
        "bytes": 45527,
        "type": "upload",
        "etag": "62b7e7ed82050faa37b8d102a21e9b45",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552668517/avalanche2019/asl7rsdj4itnw4lspkpg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552668517/avalanche2019/asl7rsdj4itnw4lspkpg.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Modified from Daniel Shiffman's turtle sketch with processing, played with colors to create 3D-mesh like effects"
  },
  {
    "_id": "KKbPuHBXmJyANAJn5",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T02:55:37.732Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uh4p1jcbxomkxaaqgpon",
        "version": 1552445897,
        "signature": "cbe8537faa10af7458bab63afb0f8494e1782523",
        "width": 642,
        "height": 814,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-13T02:58:17Z",
        "tags": [],
        "bytes": 128359,
        "type": "upload",
        "etag": "ad598ac97f1b8a13c1e733757b52630f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552445897/avalanche2019/uh4p1jcbxomkxaaqgpon.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552445897/avalanche2019/uh4p1jcbxomkxaaqgpon.jpg"
      },
      {
        "public_id": "avalanche2019/eda09gkk1xprwlc0ebyu",
        "version": 1552445904,
        "signature": "cff91966b35055a1292b365ed22b57b965f973f3",
        "width": 644,
        "height": 810,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-13T02:58:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 495542,
        "type": "upload",
        "etag": "88e789dd85096463d8108a2ef5caf597",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552445904/avalanche2019/eda09gkk1xprwlc0ebyu.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552445904/avalanche2019/eda09gkk1xprwlc0ebyu.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1377",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "51401",
          "dar": "322:405"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 55172,
        "duration": 71.85356,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/dryqjlf4rc3nf4ygkuuc",
        "version": 1552445915,
        "signature": "98908a3b1d40e4dc4080dd76ce5fdc2afeb90b90",
        "width": 644,
        "height": 753,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-13T02:58:35Z",
        "tags": [],
        "bytes": 63632,
        "type": "upload",
        "etag": "15649933b4f80767d15ec0cadce9a53a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552445915/avalanche2019/dryqjlf4rc3nf4ygkuuc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552445915/avalanche2019/dryqjlf4rc3nf4ygkuuc.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T15:17:28.034Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T18:06:56.462Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T04:50:32.227Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:41:14.81Z" }
      }
    ],
    "title": "",
    "description": "Using Custom Turtle Graphics and p5.js, I have created a user interface for generating custom shapes. \nClick on Forward, Backward, Left, Right, and Draw buttons to create faces and other objects.\n\nNote: \nI have customized my turtle graphics file to create the pattern. So, the regular file would not show the same result.",
    "inspiration_name": "Turtle Graphics Creator",
    "code": "// Program to create a moving car using Turtle graphics\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n// For logic and updated tutle file, check GitHub\n// Link: https://github.com/akshansh2593/CompForm/tree/master/turtleGraphicsCreator\n\n\nvar myTurtle;\n\n// Customization with Parameters\nvar moveAmount;\nvar turtleMoveForward_button;\nvar turtleMoveReverse_button;\nvar turtleMoveLeft_button;\nvar turtleMoveRight_button;\nvar turtlePenDown_checkbox;\n\nvar turtleDrawEyes_button;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n    background(0);\n\n    stroke(255);\n    strokeColor = 255;\n    strokeColorChangeRate = 40;\n\n    // Draw checkbox\n    turtlePenDown_checkbox = createCheckbox('Draw', true);\n    turtlePenDown_checkbox.changed(drawTurtle);\n    createP();\n\n    moveAmount = 30;\n\n    // Movement buttons\n    turtleMoveForward_button = createButton('Forward');\n    turtleMoveForward_button.mousePressed(moveFwd);\n    turtleMoveForward_button = createButton('Backward');\n    turtleMoveForward_button.mousePressed(moveBwd);\n    createP();\n    turtleMoveForward_button = createButton('Left');\n    turtleMoveForward_button.mousePressed(moveLeft);\n    turtleMoveForward_button = createButton('Right');\n    turtleMoveForward_button.mousePressed(moveRight);\n    createP();\n    turtleDrawEyes_button = createButton('Draw Eye');\n    turtleDrawEyes_button.mousePressed(drawEye);\n\n}\n\nfunction draw() {\n\n    noFill();\n    stroke(strokeColor);\n    strokeWeight(2);\n\n    // noLoop();\n}\n\n\nfunction drawTurtle() {\n    if (this.checked()) {\n        myTurtle.penDown();\n        console.log(\"Draw is on.\");\n    } else {\n        myTurtle.penUp();\n        console.log(\"Cannot draw.\");\n    }\n}\n\n\nfunction moveFwd() {\n    myTurtle.moveForward(moveAmount);\n}\n\nfunction moveBwd() {\n    myTurtle.moveBackward(moveAmount);\n}\n\nfunction moveRight() {\n    myTurtle.turnRight(90);\n    myTurtle.moveForward(moveAmount);\n}\n\nfunction moveLeft() {\n    myTurtle.turnLeft(90);\n    myTurtle.moveForward(moveAmount);\n}\n\nfunction drawEye() {\n\n    // draw eye\n    for (var i = 0; i < 30; i++) {\n        myTurtle.moveForward(10);\n        myTurtle.penUp();\n        myTurtle.moveForward(40);\n        myTurtle.penDown();\n        myTurtle.turnRight(129);\n    }\n    myTurtle.moveForward(37);\n    myTurtle.turnRight(90);\n}"
  },
  {
    "_id": "KNLrDfxHerHk7AaFA",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T04:57:15.482Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nlzjw7jplwh1rcnrirvo",
        "version": 1550552313,
        "signature": "b8faafaaa0009b19e2975ad7ac0102511be6aa93",
        "width": 2332,
        "height": 1672,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T04:58:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 8130512,
        "type": "upload",
        "etag": "dcc495d8362d6d1e0826b1669ecd2ed0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550552313/avalanche2019/nlzjw7jplwh1rcnrirvo.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550552313/avalanche2019/nlzjw7jplwh1rcnrirvo.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "1382506",
          "dar": "53:38"
        },
        "frame_rate": 60,
        "bit_rate": 1387360,
        "duration": 46.883333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Used an old sketch for bouncing, probably used a coding train example for that originally and *took the brush example* (background of the noise section) to start digging into noise. It’s more to play around with than actually creating nice visuals, you can start a new trail by clicking the mouse and when you press and release while moving you can give it an initial spin.",
    "inspiration_name": "Compform noise brush",
    "inspiration_url": "http://compform.net/noise/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\nconst w = window.innerWidth;\nconst h = w / 2;\nconst groundLevel = h;\nlet balls = [];\nlet mousePositions = [];\nlet clickCounter = 0;\n\nfunction setModes() {\n  colorMode(HSB, 360, 1, 1, 1);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  strokeWeight(1);\n  // pixelDensity(1);\n}\n\nfunction setup() {\n  cnv = createCanvas(w, h);\n  cnv.mouseClicked(releaseSmokes);\n  setModes();\n  createP(\"Gravity:\");\n  window.gravitySlider = createSlider(-1, 1, 0, 0.01);\n  createP(\"Wind:\");\n  window.windSlider = createSlider(-1, 1, 0, 0.01);\n  background(0, 0, 0.2);\n  createP(\"Noise in movement:\");\n  window.noiseSlider = createSlider(0, 0.05, 0.01, 0.001);\n  background(0, 0, 0.2);\n}\n\nfunction draw() {\n  // fill(0, 0.1);\n  applyForcesAndDraw();\n  if (mouseIsPressed) {\n    mousePositions.push({ x: mouseX - pmouseX, y: mouseY - pmouseY });\n    if (mousePositions.length > 20) {\n      mousePositions.pop();\n    }\n  }\n}\n\nfunction mousePressed() {}\n\nfunction releaseSmokes() {\n  let avg = { x: 0, y: 0 };\n  mousePositions.forEach(e => {\n    avg.x += e.x;\n    avg.y += e.y;\n  });\n  avg.x /= mousePositions.length;\n  avg.y /= mousePositions.length;\n  avg.x *= 0.2;\n  avg.y *= 0.2;\n  // console.log(avg);\n  balls.push(new Ball(1, 1, mouseX, mouseY, avg.x, avg.y));\n  mousePositions = [];\n}\n\nclass Ball {\n  constructor(id, d, x, y, dx, dy) {\n    this.id = id;\n    this.d = d;\n    this.m = this.d * 0.1;\n    this.plocation = createVector(x, y);\n    this.location = createVector(x, y);\n    this.velocity = createVector(dx, dy);\n    // this.velocity = p5.Vector.random2D();\n    this.velocity.mult(10);\n    this.acceleration = createVector(0, 0);\n    // this.myFill = color(195, 51, 37, 50);\n\n    this.display = () => {\n      // fill(this.myFill);\n      // console.log(this.plocation, this.location);\n      stroke(0, 0, 1, 0.1);\n      brush(\n        this.plocation.x,\n        this.plocation.y,\n        this.location.x,\n        this.location.y\n      );\n      noStroke();\n      // ellipse(this.location.x, this.location.y, this.d, this.d);\n    };\n\n    this.applyForce = force => {\n      // let force = createVector(x, y);\n      // let f = createVector(0, 0);\n      // f.div(force, this.m);\n      this.acceleration.add(force);\n    };\n\n    this.move = () => {\n      this.velocity.add(this.acceleration);\n      this.location.add(this.velocity);\n      this.acceleration.mult(0);\n    };\n    this.afterMove = () => {\n      this.plocation.x = this.location.x;\n      this.plocation.y = this.location.y;\n    };\n\n    this.checkBoundaryCollision = () => {\n      let damp = -0.9;\n      const topWallTest = this.location.y < this.d / 2;\n      const leftWallTest = this.location.x < this.d / 2;\n      let groundLevelTest = this.location.y > groundLevel - this.d / 2;\n      const rightWallTest = this.location.x > w - this.d / 2;\n      if (rightWallTest) {\n        this.location.x = w - this.d / 2;\n        this.velocity.x *= damp;\n      } else if (leftWallTest) {\n        this.location.x = this.d / 2;\n        this.velocity.x *= damp;\n      } else if (groundLevelTest) {\n        this.location.y = groundLevel - this.d / 2;\n        this.velocity.y *= damp;\n      } else if (topWallTest) {\n        this.location.y = this.d / 2;\n        this.velocity.y *= damp;\n      }\n    };\n  }\n}\n\nfunction applyForcesAndDraw() {\n  for (var i = 0; i < balls.length; i++) {\n    // Forces (move to the class constructor)\n    noiseDetail(10, 0.2);\n    // console.log(noise(millis() * 0.001));\n    let myNoise = createVector(\n      map(noise(millis() * i * 0.001), 0.1, 0.6, -1, 1) * noiseSlider.value(),\n      map(noise(millis() * i * 0.001), 0.1, 0.6, -1, 1) * noiseSlider.value()\n    );\n    myNoise.mult(balls[i].m);\n    balls[i].applyForce(myNoise.div(balls[i].m));\n\n    let gravity = createVector(0, gravitySlider.value());\n    gravity.mult(balls[i].m);\n    balls[i].applyForce(gravity.div(balls[i].m));\n\n    let wind = createVector(windSlider.value(), 0);\n    balls[i].applyForce(wind);\n\n    let drag = createVector(0, 0);\n    drag.add(balls[i].velocity);\n    drag.normalize();\n    // drag.mult(-1);\n    let dragC = -0.0002;\n    let dragSpeedSq = balls[i].velocity.magSq();\n    drag.mult(dragC * dragSpeedSq);\n    balls[i].applyForce(drag);\n\n    // console.log('location: ' + balls[i].location.y);\n    // console.log('resting position? ' + (groundLevel - balls[i].d/2));\n    if (balls[i].location.y >= groundLevel - balls[i].d) {\n      // console.log(\"friction\");\n      let friction = createVector(0, 0);\n      friction.add(balls[i].velocity);\n      friction.normalize();\n      // drag.mult(-1);\n      let frictionC = -0.05;\n      friction.mult(frictionC);\n      balls[i].applyForce(friction);\n    }\n\n    // Call the methods\n    balls[i].checkBoundaryCollision();\n    balls[i].move();\n    balls[i].display();\n    balls[i].afterMove();\n  }\n}\n\n// not mine:\n\nlet lines = 10;\nlet line_closeness = 2.5;\nlet in_scale = 0.01;\nlet out_scale = 100;\nlet offset_sample_scale = 0.9;\nlet offset_scale = 1600;\n\nfunction brush(x1, y1, x2, y2) {\n  // draw line as series of 3 pixel line segments\n  // this smooths out the curves\n  let steps = dist(x1, y1, x2, y2) / 3;\n  steps = max(steps, 1);\n\n  for (let n = 0; n < steps; n++) {\n    // find start/end of segment\n    let start_x = lerp(x1, x2, n / steps);\n    let start_y = lerp(y1, y2, n / steps);\n    let end_x = lerp(x1, x2, (n + 1) / steps);\n    let end_y = lerp(y1, y2, (n + 1) / steps);\n\n    //draw brush\n    strokeWeight(1);\n    for (let i = 0; i < lines; i++) {\n      noiseLine(\n        start_x,\n        start_y,\n        end_x,\n        end_y,\n        (i * line_closeness) / lines,\n        in_scale,\n        out_scale\n      );\n    }\n  }\n}\n\nfunction noiseLine(x1, y1, x2, y2, n, in_scale, out_scale) {\n  x1 +=\n    (noise(x1 * in_scale * millis() * 0.0001, y1 * in_scale, n) - 0.5) *\n    out_scale;\n  y1 +=\n    (noise(x1 * in_scale * millis() * 0.0001, y1 * in_scale, n) - 0.5) *\n    out_scale;\n\n  x2 +=\n    (noise(x2 * in_scale * millis() * 0.0001, y2 * in_scale, n) - 0.5) *\n    out_scale;\n  y2 +=\n    (noise(x2 * in_scale * millis() * 0.0001, y2 * in_scale, n) - 0.5) *\n    out_scale;\n\n  line(x1, y1, x2, y2);\n}"
  },
  {
    "_id": "KPR2Cp5hQPzKZyL4f",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-29T06:07:05.16Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j884vct1qklbu9lgv2hw",
        "version": 1556518111,
        "signature": "88344dba6eeb198e44d61721fd365d998c38c4ac",
        "width": 1498,
        "height": 1492,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-29T06:08:31Z",
        "tags": [],
        "bytes": 604494,
        "type": "upload",
        "etag": "808c70281ef4f3bd308386272f05dbd9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556518111/avalanche2019/j884vct1qklbu9lgv2hw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556518111/avalanche2019/j884vct1qklbu9lgv2hw.jpg"
      },
      {
        "public_id": "avalanche2019/u4qrt3vpt3pp3j8q2ygw",
        "version": 1556518130,
        "signature": "86885bfb70c0a2c38d3fd1268fa349f539876472",
        "width": 1200,
        "height": 1164,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-29T06:08:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 13726664,
        "type": "upload",
        "etag": "7a9c1dabc945390f79e329bd140bc30a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556518130/avalanche2019/u4qrt3vpt3pp3j8q2ygw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556518130/avalanche2019/u4qrt3vpt3pp3j8q2ygw.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "10989040",
          "dar": "100:97"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10999664,
        "duration": 9.983333,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-29T23:23:06.169Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T23:37:18.122Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:32:11.451Z" }
      }
    ],
    "title": "",
    "description": "Lucky accident: a helmet?",
    "code": "brick_length = 28;\nbrick_height = 8;\n\n\nmodule wall_ring () {\n    for (r = [0:100]) {\n        rotate([0,0,3.6*r]) translate([0,500,0])  cube([28,6,8],true);\n    }\n}\nmodule wall() {\n    for (l = [0:100]) {\n        rotate([0,1.8*l,0]) translate([0,0,5*l]) wall_ring();\n    }\n}\n\nwall();"
  },
  {
    "_id": "KQBwxLRApPmxXXmKy",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-29T14:47:55.439Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dmtoirmb7so0dus4pbgy",
        "version": 1548773333,
        "signature": "1d2260b3f89b0cd75cfba04fbf7c8c174db874d7",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-29T14:48:53Z",
        "tags": [],
        "bytes": 221787,
        "type": "upload",
        "etag": "49ebd7d01f31e03dd7393a5ccab39097",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548773333/avalanche2019/dmtoirmb7so0dus4pbgy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548773333/avalanche2019/dmtoirmb7so0dus4pbgy.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:03:32.299Z" }
      },
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T22:40:58.143Z" }
      }
    ],
    "title": "",
    "description": "Example code from last Friday's after-class live-code. Another way to make Sierpinski's triangle! [Live-code Github](https://github.com/jbakse/livecode_19_sketchbook)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet haystacks = [];\n\n// triangle\nhaystacks[0] = { x: 300, y: 100 };\nhaystacks[1] = { x: 100, y: 500 };\nhaystacks[2] = { x: 500, y: 500 };\n\n// quad\n// haystacks[0] = { x: 150, y: 150 };\n// haystacks[1] = { x: 100, y: 500 };\n// haystacks[2] = { x: 500, y: 100 };\n// haystacks[3] = { x: 450, y: 450 };\n\nlet donkey = { x: 300, y: 300 };\n\nwindow.setup = function() {\n  createCanvas(600, 600);\n  background(50, 50, 50);\n};\n\nwindow.draw = function() {\n  for (let i = 0; i < 100; i++) {\n    updateSelf();\n    drawSelf();\n  }\n};\n\nfunction updateSelf() {\n  let haystackIndex = floor(random(haystacks.length));\n  donkey.x = lerp(donkey.x, haystacks[haystackIndex].x, 0.5);\n  donkey.y = lerp(donkey.y, haystacks[haystackIndex].y, 0.5);\n}\n\nfunction drawSelf() {\n  fill(\"red\");\n  for (const haystack of haystacks) {\n    ellipse(haystack.x, haystack.y, 10, 10);\n  }\n\n  fill(\"white\");\n  noStroke();\n  ellipse(donkey.x, donkey.y, 1, 1);\n}"
  },
  {
    "_id": "KSKFE8jyNH2FgZkGW",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T19:00:24.489Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jx0b9leo06rq8fjj918y",
        "version": 1555095635,
        "signature": "540b900328cc5e59850fe7bd693a7a24346bd844",
        "width": 916,
        "height": 1284,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T19:00:35Z",
        "tags": [],
        "bytes": 280032,
        "type": "upload",
        "etag": "8e4d83e5b391333584a53d39eee38e4b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555095635/avalanche2019/jx0b9leo06rq8fjj918y.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555095635/avalanche2019/jx0b9leo06rq8fjj918y.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My dark and stormy night story, needs some more work, but sometimes produces nice combinations",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// require /text/tracery.min.js\n\nvar link = document.createElement('link');\nlink.setAttribute('rel', 'stylesheet');\nlink.setAttribute('type', 'text/css');\nlink.setAttribute('href', 'https://fonts.googleapis.com/css?family=Merriweather');\ndocument.head.appendChild(link);\n\ndocument.body.style.background = \"#444\";\ndocument.body.style.color = \"#eee\";\n\nconst storyGrammar = {\n  'top': ['#div#'],\n  'div': ['<div style=\"text-align: left; font-family: Merriweather, cursive; font-size: 18px; margin: 10px; width: 400px; margin: auto;\">#content#</div>'],\n  'content': ['#story#'],\n  'story': ['#beginning# #middle# #end#'],\n  'beginning': ['<section>#beginning-content#</section>'],\n  'beginning-content': ['<p>#beginning-starter#.</p> <p>#beginning-hero-introduction#</p>'],\n  'beginning-starter': ['It was a dark and stormy night #add-night# #scene#'],\n    'add-night': ['and it was only 37.4 °F', 'and it was raining #scene-domain-attr# #scene-domain#', 'and it was snowing'],\n    'scene': ['in the #scene-attr# #scene-place# of #scene-domain-attr# #scene-domain#'],\n    'scene-attr': ['cloudy', 'gloomy', 'dull', 'misty', 'foggy', 'murky', 'shadowy'],\n    'scene-place': ['desert', 'wilderness', 'barren land', 'solitude', 'forest', 'jungle', 'swampland'],\n    'scene-domain-attr': ['abstract', 'empty', 'shallow', 'broken', 'haunted', 'crumbled', 'ruptured'],\n    'scene-domain': ['words', 'sentences', 'grammars', 'computations', 'methods', 'functions', 'objects', 'variables', 'circles', 'shapes', 'forms', 'patterns', 'figures', 'canvasses', 'symmetry'],\n  'beginning-hero-introduction': ['When suddenly our hero, #hero-name#, enters the scene, and announces: “My pronouns are they, them, their!'],\n    'hero-name': ['the #hero-adj# greeting “hello #hero-adj# world!”', 'a #hero-adj# #hero-adj# circle', 'a #hero-adj# Java-Script library to create #scene-attr# #scene-domain#', ' an assemblage of #scene-domain# dragged through the #hero-adj# iterations of a for-loop'],\n    'hero-adj': ['bleak', 'tired', 'desolate', 'grim', 'mundane', 'generic'],\n    'hero-pos': ['fearless', 'brave', 'smart', 'tough'],\n    'hero-profession': ['detective', 'firefighter', 'receptionist of a big law firm', 'programmer', 'doctor'],\n    'enemy-profession': ['serial-killer', 'pyromaniac'],\n    'enemy-neg': ['evil', 'brutal', 'unscrupulous ', 'finicky'],\n    // 'enemy-prefix': ['Doctor', 'Professor',],\n    'enemy-name': ['P5.js library', 'Paper.js library', 'Web GL renderer', 'Trigonometry', 'Random() function'],\n  'middle': ['<section>#middle-content#</section>'],\n    'middle': ['#middle-starter# #middle-crisis#'],\n    'middle-starter': ['<p>Our hero, self-proclaimed #hero-profession#, was in a #mood-adj# mood, because #incident#. Hence, when they were called to solve the mystery of #problem#, they felt nothing could stop them.</p>'],\n    'mood-adj': ['great', 'bad', 'excellent', 'lousy'],\n    'incident': ['their breakfast had been a spread', 'their daughter is getting married tonight', 'they had hit their toe at the bed post this morning'],\n    'problem': ['increased reports of sketches having déja-vus', 'a brutal murder of elements in array by someone using semi-automatic .reduce()-weapons', 'vanishing html-elements and confusing css-rules', 'shapes getting drawn over by other shapes', 'syntax murdering grammar and vice versa'],\n    'middle-crisis': ['<p>They were not prepared that their arch enemy, the #enemy-name#, a #enemy-neg# #enemy-profession#, would ambush them.</p>'],\n    \n  'end': ['<section><p>They got into an epic fight, it was the fight to end all fights. there is no way we could describe it here, because in the end everything was just #adj# #entities# over the #location#. </p></section>'],\n  'entities': ['characters and numbers', 'lines and circles', 'semiotics and grammars', 'objects and functions', 'sketches and ideas'],\n  'adj': ['brutalized', 'exploded', 'blasted'],\n  'location': ['#scene-attr# #scene-place# of #scene-domain-attr# #scene-domain#']\n}\n\n\nfunction main() {\n  let grammar = tracery.createGrammar(storyGrammar);\n  let story = grammar.flatten('#top#');\n\n  const storyDiv = document.createElement('div');\n  storyDiv.innerHTML = story;\n\n  document.body.insertAdjacentElement('beforeend', storyDiv);\n\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "KX5sgzLjxoBPZtAcC",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:28:11.996Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fsn7hys6yaznd1lxrrzr",
        "version": 1549650501,
        "signature": "07fe98ffc7ff9e79ea7e59bac0614964a804a791",
        "width": 1420,
        "height": 952,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-08T18:28:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 10385112,
        "type": "upload",
        "etag": "ec07e4b6c63d38940eefbf26f2f12b20",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549650501/avalanche2019/fsn7hys6yaznd1lxrrzr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549650501/avalanche2019/fsn7hys6yaznd1lxrrzr.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "128014",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "772604",
          "dar": "355:238"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 913217,
        "duration": 90.929002,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Sonifying chaotic movements patterns of people at the grand central station. Crowd behaviour becomes the random seed.\n\n(Headphones recommended)\n\nCredits: \nBlob tracking library\nMinim library"
  },
  {
    "_id": "KXgfmYhY2CjnS2Zy3",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T00:23:25.051Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yy1yj1g80n4wjcnh38c2",
        "version": 1555038856,
        "signature": "ef72c04e04d754af0452fb4c75fd52b38b1a0e93",
        "width": 1760,
        "height": 932,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-12T03:14:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 2297935,
        "type": "upload",
        "etag": "046eae5e1be72e2efd9b8c56aee5f354",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555038856/avalanche2019/yy1yj1g80n4wjcnh38c2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555038856/avalanche2019/yy1yj1g80n4wjcnh38c2.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "411396",
          "dar": "440:233"
        },
        "frame_rate": 60,
        "bit_rate": 426270,
        "duration": 43.126333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/dxclzfqrmmyimbpyrcgu",
        "version": 1555038861,
        "signature": "b2eab29cdfc203aebe9a0ddf270692bb29ce3dc2",
        "width": 1366,
        "height": 1438,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:14:21Z",
        "tags": [],
        "bytes": 84780,
        "type": "upload",
        "etag": "d37feedc555c581d16090a233c645418",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555038861/avalanche2019/dxclzfqrmmyimbpyrcgu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555038861/avalanche2019/dxclzfqrmmyimbpyrcgu.png"
      },
      {
        "public_id": "avalanche2019/pz2xqg9lgdpc9ksgqgao",
        "version": 1555038963,
        "signature": "b0e9f06a10315040f565c147ec7f0f26d82d1feb",
        "width": 1324,
        "height": 1430,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:16:03Z",
        "tags": [],
        "bytes": 69992,
        "type": "upload",
        "etag": "7768f97e79936ab7aba173fd447e6df2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555038963/avalanche2019/pz2xqg9lgdpc9ksgqgao.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555038963/avalanche2019/pz2xqg9lgdpc9ksgqgao.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T03:54:00.879Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T16:26:55.46Z" }
      }
    ],
    "title": "",
    "description": "[Spoonerisms](https://en.wikipedia.org/wiki/Spoonerism)!\n\n[Test a mostly working version here](https://annagarbier.github.io/exampleCode/spoonerisms/)",
    "code": "const spoonerism_please = document.getElementById('spoonerism_please');\nspoonerism_please.addEventListener('click', main);\n\nconst and = 'and';\n\nconst vowels = [\n    'a',\n    'e',\n    'i',\n    'o',\n    'u'\n];\nconst consonants = [\n    'q', 'Q',\n    'w', 'W',\n    'r', 'R',\n    't', 'T',\n    'y', 'Y',\n    'p', 'P',\n    's', 'S',\n    'd', 'D',\n    'f', 'F',\n    'g', 'G',\n    'h', 'H',\n    'j', 'J',\n    'k', 'K',\n    'l', 'L',\n    'z', 'Z',\n    'x', 'X',\n    'c', 'C',\n    'v', 'V',\n    'b', 'B',\n    'n', 'N',\n    'm', 'M'\n]\n\nfunction readDatasheet(text) {\n    return text.split(' ');\n}\n\nfunction findSwapWords(word_array) {\n    let and_index;\n    if (word_array.includes(and)) {\n        and_index = word_array.indexOf(and);\n    } else if (word_array.includes('of')) {\n        and_index = word_array.indexOf('of');\n    } else if (word_array.includes('the')) {\n        and_index = word_array.indexOf('the');\n    } else if (word_array.includes('a')) {\n        and_index = word_array.indexOf('a');\n    }\n    const token_before = word_array[and_index - 1];\n    const token_after = word_array[and_index + 1];\n\n    return [token_before, token_after];\n}\n\nfunction splitToken(token) {\n    const onset_start = 0;\n    let onset_end;\n    for (let i = 0; i < token.length; i++) {\n        char = token.charAt(i);\n        if (consonants.includes(char) === false) {\n            onset_end = i;\n            break;\n        }\n    }\n\n    return {\n        onset: token.slice(onset_start, onset_end),\n        rest: token.slice(onset_end, token.length)\n    }\n}\n\nfunction getSpoonTokens(text) {\n    const a = splitToken(findSwapWords(readDatasheet(text))[0]);\n    const b = splitToken(findSwapWords(readDatasheet(text))[1]);\n    const new_a = b.onset + a.rest;\n    const new_b = a.onset + b.rest;\n\n    return [new_a, new_b];\n}\n\nfunction reconstructText(text) {\n    const word_array = readDatasheet(text);\n    let and_index;\n    if (word_array.includes(and)) {\n        and_index = word_array.indexOf(and);\n    } else if (word_array.includes('of')) {\n        and_index = word_array.indexOf('of');\n    } else if (word_array.includes('the')) {\n        and_index = word_array.indexOf('the');\n    } else if (word_array.includes('a')) {\n        and_index = word_array.indexOf('a');\n    }\n\n    word_array.splice(and_index - 1, 1, `<b style=\"color: blue;\">${getSpoonTokens(text)[0]}</b>`);\n    word_array.splice(and_index + 1, 1, `<b style=\"color: blue;\">${getSpoonTokens(text)[1]}</b>`);\n\n    return word_array.join(' ');\n}\n\n// console.log(getSpoonTokens(text));\nfunction main() {\n    const text = document.getElementById('text').value;\n    if (text.includes(and) || text.includes('of') || text.includes('the') || text.includes('a')) {\n        response = reconstructText(text);\n        response_p = document.getElementById('response');\n        response_p.innerHTML = '';\n        response_p.innerHTML += response;\n    } else {\n        alert('The text must contain \\'and\\', \\'of\\', \\'a\\', or \\'the\\' for anything interesting to happen...');\n    }\n}"
  },
  {
    "_id": "Kc4LbsL3ojHYNptfu",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:49:37.997Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Working Progress on P5 scene manager",
    "code": "P5 link: https://editor.p5js.org/uryuu1002/sketches/_ZZtq_GTT"
  },
  {
    "_id": "KdpExyDPmHoNpuC9C",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T22:16:32.525Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xr8b3lcmuxyreepqnhz6",
        "version": 1557440204,
        "signature": "1b049397f3e17913681e13860824e117768f50b9",
        "width": 788,
        "height": 772,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T22:16:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 1196723,
        "type": "upload",
        "etag": "12cdcba42c53e5a8b6e1873975b94f0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557440204/avalanche2019/xr8b3lcmuxyreepqnhz6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557440204/avalanche2019/xr8b3lcmuxyreepqnhz6.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2192509",
          "dar": "197:193"
        },
        "frame_rate": 60,
        "bit_rate": 2529067,
        "duration": 3.7855,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "KduviakmkWkDKEsFd",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:44:20.909Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dqpobskowpnup0mns16j",
        "version": 1550854001,
        "signature": "20508370c666a2ada7068ebe81626aab48005572",
        "width": 1622,
        "height": 1628,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T16:46:41Z",
        "tags": [],
        "bytes": 928623,
        "type": "upload",
        "etag": "f51e582f68f215741a854a10c767664c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550854001/avalanche2019/dqpobskowpnup0mns16j.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550854001/avalanche2019/dqpobskowpnup0mns16j.jpg"
      },
      {
        "public_id": "avalanche2019/i2t4em1pkpq8ukp6og3o",
        "version": 1550854088,
        "signature": "6432ee087c0d145038946a5efaf6c006f4920e7c",
        "width": 1612,
        "height": 1596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T16:48:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 19812839,
        "type": "upload",
        "etag": "e717e8138e85a8de9dd31b9881e32b83",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550854088/avalanche2019/i2t4em1pkpq8ukp6og3o.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550854088/avalanche2019/i2t4em1pkpq8ukp6og3o.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "30178515",
          "dar": "403:399"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 31356666,
        "duration": 5.054833,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T18:14:28.367Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T14:53:55.94Z" }
      }
    ],
    "title": "",
    "description": "I loved Anna’s sketch so I had to do a tribute. \nMove the cursor around the canvas, the red circles get noisier as the black ones get smoother and vice versa.",
    "inspiration_name": "Anna’s sketch Feb 19th",
    "inspiration_url": "http://sketches2019.compform.net/users/EbdEAWumAHKFDnb3H",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// Concentric circle code by Anna Garbier\n\nconst canvas = {\n  w: 800,\n  h: 800\n};\n\nfunction setup() {\n  createCanvas(canvas.w, canvas.h);\n\n  // line and canvas aesthetics\n  noFill();\n  strokeWeight(0.18);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(250);\n  translate(width / 2, height / 2);\n  rotate(frameCount * 0.3 + mouseX * 0.01 + mouseY * 0.01);\n  translate(-width / 2, -height / 2);\n  n1 = 50 - noise(millis() * 0.0002) * 100;\n  n2 = 50 - noise(millis() * 0.0001) * 100;\n  stroke(30);\n  makeShape(700, width / 3 + n1, width / 3 + n2);\n  stroke(80, 0, 0);\n  makeShape2(700, width * 1.33 + n1, width * 1.33 + n2);\n}\n\nfunction makeRing(radius, xPar, yPar) {\n  // Uses https://www.youtube.com/watch?v=76fiD5DvzeQ, adds noise\n\n  beginShape();\n  for (let a = 0; a < 360; a += 1) {\n    let x = radius * sin(a) + xPar / 2;\n    let y = radius * cos(a) + yPar / 2;\n    let n = noise(\n      x * 0.01 * mouseX * 0.0001 * (sin(millis() * 0.01) * 8000) * 0.001,\n      y * 0.01 * mouseY * 0.002 + sin(millis() * 0.01) * 9000 * 0.001\n    );\n    vertex(x + radius * 0.3 * n, y + radius * 0.3 * n);\n  }\n  endShape(CLOSE);\n}\n\nfunction makeShape(numRings, x, y) {\n  // noise(millis() * 0.001 + 30, millis() * 0.001 + 30);\n  for (let i = 400; i < numRings; i += 4) {\n    makeRing(i, x, y);\n  }\n}\n\nfunction makeShape2(numRings, x, y) {\n  // noise(millis() * 0.001 + 30, millis() * 0.001 + 30);\n  for (let i = 350; i < numRings; i += 4) {\n    makeRing2(i, x, y);\n  }\n}\n\nfunction makeRing2(radius, xPar, yPar) {\n  // Uses https://www.youtube.com/watch?v=76fiD5DvzeQ, adds noise\n\n  beginShape();\n  for (let a = 0; a < 360; a += 1) {\n    let x = radius * sin(a) + xPar / 2;\n    let y = radius * cos(a) + yPar / 2;\n    let n = noise(\n      x *\n        0.01 *\n        (width - mouseX) *\n        0.00008 *\n        (cos(millis() * 0.01) * 8000) *\n        0.001,\n      y * 0.01 * (height - mouseY) * 0.001 + cos(millis() * 0.01) * 9000 * 0.001\n    );\n    vertex(x + radius * 0.3 * n, y + radius * 0.3 * n);\n  }\n  endShape(CLOSE);\n}"
  },
  {
    "_id": "Ke5hT5drSCHQRuBXP",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-10T06:10:51.011Z" },
    "posted": false,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rfz5k5dbzmqnororv1ql",
        "version": 1554876708,
        "signature": "c64621a683a2f3e695b5b4e60943522f44cf2ee0",
        "width": 450,
        "height": 300,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-10T06:11:48Z",
        "tags": [],
        "bytes": 55517,
        "type": "upload",
        "etag": "fff9a2a449518408ecb7d8b6788edf9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554876708/avalanche2019/rfz5k5dbzmqnororv1ql.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554876708/avalanche2019/rfz5k5dbzmqnororv1ql.jpg"
      },
      {
        "public_id": "avalanche2019/ppl5aninhzwcze93okjg",
        "version": 1554876887,
        "signature": "a08584734e5a5f4ea05576c722edfe7a73aab46f",
        "width": 2554,
        "height": 656,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T06:14:47Z",
        "tags": [],
        "bytes": 319786,
        "type": "upload",
        "etag": "4a0d4ac192ea51fddcb8d582949bbc97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554876887/avalanche2019/ppl5aninhzwcze93okjg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554876887/avalanche2019/ppl5aninhzwcze93okjg.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "KgJ6PXQZzrHmx6XGT",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-02-01T00:48:37.822Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hqyg450cqxbszosvzlzp",
        "version": 1548982566,
        "signature": "c19297bf36a4b8a377d01e011518ab385ea9311b",
        "width": 1426,
        "height": 1426,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T00:56:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 12621503,
        "type": "upload",
        "etag": "b76e2306a62c82bfddc69a75d096029e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548982566/avalanche2019/hqyg450cqxbszosvzlzp.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548982566/avalanche2019/hqyg450cqxbszosvzlzp.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "22518006",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 22518292,
        "duration": 4.483984,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:01.597Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "p5js random RGB",
    "inspiration_name": "Glitch",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nwindow.setup = function(){\n  createCanvas(500,500);\n};\n\nwindow.draw = function(){\n    let tiles = 10;\n    for (let x = 0; x <= 500 ; x+=tiles) {\n      for (let y = 0; y <= 500 ; y+=tiles) {\n        noStroke();\n        let r = random(160);\n        let g = random(10);\n        let b = random(120);\n        fill(r,g,b);\n        rect(x , y , 10, 10);\n      }\n    }\n};"
  },
  {
    "_id": "KguNtaEz4NSQQkTcx",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T15:07:11.017Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/exp11gwnzyefagc5hjtk",
        "version": 1554476840,
        "signature": "e3637d6c7a3c088e4b31b46aaa11b4b75de75f6a",
        "width": 1600,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T15:07:20Z",
        "tags": [],
        "bytes": 1002416,
        "type": "upload",
        "etag": "3e82490a66af6a680f7792b34c579a33",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554476840/avalanche2019/exp11gwnzyefagc5hjtk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554476840/avalanche2019/exp11gwnzyefagc5hjtk.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Challenge - Comp Form Bumper - but needs timing fixed.",
    "code": "var xoff = 0.0;\nvar words = [\"procedures\", \"random values\", \"parameters\", \"noise\", \"strategies,\", \"tile maps\", \"Hello, p5\", \"pixel data\", \"turtle graphics\", \"vector data\", \"animation\", \"generating text\", \"comp sound\", \"comp music\", \"3D forms\", \"microgames\"];\n\nfunction preload() {\n  // Ensure the .ttf or .otf font stored in the assets directory\n  // is loaded before setup() and draw() are called\n  font = loadFont('SourceSansPro-Black.ttf');\n  img = loadImage('triangle.png');\n}\nfunction setup() {\n  createCanvas(800, 400);\n  background(0,0,0);\n  //background(105,128,144);\n  //background(105,105,105);\n  noStroke();\n  frameRate(8);\n}\n\nfunction draw() {\n      //clear();\n\n    const theta = map(frameCount, 0, 30, 0, 2 * PI);\n  //fill(0, 4); // Create an alpha blended background\n  //rect(0, 0, width, height);\n\n  // Get a noise value based on xoff and scale \n  // it according to the window's width\n  var n = xoff * xoff * width;\n  // var n = random(0,width);  // another expression\n\n  xoff += 0.01; // With each cycle, increment xoff\n  if (n > width) {\n    xoff = 0.0; // reset\n  }\n\n  fill(color(random(25, 125,30), random(0,0,1), random(255, 140,20),       random(218,165,22)));\n  text(random(words), n, random(height));\n  textSize(random(11, 244));\n  \n  push(); // Start a new drawing state\n  textSize(18);\n  //strokeWeight();\n  fill(248,20);\n   //fill(218, 165,32);\n  translate(90, 60);\n  text('C O M P U T A T I O N A L  FORM', 40, 60);\n  image(img,-20,25);\n  //ellipse(0, 50, 33, 33); // Middle circle\n  pop(); // Restore original state\n}"
  },
  {
    "_id": "KhmkkmutRhFs85wAb",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T22:02:10.21Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gqz6mrds2b9pwktdqcbz",
        "version": 1555020135,
        "signature": "3214dd2e6b6c14d7fa100d42dcffc8421270f8bd",
        "width": 1908,
        "height": 1048,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-11T22:02:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 129941,
        "type": "upload",
        "etag": "f7910587b772ce7faeaa435888518fd9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555020135/avalanche2019/gqz6mrds2b9pwktdqcbz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555020135/avalanche2019/gqz6mrds2b9pwktdqcbz.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "107945",
          "dar": "477:262"
        },
        "frame_rate": 20,
        "bit_rate": 110588,
        "duration": 9.4,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Simple NYT article search engine using API"
  },
  {
    "_id": "KmbmSsBjGRWWiRx9x",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T19:09:22.821Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zlemyocrtkoyqyjasbd2",
        "version": 1549048218,
        "signature": "47becf2e9e328f0927ca83c33299728513983066",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T19:10:18Z",
        "tags": [],
        "bytes": 2028883,
        "type": "upload",
        "etag": "068e7e2b8ed1e14b455fa1a71c929b69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549048218/avalanche2019/zlemyocrtkoyqyjasbd2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549048218/avalanche2019/zlemyocrtkoyqyjasbd2.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Different tile map from Jo's set"
  },
  {
    "_id": "KnWZMsG3ZW9dY9Exk",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T19:29:24.071Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ho1ezl5itnr6b8nbkvc2",
        "version": 1555011047,
        "signature": "2a5db9e0eda7fde1933a7b75a5aab5bcc2d345d4",
        "width": 792,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T19:30:47Z",
        "tags": [],
        "bytes": 65121,
        "type": "upload",
        "etag": "b118c9e0a853b6da214d48b1f0dec025",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555011047/avalanche2019/ho1ezl5itnr6b8nbkvc2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555011047/avalanche2019/ho1ezl5itnr6b8nbkvc2.png"
      },
      {
        "public_id": "avalanche2019/rsfdddgoqjs8gpzf5ir0",
        "version": 1555011068,
        "signature": "6fa5a5aa76042310a532d465eeed69571aaec47f",
        "width": 1092,
        "height": 692,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T19:31:08Z",
        "tags": [],
        "bytes": 37166,
        "type": "upload",
        "etag": "c976cf6c1e01d78ffc2a685e54f35e2f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555011068/avalanche2019/rsfdddgoqjs8gpzf5ir0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555011068/avalanche2019/rsfdddgoqjs8gpzf5ir0.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Challenge - Tracery starter code, and ended up in a dark and stormy night",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n\n    'top': ['#div#'],\n    'div': ['<div style=\"border: #borderSize# #borderType# #borderColor#;  color: #borderFill# #borderColor#; text-align: center; text-transform: uppercase; font-family: Overpass Mono, sans-serif; margin: 100px;\">#content#</div>'],\n    'content': ['#div#', '#div# #div#', '#intro#', '#word#', '#word#'],\n    'borderSize': ['.5px','.25px', '.25px', '.25px'],\n    'borderType': ['solid', 'dashed', 'dotted'],\n    'fill': ['yellow','red','green'],\n    'borderColor': ['gainsboro', 'silver', 'lightgray'],\n    'word': ['<span style=\"font-size: 10px\">#adj# #animal##char#</span>'],\n    'intro': ['It was a dark and stormy night'],\n    'adj': ['Everyone was at the', 'They were not the wingding'],\n    'animal': ['wingding', 'dancing in the rain'],\n    'char': ['!', '?']\n}\n\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten('#top#');\n\n    const storyDiv = document.createElement('div');\n    storyDiv.innerHTML = story;\n\n    document.body.insertAdjacentElement('beforeend', storyDiv);\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "KnhjwLoNm3bZYQYgB",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T05:04:13.043Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dsstagwgud4hg0jtnmrj",
        "version": 1551848696,
        "signature": "bc58da3b65e78f0e2709c3c13d5fb133196be106",
        "width": 998,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T05:04:56Z",
        "tags": [],
        "bytes": 53484,
        "type": "upload",
        "etag": "33705b84aef4a2f3f727d05d3c9fb728",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551848696/avalanche2019/dsstagwgud4hg0jtnmrj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551848696/avalanche2019/dsstagwgud4hg0jtnmrj.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:12:53.625Z" }
      }
    ],
    "title": "",
    "description": "Pixel Aesthetic (Building + Stars)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n    createCanvas(500, 500);\n\n}\n\nfunction draw() {\n\n  background('#9E80FE');\n    img = createImage(100, 100);\n    img.loadPixels();\n  \n  drawStar();  \n  drawBuilding();\n\n\n    img.updatePixels();\n\n    noSmooth();\n    image(img, 0, 0, width, height);\n    noLoop();\n \n \n\n}\n\nfunction drawStar(){\n     for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n\t\t\tvar listOfColors = [\n                          color('#9E80FE'),color('#9E80FE'),color('#9E80FE'),color('#9E80FE'),\n                          color('#9E80FE'),color('#9E80FE'),color('#9E80FE'),color('#9E80FE'),color('#FEE2B3')];\n\t\t\t// img.set(x,y,listOfColors[int(random(0, listOfColors.length))]);\n         // var c = color('#FFE4BC');\n         //    img.set(x, y, c);\n            img.set(x, random(y-43), listOfColors[int(random(0, listOfColors.length))]);\n        }\n    }\n\n}\n\n\n\nfunction drawBuilding(){\n    noStroke();\n  fill(color('#B294EC'));\n  rect(0,280,500,20);\n   fill(color('#D39BF4'));\n rect(0,300,500,20);\n     fill(color('#F1A7FE'));\n rect(0,320,500,20);\n       fill(color('#F9C1FF'));\n rect(0,340,500,150);\n  strokeWeight(0.5);\n   stroke(0);\n    let x = 0;\n    for (x = 0; x < width; x += 20) {\n  var listOfColors = [color('#B0F7E4'),color('#F2A6FE'),color('#DEC4FF'),color('#FEE2B3')];\n fill(listOfColors[int(random(0, listOfColors.length))]);\n        let buildingHeight = floor(pickHeight()) * 16;\n        rect(x, height * 1 - buildingHeight, 30, buildingHeight);\n    } \n\n}\n\nfunction pickHeight() {\n    return max(\n        random(0, 10),\n        random(0, 10),\n        random(0, 10),\n        random(0, 10)\n    );\n\n}"
  },
  {
    "_id": "KnqQGmZ8Er25XMDjX",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T20:19:44.735Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x32jz3zx4eupkkes7ddw",
        "version": 1553805676,
        "signature": "26a82f4e49908948e823befcf523eadac39f8103",
        "width": 612,
        "height": 602,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T20:41:16Z",
        "tags": [],
        "bytes": 153072,
        "type": "upload",
        "etag": "df2ff4bac966487d4325dea6955b653a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553805676/avalanche2019/x32jz3zx4eupkkes7ddw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553805676/avalanche2019/x32jz3zx4eupkkes7ddw.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Preparing for laser cut"
  },
  {
    "_id": "KoWjGMJFwbsqaA2Xz",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T15:11:10.569Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T15:28:34.117Z" }
      }
    ],
    "title": "",
    "description": "A little Beverly Hills Cop to start the day. Playing with reverb and delay.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\nvar reverb = new Tone.JCReverb(0.65).connect(Tone.Master);\nvar delay = new Tone.FeedbackDelay(0.22);\nvar synth = new Tone.Synth().chain(delay, reverb);\n\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n  [\"d4\", \"8n.\"],\n  [\"rest\", \"4n\"],\n  [\"f4\", \"4n\"],\n  [\"rest\", \"8n\"],\n  [\"d4\", \"4n\"],\n  [\"d4\", \"8n\"],\n  [\"g4\", \"4n\"],\n  [\"d4\", \"4n\"],\n  [\"c#4\", \"4n\"],\n\n  [\"d4\", \"8n\"],\n  [\"rest\", \"4n.\"],\n  [\"a4\", \"8n\"],\n  [\"rest\", \"8n.\"],\n  [\"d4\", \"4n\"],\n  [\"d4\", \"8n\"],\n  [\"a#4\", \"4n\"],\n  [\"a4\", \"4n\"],\n  [\"f4\", \"4n\"],\n  [\"d4\", \"4n\"],\n  [\"a4\", \"4n\"],\n  [\"d3\", \"4n\"],\n  [\"d4\", \"4n\"],\n  // [\"c4\", \"4n\"],\n  [\"c4\", \"4n\"],\n  [\"a3\", \"4n\"],\n  [\"e4\", \"4n\"],\n  [\"d4\", \"4n\"],\n\n  [\"rest\", \"1n\"],\n  [\"rest\", \"4n\"],\n  // [\"rest\", \"4n\"],\n  // [\"rest\", \"4n\"],\n  [\"c4\", \"8n\"],\n  [\"a3\", \"4n\"],\n  [\"g3\", \"4n\"],\n  [\"e3\", \"4n\"]\n];\n\nwindow.onmousedown = e => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log(\"click for music!\");"
  },
  {
    "_id": "KoqjEAbREusTEzrQE",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T23:00:20.448Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jvs86rfkx3yytjkuzhrn",
        "version": 1549580427,
        "signature": "06db2b7ebfc0d044976335822efdc7b087785604",
        "width": 970,
        "height": 1278,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T23:00:27Z",
        "tags": [],
        "bytes": 730178,
        "type": "upload",
        "etag": "6f920d3f06a4836eff15b4b312328a8b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549580427/avalanche2019/jvs86rfkx3yytjkuzhrn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549580427/avalanche2019/jvs86rfkx3yytjkuzhrn.png"
      },
      {
        "public_id": "avalanche2019/mlxbi7amak657biccysl",
        "version": 1549580445,
        "signature": "c7cb4769a25cade63f272b9506ef0be31524deea",
        "width": 640,
        "height": 805,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T23:00:45Z",
        "tags": [],
        "bytes": 24506,
        "type": "upload",
        "etag": "8278556cc6ace3ba8f0efe8c4434e538",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549580445/avalanche2019/mlxbi7amak657biccysl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549580445/avalanche2019/mlxbi7amak657biccysl.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T23:12:44.83Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T00:21:43.123Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T01:42:40.962Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T03:38:51.328Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T21:13:15.556Z" }
      }
    ],
    "title": "",
    "description": "My sketch (img 1) \nRothko (img 2)\n\neach time will be slightly different",
    "inspiration_name": "Rothko",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\nfunction setup() {\n    createCanvas(600, 800);\n    smooth();\n\n    colorMode(RGB, 255, 255, 255, 1);\n    background(0, 0, 0);\n\n    //imprimatura layer\n    // fill(230, 60, 32);\n    noStroke();\n    // drawBackground();\n    drawRectangle(10, 0, 0, 560, 400, 34, 57, 34, 75, 90, 159);\n    drawRectangle(10, 0, 30, 520, 400, 37, 44, 40, 44, 86, 96);\n    //function drawRectangle(strokeSpacing,y, xOffset, columnQuantity, rowQuantity, colorFunction)\n    drawRectangle(15, 0, 50, 500, 50, 58, 65, 57, 64, 92, 110);\n    drawRectangle(12, 250, 30, 500, 30, 40, 64, 69, 90, 158, 188);\n    drawRectangle(15, 440, 30, 500, 60, 46, 72, 15, 19, 33, 35);\n\n}\n\nfunction drawRectangle(strokeSpacing, y, xOffset, columnQuantity, rowQuantity, redMin, redMax, greenMin, greenMax, blueMin, blueMax) {\n    for (rows = 0; rows < rowQuantity; rows++) {\n        for (i = xOffset; i < columnQuantity; i += strokeSpacing) {\n            let width = random(10, 25);\n            let height = random(10, 30);\n\n            let startOffset = random(10, 25);\n            rect(i + startOffset, y + startOffset, width, height);\n\n            makeColor(redMin, redMax, greenMin, greenMax, blueMin, blueMax);\n        }\n        i = 0;\n        y += 5;\n    }\n}\n\n\n\nfunction makeColor(redMin, redMax, greenMin, greenMax, blueMin, blueMax) {\n    let r = random(redMin, redMax);\n    let g = random(greenMin, greenMax);\n    let b = random(blueMin, blueMax);\n    let r2 = random(redMin, redMax);\n    let g2 = random(greenMin, greenMax);\n    let b2 = random(blueMin, blueMax);\n    let r3 = random(redMin, redMax);\n    let g3 = random(greenMin, greenMax);\n    let b3 = random(blueMin, blueMax);\n    r = (r + r2 + r3) / 3;\n    g = (g + g2 + g3) / 3;\n    b = (b + b2 + b3) / 3;\n    let opacity = (random(1) + random(1) + random(1)) / 3;\n    fill(r, g, b, opacity);\n\n}"
  },
  {
    "_id": "KotmGGwYTzWM8nPHH",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T01:00:11.193Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l5sw1iae78j71wj3ouca",
        "version": 1551920647,
        "signature": "b00b293195118c7bc9af9df3012ab30476fc1728",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T01:04:07Z",
        "tags": [],
        "bytes": 56810,
        "type": "upload",
        "etag": "1a7f2c0fba8d89776231f7f32b44a30f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551920647/avalanche2019/l5sw1iae78j71wj3ouca.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551920647/avalanche2019/l5sw1iae78j71wj3ouca.png"
      },
      {
        "public_id": "avalanche2019/vy8v3nw1e42poglx3xnw",
        "version": 1551920718,
        "signature": "5e7e3149cc481c8e8a423683fa466538970124f8",
        "width": 814,
        "height": 814,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T01:05:18Z",
        "tags": [],
        "bytes": 73397,
        "type": "upload",
        "etag": "8dad60002f9ae1784f2bc0865259adbd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551920718/avalanche2019/vy8v3nw1e42poglx3xnw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551920718/avalanche2019/vy8v3nw1e42poglx3xnw.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T15:58:14.812Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Pointillism",
    "inspiration_url": "https://p5js.org/examples/image-pointillism.html",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/p5.min.js\n// code from https://p5js.org/examples/image-pointillism.html\nlet img;\nlet smallP, largeP;\n\nfunction preload() {\n  img = loadImage('https://i.ibb.co/Jd43csn/cf.png');\n}\n\nfunction setup() {\n  createCanvas(500, 500);\n  smallP = 5;\n  largeP = 50;\n  imageMode(CENTER);\n  noStroke();\n  background(255);\n  img.loadPixels();\n}\n\nfunction draw() {\n  let pixelss = map(random(100), 0, width, smallP, largeP);\n  let x = floor(random(img.width));\n  let y = floor(random(img.height));\n  let pix = img.get(x, y);\n  fill(pix, 10);\n  rect(x, y, pixelss, pixelss);\n}"
  },
  {
    "_id": "Kuq6xwvsATH3SmasG",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T02:03:06.743Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fwksskkhojq9mee3d0yl",
        "version": 1551837806,
        "signature": "16968787a64bf9e940e43667984a1bd50323c9a0",
        "width": 498,
        "height": 497,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T02:03:26Z",
        "tags": [],
        "bytes": 16922,
        "type": "upload",
        "etag": "c887090cffbff9e9b4fa02804147a48e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551837806/avalanche2019/fwksskkhojq9mee3d0yl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551837806/avalanche2019/fwksskkhojq9mee3d0yl.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-03-06T02:21:16.51Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-06T14:04:14.736Z" }
      }
    ],
    "title": "",
    "description": "Continuing playing with portraits.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar worldImage;\n\nfunction preload() {\n  worldImage = loadImage(\"Brad02.gif\");\n}\n\nfunction setup() {\n  createCanvas(500, 500);\n  // noprotect\n}\n\n\nfunction draw() {\n  background(0);\n\n  for (var y = 0; y < worldImage.height; y++) {\n    for (var x = 0; x < worldImage.width; x++) {\n      var this_color = worldImage.get(x, y);\n      var below_color = worldImage.get(x, y + 3);\n\n      if (lightness(this_color) < lightness(below_color)) {\n        var out_color = color(255);\n        worldImage.set(x, y, out_color);\n        worldImage.updatePixels();\n      }\n    }\n  }\n\n  noSmooth();\n  image(worldImage, 0, 0, width, height);\n\n  noLoop();\n}"
  },
  {
    "_id": "KzgZ5Tz8FcbhKZQby",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-15T05:39:49.386Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/puc1zg5jqptlopw4mfxv",
        "version": 1557898798,
        "signature": "d11d5821383eabd5fb1d418789e18a19d95a13af",
        "width": 860,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-15T05:39:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 9950426,
        "type": "upload",
        "etag": "da54e418cb26f3274f52748dfeba9888",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557898798/avalanche2019/puc1zg5jqptlopw4mfxv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557898798/avalanche2019/puc1zg5jqptlopw4mfxv.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3715926",
          "dar": "43:36"
        },
        "frame_rate": 60,
        "bit_rate": 3722684,
        "duration": 21.383333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Changed idea for the game (new graphics) and fixed screens"
  },
  {
    "_id": "L2WbDPZEbYt2FrZgE",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "created_at": { "$date": "2019-02-24T19:00:57.23Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/o3mgnltzz654xwi0ablg",
        "version": 1551034985,
        "signature": "23e1116e999baf867024ee44a43715c64b8b7c92",
        "width": 1058,
        "height": 862,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-24T19:03:05Z",
        "tags": [],
        "bytes": 51979,
        "type": "upload",
        "etag": "196f294079102f65252dac8c65a53fc5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551034985/avalanche2019/o3mgnltzz654xwi0ablg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551034985/avalanche2019/o3mgnltzz654xwi0ablg.png"
      },
      {
        "public_id": "avalanche2019/lbbdmnwblgvjctuszx09",
        "version": 1551034990,
        "signature": "6b410f539512cad59af0b01c1d2a5b0ff468ea37",
        "width": 1052,
        "height": 858,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-24T19:03:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 2098559,
        "type": "upload",
        "etag": "e527f76d93f5368a34ad816b8bd2da47",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551034990/avalanche2019/lbbdmnwblgvjctuszx09.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551034990/avalanche2019/lbbdmnwblgvjctuszx09.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1102428",
          "dar": "526:429"
        },
        "frame_rate": 15,
        "bit_rate": 1104504,
        "duration": 15.2,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "A close as it's gonna get for me\n---\n ¯\\_(ツ)_/¯",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// code inspo: Justin; in class example\n\nlet canvas = { width: 500, height: 300 };\n\nlet amplitude_slider, freq_slider, speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nlet speedMultiplier = 0;\n\nfunction setup() {\n  createCanvas(canvas.width, canvas.height);\n  colorMode(HSB, 100);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  freq_slider = createSlider(0, 100, 50);\n\n  createP(\"Time Speed\");\n  speed_slider = createSlider(0, 200, 100);\n}\n\nfunction draw() {\n  background(20);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = freq_slider.value() / 1000;\n  let speed = speed_slider.value() / 1000;\n\n  noiseDetail(1, 0.5);\n\n  fill(100);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    var x = lerp(startX, endX, i);\n    var y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    var offsetX = noise(frequency * x + speedMultiplier, 10) * amplitude * 85;\n\n    var offsetY =\n      noise(frequency * y + speedMultiplier, 50 + frameCount * 0.05) *\n      amplitude *\n      85;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n  speedMultiplier += speed * 0.6;\n}"
  },
  {
    "_id": "L55Hp2JKLTWaKhd9d",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-27T16:06:08.38Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ixjrwptansw8wg3imtoa",
        "version": 1553702803,
        "signature": "13c05df00f6c49960490dc973686012da2f71684",
        "width": 552,
        "height": 564,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-27T16:06:43Z",
        "tags": [],
        "bytes": 108618,
        "type": "upload",
        "etag": "4b40808123bb1b5207dca9dadd6e0b4c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553702803/avalanche2019/ixjrwptansw8wg3imtoa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553702803/avalanche2019/ixjrwptansw8wg3imtoa.png"
      },
      {
        "public_id": "avalanche2019/lauctt6jjlwljtcbwb6i",
        "version": 1553702809,
        "signature": "df2b10e41312984d624b8e9f9c455c6360d25c95",
        "width": 990,
        "height": 896,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-27T16:06:49Z",
        "tags": [],
        "bytes": 172825,
        "type": "upload",
        "etag": "c895e8ec5b0a415728493dbceed65603",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553702809/avalanche2019/lauctt6jjlwljtcbwb6i.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553702809/avalanche2019/lauctt6jjlwljtcbwb6i.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Challenging Challenges - create drawing below",
    "code": "var center = new Point(250, 250);\n\n//- 4 second square\nvar rectangle1 = new Rectangle(new Point(340, 290), new Size(20, 20));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(25);\n\n//- 3 second square\nvar rectangle1 = new Rectangle(new Point(330, 280), new Size(40, 40));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(30);\n\n//- 2 second square\nvar rectangle1 = new Rectangle(new Point(320, 270), new Size(60, 60));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(35);\n\n//- 1 second square\nvar rectangle1 = new Rectangle(new Point(310, 260), new Size(80, 80));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(40);\n\n\n// create the red, rotated square\nvar rectangle1 = new Rectangle(new Point(300, 250), new Size(100, 100));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(45);\n\n\n\n//second square\nvar rectangle1 = new Rectangle(new Point(290, 240), new Size(120, 120));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(50);\n\n//3rd square\nvar rectangle1 = new Rectangle(new Point(280, 230), new Size(140, 140));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(55);\n\n//4rd square\nvar rectangle1 = new Rectangle(new Point(270, 220), new Size(160, 160));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(60);\n\n//5rd square\nvar rectangle1 = new Rectangle(new Point(260, 210), new Size(180, 180));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(65);\n\n//6rd square\nvar rectangle1 = new Rectangle(new Point(250, 200), new Size(200, 200));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(70);\n\n//7rd square\nvar rectangle1 = new Rectangle(new Point(240, 190), new Size(220, 220));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(75);\n\n//8rd square\nvar rectangle1 = new Rectangle(new Point(230, 180), new Size(240, 240));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(80);\n\n//9rd square\nvar rectangle1 = new Rectangle(new Point(220, 170), new Size(260, 260));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(85);\n\n//10rd square\nvar rectangle1 = new Rectangle(new Point(210, 160), new Size(280, 280));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(90);\n\n//11rd square\nvar rectangle1 = new Rectangle(new Point(200, 150), new Size(300, 300));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(95);\n\n//10rd square\nvar rectangle1 = new Rectangle(new Point(190, 140), new Size(320, 320));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.strokeColor = 'red';\npath1.rotate(100);"
  },
  {
    "_id": "L9iYQMY2KRAkCiMLX",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T01:51:28.574Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/orrczx9i5uxhlgzk0klt",
        "version": 1554947537,
        "signature": "973314e6ac2290591b8eac0b36d224728f0116ec",
        "width": 912,
        "height": 578,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-11T01:52:17Z",
        "tags": [],
        "bytes": 237638,
        "type": "upload",
        "etag": "a29b7012a8d4f0d34e56366d9805e79e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554947537/avalanche2019/orrczx9i5uxhlgzk0klt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554947537/avalanche2019/orrczx9i5uxhlgzk0klt.jpg"
      },
      {
        "public_id": "avalanche2019/u9dzbulhmirhpmgcdfyf",
        "version": 1554947540,
        "signature": "486fbd9d05d3f6f1ce95d364d2f8ab9dea28a76a",
        "width": 913,
        "height": 642,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-11T01:52:20Z",
        "tags": [],
        "bytes": 293638,
        "type": "upload",
        "etag": "746485e6a8cd28205bcb0a93167e7818",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554947540/avalanche2019/u9dzbulhmirhpmgcdfyf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554947540/avalanche2019/u9dzbulhmirhpmgcdfyf.jpg"
      },
      {
        "public_id": "avalanche2019/okwhtgrmzxg571s7oaru",
        "version": 1554947543,
        "signature": "d39953e5e86429b6c1b5cb94423ddda91f622727",
        "width": 917,
        "height": 731,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-11T01:52:23Z",
        "tags": [],
        "bytes": 342379,
        "type": "upload",
        "etag": "6b03c0b9708a6387d0f0d0d9a72cbb57",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554947543/avalanche2019/okwhtgrmzxg571s7oaru.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554947543/avalanche2019/okwhtgrmzxg571s7oaru.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created different short stories starting with \"A dark and stormy night\" by using segments from some of the best American Short Story collection - Hans Christian Anderson (The Little Match Girl, 1845), Kate Chopin (The Night Came Slowly, 1895), and Frank Stockton (The Lady, or the Tiger?, 1882).\n\nI have used Markov Chain principle to shuffle the words to create fresh (and not precisely logical) stories.",
    "inspiration_name": "Dark and Stormy Night Story",
    "inspiration_url": "https://americanliterature.com/twenty-great-american-short-stories",
    "code": "// Collecting text from different short stories.\n// Reference: https://americanliterature.com/twenty-great-american-short-stories\n// Main Ref: http://www.cityfood.com/culture/print/a_dark_and_stormy_night_story\n\nconst dark_stormy_night = \"It was a dark and stormy night. A guy was driving in some mountains and his car broke down. He stopped it by a tree and walked down the highway looking for help. A headlight started to approach him from behind. He turned back and noticed a car coming forth very slowly out of the gloom. He walked up to it, opened the door, and sat on the passenger's seat. Then he suddenly noticed that there was no driver, but the car was moving! Before the guy could decide what to do, a sharp turn appeared a few meters before the car and it seemed as though the car was going to go off the cliff. The guy trembled in fright, but just as the car reached the edge a pale hand came in from the open window and turned the steering wheel! When the car finished turning around the curve, the hand withdrew. Every time there was a turn, the same hand would come in and guide the wheels of the car to safety. The guy could not believe all this. As soon as he saw the lights of some rest stop by the road he jumped off the car and ran into a bar, pale, wet, shaking, and telling everybody that he had this creepy, supernatural experience. Then two young men dripping in mud came into the bar. One saw the guy and said, 'Hey, that's the jerk that got in our car while were pushing.'\"\nconst little_match_girl = \"Most terribly cold it was; it snowed, and was nearly quite dark, and evening-- the last evening of the year. In this cold and darkness there went along the street a poor little girl, bareheaded, and with naked feet. When she left home she had slippers on, it is true; but what was the good of that? They were very large slippers, which her mother had hitherto worn; so large were they; and the poor little thing lost them as she scuffled away across the street, because of two carriages that rolled by dreadfully fast. One slipper was nowhere to be found; the other had been laid hold of by an urchin, and off he ran with it; he thought it would do capitally for a cradle when he some day or other should have children himself. So the little maiden walked on with her tiny naked feet, that were quite red and blue from cold. She carried a quantity of matches in an old apron, and she held a bundle of them in her hand. Nobody had bought anything of her the whole livelong day; no one had given her a single farthing. She crept along trembling with cold and hunger--a very picture of sorrow, the poor little thing! The flakes of snow covered her long fair hair, which fell in beautiful curls around her neck; but of that, of course, she never once now thought. From all the windows the candles were gleaming, and it smelt so deliciously of roast goose, for you know it was New Year's Eve; yes, of that she thought. In a corner formed by two houses, of which one advanced more than the other, she seated herself down and cowered together. Her little feet she had drawn close up to her, but she grew colder and colder, and to go home she did not venture, for she had not sold any matches and could not bring a farthing of money: from her father she would certainly get blows, and at home it was cold too, for above her she had only the roof, through which the wind whistled, even though the largest cracks were stopped up with straw and rags. Her little hands were almost numbed with cold. Oh! a match might afford her a world of comfort, if she only dared take a single one out of the bundle, draw it against the wall, and warm her fingers by it. She drew one out. 'Rischt!' how it blazed, how it burnt! It was a warm, bright flame, like a candle, as she held her hands over it: it was a wonderful light. It seemed really to the little maiden as though she were sitting before a large iron stove, with burnished brass feet and a brass ornament at top. The fire burned with such blessed influence; it warmed so delightfully. The little girl had already stretched out her feet to warm them too; but--the small flame went out, the stove vanished: she had only the remains of the burnt-out match in her hand. She rubbed another against the wall: it burned brightly, and where the light fell on the wall, there the wall became transparent like a veil, so that she could see into the room. On the table was spread a snow-white tablecloth; upon it was a splendid porcelain service, and the roast goose was steaming famously with its stuffing of apple and dried plums. And what was still more capital to behold was, the goose hopped down from the dish, reeled about on the floor with knife and fork in its breast, till it came up to the poor little girl; when--the match went out and nothing but the thick, cold, damp wall was left behind. She lighted another match. Now there she was sitting under the most magnificent Christmas tree: it was still larger, and more decorated than the one which she had seen through the glass door in the rich merchant's house. Thousands of lights were burning on the green branches, and gaily-colored pictures, such as she had seen in the shop-windows, looked down upon her. The little maiden stretched out her hands towards them when--the match went out. The lights of the Christmas tree rose higher and higher, she saw them now as stars in heaven; one fell down and formed a long trail of fire. 'Someone is just dead!' said the little girl; for her old grandmother, the only person who had loved her, and who was now no more, had told her, that when a star falls, a soul ascends to God. She drew another match against the wall: it was again light, and in the lustre there stood the old grandmother, so bright and radiant, so mild, and with such an expression of love. 'Grandmother!' cried the little one. 'Oh, take me with you! You go away when the match burns out; you vanish like the warm stove, like the delicious roast goose, and like the magnificent Christmas tree!' And she rubbed the whole bundle of matches quickly against the wall, for she wanted to be quite sure of keeping her grandmother near her. And the matches gave such a brilliant light that it was brighter than at noon-day: never formerly had the grandmother been so beautiful and so tall. She took the little maiden, on her arm, and both flew in brightness and in joy so high, so very high, and then above was neither cold, nor hunger, nor anxiety--they were with God. But in the corner, at the cold hour of dawn, sat the poor girl, with rosy cheeks and with a smiling mouth, leaning against the wall--frozen to death on the last evening of the old year. Stiff and stark sat the child there with her matches, of which one bundle had been burnt. 'She wanted to warm herself,' people said. No one had the slightest suspicion of what beautiful things she had seen; no one even dreamed of the splendor in which, with her grandmother she had entered on the joys of a new year.\"\nconst night_came_slowly = \"I am losing my interest in human beings; in the significance of their lives and their actions. Some one has said it is better to study one man than ten books. I want neither books nor men; they make me suffer. Can one of them talk to me like the night – the Summer night? Like the stars or the caressing wind? The night came slowly, softly, as I lay out there under the maple tree. It came creeping, creeping stealthily out of the valley, thinking I did not notice. And the outlines of trees and foliage nearby blended in one black mass and the night came stealing out from them, too, and from the east and west, until the only light was in the sky, filtering through the maple leaves and a star looking down through every cranny. The night is solemn and it means mystery. Human shapes flitted by like intangible things. Some stole up like little mice to peep at me. I did not mind. My whole being was abandoned to the soothing and penetrating charm of the night. The katydids began their slumber song: they are at it yet. How wise they are. They do not chatter like people. They tell me only: 'sleep, sleep, sleep.' The wind rippled the maple leaves like little warm love thrills. Why do fools cumber the Earth! It was a man’s voice that broke the necromancer’s spell. A man came to-day with his 'Bible Class.' He is detestable with his red cheeks and bold eyes and coarse manner and speech. What does he know of Christ? Shall I ask a young fool who was born yesterday and will die tomorrow to tell me things of Christ? I would rather ask the stars: they have seen him.\"\nconst lady_or_tiger = \"In the very olden time, there lived a semi-barbaric king, whose ideas, though somewhat polished and sharpened by the progressiveness of distant Latin neighbors, were still large, florid, and untrammelled, as became the half of him which was barbaric. He was a man of exuberant fancy, and, withal, of an authority so irresistible that, at his will, he turned his varied fancies into facts. He was greatly given to self-communing; and, when he and himself agreed upon any thing, the thing was done. When every member of his domestic and political systems moved smoothly in its appointed course, his nature was bland and genial; but whenever there was a little hitch, and some of his orbs got out of their orbits, he was blander and more genial still, for nothing pleased him so much as to make the crooked straight, and crush down uneven places. Among the borrowed notions by which his barbarism had become semified was that of the public arena, in which, by exhibitions of manly and beastly valor, the minds of his subjects were refined and cultured. But even here the exuberant and barbaric fancy asserted itself. The arena of the king was built, not to give the people an opportunity of hearing the rhapsodies of dying gladiators, nor to enable them to view the inevitable conclusion of a conflict between religious opinions and hungry jaws, but for purposes far better adapted to widen and develop the mental energies of the people. This vast amphitheatre, with its encircling galleries, its mysterious vaults, and its unseen passages, was an agent of poetic justice, in which crime was punished. Or virtue rewarded, by the decrees of an impartial and incorruptible chance. When a subject was accused of a crime of sufficient importance to interest the king, public notice was given that on an appointed day the fate of tile accused person would be decided in the king's arena,--a structure which well deserved its name; for, although its form and plan were borrowed -from afar, its purpose emanated solely from the brain of this man, who, every barleycorn a king, knew no tradition to which he owed more allegiance than pleased his fancy, and who ingrafted on every adopted form of human thought and action the rich growth of his barbaric idealism. When all the people had assembled in the galleries, and the king, surrounded by his court, sat high up on his throne of royal state on one side of the arena, he gave a signal, a door beneath him opened, and the accused subject stepped out into the amphitheatre. Directly opposite him, on the other side of the enclosed space, were two doors, exactly alike and side by side. It was the duty and the privilege of the person on trial, to walk directly to these doors and open one of them. He could open either door he pleased: he was subject to no guidance or influence but that of the aforementioned impartial and incorruptible chance. If he opened the one, there came out of it a hungry tiger, the fiercest and most cruel that could be procured, which immediately sprang upon him, and tore him to pieces, as a punishment for his guilt. The moment that the case of the criminal was thus decided, doleful iron bells were clanged, great wails went up from the hired mourners posted on the outer rim of the arena, and the vast audience, with bowed heads and downcast hearts, wended slowly their homeward way, mourning greatly that one so young and fair, or so old and respected, should have merited so dire a fate. But, if the accused person opened the other door, there came forth from it a lady, the most suitable to his years and station that his majesty could select among his fair subjects; and to this lady he was immediately married, as a reward of his innocence. It mattered not that he might already possess a wife and family, or that his affections might be engaged upon an object of his own selection: the king allowed no such subordinate arrangements to interfere with his great scheme of retribution and reward. The exercises, as in the other instance, took place immediately, and in the arena. Another door opened beneath the king, and a priest, followed by a band of choristers' and dancing maidens blowing joyous airs on golden horns and treading an measure, advanced to where the pair stood side by side; and the wedding was promptly and cheerily solemnized. Then the gay brass bells rang forth their merry peals, the people shouted glad hurrahs, and the innocent man, preceded by children strewing flowers on his path, led his bride to his home. This was the king's semi-barbaric method of administering justice. Its perfect fairness is obvious. The criminal could not know out of which door would come the lady: he opened either he pleased, without having the slightest idea whether, in the next instant, he was to be devoured or married. On some occasions the tiger came out of one door, and on some out of the other. The decisions of this tribunal were not only fair, they were positively determinate: the accused person was instantly punished if he found himself guilty; and, if innocent, he was rewarded on the spot, whether he liked it or not. There was no escape from the judgments or the king's arena. The institution was a very popular one. When the people gathered together on one of the great trial days, they never knew whether they were to witness a bloody slaughter or a hilarious wedding. This element of uncertainty lent an interest to the occasion which it could not otherwise have attained. Thus, the masses were entertained and pleased, and the thinking part of the community could bring no charge of unfairness against this plan; for did not the accused person have the whole matter in his own hands? This semi - barbaric king had a daughter as blooming as his most florid fancies, and with a soul as fervent and imperious as his own. As is usual in such cases, she was the apple of his eye, and was loved by him above all humanity. Among his courtiers was a young man of that fineness of blood and lowness of station common to the conventional heroes of romance who love royal maidens. This royal maiden was well satisfied with her lover, for he was handsome and brave to a degree unsurpassed in all this kingdom; and she loved him with an ardor that had enough of barbarism in it to make it exceedingly warm and strong. This love affair moved on happily for many months, until one day the king happened to discover its existence. He did not hesitate nor waver in regard to his duty in the premises. The youth was immediately cast into prison, and a day was appointed for his trial in the king's arena. This, of course, was an especially important occasion; and his majesty, as well as all the people, was greatly interested in the workings and development of this trial. Never before had such a case occurred; never before had a subject dared to love the daughter of a king. In after - years such things became commonplace enough; but then they were, in no slight degree, novel and startling. The tiger - cages of the kingdom were searched for the most savage and relentless beasts, from which the fiercest monster might be selected for the arena; and the ranks of maiden youth and beauty throughout the land were carefully surveyed by competent judges, in order that he, young man, might have a fitting bride in case fate did not determine for him a different destiny. Of course, everybody knew that the deed with which the accused was charged had been done. He had loved the princess, and neither he, she, nor any one else thought of denying the fact; but the king would not think of allowing any fact of this kind to interfere with the workings of the tribunal, in which he took such great delight and satisfaction. No matter how the affair turned out, the youth would be disposed of; and the king would take an aesthetic pleasure in watching the course of events, which would determine whether or not the young man had done wrong in allowing himself to love the princess. The appointed day arrived. From far and near the people gathered, and thronged the great galleries of the arena; and crowds, unable to gain admittance, massed themselves against its outside walls. The king and his court were in their places, opposite the twin doors, --those fateful portals, so terrible in their similarity. All was ready. The signal was given. A door beneath the royal party opened, and the lover of the princess walked into the arena. Tall, beautiful, fair, his appearance was greeted with a low hum of admiration and anxiety. Half the audience had not known so grand a youth had lived among them. No wonder the princess loved him! What a terrible thing for him to be there! As the youth advanced into the arena, he turned, as the custom was, to bow to the king: but he did not think at all of that royal personage; his eyes were fixed upon the princess, who sat to the right of her father. Had it not been for the moiety of barbarism in her nature, it is probable that lady would not have been there; but her intense and fervid soul would not allow her to be absent on an occasion in which she was so terribly interested. From the moment that the decree had gone forth, that her lover should decide his fate in the king's arena, she had thought of nothing, night or day, but this great event and the various subjects connected with it. Possessed of more power, influence, and force of character than any one who had ever before been interested in such a case, she had done what no other person had done,--she had possessed herself of the secret of the doors. She knew in which of the two rooms, that lay behind those doors, stood the cage of the tiger, with its open front, and in which waited the lady. Through these thick doors, heavily curtained with skins on the inside, it was impossible that any noise or suggestion should come from within to the person who should approach to raise the latch of one of them; but gold, and the power of a woman's will, had brought the secret to the princess. And not only did she know in which room stood the lady ready to emerge, all blushing and radiant, should her door be opened, but she knew who the lady was. It was one of tile fairest and loveliest of the damsels of the court who had been selected as the reward of the accused youth, should he be proved innocent of the crime of aspiring to one so far above him; and the princess hated her. Often had she seen, or imagined that she had seen, this fair creature throwing glances of admiration upon the person of her lover, and sometimes she thought these glances were perceived and even returned. Now and then she had seen them talking together; it was but for a moment or two, but much can be said in a brief space; it may have been on most unimportant topics, but how could she know that? The girl was lovely, but she had dared to raise her eyes to the loved one of the princess; and, with all the intensity of the savage blood transmitted to her through long lines of wholly barbaric ancestors, she hated the woman who blushed and trembled behind that silent door. When her lover turned and looked at her, and his eye met hers as she sat there paler and whiter than any one in the vast ocean of anxious faces about her, he saw, by that power of quick perception which is given to those whose souls are one, that she knew behind which door crouched the tiger, and behind which stood the lady. He had expected her to know it. He understood her nature, and his soul was assured that she would never rest until she had made plain to herself this thing, hidden to all other lookers - on, even to the king. The only hope for the youth in which there was any element of certainty was based upon the success of the princess in discovering this mystery; and the moment he looked upon her, he saw she had succeeded, as in his soul he knew she would succeed. Then it was that his quick and anxious glance asked the question: 'Which?' It was as plain to her as if he shouted it from where he stood. There was not an instant to be lost. The question was asked in a Rash; it must be answered in another. Her right arm lay on the cushioned parapet before her. She raised her hand, and made a slight, quick movement toward the right. No one but her lover saw her. Every eye but his was fixed on the man in the arena. He turned, and, with a firm and rapid step he walked across the empty space. Every heart stopped beating, every breath was held, every eye was fixed immovably upon that man. Without the slightest hesitation, he went to the door on the right, and opened it. Now, the point of the story is this: Did the tiger come out of that door, or did the lady? The more we reflect upon this question, the harder it is to answer. It involves a study of the human heart which leads us through devious mazes of passion, out of which it is difficult to find our way. Think of it, fair reader, not as if the decision of the question depended upon yourself, but upon that hot - blooded, semi - barbaric princess, her soul at a white heat beneath the combined fires of despair and jealousy. She had lost him, but who should have him? How often, in her waking hours and in her dreams, had she started in wild horror, and covered her face with her hands, as she thought of her lover opening the door on the other side of which waited the cruel fangs of the tiger! But how much oftener had she seen him at the other door! How in her grievous reveries had she gnashed her teeth, and torn her hair, when she saw his start of rapturous delight as he opened the door of the lady! How her soul had burned in agony when she had seen him rush to meet that woman, with her flushing cheek and sparkling eve of triumph; when she had seen him lead her forth, his whole frame kindled with the joy of recovered life; when she had heard the glad shouts from the multitude, and the wild ringing of the happy bells; when she had seen the priest, with his joyous followers, advance to the couple, and make them man and wife before her very eyes; and when she had seen them walk away together upon their path of flowers, followed by the tremendous shouts of the hilarious multitude, in which her one despairing shriek was lost and drowned! Would it not be better for him to die at once, and go to wait for her in the blessed regions of semi - barbaric futurity? And yet, that awful tiger, those shrieks, that blood! Her decision had been indicated in an instant, but it had been made after days and nights of anguished deliberation. She had known she would be asked, she had decided what she would answer, and, without the slightest hesitation, she had moved her hand to the right. The question of her decision is one not to be lightly considered, and it is not for me to presume to set myself up as the one person able to answer it. And so I leave it with all of you: Which came out of the opened door, --the lady, or the tiger?\"\n\n\nconst model = generateModel(dark_stormy_night + little_match_girl + night_came_slowly + lady_or_tiger);\nconst output_text = generateText(\"night.\", model);\n\ndocument.body.innerHTML = \"It was a dark and stormy \" + output_text;\n// console.log(output_text);\n\nfunction generateModel(input_text) {\n    const words = input_text.split(\" \");\n    const model = {};\n\n    // loop through all the words except the last one.\n    for (let i = 0; i < words.length - 1; i++) {\n        const target_word = words[i];\n        const next_word = words[i + 1];\n\n        // if the model doesn't contain the target word, add it.\n        if (!model[target_word]) {\n            model[target_word] = [];\n        }\n\n        // add the next word to the possibilities for target_word\n        model[target_word].push(next_word);\n    }\n\n    return model;\n}\n\n\nfunction generateText(first_word, model) {\n    // start with the word passed in\n    let output_text = first_word;\n    let current_word = first_word;\n    for (let i = 0; i < 120; i++) {\n        // choose the next word by sampling from options in the model\n        current_word = sample(model[current_word]);\n\n        // append word to output\n        output_text += \" \";\n        output_text += current_word;\n\n        // if we get to a word that ends with \".\" we are done.\n        const last_character = current_word.substr(current_word.length - 1);\n        if (last_character === \".\") {\n            break;\n        }\n    }\n    return output_text;\n}\n\nfunction sample(array) {\n    const index = Math.floor(Math.random() * array.length);\n    return array[index];\n}"
  },
  {
    "_id": "LCc8SZgFhRgB3frdd",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:43:46.116Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jv6uj1olqouvg5attm7f",
        "version": 1552074239,
        "signature": "167684a30649a3ce01a007b7824da8c96ce41362",
        "width": 1152,
        "height": 1728,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T19:43:59Z",
        "tags": [],
        "bytes": 323666,
        "type": "upload",
        "etag": "e9deaaaf31aaa11b823f7277c021090f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552074239/avalanche2019/jv6uj1olqouvg5attm7f.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552074239/avalanche2019/jv6uj1olqouvg5attm7f.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:38:01.881Z" }
      }
    ],
    "title": "",
    "description": "Depth Map"
  },
  {
    "_id": "LCnRiSFaA7YAfiXqc",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T13:04:35.717Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n9jfokn98kfidxvqfqvz",
        "version": 1556888771,
        "signature": "9d1a29802d883cf7ea69b83a53e741b0dadcc4f3",
        "width": 1062,
        "height": 1062,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T13:06:11Z",
        "tags": [],
        "bytes": 1311451,
        "type": "upload",
        "etag": "afcab05b15fab387dc1e3eab1c43fb6b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556888771/avalanche2019/n9jfokn98kfidxvqfqvz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556888771/avalanche2019/n9jfokn98kfidxvqfqvz.png"
      },
      {
        "public_id": "avalanche2019/pbsfypsddzieuu2ejirg",
        "version": 1556888785,
        "signature": "fb371510bcdaa2ecdd41b644125a5fc7e5864f76",
        "width": 1754,
        "height": 1246,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T13:06:25Z",
        "tags": [],
        "bytes": 2414042,
        "type": "upload",
        "etag": "6060ba3e335bb0f155d1f77d505fdb41",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556888785/avalanche2019/pbsfypsddzieuu2ejirg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556888785/avalanche2019/pbsfypsddzieuu2ejirg.png"
      },
      {
        "public_id": "avalanche2019/cs0ztcqt2bhw6a0tgkhu",
        "version": 1556888818,
        "signature": "b7baaceca3f02385e27ab6d4c5461ac5dd2c49dd",
        "width": 1186,
        "height": 1146,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T13:06:58Z",
        "tags": [],
        "bytes": 77917,
        "type": "upload",
        "etag": "1a6a24da2eff8cd7d4eb65e5a1bc073a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556888818/avalanche2019/cs0ztcqt2bhw6a0tgkhu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556888818/avalanche2019/cs0ztcqt2bhw6a0tgkhu.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "creating UV map for texturing"
  },
  {
    "_id": "LDDBrCmtnzGxd37r2",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T17:28:19.507Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/o2qml4lwo1bnh2akybem",
        "version": 1555003704,
        "signature": "f1d377ea3048fa5ee11a6350949958956ea4a6bc",
        "width": 2838,
        "height": 604,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T17:28:24Z",
        "tags": [],
        "bytes": 92161,
        "type": "upload",
        "etag": "7fa0fffa674719e17fc581932933afd4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555003704/avalanche2019/o2qml4lwo1bnh2akybem.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555003704/avalanche2019/o2qml4lwo1bnh2akybem.png"
      },
      {
        "public_id": "avalanche2019/cx3kntjgk3ip9ygome6l",
        "version": 1555003712,
        "signature": "a4b8b41b9a2c6cbf302332a07ce7b41e453b7db4",
        "width": 2834,
        "height": 598,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T17:28:32Z",
        "tags": [],
        "bytes": 89487,
        "type": "upload",
        "etag": "7113c8f6d65556e87a9775d3f3d631a3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555003712/avalanche2019/cx3kntjgk3ip9ygome6l.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555003712/avalanche2019/cx3kntjgk3ip9ygome6l.png"
      },
      {
        "public_id": "avalanche2019/pcfr4sjumos65rnmongc",
        "version": 1555003718,
        "signature": "c4e079134706ff3d3eb8d0061739ece567b52f7e",
        "width": 2874,
        "height": 548,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T17:28:38Z",
        "tags": [],
        "bytes": 95614,
        "type": "upload",
        "etag": "ebb8c7dcd01da9ec52d74b5d7f0034ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555003718/avalanche2019/pcfr4sjumos65rnmongc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555003718/avalanche2019/pcfr4sjumos65rnmongc.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Took yesterday's kanye tweet sketch and incorporated another mixer: Alan Watts quotes. You can decide how much Watts vs Kanye to incorporate into the markov chain. \n\nTo try it out, go to my github and download the sketch:  https://github.com/Nedelstein/CompForm/tree/master/wk10_sk04",
    "inspiration_name": "Markov Mixer",
    "inspiration_url": "https://github.com/shiffman/A2Z-F16/tree/gh-pages/week7-markov/05_markov_mixer",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/addons/p5.dom.js\n\nlet lines;\nlet markov;\nlet output;\n\nlet slider;\n\nfunction preload() {\n  linesA = loadStrings(\"watts.txt\");\n  linesB = loadStrings(\"kanye.txt\");\n}\n\nArray.prototype.choice = function() {\n  let i = floor(random(this.length));\n  return this[i];\n};\n\nfunction setup() {\n  noCanvas();\n  let button = select(\"#button\");\n  button.mousePressed(generate);\n\n  output = select(\"#output\");\n\n  slider = select(\"#slider\");\n}\n\nfunction MarkovGenerator(n, max) {\n  this.n = n;\n  this.max = max;\n  this.ngrams = {};\n\n  this.beginnings = [];\n\n  this.feed = function(text) {\n    if (text.length < this.n) {\n      return false;\n    }\n\n    let beginning = text.substring(0, this.n);\n    this.beginnings.push(beginning);\n\n    for (let i = 0; i < text.length - this.n; i++) {\n      let gram = text.substring(i, i + this.n);\n      let next = text.charAt(i + this.n);\n\n      if (!this.ngrams.hasOwnProperty(gram)) {\n        this.ngrams[gram] = [];\n      }\n      this.ngrams[gram].push(next);\n    }\n  };\n  this.generate = function() {\n    let current = this.beginnings.choice();\n    output = current;\n\n    for (let i = 0; i < this.max; i++) {\n      if (this.ngrams.hasOwnProperty(current)) {\n        let possible_next = this.ngrams[current];\n\n        let next = possible_next.choice();\n        output += next;\n\n        current = output.substring(output.length - this.n, output.length);\n      } else {\n        break;\n      }\n    }\n    return output;\n  };\n}\n\nfunction generate() {\n  markov = new MarkovGenerator(5, 200);\n\n  let repeat = floor(slider.value() / 10);\n\n  let totalA = 10 - repeat;\n  let totalB = repeat;\n\n  for (let n = 0; n < totalA; n++) {\n    for (let i = 0; i < linesA.length; i++) {\n      markov.feed(linesA[i]);\n    }\n  }\n  for (let n = 0; n < totalB; n++) {\n    for (let i = 0; i < linesB.length; i++) {\n      markov.feed(linesB[i]);\n    }\n  }\n  let generated = markov.generate();\n  document.getElementById(\"output\").innerHTML = generated;\n  // output.html(generated);\n}"
  },
  {
    "_id": "LDyySJpfFRThtRmaA",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T08:10:20.602Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/apbkwibboykr90cawkdk",
        "version": 1550218225,
        "signature": "3393b6b9db5b9862c6f47967cdfa89de8474f365",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T08:10:25Z",
        "tags": [],
        "bytes": 247754,
        "type": "upload",
        "etag": "1e7d65692a2915b2d407d28b41794a59",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550218225/avalanche2019/apbkwibboykr90cawkdk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550218225/avalanche2019/apbkwibboykr90cawkdk.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Gradient",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\nfunction setup(){\ncreateCanvas(500,500);\nbackground(0);\nnoFill();\n   createP('Color');\n  color_slider = createSlider(0, 255, 10);\n\ncolorMode(RGB,255);\n  \n}\nfunction draw(){\nfor(var j=0; j<256; j++){\n  for (var i=0; i<256; i++){\n    var x = map(i, 0, 256, 0, width);\n    var y = map(j, 0, 256, 0, height);\n    var color = color_slider.value();\n    stroke(i,color,j);\n    strokeWeight(5);\n    point(x,y);\n  }\n}\n  }"
  },
  {
    "_id": "LLKnqatd8i3nou4FA",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T18:01:49.893Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e5vt2ugwd4czcewenhka",
        "version": 1556906519,
        "signature": "36dd4658582208151a2c83f548158df8c6a7e42a",
        "width": 348,
        "height": 404,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T18:01:59Z",
        "tags": [],
        "bytes": 51289,
        "type": "upload",
        "etag": "39d97ff44f36df553b21c384a3b3cf16",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556906519/avalanche2019/e5vt2ugwd4czcewenhka.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556906519/avalanche2019/e5vt2ugwd4czcewenhka.png"
      },
      {
        "public_id": "avalanche2019/fkod4uad7ekkafygkdqm",
        "version": 1556906528,
        "signature": "af03fb79a94b785e43671ee6bbded8336e8adec4",
        "width": 386,
        "height": 432,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T18:02:08Z",
        "tags": [],
        "bytes": 30332,
        "type": "upload",
        "etag": "9c8acdf496d92a4acb85614e45c864be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556906528/avalanche2019/fkod4uad7ekkafygkdqm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556906528/avalanche2019/fkod4uad7ekkafygkdqm.png"
      },
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "LQWWAdW7MTDBtyATm",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T13:02:17.59Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ciaijn661dbgwl7fnl4j",
        "version": 1553864597,
        "signature": "634ce3dd3d9775b69180687c4892aefde53b4df8",
        "width": 2034,
        "height": 1484,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T13:03:17Z",
        "tags": [],
        "bytes": 96921,
        "type": "upload",
        "etag": "0f042171021aaa073296c69c6332c2ee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864597/avalanche2019/ciaijn661dbgwl7fnl4j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864597/avalanche2019/ciaijn661dbgwl7fnl4j.png"
      },
      {
        "public_id": "avalanche2019/bv6ufexj1v23rn00zki1",
        "version": 1553864600,
        "signature": "f22440342c52ed1bf4e816f40d73e665de7c71b6",
        "width": 2082,
        "height": 1508,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T13:03:20Z",
        "tags": [],
        "bytes": 100216,
        "type": "upload",
        "etag": "895a94f13561763fa8923543f3ba8169",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864600/avalanche2019/bv6ufexj1v23rn00zki1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864600/avalanche2019/bv6ufexj1v23rn00zki1.png"
      },
      {
        "public_id": "avalanche2019/hraq7fk8flgkccidab6l",
        "version": 1553864603,
        "signature": "c4ae4671794853fdaca2ccca5b909a6348ec1cc6",
        "width": 2072,
        "height": 1504,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T13:03:23Z",
        "tags": [],
        "bytes": 102149,
        "type": "upload",
        "etag": "e59b461db159e50504653cd7c5263b9c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864603/avalanche2019/hraq7fk8flgkccidab6l.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864603/avalanche2019/hraq7fk8flgkccidab6l.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Some simple blobs made to get used to paper js"
  },
  {
    "_id": "LXntHrND7nRJD5pdW",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:05:44.523Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/osdi9kezpbfdcjzhyzof",
        "version": 1554483962,
        "signature": "c545785ed03e3798c0083cbec9d6ce0ed10632d5",
        "width": 1564,
        "height": 1526,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-05T17:06:02Z",
        "tags": [],
        "bytes": 337242,
        "type": "upload",
        "etag": "d44b1251da9293693283434f96f77bbe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554483962/avalanche2019/osdi9kezpbfdcjzhyzof.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554483962/avalanche2019/osdi9kezpbfdcjzhyzof.jpg"
      },
      {
        "public_id": "avalanche2019/nmswkqwzn1pvirravptd",
        "version": 1554484123,
        "signature": "751cca6f404fea9bf9294d50c28dba48690faef4",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T17:08:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 3145196,
        "type": "upload",
        "etag": "b228a718730ddea7238bf8eef2531d97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554484123/avalanche2019/nmswkqwzn1pvirravptd.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554484123/avalanche2019/nmswkqwzn1pvirravptd.mp4",
        "audio": {
          "codec": "mp3",
          "bit_rate": "384000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "1024615",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1414843,
        "duration": 17.773,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Experimenting with strong compression of fine lines.  \n_The fine lines wouldn’t work with the 20mb limit, but works in the browser, see code_",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar EXPORT = false;\nvar cycleNumberOfFrames = 90;\nvar maxNumberOfFrames = 540;\n\nconst canvas = {w: 800, h: 800};\nfunction setup() {\n  createCanvas(canvas.w, canvas.h, WEBGL);\n  angleMode(DEGREES);\n  frameRate(30)\n}\n\nfunction draw() {\n  background(0);\n\n\n  // window.s = sin(frameCount / numberOfFrames * 180) * 0.5;\n  // var s2 = sin(frameCount / numberOfFrames * 360) * 0.5;\n  // var s3 = sin(frameCount / numberOfFrames * 540) * 0.5;\n  let locX = sin(frameCount / cycleNumberOfFrames * 360)*height - height / 2;\n  let locY = cos(frameCount / cycleNumberOfFrames * 180)*width - width / 2;\n\n\n  ambientLight(230)\n\n  push();\n  // rotateZ(frameCount * 0.1);\n  // rotateX(frameCount * 0.01);\n  // rotateY(frameCount * 0.01);\n  noStroke();\n  // noFill();\n  // fill(0, 45)\n  for (let index = 0; index < 800; index++) {\n    specularMaterial(255, index*0.1);\n    torus(index*1, 0.1, 24, 8);\n    maxRotation = sin(frameCount / 600 * 90)*0.0125\n    rotation = sin((sin(frameCount / cycleNumberOfFrames * 90)+0)*180)*maxRotation\n    transposition = index*cos(frameCount)*0.00001\n    weight1 = cos(frameCount / cycleNumberOfFrames * 60)*3\n    weight2 = sin(frameCount / cycleNumberOfFrames * 270)*4\n    weight3 = cos(frameCount / cycleNumberOfFrames * 540)*2\n    rotateX(rotation+transposition*weight3);\n    rotateY(rotation+transposition*weight2);\n    rotateZ(rotation+transposition*weight1);\n    // rotateY(cos(frameCount * 0.1)+sin(index*frameCount*0.1));\n    // rotateX(frameCount * 0.01+index);\n    // rotateY(frameCount * 0.01+index);\n    \n  }\n  \n  pop();\n  \n  \n\n\n\n\n  if (EXPORT) {\n      saveFrame(\"EXPORT\", frameCount, \"jpg\", maxNumberOfFrames);\n  }\n  if (frameCount > maxNumberOfFrames) {\n      noLoop();\n  }\n\n}\n\n\n\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n      return;\n  }\n\n  if (!extension) {\n      extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "LYMjetCZkc5ovYdcu",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T15:15:02.558Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/p9lp2hxpjjgzg2qcyo6q",
        "version": 1555687088,
        "signature": "f6ae2b059371bd072b7e6ddec798a4dcacd5aa37",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T15:18:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 405515,
        "type": "upload",
        "etag": "454f13da1b87648ce843e4292922dfa0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555687088/avalanche2019/p9lp2hxpjjgzg2qcyo6q.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555687088/avalanche2019/p9lp2hxpjjgzg2qcyo6q.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "245101",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "72174",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 328467,
        "duration": 9.876533,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "add sounds to the bouncing ball sketch from class",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.dom.min.js\n\nlet x;\nlet y;\nlet dX;\nlet dY;\nlet playing = false;\n\nfunction preload() {\n  one = loadSound('drum.mp3');\n  two = loadSound('beatbox.mp3');\n  three = loadSound('BD.mp3');\n  four = loadSound('studio-b.mp3');\n}\n\n\nfunction setup() {\n  createCanvas(900, 500);\n  fill(255);\n  noStroke();\n\n  x = 200;\n  y = 100;\n  dX = 20;\n  dY = 20;\n    \n const startButton = createButton('play');\n  startButton.mousePressed(start);\n\n  const stopButton = createButton('stop');\n  stopButton.mousePressed(stop);\n}\nfunction start() {\n  playing = true;\n}\n\nfunction stop() {\n  playing = false;\n}\nfunction draw() {\n  background(50);\n  x += dX;\n  y += dY;\n\n  if (x > 895) {\n    dX = -abs(dX);\n  }\n  if (y > 495) {\n    dY = -abs(dY);\n  }\n  if (x < 5) {\n    dX = abs(dX);\n  }\n  if (y < 5) {\n    dY = abs(dY);\n  }\n    \n    \n\n    \nif (y===0){\n    one.play();\n}\n    \n    if (y===500){\n    two.play();\n}\n    \n    if (x===900){\n    four.play();\n}\n    \n        if (x===0){\n    three.play();\n}\n    \n\n    \n        \n \n  ellipse(x, y, 10, 10);\n    \n    \n\n}"
  },
  {
    "_id": "LYpusNKqAwqAMRhud",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:28:11.429Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nkhnc0le0ellbylmpbyq",
        "version": 1548529319,
        "signature": "abb174e8881116b95e957826523bd9634816cb88",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-26T19:01:59Z",
        "tags": [],
        "bytes": 2498045,
        "type": "upload",
        "etag": "e8e78639b4e096d93e1c42ded73a9839",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548529319/avalanche2019/nkhnc0le0ellbylmpbyq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548529319/avalanche2019/nkhnc0le0ellbylmpbyq.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "LYxPCkdi5kc9bgQZP",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-03T22:39:32.137Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/plavxatighxss21cw52k",
        "version": 1551652978,
        "signature": "487b061ee09bd2fdef80f97590e0925324795acf",
        "width": 636,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-03T22:42:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 12401714,
        "type": "upload",
        "etag": "b5979706930a9a6a49b006555b113a16",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551652978/avalanche2019/plavxatighxss21cw52k.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551652978/avalanche2019/plavxatighxss21cw52k.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "11408855",
          "dar": "53:60"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11425763,
        "duration": 8.683333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with pixel color manipulation and skipping x number of pixels.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n//require http://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nlet bNoise = 0;\nlet indexMultiplerSetup;\n\nfunction setup() {\n  createCanvas(600, 600);\n  pixelDensity(1);\n  frameRate(30);\n\n  createP(\"Index Multiplier\");\n  indexMultiplerSetup = createSlider(0, 30, 9);\n}\n\nfunction draw() {\n  background(0);\n  loadPixels();\n  let indexMultiplier = indexMultiplerSetup.value();\n  // let sec = second();\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let index = (x + y * width) * 4;\n      index *= indexMultiplier;\n\n      pixels[index] = map(mouseX, 0, width, 0, 255) + y / 2;\n      pixels[index + 1] = map(mouseX, width, 0, 0, 255) * random(10);\n      pixels[index + 2] = map(mouseY, 0, height, 0, 255) + x / 2;\n      pixels[index + 3] = 255;\n    }\n  }\n  updatePixels();\n  console.log(indexMultiplier);\n}"
  },
  {
    "_id": "LaJhmgPWt2yvFQt7j",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-17T22:54:40.046Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ptqpyxaxl9hd6jkpam8x",
        "version": 1555541970,
        "signature": "f404ee2f5a1ec760a6bec6f47ce9d05070d0a498",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-17T22:59:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 14133989,
        "type": "upload",
        "etag": "5b14188b8c9b6851cee0e84dabe59b10",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555541970/avalanche2019/ptqpyxaxl9hd6jkpam8x.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555541970/avalanche2019/ptqpyxaxl9hd6jkpam8x.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "254192",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "7028664",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 7342936,
        "duration": 15.398729,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-04-18T03:34:50.665Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-19T03:01:31.284Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-04-19T03:58:17.198Z" }
      }
    ],
    "title": "",
    "description": "Feel my might! An all-vocal foley trailer for the game Diablo. I stripped the audio from the original trailer and re-recorded making all the audio vocally."
  },
  {
    "_id": "LaRjAvnWoyKYgYPSK",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T16:24:23.316Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hw8dymffjaoomwr2esle",
        "version": 1557505491,
        "signature": "0d12c037cce0658c36fceac19aa26ee243830984",
        "width": 2484,
        "height": 1346,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T16:24:51Z",
        "tags": [],
        "bytes": 586546,
        "type": "upload",
        "etag": "cf65892c8bc15b4a81902faf201f6079",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557505491/avalanche2019/hw8dymffjaoomwr2esle.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557505491/avalanche2019/hw8dymffjaoomwr2esle.png"
      },
      {
        "public_id": "avalanche2019/jwbr0pch8wbqxpgzd5d7",
        "version": 1557505504,
        "signature": "51816c0fe5979bcd9b8fecda6ae8f0c3ca2105dd",
        "width": 2540,
        "height": 1352,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T16:25:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 2360342,
        "type": "upload",
        "etag": "b6325aecd467cd59ef37eb21779960c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557505504/avalanche2019/jwbr0pch8wbqxpgzd5d7.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557505504/avalanche2019/jwbr0pch8wbqxpgzd5d7.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "272552",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "3458455",
          "dar": "635:338"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3714636,
        "duration": 5.083333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Ducks are flying !"
  },
  {
    "_id": "LcEkcXhFdfQkYmCAr",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T19:30:25.44Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/b7zya8ynebi1ikbxpnsz",
        "version": 1556825431,
        "signature": "c6c9b8ee625c998176ff75fdeae96b4117b66e84",
        "width": 1186,
        "height": 778,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:30:31Z",
        "tags": [],
        "bytes": 160123,
        "type": "upload",
        "etag": "c0d0833a035e6e640d1e584aff818f50",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825431/avalanche2019/b7zya8ynebi1ikbxpnsz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825431/avalanche2019/b7zya8ynebi1ikbxpnsz.png"
      },
      {
        "public_id": "avalanche2019/xks0zp8zhrivduqt59z7",
        "version": 1556825440,
        "signature": "8c6f74c1e55671673d1fccb308d452b56bff9318",
        "width": 1952,
        "height": 1068,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:30:40Z",
        "tags": [],
        "bytes": 138218,
        "type": "upload",
        "etag": "99613fd193d7d35cd2f63b67117a0dc0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825440/avalanche2019/xks0zp8zhrivduqt59z7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825440/avalanche2019/xks0zp8zhrivduqt59z7.png"
      },
      {
        "public_id": "avalanche2019/oqlptckzikdnao6qn15c",
        "version": 1556825445,
        "signature": "a4b8584d9769b01b628443ef325a81daa31b50fe",
        "width": 1030,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:30:45Z",
        "tags": [],
        "bytes": 117738,
        "type": "upload",
        "etag": "947e659719b60b275fc9d8b004849f11",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825445/avalanche2019/oqlptckzikdnao6qn15c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825445/avalanche2019/oqlptckzikdnao6qn15c.png"
      }
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T23:26:10.493Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:21:48.212Z" }
      }
    ],
    "title": "",
    "description": "Modeled a butterfly, took more time than expected. Working on texturing now. Made using Maya."
  },
  {
    "_id": "LkvTwx5uuGexs4zk3",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-13T18:12:38.377Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lj8fu9o0pwinkv1mccpb",
        "version": 1555179265,
        "signature": "87c8ed222fa697fafe1c459297679b1f9329159d",
        "width": 916,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-13T18:14:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 15659937,
        "type": "upload",
        "etag": "97fc68aa2307f0716068e77bcb6aba85",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555179265/avalanche2019/lj8fu9o0pwinkv1mccpb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555179265/avalanche2019/lj8fu9o0pwinkv1mccpb.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "235533",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6696971",
          "dar": "229:180"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6940692,
        "duration": 18.05,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-15T03:35:15.037Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-04-16T12:29:31.951Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "funny",
        "created_at": { "$date": "2019-04-19T13:30:27.173Z" }
      }
    ],
    "title": "",
    "description": "Bad Bunny Sound Viz with FFT."
  },
  {
    "_id": "LmZBGcqQ99HSwJL8f",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-03T06:15:25.531Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vbgiq3g8qjupyvwt8f3i",
        "version": 1549259206,
        "signature": "65768d4b446d44d4282264b5bcdbe424e4605714",
        "width": 1246,
        "height": 1566,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-04T05:46:46Z",
        "tags": [],
        "bytes": 384164,
        "type": "upload",
        "etag": "5c6f8b240d69b52535bddfa4cd851091",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549259206/avalanche2019/vbgiq3g8qjupyvwt8f3i.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549259206/avalanche2019/vbgiq3g8qjupyvwt8f3i.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-04T17:56:29.862Z" }
      }
    ],
    "title": "",
    "description": "A [page](https://www.google.com/search?rlz=1C5CHFA_enUS807US807&q=anni+albers+notebook&tbm=isch&source=univ&sa=X&ved=2ahUKEwip9pKo9Z7gAhWIUt8KHRdXA0QQsAR6BAgDEAE&biw=1248&bih=798#imgrc=E4n6JhHkK5HS2M:) from [Anni Albers' Notebook](https://www.google.com/search?q=anni+albers+notebook&tbm=isch&source=lnms&sa=X&ved=0ahUKEwjYjbq99p7gAhVpiOAKHehJB2MQ_AUICygC&biw=1440&bih=798&dpr=2), p5.",
    "inspiration_name": "Anni Albers: Notebook",
    "inspiration_url": "https://www.google.com/search?rlz=1C5CHFA_enUS807US807&q=anni+albers+notebook&tbm=isch&source=univ&sa=X&ved=2ahUKEwip9pKo9Z7gAhWIUt8KHRdXA0QQsAR6BAgDEAE&biw=1248&bih=798#imgrc=E4n6JhHkK5HS2M:",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\n/* Use random() to recreate a page out of 'Anni Albers: Notebook'.\n * TODO: Incorporate variation at pixel level using p5 tutorial:\n * https://www.youtube.com/watch?v=nMUMZ5YRxHI\n */\n\nconst canvas_width = 600,\n    num_columns = 38,\n    num_rows = 48,\n    pixels_per_square = 16,\n    canvas_height = num_rows * pixels_per_square;\n\nfunction setup() {\n    createCanvas(canvas_width, canvas_height);\n\tpixelDensity(1);\n\t\n\t// \"Paper\" background\n\tbackground(247, 245, 225);\n\n\t// \"Paper\" grid lines\n    for (y = 0; y < canvas_height; y++) {\n        if (y % pixels_per_square === 0) {\n            strokeWeight(random(.1, .2));\n            stroke(59, 180, 255);\n            line(0, y, canvas_width, y);\n        }\n    }\n    for (x = 0; x < canvas_width; x++) {\n        if (x % pixels_per_square === 0) {\n            strokeWeight(random(.1, .2));\n            stroke(59, 180, 255);\n            line(x, 0, x, canvas_height);\n        }\n    }\n\n\t// \"Pencil\" pattern drawn\n    let inner_grid_start_x = 8 * pixels_per_square;\n    let inner_grid_start_y = 5 * pixels_per_square;\n    let inner_grid_width = 22 * pixels_per_square;\n    let inner_grid_height = 24 * pixels_per_square;\n    for (y = inner_grid_start_y; y < inner_grid_start_y +  inner_grid_height; y += pixels_per_square) {\n        for (x = inner_grid_start_x; x < inner_grid_start_x +  inner_grid_width; x += pixels_per_square) {\n            fill(56, 52, 40, random(90, 135)); // \"Pencil\" color varies in alpha only\n            layTile();\n        }\n    }\n}\n\nfunction layTile() {\n    rand = random();\n    // There are six distinct tile types:\n    // - sauare\n    // - upper right triangle\n    // - upper left triangle\n    // - bottom right triangle\n    // - bottom left triangle\n    // - empty (least likely)\n    if (rand < .18) {\n        // square\n        rect(x, y, pixels_per_square, pixels_per_square);\n    } else if (rand < .18 * 2) {\n        // upper right triangle\n        triangle(\n            x, y,\n            x + pixels_per_square, y,\n            x + pixels_per_square, y + pixels_per_square\n        );\n    } else if (rand < .18 * 3) {\n        // upper left triangle\n        triangle(\n            x, y,\n            x + pixels_per_square, y,\n            x, y + pixels_per_square\n        );\n    } else if (rand < .18 * 4) {\n        // bottom right triangle\n        triangle(\n            x, y + pixels_per_square,\n            x + pixels_per_square, y + pixels_per_square,\n            x + pixels_per_square, y\n        );\n    } else if (rand < .18 * 5) {\n        // bottom left triangle\n        triangle(\n            x, y + pixels_per_square,\n            x + pixels_per_square, y + pixels_per_square,\n            x + pixels_per_square, y\n        );\n    }\n}"
  },
  {
    "_id": "LqYLxGJ3725edvDEm",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T05:50:49.065Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/leluy1qpq8ebd8kvrtwz",
        "version": 1550037073,
        "signature": "4e8241085e7fdcf04a9664e9505bb1b6ecbfeb02",
        "width": 870,
        "height": 744,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-13T05:51:13Z",
        "tags": [],
        "bytes": 39670,
        "type": "upload",
        "etag": "2fb724fd2efce1428957d996c7bbfe2f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550037073/avalanche2019/leluy1qpq8ebd8kvrtwz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550037073/avalanche2019/leluy1qpq8ebd8kvrtwz.jpg"
      },
      {
        "public_id": "avalanche2019/riklbg914wpvfjy10owl",
        "version": 1550037077,
        "signature": "6b57a75ac6c457bbbe54dcb3542067bbf565e1c7",
        "width": 890,
        "height": 747,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-13T05:51:17Z",
        "tags": [],
        "bytes": 47756,
        "type": "upload",
        "etag": "932aea6c84883ba8b4bbebeebfdcb4df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550037077/avalanche2019/riklbg914wpvfjy10owl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550037077/avalanche2019/riklbg914wpvfjy10owl.jpg"
      },
      {
        "public_id": "avalanche2019/ghtvzazkcp4fek9mdqyq",
        "version": 1550037081,
        "signature": "53e84d11dad7bf880bfb7c8f7886282cabc16a9a",
        "width": 822,
        "height": 908,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-13T05:51:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 830999,
        "type": "upload",
        "etag": "d0801886268e482cc10f47887e043cab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550037081/avalanche2019/ghtvzazkcp4fek9mdqyq.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550037081/avalanche2019/ghtvzazkcp4fek9mdqyq.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "129787",
          "dar": "411:454"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 133493,
        "duration": 49.799933,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have used Seriously.js along with p5.js to create live video filters.\nThere are two filters in this project: blur and vignette. The user can turn on the webcam and switch between these filters to manipulate the video in real-time.\n\nThe files use Seriously.js library. So, access all the files for this code from GitHub: https://github.com/akshansh2593/CompForm/tree/master/liveVideoFilters",
    "inspiration_name": "Live Video Filters",
    "inspiration_url": "https://youtu.be/jdKep6jo7b0",
    "code": "// Processing a video in realtime\n// Using Seriously.js with p5.js\n// Inspired by the videos of Daniel Shiffman on YouTube (The Coding Train)\n\n// Idea: apply an effect to the source video to process it\n// Source: video input, target: canvas, effect: anything we want to add\n\n\nvar video; // video input: webcam\nvar seriously, src, target; // variables for using seriously.js\n\nfunction setup() {\n    // setup canvas: target\n    canvas = createCanvas(640, 480, WEBGL);\n    canvas.id('p5canvas');\n    background(51);\n\n    // setup webcam: source\n    video = createCapture(VIDEO);\n    video.size(width, height);\n    video.id('p5video'); // giving an ID to the video to link to seriously\n    video.hide();\n\n    // switch between modes\n    createP(\"To start, press 'a' for blur or 's' for vignette.\");\n\n    // adjust blur\n    createP('Adjust Blur');\n    blurSlider = createSlider(0, 1, 0.5, 0.01);\n    blurSlider.id('blur-slider');\n\n    // adjust vignette strength\n    createP('Adjust Vignette');\n    vignetteSlider = createSlider(0, 100, 50);\n    vignetteSlider.id('vignette-slider');\n\n\n    // Call Seriously function inside the variable: seriously\n    seriously = new Seriously(); // create an object called seriously\n\n    // Source: webcam, target: canvas\n    src = seriously.source('#p5video');\n    target = seriously.target('#p5canvas');\n\n    keyReleased();\n\n    seriously.go();\n\n\n}\n\n// Function to change commands\nfunction keyReleased() {\n    if (key === 'a') {\n        // EFFECT 1: BLUR\n        var blur = seriously.effect('blur');\n        blur.amount = '#blur-slider'; // connect the blur slider to an ID\n        blur.source = src; // telling src to go into blur\n        target.source = blur; // telling blur to go inside target\n    } else if (key === 's') {\n        // EFFECT 2: VIGNETTE\n        var vignette = seriously.effect('vignette');\n        vignette.amount = '#vignette-slider';\n        vignette.source = src;\n        target.source = vignette;\n    }\n}"
  },
  {
    "_id": "LtSZ9mR7jJCkaoZv6",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-01-28T04:28:59.129Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j6pvpmpfvn28rmar1x9z",
        "version": 1548650484,
        "signature": "51ec3806f634a247237df2d6bda8a9c547d974e6",
        "width": 2126,
        "height": 1595,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T04:41:24Z",
        "tags": [],
        "bytes": 3506115,
        "type": "upload",
        "etag": "3c007e3237a9d0223537cb6212319f12",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548650484/avalanche2019/j6pvpmpfvn28rmar1x9z.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548650484/avalanche2019/j6pvpmpfvn28rmar1x9z.jpg"
      },
      {
        "public_id": "avalanche2019/oasvdms1xqbzijsyqlhg",
        "version": 1548650492,
        "signature": "bf8f9defaeb8f371f7be79f82da5379627de656b",
        "width": 1551,
        "height": 953,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T04:41:32Z",
        "tags": [],
        "bytes": 299187,
        "type": "upload",
        "etag": "f3bab87c01d81b112b7f35d6cfa6d44d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548650492/avalanche2019/oasvdms1xqbzijsyqlhg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548650492/avalanche2019/oasvdms1xqbzijsyqlhg.jpg"
      },
      {
        "public_id": "avalanche2019/fgaexbrdg3sq3b30plxl",
        "version": 1548650499,
        "signature": "9300a1488284ae5ed56c86c10cdd9ab4803ea721",
        "width": 1908,
        "height": 1024,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-01-28T04:41:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 2810246,
        "type": "upload",
        "etag": "9ec3e8281cdced2e343bc3b26b924588",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548650499/avalanche2019/fgaexbrdg3sq3b30plxl.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548650499/avalanche2019/fgaexbrdg3sq3b30plxl.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "97733",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1065385",
          "dar": "477:256"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1158156,
        "duration": 19.411859,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:01:22.182Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:01:25.08Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:01:36.803Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:02:28.993Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "These set of tiles are connected via facial expressions. \nI modeled my face and generated an animated character. Then, I created several tiles from my facial expressions and combined them to connect in a pattern.",
    "inspiration_name": "Facial Connection"
  },
  {
    "_id": "LzuKdj77KTn6vorkn",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T02:31:08.409Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/phrsciulgnchqzpiahss",
        "version": 1555641343,
        "signature": "ddf5354bdf7a70d9b87d79001a004f251590017e",
        "width": 2528,
        "height": 1376,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T02:35:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 8470488,
        "type": "upload",
        "etag": "8f65a06714c512547d4bea3777b178ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555641343/avalanche2019/phrsciulgnchqzpiahss.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555641343/avalanche2019/phrsciulgnchqzpiahss.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "314784",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "591811",
          "dar": "79:43"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 922518,
        "duration": 73.455333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qsgr4lrbqfgfpttagnky",
        "version": 1555641354,
        "signature": "20d22bcf65316245d3b7d914239aecbb54cc9953",
        "width": 2550,
        "height": 1366,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T02:35:54Z",
        "tags": [],
        "bytes": 1701735,
        "type": "upload",
        "etag": "4b1d6a87c82bc09c5bebf15536638249",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555641354/avalanche2019/qsgr4lrbqfgfpttagnky.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555641354/avalanche2019/qsgr4lrbqfgfpttagnky.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:40:39.954Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:49:56.331Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:59:26.572Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T03:10:55.481Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T03:19:53.715Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T13:55:55.329Z" }
      }
    ],
    "title": "",
    "description": "Moving the circles on the canvas based on the sound level"
  },
  {
    "_id": "M2CGjvYRWppQu54RS",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T00:10:56.654Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/shpr9szfpopch69cxmec",
        "version": 1550707932,
        "signature": "f2dba3ee76d6efe819b99e6fe0486d8ed67b8766",
        "width": 720,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T00:12:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 15953886,
        "type": "upload",
        "etag": "78528760bb7b5fa30ce9bfdcc245638c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550707932/avalanche2019/shpr9szfpopch69cxmec.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550707932/avalanche2019/shpr9szfpopch69cxmec.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "99430",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2648003",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2756452,
        "duration": 46.302667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:40:34.705Z" }
      }
    ],
    "title": "",
    "description": "attempt to make northern lights using flow field and noise",
    "inspiration_name": "Northern Lights",
    "code": "let inc = 0.01;\nlet scl = 20;\nlet cols, rows;\nlet zOff = 0;\nlet particles = [];\nlet flowField = [];\n\nfunction setup() {\n    createCanvas(600, 600);\n    colorMode(HSB, 255);\n    cols = floor(width / scl);\n    rows = floor(height / scl);\n    flowField = new Array(cols * rows);\n    frameRate(30);\n    for (let i = 0; i < 15; i++) {\n        particles[i] = new Particle();\n    }\n    background(51);\n}\n\nfunction draw() {\n    background(0, 0, 17, 4);\n    var yOff = 0;\n    for (let y = 0; y < rows; y++) {\n        var xOff = 0;\n\n        for (let x = 0; x < cols; x++) {\n            let index = x + y * cols;\n            let angle = noise(xOff, yOff, zOff) * TWO_PI * 1.5;\n            let v = p5.Vector.fromAngle(angle);\n            flowField[index] = v;\n            v.setMag(1);\n            xOff += inc;\n            stroke(0, 50);\n        }\n        yOff += inc;\n        zOff += 0.0003;\n    }\n\n\n\n\n    for (let i = 0; i < particles.length; i++) {\n        particles[i].follow(flowField);\n        particles[i].update();\n        particles[i].edges();\n        particles[i].show();\n\n    }\n\n}\n\nfunction Particle() {\n\n    // let heightRange = (Math.random() + 100) * 5;\n    this.pos = createVector(-10, random(height) - 10);\n    this.vel = createVector(0, 0);\n    this.acc = createVector(0, 0);\n    this.maxSpeed = 2;\n    this.prevPos = this.pos.copy();\n    this.h = 0;\n\n    this.update = function () {\n        this.vel.add(this.acc);\n        this.vel.limit(this.maxSpeed);\n        this.pos.add(this.vel);\n        this.acc.mult(0);\n        this.xOff = 0;\n        this.yOff = 0;\n\n    }\n    this.follow = function (vectors) {\n        let x = floor(this.pos.x / scl);\n        let y = floor(this.pos.y / scl);\n        let index = x + y * cols;\n        let force = vectors[index];\n        this.applyForce(force);\n    }\n    this.applyForce = function (force) {\n        this.acc.add(force);\n    }\n    this.show = function () {\n        // noFill();\n        // fill(80, 255, 255, 90);\n        let a = 35;\n        strokeWeight(3);\n        this.h = this.h + .5;\n        if (this.h > 255) {\n            this.h = 0;\n        }\n        // let n = noise(this.xOff, this.yOff) * 400;\n        let n = (noise(this.pos.x, this.pos.y) + 3) * 90;\n        let drawX1 = this.pos.x;\n        let drawY1 = this.pos.y;\n        let inc = 3;\n        let height = (Math.random() * 100) + 200;\n        for (let i = 0; i < height; i++) {\n            fill(this.h, 240, 240, a);\n            noStroke();\n            ellipse(drawX1, drawY1, 2, 2);\n\n\n            // drawX1 += inc;\n            drawY1 -= inc;\n            a -= .3;\n        }\n\n        //from the position \n\n        // line(this.pos.x, this.pos.y, this.pos.x, this.pos.y - n);\n\n        this.updatePrev();\n        // this.xOff += inc;\n        // this.yOff += inc;\n    }\n    this.updatePrev = function () {\n        this.prevPos.y = this.pos.y;\n        this.prevPos.x = this.pos.x;\n        // background(0, 13, 17, 30);\n    }\n    this.edges = function () {\n        if (this.pos.x > width) {\n            this.pos.x = 0;\n            this.updatePrev();\n        }\n        if (this.pos.x < 0) {\n            this.pos.x = width;\n            this.updatePrev();\n        }\n        if (this.pos.y > height) {\n            this.pos.y = 0;\n            this.updatePrev();\n        }\n        if (this.pos.y < 0) {\n            this.pos.y = height;\n            this.updatePrev();\n        }\n    }\n}"
  },
  {
    "_id": "M8uQzKKJb3sMc8GRb",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "created_at": { "$date": "2019-02-28T01:08:15.371Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/chtn7ejmokxck1is1wnx",
        "version": 1551316103,
        "signature": "51bfaa8fa3a91a0ad7128c1b1bffc929aba8b23d",
        "width": 496,
        "height": 530,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T01:08:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 4090392,
        "type": "upload",
        "etag": "2fcc9dd24e0b441223d9e8a058a42298",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551316103/avalanche2019/chtn7ejmokxck1is1wnx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551316103/avalanche2019/chtn7ejmokxck1is1wnx.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "947791",
          "dar": "248:265"
        },
        "frame_rate": 60,
        "bit_rate": 983168,
        "duration": 33.283333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/gjermhqfs3kvouinwjoc",
        "version": 1551316106,
        "signature": "64d56b357d4d15f77dfb4cbdc7403809c584d909",
        "width": 496,
        "height": 299,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T01:08:26Z",
        "tags": [],
        "bytes": 13906,
        "type": "upload",
        "etag": "c90f1e59589105c7aec09cb09cf7a33e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551316106/avalanche2019/gjermhqfs3kvouinwjoc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551316106/avalanche2019/gjermhqfs3kvouinwjoc.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T20:15:08.425Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T21:27:45.185Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T21:31:27.7Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Playing around with the wobbly, dot, snake to see if I could get that same code base to replicate a calligraphic brush stroke.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n\nlet amplitude_slider, frequency_slider, speed_slider;\nvar noiseFrequency = .002;\nvar startX = 50;\nvar startY = 300;\nvar endX = 450;\nvar endY = 50;\n\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP('Amplitude');\n  amplitude_slider = createSlider(0, 200, 120);\n\n  createP('Frequency');\n  frequency_slider = createSlider(0, .07, .2, .01);\n\n  createP('Time Speed');\n  speed_slider = createSlider(1, 3, .45);\n}\n\n\nfunction draw() {\n  background(0);\n\n  //sets gradient\n  var color1 = color(230);\n  var color2 = color(255);\n  setGradient(0, 0, windowWidth, windowHeight, color1, color2, \"Y\");\n\n  //sets gradient\n  function setGradient(x, y, w, h, c1, c2, axis) {\n    noFill();\n    if (axis == \"Y\") { // Top to bottom gradient\n      for (let i = y; i <= y + h; i++) {\n        var inter = map(i, y, y + h, 0, 1);\n        var c = lerpColor(c1, c2, inter);\n        stroke(c);\n        line(x, i, x + w, i);\n      }\n    } else if (axis == \"X\") { // Left to right gradient\n      for (let j = x; j <= x + w; j++) {\n        var inter2 = map(j, x, x + w, 0, 1);\n        var d = lerpColor(c1, c2, inter2);\n        stroke(d);\n        line(j, y, j, y + h);\n      }\n    }\n\n    ellipseMode(CENTER);\n    noiseDetail(1, .02);\n    fill(0);\n    noStroke();\n\n    let k;\n    for (i = 0; i < 1; i += noiseFrequency) {\n      var x = lerp(startX, endX, i);\n      var y = lerp(startY, endY, i);\n      k = noise(x * frequency_slider.value() + millis() * speed_slider.value() * noiseFrequency / 10);\n      var offsetX = k * amplitude_slider.value();\n      var offsetY = noise(x) * noiseFrequency;\n      ellipse(x + offsetX, y + offsetY, 100, 10);\n    }\n\n  }\n}"
  },
  {
    "_id": "MEHbYapdvpFsThmuj",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-03-01T16:55:18.002Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fvts24cl0uxe5gpy6rys",
        "version": 1551459326,
        "signature": "5f5a4eed44d8326b0f86dfef93976a398c2f5023",
        "width": 806,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T16:55:26Z",
        "tags": [],
        "bytes": 67373,
        "type": "upload",
        "etag": "00c2b4c66697b26a94eb18e95dd05994",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551459326/avalanche2019/fvts24cl0uxe5gpy6rys.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551459326/avalanche2019/fvts24cl0uxe5gpy6rys.png"
      },
      {
        "public_id": "avalanche2019/of8x0ikrlsqqsuwvn2zm",
        "version": 1551459332,
        "signature": "9acc2525e3a9f545b57f20a59782f72c99f3a0c6",
        "width": 798,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T16:55:32Z",
        "tags": [],
        "bytes": 51946,
        "type": "upload",
        "etag": "73fa826c552ea39224f2b28fcb931751",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551459332/avalanche2019/of8x0ikrlsqqsuwvn2zm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551459332/avalanche2019/of8x0ikrlsqqsuwvn2zm.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge i",
    "code": "function setup() {\n    createCanvas(400, 400);\n    colorMode(HSB, 255);\n}\n\n\nfunction draw() {\n    background(0);\n\n    noStroke();\n    ellipseMode(CENTER);\n\n\n    var noiseFrequency = 10;\n\n    for (var i = 0; i < 100; i++) {\n        // these points are not scattered in the same way\n        // how can you make the arrangement match the challenge?\n        // var x = random(width);\n        // var y = random(height);\n    let x = noise(i * noiseFrequency, 0) * width;\n    let y = noise(i * noiseFrequency, 1000) * height;\n        // the diameter shouldn't always be 10, it needs to vary\n        var diameter = random(5,15);\n\n        // the colors also need to change\n        // what colorMode would be easiest to work with?\n        //fill(255, 255, 255)\n        fill(random(255), 255, 255);\n        ellipse(x, y, diameter, diameter);\n    }\n\n\n    noLoop();\n\n\n}"
  },
  {
    "_id": "MJu5tjLhBY35Ee9Gp",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T02:33:52.705Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/p9ekclneyk7qeos5bzmd",
        "version": 1556850889,
        "signature": "4b1816978e90954d7752746035d514e6f6758f6b",
        "width": 2028,
        "height": 1578,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T02:34:49Z",
        "tags": [],
        "bytes": 197744,
        "type": "upload",
        "etag": "7edc11efd9c430092921aa39aed4af3c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556850889/avalanche2019/p9ekclneyk7qeos5bzmd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556850889/avalanche2019/p9ekclneyk7qeos5bzmd.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-05-03T03:17:37.099Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-05-03T14:30:53.64Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T16:36:53.157Z" }
      }
    ],
    "title": "",
    "description": "Just a facade.",
    "code": "// Floor\ncolor (\"DarkOliveGreen\") {\n    square([200000,200000],true);\n}\n\n// Sky\n//color (\"LightCyan\") {\n//    sphere(9000);\n//}\n\n\n// A tree\ntree_height = 30;\n\n// radius\nradius_ring = 20;\n\n$fn = 12;\n\nmodule cloud () {\n    translate([0,0,0]) sphere(200);\n    translate([200,10,20]) sphere(150);\n    translate([100,40,-20]) sphere(180);\n    translate([-140,40,-60]) sphere(120);\n    translate([0,120,-80]) sphere(80);\n    translate([60,-120,-80]) sphere(80);\n    translate([280,40,-100]) sphere(100);\n    translate([60,80,80]) sphere(120);\n}\n\ncolor(\"White\") { \n    translate([900,7000,500]) cloud();\n    translate([3000,8500,900]) rotate([0,0,-40]) cloud();\n    translate([1900,3000,700]) rotate([0,0,180]) cloud();\n\n}\n\n//\nmodule tree () {\n    color(\"BurlyWood\")  {\n        cylinder(h=tree_height, r1=4, r2=3, center=false, $fn = 5);\n    }\n    color(\"ForestGreen\")  {\n        translate([0,0,tree_height]) sphere(d = 30, $fn = 5);\n    }\n}\n\n// A group of trees\nmodule tree_group () {\n    random_number_of_trees = rands(2,5,1)[0];\n    for (r = [0:random_number_of_trees]) {\n        translate([rands(-40,40,1)[0],rands(-40,40,1)[0],0]) tree();\n    }\n}\n\n// A small garden of trees\n\nmodule tree_group_scatter () {\n    random_number_of_tree_groups = rands(8,10,1)[0];\n    for (r = [0:random_number_of_tree_groups]) {\n        random_rotation=rands(0,360,1)[0];\n        rotate([0,0,random_rotation]) translate([radius_ring+rands(50,400,1)[0],radius_ring+rands(50,400,1)[0],0]) tree_group();\n    }\n}\n\n translate([0,radius_ring+100,0]) \n\ntree_group_scatter();\n\n// An arc\n\n//arc_width=4;\n//arc_height=8;\n\nmodule arc (arc_width, arc_height, arc_depth, include_arc) {\n    union() {\n        cube([arc_depth,,arc_width,arc_height],false);\n        if (include_arc==true) translate([0,arc_width/2,arc_height]) rotate([0,90,0]) cylinder(h=arc_depth,, d=arc_width, center=false);\n    }\n}\n\n// A building block\n\n//block_width=12;\n//block_height=12;\n//block_depth=10;\n\nmodule block (arc_width, block_width, block_height, block_depth) {\n     cube([block_depth,block_width,block_height],false);\n}\n\n\nmodule arc_block (arc_width, arc_height, arc_depth, block_width, block_height, block_depth, include_arc, y_offset) {\n    difference() {\n        block(arc_width, block_width, block_height, block_depth);\n        translate([0,0.5*(block_width-arc_width),y_offset]) translate([-0.25*arc_depth,0,-0.1]) arc(arc_width, arc_height, arc_depth, include_arc);\n    }\n}\n\n//arc_block();\n\n// first floor\n\n//number_of_blocks=20;\n\nmodule floor(arc_width, arc_height, arc_depth, block_width, block_height, block_depth, number_of_blocks, include_arc, y_offset) {\n    for (r = [0:number_of_blocks]) {\n        // arc block\n//        translate([0,-0.5*number_of_blocks*block_width,0]) // center\n        translate([0,block_width*r,0]) arc_block(arc_width, arc_height, arc_depth, block_width, block_height, block_depth, include_arc, y_offset);\n        // arc stair\n//        translate([0,-0.5*number_of_blocks*block_width,0]) // center\n        translate([-3,block_width*r,0]) cube([7, block_width, 3], false);\n    }\n}\n\nmodule wall() {\n    floor(arc_width=15, arc_height=20, arc_depth=6, block_width=20, block_height=36, block_depth=3, number_of_blocks=20, include_arc=true, y_offset=0);\n\n    translate([0,0,36]) floor(arc_width=6, arc_height=20, arc_depth=6, block_width=20, block_height=30, block_depth=3, number_of_blocks=20, include_arc=true, y_offset=0);\n\n    translate([0,0,66]) floor(arc_width=8, arc_height=16, arc_depth=6, block_width=20, block_height=30, block_depth=3, number_of_blocks=20, include_arc=false, y_offset=8);\n}\n\ncolor(\"Wheat\") {\n    wall();\n    rotate ([0,0,-90]) wall();\n    translate([30*14,0,0]) wall();\n    translate([0,30*14,0]) rotate ([0,0,-90]) wall();\n\n//    translate([2,0,0])cube([30*13.99,30*13.99,96]);\n}"
  },
  {
    "_id": "MNWo5cmmji3gqib4N",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T15:31:05.643Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g7zozm8ssown0o5crrif",
        "version": 1554391871,
        "signature": "8c5ef2ecd0dc0e74df81da00580c54c268002c8d",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-04T15:31:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 977859,
        "type": "upload",
        "etag": "22fab1124a1897ed57dbb8b3e4efa3c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554391871/avalanche2019/g7zozm8ssown0o5crrif.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554391871/avalanche2019/g7zozm8ssown0o5crrif.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "253375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "High",
          "bit_rate": "3608732",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 3911436,
        "duration": 2,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Using noise and some PS filters to get started with animation"
  },
  {
    "_id": "MRAPvXxa8vCSbpjXE",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-08T23:51:42.528Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/o28zh55cabpje1vn0scw",
        "version": 1554768971,
        "signature": "7d960288d5d5659ef6b8a58d432752a355173745",
        "width": 816,
        "height": 181,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T00:16:11Z",
        "tags": [],
        "bytes": 85567,
        "type": "upload",
        "etag": "de4b051986234b28ccc55ad0137a319b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554768971/avalanche2019/o28zh55cabpje1vn0scw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554768971/avalanche2019/o28zh55cabpje1vn0scw.png"
      },
      {
        "public_id": "avalanche2019/pd2xukniqg60gdwhfens",
        "version": 1554768975,
        "signature": "9c2659145d0a3313d3ccb07d1640fbf25f0b9320",
        "width": 791,
        "height": 335,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T00:16:15Z",
        "tags": [],
        "bytes": 15763,
        "type": "upload",
        "etag": "afc4c732d2aec751f4180aa2cd444ff9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554768975/avalanche2019/pd2xukniqg60gdwhfens.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554768975/avalanche2019/pd2xukniqg60gdwhfens.png"
      },
      {
        "public_id": "avalanche2019/ofjtlzgo5xpqcpmbghno",
        "version": 1554768999,
        "signature": "044e171f5d14bd82eb33ecd62da021d7d73ed04b",
        "width": 575,
        "height": 335,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T00:16:39Z",
        "tags": [],
        "bytes": 15127,
        "type": "upload",
        "etag": "1c6b74ada8afa2f6158f654bb69f9b10",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554768999/avalanche2019/ofjtlzgo5xpqcpmbghno.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554768999/avalanche2019/ofjtlzgo5xpqcpmbghno.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "I'm illustrating a book of poetry by my friend, Nick, and took some of his poems (with his permission) and fed them into a Markov chain."
  },
  {
    "_id": "MS2ncpfevj8u4whYL",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T03:47:56.201Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sh5zouwtrqe4gxjlis4b",
        "version": 1554436503,
        "signature": "d6efaeeba47d29a4c7840649553270e6a6f6fc08",
        "width": 1516,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T03:55:03Z",
        "tags": [],
        "bytes": 1259940,
        "type": "upload",
        "etag": "87a348c13fb11ca6991c60b12ab7c598",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554436503/avalanche2019/sh5zouwtrqe4gxjlis4b.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554436503/avalanche2019/sh5zouwtrqe4gxjlis4b.png"
      },
      {
        "public_id": "avalanche2019/x7fqzvzutg7ggzo3ntrf",
        "version": 1554436593,
        "signature": "e1cd45fb141457409d35625dae8f816511bd0d5d",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T03:56:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 10013609,
        "type": "upload",
        "etag": "37889a7fa054d60a6e2c4efcd840ab1b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554436593/avalanche2019/x7fqzvzutg7ggzo3ntrf.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554436593/avalanche2019/x7fqzvzutg7ggzo3ntrf.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "7675953",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 24,
        "bit_rate": 8010887,
        "duration": 10,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T17:13:42.306Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T20:09:59.266Z" }
      }
    ],
    "title": "",
    "description": "Comp Form Banner in MARVEL style\nFont create using: http://p5js.site44.com/022/index.html\nFont p5.js credit to: Purin Phanichphant",
    "inspiration_name": "AE Juice- Comic Book Trailer",
    "inspiration_url": "https://www.youtube.com/watch?v=O7fj4xkadAk"
  },
  {
    "_id": "MSTQZf69uMLjdPbQy",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T18:40:55.38Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/v5bbwssizbrtxihh0xih",
        "version": 1557513701,
        "signature": "bc368bbccfc09112f2581ad5ec1983060bf1f2b2",
        "width": 1604,
        "height": 1436,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T18:41:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 1734597,
        "type": "upload",
        "etag": "f8fb7492cac24be7f80a4970a224b372",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557513701/avalanche2019/v5bbwssizbrtxihh0xih.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557513701/avalanche2019/v5bbwssizbrtxihh0xih.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "1311346",
          "dar": "401:359"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1327921,
        "duration": 10.45,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "robot hovering around a grass field",
    "inspiration_name": "P5 Play Example",
    "inspiration_url": "http://molleindustria.github.io/p5.play/examples/index.html?fileName=camera.js"
  },
  {
    "_id": "MeQApSSf2kpyiJkeL",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T00:24:57.356Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/raxpnaymlcrwzvntb37u",
        "version": 1556843107,
        "signature": "9a8b770928dab6dadd9a0e12079a09f627b3a64c",
        "width": 1634,
        "height": 1634,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:25:07Z",
        "tags": [],
        "bytes": 124821,
        "type": "upload",
        "etag": "3dd1195fb3a6a7e6c195667bcb004f8d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556843107/avalanche2019/raxpnaymlcrwzvntb37u.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556843107/avalanche2019/raxpnaymlcrwzvntb37u.png"
      },
      {
        "public_id": "avalanche2019/uybgbyonu7uljbnpoo0b",
        "version": 1556843114,
        "signature": "10988d8ca7b1e2cac0868cbbfa5a02e2b2163569",
        "width": 1634,
        "height": 1634,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:25:14Z",
        "tags": [],
        "bytes": 109040,
        "type": "upload",
        "etag": "e32b9b6a780a8de5493e70b5e1bb6b1b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556843114/avalanche2019/uybgbyonu7uljbnpoo0b.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556843114/avalanche2019/uybgbyonu7uljbnpoo0b.png"
      },
      {
        "public_id": "avalanche2019/seef1kdcpuiuo40y4zoa",
        "version": 1556843153,
        "signature": "21dbd55adadfa1b3b0725a6133bbfe74e2fbc39f",
        "width": 1736,
        "height": 667,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T00:25:53Z",
        "tags": [],
        "bytes": 112329,
        "type": "upload",
        "etag": "08cd9ff309d77a80ffa986da4b6b89df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556843153/avalanche2019/seef1kdcpuiuo40y4zoa.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556843153/avalanche2019/seef1kdcpuiuo40y4zoa.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-05-03T18:28:29.343Z" }
      }
    ],
    "title": "",
    "description": "OpenSCAD, 3d text from flat gradient text"
  },
  {
    "_id": "MeTzQi4RJFWWReHeH",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "created_at": { "$date": "2019-02-27T06:36:03.303Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/i4nyoinivedvuyzwgdhs",
        "version": 1551249385,
        "signature": "7afe7d1956f6aff249faf67fa06b079bfe0688e3",
        "width": 1006,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-27T06:36:25Z",
        "tags": [],
        "bytes": 34639,
        "type": "upload",
        "etag": "aaa71f1c1530953d477b683fef729a9d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551249385/avalanche2019/i4nyoinivedvuyzwgdhs.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551249385/avalanche2019/i4nyoinivedvuyzwgdhs.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nlet amplitude_slider, frequency_slider, time_slider;\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\nvar noiseFrequency = .02;\n\nfunction setup() {\n    createCanvas(500, 300);\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 200, 120);\n    createP('Frequency');\n    frequency_slider = createSlider(0, .07, .02, .01);\n    createP('Time Speed');\n    time_slider = createSlider(0, 10, 2);\n}\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n    noiseDetail(1, .5);\n    fill(255);\n    noStroke();\n    let w;\n    for (i = 0; i < 1; i += noiseFrequency) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n        // hint: drive offsetX and offsetY with noise() instead of random()\n        w = noise(x * frequency_slider.value() + millis() * time_slider.value() * noiseFrequency / 10);\n        var offsetX = w * amplitude_slider.value();\n        var offsetY = noise(x) * noiseFrequency;\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n}"
  },
  {
    "_id": "MfW9EeAY6zP33GQNj",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T13:04:54.157Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s4vz3monngw7yx2j2gai",
        "version": 1550841543,
        "signature": "b4e560a9248e0090cbef05883ece73c757996367",
        "width": 1920,
        "height": 1004,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T13:19:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 8327146,
        "type": "upload",
        "etag": "76849a5297c62a23ce33c259b0642599",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550841543/avalanche2019/s4vz3monngw7yx2j2gai.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550841543/avalanche2019/s4vz3monngw7yx2j2gai.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1805166",
          "dar": "480:251"
        },
        "frame_rate": 15,
        "bit_rate": 1806975,
        "duration": 36.866667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Noisy Pie Chart"
  },
  {
    "_id": "Mhe25cEEfZD5vQc5A",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T16:04:38.064Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bpwamuhvyiij9jhf6isi",
        "version": 1556899485,
        "signature": "624e23066e244b010407d4b94404a618d4c46bf4",
        "width": 662,
        "height": 702,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T16:04:45Z",
        "tags": [],
        "bytes": 70667,
        "type": "upload",
        "etag": "30597b9806035ead47b5366cd9cca9d4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899485/avalanche2019/bpwamuhvyiij9jhf6isi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899485/avalanche2019/bpwamuhvyiij9jhf6isi.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T16:08:41.309Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T16:43:18.086Z" }
      }
    ],
    "title": "",
    "inspiration_name": "dessert-stand"
  },
  {
    "_id": "MixZyeEqMcrcSL5go",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T15:44:28.2Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rtvz5rfwsjngegopsysi",
        "version": 1554488566,
        "signature": "de478edffc1d8447e238010ea7c6d0387c0d7dbd",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T18:22:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 18842149,
        "type": "upload",
        "etag": "2b6436ba31c1014d1c31e8a8e44aa51e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554488566/avalanche2019/rtvz5rfwsjngegopsysi.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554488566/avalanche2019/rtvz5rfwsjngegopsysi.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "37246122",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 39628054,
        "duration": 3.8038,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/z2qbadv78txqidu5qlq5",
        "version": 1554488584,
        "signature": "c890b126d24403a16be313b8d509dd997a291ede",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T18:23:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 18052542,
        "type": "upload",
        "etag": "65fd10374630efd8ed6077b5eb329fc5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554488584/avalanche2019/z2qbadv78txqidu5qlq5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554488584/avalanche2019/z2qbadv78txqidu5qlq5.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "39219205",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 41618098,
        "duration": 3.470133,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/mxkoottjehtc7xpz8rrk",
        "version": 1554488588,
        "signature": "8026297c99c804f3f328a6f6cccbe00175e0f266",
        "width": 2850,
        "height": 1592,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T18:23:08Z",
        "tags": [],
        "bytes": 477333,
        "type": "upload",
        "etag": "b3aaa04ff7c830c83531b9671f71629a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554488588/avalanche2019/mxkoottjehtc7xpz8rrk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554488588/avalanche2019/mxkoottjehtc7xpz8rrk.png"
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T16:09:45.204Z" }
      }
    ],
    "title": "",
    "description": "Down to 3s, with audio!\n\n- Video 1: single image per frame\n- Video 2: multiple images per frame, a few timing experiments",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// If I were to start again, I would NOT write the code like this, but it functions. \n// Depends on a local file to run.\n\nconst line_points = [[],[],[],[]];\nlet pt1_connected = false;\nlet pt2_connected = false;\nlet completed = false;\nlet ready_for_text = false;\n\nconst words = \"Compform\";\nlet letters = [];\n\nlet frame_counter = 0;\n\nfunction preload() {\n    hand = loadImage(\"./assets/bumper_hand_03.png\");\n    miriam_libre = loadFont('./assets/MiriamLibre-Regular.ttf');\n}\n\nconst points = [\n    [\n        {x: 100, y: 400, completed: false},\n        {x: 300, y: 150, completed: false},\n        {x: 500, y: 400, completed: false},\n        {x: 100, y: 400, completed: false},\n    ],\n    [\n        {x: 200, y: 275, completed: false},\n        {x: 400, y: 275, completed: false},\n        {x: 300, y: 400, completed: false},\n        {x: 200, y: 275, completed: false}\n    ],\n    [\n        {x: 352, y: 337, completed: false},\n        {x: 450, y: 337, completed: false},\n        {x: 400, y: 400, completed: false},\n        {x: 352, y: 337, completed: false}\n    ],\n    // [\n    //     {x: 50, y: 50, completed: false},\n    //     {x: 550, y: 50, completed: false},\n    //     {x: 550, y: 550, completed: false},\n    //     {x: 50, y: 550, completed: false},\n    //     {x: 50, y: 50, completed: false}\n    // ]\n    // [\n    //     {x: 100, y: 410, completed: false},\n    //     {x: 250, y: 410, completed: false},\n    //     {x: 250, y: 480, completed: false},\n    //     {x: 100, y: 480, completed: false},\n    //     {x: 100, y: 410, completed: false}\n    // ]\n];\n\nfunction setup() {\n    createCanvas(windowWidth, windowHeight);\n    H = new Hand(points[0][0].x - .5, points[0][0].y - 73, hand);\n    textFont(miriam_libre);\n    textSize(25);\n\n    frameRate(60);\n}\n\nfunction drawLine(_ptgroup, _pt, _condition, _penDown) {\n    for (let i = 0; i < 1; i++) {\n        if (\n            points[_ptgroup][_pt].completed === false &&\n            _condition\n        ) {\n            let distance_to_pt = dist(H.tip.x, H.tip.y, points[_ptgroup][_pt].x, points[_ptgroup][_pt].y);\n            if (distance_to_pt > 5) {\n                H.lerpTo(points[_ptgroup][_pt].x, points[_ptgroup][_pt].y, .35, _penDown, _ptgroup);\n            } else {\n                points[_ptgroup][_pt].completed = true;\n            }\n        }\n    }\n}\n\nfunction draw() {\n    background(245);\n    translate(350, 0);\n\n    drawLine(0, 0, true);\n    drawLine(0, 1, points[0][0].completed, true);\n    drawLine(0, 2, points[0][1].completed, true);\n    drawLine(0, 3, points[0][2].completed, true);\n\n    drawLine(1, 0, points[0][3].completed, false);\n    drawLine(1, 1, points[1][0].completed, true);\n    drawLine(1, 2, points[1][1].completed, true);\n    drawLine(1, 3, points[1][2].completed, true);\n\n    drawLine(2, 0, points[1][3].completed, false);\n    drawLine(2, 1, points[2][0].completed, true);\n    drawLine(2, 2, points[2][1].completed, true);\n    drawLine(2, 3, points[2][2].completed, true);\n\n    // drawLine(3, 0, points[2][3].completed, false);\n    // drawLine(3, 1, points[3][0].completed, true);\n    // drawLine(3, 2, points[3][1].completed, true);\n    // drawLine(3, 3, points[3][2].completed, true);\n    // drawLine(3, 4, points[3][3].completed, true);\n\n    if (points[2][3].completed) {\n        noStroke();\n        H.lerpTo(420, 470, .6, false);\n        H.display();\n        ready_for_text = true;\n    }\n    if (ready_for_text) {\n        push();\n            fill(50);\n            printLetters();\n        pop();\n    }\n    H.display();\n\n    // saveFrame('bumper', frame_counter, 'png', 250)\n    frame_counter++\n}\n\nfunction printLetters() {\n    text(\"Compform\", 105, 430);\n}\n\nclass Hand {\n    constructor(_x, _y, _img) {\n        this.pos = {\n            x: _x,\n            y: _y,\n        },\n        this.img = _img,\n        this.tip = {\n            x: _x - .5,\n            y: _y + 73\n        },\n        this.h = 800,\n        this.w = .574 * this.h\n    }\n\n    lerpTo(_x, _y, _rand_mag, _penDown, _ptgroup) {\n        this.penDown(_penDown, _ptgroup);\n        this.display();\n\n        let rand = {\n            x: random(_rand_mag),\n            y: random(- _rand_mag, _rand_mag)\n        };\n\n        const end_point_fixed = {\n            x: _x + .5,\n            y: _y - 73\n        }\n\n        this.pos.x = lerp(this.pos.x, end_point_fixed.x, 0.05) + rand.x;\n        this.pos.y = lerp(this.pos.y, end_point_fixed.y, 0.05) + rand.y;\n        \n        this.tip = {\n            x: this.pos.x - .5,\n            y: this.pos.y + 73\n        };\n    }\n\n    penDown(_isDown, _ptgroup) {\n        // Points in line\n        if (_isDown) {\n            line_points[_ptgroup].push({x: this.tip.x, y: this.tip.y});\n        }\n\n        // Connect points\n        strokeWeight(2.5);\n        stroke(50);\n        for (let i = 0; i < line_points.length; i++) {\n            for (let p = 1; p < line_points[i].length; p++) {\n                stroke(50);\n                line(\n                    line_points[i][p - 1].x, line_points[i][p - 1].y,\n                    line_points[i][p].x, line_points[i][p].y,\n                )\n            }\n        }\n    }\n\n    display() {\n        image(this.img, this.pos.x, this.pos.y, this.w, this.h);\n    }\n}\n\n\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n    // don't save frames once we reach the max\n    if (maxFrame && frameNumber > maxFrame) {\n      return;\n    }\n  \n    if (!extension) {\n      extension = \"png\";\n    }\n    // remove the decimal part (just in case)\n    frameNumber = floor(frameNumber);\n    // zero-pad the number (e.g. 13 -> 0013);\n    var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n  \n    save(name + \"_\" + paddedNumber + \".\" + extension);\n  }\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n    // don't save frames once we reach the max\n    if (maxFrame && frameNumber > maxFrame) {\n      return;\n    }\n  \n    if (!extension) {\n      extension = \"png\";\n    }\n    // remove the decimal part (just in case)\n    frameNumber = floor(frameNumber);\n    // zero-pad the number (e.g. 13 -> 0013);\n    var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n  \n    save(name + \"_\" + paddedNumber + \".\" + extension);\n  }"
  },
  {
    "_id": "Mmp3fc4Dnt58aSNtR",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:14:44.484Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wmsdufczjujtwqfaktek",
        "version": 1550852414,
        "signature": "56fdeb05162f467e832cee707c83cbc3b879ad5b",
        "width": 966,
        "height": 968,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T16:20:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 16079454,
        "type": "upload",
        "etag": "a0f419923846073c1cf480253c93eb37",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550852414/avalanche2019/wmsdufczjujtwqfaktek.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550852414/avalanche2019/wmsdufczjujtwqfaktek.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "16072684",
          "dar": "483:484"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 16073426,
        "duration": 8.003,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Starfield in Processing",
    "inspiration_url": "https://www.youtube.com/watch?v=17WoOqgXsRM&t=578s"
  },
  {
    "_id": "Mnht7FRnMyEffxRDA",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:03:19.948Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gq1f7i0gfe8outwrqufr",
        "version": 1553882624,
        "signature": "b7f3493bdf9a1e98185fc89959c9562ebd1edec7",
        "width": 856,
        "height": 844,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T18:03:44Z",
        "tags": [],
        "bytes": 301021,
        "type": "upload",
        "etag": "511b19ec29226a0ba3849c324e578e55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553882624/avalanche2019/gq1f7i0gfe8outwrqufr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553882624/avalanche2019/gq1f7i0gfe8outwrqufr.png"
      },
      {
        "public_id": "avalanche2019/govzqauujdowqhayaocf",
        "version": 1553885982,
        "signature": "ed088145826fbaf49f14ab64b8db10f343cb8cf6",
        "width": 480,
        "height": 380,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-29T18:59:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 2234012,
        "type": "upload",
        "etag": "231a72ec89c0d463baea05ec4d1793f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553885982/avalanche2019/govzqauujdowqhayaocf.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553885982/avalanche2019/govzqauujdowqhayaocf.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "728604",
          "dar": "24:19"
        },
        "frame_rate": 15,
        "bit_rate": 730467,
        "duration": 24.466667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Sound Wave",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n\n\nnoise.seed(Math.random());\n\nvar radiusStep = 4;\nvar count = 70;\nvar hueOffset = Math.random()*360;\nvar group = new Group();\n\n\n\nfunction onFrame(event) {\ngroup.removeChildren();\n\n\nfor(var i =0; i<count;i++){\n\n  var path = new Path.Circle({\n  \tcenter: [500, 500],\n  \tradius: 35+i*radiusStep,\n    strokeColor:'#f46060',\n    strokeWidth:5 // red\n  });\n  path.strokeColor.hue+= (i*1.4 +hueOffset) ;\n  path.flatten(i);\n  path.smooth();\n  //\n  //\n  for(j = 0; j< path.segments.length; j++){\n    var dir = (path.segments[j].point.clone() - [500, 500]).normalize();\n    var length = (noise.perlin3(i*0.1,j*1000,event.count*0.05) - 0.1*i*0.03) * i*i*0.07;\n    path.segments[j].point += dir*length;\n  }\n  path.scale(1, 1+i*0.005);\ngroup.addChild(path);\n}\n\n}"
  },
  {
    "_id": "Mr9eg9P2vogjFZ45C",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-26T19:35:41.865Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ivvmw3gp5rfkkand9e4j",
        "version": 1553631732,
        "signature": "e1a20220e99db9df7839649aa2c3dbdd7c5da22d",
        "width": 2004,
        "height": 2004,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-26T20:22:12Z",
        "tags": [],
        "bytes": 1069662,
        "type": "upload",
        "etag": "3540bf276c1e8440ccec3c96373597dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553631732/avalanche2019/ivvmw3gp5rfkkand9e4j.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553631732/avalanche2019/ivvmw3gp5rfkkand9e4j.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T01:43:35.875Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T16:09:18.236Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T01:43:17.451Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T02:17:24.357Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T12:07:30.737Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T20:56:32.635Z" }
      }
    ],
    "title": "",
    "description": "The final? version of the Paper Garden script. I'm working on a case-study to explain how this script works. If you are interested, [take a look at the draft](http://compform.net/vectors/paper_garden/paper_garden.html).",
    "inspiration_name": "Case Study",
    "inspiration_url": "http://compform.net/vectors/paper_garden/paper_garden.html"
  },
  {
    "_id": "MsNtSQfjB8re3vTve",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T04:39:20.363Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lkmgzed6k9hgs3yphpfh",
        "version": 1554439220,
        "signature": "5755db9cdbf9184f726291f6c6b9be4869a28297",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T04:40:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 1987235,
        "type": "upload",
        "etag": "63ac1bc40d82c223801d19531350c6b6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554439220/avalanche2019/lkmgzed6k9hgs3yphpfh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554439220/avalanche2019/lkmgzed6k9hgs3yphpfh.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "2250",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2310236",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 23.976023976023978,
        "bit_rate": 2397282,
        "duration": 6.631625,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Bubbles",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n\nlet width = 2000;\nlet height = 1200;\nlet img;\n\nlet x = width / 2;\nlet y = height - 200;\nlet r, g, b;\nlet system;\n\nlet EXPORT = false;\n\nfunction setup() {\n  createCanvas(width, height, WEBGL);\n  smooth();\n  img = loadImage(\"texture.png\");\n  frameRate(2);\n\n  system = new ParticleSystem(createVector(x, y));\n}\n\nfunction draw() {\n  background(0);\n  ellipseMode(CENTER);\n  noStroke();\n  translate(-width / 2, -height / 2, 0);\n  fill(255);\n  ellipse(width / 2, height - 180, 90, 25);\n  directionalLight(255, 255, 255, -1025, -1073);\n  system.addParticle();\n  system.run();\n  r = 100;\n  b = 20;\n\n  if (EXPORT) {\n    saveFrame(\"EXPORT\", frameCount, \"jpg\", 800);\n  }\n  if (frameCount > 800) {\n    noLoop();\n  }\n\n  console.log(frameCount);\n}\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n    return;\n  }\n\n  if (!extension) {\n    extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}\nlet Particle = function(position) {\n  this.acceleration = createVector(0, -0.05);\n  this.velocity = createVector(random(-1, 1), random(-1, 0));\n  this.position = position.copy();\n};\n\nParticle.prototype.run = function() {\n  this.update();\n  this.display();\n};\n\nParticle.prototype.update = function() {\n  this.velocity.add(this.acceleration);\n  this.position.add(this.velocity);\n  this.acceleration *= 0;\n};\n\nParticle.prototype.display = function() {\n  push();\n  translate(this.position.x, this.position.y);\n  specularMaterial(r, 70, b);\n  if (b >= 255) {\n    b--;\n    r++;\n  } else {\n    b++;\n    r--;\n  }\n\n  sphere(20);\n  pop();\n};\n\nlet ParticleSystem = function(position) {\n  this.origin = position.copy();\n  this.particles = [];\n};\n\nParticleSystem.prototype.addParticle = function() {\n  this.particles.push(new Particle(this.origin));\n};\n\nParticleSystem.prototype.run = function() {\n  for (let i = this.particles.length - 1; i >= 0; i--) {\n    let p = this.particles[i];\n    p.run();\n  }\n};"
  },
  {
    "_id": "Mw4axi7awg7s22md9",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T17:01:51.18Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tl1wi7c3u1y3u9n5es7w",
        "version": 1550855060,
        "signature": "86fd278125c4aa2f6670a31f226d4490099bc1fc",
        "width": 788,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T17:04:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 9299360,
        "type": "upload",
        "etag": "bfed851cb01a4b7309f44b4fb82e8a6e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550855060/avalanche2019/tl1wi7c3u1y3u9n5es7w.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550855060/avalanche2019/tl1wi7c3u1y3u9n5es7w.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7346271",
          "dar": "197:199"
        },
        "frame_rate": 60,
        "bit_rate": 7364614,
        "duration": 10.101667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Noise mouse changes to grid"
  },
  {
    "_id": "MxmpSAoWYLnbmRZ3w",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T00:26:26.859Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nkdhljjmlsshmzezg855",
        "version": 1552523291,
        "signature": "0d6cc367011cb5d8e127ba933a39f719294b3342",
        "width": 499,
        "height": 498,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T00:28:11Z",
        "tags": [],
        "bytes": 351354,
        "type": "upload",
        "etag": "df8384294b1775f53709561972d4e123",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552523291/avalanche2019/nkdhljjmlsshmzezg855.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552523291/avalanche2019/nkdhljjmlsshmzezg855.png"
      },
      {
        "public_id": "avalanche2019/sykfqu7yf9elaljpgfbr",
        "version": 1552523326,
        "signature": "bc60479ccf124afb8a998b70cfd266c41609a3b9",
        "width": 246,
        "height": 344,
        "format": "gif",
        "resource_type": "image",
        "created_at": "2019-03-14T00:28:46Z",
        "tags": [],
        "pages": 1,
        "bytes": 10578,
        "type": "upload",
        "etag": "55b6ae5f2d2059d73304fa8685622129",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552523326/avalanche2019/sykfqu7yf9elaljpgfbr.gif",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552523326/avalanche2019/sykfqu7yf9elaljpgfbr.gif"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-03-14T00:40:21.54Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T00:40:22.337Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "funny",
        "created_at": { "$date": "2019-03-14T16:07:57.305Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T20:01:46.632Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T05:37:13.608Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-03-15T19:50:58.856Z" }
      }
    ],
    "title": "",
    "description": "I made this divination device for Chinese face reading. The drawn lines suggest regions of the querent's face that have the most activity. \n\nThe second image is provided as a key to help with interpretation. \n\nThe code suggests Justin is currently primarily focused on career, parents and life. Secondarily travel and fortune are in his future. The activity around his cheek says he is very focused on his child and the lines around his eye indicate his awareness of the connections between all of the above and his relationship. \n\nRules:\n1. add your 500x500px image\n2. hit play once (no fair, running the code multiple times)\n3. interpret the results",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nlet turnOptions = [];\nlet forwardOptions = [];\n\nconst stepDist = 1;\nconst turnDeg = 90;\nconst strokeWt = .6;\n\nlet hexRed;\nlet hexYellow;\nlet hexBlue;\n\nfunction preload() {\n  myImage = loadImage(\n    \"Justin01.jpeg\"\n  );\n}\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n\n    noFill();\n    strokeWeight(strokeWt);\n    background(245, 245, 245);\n    \n    for (let i = 0; i < 360; i += turnDeg) {\n        turnOptions.push(i);\n    }\n\n    hexRed = color(\"#FFFFFF\");\n    hexYellow = color(\"#FFFFFF\");\n    hexBlue = color(\"#FFFFFF\");\n\n    chooseRandColor();\n  \n  myImage.loadPixels();\n}\n\nfunction draw() {\n myImage.updatePixels();\n  image(myImage, 0, 0, width, height);\n    // teleport to center of canvas\n    myTurtle.moveTo(width / 2, height / 2);\n    myTurtle.penDown();\n\n    // put the pen down to draw\n    for (let i = 0; i < 8000; i++) {\n\n        let nX = noise(myTurtle.x * .01, 0, 0);\n        let nY = noise(0, myTurtle.y * .01, 1000);\n        let thisTurnIndex = Math.floor(random(turnOptions.length));\n        let thisTurn = turnOptions[thisTurnIndex];\n\n        if (myTurtle.x < width && myTurtle.x > 0) {\n            if (myTurtle.y < height && myTurtle.y > 0) {\n                myTurtle.moveForward(stepDist);\n                myTurtle.turnRight(thisTurn + ((random(-1, 1) * nY) / 10));\n            }\n        }\n\n        if (thisTurn === 90) {\n            chooseRandColor();\n        }\n\n        push();\n        for (let i = 0; i < 10; i++) {\n            let thisTurn = turnOptions[thisTurnIndex];\n            if (myTurtle.x < width && myTurtle.x > 0) {\n                if (myTurtle.y < height && myTurtle.y > 0) {\n                    myTurtle.moveForward(stepDist);\n                    myTurtle.turnRight(thisTurn);\n                }\n            }\n        }\n        pop();\n    }\n  \n\tnoLoop();\n}\n\nfunction chooseRandColor() {\n    let randC = random();\n    if (randC < (1/3)) {\n        stroke(color(hexRed));\n        fill(color(hexRed));\n    } else if (randC < (2/3)) {\n        stroke(color(hexYellow));\n        fill(color(hexYellow));\n    } else if (randC < 1) {\n        stroke(color(hexBlue));\n        fill(color(hexBlue));\n    }\n}\n\n// Turtle\n// Basic turtle graphics implementation:\n// https://en.wikipedia.org/wiki/Turtle_graphics\n// For more info on Javascript OOP:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript\n//\n// The turtle's coordinate system uses pixels for distance and degrees for rotations\n// 0 degrees is straight right (east); positive degrees are clockwise\n\n// Turtle constructor\n// takes optional x, y starting coordinates (default is center of sketch)\nfunction Turtle(x, y) {\n  // assign default values to x and y if they were not passed\n  if (typeof x === \"undefined\") {\n    x = width * 0.5;\n  }\n  if (typeof y === \"undefined\") {\n    y = height * 0.5;\n  }\n  this.x = x;\n  this.y = y;\n  this.bearingRadians = 0;\n  this.isPenDown = true;\n  this._stateStack = [];\n}\n\n// moveTo instantly transports the turtle to the provided x, y location, drawing a line if pen is down\nTurtle.prototype.moveTo = function (newX, newY) {\n  if (this.isPenDown) {\n    line(this.x, this.y, newX, newY);\n  }\n  this.x = newX;\n  this.y = newY;\n};\n\n// moveForward moves the turtle along its current bearing, drawing a line if pen is down\nTurtle.prototype.moveForward = function (distance) {\n  var newX = this.x + cos(this.bearingRadians) * distance;\n  var newY = this.y + sin(this.bearingRadians) * distance;\n  this.moveTo(newX, newY);\n};\n\n// moveBackward moves the turtle backward from its current bearing, drawing a line if pen is down\nTurtle.prototype.moveBackward = function (distance) {\n  this.moveForward(-distance);\n};\n\n// turnTo changes the turtle's bearing to the provided angle in degrees\nTurtle.prototype.turnTo = function (angleDegrees) {\n  this.bearingRadians = radians(angleDegrees);\n};\n\n// turnRight rotates the turtle's bearing clockwise by the provided angle in degrees\nTurtle.prototype.turnRight = function (amountDegrees) {\n  this.bearingRadians += radians(amountDegrees);\n};\n\n// turnLeft rotates the turtle's bearing counter-clockwise by the provided angle in degrees\nTurtle.prototype.turnLeft = function (amountDegrees) {\n  this.bearingRadians -= radians(amountDegrees);\n};\n\n// penUp tells the turtle to move without drawing\nTurtle.prototype.penUp = function () {\n  this.isPenDown = false;\n};\n\n// penDown tells the turtle to draw a line when it moves\nTurtle.prototype.penDown = function () {\n  this.isPenDown = true;\n};\n\n// pushState records the turtle's current state (position, bearing, etc.) to a stack so that changes can be undone easily\nTurtle.prototype.pushState = function () {\n  this._stateStack.push({\n    x: this.x,\n    y: this.y,\n    bearingRadians: this.bearingRadians,\n    isPenDown: this.isPenDown\n  });\n};\n\n// popState restores the turtle's state to the top recorded state on the stack\nTurtle.prototype.popState = function () {\n  if (this._stateStack.length === 0) {\n    console.error(\n      \"Turtle: No states left on stack. Make sure your calls to .pushState and .popState are balanced.\"\n    );\n    return;\n  }\n  var state = this._stateStack.pop();\n  this.x = state.x;\n  this.y = state.y;\n  this.bearingRadians = state.bearingRadians;\n  this.isPenDown = state.isPenDown;\n};\n\n// image draws and image centered on the turtle's current location and alligned with the turtle's rotation (forward = up)\nTurtle.prototype.image = function (i, w, h) {\n  // w, h are optional parameters to this function and to p5's image\n  // p5's image function will draw the image at its \"normal\" size if w and h are undefined\n\n  push();\n  translate(this.x, this.y);\n  rotate(this.bearingRadians + PI * 0.5);\n  imageMode(CENTER);\n  image(i, 0, 0, w, h);\n  pop();\n};",
    "inspiration_name": "Anna's sketches",
    "inspiration_url": "http://sketches2019.compform.net/users/EbdEAWumAHKFDnb3H"
  },
  {
    "_id": "N3EZ9JqbH5McXfeiM",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T14:29:29.705Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wobbloduxvlm43rm2rfp",
        "version": 1552487383,
        "signature": "5244b250c1b98c22e70d7b8ce718498a4b03e069",
        "width": 640,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-13T14:29:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 7244113,
        "type": "upload",
        "etag": "0f5a41d3a78f692ee53a31da9c6d3c4e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552487383/avalanche2019/wobbloduxvlm43rm2rfp.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552487383/avalanche2019/wobbloduxvlm43rm2rfp.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "3171694",
          "dar": "4:3"
        },
        "frame_rate": 29.97,
        "bit_rate": 3175516,
        "duration": 18.249917,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-03-13T15:34:33.146Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "funny",
        "created_at": { "$date": "2019-03-13T16:10:18.926Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T16:29:41.681Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T18:23:57.246Z" }
      }
    ],
    "title": "",
    "description": "Analog turtle (kitten) spelling out his name",
    "inspiration_name": "My name is Milo"
  },
  {
    "_id": "N4f5hvb359kASqdp9",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T02:13:10.413Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mp8dqtpryjnp0olbcspz",
        "version": 1550628802,
        "signature": "3c1ac5278ed09decbad9f15b4dc28d99fee84387",
        "width": 1256,
        "height": 516,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-20T02:13:22Z",
        "tags": [],
        "bytes": 25233,
        "type": "upload",
        "etag": "2290196d44d692da33363a2f4573918e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550628802/avalanche2019/mp8dqtpryjnp0olbcspz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550628802/avalanche2019/mp8dqtpryjnp0olbcspz.png"
      },
      {
        "public_id": "avalanche2019/rixv3de6kbyk3zfgvwen",
        "version": 1550628806,
        "signature": "5af66bfcb3879c4173b2e4b52123878c8db3c44f",
        "width": 1258,
        "height": 528,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-20T02:13:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 467291,
        "type": "upload",
        "etag": "5b254804f41aa11394da5e6b68c7ff15",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550628806/avalanche2019/rixv3de6kbyk3zfgvwen.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550628806/avalanche2019/rixv3de6kbyk3zfgvwen.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "309326",
          "dar": "629:264"
        },
        "frame_rate": 15,
        "bit_rate": 311527,
        "duration": 12,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Riff on the skyline example from class. Added antennas to the tallest buildings and reduced the framecount in the building height noise function to simulate a city changing over time. \n\nUse the slider to play with speed.",
    "inspiration_name": "JB In-Class Example Skyline",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?/noise/sketches/skyline.js",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// code inspo: Justin; in class example\n\nlet amplitude = 150;\nlet frequency = 0.02;\n\nfunction setup() {\n  createCanvas(600, 200);\n  noStroke();\n  noiseSeed(1);\n\n  createP(\"Speed of Development\");\n  speed = createSlider(0.001, 0.02, 0.008, 0.001);\n}\n\nfunction draw() {\n  speedBuild = speed.value();\n\n  background(200, 200, 210);\n  fill(100);\n  let x = 0;\n  for (x = 0; x < width; x += 20) {\n    let buildingHeight =\n      noise(x * frequency, frameCount * speedBuild) * amplitude;\n\n    // build antenna for tall buildings\n    if (buildingHeight > 90) {\n      fill(\"#fff\");\n      rect(x + 10, height * 0.9 - buildingHeight - 20, 3, buildingHeight);\n      ellipse(x + 10, height * 0.9 - buildingHeight - 10, 3, buildingHeight);\n    }\n    fill(\"#3d3d3d\");\n    rect(x, height * 0.9 - buildingHeight, 20, buildingHeight);\n  }\n\n  fill(120);\n  rect(0, height * 0.9, width, height * 0.5);\n}"
  },
  {
    "_id": "N6h5b7wywv4jwP9YP",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T20:47:43.379Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ghtub37ufrhcpuqh1wri",
        "version": 1550263715,
        "signature": "21d1f3b6eb422c48bdedf82192504c197682b4cc",
        "width": 1848,
        "height": 1744,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T20:48:35Z",
        "tags": [],
        "bytes": 304806,
        "type": "upload",
        "etag": "d44af9cd345972ad5b8b409394717abc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550263715/avalanche2019/ghtub37ufrhcpuqh1wri.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550263715/avalanche2019/ghtub37ufrhcpuqh1wri.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Processing heart+PS 3D(Happy V-Day!)"
  },
  {
    "_id": "N94Cg2CBe8AEgGjSW",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T14:44:26.414Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tbat8aq6kj3rf9khn4yp",
        "version": 1552661312,
        "signature": "c96721305c9285d040b139840b9863e720053c06",
        "width": 988,
        "height": 988,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T14:48:32Z",
        "tags": [],
        "bytes": 254618,
        "type": "upload",
        "etag": "d2995cd099e684e18d74ced15cd736e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552661312/avalanche2019/tbat8aq6kj3rf9khn4yp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552661312/avalanche2019/tbat8aq6kj3rf9khn4yp.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T15:52:38.171Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:42:37.564Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T18:29:43.685Z" }
      }
    ],
    "title": "",
    "description": "triangle spiral",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n// code (Turtle Push + Pop) from class\n\nvar myTurtle;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tnoFill();\n\t// frameRate(1);\n\tcolorMode(HSL,100);\n\tnoLoop();\n\tmyTurtle = new Turtle();\n}\n\nfunction draw() {\n\tbackground(90);\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(250, 250);\n\tmyTurtle.penDown();\n\n\tfor (var i = 0; i < 150; i++) {\n\t\tstroke(random(20));\n\t\tstrokeWeight(random(0.1,0.5));\n\t\tmyTurtle.moveForward(i * 2.2);\n\t\tmyTurtle.turnLeft(120.27);\n\n\t}\n\tmyTurtle.pushState();\n\tmyTurtle.popState();\n}"
  },
  {
    "_id": "NA5dmDLN26GKht3GS",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T20:40:10.182Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xouzulpdot3fyaodundv",
        "version": 1550868797,
        "signature": "17cc3601b77a06ca206bf120b2a9d9f6e5208b10",
        "width": 1210,
        "height": 1204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T20:53:17Z",
        "tags": [],
        "bytes": 345134,
        "type": "upload",
        "etag": "4eff3a944f79628a79453643cb12138e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550868797/avalanche2019/xouzulpdot3fyaodundv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550868797/avalanche2019/xouzulpdot3fyaodundv.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Procedural terrain generation treasure map/game: \nrun the code to see it.\n\nI was going for functionality but could improve how it looks a lot \n\n- Look for the x that will be updated every screen \n- the x will always be on the highest point on the map \n- click on it to unlock treasure",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nlet inc = 0.02;\nlet scl = 2;\nlet cols, rows;\nlet zOff = 0;\nlet h;\nlet treasurePos = {\n    x: 0,\n    y: 0,\n};\nlet treasureSize = 8;\n\n\nfunction setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n\n    cols = floor(width / scl);\n    rows = floor(height / scl);\n    colorMode(HSB);\n    noStroke();\n\n    frameRate(.5);\n}\n\nfunction draw() {\n    background(0, 0, 100);\n    var yOff = 0;\n    let treasureheight = 150;\n    treasurePos = {\n        x: 0,\n        y: 0\n    };\n    for (let y = 0; y < rows; y++) {\n        var xOff = 0;\n        for (let x = 0; x < cols; x++) {\n            let index = (x + y * width) * 4;\n            let brightness = noise(xOff, yOff, zOff) * 255;\n            setColors(brightness);\n\n            //update brightness\n            if (brightness > treasureheight) {\n                treasureheight = brightness;\n                treasurePos = {\n                    x: x * scl,\n                    y: y * scl,\n                };\n            }\n            xOff += inc;\n            rect(x * scl, y * scl, scl, scl);\n        }\n        yOff += inc;\n        zOff += 0.010;\n\n    }\n    push();\n    fill(0, 90, 90);\n    textSize(12);\n    text('x', treasurePos.x, treasurePos.y);\n\n    pop();\n}\n\nfunction mousePressed() {\n    if (insideTreasure()) {\n        console.log(\"you got treasure!!!!!!!\");\n        push();\n        fill(57, 90, 56);\n        ellipse(mouseX, mouseY, 18);\n        pop();\n    }\n}\n\nfunction insideTreasure() {\n    if (mouseX - treasurePos.x + mouseY - treasurePos.y < treasureSize) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction setColors(brightness) {\n    if (brightness > 150) {\n        h = 37;\n        s = map(brightness, 150, 255, 30, 0);\n        // s = 30;\n        b = map(brightness, 150, 255, 70, 0);\n    } else if (brightness > 105) {\n        //make it a grass\n        h = 109;\n        s = map(brightness, 150, 255, 100, 0);\n        // s = 100;\n        b = map(brightness, 105, 150, 0, 100);\n    } else if (brightness > 0) {\n        //make it water\n        h = 230;\n        s = 100;\n        b = map(brightness, 0, 100, 0, 100);\n    }\n    fill(h, s, b);\n}"
  },
  {
    "_id": "NA9K7hTdXmFKMHWPY",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T15:27:57.722Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/odesd11hbtm9wlcmpepn",
        "version": 1551973300,
        "signature": "7b22685adef4ff10caecaa12affd0768b9bdd726",
        "width": 1296,
        "height": 812,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-07T15:41:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 673540,
        "type": "upload",
        "etag": "ce7aa5975d8d13d98192c8f637859fae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551973300/avalanche2019/odesd11hbtm9wlcmpepn.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551973300/avalanche2019/odesd11hbtm9wlcmpepn.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "230438",
          "dar": "324:203"
        },
        "frame_rate": 60,
        "bit_rate": 237571,
        "duration": 22.680833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-03-07T15:58:56.538Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T15:58:58.365Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T19:23:44.36Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T19:23:46.299Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T04:09:14.209Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T13:51:56.742Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T20:06:58.827Z" }
      }
    ],
    "title": "",
    "description": "Just testing out some eyes for fun...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n\nconst canvasWidth = 600;\nconst canvasHeight = 600;\nlet dots = [];\nlet fillPoints = [];\n\nfunction preload() {\n    img = loadImage(\"https://raw.githubusercontent.com/annagarbier/compform/master/googley_eyes.png\");\n}\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    fill(254);\n    pixelDensity(1);\n    createP(\"1. Click and drag to draw shape around the two dots.\");\n    createP(\"2. Wait for a second...\");\n    createP(\"3. Refresh for a new sketch.\");\n}\n\nfunction draw() {\n    ellipse(canvasWidth / 2 - 20, 120, 2, 2);\n    ellipse(canvasWidth / 2 + 20, 120, 2, 2);\n    setPolygonDots();\n    buildPolygon();\n}\n\nfunction drawEyes() {\n    image(img, canvasWidth / 2 - 50, 100);\n}\n\nfunction setPolygonDots() {\n    if (mouseIsPressed){\n        dots.push({x: mouseX, y: mouseY});\n        ellipse(mouseX, mouseY, .5, .5);\n    }\n}\n\nfunction buildPolygon() {\n    beginShape();\n    for (let dot = 0; dot < dots.length; dot++) {\n        vertex(dots[dot].x, dots[dot].y);\n    }\n}\n\nfunction fillPolygon() {\n    loadPixels();\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let index = (x + y * width) * 4;\n            let thisPixel = pixels[index];\n            if (thisPixel === 254) {\n                fillPoints.push([x, y]);\n            }\n        }\n    }\n}\n\nfunction decoratePolygonPoints(c) {\n    for (let i = 0; i < fillPoints.length; i++) {\n        push();\n        strokeWeight(.3);\n        stroke(c[0], c[1], c[2]);\n        line(\n            fillPoints[i][0] - random(30),\n            fillPoints[i][1] - random(30),\n            fillPoints[i][0] + random(30),\n            fillPoints[i][1] + random(30)\n        );\n        pop();\n    }\n}\n\nfunction mouseReleased() {\n    push();\n    strokeWeight(0);\n    endShape(CLOSE);\n    fillPolygon();\n\n    let c = [50, 50, 50];\n    // uncomment this block for color\n    // if (random() < .3) {\n    //     c = [66, 134, 244];\n    // } else if (random() < .6) {\n    //     c = [156, 121, 158];\n    // } else if (random() >= .6) {\n    //     c = [79, 83, 132];\n    // }\n    decoratePolygonPoints(c);\n    drawEyes();\n    pop();\n    dots = [];\n}"
  },
  {
    "_id": "NAPwBFNWFQHyPDoMC",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-25T02:06:33.062Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wqqjno2560zi3g9umo81",
        "version": 1553479658,
        "signature": "fa608046165f36b5c00f93b8f61924ceeaacb6c2",
        "width": 2528,
        "height": 1340,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-25T02:07:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 7224511,
        "type": "upload",
        "etag": "578e1a4ea215bdeb55739fba3847c44f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553479658/avalanche2019/wqqjno2560zi3g9umo81.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553479658/avalanche2019/wqqjno2560zi3g9umo81.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "2672919",
          "dar": "632:335"
        },
        "frame_rate": 60,
        "bit_rate": 2679880,
        "duration": 21.566667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/xzmvnqhbasjaonod1pwo",
        "version": 1553479672,
        "signature": "3596ef7df3af52a10352859f2a0c4d91e2c49fff",
        "width": 2560,
        "height": 1396,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-25T02:07:52Z",
        "tags": [],
        "bytes": 532977,
        "type": "upload",
        "etag": "15e6464b7f3343b474d2509edc206590",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553479672/avalanche2019/xzmvnqhbasjaonod1pwo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553479672/avalanche2019/xzmvnqhbasjaonod1pwo.jpg"
      },
      {}
    ],
    "votes": [],
    "lesson": "Noise",
    "title": ""
  },
  {
    "_id": "NCNd2QPTpneMgvw9d",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T05:30:14.118Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zzb0sohw6rxvjwl2ltrp",
        "version": 1548914300,
        "signature": "e13fdfb3f13f0d04fab933e0767616783d0ae4e9",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-01-31T05:58:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 3762389,
        "type": "upload",
        "etag": "88526d90d25bb29f1a6289769dcc69d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548914300/avalanche2019/zzb0sohw6rxvjwl2ltrp.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548914300/avalanche2019/zzb0sohw6rxvjwl2ltrp.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "2286",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "2732224",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 2728840,
        "duration": 11.008,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/w3fbevk3it4rb5q5fu6p",
        "version": 1548914313,
        "signature": "4403b5d2805ece9fa2d0c622a3b42ccc665472e9",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T05:58:33Z",
        "tags": [],
        "bytes": 857028,
        "type": "upload",
        "etag": "fcb78aa981df9d5e18620d81126ded30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548914313/avalanche2019/w3fbevk3it4rb5q5fu6p.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548914313/avalanche2019/w3fbevk3it4rb5q5fu6p.png"
      },
      {
        "public_id": "avalanche2019/fhn8dcxnltcc3fzrbtmr",
        "version": 1548914320,
        "signature": "ec7bdd7776269439dbb81ef3c80c2a6afc056485",
        "width": 1920,
        "height": 1030,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T05:58:40Z",
        "tags": [],
        "bytes": 328572,
        "type": "upload",
        "etag": "713c51406cb44674da078b27b13fdfa7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548914320/avalanche2019/fhn8dcxnltcc3fzrbtmr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548914320/avalanche2019/fhn8dcxnltcc3fzrbtmr.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:58:16.571Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:59.169Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:19.172Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:03:22.171Z" }
      }
    ],
    "title": "",
    "description": "Inspired by the Truchet tiles, I have created my version of the tiles and animated them to create different patterns based on the movement of each tile.\nTools used: Cinema4D and After Effects.",
    "inspiration_name": "Moving Truchet Tiles",
    "inspiration_url": "https://en.wikipedia.org/wiki/Truchet_tiles"
  },
  {
    "_id": "NFn6mQTF8PPqrxR9q",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T07:07:16.967Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vnytwtahautbjajownv2",
        "version": 1557472046,
        "signature": "629aeeccbe858aab5497d0c7f3caa90810bc45bb",
        "width": 868,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T07:07:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 3929873,
        "type": "upload",
        "etag": "37337f93dfad7f1d66c592538d9f27ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557472046/avalanche2019/vnytwtahautbjajownv2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557472046/avalanche2019/vnytwtahautbjajownv2.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "249535",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "776197",
          "dar": "217:180"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1034857,
        "duration": 30.38,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T17:16:29.509Z" }
      }
    ],
    "title": "",
    "description": "Iteration 1. Move the key towards the heart. Still have to fix the hands, how slow they disappear, change graphics and add levels?"
  },
  {
    "_id": "NJMDhDugB5EHdiXMg",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T19:01:38.148Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ho6jnuqsawglbkueuyrj",
        "version": 1556306148,
        "signature": "2ea860d18497f3cd9c18dd0315f7e373acd5fc0a",
        "width": 402,
        "height": 400,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T19:15:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 7526368,
        "type": "upload",
        "etag": "eef4c5f1f5d78cce1386995cfcbdaf09",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556306148/avalanche2019/ho6jnuqsawglbkueuyrj.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556306148/avalanche2019/ho6jnuqsawglbkueuyrj.mp4",
        "audio": {
          "codec": "mp3",
          "bit_rate": "320000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "13543",
          "dar": "201:200"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 339025,
        "duration": 177.6,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-26T20:02:25.345Z" }
      }
    ],
    "title": "",
    "description": "Ever wanted to listen to the intro of Blinded by the Lights for three minutes? – You’re welcome ;)",
    "inspiration_name": "Manfred Mann's Earth Band",
    "inspiration_url": "https://www.youtube.com/watch?v=Rpq35wyDi7I"
  },
  {
    "_id": "NKSm7hjnv5CFknWNu",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T14:23:48.27Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bmdjcta1ysgsguihrehc",
        "version": 1555683851,
        "signature": "b881799a0335f98985c42b9dc6fcdd000945aecd",
        "width": 586,
        "height": 598,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T14:24:11Z",
        "tags": [],
        "bytes": 378245,
        "type": "upload",
        "etag": "40d78cf81f60e1d8f6be9f7e24014f78",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555683851/avalanche2019/bmdjcta1ysgsguihrehc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555683851/avalanche2019/bmdjcta1ysgsguihrehc.png"
      },
      {
        "public_id": "avalanche2019/ycfiyylvk8kc6z01p7jj",
        "version": 1555683868,
        "signature": "c594acb5bc4b245736cd8d437e0d98474a3eab3b",
        "width": 176,
        "height": 356,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T14:24:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 1215125,
        "type": "upload",
        "etag": "47b981c3277887d1fe4c3b3ad342de49",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555683868/avalanche2019/ycfiyylvk8kc6z01p7jj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555683868/avalanche2019/ycfiyylvk8kc6z01p7jj.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "241511",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 13,
          "profile": "Main",
          "bit_rate": "469609",
          "dar": "44:89"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 717416,
        "duration": 13.55,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Lie Detector",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\n\nvar fft, // Allow us to analyze the song\n    numBars = 1024, // The number of bars to use; power of 2 from 16 to 1024\n    song; // The p5 sound object\n\nvar button;\n\nfunction toggleSong(){\nif (song.isPlaying()){\nsong.pause();\n}\nelse{\nsong.play();\n}\n}\n        \n        // Load song\n        function preload(){\n          song = loadSound('walislying.m4a');\n}\nvar canvas;\nfunction setup() { // Setup p5.js\n    canvas = createCanvas(100, 200);\n  \n}\n\nfunction draw() {\n    background(0);\n    \n    if(typeof song != \"undefined\" \n       && song.isLoaded() \n       && !song.isPlaying()) { // Do once\n    \n        song.play();\n        song.setVolume(1);\n\n        fft = new p5.FFT();\n        fft.waveform(numBars);\n        fft.smooth(0.185);\n    }\n    \n    if(typeof fft != \"undefined\") {\n        var spectrum = fft.analyze();\n        noStroke();\n        fill(\"rgb(255)\");\n        //fill(\"rgb(128, 125, 0, 280)\");\n        //fill(\"rgb(85, 107, 47,280)\");\n        for(var i = 0; i < numBars; i++) {\n            var x = map(i, 0, numBars, 0, width);\n            var h = -height + map(spectrum[i], 0, 100, height, 0);\n            rect(x, height, width / numBars, h);\n        }\n    }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}",
    "inspiration_name": "Skyping with Walis"
  },
  {
    "_id": "NRqwRauJA9vmxZwN2",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T19:47:08.029Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/htpsxvg3alov7wu2xcrr",
        "version": 1553888835,
        "signature": "055411ca464bd708c4434cd6deb38b900780cecc",
        "width": 756,
        "height": 757,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:47:15Z",
        "tags": [],
        "bytes": 73187,
        "type": "upload",
        "etag": "dfd622bac1a4289616ccdc7f09ed1585",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888835/avalanche2019/htpsxvg3alov7wu2xcrr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888835/avalanche2019/htpsxvg3alov7wu2xcrr.jpg"
      },
      {
        "public_id": "avalanche2019/nabzaxbhfauekwitjjrf",
        "version": 1553888839,
        "signature": "db1d25b0445112dbb79a0bfe37b5f11564c73d91",
        "width": 749,
        "height": 746,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:47:19Z",
        "tags": [],
        "bytes": 60629,
        "type": "upload",
        "etag": "8d31d4cdf2de9a33f64b7df850c70a34",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888839/avalanche2019/nabzaxbhfauekwitjjrf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888839/avalanche2019/nabzaxbhfauekwitjjrf.jpg"
      },
      {
        "public_id": "avalanche2019/bplbesa4dzo5ut6yhtuz",
        "version": 1553888844,
        "signature": "b571f145c5f74ad56815688a7fe7f8b4d50d4a1b",
        "width": 749,
        "height": 712,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:47:24Z",
        "tags": [],
        "bytes": 62726,
        "type": "upload",
        "etag": "0578a110ce777c2f88088fac19ac833c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553888844/avalanche2019/bplbesa4dzo5ut6yhtuz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553888844/avalanche2019/bplbesa4dzo5ut6yhtuz.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "For details, see the full work:\nhttp://sketches2019.compform.net/users/BRWMuGgSmfRbg9b2p",
    "inspiration_name": "Variations of Website Ad Pattern"
  },
  {
    "_id": "NanpsqvBmxsrMeFCE",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T18:59:23.45Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rbumrdkxp64udvhrn14v",
        "version": 1549565968,
        "signature": "608e2a408c2bd7477e9b63519ce775aa8817498f",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T18:59:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 772226,
        "type": "upload",
        "etag": "bd66c06f75d8a41c9c9b64c31968b704",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549565968/avalanche2019/rbumrdkxp64udvhrn14v.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549565968/avalanche2019/rbumrdkxp64udvhrn14v.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "301824",
          "dar": "16:9"
        },
        "frame_rate": 23.976023976023978,
        "bit_rate": 314478,
        "duration": 19.644625,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "self generating + moving ellipses with grayscale colors"
  },
  {
    "_id": "NdyKj3pY5BAjPbyEp",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:45:21.804Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ntkdwxcf0gpxz9fdnu1j",
        "version": 1555699536,
        "signature": "9f72245fdd0108bee163748fd6c419b63cdb882a",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T18:45:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 18777717,
        "type": "upload",
        "etag": "ff8c6d7c9496952d3f86808cbf70595d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555699536/avalanche2019/ntkdwxcf0gpxz9fdnu1j.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555699536/avalanche2019/ntkdwxcf0gpxz9fdnu1j.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "106275",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2334874",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 2449483,
        "duration": 61.327933,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T21:30:09.463Z" }
      }
    ],
    "title": "",
    "description": "\"Performed\" breathing sound 2"
  },
  {
    "_id": "NgMK9tnHkGoXSGoxS",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T02:45:04.246Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g6skuoimgq5yofqsb1uf",
        "version": 1553827888,
        "signature": "7abe6f421770f075b616fcbdf0fa04313fa55c8e",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T02:51:28Z",
        "tags": [],
        "bytes": 2136197,
        "type": "upload",
        "etag": "8d6d34482e73299810309a9feffc9258",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553827888/avalanche2019/g6skuoimgq5yofqsb1uf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553827888/avalanche2019/g6skuoimgq5yofqsb1uf.jpg"
      },
      {
        "public_id": "avalanche2019/ztr5fgf0hilvivloyuck",
        "version": 1553827892,
        "signature": "5ba998df1cdf0fb7f88fa810eaa9e887a4e80f43",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T02:51:32Z",
        "tags": [],
        "bytes": 2383695,
        "type": "upload",
        "etag": "a1949d33b14c648ce4a71c4717c44e6a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553827892/avalanche2019/ztr5fgf0hilvivloyuck.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553827892/avalanche2019/ztr5fgf0hilvivloyuck.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T04:36:19.697Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T20:28:38.039Z" }
      }
    ],
    "title": "",
    "description": "with color."
  },
  {
    "_id": "NkEKiEvBMRWx27MFi",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T01:38:34.428Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fq6jl8xafuymc0sikqmn",
        "version": 1555637920,
        "signature": "989d6af7f598e2d3127b2b05698af02bf82222b1",
        "width": 2526,
        "height": 1518,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T01:38:40Z",
        "tags": [],
        "bytes": 4582431,
        "type": "upload",
        "etag": "a9662e9c4dccce656484396ee1b332b6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555637920/avalanche2019/fq6jl8xafuymc0sikqmn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555637920/avalanche2019/fq6jl8xafuymc0sikqmn.png"
      },
      {
        "public_id": "avalanche2019/s3zium8hwuohnu1zdavg",
        "version": 1555638017,
        "signature": "ce406238a481675d3f9927a46e7ed0dcbde44cdb",
        "width": 640,
        "height": 388,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T01:40:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 9483108,
        "type": "upload",
        "etag": "9b84f0a82e73b56f1d7549fae513237d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555638017/avalanche2019/s3zium8hwuohnu1zdavg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555638017/avalanche2019/s3zium8hwuohnu1zdavg.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "247059",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3336869",
          "dar": "160:97"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3593646,
        "duration": 21.110833,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:29:45.448Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:37:11.016Z" }
      }
    ],
    "title": "",
    "description": "Music visualizer with a Project Pablo track"
  },
  {
    "_id": "Nrrp5okRjoqjp873X",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T22:18:54.943Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/oxmuhsgyc1ci68ycfbbc",
        "version": 1553811583,
        "signature": "84dde676fbb8267cbeb93b0caa17d96a5e754a60",
        "width": 2879,
        "height": 2917,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-28T22:19:43Z",
        "tags": [],
        "bytes": 1755220,
        "type": "upload",
        "etag": "49d27ca6b5fba46a3708d88dc301dbc6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553811583/avalanche2019/oxmuhsgyc1ci68ycfbbc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553811583/avalanche2019/oxmuhsgyc1ci68ycfbbc.jpg"
      },
      {
        "public_id": "avalanche2019/j4gxmmba3oomzqqujbd8",
        "version": 1553811630,
        "signature": "f655c7d918f1ca9bc8f208b2508f6e9708e3a2e6",
        "width": 2712,
        "height": 3614,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-28T22:20:30Z",
        "tags": [],
        "bytes": 1897619,
        "type": "upload",
        "etag": "b550c40377bd7ecae3bf6abe4d8fc28d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553811630/avalanche2019/j4gxmmba3oomzqqujbd8.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553811630/avalanche2019/j4gxmmba3oomzqqujbd8.jpg"
      },
      {
        "public_id": "avalanche2019/tremybds6gh0tczw5ukg",
        "version": 1553811672,
        "signature": "5a5b551c22b848fc05b8a905d62cb7d3dac8f0a6",
        "width": 3024,
        "height": 3030,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-28T22:21:12Z",
        "tags": [],
        "bytes": 2830396,
        "type": "upload",
        "etag": "2d9f6b73c1a98d40f88725c4eff829da",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553811672/avalanche2019/tremybds6gh0tczw5ukg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553811672/avalanche2019/tremybds6gh0tczw5ukg.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T22:27:09.102Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T22:33:46.959Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T19:25:35.746Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T20:29:22.04Z" }
      }
    ],
    "title": "",
    "description": "Laser cut"
  },
  {
    "_id": "NyN5n9CKmezJ5fpQn",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T02:52:38.664Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/puyp7cfu2ulvjnbnf1ku",
        "version": 1554432840,
        "signature": "f6f8e520f9a408c16a9c6e0e66d3b801219a5c6e",
        "width": 500,
        "height": 500,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T02:54:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 45203,
        "type": "upload",
        "etag": "1cb66a77e3b47c8ee1c428cc9fce739e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554432840/avalanche2019/puyp7cfu2ulvjnbnf1ku.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554432840/avalanche2019/puyp7cfu2ulvjnbnf1ku.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "42692",
          "dar": "1:1"
        },
        "frame_rate": 12,
        "bit_rate": 50459,
        "duration": 7.166667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/yjrsds0smdrirjh41omi",
        "version": 1554433055,
        "signature": "19b29eec9fa2a68081ab6ce097c5db8c49d8eb08",
        "width": 940,
        "height": 940,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T02:57:35Z",
        "tags": [],
        "bytes": 83480,
        "type": "upload",
        "etag": "f26addf344ac1fc49b11b81c0a6357f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554433055/avalanche2019/yjrsds0smdrirjh41omi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554433055/avalanche2019/yjrsds0smdrirjh41omi.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-06T02:48:15.911Z" }
      }
    ],
    "title": "",
    "description": "I animated the type I created last week for the poster (just realized that it's very close to Noah's sketch!)"
  },
  {
    "_id": "P3oYx8amEDw3MhupF",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "created_at": { "$date": "2019-03-01T04:09:58.721Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dkgdfywt9pwlnollzskd",
        "version": 1551413403,
        "signature": "add85c1e5961c307b4b94f788a444a44327aed0a",
        "width": 998,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T04:10:03Z",
        "tags": [],
        "bytes": 69654,
        "type": "upload",
        "etag": "987eb92ad615301b7e6cf6379cb16777",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551413403/avalanche2019/dkgdfywt9pwlnollzskd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551413403/avalanche2019/dkgdfywt9pwlnollzskd.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "line Challenge  2.0",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// draws a rectangle, where you tell it to!\n\n\nvar amplitude_slider;\nvar frequency_slider;\nvar timespeed_slider;\nvar speed = 0;\n\nvar startX = -500;\nvar startY = 0;\nvar endX = 300;\nvar endY = 0;\n\n\nfunction setup() {\n    createCanvas(500, 300);\n    \n    createP('Frequency');\n    frequency_slider = createSlider(0, 300, 50);\n\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 1000, 500);\n  \n    createP('Time Speed');\n    timespeed_slider = createSlider(0, 10, 5);\n\n\n}\n\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n\n    var amplitude = amplitude_slider.value()/10;\n    var frequency = frequency_slider.value()/5;\n    let timespeed = timespeed_slider.value()/ 150;\n    speed = timespeed + speed;\n\n    noiseDetail(1, .5);\n\n\n\n    fill(255);\n    noStroke();\n\n    // study this loop. do you understand how the line of ellipses is created?\n       for (i = 0; i < 1.9; i += 0.01) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n        // hint: drive offsetX and offsetY with noise() instead of random()\n        var offsetX = noise(frequency*i + speed) * amplitude * 10;\n        var offsetY = noise(frequency *i + speed) * amplitude * 10;\n\n        line(x , y, x+ offsetX, y + offsetY);\n         stroke(255);\n        // line(offsetX, offsetY, offsetX+100, offsetY);\n    }\n\n\n\n}"
  },
  {
    "_id": "P4A8DxGcof95ZtMB5",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-22T13:06:45.972Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uddvxilwqafr7hc7phdf",
        "version": 1555938520,
        "signature": "343e10e592c0bf52ecfc63746a91595a58cb9834",
        "width": 828,
        "height": 418,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-22T13:08:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 792759,
        "type": "upload",
        "etag": "8ac2b42d07632ef316ad52b95c06d8e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555938520/avalanche2019/uddvxilwqafr7hc7phdf.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555938520/avalanche2019/uddvxilwqafr7hc7phdf.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "88016",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "231708",
          "dar": "414:209"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 321668,
        "duration": 19.690522,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/luyicurrh1toszulmgqu",
        "version": 1555938526,
        "signature": "c874e7e1e9e957e53b85271e2ad1920a993a7de2",
        "width": 900,
        "height": 266,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-22T13:08:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 284405,
        "type": "upload",
        "etag": "fdb5756512ae829c7a381da9db03d2f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555938526/avalanche2019/luyicurrh1toszulmgqu.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555938526/avalanche2019/luyicurrh1toszulmgqu.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "76626",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "21348",
          "dar": "450:133"
        },
        "is_audio": false,
        "frame_rate": 59,
        "bit_rate": 100579,
        "duration": 22.62142,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/htmjmglm3a9n6zcvxv1k",
        "version": 1555938531,
        "signature": "54efaa0e570de91b7cf10c7e738286d24473df54",
        "width": 828,
        "height": 418,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-22T13:08:51Z",
        "tags": [],
        "bytes": 24000,
        "type": "upload",
        "etag": "00fac64b7d54b73560a10fdac84f0ec1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555938531/avalanche2019/htmjmglm3a9n6zcvxv1k.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555938531/avalanche2019/htmjmglm3a9n6zcvxv1k.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this piece, I have created a portion of Für Elise by Beethoven using Tone.js. \nI have used PolySynth and have adjusted the tone time to create sustain.",
    "inspiration_name": "Beethoven - Für Elise",
    "inspiration_url": "https://youtu.be/k_UOuSklNL4",
    "code": "// Tone.js\n// Beethoven - Für Elise\n\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n\n// First, create the synth.\n// Synth types: PolySynth, MonoSynth, Synth, DuoSynth, AMSynth, FMSynth, PluckSynth, MetalSynth, etc.\n// const synth = new Tone.Synth().toMaster();\nconst synth = new Tone.PolySynth({\n    //   oscillator: {\n    //     type: 'triangle', // sine, square, triangle, sawtooth, fat*\n    //   },\n    envelope: {\n        attack: 0.1,\n        decay: 0.3,\n        sustain: 1,\n        release: 3,\n    },\n});\n\n// Connect to the speakers.\nsynth.toMaster();\n\n\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n    // part 1\n    ['E5', '4n'],\n    ['D#5', '4n'],\n    ['E5', '4n'],\n    ['D#5', '4n'],\n    ['E5', '4n'],\n\n    ['B4', '4n'],\n    ['D5', '4n'],\n    ['C5', '4n'],\n    ['A4', '4n'],\n\n    ['rest', '1m'],\n\n    ['E4', '4n'],\n    ['G4', '4n'],\n    ['A4', '4n'],\n    ['B4', '4n'],\n\n    ['rest', '1m'],\n\n    ['E4', '4n'],\n    ['A4', '4n'],\n    ['B4', '4n'],\n    ['C5', '4n'],\n\n    ['rest', '1m'],\n\n    // part 2\n    ['E4', '4n'],\n    ['E5', '4n'],\n    ['D#5', '4n'],\n    ['E5', '4n'],\n    ['D#5', '4n'],\n    ['E5', '4n'],\n\n    ['B4', '4n'],\n    ['D5', '4n'],\n    ['C5', '4n'],\n    ['A4', '4n'],\n\n    ['rest', '1m'],\n\n    ['E4', '4n'],\n    ['G4', '4n'],\n    ['A4', '4n'],\n    ['B4', '4n'],\n\n    ['rest', '1m'],\n\n    ['E4', '4n'],\n    ['C5', '4n'],\n    ['B4', '4n'],\n    ['A4', '4n'],\n\n    ['rest', '1m'],\n];\n\nwindow.onmousedown = (e) => {\n    // Play the melody!\n\n    let t = Tone.now();\n    console.log('Presenting Für Elise by Beethoven:');\n    for (const note of melody) {\n        console.log(note);\n        if (note[0] !== 'rest') {\n            //   synth.triggerAttackRelease(note[0], Tone.Time(note[1]), t);\n            synth.triggerAttackRelease(note[0], Tone.Time(note[1]) + 0.1, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n};\n\nconsole.log('Click to play music!');"
  },
  {
    "_id": "P5kwhsuH5mdhoMScD",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T00:02:37.084Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/c4zqbjulw0ufjjpl00kn",
        "version": 1556668966,
        "signature": "51fd0995c93d2cdf87b1727e44d2d810eb8954f1",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T00:02:46Z",
        "tags": [],
        "bytes": 558091,
        "type": "upload",
        "etag": "0dbc16c7ec51b0d833a361e777451234",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556668966/avalanche2019/c4zqbjulw0ufjjpl00kn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556668966/avalanche2019/c4zqbjulw0ufjjpl00kn.jpg"
      },
      {
        "public_id": "avalanche2019/lpj4kg2hdf68ar65x39y",
        "version": 1556668969,
        "signature": "d64ae4c2012f9b168e85917c61e84e3df9be198c",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T00:02:49Z",
        "tags": [],
        "bytes": 696448,
        "type": "upload",
        "etag": "3074d780010361297bd052db207ae200",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556668969/avalanche2019/lpj4kg2hdf68ar65x39y.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556668969/avalanche2019/lpj4kg2hdf68ar65x39y.jpg"
      },
      {
        "public_id": "avalanche2019/t3lfbfbvsazcfv6xohbr",
        "version": 1556668978,
        "signature": "86d55d181798737f10bb38437e9cb7ba32ae18b6",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T00:02:58Z",
        "tags": [],
        "bytes": 521072,
        "type": "upload",
        "etag": "d2ccd6b3b151a6bca1de289a4d112e3c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556668978/avalanche2019/t3lfbfbvsazcfv6xohbr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556668978/avalanche2019/t3lfbfbvsazcfv6xohbr.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-01T04:04:02.786Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T14:13:24.219Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T18:05:06.869Z" }
      }
    ],
    "title": "",
    "description": "I'm getting a little addicted to this idea of using a CAD program to make useless, beautiful things."
  },
  {
    "_id": "PBnZ599WCBoYHD2Tz",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "created_at": { "$date": "2019-03-01T03:08:48.638Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/a6x2m60ytapqmdeqrhik",
        "version": 1551409738,
        "signature": "b2c6e392a22aa118ef6b6c8e84b8f85296721931",
        "width": 994,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T03:08:58Z",
        "tags": [],
        "bytes": 1094986,
        "type": "upload",
        "etag": "a5a9d14f2426dcfe9dee4099c3718d1f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551409738/avalanche2019/a6x2m60ytapqmdeqrhik.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551409738/avalanche2019/a6x2m60ytapqmdeqrhik.png"
      },
      {
        "public_id": "avalanche2019/cl8e9xa4moifdocxpcya",
        "version": 1551456599,
        "signature": "cdb5847209b3479332e4b32de7316d592c3a5539",
        "width": 1000,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T16:09:59Z",
        "tags": [],
        "bytes": 635051,
        "type": "upload",
        "etag": "97cd0710e04c091821a1fa59eb1be60c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551456599/avalanche2019/cl8e9xa4moifdocxpcya.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551456599/avalanche2019/cl8e9xa4moifdocxpcya.png"
      },
      {
        "public_id": "avalanche2019/tmojsjblcww0qfx9ndnq",
        "version": 1551456617,
        "signature": "a3fd566e172cc15f59c46469b4ab686404ca2b9f",
        "width": 1004,
        "height": 1006,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T16:10:17Z",
        "tags": [],
        "bytes": 609627,
        "type": "upload",
        "etag": "791f2b3ea2410d18f755aa1341c261f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551456617/avalanche2019/tmojsjblcww0qfx9ndnq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551456617/avalanche2019/tmojsjblcww0qfx9ndnq.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T17:43:41.457Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:21:00.389Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Stored Grid Placement - fixed -- on click the text now randomized.  And the ghosted text is randomized too (eliminated noise)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n\tlet font,\n  fontsize = 12;\n\n\tfunction preload() {\n  font = loadFont('Arial.ttf');\n}\n\n\nconst points = [];\n\nfunction setup() {\n  createCanvas(500, 500);\n  textFont(font);\n  textSize(fontsize);\n  textAlign(CENTER, CENTER);\n  noLoop();\n}\nfunction draw() {\n  background(50);\n  fill(200);\n  noStroke();\n  \n  let gap = 12;\n  let margin = 2;\n  translate(margin * 4, margin * 4);\n  \n  let counter = 35;\n\n    for (let y = 0; y < height - gap; y += gap) {\n    //  effect from random or noise\n    var offY = random(counter)*margin*0.0025;\n    //var offY = noise(counter)*margin;\n    var rY = floor(random(0,2));\n    if(rY==0){\n      y+=offY;\n    }else{\n      y-=offY;\n    }\n \n\t\t\tfor (let x = 0; x < width - gap; x += gap) {\n      \n      // Use the counter to retrieve individual letters by their Unicode number\n\t\t\tvar rL = floor(random(counter)); \n\t\t\tlet letter = char(rL);\n\n      // Add different color characters\n      if (\n        letter === 'G' ||\n        letter === 'R' ||\n        letter === 'I' ||\n        letter === 'D' ||\n        letter === 'Ǆ' ||\n        letter === 'Ɣ' ||\n        letter === 'Ǒ'\n      ) {\n        fill('#FF8000');\n      } else {\n        fill(255);\n      }\n      \n      //  effect from random or noise\n      var offX = random(counter)*margin*0.0025;\n      //var offX = noise(counter)*margin;\n      var rX = floor(random(0,2));\n      if(rX==0){\n        x+=offX;\n      }else{\n        x-=offX;\n      }\n\n      \n      // Draw the letter to the screen\n      text(letter, x, y);\n\n      \n      // Increment the counter\n      counter++;\n      \n\t\t\t//this is the ghosted text\n      for (var i = 0; i < .75; i++) {\n        // these points are not scattered in the same way\n  \n  \t\tthis.t = random(50);\n\t\t\tthis.x = width * noise(this.t+1);\n\t\t\tthis.y = height * noise(this.t+10);\n\t\t\tthis.diameter = random(500);\n\n      \tnoFill();\n      \tstrokeWeight(.25);\n      \tstroke(255,100);\n      \t//text(this.x, this.y, this.diameter, this.diameter);\n        text(letter, this.x, this.y);\n        \n        }\n    }\n\n      // Increment the counter\n      counter++;\n    }\n    }"
  },
  {
    "_id": "PCR9bKngFt4udLz4C",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-02-28T00:09:42.881Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/smhsgl54jonmvmel1dug",
        "version": 1551312627,
        "signature": "aa491a8e5cf8d7e97a0f479523cce6b12c98c6c0",
        "width": 992,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T00:10:27Z",
        "tags": [],
        "bytes": 76394,
        "type": "upload",
        "etag": "1361777a7759eba6dcea5f7f8dc9a41b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551312627/avalanche2019/smhsgl54jonmvmel1dug.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551312627/avalanche2019/smhsgl54jonmvmel1dug.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Dot Challenge",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// Dot Challenge Starting Point\n\nvar radius, x, y, h, hv, s, b;\n\nfunction setup() {\n    createCanvas(500, 500);\n    colorMode(HSB);\n}\n\nfunction draw() {\n    background(0,0,18);\n    noStroke();\n    ellipseMode(CENTER);\n\n    var noiseFrequency =.4;\n    var huuue = 360;\n\n    for (var i = 0; i < 100; i++) {\n\n        x = noise(i * noiseFrequency,0) * width;\n        y = noise(i * noiseFrequency, 1000) * height;\n        hv = random(huuue);\n        h = noise(hv * noiseFrequency) * huuue\n        s = 100;\n        b = 100;\n        fill(h, s, b);\n        radius = map(h , 0, huuue, 3, 20);\n        ellipse(x, y, radius, radius);\n    }\n    noLoop();\n}"
  },
  {
    "_id": "PCtXHPQkZJ8gDNa7r",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T05:26:36.752Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z5ga7zh42z49klrp60mh",
        "version": 1557466287,
        "signature": "5035cfec53de8fa4215242fccd8cdbec011877b9",
        "width": 994,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T05:31:27Z",
        "tags": [],
        "bytes": 157393,
        "type": "upload",
        "etag": "e1a53d72554f8e874921827096b60e5d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557466287/avalanche2019/z5ga7zh42z49klrp60mh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557466287/avalanche2019/z5ga7zh42z49klrp60mh.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T14:45:29.664Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T14:49:40.273Z" }
      }
    ],
    "title": "",
    "description": "AVOCADOOOS",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.js\n// require /microgames/sketches/p5.play.js\n// code from https://creative-coding.decontextualize.com/making-games-with-p5-play/\n\nvar player;\nvar score = 0;\n\nfunction setup() {\n  var avocado = loadImage(\"https://i.ibb.co/zbvcP9w/avocado-Pxl.png\");\n  var me = loadImage(\"https://i.ibb.co/H4Vrb7j/mePxl.gif\");\n   createCanvas(500,500);\n\n   avocados = new Group();\n   for (var i = 0; i < 100; i++) {\n     var c = createSprite(\n       random(50, width-50),\n       random(50, height-50),\n       3, 3);\n     c.addImage(\"main\", avocado);\n     c.shapeColor = color(255, 255, 0);\n     c.scale = 0.4;\n     avocados.add(c);\n   }\n   player = createSprite(50, 50, 40, 40);\n   player.addImage(\"main\", me);\n   player.scale = 1;\n   player.shapeColor = color(255);\n }\n\n function draw() {\n   background(75, 206, 221);\n   player.overlap(avocados, getavo);\n   drawSprites();\n   fill(255);\n   noStroke();\n   textSize(20);\n   textAlign(CENTER, CENTER);\n   if (avocados.length > 0) {\n     text(score, 470, 30);\n   }\n   else {\n     text(\"nom nom nom!\", width/2, height/2);\n   }\n }\n\n\n function getavo(player, avo) {\n   avo.remove();\n   score += 1;\n\n }\n\n\n function keyPressed() {\n  if (keyCode == RIGHT_ARROW) {\n    player.setSpeed(1.5, 0);\n  }\n  else if (keyCode == DOWN_ARROW) {\n    player.setSpeed(1.5, 90);\n  }\n  else if (keyCode == LEFT_ARROW) {\n    player.setSpeed(1.5, 180);\n  }\n  else if (keyCode == UP_ARROW) {\n    player.setSpeed(1.5, 270);\n  }\n  else if (key == ' ') {\n    player.setSpeed(0, 0);\n  }\n  return false;\n}"
  },
  {
    "_id": "PCua4nwbK4LBw3tDu",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-02-24T07:52:28.558Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wphl4tkryfrd2z2nm5pl",
        "version": 1550995016,
        "signature": "d3180265e3dfc2fdf71601acacee9ab9110d1354",
        "width": 1028,
        "height": 1100,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-24T07:56:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 2925567,
        "type": "upload",
        "etag": "ee8f14b2d75ea229c70ed4db6f54bddb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550995016/avalanche2019/wphl4tkryfrd2z2nm5pl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550995016/avalanche2019/wphl4tkryfrd2z2nm5pl.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "314388",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "552219",
          "dar": "257:275"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 874935,
        "duration": 26.75,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-24T18:18:14.7Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-24T19:00:47.923Z" }
      },
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-26T00:23:35.108Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-26T03:23:25.498Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-26T22:02:26.701Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T03:04:26.897Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "My spin on challenge 2 and me slowly understanding p5.sound better",
    "inspiration_name": "Required Challenge 2 / spin",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nvar play = false;\nvar keys = 5;\nvar startX = 0;\nvar endX = 390;\nvar startY = 120;\nvar endY = 120;\nvar noisePosition = 0;\n// E, F♯, G, A, B, C, and D\nvar mySynths = [];\nvar myMonos = [];\nfor (let index = 0; index < keys; index++) {\n  myMonos.push(new p5.MonoSynth());\n  myMonos[index].oscillator.setType(\"sawtooth\");\n  // console.log(myMonos[index].oscillator);\n\n  mySynths.push(new p5.PolySynth());\n  // console.log(new p5.AudioVoice());\n  // myOscs.push(new p5.SqrOsc());\n  // console.log(mySynths, index);\n  mySynths[index].setADSR(0.1, 0.1, 0.1, 0.2);\n}\nvar pitches = [\"C3\", \"E3\", \"C3\", \"G3\", \"C2\"];\n// console.log(pitches.reverse());\nfunction setup() {\n  angleMode(DEGREES);\n  ellipseMode(CENTER);\n\n  cnv = createCanvas(500, 300);\n  cnv.mouseClicked(mouseClickCanvas);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 40, 2, 0.01);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 10, 5, 0.1);\n  createP(\"Time Speed\");\n  speed_slider = createSlider(0, 0.4, 0.05, 0.01);\n  doWhilePause();\n}\n\nfunction draw() {\n  if (play) {\n    doWhilePlay();\n  } else {\n    doWhilePause();\n  }\n}\n\nfunction doWhilePause() {\n  for (let index = 0; index < myMonos.length; index++) {\n    myMonos[index].triggerRelease();\n  }\n  background(255);\n  push();\n  fill(0);\n  textSize(24);\n  textStyle(BOLD);\n  textFont(\"Helvetica\");\n  textAlign(CENTER);\n  text(\"click to play\", width / 2, height / 2);\n  pop();\n}\n\nfunction doWhilePlay() {\n  background(50);\n\n  var amplitude = amplitude_slider.value();\n  var frequency = frequency_slider.value();\n  var speed = speed_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  noisePosition += speed;\n  // currentNotes = [];\n  for (i = 0; i < 1; i += 1 / keys) {\n    var x = lerp(endX, startX, i);\n    var y = lerp(startY, endY, i);\n\n    // var offsetX = noise(frequency * i + noisePosition, 0) * amplitude * 10;\n    var offsetY = noise(frequency * i + noisePosition, 0) * amplitude * 10;\n    var ballBottom = y + offsetY + 5;\n    var keyInitialPos = y + 26;\n    var keyIndex = floor(keys - 1 - i * (keys - 1));\n\n    if (ballBottom >= keyInitialPos) {\n      fill(255, 0, 0);\n      keyPos = ballBottom;\n\n      // currentNotes.push(keyIndex);\n      // console.log(keyIndex);\n      // mySynths[keyIndex].noteAttack(pitches[keyIndex], 0.1);\n      myMonos[keyIndex].triggerAttack(pitches[keyIndex], 0.1);\n    } else {\n      keyPos = keyInitialPos;\n      fill(255);\n      myMonos[keyIndex].triggerRelease();\n      // currentNotes.splice(currentNotes.indexOf(keyIndex), 1);\n    }\n    // console.log(currentNotes);\n    ellipse(x, y + offsetY, 10, 10);\n    // console.log(ballBottom, keyPos);\n    push();\n    stroke(255);\n    line(x - 5, keyPos, x + 5, keyPos);\n    pop();\n  }\n}\n\nfunction mouseClickCanvas() {\n  if (play) {\n    play = false;\n  } else {\n    play = true;\n  }\n}"
  },
  {
    "_id": "PEgSSbYsyAYcmuhNY",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:36:13.4Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ilxeiaknn1qwxcibuwnd",
        "version": 1554485981,
        "signature": "4d9e4c73bd0a2e0932c8b0011aaed59a57d58561",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T17:39:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 296114,
        "type": "upload",
        "etag": "47209bdba39849d8c42d10d19e5795dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554485981/avalanche2019/ilxeiaknn1qwxcibuwnd.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554485981/avalanche2019/ilxeiaknn1qwxcibuwnd.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317376",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "428492",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 933132,
        "duration": 2.5,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "PJgsh2eCg26TgHcDR",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T08:00:26.842Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mnkcjafcodz3qlufvt4r",
        "version": 1556265642,
        "signature": "013f0623e310b77cfb83a9b4c051162a19529ca1",
        "width": 854,
        "height": 480,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T08:00:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 7732363,
        "type": "upload",
        "etag": "a3196752db1bf7bde1c9a69217c6443d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556265642/avalanche2019/mnkcjafcodz3qlufvt4r.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556265642/avalanche2019/mnkcjafcodz3qlufvt4r.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "124987",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1422944",
          "dar": "427:240"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1560779,
        "duration": 39.633333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T15:10:52.771Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T15:23:20.398Z" }
      }
    ],
    "title": "",
    "description": "Dancing samurai from D12"
  },
  {
    "_id": "PMow8BSuLuHpexRJC",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T23:26:01.176Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rtohi2muig9br541iwcx",
        "version": 1550100466,
        "signature": "041e1d9dc1e61b8ed660855f456627ca8215e8de",
        "width": 590,
        "height": 598,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-13T23:27:46Z",
        "tags": [],
        "bytes": 386831,
        "type": "upload",
        "etag": "55783d48fb5033f7a52e2cf274192b26",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550100466/avalanche2019/rtohi2muig9br541iwcx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550100466/avalanche2019/rtohi2muig9br541iwcx.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T05:22:12.636Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar counter = 0;\nvar counter_slider, size_slider;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(244, 217, 66);\n  \n  createP('Ellipse Counter');\n  counter_slider = createSlider(10, 1000,500);\n  \n  createP('Ellipse Size');\n  size_slider = createSlider(10, 100,50);\n\n}\n\nfunction draw() {\n  counter += TWO_PI / counter_slider.value();\n  var s = sin(radians(frameCount)) * 100;\n  var x = width / 2 + cos(counter) * 100;\n  var y = height / 2 + sin(counter * 5) * cos(counter * 1) * 100;\n  var y2 = height / 2 + cos(counter * 5) * 100;\n  \n  var size = size_slider.value();\n  stroke(random(255), 0, random(250));\n  fill(255, random(255));\n  ellipse(x, y, size, size);\n}"
  },
  {
    "_id": "PPhgZpxdn9np4WqwT",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:32:06.497Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dhzxmbof8m3gvtzbk1j2",
        "version": 1548459135,
        "signature": "4c262ae65151f554b0f64dc0f2040741b3d79ce9",
        "width": 1512,
        "height": 2016,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:32:15Z",
        "tags": [],
        "bytes": 355191,
        "type": "upload",
        "etag": "a82cf682bd690028b7fae8f8a538821a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459135/avalanche2019/dhzxmbof8m3gvtzbk1j2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459135/avalanche2019/dhzxmbof8m3gvtzbk1j2.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "First try"
  },
  {
    "_id": "PRAbBem3CSgzRHHnH",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T23:03:16.726Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ltcljy7fyct2yjvocipf",
        "version": 1549580622,
        "signature": "b90e92852b9d769a4461350d8ae8aa11f690c274",
        "width": 1169,
        "height": 742,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T23:03:42Z",
        "tags": [],
        "bytes": 148986,
        "type": "upload",
        "etag": "6853fa290ae9c67e10724479905c4249",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549580622/avalanche2019/ltcljy7fyct2yjvocipf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549580622/avalanche2019/ltcljy7fyct2yjvocipf.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T00:20:37.337Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T18:08:05.927Z" }
      }
    ],
    "title": "",
    "description": "sun + mountains",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nfunction setup() {\n  createCanvas(windowWidth,windowHeight); \n\t var one=random(0,255);\n\t  var two=random(0,255);\n\t  var three=random(0,255);\n\tbackground(one,two,three);\nvar x =random(100,windowWidth-100);\n\tvar r = random(100,300);\n\tnoStroke();\n\tfill('#E54D38');\n\t ellipse(x,100,r,r);\n\t\n  noStroke();\n\n\tvar top=random(100,501);\n  for(var i = top; i >0; i++){ \n\t\ti=i-70;\n\n  var one=random(0,255);\n\t  var two=random(0,255);\n\t  var three=random(0,255);\n\tfill(one,two,three);\n\th =height-i;\n\tw= width-i;\n  beginShape();\n\tvertex(0, h+100);\n  vertex(0, h);\n  vertex(width * 0.2, h * 0.7);\n  vertex(width * 0.35, h * 0.9);\n  vertex(width * 0.50, h * 0.6);\n  vertex(width * 0.70, h * 0.9);\n  vertex(width * 0.85, h * 0.7);\n  vertex(width, h);\n\tvertex(width, h+100);\n  endShape();}\n}"
  },
  {
    "_id": "PRYeQAMJsF6rRdYRn",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T22:53:30.907Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n8plifw6al3nnf2pxn4f",
        "version": 1554418457,
        "signature": "ec36acbb0c4332db617d516cbd66e6b5441dce6b",
        "width": 1572,
        "height": 1490,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-04T22:54:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 11372186,
        "type": "upload",
        "etag": "fadf3241d8f1111bd182f7f47771ec36",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554418457/avalanche2019/n8plifw6al3nnf2pxn4f.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554418457/avalanche2019/n8plifw6al3nnf2pxn4f.mov",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "mjpeg",
          "level": -99,
          "profile": "192",
          "bit_rate": "17780956",
          "dar": "786:745"
        },
        "frame_rate": 20,
        "bit_rate": 18195497,
        "duration": 5,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "\"Talking self portrait\"\nOld fashioned animation: Flip book style"
  },
  {
    "_id": "PRhLxjmj66XT5eghE",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T15:12:27.046Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jpomm02udf89cehxfxlj",
        "version": 1549638755,
        "signature": "9631e475d67eaea1d9e647708a96624253f454a2",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T15:12:35Z",
        "tags": [],
        "bytes": 75962,
        "type": "upload",
        "etag": "ef3b6c0bd234bbf9f01ba7d785a48981",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549638755/avalanche2019/jpomm02udf89cehxfxlj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549638755/avalanche2019/jpomm02udf89cehxfxlj.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing with code from class (credit Justin).",
    "inspiration_name": "lines/path"
  },
  {
    "_id": "PSv6SJvABkDLfBwkZ",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T17:55:15.712Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wrom4tmmlf0bc4hl5rot",
        "version": 1555696579,
        "signature": "b665c6126790f0f64c154b35432a00667261689c",
        "width": 1114,
        "height": 1142,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T17:56:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 610749,
        "type": "upload",
        "etag": "2f6e970607caa8e725862cea9f5d03c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555696579/avalanche2019/wrom4tmmlf0bc4hl5rot.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555696579/avalanche2019/wrom4tmmlf0bc4hl5rot.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "91123",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "340177",
          "dar": "557:571"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 436248,
        "duration": 11.200023,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Pong game with sound effects. Going to keep working on this with new noises.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\n\n\n\n\n\nlet canvasX = innerWidth * 0.8;\nlet canvasY = innerHeight * 0.8;\nlet speedX = [];\nlet speedY = [];\nlet ballX = [];\nlet ballY = [];\nlet level, paddleSize, score;\nlet color = \"#3A7279\";\nlet highScore = 0;\nlet quantity = 3;\n\nlet kick;\nlet clap;\n\nlet playing = false;\n\nfunction preload() {\n  kick = loadSound('/sound/sketches/kick.wav');\n  clap = loadSound('/sound/sketches/clap.wav');\n}\n\n\nfunction setup() {\n  canvas = createCanvas(canvasX, canvasY);\n//   canvas.parent(\"sketch-holder\");\n  score = 0;\n  // establish ball starting position and speed\n  for (var i = 0; i < quantity; i++) {\n    ballX[i] = random(5, 495);\n    ballY[i] = random(5, 395);\n    speedX[i] = -6;\n    speedY[i] = -6;\n  }\n  // establish starting paddle w x h\n  paddleWidth = 150;\n  paddleHeight = 15;\n}\n\nfunction draw() {\n  background(\"#3d3d3d\");\n\n  // create moving ball that stays within play\n  // create paddle\n  fill(\"#fff\");\n  noStroke();\n  rect(mouseX, windowHeight * 0.725, paddleWidth, paddleHeight, 20);\n\n  for (var i = 0; i < quantity; i++) {\n    fill(\"#EAC771\");\n    noStroke();\n    ellipse(ballX[i], ballY[i], 30, 30);\n    ballX[i] = ballX[i] + speedX[i];\n    ballY[i] = ballY[i] + speedY[i];\n\n    if (ballX[i] >= canvasX - 15 || ballX[i] <= 15) {\n      speedX[i] *= -1;\n      kick.play();\n      \n    }\n    if (ballY[i] <= 15) {\n      speedY[i] *= -1;\n      kick.play();\n    }\n    \n     if (ballY[i] >= canvasY) {\n            kick.stop();\n\n    }\n    // handle ball to paddle contact\n    if (\n      ballX[i] > mouseX &&\n      ballX[i] < mouseX + paddleWidth &&\n      ballY[i] + 15 >= windowHeight * 0.75 - 15 &&\n      ballY[i] < canvasY\n    ) {\n      speedY[i] *= -1;\n      score++;\n      clap.play();\n\n      // make more difficult as you level up\n      if (level == \"INTERMEDIATE\") {\n        speedY[i] = -7;\n      }\n      if (level == \"EXPERT\") {\n        speedY[i] = speedY[i] + speedY[i] * 0.02;\n      }\n    }\n\n    // check if all balls are outside canvas\n    function totalLoser(ball) {\n      return ball >= canvasY;\n    }\n\n    // game over message\n    if (ballY.every(totalLoser)) {\n      fill(\"#fff\");\n      noStroke();\n\n      textSize(40);\n      textAlign(CENTER);\n      text(\"Game Over\", canvasX / 2, (windowHeight * 0.65) / 2);\n\n      fill(color);\n      if (level == \"BEGINNER\") {\n        rect(canvasX / 2 + 13, canvasY / 2 - 15, 92, 20, 4);\n      } else if (level == \"INTERMEDIATE\") {\n        rect(canvasX / 2 - 6, canvasY / 2 - 15, 128, 20, 4);\n      } else {\n        rect(canvasX / 2 + 21, canvasY / 2 - 15, 75, 20, 4);\n      }\n\n      textSize(16);\n      fill(\"#fff\");\n      text(\"Your level: \" + level, canvasX / 2, canvasY / 2);\n\n      text(\n        \"But you can do better than \" + score + \" points...\",\n        canvasX / 2,\n        canvasY / 1.8\n      );\n\n      textSize(18);\n      fill(\"#f65856\");\n      text(\"CLICK TO PLAY AGAIN\", mouseX, mouseY - 15);\n\n      // set highscore\n      if (score > highScore) {\n        highScore = score;\n      }\n      // removes canvas when game ends to stop continuous draw function always running during development\n      // remove();\n    }\n  }\n\n  // display score\n  fill(\"#D8D6C4\");\n  textSize(20);\n  textAlign(LEFT);\n  textFont(\"monospace\");\n  text(\"SCORE: \" + score, 16, 30);\n\n  // display high score\n  fill(\"#D8D6C4\");\n  textSize(20);\n  textAlign(LEFT);\n  textFont(\"monospace\");\n  text(\"HIGH SCORE: \" + highScore, 16, 50);\n\n  // level specific outcomes\n  if (score <= 5) {\n    level = \"BEGINNER\";\n    color = \"#3A7279\";\n  }\n  if (score <= 10 && score > 5) {\n    level = \"INTERMEDIATE\";\n    color = \"#99751D\";\n    // speed level 2\n    fill(\"#1DD3B0\");\n    rect(canvasX - 36, 16, 6, 18, 4);\n  }\n  if (score > 10) {\n    level = \"EXPERT\";\n    color = \"#21A736\";\n\n    // speed level 3\n    fill(\"#1DD3B0\");\n    rect(canvasX - 36, 16, 6, 18, 4);\n    fill(\"#1DD3B0\");\n    rect(canvasX - 26, 16, 6, 18, 4);\n  }\n\n  // display speed label top right\n  textSize(15);\n  fill(\"#fff\");\n  textAlign(RIGHT);\n  text(\"Speed: \", canvasX - 46, 30);\n\n  // display bars for speed top right\n  stroke(\"#1DD3B0\");\n  noFill();\n  rect(canvasX - 46, 16, 6, 18, 4);\n  stroke(\"#1DD3B0\");\n  noFill();\n  rect(canvasX - 36, 16, 6, 18, 4);\n  stroke(\"#1DD3B0\");\n  noFill();\n  rect(canvasX - 26, 16, 6, 18, 4);\n  // speed level 1\n  fill(\"#1DD3B0\");\n  rect(canvasX - 46, 16, 6, 18, 4);\n}\n\nfunction mouseReleased() {\n  setup();\n}\n\n// ability to use left and right arrows to control paddle\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    mouseX -= 60;\n  } else if (keyCode === RIGHT_ARROW) {\n    mouseX += 60;\n  }\n}\n\n// centered canvas on window resize\nfunction windowResized() {\n  resizeCanvas(canvasX, canvasY);\n}"
  },
  {
    "_id": "PbKJ44f2Xa48hF7ot",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T19:52:36.372Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/we8xscguwwn9kywtfxic",
        "version": 1550865168,
        "signature": "4408c904596fd4105c2669aff332646cf27de15b",
        "width": 2484,
        "height": 1352,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T19:52:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 2026059,
        "type": "upload",
        "etag": "4f0027ebad13ff3ad3cd69defe3ebfa2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550865168/avalanche2019/we8xscguwwn9kywtfxic.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550865168/avalanche2019/we8xscguwwn9kywtfxic.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "990109",
          "dar": "621:338"
        },
        "frame_rate": 60,
        "bit_rate": 995402,
        "duration": 16.283333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "PjKM6aoFWAX4D3qYa",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "created_at": { "$date": "2019-02-28T21:27:03.082Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gzt5ksvuibogni16oga9",
        "version": 1551389241,
        "signature": "976aae1199fea060866d066fe90ed95b3683bde7",
        "width": 988,
        "height": 1040,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T21:27:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 5998875,
        "type": "upload",
        "etag": "76ef6e44822f2fd6e4652190fe9b603b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551389241/avalanche2019/gzt5ksvuibogni16oga9.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551389241/avalanche2019/gzt5ksvuibogni16oga9.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "3192384",
          "dar": "19:20"
        },
        "frame_rate": 60,
        "bit_rate": 3199400,
        "duration": 15,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/jdbetsvgd09aepv0stzp",
        "version": 1551389254,
        "signature": "7647d5561ebbc74e7ff77c37fde1b3f7bb8bd15b",
        "width": 988,
        "height": 1028,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T21:27:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 11022094,
        "type": "upload",
        "etag": "d7ece654b048f9a3a281e07990cdcaee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551389254/avalanche2019/jdbetsvgd09aepv0stzp.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551389254/avalanche2019/jdbetsvgd09aepv0stzp.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "6081102",
          "dar": "247:257"
        },
        "frame_rate": 60,
        "bit_rate": 6088153,
        "duration": 14.483333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 2 and expanding the idea -- I think I understand this a little better -- the key seemed to be the noise and time...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar frequency_slider;\nvar amplitude_slider;\nvar timeSpeed_slider;\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\n\nfunction setup() {\n    createCanvas(500, 300);\n\n  \n  \tcreateP('Frequency');\n    frequency_slider = createSlider(0, 100, 10);\n  \n  \tcreateP('Amplitude');\n    amplitude_slider = createSlider(0, 200, 30);\n  \n  \tcreateP('Time speed');\n    timeSpeed_slider = createSlider(0, 60, 20);  \n\n\n}\n\n\nfunction draw() {\n    background(20);\n  \t//background(51,62,115);\n  \n    ellipseMode(CENTER);\n\n    var amplitude = amplitude_slider.value() / 100;\n    var time = timeSpeed_slider.value() / 100;\n    var frequency = frequency_slider.value() / 500;  \n\n    noiseDetail(1,.07);\n\n\n\n    fill(180);\n    noStroke();\n\n    // study this loop. do you understand how the line of ellipses is created?\n    for (i = 0; i < 1; i += .02) { \n        var x = lerp(startX, endX, i);\n \t\t\t\tvar y = lerp(startY, endY, i);\n      \n      \t//applying values to the offset through the TimeSpeed slider\n      \tvar noiseTime = (noise(100) * frameCount * time);\n\n\n        // hint: drive offsetX and offsetY with noise() instead of random()\n        var offsetX = noise(x * frequency + noiseTime, x * frequency + noiseTime) * 20 * amplitude;\n        var offsetY = noise(y * frequency + noiseTime, y * frequency + noiseTime) * 40 * amplitude;\n      \n        //var offsetX = (random() - .5) * amplitude * 10;\n        //var offsetY = (random() - .5) * amplitude * 10;\n\n      \n\n\n        push();\n      \tfill(250,47,216);\n      \t//fill(146,122,216);\n      \n      \tellipse(x +4 + offsetX, y+4 + offsetY, 2, 2);\n      \tpop();\n      \n      \tellipse(x + offsetX*2, y + offsetY*8, 1, 150);\n    }\n}"
  },
  {
    "_id": "PmXp8uMp7qsFp99kt",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T03:13:58.113Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/whbnhvsiyrnfqqafsnbp",
        "version": 1550718850,
        "signature": "2341e5959d374a61be571664e069de1990afcf75",
        "width": 974,
        "height": 976,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T03:14:10Z",
        "tags": [],
        "bytes": 221069,
        "type": "upload",
        "etag": "f0781b70a753cf6938daba5f586803d0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550718850/avalanche2019/whbnhvsiyrnfqqafsnbp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550718850/avalanche2019/whbnhvsiyrnfqqafsnbp.png"
      },
      {
        "public_id": "avalanche2019/cmnngy2jp7gmdt4pktoh",
        "version": 1550718856,
        "signature": "3e1a8bd9204c33dd3785e0a095fa982fb8f17f4a",
        "width": 970,
        "height": 976,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T03:14:16Z",
        "tags": [],
        "bytes": 206531,
        "type": "upload",
        "etag": "b34f40057abf537e30bc45a0bcab77b7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550718856/avalanche2019/cmnngy2jp7gmdt4pktoh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550718856/avalanche2019/cmnngy2jp7gmdt4pktoh.png"
      },
      {
        "public_id": "avalanche2019/pehdot6bqyxuijvxwa1w",
        "version": 1550718874,
        "signature": "266bc7f63cc275a6e0e33474b2e9a0cbc75f8347",
        "width": 502,
        "height": 502,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T03:14:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 230008,
        "type": "upload",
        "etag": "bc97b08303ed83b50d77355a90368420",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550718874/avalanche2019/pehdot6bqyxuijvxwa1w.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550718874/avalanche2019/pehdot6bqyxuijvxwa1w.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "241479",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 248087,
        "duration": 7.416992,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T17:59:09.804Z" }
      }
    ],
    "title": "",
    "description": "I attached a video of it because the scene is a bit heavy to render.",
    "inspiration_name": "floating terrain",
    "inspiration_url": "https://www.youtube.com/watch?v=IKB1hWWedMk",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// code by Daniel Shiffman \"3D Terrain Generation with Perlin Noise in Processing\" https://www.youtube.com/watch?v=IKB1hWWedMk\n\nvar cols, rows;\nvar scallee = 8;\n\nvar h = 800;\nvar w = 800;\n\nvar flying = 0;\nvar terrain = [];\n\nfunction setup() {\n  createCanvas(500, 500, WEBGL);\n  cols = w / scallee;\n  rows = h / scallee;\n\n  for (var x = 0; x < cols; x++) {\n    terrain[x] = [];\n    for (var y = 0; y < rows; y++) {\n      terrain[x][y] = 0;\n    }\n  }\n}\n\nfunction draw() {\n  background(240);\n  flying -= 0.4;\n  var yoff = flying;\n  for (var y = 0; y < rows; y++) {\n    var xoff = 0;\n    for (var x = 0; x < cols; x++) {\n      terrain[x][y] = map(noise(xoff, yoff), 0, 1, -150, 150);\n      xoff += 0.02;\n    }\n    yoff += 0.02;\n  }\n\n  translate(0, 120);\n  rotateX(PI/2.3);\n  smooth();\n  strokeWeight(0.18);\n  stroke(0);\n  translate(-w/2, -h*1.5);\n  for (var y = 0; y < rows-1; y++) {\n    beginShape(POINTS);\n    for (var x = 0; x < cols; x++) {\n      vertex(x*scallee, y*scallee, terrain[x][y]);\n      vertex(x*scallee, (y+1)*scallee, terrain[x][y+1]);\n    }\n    endShape();\n  }\n}"
  },
  {
    "_id": "PoCtHJzFHdtctZJaQ",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T22:46:40.235Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eiyudglgh886r6jz3nqs",
        "version": 1548974805,
        "signature": "0b7d88f619bde4a855235750fa3be85288eee673",
        "width": 3300,
        "height": 2550,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T22:46:45Z",
        "tags": [],
        "bytes": 1232579,
        "type": "upload",
        "etag": "5941b49c239b55b487e08040fc473c5b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548974805/avalanche2019/eiyudglgh886r6jz3nqs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548974805/avalanche2019/eiyudglgh886r6jz3nqs.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Created by Illustrator. Inspired by contrast colour and the idea of tangram."
  },
  {
    "_id": "PsAwGxDi2gCALJCkP",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T03:17:08.287Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jrnbg51be9lo2pdg8u0d",
        "version": 1555039082,
        "signature": "90992cacf5393ca084d4cc7045ac4001490ce423",
        "width": 1284,
        "height": 1356,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:18:02Z",
        "tags": [],
        "bytes": 58417,
        "type": "upload",
        "etag": "f5a54fd363e5a8bbc871caaf102399d4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555039082/avalanche2019/jrnbg51be9lo2pdg8u0d.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555039082/avalanche2019/jrnbg51be9lo2pdg8u0d.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "play around with tracery",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    'top': ['#div#'],\n    'div': ['<div style=\"padding:200px 50px 200px; 50px; background:#background# ;border: #borderSize# #borderType# #borderColor#; text-align: center; text-transform: uppercase; font-family: sans-serif; margin: 10px;position:absolute; top:2%;left:2%;font-size:10px;\">#sentence# </div>'],\n//    'borderSize': ['1px', '4px', '10px'],\n//    'borderType': ['solid', 'dashed', 'dotted'],\n//    'borderColor': ['black', 'gray'],\n    'background': ['pink', 'yellow', 'violet'],\n\t\"sentence\": [\"#color.capitalize# #animal.s# are #often# #mood#.\",\"#animal.a.capitalize# is #often# #mood#, unless it is #color.a# one.\"]\n,\t\"often\": [\"rarely\",\"never\",\"often\",\"almost always\",\"always\",\"sometimes\"]\n,\t\"color\": [\"orange\",\"blue\",\"white\",\"black\",\"grey\",\"purple\",\"indigo\",\"turquoise\"]\n,\t\"animal\":[\"unicorn\",\"raven\",\"sparrow\",\"scorpion\",\"coyote\",\"eagle\",\"owl\",\"lizard\",\"zebra\",\"duck\",\"kitten\"]\n,\t\"mood\": [\"vexed\",\"indignant\",\"impassioned\",\"wistful\",\"astute\",\"courteous\"]\n,\t\"natureNoun\": [\"ocean\",\"mountain\",\"forest\",\"cloud\",\"river\",\"tree\",\"sky\",\"earth\",\"void\",\"desert\"]\n\n\n}\n\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten('#top#');\n\n    const storyDiv = document.createElement('div');\n    storyDiv.innerHTML = story;\n\n    document.body.insertAdjacentElement('beforeend', storyDiv);\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "PxFNig2ctitWwfwQq",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "created_at": { "$date": "2019-02-01T06:34:48.38Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bgi3bpvddxmbcs1xznxu",
        "version": 1549002893,
        "signature": "796b3726391108cbe499d9365f676b879f3460e0",
        "width": 800,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T06:34:53Z",
        "tags": [],
        "bytes": 149445,
        "type": "upload",
        "etag": "30f2b68689442decb25d43101b9a5fcd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549002893/avalanche2019/bgi3bpvddxmbcs1xznxu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549002893/avalanche2019/bgi3bpvddxmbcs1xznxu.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Taken from a picture of house windows and roof",
    "inspiration_name": "Tiles 2"
  },
  {
    "_id": "PyNfnL67Wr7GPcafj",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-26T20:19:14.219Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zuf75mugwjaiyhhavhu5",
        "version": 1553650955,
        "signature": "f5721b1d9a7a29e8776b3345d3236c57c5ea2ef4",
        "width": 1210,
        "height": 1434,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-27T01:42:35Z",
        "tags": [],
        "bytes": 962425,
        "type": "upload",
        "etag": "98c4e120cbb1a9fdc144a1e668062d4a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553650955/avalanche2019/zuf75mugwjaiyhhavhu5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553650955/avalanche2019/zuf75mugwjaiyhhavhu5.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Poster!"
  },
  {
    "_id": "Q5LsAQNHHAfvBJ4Ms",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T04:11:42.55Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/smdxvd3anulitp9uhxhp",
        "version": 1555560714,
        "signature": "1af938141ccc9afd61a3b7933ab62b06c17b228a",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-18T04:11:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 6979180,
        "type": "upload",
        "etag": "0f50522cc86e8e4c8b357b927b4ffd01",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555560714/avalanche2019/smdxvd3anulitp9uhxhp.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555560714/avalanche2019/smdxvd3anulitp9uhxhp.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "152332",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "355866",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 517129,
        "duration": 107.946,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ggur8xzemuatlkczvbq0",
        "version": 1555560864,
        "signature": "ce998762b33a058e5aa0949026d6d6c975d114ac",
        "width": 877,
        "height": 503,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-18T04:14:24Z",
        "tags": [],
        "bytes": 25907,
        "type": "upload",
        "etag": "76fce303462d2c20db5bce1be082ac4c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555560864/avalanche2019/ggur8xzemuatlkczvbq0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555560864/avalanche2019/ggur8xzemuatlkczvbq0.jpg"
      },
      {
        "public_id": "avalanche2019/wnwf50ivdw773o8os2nx",
        "version": 1555560867,
        "signature": "663587fd9f32a7ed29873684f8d86f1d8f7ab3b5",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-18T04:14:27Z",
        "tags": [],
        "bytes": 30696,
        "type": "upload",
        "etag": "121adf68c7f48e7b84994365f07eda2a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555560867/avalanche2019/wnwf50ivdw773o8os2nx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555560867/avalanche2019/wnwf50ivdw773o8os2nx.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:55:04.198Z" }
      }
    ],
    "title": "",
    "description": "Adding on to the last sketch, in this project, I have created a piece of RnB music in Garage Band and used After Effects to add sound visualization and other effects to that piece. \nI have used masks and shapes to create CF letters, that change shape in real-time based on the music.",
    "inspiration_name": "CompForm Audio Waveform Part 2",
    "inspiration_url": "https://youtu.be/iJimO9Oftqo"
  },
  {
    "_id": "Q6HMr5toYTgHB6MAi",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:04:34.074Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fnovlwxjuef0nwrh4vtf",
        "version": 1552071892,
        "signature": "34ce17db471fabb00dd32889fbf7fe2a21fd24e8",
        "width": 1072,
        "height": 1378,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:04:52Z",
        "tags": [],
        "bytes": 1933634,
        "type": "upload",
        "etag": "b3a20f84dc840743b916c0b44403fb41",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552071892/avalanche2019/fnovlwxjuef0nwrh4vtf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552071892/avalanche2019/fnovlwxjuef0nwrh4vtf.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A photo I took from a still of Godard's  film Breathless"
  },
  {
    "_id": "QJ7hMZ7hcCbaDo2Fr",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:35:55.721Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h7q1jaur9h99zadnrgtf",
        "version": 1548459540,
        "signature": "dfa85ec200ea009f3161a8a3845d097d315bfd2e",
        "width": 640,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:39:00Z",
        "tags": [],
        "bytes": 19830,
        "type": "upload",
        "etag": "b047ba9b906319132e9defd32195dcc3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459540/avalanche2019/h7q1jaur9h99zadnrgtf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459540/avalanche2019/h7q1jaur9h99zadnrgtf.jpg"
      },
      {
        "public_id": "avalanche2019/trefjtm9wdh6tggsgvuc",
        "version": 1548459551,
        "signature": "c78e67a3b29497e0af384b0cbbd4ae6e8ecf96ca",
        "width": 514,
        "height": 640,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:39:11Z",
        "tags": [],
        "bytes": 11918,
        "type": "upload",
        "etag": "948df4a88832392175023157ffab90e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459551/avalanche2019/trefjtm9wdh6tggsgvuc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459551/avalanche2019/trefjtm9wdh6tggsgvuc.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Looking Random",
    "description": "Really Random lines"
  },
  {
    "_id": "QLPbFfWgmoque2ZWM",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T06:23:10.259Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z5gmm2cbs7s8i05xwh5l",
        "version": 1549606996,
        "signature": "351432b90371af8612f6aa3ac3cdfdee5b032e94",
        "width": 1188,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T06:23:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 827733,
        "type": "upload",
        "etag": "44c469a4b5f2027153252edbb8ce1647",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549606996/avalanche2019/z5gmm2cbs7s8i05xwh5l.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549606996/avalanche2019/z5gmm2cbs7s8i05xwh5l.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1772278",
          "dar": "297:296"
        },
        "frame_rate": 60,
        "bit_rate": 1783667,
        "duration": 3.7125,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T15:00:35.783Z" }
      }
    ],
    "title": "",
    "description": "Random Triangle Grid",
    "code": "let windowHeight = 600;\nlet windowWidth = 600;\n\nfunction setup() {\n  createCanvas(windowHeight, windowWidth);\n  strokeWeight(2);\n  frameRate(2);\n}\n\nfunction draw() {\n  background(0);\n  let step = 80;\n  for (let y = step - 20; y < windowHeight - 20; y += step) {\n    for (let x = step - 20; x < windowWidth - 20; x += step) {\n      let y1 = y + random(0, step / 3),\n        y2 = y + random(0, step / 3);\n      colorMode(HSB, 100);\n      stroke(random(0, 100), 50, 80);\n      noFill();\n      triangle(x - random(0, step / 3), y1, x, y, x + random(0, step / 3), y2);\n    }\n  }\n}",
    "inspiration_name": "Tinsley",
    "inspiration_url": "http://sketches2019.compform.net"
  },
  {
    "_id": "QN7Ti9KG45GrxRsT6",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T16:06:54.54Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "QNJbJvCpa3Yq4ns5x",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-06T02:41:29.411Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ykhi2fejknwmdqk8zirq",
        "version": 1554518499,
        "signature": "d39e68c02bbea0b034d74da53e9ea44cba8ac7df",
        "width": 182,
        "height": 104,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-06T02:41:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 361277,
        "type": "upload",
        "etag": "740d1abf9240f0ef82e7db1682daf815",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554518499/avalanche2019/ykhi2fejknwmdqk8zirq.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554518499/avalanche2019/ykhi2fejknwmdqk8zirq.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "125375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "Baseline",
          "bit_rate": "822812"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 967706,
        "duration": 2.933333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Toward Disappearance I"
  },
  {
    "_id": "QS48pGTa7zN72WpS8",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T03:28:04.343Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wjktpeh5oznus9fta3tp",
        "version": 1551929311,
        "signature": "084a34f96ca01dfc71626314d18f5fa966b7fa30",
        "width": 622,
        "height": 624,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-07T03:28:31Z",
        "tags": [],
        "bytes": 147371,
        "type": "upload",
        "etag": "ad9673f668152cee332760d141951086",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551929311/avalanche2019/wjktpeh5oznus9fta3tp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551929311/avalanche2019/wjktpeh5oznus9fta3tp.jpg"
      },
      {
        "public_id": "avalanche2019/o349egzvkzepe3jlyqie",
        "version": 1551929317,
        "signature": "cdda4e68fda03bc5fb4e809c9dfe14c380578a2a",
        "width": 644,
        "height": 830,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-07T03:28:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 1119817,
        "type": "upload",
        "etag": "eaf14b44f2e45fb4ae107f30a4d74896",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551929317/avalanche2019/o349egzvkzepe3jlyqie.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551929317/avalanche2019/o349egzvkzepe3jlyqie.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1376",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "174716",
          "dar": "322:415"
        },
        "is_audio": false,
        "frame_rate": 15.001,
        "bit_rate": 178356,
        "duration": 50.196587,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/cthmntmtr7wzevmaure6",
        "version": 1551929322,
        "signature": "534ca51ec60bc55aec20ec851bac7a998df05595",
        "width": 645,
        "height": 645,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-07T03:28:42Z",
        "tags": [],
        "bytes": 123911,
        "type": "upload",
        "etag": "665b859195395abff69d8ee201bc0964",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551929322/avalanche2019/cthmntmtr7wzevmaure6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551929322/avalanche2019/cthmntmtr7wzevmaure6.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a paintbrush pattern using pixel colors of loaded images. \nThe pattern changes based on the image selected. \n\nImage credits: Kathrin, Ray, Brad, and Justin.",
    "inspiration_name": "Image Pixel Paintbrush Pattern",
    "code": "// Creating a paintbrush using image pixels. \n// Take the colors from a source image to draw patterns on canvas.\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// GitHub: https://github.com/akshansh2593/CompForm/tree/master/imagePixelPaintbrush\n\nvar referenceImage = []; // create an array to store\nvar imageColor;\n\nvar imageNoise;\nvar noiseFrequency;\nvar imageOffset;\n\n// Customization using Parameters\nvar dotDistance_slider;\nvar imageChange_dropdown;\nvar changedImageName;\nvar dotSize;\n\n// Load the reference images in an array\nfunction preload() {\n    for (i = 1; i <= 18; i++)\n        referenceImage[i] = loadImage(\"referenceImages/\" + i + \".jpg\");\n}\n\nfunction setup() {\n    createCanvas(500, 500);\n\n    noiseFrequency = 3;\n    imageOffset = 0.0;\n    dotSize = 10;\n\n    // create a dropdown for the images\n    createP(\"Select the image pattern\");\n    imageChange_dropdown = createSelect();\n    imageChange_dropdown.option(\"Brad\");\n    imageChange_dropdown.option(\"Ray\");\n    imageChange_dropdown.option(\"Kathrin\");\n    imageChange_dropdown.option(\"Justin\");\n    imageChange_dropdown.changed(draw);\n\n    // create a slider for the distance between dots\n    createP('Change Distance Between Dots');\n    dotDistance_slider = createSlider(0.001, 0.02, 0.001, 0.001);\n\n    background(50);\n}\n\nfunction draw() {\n    noStroke();\n\n    // add noise to the position\n    noiseSeed(154329 + changedImageName);\n    var posX = noise(imageOffset * noiseFrequency) * width;\n    noiseSeed(1 + changedImageName);\n    var posY = noise(imageOffset * noiseFrequency) * height;\n\n\n    // selecting the image\n    if (imageChange_dropdown.value() === \"Kathrin\") {\n        changedImageName = 1;\n    }\n    if (imageChange_dropdown.value() === \"Ray\") {\n        changedImageName = 5;\n    }\n    if (imageChange_dropdown.value() === \"Brad\") {\n        changedImageName = 15;\n    }\n    if (imageChange_dropdown.value() === \"Justin\") {\n        changedImageName = 18;\n    }\n\n    // take color from the reference image\n    imageColor = referenceImage[changedImageName].get(posX, posY);\n\n    // Scale the images\n    let mapX = map(posX, 0, 250, 0, width);\n    let mapY = map(posY, 0, 250, 0, height);\n\n    fill(imageColor);\n    // draw the image\n    ellipse(mapX, mapY, dotSize, dotSize);\n    ellipse(mapY, mapX, dotSize, dotSize);\n    ellipse(width - mapX, height - mapY, dotSize, dotSize);\n    ellipse(height - mapY, width - mapX, dotSize, dotSize);\n\n    imageOffset += dotDistance_slider.value();\n}"
  },
  {
    "_id": "QY6nbevKjdkBWMTjF",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T22:01:43.73Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k4siqohgawyqlub76ujr",
        "version": 1555020112,
        "signature": "52e96c5df14f1666bed82353410b441b49e15a9d",
        "width": 1702,
        "height": 1190,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-11T22:01:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 4243297,
        "type": "upload",
        "etag": "da25066140a5f4dccf80494dc801dd6d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555020112/avalanche2019/k4siqohgawyqlub76ujr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555020112/avalanche2019/k4siqohgawyqlub76ujr.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "1114797",
          "dar": "851:595"
        },
        "frame_rate": 20,
        "bit_rate": 1116657,
        "duration": 30.4,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Personality Quiz- How Brave are you actually"
  },
  {
    "_id": "QZBiH4JqQ7HFZn4Sc",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T15:35:52.635Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/i9tdjx6tjsb3yic5zric",
        "version": 1555688159,
        "signature": "173c261fb839f9045045ae685e3db3cbfc8ba0b8",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T15:35:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 2484454,
        "type": "upload",
        "etag": "824e67261d6bc36d009d8e28238309cf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555688159/avalanche2019/i9tdjx6tjsb3yic5zric.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555688159/avalanche2019/i9tdjx6tjsb3yic5zric.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "239868",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "2150246",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 2401908,
        "duration": 8.274933,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "volume.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\nlet mySound;\nlet analyzer;\n\nfunction preload() {\n    mySound = loadSound('lucky');\n\n}\n\nfunction setup() {\n    createCanvas(500, 200);\n\n    analyzer = new p5.Amplitude();\n    analyzer.setInput(mySound);\n\n    startButton = createButton('start');\n    startButton.mousePressed(start);\n\n    stopButton = createButton('stop');\n    stopButton.mousePressed(stop);\n}\n\nfunction start() {\n    mySound.loop(0, 1, 1, 0, 4);\n}\n\nfunction stop() {\n    mySound.stop();\n}\n\nfunction draw() {\n    background('#FF76EC');\n    fill(87,142,232,80);\n    noStroke();\n\n    const volume = analyzer.getLevel();\n    const x = volume * 500;\n    \n    for(i=0;i<500;i+=50){\n    ellipse(i, x, 30, 30);\n     ellipse(i, 200-x, 30, 30);\n }\n}"
  },
  {
    "_id": "QafgxECzG4BtfEdxB",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T18:05:29.023Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x7mwyoa1ij5catsim0yi",
        "version": 1549044349,
        "signature": "fcbe5ba7e42e292714b1cf77a56f58d67c607308",
        "width": 563,
        "height": 453,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T18:05:49Z",
        "tags": [],
        "bytes": 83972,
        "type": "upload",
        "etag": "ebbf8650aef0e92a4f62f9a2375d78b6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549044349/avalanche2019/x7mwyoa1ij5catsim0yi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549044349/avalanche2019/x7mwyoa1ij5catsim0yi.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:19.173Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:20.017Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:04.95Z" }
      },
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:05.391Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:09.148Z" }
      },
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:11:36.975Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:19:26.866Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:38:26.907Z" }
      }
    ],
    "title": "",
    "description": "Cut paper - Playing w/shadows",
    "inspiration_name": "Old School"
  },
  {
    "_id": "QdGM7o8DuwtA9bjno",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T06:17:11.481Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zemwcshrdoserkzvwsh0",
        "version": 1554445047,
        "signature": "70f52dbdac8fd49d969613ed5b27054adabcef0b",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T06:17:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 5010655,
        "type": "upload",
        "etag": "3391b4f183e333b9ef9dbbe24dd5cfb3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554445047/avalanche2019/zemwcshrdoserkzvwsh0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554445047/avalanche2019/zemwcshrdoserkzvwsh0.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2250",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3926606",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 3938871,
        "duration": 10.176833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Glitch Effect (after effect)",
    "inspiration_name": "Youtube tutorial",
    "inspiration_url": "https://www.youtube.com/watch?v=OfHN2GSkAP8"
  },
  {
    "_id": "QhfaGjwoa7bvppzHn",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-03-01T17:35:09.325Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xpdnjstbjlgxzob4glsu",
        "version": 1551461721,
        "signature": "942291415f17aa7e5d99e81bbcd63c9bd60f914e",
        "width": 990,
        "height": 588,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T17:35:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 245517,
        "type": "upload",
        "etag": "25ede0da633f88673c42daf94bb41802",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551461721/avalanche2019/xpdnjstbjlgxzob4glsu.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551461721/avalanche2019/xpdnjstbjlgxzob4glsu.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "391054",
          "dar": "165:98"
        },
        "frame_rate": 60,
        "bit_rate": 398081,
        "duration": 4.933984,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 2"
  },
  {
    "_id": "QqaiRnPNyLSoh6wFR",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-26T20:23:34.355Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ruwed7mvtbeff27gjgja",
        "version": 1553631839,
        "signature": "b36eebcbcf93811ebfbd2cf122093564dea34e96",
        "width": 480,
        "height": 640,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-26T20:23:59Z",
        "tags": [],
        "bytes": 79983,
        "type": "upload",
        "etag": "5fa0b7510798a3903916ca81e27ee3dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553631839/avalanche2019/ruwed7mvtbeff27gjgja.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553631839/avalanche2019/ruwed7mvtbeff27gjgja.jpg"
      },
      {
        "public_id": "avalanche2019/gnygolta4jo4krwpqcei",
        "version": 1553631854,
        "signature": "8e42f9c5d588a8514935e6292c734b85ac6288d3",
        "width": 480,
        "height": 640,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-26T20:24:14Z",
        "tags": [],
        "bytes": 97391,
        "type": "upload",
        "etag": "0a3851583d0d50bc726a27b608dd2b42",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553631854/avalanche2019/gnygolta4jo4krwpqcei.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553631854/avalanche2019/gnygolta4jo4krwpqcei.jpg"
      },
      {
        "public_id": "avalanche2019/lcjfahvemxlnrw6i7sfn",
        "version": 1553631997,
        "signature": "7a5b774ccc6045f03f3959e867d507261f050ef9",
        "width": 1372,
        "height": 1362,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-26T20:26:37Z",
        "tags": [],
        "bytes": 150986,
        "type": "upload",
        "etag": "f5c79e18f6889304bd0f713771d5d27e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553631997/avalanche2019/lcjfahvemxlnrw6i7sfn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553631997/avalanche2019/lcjfahvemxlnrw6i7sfn.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T01:42:59.697Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T16:09:30.244Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T17:21:38.529Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T02:37:24.973Z" }
      }
    ],
    "title": "",
    "description": "Laser-cut Kelp - inspired from 9 lines coded from paper.js then manipulated in Illustrator",
    "inspiration_name": "Kelp"
  },
  {
    "_id": "QsPAPEvjBn98qRug5",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T03:57:30.214Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/oyqnmwpplqts4004bixv",
        "version": 1555560048,
        "signature": "54df87da438603e3bb59a5645ce9ed992ef173da",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-18T04:00:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 5428876,
        "type": "upload",
        "etag": "fb62b1088f865bd07f0971db01fbce0b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555560048/avalanche2019/oyqnmwpplqts4004bixv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555560048/avalanche2019/oyqnmwpplqts4004bixv.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "154670",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "341054",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 504665,
        "duration": 86.037,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/vr2zec5y1bfhuq0ukvxo",
        "version": 1555560061,
        "signature": "83dab0d3c68d86ad117ad16d8d5ce0447159d33e",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-18T04:01:01Z",
        "tags": [],
        "bytes": 82771,
        "type": "upload",
        "etag": "4ee848f7616976b3b17862a75e7efe11",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555560061/avalanche2019/vr2zec5y1bfhuq0ukvxo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555560061/avalanche2019/vr2zec5y1bfhuq0ukvxo.png"
      },
      {
        "public_id": "avalanche2019/zezfxclim8byomjvd0x6",
        "version": 1555560064,
        "signature": "c0860804d0e96f5c9d378d3d5704064d854509f7",
        "width": 965,
        "height": 537,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-18T04:01:04Z",
        "tags": [],
        "bytes": 28753,
        "type": "upload",
        "etag": "2119565f8937cd03d6b7dcffd0ff40fd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555560064/avalanche2019/zezfxclim8byomjvd0x6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555560064/avalanche2019/zezfxclim8byomjvd0x6.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T19:00:34.763Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T22:41:20.117Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a sound visualization. \nI created a piece of house music in Garage Band and used After Effects to create a sound visualization using CompForm (CF) letters.",
    "inspiration_name": "CompForm Audio Waveform Part 1",
    "inspiration_url": "https://youtu.be/iJimO9Oftqo"
  },
  {
    "_id": "QxNjT4Xe584m4cukA",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T05:06:03.949Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ioivvcgmw9cscvp29p2s",
        "version": 1550120787,
        "signature": "888573cfc744bdcf34a03840f8d1838aa7ef386f",
        "width": 1038,
        "height": 1330,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-14T05:06:27Z",
        "tags": [],
        "bytes": 87112,
        "type": "upload",
        "etag": "adc85a4d0f9042657e77c86902859d21",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550120787/avalanche2019/ioivvcgmw9cscvp29p2s.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550120787/avalanche2019/ioivvcgmw9cscvp29p2s.jpg"
      },
      {
        "public_id": "avalanche2019/zombfjejmpbffnkxtbp2",
        "version": 1550147343,
        "signature": "626eef43aa403c1b981c3cc8a1a764668612204e",
        "width": 1044,
        "height": 1304,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-14T12:29:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 2328216,
        "type": "upload",
        "etag": "3dd9580bd81ffc7215f97a1348f3e9e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550147343/avalanche2019/zombfjejmpbffnkxtbp2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550147343/avalanche2019/zombfjejmpbffnkxtbp2.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "866973",
          "dar": "261:326"
        },
        "frame_rate": 60,
        "bit_rate": 873763,
        "duration": 21.316667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T16:01:53.798Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-02-14T20:59:23.866Z" }
      }
    ],
    "title": "",
    "description": "*How do you feel about 2/14?*",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\nconst w = 500;\nconst h = w;\nconst eyeRadius = w * 0.09;\nconst eyeY = h * 0.43;\n\n// Animation parameters\nlet tearOffsetStart = h * 0.63;\nlet tearOffsetEnd = h * 0.45;\nlet mouthHeightStart = 0.2;\nlet mouthHeightCurrent = mouthHeightStart;\nlet mouthHeightEnd = -0.001;\nlet eyeRotationStart = 45;\nlet eyeRotationCurrent = eyeRotationStart;\nlet eyeRotationResta = 0;\nlet eyeRotationRest = -45;\nlet eyeRotationEnd = 0;\nlet eyeOffsetStart = w * 0.085;\nlet eyeOffsetCurrent = eyeOffsetStart;\nlet eyeOffsetEnd = 0;\nlet browsOffsetStart = h * 0.6;\nlet browsOffsetCurrent = browsOffsetStart;\nlet browsOffsetRest = h * 0.25;\nlet browsOffsetEnd = 0;\nconst keyFrame1 = 200;\nconst keyFrame2 = 300;\nconst keyFrame2a = 500;\nconst keyFrame3 = 750;\nconst keyFrame4 = 900;\nconst keyFrame5 = 1000;\nlet inLove = false;\n\nfunction setup() {\n  createCanvas(w, h);\n  angleMode(DEGREES);\n  let div0 = createDiv();\n  window.valentineSlider = createSlider(1, 1000, 1, 0.0001);\n  let question = createP(\"– <br> Your <br> Valentine’s Day <br> mood? \");\n  question.style(\"font\", \"900 26px/110% Arial, Helvetica, sans-serif\");\n  question.style(\"color\", \"#ff0000\");\n  question.style(\"margin-top\", \"0\");\n\n  valentineSlider.style(\"width\", w + \"px\");\n\n  window.red = color(255, 0, 0);\n  window.white = color(255, 255, 255);\n\n  noStroke();\n  fill(red);\n\n  textAlign(CENTER);\n  text(\"Starting…\", w / 2, h / 2);\n}\n\nfunction draw() {\n  background(red);\n  faceShape();\n\n  if (valentineSlider.value() < keyFrame1) {\n    let m1 = map(\n      valentineSlider.value(),\n      0,\n      keyFrame1,\n      tearOffsetStart,\n      tearOffsetEnd\n    );\n    tear(eyeRadius + eyeOffsetCurrent, m1);\n  } else if (valentineSlider.value() > keyFrame1) {\n    mouthHeightCurrent = map(\n      valentineSlider.value(),\n      keyFrame1,\n      keyFrame2,\n      mouthHeightStart,\n      mouthHeightEnd,\n      true\n    );\n    eyeRotationCurrent = map(\n      valentineSlider.value(),\n      keyFrame1,\n      keyFrame2,\n      eyeRotationStart,\n      eyeRotationResta,\n      true\n    );\n  }\n  if (valentineSlider.value() > keyFrame2a) {\n    eyeRotationCurrent = map(\n      valentineSlider.value(),\n      keyFrame2a,\n      keyFrame3,\n      eyeRotationResta,\n      eyeRotationRest,\n      true\n    );\n    browsOffsetCurrent = map(\n      valentineSlider.value(),\n      keyFrame2a,\n      keyFrame3,\n      browsOffsetStart,\n      browsOffsetRest,\n      true\n    );\n  }\n  if (valentineSlider.value() > keyFrame4) {\n    if (inLove == false) {\n      console.log(\"So in love!\");\n      inLove = true;\n    }\n    eyeRotationCurrent = map(\n      valentineSlider.value(),\n      keyFrame4,\n      keyFrame5,\n      eyeRotationRest,\n      eyeRotationEnd,\n      true\n    );\n    eyeOffsetCurrent = map(\n      valentineSlider.value(),\n      keyFrame4,\n      keyFrame5,\n      eyeOffsetStart,\n      eyeOffsetEnd,\n      true\n    );\n    browsOffsetCurrent = map(\n      valentineSlider.value(),\n      keyFrame4,\n      keyFrame5,\n      browsOffsetRest,\n      browsOffsetEnd,\n      true\n    );\n  }\n  eyes(eyeRadius + eyeOffsetCurrent, eyeRotationCurrent);\n  mouth();\n  brows();\n}\n\nfunction faceShape() {\n  push();\n  fill(white);\n  noStroke();\n  circle(w / 2, h / 2, (w / 2) * 0.8);\n  pop();\n}\n\nfunction eyes(x, a) {\n  push();\n  fill(red);\n  const x1 = w / 2 - x;\n  const x2 = w / 2 + x;\n  const y = eyeY;\n\n  push();\n  translate(x1, y);\n  rotate(a);\n  circle(0, 0, eyeRadius);\n  rect(0, 0, eyeRadius, eyeRadius);\n  circle(0, 0, 1);\n  pop();\n  push();\n  translate(x2, y);\n  rotate(-a);\n  circle(0, 0, eyeRadius);\n  rect(0, 0, -eyeRadius, eyeRadius);\n  circle(0, 0, 1);\n  pop();\n  pop();\n}\n\nfunction mouth() {\n  push();\n  noFill();\n  stroke(red);\n  strokeWeight(w * 0.03);\n  arc(w / 2, h * 0.7, w * 0.2, h * mouthHeightCurrent, 180, 0);\n  pop();\n}\n\nfunction tear(x, y) {\n  push();\n  push();\n  fill(red);\n  const x1 = w / 2 - x;\n  let r = w * 0.015;\n\n  push();\n  translate(x1, y);\n  rotate(-135);\n  circle(0, 0, r);\n  rect(0, 0, r, r);\n  pop();\n  r = w * 0.009;\n  push();\n  translate(x1 - w * 0.02, y - w * 0.03);\n  rotate(-135);\n  circle(0, 0, r);\n  rect(0, 0, r, r);\n  pop();\n  pop();\n  pop();\n}\n\nfunction brows(y) {\n  push();\n  translate(w / 2, eyeY - browsOffsetCurrent);\n  triangle(\n    -eyeRadius * 1.52,\n    eyeRadius - 6,\n    0,\n    eyeRadius * 2,\n    eyeRadius * 1.52,\n    eyeRadius - 6\n  );\n  pop();\n}"
  },
  {
    "_id": "R2ksjk4g4HQXcLNhJ",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-03T23:03:50.597Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/isozpq1n4jkir6rwqwdq",
        "version": 1549236038,
        "signature": "293918faccbf86ec43217ebc449ebe9a7bbf70b2",
        "width": 1095,
        "height": 557,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-03T23:20:38Z",
        "tags": [],
        "bytes": 119864,
        "type": "upload",
        "etag": "b128798c35b88ed532b60dfeab98c7bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549236038/avalanche2019/isozpq1n4jkir6rwqwdq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549236038/avalanche2019/isozpq1n4jkir6rwqwdq.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-04T04:14:23.667Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-04T04:14:24.351Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T20:01:05.025Z" }
      }
    ],
    "title": "",
    "description": "Easy Peezy Concept Generator\n\nNeed help coming up with an idea for your next project? Thesis ideas eluding you? This tool takes all the work out of generating your next concept statement. \n\nhttps://docs.google.com/spreadsheets/d/1Cad8pc7Aq0dRwaC-qRGyKRcPcOIfacBrWNS6YtrBHrY/edit?usp=sharing"
  },
  {
    "_id": "R4LMnLba6unrzqS7z",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:28:58.152Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "R6CbqvddmnTwSiQY9",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:46:37.15Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xlqwrqxdlpthwx3hjsek",
        "version": 1552063746,
        "signature": "0051a58b8c3a931c258882abfcad6c0051b0c77c",
        "width": 946,
        "height": 944,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:49:06Z",
        "tags": [],
        "bytes": 1586568,
        "type": "upload",
        "etag": "b9576c6ace5251ecb9dd9c151a37a710",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063746/avalanche2019/xlqwrqxdlpthwx3hjsek.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063746/avalanche2019/xlqwrqxdlpthwx3hjsek.png"
      },
      {
        "public_id": "avalanche2019/wndl3stf4s6kpiym8ujn",
        "version": 1552063775,
        "signature": "ae6960383ff77169237deb41a551da1045ef7873",
        "width": 874,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T16:49:35Z",
        "tags": [],
        "bytes": 220224,
        "type": "upload",
        "etag": "19d058d0a4dd466936d53af913131551",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063775/avalanche2019/wndl3stf4s6kpiym8ujn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063775/avalanche2019/wndl3stf4s6kpiym8ujn.jpg"
      },
      {
        "public_id": "avalanche2019/rptwqk3vwt8ifbx2htce",
        "version": 1552063779,
        "signature": "2f4dd8a2f96ee554200a710eedfa24c7860e9744",
        "width": 946,
        "height": 845,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T16:49:39Z",
        "tags": [],
        "bytes": 122228,
        "type": "upload",
        "etag": "2b6251b90a2273fbd938f6e30e731c51",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063779/avalanche2019/rptwqk3vwt8ifbx2htce.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063779/avalanche2019/rptwqk3vwt8ifbx2htce.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "PROGRESS TOWARDS CHALLENGE \nWhat I am doing: \n1. Processing the pixels of two images \n2. Making an array of images off of pixel tiles on the pixels themselves (I.e. each dog face is now made up of 9 /30 or 100 small images) \n3. I do this for both images \n4. Then make and print to the screen a 3rd image that randomly takes images from both of the other images to form a new face"
  },
  {
    "_id": "R9D93xh7Epq3aK3Rv",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-30T07:52:00.12Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/oxpsxo5gc75vhmizvjl0",
        "version": 1548834823,
        "signature": "f2a915fa9142fb582104c31df6e3e0497fe9e141",
        "width": 9200,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-30T07:53:43Z",
        "tags": [],
        "bytes": 803301,
        "type": "upload",
        "etag": "8781e7edfc0bb54d601bfb89c75f502f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548834823/avalanche2019/oxpsxo5gc75vhmizvjl0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548834823/avalanche2019/oxpsxo5gc75vhmizvjl0.jpg"
      },
      {
        "public_id": "avalanche2019/n5fv5t0vzqg0pde1tixg",
        "version": 1548834926,
        "signature": "6732ace10658859035f57640392112376a4d124c",
        "width": 3840,
        "height": 2885,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-30T07:55:26Z",
        "tags": [],
        "bytes": 324942,
        "type": "upload",
        "etag": "d62d30536fe826e4becd4a564c4cb2af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548834926/avalanche2019/n5fv5t0vzqg0pde1tixg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548834926/avalanche2019/n5fv5t0vzqg0pde1tixg.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:53.727Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:01.077Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:02:03.934Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:03:24.615Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:34:56.074Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-25T02:24:15.866Z" }
      }
    ],
    "title": "",
    "description": "Inspired by \"The Dance\"- Matisse",
    "inspiration_name": "The Dance- Matisse"
  },
  {
    "_id": "RCBpKfXKHmp45b3KR",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T21:24:03.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zocm6c2winzvhprxklub",
        "version": 1554845140,
        "signature": "eace665203ed1247e777ce22e3aaade853e0f62a",
        "width": 734,
        "height": 904,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-09T21:25:40Z",
        "tags": [],
        "bytes": 81898,
        "type": "upload",
        "etag": "a1448fc16c6bd66ead3ed4a34121348b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554845140/avalanche2019/zocm6c2winzvhprxklub.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554845140/avalanche2019/zocm6c2winzvhprxklub.jpg"
      },
      {
        "public_id": "avalanche2019/whq9dcl63v0wsiclsfth",
        "version": 1554845145,
        "signature": "84e608fbc818f0b90338fdcc5920aa827f1a155f",
        "width": 731,
        "height": 901,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-09T21:25:45Z",
        "tags": [],
        "bytes": 94182,
        "type": "upload",
        "etag": "b04142b0b8f5d4f0443286852bcc58d7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554845145/avalanche2019/whq9dcl63v0wsiclsfth.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554845145/avalanche2019/whq9dcl63v0wsiclsfth.jpg"
      },
      {
        "public_id": "avalanche2019/oqz9ffa8xjo7muo1inkv",
        "version": 1554845148,
        "signature": "7a28cfbb2e273d72344290ef20ee69a45003d1e2",
        "width": 733,
        "height": 901,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-09T21:25:48Z",
        "tags": [],
        "bytes": 104659,
        "type": "upload",
        "etag": "b638ea6d2a425e11e606458cbe8e5317",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554845148/avalanche2019/oqz9ffa8xjo7muo1inkv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554845148/avalanche2019/oqz9ffa8xjo7muo1inkv.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this sketch, I have created a Parsons Guide Book Title Generator using fun words. \nI played with fonts and text inputs to create these titles.",
    "inspiration_name": "Parsons Guide Book Titles",
    "inspiration_url": "http://compform.net/text/",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\n\nfunction generateTitle() {\n\n    var verbs = [\"Stab\", \"Explode\", \"Fight\", \"Drink\", \"Taunt\", \"Shred\", \"Sketch\"];\n    var adverbs = [\"Abnormally\", \"Brutally\", \"Effortlessly\", \"Loyally\", \"Recklessly\", \"Sloppily\", \"Awkwardly\", \"Happily\"];\n    var nouns = [\"Factory Reset Button\", \"Toaster\", \"Death Wish\", \"Friendly Grandma\", \"International Law Enforcement\", \"Gaming Laptop\", \"Toilet Seat\", \"Boring Heartbreak\", \"Really Tough Guy\", \"Dragon\", \"Laser Beams\"];\n\n\tvar adverb = sample(adverbs);\n\tvar verb = sample(verbs);\n\tvar noun = sample(nouns);\n\n\tvar title = \"\";\n\ttitle = `Parsons Guide to ${adverb} ${verb} the ${noun} on D12`;\n// \tif (Math.random() < 0.5) {\n// \t\ttitle = `${name_prefix} ${primary_noun} and the ${adjective} ${secondary_noun}`;\n// \t}\n// \telse {\n\t\t\n// \t}\n\n\treturn title;\n}\n\nfunction generateSubtitle() {\n\tvar story_adjectives = [\"Lost\", \"Forgotten\", \"Merry\", \"Clever\", \"Wonderful\", \"Sullen\", \"Little\", \"Cowardly\", \"Jolly\", \"Festive\", \"Gleeful\", \"Enchanted\", \"Wise\", \"Wistful\", \"Dark\", \"Untold\", \"Secret\"];\n\tvar story_formats = [\"Tale\", \"Novel\", \"Book in Three Parts\", \"Song\", \"Short Story\", \"Legend\", \"Mystery\", \"Comedy\", \"Musical\", \"Production\", \"Lesson\"];\n\n\tvar adjective = sample(story_adjectives);\n\tvar format = sample(story_formats);\n\tvar subtitle = `A  ${adjective}  ${format}`;\n\n\treturn subtitle;\n}\n\n\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\n\n\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n        @import url('https://fonts.googleapis.com/css?family=Oswald|Playball|Roboto+Slab');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto Slab', serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: 0.75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t\tfont-family: 'Playball', cursive;\n\t\t}\n\t\t#footer {\n\t\t    margin-top:15.0em;\n\t\t    font-weight: 100;\n\t\t    font-size:14px;\n\t\t    font-weight:normal;\n\t\t    font-family: 'Oswald', sans-serif;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n\t\t<div id=\"footer\">Written By A Robot</div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "RDkwTK7TfuKbyBprA",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T02:19:33.095Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r0a6uyzm4gszjqriihnn",
        "version": 1555035581,
        "signature": "6e40a70688858e96202c93b6062756634a75fcf0",
        "width": 958,
        "height": 375,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T02:19:41Z",
        "tags": [],
        "bytes": 39568,
        "type": "upload",
        "etag": "ff221fc09996db76dbc67e90c6a4b1ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555035581/avalanche2019/r0a6uyzm4gszjqriihnn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555035581/avalanche2019/r0a6uyzm4gszjqriihnn.jpg"
      },
      {
        "public_id": "avalanche2019/be9o73oqp1yovbagvfkl",
        "version": 1555035585,
        "signature": "285f45357c91191f86f97061c6ce3cffaa870e73",
        "width": 992,
        "height": 370,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-12T02:19:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 2992534,
        "type": "upload",
        "etag": "8f726cfb15e35bfd7f9bdf052c130920",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555035585/avalanche2019/be9o73oqp1yovbagvfkl.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555035585/avalanche2019/be9o73oqp1yovbagvfkl.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "2254311",
          "dar": "496:185"
        },
        "is_audio": false,
        "frame_rate": 15.002,
        "bit_rate": 2225828,
        "duration": 10.750839,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/g1gojqrowrncskbwile8",
        "version": 1555035588,
        "signature": "0db4cba1e561ac45bf57a5b92424af0a0db9f664",
        "width": 992,
        "height": 368,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-12T02:19:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 1172731,
        "type": "upload",
        "etag": "264eeee885df3da6e677631057fc3d4e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555035588/avalanche2019/g1gojqrowrncskbwile8.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555035588/avalanche2019/g1gojqrowrncskbwile8.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "852384",
          "dar": "62:23"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 850617,
        "duration": 11.029456,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T14:52:43.474Z" }
      }
    ],
    "title": "",
    "description": "This is part 1 of my text steering idea. I have created a CompForm title using the following characters:\nC o m p F o r m J u s t i n B a k s e\nI have used p5.js to trace the letters and a constructor function to make it interactive.",
    "inspiration_name": "Text Steering Part 1",
    "inspiration_url": "https://youtu.be/4hA7G3gup-4",
    "code": "// The code involves two files. \n// Play with the \"seek\" and \"arrive\" functions in vehicle.js to get the intended effect\n\n// Link to Github: https://github.com/akshansh2593/CompForm/tree/master/textSteering_compForm"
  },
  {
    "_id": "RDkxYikXgcNMfgh3h",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Random",
    "created_at": { "$date": "2019-03-05T13:26:34.787Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j2zmmveur08qr9b98u0t",
        "version": 1551792399,
        "signature": "e9e1c243d820f1000fdcf3fdfcc2eb2d7ac2e0ad",
        "width": 798,
        "height": 598,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-05T13:26:39Z",
        "tags": [],
        "bytes": 299931,
        "type": "upload",
        "etag": "a905afe03a6e4f6d55bdfe04ddc80515",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551792399/avalanche2019/j2zmmveur08qr9b98u0t.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551792399/avalanche2019/j2zmmveur08qr9b98u0t.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Used particle system to create a random pattern.",
    "inspiration_name": "Random Particles",
    "inspiration_url": "https://youtu.be/0V3uYA1hafk"
  },
  {
    "_id": "REviK3X8m9J45rJYu",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:43:29.119Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nyqjin9i0zlttgsaurgu",
        "version": 1557517420,
        "signature": "5964d597dddcb946966b671b65a48e799ed4b9e2",
        "width": 1048,
        "height": 1044,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-10T19:43:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 1892636,
        "type": "upload",
        "etag": "ddfcb9628760b875a1850d13ee4c472e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557517420/avalanche2019/nyqjin9i0zlttgsaurgu.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557517420/avalanche2019/nyqjin9i0zlttgsaurgu.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "193518",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "1593079",
          "dar": "262:261"
        },
        "is_audio": false,
        "frame_rate": 20,
        "bit_rate": 1791208,
        "duration": 8.452063,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Game 2",
    "code": "// p5 link: https://editor.p5js.org/uryuu1002/sketches/Pdw5Zrn2L\n\nvar girl;\nvar enemyies;\nvar lasers;\nvar move = 15;\nvar posx, posy;\n\nfunction setup(){\n\n  createCanvas(800, 800);\n  var gif_buttercup = loadImage(\"https://media.giphy.com/media/5aY2Nwzk7uXnoV3lgK/giphy.gif\");\n  var mojojojo = loadImage(\"mojo.png\");\n  \n  enemies = new Group();\n    for (var i = 0; i < 10; i++) {\n    var enemy = createSprite(\n      random(width),\n      random(height-300),\n      20, 20);\n    enemy.addImage(mojojojo);\n    enemy.setSpeed = 0.1;\n    enemy.scale = 0.2;\n    enemies.add(enemy);\n    enemy.immovable = true;\n    }\n  \n    girl = createSprite(width/2, height-50,100, 100);\n    girl.addImage(gif_buttercup);\n    girl.setSpeed = 10;\n    girl.scale = 0.3;\n    girl.immovable = true;\n  \n  lasers = new Group();\n  \n}\n\nfunction draw(){\n  background(0);\n  fill(255);\n  noStroke();\n  textSize(20);\n  textAlign(CENTER, CENTER);\n  \n  if(enemies.length > 0){\n    text(\"Press X or Left-click mouse to shoot laser!\", 10, 0, 200,200);\n      \n    } else{\n      textSize(72);\n      text(\"YOU WIN!\", width/2, height/2);\n    \n    }\n  \n  \n    girl.position.x = constrain(mouseX, girl.width/2, width-girl.width/2);\n  \n    if(keyWentDown('x')|| mouseWentDown(LEFT))\n  {\n    var q = createSprite(girl.position.x, girl.position.y, 30, height*2);\n    q.shapeColor = color(255);\n    q.life = 10;\n    q.setSpeed(girl.getSpeed());\n    var w = createSprite(girl.position.x, girl.position.y, 10, height*2);\n    w.shapeColor = color(127, 249, 102);\n    w.life = 10;\n    w.setSpeed(girl.getSpeed());\n    lasers.add(q);\n    lasers.add(w);\n  }\n  \n  for (var i = 0; i < enemies.length; i++) {\n    enemies[i].attractionPoint(0.002, girl.position.x, girl.position.y);\n    enemies[i].overlap(lasers, enemyHit);\n  }\n  \n  \n  \n    drawSprites();\n}\n\nfunction enemyHit(enemy, laser) {\n  enemy.remove();\n}"
  },
  {
    "_id": "RJLW8aFkos2AJqXg7",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T15:19:10.112Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sjyu5qwlmxkma87vuvfq",
        "version": 1549552760,
        "signature": "c37a3097c9e8bdc1de70bf283ca9be3b08dd34c6",
        "width": 799,
        "height": 598,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T15:19:20Z",
        "tags": [],
        "bytes": 57398,
        "type": "upload",
        "etag": "222578106b0a40ba2fcb682eead00a93",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549552760/avalanche2019/sjyu5qwlmxkma87vuvfq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549552760/avalanche2019/sjyu5qwlmxkma87vuvfq.png"
      },
      {
        "public_id": "avalanche2019/g0grupztjju9urwqfn0t",
        "version": 1549552763,
        "signature": "e64635ed11a3b33b56bb3704e35b8baf52b4e1f6",
        "width": 798,
        "height": 593,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T15:19:23Z",
        "tags": [],
        "bytes": 178577,
        "type": "upload",
        "etag": "111d4a62a8cab6b0217691252860acaa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549552763/avalanche2019/g0grupztjju9urwqfn0t.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549552763/avalanche2019/g0grupztjju9urwqfn0t.png"
      },
      {
        "public_id": "avalanche2019/y8kgzpoy72vhfkayqp7y",
        "version": 1549552767,
        "signature": "8d551fbc3133aff7a458afefb121aa3fa8b0f398",
        "width": 798,
        "height": 593,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T15:19:27Z",
        "tags": [],
        "bytes": 79798,
        "type": "upload",
        "etag": "7de8a70cefa07bd9fe2cc4acf934fb76",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549552767/avalanche2019/y8kgzpoy72vhfkayqp7y.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549552767/avalanche2019/y8kgzpoy72vhfkayqp7y.png"
      }
    ],
    "votes": [
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "funny",
        "created_at": { "$date": "2019-02-08T02:37:59.274Z" }
      }
    ],
    "title": "",
    "description": "I've always been fascinated by Cy Twombly and when I saw Ivy's sketch I wanted to start playing with her code. The result is nothing like Twombly but it was interesting to see the effect of strokeWeight on the final ouput. The first sketch actually got me thinking about the use of code to generate shapes and backgrounds similar to Eyvind Earle.",
    "inspiration_name": "Ivy's Twombly sketch",
    "code": "var x1,x2; \nvar y1,y2;\nfunction setup() {\n  createCanvas(800, 600);\n\t  background(200, 50, 0);\n\t\n  x1=0;\n\ty1=100;\n\t\n\tx2=0;\n\ty2=100;\n  \n\tstrokeWeight(1000);\n  \n\t\tnoFill();\n\t\n\tfor(var x = 0; x< 160; x++ ){\n\t\tstroke(random(30,255));\nCurve(x1,y1);\nx1=x1+52;\ny1= y1+2;\t\t\n\t\t\n\t\tif(x1> width){\n\t\t\tx1 =random(20);\n\t\t\ty1 =y1+random(100);\n\t\t\t }\n\t\n}\n\t\n}\n\n\nfunction Curve(a,b){\n\t\t\tbeginShape();\n    curveVertex(a,  b);\n    curveVertex(a,  b);\n    curveVertex(a+random(200),  b-200);\n    curveVertex(a+random(100),  b-100);\n    curveVertex(a+52, b+9);\n    curveVertex(a-10, b+100);\n\t  endShape();\n}"
  },
  {
    "_id": "RLdPZbhv7SPRwber3",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T04:05:11.38Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lterkdkjgkvzlf2pq70a",
        "version": 1556856318,
        "signature": "15a5040033ed2c179ba4b14f7ab8c35de8934ab1",
        "width": 1632,
        "height": 1450,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T04:05:18Z",
        "tags": [],
        "bytes": 126239,
        "type": "upload",
        "etag": "96c91ced30a30bcd05c9b426abdd3ff2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556856318/avalanche2019/lterkdkjgkvzlf2pq70a.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556856318/avalanche2019/lterkdkjgkvzlf2pq70a.png"
      },
      {
        "public_id": "avalanche2019/dx8m0gsyqok2owlylpdf",
        "version": 1556856322,
        "signature": "dff449ace28254a800f9a1164ad41d6cf88bccc7",
        "width": 1272,
        "height": 1350,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T04:05:22Z",
        "tags": [],
        "bytes": 278785,
        "type": "upload",
        "etag": "45a9de8eaec85d6e09d8ee200c2ebe8c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556856322/avalanche2019/dx8m0gsyqok2owlylpdf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556856322/avalanche2019/dx8m0gsyqok2owlylpdf.png"
      },
      {
        "public_id": "avalanche2019/ywivwignw3kwufdcxyvi",
        "version": 1556856326,
        "signature": "85822b1a272ee9001af4fe73b5bf8bcdbdad9162",
        "width": 1128,
        "height": 1324,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T04:05:26Z",
        "tags": [],
        "bytes": 349687,
        "type": "upload",
        "etag": "3ea9ba63a60d89479f501226fca34ae7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556856326/avalanche2019/ywivwignw3kwufdcxyvi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556856326/avalanche2019/ywivwignw3kwufdcxyvi.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-05-03T04:14:32.036Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-05-03T14:20:21.808Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:21:35.487Z" }
      }
    ],
    "title": "",
    "description": "simpson",
    "code": "$fn=300;\n  translate([17,17,22]) cylinder(8, 3, 0, true);\n   translate([12,17,22]) cylinder(8, 3, 0, true);\n    translate([7,17,22]) cylinder(8, 3, 0, true);\n     translate([2,17,22]) cylinder(8, 3, 0, true);\n  translate([-3,17,22]) cylinder(8, 3, 0, true);\n   translate([-8,17,22]) cylinder(8, 3, 0, true);\n    translate([-13,17,22]) cylinder(8, 3, 0, true);\n     translate([-18,17,22]) cylinder(8, 3, 0, true);\n     \n       translate([17,12,22]) cylinder(8, 3, 0, true);\n   translate([12,12,22]) cylinder(8, 3, 0, true);\n    translate([7,12,22]) cylinder(8, 3, 0, true);\n     translate([2,12,22]) cylinder(8, 3, 0, true);\n  translate([-3,12,22]) cylinder(8, 3, 0, true);\n   translate([-8,12,22]) cylinder(8, 3, 0, true);\n    translate([-13,12,22]) cylinder(8, 3, 0, true);\n     translate([-18,12,22]) cylinder(8, 3, 0, true);\n     \n     \n        translate([17,7,22]) cylinder(8, 3, 0, true);\n   translate([12,7,22]) cylinder(8, 3, 0, true);\n    translate([7,7,22]) cylinder(8, 3, 0, true);\n     translate([2,7,22]) cylinder(8, 3, 0, true);\n  translate([-3,7,22]) cylinder(8, 3, 0, true);\n   translate([-8,7,22]) cylinder(8, 3, 0, true);\n    translate([-13,7,22]) cylinder(8, 3, 0, true);\n     translate([-18,7,22]) cylinder(8, 3, 0, true);\n     \n     \n        translate([17,2,22]) cylinder(8, 3, 0, true);\n   translate([12,2,22]) cylinder(8, 3, 0, true);\n    translate([7,2,22]) cylinder(8, 3, 0, true);\n     translate([2,2,22]) cylinder(8, 3, 0, true);\n  translate([-3,2,22]) cylinder(8, 3, 0, true);\n   translate([-8,2,22]) cylinder(8, 3, 0, true);\n    translate([-13,2,22]) cylinder(8, 3, 0, true);\n     translate([-18,2,22]) cylinder(8, 3, 0, true);\n     \n         translate([17,-3,22]) cylinder(8, 3, 0, true);\n   translate([12,-3,22]) cylinder(8, 3, 0, true);\n    translate([7,-3,22]) cylinder(8, 3, 0, true);\n     translate([2,-3,22]) cylinder(8, 3, 0, true);\n  translate([-3,-3,22]) cylinder(8, 3, 0, true);\n   translate([-8,-3,22]) cylinder(8, 3, 0, true);\n    translate([-13,-3,22]) cylinder(8, 3, 0, true);\n     translate([-18,-3,22]) cylinder(8, 3, 0, true);\n     \n     \n         translate([17,-8,22]) cylinder(8, 3, 0, true);\n   translate([12,-8,22]) cylinder(8, 3, 0, true);\n    translate([7,-8,22]) cylinder(8, 3, 0, true);\n     translate([2,-8,22]) cylinder(8, 3, 0, true);\n  translate([-3,-8,22]) cylinder(8, 3, 0, true);\n   translate([-8,-8,22]) cylinder(8, 3, 0, true);\n    translate([-13,-8,22]) cylinder(8, 3, 0, true);\n     translate([-18,-8,22]) cylinder(8, 3, 0, true);\n     \n         translate([17,-11,22]) cylinder(8, 3, 0, true);\n   translate([12,-11,22]) cylinder(8, 3, 0, true);\n    translate([7,-11,22]) cylinder(8, 3, 0, true);\n     translate([2,-11,22]) cylinder(8, 3, 0, true);\n  translate([-3,-11,22]) cylinder(8, 3, 0, true);\n   translate([-8,-11,22]) cylinder(8, 3, 0, true);\n    translate([-13,-11,22]) cylinder(8, 3, 0, true);\n     translate([-18,-11,22]) cylinder(8, 3, 0, true);\n     \n     \n         translate([17,-16,22]) cylinder(8, 3, 0, true);\n   translate([12,-16,22]) cylinder(8, 3, 0, true);\n    translate([7,-16,22]) cylinder(8, 3, 0, true);\n     translate([2,-16,22]) cylinder(8, 3, 0, true);\n  translate([-3,-16,22]) cylinder(8, 3, 0, true);\n   translate([-8,-16,22]) cylinder(8, 3, 0, true);\n    translate([-13,-16,22]) cylinder(8, 3, 0, true);\n     translate([-18,-16,22]) cylinder(8, 3, 0, true);\n\ntranslate([0,30,-25])sphere(d = 10);\n rotate([90,0,0])translate([0,-25,-25]) cylinder(h=10, r=5, center=true);;\n\nunion(){\ntranslate([-22,-20,-35])  cube([42,40,55]);\n    color(\"lightyellow\"){\ntranslate([5,20,-25])  cube([20,2,20]);\ntranslate([-25,20,-25])  cube([20,2,20]);}\n        color(\"black\"){\ntranslate([-20,23,-15])sphere(r = 3);\n     translate([10,23,-15])sphere(r = 3);\n        }\n        \n    \n}"
  },
  {
    "_id": "RN8i3YmEQLqoQ9A8i",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-01T19:54:13.553Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mkmrl3qs50lzafgervyk",
        "version": 1551470069,
        "signature": "431aff0cc6d6684096d8329567208d2ea977521a",
        "width": 2520,
        "height": 1356,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T19:54:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 6769381,
        "type": "upload",
        "etag": "444bd4529c1549b3fd2452bee7241dc2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551470069/avalanche2019/mkmrl3qs50lzafgervyk.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551470069/avalanche2019/mkmrl3qs50lzafgervyk.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "2813650",
          "dar": "210:113"
        },
        "frame_rate": 60,
        "bit_rate": 2818129,
        "duration": 19.216667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qxpybfskqalhy7uzrwuz",
        "version": 1551470077,
        "signature": "44add41f8dc22ab29db49e914aecb284d51df9a2",
        "width": 2514,
        "height": 1372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T19:54:37Z",
        "tags": [],
        "bytes": 887710,
        "type": "upload",
        "etag": "ff7ddf471fa5edf26d249c0b21aa03f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551470077/avalanche2019/qxpybfskqalhy7uzrwuz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551470077/avalanche2019/qxpybfskqalhy7uzrwuz.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T20:02:41.438Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Trying to make a Pollock like painting (so far unsuccessfully)"
  },
  {
    "_id": "RScmb3ASr4PJ9bSNN",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T17:50:56.792Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mxgpbkulfgtdmh6aip6u",
        "version": 1557424262,
        "signature": "d1a8bfa0203e925cb238f879fdada614aa43a2cf",
        "width": 1928,
        "height": 1356,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T17:51:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 200498,
        "type": "upload",
        "etag": "be14b54d84879725983cfb8096094820",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557424262/avalanche2019/mxgpbkulfgtdmh6aip6u.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557424262/avalanche2019/mxgpbkulfgtdmh6aip6u.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "204654",
          "dar": "482:339"
        },
        "frame_rate": 60,
        "bit_rate": 212448,
        "duration": 7.55,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Mechanics in place. Next task is to add speech control where there is currently mouse control.",
    "code": "let dog_img;\nlet dog_is_wagging = true;\n\nfunction preload() {\n    rest = loadAnimation('./assets/wag/wag_0.png');\n    wag = loadAnimation('./assets/wag/wag_1.png', './assets/wag/wag_2.png');\n}\n\nfunction setup() {\n    const width = window.innerWidth;\n    const height = 850;\n    createCanvas(width, height);\n}\n\nfunction draw() {\n    background(255, 50, 50);\n    frameRate(20);\n    if(mouseIsPressed) {\n        wag.visible = true;\n        wag.play();\n\n        rest.visible = false;\n        rest.stop();\n    }\n    else {\n        wag.visible = false;\n        wag.stop();\n\n        rest.visible = true;\n        rest.play();\n    }\n\n    animation(wag, width / 2, height - 300);\n    animation(rest, width / 2, height - 300);\n}"
  },
  {
    "_id": "RTRWzFxgs3NxJcZMx",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T19:41:00.594Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/af1ia5ca0xjtjwnkddlf",
        "version": 1550260771,
        "signature": "bb3236f0f99b15291e94d6a3f4a7bd8f01d40169",
        "width": 592,
        "height": 520,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T19:59:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 1805609,
        "type": "upload",
        "etag": "971931e29eb4e1865f2b7cdb0eb77ec9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550260771/avalanche2019/af1ia5ca0xjtjwnkddlf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550260771/avalanche2019/af1ia5ca0xjtjwnkddlf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3051094",
          "dar": "74:65"
        },
        "frame_rate": 60,
        "bit_rate": 3163110,
        "duration": 4.566667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/u0o90tyiytwmn1ckuqs0",
        "version": 1550260801,
        "signature": "6dded5aae791be0ca3afad37f120de82b5d366b1",
        "width": 592,
        "height": 521,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T20:00:01Z",
        "tags": [],
        "bytes": 45658,
        "type": "upload",
        "etag": "68ac633bc4de4f50129692c4ea6ec231",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550260801/avalanche2019/u0o90tyiytwmn1ckuqs0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550260801/avalanche2019/u0o90tyiytwmn1ckuqs0.png"
      },
      {
        "public_id": "avalanche2019/uhvtoavmlxtrgda0bxt1",
        "version": 1550260830,
        "signature": "ac31ad391ee31863999f25ed07e433e1aa37d367",
        "width": 592,
        "height": 521,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T20:00:30Z",
        "tags": [],
        "bytes": 26913,
        "type": "upload",
        "etag": "f92b8f1365d8c9c76679277bf85d3007",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550260830/avalanche2019/uhvtoavmlxtrgda0bxt1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550260830/avalanche2019/uhvtoavmlxtrgda0bxt1.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-16T05:36:43.918Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\nlet angle = 0;\nlet numLines = 100;\nlet change = 200;\n// let v1 = 0.4\n\nfunction setup() {\n    background(0, 0, 0, .5);\n    createCanvas(600, 600);\n    smooth();\n    colorMode(RGB, 255, 255, 255, 1);\n    stroke(0, 0, 0, 1);\n    //noFill();\n    //less can be seen as speed \n\n    createP('variation');\n    variationSlider = createSlider(.1, .7, .3, .05);\n    v1 = variationSlider.value();\n    createP('size');\n    sizeSlider = createSlider(50, 200, 100, 10);\n    size = sizeSlider.value();\n    createP('line length');\n    lengthSlider = createSlider(1, 20, 10, 1);\n    lineLength = lengthSlider.value();\n    createP('speed');\n    speedSlider = createSlider(.005, .04, .01, .005);\n    speedLength = speedSlider.value();\n\n}\n\n// function draw() {\n//   ellipse(20,20,20,20);\n// }\n\nfunction draw() {\n    background(0, 0, 0, 1);\n    ellipse(300, 300, 300, 400);\n    //ellipse(300, 300, 350, 350);\n  \t//ellipse(300, 300, 100, 100);\n\t\t\n  \tarc(200, 350, 50, 40, -PI, 0, CHORD / 2.0);\n  \tarc(400, 350, 50, 40, -PI, 0, CHORD / 2.0);\n    arc(300, 440, 100, 25, -PI, 0, CHORD / 2.0);\n  \tline(290, 390, 310, 390);\n    line(280, 440, 320, 440);\n    line(200, 350, 220, 350);\n    line(375, 350, 395, 350);\n\n\n\n\n    angle += 0.04;\n    translate(width / 1.75 - 40, height / 4);\n    rotate(sin(angle));\n    strokeWeight(5);\n    //draw lines \n    for (i = 2; i < numLines; i++) {\n        point1 = {\n            x: point1X(change + i),\n            y: point1Y(change + i),\n        };\n        // point1 = (point1X(change + i), point1Y(change + i));\n\n     \n        point2 = {\n            x: point2X(change + i),\n            y: point2Y(change + i),\n        };\n        line(point1.x, point1.y, point2.x, point2.y);\n    }\n    //bigger lines smaller and more of them \n    change += speedSlider.value();\n}\n\n\n\nfunction point1X(change) {\n    return sin(change) * lengthSlider.value() + cos(change / variationSlider.value()) * sizeSlider.value();\n}\n\n\nfunction point1Y(change) {\n    return cos(change * 2) * lengthSlider.value() + sin(change / variationSlider.value()) * sizeSlider.value();\n}\n\n\nfunction point2X(change) {\n    return sin(change * 2) * (lengthSlider.value() * 10) + cos(change / variationSlider.value()) * sizeSlider.value();\n}\n\n\nfunction point2Y(change) {\n    return cos(change * 2) * (lengthSlider.value() * 10) + sin(change / variationSlider.value()) * sizeSlider.value();\n}",
    "description": "Inspired by Brook's amazing sketch, which made me think of energetic patterns so I wanted to try something similar as an expression of the third eye."
  },
  {
    "_id": "RXRzKRebNbJrmYeTk",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T04:13:34.851Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sxmzlm3cslfvytdv2c82",
        "version": 1556857264,
        "signature": "a4b2177a340c105a78282b526667f909f159b3c9",
        "width": 1116,
        "height": 756,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T04:21:04Z",
        "tags": [],
        "bytes": 36661,
        "type": "upload",
        "etag": "b41fdbf2019011d425cfb2909d20be6e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556857264/avalanche2019/sxmzlm3cslfvytdv2c82.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556857264/avalanche2019/sxmzlm3cslfvytdv2c82.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T17:32:57.591Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:19:56.019Z" }
      }
    ],
    "title": "",
    "description": "Reminds me of a roller coaster in a city",
    "inspiration_name": "OpenSCAD docs and examples",
    "inspiration_url": "https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Commented_Example_Projects"
  },
  {
    "_id": "RYhHZCLko97J4vHeB",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T17:46:19.218Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/khfldt36i4ep3egh1fy2",
        "version": 1550252794,
        "signature": "a9859deb63654ac29b9382d8f5c1415c3a158f56",
        "width": 2592,
        "height": 1728,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T17:46:34Z",
        "tags": [],
        "bytes": 215988,
        "type": "upload",
        "etag": "503155bb8bdfda0feb62da8275338a89",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550252794/avalanche2019/khfldt36i4ep3egh1fy2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550252794/avalanche2019/khfldt36i4ep3egh1fy2.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Random chick generator"
  },
  {
    "_id": "Rb6heBAiyG7o47yr8",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-03T04:56:55.736Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rsgtxrki8qmrqdkz9g7z",
        "version": 1554267431,
        "signature": "6e8725f7c4d8b4cbbd7845ab8ad9632244719631",
        "width": 1950,
        "height": 1944,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-03T04:57:11Z",
        "tags": [],
        "bytes": 756593,
        "type": "upload",
        "etag": "4b4e9ba559196d32e52654b8b79c1e59",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554267431/avalanche2019/rsgtxrki8qmrqdkz9g7z.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554267431/avalanche2019/rsgtxrki8qmrqdkz9g7z.jpg"
      },
      {
        "public_id": "avalanche2019/rykr5n1idd7fi1f5pgqd",
        "version": 1554267437,
        "signature": "8344417931e384d0ef235e15af3c12ab9305516e",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-03T04:57:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 5177266,
        "type": "upload",
        "etag": "8db9a234800bc90c59947dd53cad4fc3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554267437/avalanche2019/rykr5n1idd7fi1f5pgqd.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554267437/avalanche2019/rykr5n1idd7fi1f5pgqd.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "13801000",
          "dar": "1:1"
        },
        "frame_rate": 30,
        "bit_rate": 13806042,
        "duration": 3,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-03T23:43:58.804Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-04T21:58:38.27Z" }
      }
    ],
    "title": "",
    "description": "A bit too much for 3 seconds, might rework this to also rotate the “camera pane” to off-center it a bit.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar EXPORT = false;\n\nconst canvas = {\n  w: 800,\n  h: 800\n};\nfunction setup() {\n  createCanvas(canvas.w, canvas.h, WEBGL);\n  // line and canvas aesthetics\n  noStroke();\n  angleMode(DEGREES);\n  frameRate(30)\n}\n\nfunction draw() {\n  background(0);\n  // ambientLight(220);\n\n  window.s = sin(frameCount / 90 * 180) * 0.5;\n  var s2 = sin(frameCount / 90 * 360) * 0.5;\n  var s3 = sin(frameCount / 90 * 540) * 0.5;\n\n  let locX = sin(frameCount / 90 * 360)*height - height / 2;\n  let locY = cos(frameCount / 90 * 180)*width - width / 2;\n\n\n  ambientLight(40);\n  directionalLight(255, locY, locX, 0.25, 0.25, 0);\n  pointLight(0, 0, 255, locX, locY, 250);\n  \n  var iterations = 10000\n  for (let index = 0; index < iterations; index++) {\n    push();\n    rotateZ((s3+index)*0.2);\n    rotateX((s2+index*s3)*0.01);\n    rotateY((s+index)*0.01);\n    specularMaterial(250);\n    translate(s*10+index*s3, s*15+index*4*s2, s2+s*index/iterations);\n    box(10, 10, 10);\n    pop();\n  }\n  \n\n  translate(width / 4, 0, 0);\n  ambientMaterial(250);\n  // sphere(10);\n\n\n\n  if (EXPORT) {\n      saveFrame(\"EXPORT\", frameCount, \"jpg\", 90);\n  }\n  if (frameCount > 90) {\n      noLoop();\n  }\n\n}\n\n\n\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n      return;\n  }\n\n  if (!extension) {\n      extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "RdHc5yG77PuDCMv4K",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "created_at": { "$date": "2019-01-27T22:07:26.02Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xowceoez4qnlwcwslgwc",
        "version": 1548626861,
        "signature": "02ad19ddaff180efb44cb1198aa68be21aee04d6",
        "width": 436,
        "height": 640,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-27T22:07:41Z",
        "tags": [],
        "bytes": 26233,
        "type": "upload",
        "etag": "931a97a194ebaea9b0735351b17100aa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548626861/avalanche2019/xowceoez4qnlwcwslgwc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548626861/avalanche2019/xowceoez4qnlwcwslgwc.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Playing with Escher shapes",
    "inspiration_name": "Escher"
  },
  {
    "_id": "RdZCizjHXnLoyh2Zi",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:50:38.78Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kcvlvahmeregsurgpst0",
        "version": 1555095045,
        "signature": "dce1133ef2b9677e8e41cfe84f45cc930c9895a9",
        "width": 3766,
        "height": 3631,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T18:50:45Z",
        "tags": [],
        "bytes": 352584,
        "type": "upload",
        "etag": "37d2a7c7bbf61c21fc843b619a9bcb12",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555095045/avalanche2019/kcvlvahmeregsurgpst0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555095045/avalanche2019/kcvlvahmeregsurgpst0.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T18:57:51.008Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2019-04-14T01:56:00.999Z" }
      }
    ],
    "title": "",
    "description": "One more version of the Opening Lines series from earlier this week, this time generated with a CFG. Getting these particular sentences took several runs of the grammar...most of which resulted in not great output.",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    // High level (phrase) rules\n    \"SENTENCE\": [\n        \"#PHRASE# #connector_word# #PHRASE#\",\n        \"#while_word# #PHRASE#, #PHRASE#\",\n        \"#NOUN_PHRASE# #say_word#, '#PHRASE#'\",\n        \"#PHRASE#\"],\n    \n    \"PHRASE\": [\n        \"#NOUN_PHRASE# #VERB_PHRASE#\"\n    ],\n\n    \"NOUN_PHRASE\": [\n        \"#det# #adj_phrase# #noun#\",\n        \"#det# #noun#\",\n        \"#noun#\",\n        \"#noun_prop_word#\"\n    ],\n\n    \"VERB_PHRASE\": [\n        \"#verb_word#\",\n        \"#adv_phrase# #verb_word#\",\n        \"#verb_word# #adv_phrase#\",\n        \"#verb_dir# #obj#\",\n        \"#adv_phrase# #verb_dir# #obj#\",\n        \"#verb_dir# #obj# #adv_phrase#\"\n        ],\n\n    \"adv_phrase\": [\n        \"#adv_word#\",\n        \"#adv_modifier_word# #adv_word#\"\n    ],\n\n    \"adj_phrase\": [\n        \"#adj_word#\",\n        \"#adj_modifier_word# #adj_word#\"\n    ],\n\n    // Mid level (word) rules\n    \"noun\": [\n        \"#noun_word#\"\n    ],\n\n    \"det\": [\n        \"#det_def_word#\",\n        \"#det_indef_word#\"\n    ],\n\n    \"obj\": [\n        \"#NOUN_PHRASE#\"\n    ],\n\n    \"obj_indir\": [\n        \"#NOUN_PHRASE#\"\n    ],\n\n    // Terminals (our lexicon)\n    \"verb_word\": [\n        \"comes\", \"come\", \"came\",\n        \"swerves\", \"swerve\", \"swerved\",\n        \"remember\", \"remembers\", \"remembered\",\n        \"explode\", \"explodes\", \"exploded\",\n        \"tumble\", \"tumbles\", \"tumbled\",\n        \"climb\", \"climbs\", \"climbed\",\n        \"was born\",\n        \"dart\", \"darts\", \"darted\"\n    ],\n    \"verb_dir\": [\n        \"call\", \"calls\", \"called\",\n        \"strike\", \"strikes\", \"struck\",\n        \"drag\", \"drags\", \"dragged\",\n        \"shoot\", \"shoots\", \"shot\",\n        \"ruin\", \"ruins\", \"ruined\",\n        \"electrocute\", \"electrocutes\", \"electrocuted\",\n        \"reveal\", \"reveals\", \"revealed\"\n    ],\n    \"noun_prop_word\": [\n        \"Ishmael\",\n        \"Adam\",\n        \"Eve\",\n        \"Howth Castle and Environs\",\n        \"Miss Lonelyhearts\",\n        \"New York Post Dispatch\",\n        \"Italo Calvino\",\n        \"David Copperfield\",\n        \"Buck Mulligan\",\n        \"Mrs Oedipa Maas\",\n        \"Goose Village\",\n        \"Jacob Horner\",\n        \"Mrs Dalloway\",\n        \"Dr Weiss\",\n        \"Eustace Clarence Scrubb\",\n        \"Miss Brooke\",\n        \"Gibreel Farishta\",\n        \"Dick Gibson\",\n        \"Aunt Dot\",\n        \"Ebenezer Cooke\",\n        \"Tiberius Claudius Drusus Nero Germanicus\",\n        \"North Pole\",\n        \"towers of Zenith\",\n        \"Lucas Beauchamp\"\n    ],\n    \"noun_word\": [\n        \"screaming\",\n        \"sky\",\n        \"many\", \"some\",\n        \"he\", \"she\", \"they\",\n        \"loin\", \"loins\",\n        \"fire\",\n        \"bay\",\n        \"vicus\",\n        \"man\",\n        \"childhood\",\n        \"parents\",\n        \"crap\",\n        \"truth\",\n        \"gentleman\",\n        \"orchard\",\n        \"tupperware party\",\n        \"executor\",\n        \"California real estate mogul\",\n        \"job\",\n        \"literature\",\n        \"shadow\",\n        \"fish\",\n        \"baby girl\",\n        \"grandmother\",\n        \"misgiving\",\n        \"nuisance\",\n        \"heavens\",\n        \"feet\",\n        \"irritation\",\n        \"kitchen sink\",\n        \"justice\",\n        \"pig\",\n        \"kilt\",\n        \"scholarship\",\n        \"fashion\",\n        \"women\",\n        \"disaster\",\n        \"hummingbird\",\n        \"professors\",\n        \"fogs\",\n        \"people\",\n        \"dimensions of space\",\n        \"children\",\n        \"gift of laughter\",\n        \"lover\",\n        \"morning mist\",\n        \"cement\"\n    ],\n    \"det_def_word\": [\n        \"the\",\n        \"my\"\n    ],\n    \"det_indef_word\": [\n        \"a\"\n    ],\n    \"adj_word\": [\n        \"happy\",\n        \"unhappy\",\n        \"commodius\",\n        \"bright\",\n        \"cold\",\n        \"invisible\",\n        \"lousy\",\n        \"spiteful\",\n        \"sick\",\n        \"angry\",\n        \"numerous\",\n        \"tiny\",\n        \"false\",\n        \"old\",\n        \"lonely\",\n        \"wrong\",\n        \"ugly\",\n        \"gangling\",\n        \"common\",\n        \"retiring\",\n        \"stubborn\",\n        \"middle aged\",\n        \"austere\",\n        \"sturdy\"\n    ],\n    \"adv_word\": [\n        \"astonishingly\",\n        \"unconscionably\",\n        \"reluctantly\"\n    ],\n    \"adj_modifier_word\": [\n        \"slightly\",\n        \"quite\"\n    ],\n    \"adv_modifier_word\": [\n        \"\"\n    ],\n    \"connector_word\": [\n        \"and\",\n        \"while\",\n        \"but\",\n        \"so\"\n    ],\n    \"transfer_word\": [\n        \"to\",\n        \"for\"\n    ],\n    \"question_word\": [\n        \"who\"\n    ],\n    \"while_word\": [\n        \"while\",\n        \"as\",\n        \"just as\"\n    ],\n    \"say_word\": [\n        \"said\",\n        \"says\",\n        \"exclaimed\",\n        \"proclaimed\"\n    ]\n}\n\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten(\"#SENTENCE#\");\n\n    const storyDiv = document.createElement('div');\n    storyDiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n    storyDiv.textContent = story;\n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n}\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "RgWzC8xzkK5PBs6p7",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:33:34.379Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rw3wtu050nfcgwbwtg6u",
        "version": 1552062866,
        "signature": "6f9d6a4037c8355939c1987d1b8a7eba24c69d68",
        "width": 2028,
        "height": 1500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:34:26Z",
        "tags": [],
        "bytes": 776743,
        "type": "upload",
        "etag": "3fcbaae8c168c216b9b848c4c4dc08d8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552062866/avalanche2019/rw3wtu050nfcgwbwtg6u.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552062866/avalanche2019/rw3wtu050nfcgwbwtg6u.png"
      },
      {
        "public_id": "avalanche2019/esgwuvzvgttzey0vvjgw",
        "version": 1552062884,
        "signature": "87cc3ec73bb3cde4cc41fb577d5d7e86eb5ec47b",
        "width": 512,
        "height": 384,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T16:34:44Z",
        "tags": [],
        "bytes": 33700,
        "type": "upload",
        "etag": "63e138109d803bc5d556f2c5d3f22494",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552062884/avalanche2019/esgwuvzvgttzey0vvjgw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552062884/avalanche2019/esgwuvzvgttzey0vvjgw.jpg"
      },
      {
        "public_id": "avalanche2019/dfwypzrrflkx5f0iromx",
        "version": 1552062908,
        "signature": "562de8f0158722bbc2691d440b41463f75843b2b",
        "width": 1466,
        "height": 1566,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:35:08Z",
        "tags": [],
        "bytes": 545106,
        "type": "upload",
        "etag": "ca835e69f4a487d1dab36ebbe0a21180",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552062908/avalanche2019/dfwypzrrflkx5f0iromx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552062908/avalanche2019/dfwypzrrflkx5f0iromx.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T16:51:15.338Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-08T16:51:16.802Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-08T20:52:47.546Z" }
      }
    ],
    "title": "",
    "description": "TURNING A FLAT IMAGE INTO 3D SPACE\nUsing openframworks I mapped lightness of an image to the position of spheres creating a 3D representation of a flat image \n\nI really wanted to do this using javascript and three,js but failed miserably",
    "inspiration_name": "3D from 2D"
  },
  {
    "_id": "RiWG3FgzQM9JPE7dw",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T20:35:44.203Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gqfcacspwamc9ep4ytul",
        "version": 1554262462,
        "signature": "ed6e9252fdaceb92f2e980dbac7c47690864ba24",
        "width": 1244,
        "height": 992,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-03T03:34:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 5421767,
        "type": "upload",
        "etag": "2c7cbb13ee59a68d770f56a7b9d905d4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554262462/avalanche2019/gqfcacspwamc9ep4ytul.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554262462/avalanche2019/gqfcacspwamc9ep4ytul.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "6263245",
          "dar": "311:248"
        },
        "frame_rate": 60,
        "bit_rate": 6648735,
        "duration": 6.523667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ll9q4klslf74ijuyk36t",
        "version": 1554262487,
        "signature": "ee89b2d27545fd32fef27a1e0c3d54228f5cceca",
        "width": 2324,
        "height": 820,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-03T03:34:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 15717680,
        "type": "upload",
        "etag": "3ea6a148542d9b223d2afc5d5156b32d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554262487/avalanche2019/ll9q4klslf74ijuyk36t.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554262487/avalanche2019/ll9q4klslf74ijuyk36t.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "6446916",
          "dar": "581:205"
        },
        "frame_rate": 60,
        "bit_rate": 6453795,
        "duration": 19.483333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/kpsywjccnntkgcerkmaj",
        "version": 1554262493,
        "signature": "93da7afc2ec786c9833e02815bd6e1ef9bde9d58",
        "width": 2518,
        "height": 964,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-03T03:34:53Z",
        "tags": [],
        "bytes": 148853,
        "type": "upload",
        "etag": "1cc541d7538d983395d68be103dcb444",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554262493/avalanche2019/kpsywjccnntkgcerkmaj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554262493/avalanche2019/kpsywjccnntkgcerkmaj.png"
      }
    ],
    "votes": [
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T19:58:11.913Z" }
      }
    ],
    "title": "",
    "description": "An early test, just to see what could be interesting. Will continue to build this up...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nconst line_points = [];\n\nfunction preload() {\n    hand = loadImage(\"./assets/bumper_hand_00.png\");\n}\n\nfunction setup() {\n    createCanvas(windowWidth, windowHeight);\n    H = new Hand(0, 0, hand);\n}\n\nfunction draw() {\n    background(255);\n    if (H.pos.x < windowWidth - 100) {\n        H.moveBrownian(2);\n    }\n    H.penDown();\n    H.display();\n}\n\nclass Hand {\n    constructor(_x, _y, _img) {\n        this.pos = {\n            x: _x,\n            y: _y,\n        },\n        this.img = _img,\n        this.tip = {\n            x: _x - .5,\n            y: _y + 141\n        },\n        this.w = 600,\n        this.h = 600 / 1.2\n    }\n\n    moveBrownian(_step_dist) {\n        let rand = {\n            x: random(_step_dist),\n            y: random(-_step_dist, _step_dist)\n        };\n        this.pos.x += rand.x;\n        this.pos.y += rand.y / 6;\n\n        this.tip.x += rand.x;\n        this.tip.y += rand.y / 6;\n    }\n\n    // drawNoisyLine(_to, _from) {\n    //     penDown();\n    // }\n\n    penDown(_color, _weight) {\n        // Points in line\n        line_points.push({x: this.tip.x, y: this.tip.y});\n\n        // Connect points\n        strokeWeight(2);\n        stroke(50);\n        // beginShape();\n            for (let p = 1; p < line_points.length; p++) {\n                // vertex(line_points[p].x, line_points[p].y);\n                line(\n                    line_points[p - 1].x, line_points[p - 1].y,\n                    line_points[p].x, line_points[p].y,\n                )\n            }\n        // endShape();\n    }\n\n    display() {\n        image(this.img, this.pos.x, this.pos.y, this.w, this.h);\n    }\n}"
  },
  {
    "_id": "Rmei9YDaLGc5RBYvC",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-11T00:58:22.207Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qp4ggnscjxzcj0pyry0z",
        "version": 1552265915,
        "signature": "81a4b17c149b6ac0c80b5036ef1c0334b037c9b7",
        "width": 624,
        "height": 624,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-11T00:58:35Z",
        "tags": [],
        "bytes": 25692,
        "type": "upload",
        "etag": "ebe066d138ff42c63b5971edd1bf061f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552265915/avalanche2019/qp4ggnscjxzcj0pyry0z.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552265915/avalanche2019/qp4ggnscjxzcj0pyry0z.jpg"
      },
      {
        "public_id": "avalanche2019/sdhwk2enctrjetvhpdw8",
        "version": 1552265919,
        "signature": "cb853c5988751064d75ff184d3e47ef30026834b",
        "width": 624,
        "height": 624,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-11T00:58:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 426711,
        "type": "upload",
        "etag": "b9a9e5ae093b0f40c1f07544d179f262",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552265919/avalanche2019/sdhwk2enctrjetvhpdw8.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552265919/avalanche2019/sdhwk2enctrjetvhpdw8.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "308108",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 307613,
        "duration": 11.075918,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/fhln65x4uz4q6qzkdqnz",
        "version": 1552265925,
        "signature": "ef9cf33b7da58ab34b41ee9659b50d5ef46b76b4",
        "width": 624,
        "height": 624,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-11T00:58:45Z",
        "tags": [],
        "bytes": 19699,
        "type": "upload",
        "etag": "c0bc3aaf21a0318bda5de3a8e3dd69cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552265925/avalanche2019/fhln65x4uz4q6qzkdqnz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552265925/avalanche2019/fhln65x4uz4q6qzkdqnz.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Adding to the last project, I have created a moving car using Turtle graphics in p5.js.\nThe car's headlight fluctuates as it moves on a moonlit night.\n\nI was trying to create wind, but the moving particles were coinciding with background() in the setup function.",
    "inspiration_name": "Moving Turtle Car",
    "code": "// Program to create a moving car using Turtle graphics\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n\n// Logic:\n// 1. Create a car shape\n// 2. Create car tires and change stroke color to give movement\n// 3. Add wind going against the direction of car to create a sense of movement.\n// 4. Make it fancy by adding lights, moon, etc.\n\nvar myTurtle;\n\n// Tactic: Bouncing Ball\nvar strokeColor; // tire\nvar strokeColorChangeRate;\nvar particleXMovement; // wind\nvar particleMovementChangeRate;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n    background(0);\n\n    stroke(255);\n    strokeColor = 255;\n    strokeColorChangeRate = 40; // tire rotation rate\n    particleXMovement = width;\n    particleMovementChangeRate = 5; // wind speed\n\n    // Draw the car\n    carBody(myTurtle, width / 6, height / 1.4);\n}\n\nfunction draw() {\n\n    noFill();\n    stroke(strokeColor);\n    strokeWeight(1);\n\n    // Draw the tires\n    carTireMovement(myTurtle, width / 4, height / 1.2);\n    carTireMovement(myTurtle, width / 1.5, height / 1.2);\n    // Draw wind particles\n    windParticles();\n    // Draw moon\n    displayMoon();\n    // Draw lights\n    carLights();\n    // noLoop();\n}\n\n\nfunction carBody(t, xPos, yPos) {\n\n    // move to starting position (without drawing)\n    t.penUp();\n    t.moveTo(xPos, yPos);\n    // put the pen down to draw\n    t.penDown();\n\n    // draw a car\n    t.moveForward(40);\n    t.turnLeft(60);\n    t.moveForward(60);\n    t.turnRight(60);\n    t.moveForward(120);\n    t.turnRight(60);\n    t.moveForward(60);\n    t.turnLeft(60);\n    t.moveForward(80);\n    t.turnRight(90);\n    t.moveForward(40);\n    t.turnRight(90);\n    t.moveForward(300);\n    t.turnRight(90);\n    t.moveForward(40);\n}\n\nfunction carTireMovement(t, xPos, yPos) {\n\n    // move to starting position (without drawing)\n    t.penUp();\n    t.moveTo(xPos, yPos);\n    // put the pen down to draw\n    t.penDown();\n\n    penFadeInFadeOut();\n\n    // draw a shape\n    for (var i = 0; i < 9; i++) {\n        t.moveForward(5);\n        t.penUp();\n        t.moveForward(20);\n        t.penDown();\n        t.turnRight(129);\n    }\n}\n\nfunction windParticles() {\n    fill(255, 50);\n    noStroke();\n    for (i = 0; i < 1; i++) {\n        var particleSize = random(0.1, 10);\n        ellipse(particleXMovement, random(height), particleSize, particleSize);\n    }\n    windMovement();\n}\n\nfunction displayMoon() {\n    noStroke();\n    fill(255);\n    ellipse(width / 1.2, height / 6, 50, 50);\n    fill(0);\n    ellipse(width / 1.25, height / 6, 50, 50);\n}\n\nfunction carLights() {\n    fill(random(180, 255));\n    noStroke();\n    beginShape();\n    vertex(width / 1.3, height / 1.4);\n    vertex(width, height / 1.6);\n    vertex(width, height / 1.2);\n    vertex(width / 1.3, height / 1.3);\n    endShape();\n}\n\n\n// Bouncing Ball Tactics\n// Tire Fade In and Fade Out\nfunction penFadeInFadeOut() {\n    if (strokeColor < 0) {\n        strokeColorChangeRate = abs(strokeColorChangeRate);\n    }\n    if (strokeColor > 255) {\n        strokeColorChangeRate = -abs(strokeColorChangeRate);\n    }\n    strokeColor += strokeColorChangeRate;\n}\n// Wind movement\nfunction windMovement() {\n    if (particleXMovement < 0) {\n        particleMovementChangeRate = abs(particleMovementChangeRate);\n    }\n    if (particleXMovement > width) {\n        particleMovementChangeRate = -abs(particleMovementChangeRate);\n    }\n    particleXMovement -= particleMovementChangeRate;\n}"
  },
  {
    "_id": "RnjyofJQohzqyhyY6",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Music",
    "created_at": { "$date": "2019-05-02T16:38:49.616Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/enwc6j4l23gy1sord9b2",
        "version": 1556816528,
        "signature": "64599bcdc79dd6004317dc4b0195bd053d74392f",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-02T17:02:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 14868708,
        "type": "upload",
        "etag": "3403c607437723d572745600c2214774",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556816528/avalanche2019/enwc6j4l23gy1sord9b2.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556816528/avalanche2019/enwc6j4l23gy1sord9b2.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "107685",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "4301158",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 4447816,
        "duration": 26.743383,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "experimental"
  },
  {
    "_id": "RqKL2Xq9DWZPghSAe",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T16:12:23.398Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xm6ybfka36igv9lsap3i",
        "version": 1554480779,
        "signature": "b093e4aec6620304e558d124fe26a92094939fed",
        "width": 2096,
        "height": 1052,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T16:12:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 12454265,
        "type": "upload",
        "etag": "e07ec3f7a1f87cc5cf1a41d60c9bb79a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554480779/avalanche2019/xm6ybfka36igv9lsap3i.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554480779/avalanche2019/xm6ybfka36igv9lsap3i.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "289895",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2892506",
          "dar": "524:263"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3226145,
        "duration": 30.883333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T16:37:20.952Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-06T02:47:08.647Z" }
      }
    ],
    "title": "",
    "description": "Bumper using paper script",
    "code": "var c = document.getElementById(\"myCanvas\");\n\n//triangle 1 \nvar totalRadius = 150;\nvar triangle1 = {\n    center: new Point(500, 400),\n    radius: totalRadius,\n    height: totalRadius / 2,\n    // length of one side of triangle \n    // sideLength: (triangle1Radius / 2) * Math.sqrt(3),\n};\n\nvar triangle1Path = new Path.RegularPolygon(triangle1.center, 3, triangle1.radius);\n\nmoveTriangle(triangle1);\n\n\n//triangle 2\nvar triangle2 = {\n    center: new Point(triangle1.center.x, triangle1.center.y + triangle1.height / 2),\n    radius: triangle1.radius / 2,\n    height: triangle1.radius / 4,\n\n    sideLength: (triangle1.radius / 2) * Math.sqrt(3),\n};\n\nvar triangle2Path = new Path.RegularPolygon(triangle2.center, 3, triangle2.radius);\n\ntriangle2Path.rotate(180);\nmoveTriangle(triangle2);\n\n//creating all trinagles groups of 3 or more and motion \nvar thirdLevel = createChildren(triangle2);\n\nvar fourthLevel = createNextGen(thirdLevel);\nconsole.log(fourthLevel);\n\n//creating a level \nvar fifthLevel = createNextGen(fourthLevel[0]);\nvar fifthLevel2 = createNextGen(fourthLevel[1]);\nvar fifthLevel3 = createNextGen(fourthLevel[2]);\n\n//creating next level \ncreate6thLevel(fifthLevel);\ncreate6thLevel(fifthLevel2);\ncreate6thLevel(fifthLevel3);\n\nfunction create6thLevel(parents) {\n    var allTriangles = [];\n    for (var i = 0; i < parents.length; i++) {\n        createNextGen(parents[i]);\n    }\n    return allTriangles;\n}\n\nfunction createNextGen(parents) {\n    var allTriangles = [];\n    for (var i = 0; i < parents.length; i++) {\n        allTriangles[i] = createChildren(parents[i]);\n    }\n    return allTriangles;\n}\n\nfunction createChildren(parentT) {\n    var children = [];\n    children[0] = createChild(parentT, 'top');\n    children[1] = createChild(parentT, 'right');\n    children[2] = createChild(parentT, 'left');\n\n    return children;\n}\n\n\nfunction createChild(parentT, direction) {\n    var triangleInfo = [];\n    //create an array \n    //each array is position 0, triangle object \n    //position 1 desired triangle path \n    //position 2 starting trinagle path \n    if (direction == \"right\") {\n        var direction = new Point(parentT.center.x + parentT.sideLength / 2, parentT.center.y + parentT.height / 2);\n    } else if (direction == \"left\") {\n        var direction = new Point(parentT.center.x - parentT.sideLength / 2, parentT.center.y + parentT.height / 2);\n    } else if (direction == \"top\") {\n        var direction = new Point(parentT.center.x, parentT.center.y - (2.5 * parentT.height));\n    }\n    var triangle = {\n        radius: parentT.radius / 2,\n        center: direction,\n        height: parentT.radius / 4,\n        sideLength: parentT.radius / 2 * Math.sqrt(3),\n    };\n    triangleInfo[0] = triangle;\n    var trianglePath = new Path.RegularPolygon(triangle.center, 3, triangle.radius);\n    triangleInfo[1] = trianglePath;\n    // trianglePath.strokeColor = \"red\";\n    trianglePath.rotate(180);\n\n    //traveling sequence \n    //triangle 1 start\n    triangleInfo[2] = moveTriangle(triangle);\n\n    return triangle;\n\n}\n\n\n\nfunction moveTriangle(triangle) {\n    var start = new Point(1000, 800) * Point.random();\n    //if in ther middle of the screen somewhere in range subtract certain numebr of random point or add certain number of random point \n    if (start.x > 100 && start.x < 500) {\n        // new Point(300, 0);\n        start -= new Point(250, 0);\n    }\n\n    if (start.x > 500 && start.x < 950) {\n        start += new Point(250, 0);\n    }\n    var triangleMove = new Path.RegularPolygon(start, 3, triangle.radius);\n    if (triangle != triangle1) {\n        triangleMove.rotate(180);\n    }\n    // console.log(triangleMove);\n\n    var Xtravel = triangle.center.x - start.x;\n    var Ytravel = triangle.center.y - start.y;\n\n    var travelIncriment = 100;\n    var travelXPerFrame = Xtravel / travelIncriment;\n    // console.log(travelXPerFrame);\n    var travelYPerFrame = Ytravel / travelIncriment;\n    var travelPerFrame = new Point(travelXPerFrame, travelYPerFrame)\n\n    var opacityIncriment = .005;\n    triangleMove.opacity = .001;\n    var lightness = (Math.random() - 0.5) * 0.4 + 0.4;\n    var hue = Math.random() * 360;\n    triangleMove.fillColor = {\n        hue: hue,\n        saturation: 1,\n        lightness: lightness\n    };\n\n\n    triangleMove.blendMode = 'multiply';\n\n    triangleMove.onFrame = function (event) {\n        if (event.count < travelIncriment) {\n\n            this.position += travelPerFrame;\n            // console.log(triangleMove.position);\n            triangleMove.strokeColor = 'white';\n            triangleMove.strokeWidth = .5;\n            // triangleMove.fillColor = 'grey';\n            triangleMove.opacity += opacityIncriment;\n\n\n            this.rotate((360 / travelIncriment));\n        }\n    }\n    return triangleMove;\n\n}\n\n\nvar text = new PointText(new Point(365, 520));\nvar lightness = (Math.random() - 0.5) * 0.4 + 0.4;\nvar hue = Math.random() * 360;\ntext.fillColor = {\n    hue: hue,\n    saturation: 1,\n    lightness: lightness\n};\n\ntext.opacity = .01\ntext.fontFamily = 'Futura';\ntext.fontSize = 40;\ntext.fontWeight = \"bold\";\ntext.onFrame = function (event) {\n\n    if (event.count > 105) {\n        console.log(\"travel complete\")\n        text.opacity += .05;\n        text.content = 'COMP FORM';\n\n    }\n}"
  },
  {
    "_id": "Rqmk7TNPAMjsHS9GL",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T04:56:38.319Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nowwvqnz017xlqt0kqke",
        "version": 1550811458,
        "signature": "5ced70e5f503df1de7e779c2088630e368296c6f",
        "width": 1760,
        "height": 1752,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T04:57:38Z",
        "tags": [],
        "bytes": 90421,
        "type": "upload",
        "etag": "699178671b735fa9e263d6a93274d747",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550811458/avalanche2019/nowwvqnz017xlqt0kqke.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550811458/avalanche2019/nowwvqnz017xlqt0kqke.jpg"
      },
      {
        "public_id": "avalanche2019/qsbkx8ux2ouabaxgzddj",
        "version": 1550811461,
        "signature": "f3589b3fb5bcc8bdfbe17609305786cc9bde9663",
        "width": 1756,
        "height": 1756,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T04:57:41Z",
        "tags": [],
        "bytes": 111570,
        "type": "upload",
        "etag": "2e8a01382fee356dc773e300a9f9772d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550811461/avalanche2019/qsbkx8ux2ouabaxgzddj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550811461/avalanche2019/qsbkx8ux2ouabaxgzddj.jpg"
      },
      {
        "public_id": "avalanche2019/vd9u6ggq4reygpjxrgb8",
        "version": 1550811468,
        "signature": "ceee247aa7cef44fd11cb41e5304357083c7227e",
        "width": 984,
        "height": 984,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T04:57:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 888078,
        "type": "upload",
        "etag": "e0eba08ab7dd55a1a49321e0077940f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550811468/avalanche2019/vd9u6ggq4reygpjxrgb8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550811468/avalanche2019/vd9u6ggq4reygpjxrgb8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "987217",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 993653,
        "duration": 7.15,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Aurora"
  },
  {
    "_id": "Rv4AF9qCxJfeBt9T7",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T22:02:38.017Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ehvd6c59dimdausuznpa",
        "version": 1553810565,
        "signature": "94b8021951557497ee02e3d60f5fcbb9e991dbc2",
        "width": 1318,
        "height": 788,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T22:02:45Z",
        "tags": [],
        "bytes": 199449,
        "type": "upload",
        "etag": "6c1cd0f581f035c76f9e0ba0dbb1f2c6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553810565/avalanche2019/ehvd6c59dimdausuznpa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553810565/avalanche2019/ehvd6c59dimdausuznpa.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "Rv8dmT7R8HQx48cmJ",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T05:45:04.737Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/supbl6xlys5pidttvfge",
        "version": 1551937509,
        "signature": "c0fcef8ec9ad9f258b307a153f6f3157e4c2c219",
        "width": 1256,
        "height": 758,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T05:45:09Z",
        "tags": [],
        "bytes": 36555,
        "type": "upload",
        "etag": "87009a81f54c1da1474b9fa3857eeeac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551937509/avalanche2019/supbl6xlys5pidttvfge.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551937509/avalanche2019/supbl6xlys5pidttvfge.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T15:58:28.23Z" }
      }
    ],
    "title": "",
    "description": "Pixel Font",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n//code learn from https://www.openprocessing.org/sketch/539284\n\nvar x = 5;\nvar y = 5;\n\nvar pixelSize = 30; // Size of the pixels.\nvar canvasWidth = 21; // Width in pixels.\nvar canvasHeight = 21; // Height in pixels.\nvar pixels = [];\n\nfunction setup() {\n\tcreateCanvas(630, 380);\n\tbackground(0);\n  frameRate(1);\n\tfor (var x = 0; x < canvasWidth; x++) {\n\t\tpixels.push([]);\n\t\tfor (var y = 0; y < canvasHeight; y++) {\n\t\t\tpixels[x].push(0);\n      \n\t\t}\n\t}\n}\n\nfunction refresh() {\n\tnoStroke();\n\tfor (var x = 0; x < canvasWidth; x++) {\n\t\tfor (var y = 0; y < canvasHeight; y++) {\n\t\t\tfill(pixels[x][y]);\n\t\t\trect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n\t\t}\n\t}\n}\n\nfunction pixel(x, y, color) {\n\tpixels[x][y] = color;\n\n}\nvar paint; \n\nfunction draw() {\n \n\trefresh();\n\n\t// \"C\"\n\n\tpixel(1, 2, [random(255), random(255), random(255)]);\n  pixel(1, 3, [random(255), random(255), random(255)]);\n\tpixel(2, 1, [random(255), random(255), random(255)]);\n  pixel(2, 4, [random(255), random(255), random(255)]);\n  pixel(3, 1, [random(255), random(255), random(255)]);\n  pixel(3, 4, [random(255), random(255), random(255)]);\n\n\t\n\t// \"O\"\n\tpixel(5, 2, [random(255), random(255), random(255)]);\n\tpixel(5, 3, [random(255), random(255), random(255)]);\n  pixel(6, 1, [random(255), random(255), random(255)]);\n\tpixel(6, 4, [random(255), random(255), random(255)]);\n  pixel(7, 1, [random(255), random(255), random(255)]);\n\tpixel(7, 4, [random(255), random(255), random(255)]);\n  pixel(8, 2, [random(255), random(255), random(255)]);\n\tpixel(8, 3, [random(255), random(255), random(255)]);\n  \n  // \"M\"\n  pixel(10, 1, [random(255), random(255), random(255)]);\n\tpixel(10, 2, [random(255), random(255), random(255)]);\n  pixel(10, 3, [random(255), random(255), random(255)]);\n\tpixel(10, 4, [random(255), random(255), random(255)]);\n  pixel(11, 2, [random(255), random(255), random(255)]);\n\tpixel(12, 3, [random(255), random(255), random(255)]);\n  pixel(13, 2, [random(255), random(255), random(255)]);\n\tpixel(14, 1, [random(255), random(255), random(255)]);\n  pixel(14, 2, [random(255), random(255), random(255)]);\n  pixel(14, 3, [random(255), random(255), random(255)]);\n\tpixel(14, 4, [random(255), random(255), random(255)]);\n  \n  // \"P\"\n  pixel(16, 1, [random(255), random(255), random(255)]);\n\tpixel(16, 2, [random(255), random(255), random(255)]);\n  pixel(16, 3, [random(255), random(255), random(255)]);\n\tpixel(16, 4, [random(255), random(255), random(255)]);\n  pixel(17, 1, [random(255), random(255), random(255)]);\n\tpixel(17, 3, [random(255), random(255), random(255)]);\n  pixel(18, 1, [random(255), random(255), random(255)]);\n\tpixel(18, 3, [random(255), random(255), random(255)]);\n  pixel(19, 2, [random(255), random(255), random(255)]);\n\n  // \"F\"\n  pixel(1, 7, [random(255), random(255), random(255)]);\n pixel(1, 8, [random(255), random(255), random(255)]);\n  pixel(1, 9, [random(255), random(255), random(255)]);\n   pixel(1, 10, [random(255), random(255), random(255)]);\n  pixel(2, 7, [random(255), random(255), random(255)]);\n pixel(3, 7, [random(255), random(255), random(255)]);\n  pixel(2, 9, [random(255), random(255), random(255)]);\n   pixel(3, 9, [random(255), random(255), random(255)]);\n  \n  \t\n\t// \"O\"\n\tpixel(5, 8, [random(255), random(255), random(255)]);\n\tpixel(5, 9, [random(255), random(255), random(255)]);\n  pixel(6, 7, [random(255), random(255), random(255)]);\n\tpixel(6, 10, [random(255), random(255), random(255)]);\n  pixel(7, 7, [random(255), random(255), random(255)]);\n\tpixel(7, 10, [random(255), random(255), random(255)]);\n  pixel(8, 8, [random(255), random(255), random(255)]);\n\tpixel(8, 9, [random(255), random(255), random(255)]);\n  \n    // \"F\"\n  pixel(10, 7, [random(255), random(255), random(255)]);\n pixel(10, 8, [random(255), random(255), random(255)]);\n  pixel(10, 9, [random(255), random(255), random(255)]);\n   pixel(10, 10,[random(255), random(255), random(255)]);\n  pixel(11, 7,[random(255), random(255), random(255)]);\n pixel(12, 7, [random(255), random(255), random(255)]);\n  pixel(11, 9, [random(255), random(255), random(255)]);\n   pixel(12, 9, [random(255), random(255), random(255)]);\n    pixel(13, 8, [random(255), random(255), random(255)]);\n      pixel(13, 10, [random(255), random(255), random(255)]);\n  \n    // \"M\"\n  pixel(15, 7, [random(255), random(255), random(255)]);\n\tpixel(15, 8, [random(255), random(255), random(255)]);\n  pixel(15, 9, [random(255), random(255), random(255)]);\n\tpixel(15, 10,[random(255), random(255), random(255)]);\n  pixel(16, 8, [random(255), random(255), random(255)]);\n\tpixel(17, 9, [random(255), random(255), random(255)]);\n  pixel(18, 8, [random(255), random(255), random(255)]);\n\tpixel(19, 9, [random(255), random(255), random(255)]);\n  pixel(19, 8, [random(255), random(255), random(255)]);\n  pixel(19, 7, [random(255), random(255), random(255)]);\n\tpixel(19, 10, [random(255), random(255), random(255)]);\n\n\n}"
  },
  {
    "_id": "RwR2PShaGSYhQnMJY",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T00:29:56.946Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/t7snihfvdzr3k8xlfuq5",
        "version": 1552523406,
        "signature": "cffda20602a1b57afcc3098ec58d8eeb8194c810",
        "width": 886,
        "height": 1117,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-14T00:30:06Z",
        "tags": [],
        "bytes": 135141,
        "type": "upload",
        "etag": "17a517654158b005915b4884ff443684",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552523406/avalanche2019/t7snihfvdzr3k8xlfuq5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552523406/avalanche2019/t7snihfvdzr3k8xlfuq5.jpg"
      },
      {
        "public_id": "avalanche2019/srqknwyhgauwsadmbyge",
        "version": 1552527520,
        "signature": "762cc7d59ced39ce64a81e2cd08229ab64aaf3e7",
        "width": 4515,
        "height": 2700,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-14T01:38:40Z",
        "tags": [],
        "bytes": 2394132,
        "type": "upload",
        "etag": "9fe883cf1a1017ca728311efbf9ab752",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552527520/avalanche2019/srqknwyhgauwsadmbyge.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552527520/avalanche2019/srqknwyhgauwsadmbyge.jpg"
      },
      {
        "public_id": "avalanche2019/qmopsyv1hgylpthm9fbr",
        "version": 1552527578,
        "signature": "6bebe3661a290fae5a73bb074bcc76b89cbd5fed",
        "width": 1280,
        "height": 676,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-14T01:39:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 14378263,
        "type": "upload",
        "etag": "79b487800048e227e2a4965a9aca075b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552527578/avalanche2019/qmopsyv1hgylpthm9fbr.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552527578/avalanche2019/qmopsyv1hgylpthm9fbr.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "14651073",
          "dar": "320:169"
        },
        "frame_rate": 60,
        "bit_rate": 14658920,
        "duration": 7.846833,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T01:38:53.106Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:03:55.744Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-15T06:03:56.521Z" }
      }
    ],
    "title": "",
    "description": "Iterates on the documented algae L-system with a custom rewrite rule.\n\nTurtle moves based on the rewritten string, where each letter is a movement instruction:\n\n- \"F\" -> go forward\n- \"+\" -> turn right\n- \"-\" -> turn left\n- \"[\" -> push state\n- \"]\" -> pop state\n\nSecond image shows a noisy version (L) and three different \"generations\" of rewrites (R).",
    "inspiration_name": "L-systems",
    "inspiration_url": "https://en.wikipedia.org/wiki/L-system",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\n\n/* L-system turtle movement\n *\n * WARNING: MORE THAN 8 GENERATIONS WILL PROBABLY FREEZE\n * YOUR BROWSER\n *\n * alphabet: F+-[]\n * axiom: F\n * rules: F -> F+[-FF]+[+FF]\n *\n * References\n * - https://en.wikipedia.org/wiki/L-system#Example_1:_Algae\n * - https://www.youtube.com/watch?v=E1B4UoSQMFw\n * \n * Unlike the referenced tutorial/reading, this code:\n * - 1) uses a custom rule set\n * - 2) uses the turtle.js library\n */\n\nlet step = 40;\nlet angle = 30;\nconst axiom = \"F\";\nlet sentence = axiom;\n\nconst rules = [];\nrules[0] = {\n    input: \"F\",\n    // output: \"FF+[+F-F-F]-[-F+F+F]\" // standard algae L-system rule\n    output: \"F+[-FF]+[+FF]\" // custom L-system rule\n};\n\nfunction setup() {\n    createCanvas(windowWidth, windowHeight - 25);\n    background(240);\n    strokeWeight(.08);\n\n    myTurtle = new Turtle();\n\n    const generateButton = createButton(\"Generate\");\n    generateButton.mousePressed(generate);\n    createP(axiom);\n\n    myTurtle.turnLeft(90);\n}\n\nfunction generate() {\n    // step *= 0.5;\n    let outputSentence = \"\";\n    for (let i = 0; i < sentence.length; i++) {\n        let currentChar = sentence.charAt(i);\n\n        let ruleFound = false; // default\n        for (let j = 0; j < rules.length; j++) {\n            if (currentChar === rules[j].input) {\n                ruleFound = true;\n                outputSentence += rules[j].output;\n                break;\n            }\n        }\n        if (!ruleFound) {\n            outputSentence += currentChar;\n        }\n    }\n    sentence = outputSentence;\n    createP(outputSentence);\n    moveTurtle();\n}\n\nfunction moveTurtle() {\n    myTurtle.penUp();\n    // myTurtle.moveTo(width / 2, height);\n    // myTurtle.moveTo(windowWidth / 7, height);\n    myTurtle.penDown();\n    stroke(50);\n\n    for (let i = 0; i < sentence.length; i++) {\n        let currentChar = sentence.charAt(i);\n        if (currentChar === \"F\") {\n            // move forward\n            myTurtle.moveForward(step);\n        } else if (currentChar === \"+\") {\n            // turn right\n            myTurtle.turnRight(angle);\n        } else if (currentChar === \"-\") {\n            // turn left\n            myTurtle.turnRight(-angle);\n        } else if (currentChar === \"[\") {\n            // push status\n            myTurtle.pushState();\n        } else if (currentChar === \"]\") {\n            // pop status\n            myTurtle.popState();\n        }\n    }\n}"
  },
  {
    "_id": "S2L5bS8ubgWEusMPo",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T23:34:31.293Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ziqqfnrfnnzju6o2fo7i",
        "version": 1557444890,
        "signature": "3092bd896b8194ea36219902b0fd7a0698765379",
        "width": 788,
        "height": 792,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T23:34:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 637826,
        "type": "upload",
        "etag": "998013251411cb295c296add33438d18",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557444890/avalanche2019/ziqqfnrfnnzju6o2fo7i.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557444890/avalanche2019/ziqqfnrfnnzju6o2fo7i.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "372264",
          "dar": "197:198"
        },
        "frame_rate": 60,
        "bit_rate": 379376,
        "duration": 13.45,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Move squares game -- I think this was my first sketch, actually -- playing with the p5.play examples."
  },
  {
    "_id": "S3vqE4K6DvamCwxJ3",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-27T16:06:38.929Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yv3iuj7xnluz7htmz8ir",
        "version": 1553702810,
        "signature": "73ce8a47e0b351dc41a3e425b5575aa5d330f181",
        "width": 1488,
        "height": 1252,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-27T16:06:50Z",
        "tags": [],
        "bytes": 768564,
        "type": "upload",
        "etag": "9de3596a9de449cda4e2702339e86186",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553702810/avalanche2019/yv3iuj7xnluz7htmz8ir.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553702810/avalanche2019/yv3iuj7xnluz7htmz8ir.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with the class exercise/challenge"
  },
  {
    "_id": "S5Bz64hc6MSrummsQ",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:50:15.737Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u6tpr6rmchiq2eirxncc",
        "version": 1555699978,
        "signature": "96e332f938dbc967a5e5c7486301fedf5cea5535",
        "width": 980,
        "height": 578,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T18:52:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 576833,
        "type": "upload",
        "etag": "50f7d3483f8cc9685f5df8d1b60eea8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555699978/avalanche2019/u6tpr6rmchiq2eirxncc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555699978/avalanche2019/u6tpr6rmchiq2eirxncc.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "1901465",
          "dar": "490:289"
        },
        "frame_rate": 60,
        "bit_rate": 1909252,
        "duration": 2.416992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T21:30:21.94Z" }
      }
    ],
    "title": "",
    "description": "My previous sketch from noise, replaced it with mic input."
  },
  {
    "_id": "S7Hd9nqCemvTZKqGv",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T18:23:57.931Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ypaphhnvndsocpyudemg",
        "version": 1556907846,
        "signature": "0a13391558d40caad130ecc8d122b2a82fb1356b",
        "width": 826,
        "height": 1101,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T18:24:06Z",
        "tags": [],
        "bytes": 396572,
        "type": "upload",
        "etag": "82dc9a48f12acd98c53f4eff9860e22c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556907846/avalanche2019/ypaphhnvndsocpyudemg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556907846/avalanche2019/ypaphhnvndsocpyudemg.jpg"
      },
      {
        "public_id": "avalanche2019/hv5ilkshgvx5i58fjk9x",
        "version": 1556907854,
        "signature": "040d52758d2c880fefc92ad5ef434fbb5f8ce143",
        "width": 2880,
        "height": 1800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T18:24:14Z",
        "tags": [],
        "bytes": 643677,
        "type": "upload",
        "etag": "520434b360c9cea869882a156a1151db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556907854/avalanche2019/hv5ilkshgvx5i58fjk9x.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556907854/avalanche2019/hv5ilkshgvx5i58fjk9x.png"
      },
      {
        "public_id": "avalanche2019/a2dfm7oyrwz2qnbwev2o",
        "version": 1556908028,
        "signature": "d727e6b7287f52e7f9bd7d563499a5ab16559bc5",
        "width": 2880,
        "height": 1800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T18:27:08Z",
        "tags": [],
        "bytes": 605212,
        "type": "upload",
        "etag": "a6afe4eebbf1bf7f748f25f513d61251",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556908028/avalanche2019/a2dfm7oyrwz2qnbwev2o.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556908028/avalanche2019/a2dfm7oyrwz2qnbwev2o.png"
      }
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:10:15.248Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:11:54.988Z" }
      }
    ],
    "title": "",
    "description": "Castle challenge - procedurally generated castle nestled into procedurally generated rocks. Each image in the compilation is a different run of the code."
  },
  {
    "_id": "S8uyXNivmkGFm5swo",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T17:33:20.738Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lqpoqagkexxt3tvkijrl",
        "version": 1557509613,
        "signature": "5ea7da7315b0aef03c0d2752eee5ba70b05a633c",
        "width": 880,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T17:33:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 1004196,
        "type": "upload",
        "etag": "491a7282afd20296c193894dfde5569a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557509613/avalanche2019/lqpoqagkexxt3tvkijrl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557509613/avalanche2019/lqpoqagkexxt3tvkijrl.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1077510",
          "dar": "11:9"
        },
        "frame_rate": 60,
        "bit_rate": 1085470,
        "duration": 7.401,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Progress towards levels and graphics"
  },
  {
    "_id": "S9Bmf4fHo4PSyjCGu",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T03:07:11.546Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cbhelxynmg6tokh2nrwa",
        "version": 1549422438,
        "signature": "ecc7ab986d9f5b2ce9fef4b568acbf71a753f4d8",
        "width": 798,
        "height": 592,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-06T03:07:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 127268,
        "type": "upload",
        "etag": "bb4df4bb6298921eebca128184d429fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549422438/avalanche2019/cbhelxynmg6tokh2nrwa.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549422438/avalanche2019/cbhelxynmg6tokh2nrwa.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "270040",
          "dar": "399:296"
        },
        "frame_rate": 60,
        "bit_rate": 335651,
        "duration": 3.033333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "More playing around with Coding Train tutorials. It took me 90 minutes to get this far with Perlin Noise but its so darn interesting!"
  },
  {
    "_id": "SCPFpdeNLnHmFSJu4",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T01:43:55.984Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ohv4mlrbogpxhcapy5l8",
        "version": 1555033442,
        "signature": "d14d0e0b73638885b505fc1261c6a819a8e968be",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-12T01:44:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 9295881,
        "type": "upload",
        "etag": "852e377dcadbbee31f476e33ff390bfc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555033442/avalanche2019/ohv4mlrbogpxhcapy5l8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555033442/avalanche2019/ohv4mlrbogpxhcapy5l8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "2710095",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 2714717,
        "duration": 27.394033,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "keep doing a chatbot. This time is functional and has animation."
  },
  {
    "_id": "SGTQznLRLXisbJeyF",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T02:44:57.612Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/acag6zmu8p1omuwhuh7k",
        "version": 1550717939,
        "signature": "33e69e4b3d1ce669b18b730356fcecd88661fdab",
        "width": 1502,
        "height": 1502,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-21T02:58:59Z",
        "tags": [],
        "bytes": 762525,
        "type": "upload",
        "etag": "0bd17d9834e61365d8e35bfc2f1366a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550717939/avalanche2019/acag6zmu8p1omuwhuh7k.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550717939/avalanche2019/acag6zmu8p1omuwhuh7k.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-21T04:35:45.706Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:42:07.827Z" }
      }
    ],
    "title": "",
    "description": "Noisy concentric circles, continued.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\n// Code needs cleaning and parameterizing, but it functions.\n\nconst canvas = {\n    w: 800,\n    h: 800\n};\n\nfunction setup() {\n    createCanvas(canvas.w, canvas.h);\n    strokeWeight(.5);\n    colorMode(HSB, 1);\n    stroke(.7, .2, .3);\n    noFill();\n    angleMode(DEGREES);\n}\n\nfunction draw() {\n    background(255);\n    makeShape(Math.floor(canvas.w * .4));\n}\n\nfunction makeRing(radius) {\n    beginShape();\n    let numPoints = 1000;\n    for(let i=0; i < numPoints; i++) {\n        let raw = {\n            x: (canvas.w / 2) + radius * Math.cos(i * (2 * Math.PI) / numPoints),\n            y: (canvas.h / 2) + radius * Math.sin(i * (2 * Math.PI) / numPoints)\n        };\n        let noisyRadius = radius + 50 * noise(raw.x * .01, raw.y * .01, millis() * .001);\n        let noisy = {\n            x: (canvas.w / 2) + noisyRadius * Math.cos(i * (2 * Math.PI) / numPoints),\n            y: (canvas.h / 2) + noisyRadius * Math.sin(i * (2 * Math.PI) / numPoints)\n        };\n        vertex(noisy.x, noisy.y);\n    }\n    endShape(CLOSE);\n}\n\nfunction makeShape(numRings) {\n    for (let i = 0; i < numRings; i += 5) {\n        makeRing(i);\n    }\n}"
  },
  {
    "_id": "SKLreqRXoEKdhP43P",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Strategies",
    "created_at": { "$date": "2019-03-20T15:19:04.569Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": ""
  },
  {
    "_id": "SKpmZd7kzxiKNFBqC",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T15:05:31.477Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/brlxue3wmnssmf4p9wmo",
        "version": 1550243142,
        "signature": "14261b97af0e7d25180c6a72c3bc2e5c3db0f51b",
        "width": 2550,
        "height": 2550,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T15:05:42Z",
        "tags": [],
        "bytes": 220774,
        "type": "upload",
        "etag": "dc0a5cee12b811290a4a7e8720e30d6d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550243142/avalanche2019/brlxue3wmnssmf4p9wmo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550243142/avalanche2019/brlxue3wmnssmf4p9wmo.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Coffee & Restroom I... (Human body is like a pre-coded system.)"
  },
  {
    "_id": "SLp3AJf8MN6oS4tCE",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T23:28:01.384Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ih6afp6ewrkbj10opkfc",
        "version": 1550100517,
        "signature": "46581c97f1e02a70ed4c852d54758e93a45886b8",
        "width": 700,
        "height": 668,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-13T23:28:37Z",
        "tags": [],
        "bytes": 112947,
        "type": "upload",
        "etag": "76d3d916fb36f7f648a383c870fa17f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550100517/avalanche2019/ih6afp6ewrkbj10opkfc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550100517/avalanche2019/ih6afp6ewrkbj10opkfc.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar num = 300;\nvar xPositions = new Array(num);\nvar yPositions = new Array(num);\nvar r_slider, g_slider, a_slider;\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  noStroke();\n\n  for (var i = 0; i < xPositions.length; i++) {\n    xPositions[i] = random(width);\n  }\n\n  for (var i = 0; i < yPositions.length; i++) {\n    yPositions[i] = map(i, 0, yPositions.length, height / 3, height * 4/ 5);\n  }\n\n  createP('RGBA R Value');\n  r_slider = createSlider(0, 100, 50);\n\n  createP('RGBA G Value');\n  g_slider = createSlider(0, 100, 30);\n\n  createP('RGBA A Value');\n  a_slider = createSlider(0, 255, 200);\n}\n\nfunction draw() {\n  background(75);\n  var r = r_slider.value();\n  var g = g_slider.value();\n  var a = a_slider.value();\n\n  for (var i = 0; i < xPositions.length; i++) {\n    var siz = map(i, 0, xPositions.length, 200, 10);\n    fill(r, g, (map(i, 0, xPositions.length, 10, 255)),a);\n    ellipse(xPositions[i], yPositions[i], siz, siz);\n  }\n\n\n  for (var i = 0; i < xPositions.length; i++) {\n    var siz = map(i, 0, xPositions.length, 200, 10);\n    xPositions[i] -= map(i, 0, xPositions.length, 1, 20);\n\n    if (xPositions[i] < -siz / 2) {\n      xPositions[i] = width + siz / 2;\n    }\n  }\n\n}"
  },
  {
    "_id": "SPunjJ36jwztxXBJM",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T02:26:52.798Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rezsmhrcnj57j2dilub3",
        "version": 1555036029,
        "signature": "4374f6b52ee79681cad653c6b9a6277a06c94112",
        "width": 998,
        "height": 374,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T02:27:09Z",
        "tags": [],
        "bytes": 38580,
        "type": "upload",
        "etag": "72121925900422464b20266f227e400a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555036029/avalanche2019/rezsmhrcnj57j2dilub3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555036029/avalanche2019/rezsmhrcnj57j2dilub3.jpg"
      },
      {
        "public_id": "avalanche2019/gbj31dhaqkup630idpzv",
        "version": 1555036032,
        "signature": "dcffa6821ab95873dcc26d50a21d4906041f3b5b",
        "width": 998,
        "height": 374,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-12T02:27:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 1858205,
        "type": "upload",
        "etag": "32ed0b5ac61cb4e58933ead2f4666a98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555036032/avalanche2019/gbj31dhaqkup630idpzv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555036032/avalanche2019/gbj31dhaqkup630idpzv.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "886518",
          "dar": "499:187"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 885491,
        "duration": 16.788005,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/i4seqrlaersdjhxtg9mi",
        "version": 1555036036,
        "signature": "5b0ce51e90312c44ef241e395f514e9beebd774c",
        "width": 998,
        "height": 374,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-12T02:27:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 1356118,
        "type": "upload",
        "etag": "f5476e47c8a2f7a76193f7f2d0920b7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555036036/avalanche2019/i4seqrlaersdjhxtg9mi.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555036036/avalanche2019/i4seqrlaersdjhxtg9mi.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "463841",
          "dar": "499:187"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 466758,
        "duration": 23.243152,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T02:46:13.404Z" }
      }
    ],
    "title": "",
    "description": "Adding on to the last part, I have added a flee function and adjusted the forces to create the text effect which responds to the mouse movement.",
    "inspiration_name": "Text Steering Part 2",
    "inspiration_url": "https://youtu.be/4hA7G3gup-4",
    "code": "// Play with the flee function and arrive to achieve to get this effect. \n\n// Github link: https://github.com/akshansh2593/CompForm/tree/master/textSteering_compForm"
  },
  {
    "_id": "SSQzrpHGWys7Wa8zj",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-29T18:25:41.078Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u0nwzysodwbnyxmkimdr",
        "version": 1553883947,
        "signature": "a5bd60078c964d1a9e49053994f419dd74c592cc",
        "width": 990,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T18:25:47Z",
        "tags": [],
        "bytes": 263394,
        "type": "upload",
        "etag": "9281fadf8fc41cf43c5857d46a9427b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553883947/avalanche2019/u0nwzysodwbnyxmkimdr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553883947/avalanche2019/u0nwzysodwbnyxmkimdr.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "An Abstract elephant. \"象\" is the character for elephant in Chinese.",
    "code": "var myTurtle;\nvar aImage;\n\nfunction preload() {\n\taImage = loadImage(\"xiang_s.png\");\n}\n\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tmyTurtle = new Turtle();\n}\n\nfunction draw() {\n\tbackground(110);\n\n\tnoFill();\n\tstroke(0);\n\tstrokeWeight(1);\n\n\tblendMode(ADD);\n\t// move to starting position (without drawing)\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(240, 260);\n\n\t// put the pen down to draw\n\tmyTurtle.penDown();\n\n\t// draw the triangle\n\tfor (var i = 0; i < 23; i++) {\n\t\tmyTurtle.moveBackward(10+i*4);\n        //myTurtle.move\n\t\tmyTurtle.turnRight(30);\n\t\tmyTurtle.image(aImage);\n\t}\n\n\tnoLoop();\n}"
  },
  {
    "_id": "SWbwQ8HFW3t9m7Lu9",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:22:17.127Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g6q1zgbbgtfmxeejtsup",
        "version": 1552667005,
        "signature": "2ad951e3a140e0a04948d0ecbb6ee81125ba2c70",
        "width": 2892,
        "height": 2772,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T16:23:25Z",
        "tags": [],
        "bytes": 279469,
        "type": "upload",
        "etag": "19bc09a15b0acf7a147f74a092d8a660",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552667005/avalanche2019/g6q1zgbbgtfmxeejtsup.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552667005/avalanche2019/g6q1zgbbgtfmxeejtsup.jpg"
      },
      {
        "public_id": "avalanche2019/lelghat1gmzagctt1olb",
        "version": 1552667007,
        "signature": "e183b689057dcf08bd68f09c6384993d0cecce7d",
        "width": 766,
        "height": 766,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T16:23:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 135094,
        "type": "upload",
        "etag": "c29a2547bec9bcd12fdc1bfb1eb9d332",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552667007/avalanche2019/lelghat1gmzagctt1olb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552667007/avalanche2019/lelghat1gmzagctt1olb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "202816",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 209854,
        "duration": 5.15,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Abstract Sunflower"
  },
  {
    "_id": "SdvGNafvPAk55Ha79",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T18:06:44.97Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g7e7r9ksj8mwia4fqrsb",
        "version": 1550599635,
        "signature": "be71ab7645838cea03cdf570ff08f4c1e5c7e5ab",
        "width": 1252,
        "height": 918,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-19T18:07:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 9141486,
        "type": "upload",
        "etag": "13c65ac0c1213c6e5aa694b77c3794b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550599635/avalanche2019/g7e7r9ksj8mwia4fqrsb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550599635/avalanche2019/g7e7r9ksj8mwia4fqrsb.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5992231",
          "dar": "626:459"
        },
        "frame_rate": 15,
        "bit_rate": 5994417,
        "duration": 12.2,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-20T02:26:22.115Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-20T13:12:38.522Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T21:12:31.381Z" }
      }
    ],
    "title": "",
    "description": "Fish Flock\nmade with processing. combine biased random and noise;"
  },
  {
    "_id": "SfNuGX3KQ6PA6JGDF",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:23:50.563Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nn0v5stchwvceeba6wml",
        "version": 1548458648,
        "signature": "b9b1f4a76de4c703e9bfeb6fb9d2ed8cc3679cb2",
        "width": 3163,
        "height": 2015,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:24:08Z",
        "tags": [],
        "bytes": 1209221,
        "type": "upload",
        "etag": "a42bdb8f10e90a2377e3779390c16d64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458648/avalanche2019/nn0v5stchwvceeba6wml.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458648/avalanche2019/nn0v5stchwvceeba6wml.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "SgJXEtxg35iG8iAMk",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-14T23:52:35.307Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bxneattefpvvwhphgdt1",
        "version": 1555285976,
        "signature": "fa869bc1ddac2fed4fc2065992ecd98d1052aee8",
        "width": 792,
        "height": 608,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-14T23:52:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 12453602,
        "type": "upload",
        "etag": "982c137ec771794bf45ff856d173dd0c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555285976/avalanche2019/bxneattefpvvwhphgdt1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555285976/avalanche2019/bxneattefpvvwhphgdt1.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "307122",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1564540",
          "dar": "99:76"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1886736,
        "duration": 52.804833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-17T04:27:05.6Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T03:37:10.224Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T18:55:56.11Z" }
      }
    ],
    "title": "",
    "description": "paying around with processing sound library using notes sounds associated with circles, circles touching triggers sound and volume increases as another circle gets closer to the center, interior circle is full volume. Notes aren't playing consistently right now, they keep playing every frame. code is for processing so won't work in browser",
    "code": "//import sound libraries\nimport ddf.minim.*; \nimport ddf.minim.signals.*; \nimport ddf.minim.analysis.*;\nimport ddf.minim.effects.*;\nimport ddf.minim.ugens.*;\nimport processing.sound.*; \n\n//Minim minim; \n//AudioSample samples[]; \n//AudioOutput out; \nSoundFile samples[]; \n SoundCircle[] circles = new SoundCircle[5]; \nvoid setup() {\n  \n  size(400, 300);\n  //minim = new Minim(this); \n  //setup Audio Samples \n  samples = new SoundFile[25]; \n  \nsamples[0] = new SoundFile(this, \"[0].aif\"); \nsamples[1] = new SoundFile(this, \"[1].aif\"); \nsamples[2] = new SoundFile(this, \"[2].aif\"); \nsamples[3] = new SoundFile(this, \"[3].aif\"); \nsamples[4] = new SoundFile(this, \"[4].aif\"); \nsamples[5] = new SoundFile(this, \"[5].aif\"); \nsamples[6] = new SoundFile(this, \"[6].aif\"); \nsamples[7] = new SoundFile(this, \"[7].aif\"); \nsamples[8] = new SoundFile(this, \"[8].aif\"); \nsamples[9] = new SoundFile(this, \"[9].aif\"); \nsamples[10] = new SoundFile(this, \"[10].aif\"); \n\n\n//setup circles \n\n for (int i = 0; i<circles.length; i++){\n   circles[i] = new SoundCircle(random(width), random(height), 20);   \n }\n}\n\nvoid draw() {\n  background(0);  \n  // iterate through every moving circle\n  for(int i=0; i<circles.length; i++) {\n    \n    circles[i].update();\n    circles[i].checkCollisions();\n    circles[i].drawCircle(); \n    //function to check the other circles \n    for (int j = 0; j<circles.length; j++){\n      if (i != j){\n        float distance = dist(circles[i].x, circles[i].y, circles[j].x, circles[j].y); \n        //println(distance); \n       \n       //float outterRadiusContact = circles[i].outterRadius()+ circles[j].outterRadius(); \n              float outterRadiusContact = circles[i].outterRadius(); \n       //println(\"outterRadius \" + outterRadiusContact); \n        float innerRadiusContact = circles[i].circleSize(); \n            //println(\"innerRadius \" + innerRadiusContact); \n         float innerRadiusOverlap = circles[i].circleSize()+ circles[j].circleSize(); \n             //println(\"innerRadiusoverlap  \" + innerRadiusOverlap); \n         \n       //if circles are not touching \n        if (distance > outterRadiusContact){\n          //check if that soud file is playing isPlaying() if it is stop music else do nothing \n         if (samples[i].isPlaying()){\n            //stop playing music file.stop()\n           samples[i].stop();\n       \n         }  \n         if (samples[j].isPlaying()){\n            //stop playing music file.stop()\n           samples[j].stop();\n       \n         }  \n         \n        }      \n        //outter circle of one circle is touching outter area of other circle \n        //white part to white part \n          else if (distance < outterRadiusContact && distance > innerRadiusContact ){\n            \n          //map volume to the distance \n          float vol = map(distance, innerRadiusContact, outterRadiusContact, .5, 0); \n          samples[i].amp(vol); \n          samples[j].amp(vol); \n      //     //check if audio is already playing if it isnt \n      //     //play music \n             if (samples[i].isPlaying()==false){\n           samples[i].play(); \n         }       \n               if (samples[j].isPlaying()==false){\n           samples[j].play(); \n         }   \n        }   \n        else {\n           samples[i].amp(.5); \n           samples[j].amp(.5); \n            if (samples[j].isPlaying()==false){\n           samples[j].play(); \n         }       \n          //else{\n          //  println(\"already playing\"); \n          //}\n                 \n        } \n}\n    }\n}\n}\n\n\n\nclass SoundCircle {\n\n  float x; \n  float y;\n  float xSpeed; \n  float ySpeed; \n  \n  float circleSize; \n  float outterRadius; \n\n  SoundCircle(float xpos, float ypos, float onRadius) {\n    x = xpos;\n    y = ypos; \n    circleSize = onRadius;\noutterRadius = circleSize +60; \n    \n    xSpeed = random(-1, 1); \n    ySpeed = random(-1, 1); \n    \n  }\nfloat x(){\n  return this.x; \n}\nfloat y(){\n  return this.y; \n}\nfloat circleSize(){\n  return this.circleSize; \n}\nfloat outterRadius(){\n  return this.outterRadius; \n}\n  void update() {\n    x += xSpeed; \n    y += ySpeed;  \n  }\n  \n  void checkCollisions() { \n    \n    float r = circleSize/2; \n    if ( (x<r) || (x>width-r)){ \n      xSpeed = -xSpeed; \n    }  \n    \n    if( (y<r) || (y>height-r)) { \n      ySpeed = -ySpeed;  \n    }\n    \n  }\n  \n  void drawCircle() { \n    \n    fill(255); \n    //outer radius (volume controller \n  \n    ellipse(x, y, this.outterRadius, this.outterRadius); \n    //inner radius (always on ) \n    pushMatrix(); \n    // fill(255,0,0); \n    ellipse(x, y, circleSize, circleSize); \n    popMatrix(); \n  }\n  \n  \n}"
  },
  {
    "_id": "SkY7a852niQD27xi3",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T04:12:35.77Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/owhvura1zbnuvkia8y41",
        "version": 1554437561,
        "signature": "08a58e23d3b3b17daf2e26edc105039c0d663619",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T04:12:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 542135,
        "type": "upload",
        "etag": "52ebfda6bea9e40ca26056e575154015",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554437561/avalanche2019/owhvura1zbnuvkia8y41.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554437561/avalanche2019/owhvura1zbnuvkia8y41.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "524542",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 532714,
        "duration": 8.141467,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "melting",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nvar i = 1;\nvar fn = 0;\n\nfunction setup(){\n  smooth(8);\n  createCanvas(800,600);\n  stroke(255);\n  frameRate(30);\n}\nfunction draw(){\n  background('#f2ba68');\n\n\n  for(var x = 0; x < width; x=x+1){\n      stroke('#ee618e');\n      var n = noise(x/350,fn/100);\n      n = map(n,0,1,150,height);\n      line(x,0,x,n-1);\n    }\n  i+=0.1;\n  fn +=0.5;\n}"
  },
  {
    "_id": "SmKK5Pgp9CapK5QPC",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:04:06.313Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/f0wjaoarcuixzm9elipa",
        "version": 1552075465,
        "signature": "0e87f3d7e99188733ace4393bfd64d376fb7e8c3",
        "width": 1728,
        "height": 1152,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T20:04:25Z",
        "tags": [],
        "bytes": 1072969,
        "type": "upload",
        "etag": "6c198034787b0921a31afacad86fecac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552075465/avalanche2019/f0wjaoarcuixzm9elipa.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552075465/avalanche2019/f0wjaoarcuixzm9elipa.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:18:00.104Z" }
      }
    ],
    "title": "",
    "description": "Pixels to Dots."
  },
  {
    "_id": "SmtkG9tSQuTWRiZng",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T15:34:06.737Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pm0omdx4dvylzllxnad5",
        "version": 1549035284,
        "signature": "a2be4000c414e75e4d9abd84fa699d55c4d44646",
        "width": 2400,
        "height": 2400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T15:34:44Z",
        "tags": [],
        "bytes": 650387,
        "type": "upload",
        "etag": "9a47b74ccce15bc1dd364aef5131046f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549035284/avalanche2019/pm0omdx4dvylzllxnad5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549035284/avalanche2019/pm0omdx4dvylzllxnad5.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:50.657Z" }
      }
    ],
    "title": "",
    "description": "Tile labyrinth using Andrew's pattern - Illustrator"
  },
  {
    "_id": "SnRN5M4rLTNZAheX5",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T19:25:30.244Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rc0cy1ej1l8ffwprigfm",
        "version": 1556825242,
        "signature": "2869ffd4e39da286188d5df6e5650f38b10ecfd0",
        "width": 1498,
        "height": 1034,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T19:27:22Z",
        "tags": [],
        "bytes": 84232,
        "type": "upload",
        "etag": "038bbd0f05274c19fee5162ab53b6154",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825242/avalanche2019/rc0cy1ej1l8ffwprigfm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825242/avalanche2019/rc0cy1ej1l8ffwprigfm.jpg"
      },
      {
        "public_id": "avalanche2019/m1btbmb43ycmxogp0iar",
        "version": 1556825246,
        "signature": "3351f8122efc07041c4c90b43624635659be1a52",
        "width": 1440,
        "height": 1010,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T19:27:26Z",
        "tags": [],
        "bytes": 77484,
        "type": "upload",
        "etag": "1041742858d59108312a7c01404dca69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825246/avalanche2019/m1btbmb43ycmxogp0iar.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825246/avalanche2019/m1btbmb43ycmxogp0iar.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T20:51:28.75Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T19:45:03.605Z" }
      }
    ],
    "title": "",
    "description": "Ghostly Castle :)"
  },
  {
    "_id": "Sq3ntjg43XsZyPRv8",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T00:11:18.364Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wnrmb4go9ndc0rlfi7wr",
        "version": 1550103101,
        "signature": "82864f6780add81ce6877d9177658486b2a404ed",
        "width": 996,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T00:11:41Z",
        "tags": [],
        "bytes": 274087,
        "type": "upload",
        "etag": "20a84b9e30495eb2286088b2803b75a1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550103101/avalanche2019/wnrmb4go9ndc0rlfi7wr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550103101/avalanche2019/wnrmb4go9ndc0rlfi7wr.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T05:21:28.234Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-14T05:21:31Z" }
      }
    ],
    "title": "",
    "description": "make it raaain – The parameter here is the rain density",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// rain code from https://codepen.io/shtrom/pen/NpxJWy\n// cloud vector from https://www.freepik.com/free-photos-vectors/background\n\nvar acceleration = 0.001;\nvar drops = [];\nvar rainD_slider;\n\nfunction setup() {\n    createCanvas(500,500);\n    let img = createImg(\"https://i.ibb.co/7WSb6D9/281929-P6-JIQT-207.jpg\");\n    img.style('z-index','-1');\n    img.position(0, 0);\n    img.size(500, 500);\n\n    createP('Make it rain');\n    rainD_slider = createSlider(0,200,20);\n}\n\nfunction draw() {\n    clear();\n    var nDrops = rainD_slider.value();\n    for (i = 0; i < nDrops; i++) {\n      drops.push(new Drop());\n    }\n    drops.forEach(function(d) {\n      d.drawAndDrop();\n    });\n    drops = [];\n}\n\nfunction Drop() {\n  this.initX = function() {\n    this.x = random() * width;\n  };\n  this.initY = function() {\n    this.y = -random() * height;\n  };\n\n  this.initX();\n  this.y = random() * height+180;\n  this.length = random() * 30;\n  this.speed = random();\n\n  this.drawAndDrop = function() {\n    this.draw();\n    this.drop();\n  };\n\n  this.draw = function() {\n    stroke(250);\n    line(this.x, this.y, this.x, this.y + this.length);\n  };\n\n  this.drop = function() {\n    if (this.y < height) {\n      this.y += this.speed;\n      this.speed += acceleration;\n    } else {\n      this.speed = random();\n      this.initY();\n      this.initX();\n    }\n  };\n}"
  },
  {
    "_id": "SqJspntKjwwSRmxPN",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T00:20:56.1Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yh2g0zzt9chlffvmehp3",
        "version": 1550797784,
        "signature": "e75ade740787f2a24ce18fc82058d05a5ace3029",
        "width": 3360,
        "height": 2100,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T01:09:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 547774,
        "type": "upload",
        "etag": "219185bf705b54dccae1af947a83a327",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550797784/avalanche2019/yh2g0zzt9chlffvmehp3.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550797784/avalanche2019/yh2g0zzt9chlffvmehp3.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "High",
          "bit_rate": "1029909",
          "dar": "8:5"
        },
        "frame_rate": 60,
        "bit_rate": 1039254,
        "duration": 4.216667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/n4qerjf0uhcaygkkh81b",
        "version": 1550797888,
        "signature": "e69c41209bdcd4c42806438de51f3abbe89e517c",
        "width": 994,
        "height": 1040,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T01:11:28Z",
        "tags": [],
        "bytes": 92071,
        "type": "upload",
        "etag": "bf481fa19f24d421e51a220bb3664f4d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550797888/avalanche2019/n4qerjf0uhcaygkkh81b.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550797888/avalanche2019/n4qerjf0uhcaygkkh81b.png"
      },
      {
        "public_id": "avalanche2019/d8pjfep5fl9xwi0ouhjq",
        "version": 1550797891,
        "signature": "f0bda299decb93c4b124cd6677088ac5f99a9748",
        "width": 498,
        "height": 536,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T01:11:31Z",
        "tags": [],
        "bytes": 50254,
        "type": "upload",
        "etag": "ff1b0c29c93b9225b04d4645566db5a4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550797891/avalanche2019/d8pjfep5fl9xwi0ouhjq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550797891/avalanche2019/d8pjfep5fl9xwi0ouhjq.png"
      }
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T01:09:10.554Z" }
      }
    ],
    "title": "",
    "description": "I used Particular library on Ae to create the smoky effect. \nThe sketch started from random particles (3rd image), then applied some physical properties like velocity, density, gravity, echo...etc to make it look realistic. I don't know why the background turns green when the video plays...",
    "inspiration_name": "Smoke",
    "inspiration_url": "https://www.youtube.com/watch?v=LDXD6j0760Y"
  },
  {
    "_id": "SsCyGCvNCKzsou2Pf",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T19:47:56.968Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rgneeuq3gnecduqnodqc",
        "version": 1549396482,
        "signature": "755fe0fe945a82e64aab3aa12046a61a8fa6f7b1",
        "width": 1560,
        "height": 1164,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-05T19:54:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 14992918,
        "type": "upload",
        "etag": "c417673c595590d38146fd7c78760a5f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549396482/avalanche2019/rgneeuq3gnecduqnodqc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549396482/avalanche2019/rgneeuq3gnecduqnodqc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "20721120",
          "dar": "130:97"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 20739484,
        "duration": 5.783333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I took the last sketch I did using Sol Lewitt's instructions and tried to animate them using bezier curves and some random motion. I had to lower the number of points from 50 to 20 to make the sketch more legible. Added some random color as well.",
    "inspiration_name": "Sol Lewitt Instructions Animated",
    "inspiration_url": "https://observer.com/2012/10/here-are-the-instructions-for-sol-lewitts-1971-wall-drawing-for-the-school-of-the-mfa-boston/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nvar x, y;\nvar pointSize;\nvar points = [];\nvar distance = [];\nvar vel;\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  frameRate(15)\n  distance = random(10, 60);\n  for (var i = 0; i < 20; i++) {\n    points[i] = new Points();\n  }\n}\n\nfunction draw() {\n\n  background(240, 234, 214);\n  for (var i = 0; i < points.length; i++) {\n    points[i].drawPoint();\n    points[i].drawLine();\n  }\n}\n  function Points() {\n    this.x = random(width);\n    this.y = random(height);\n    // vel = random(-3, 3);\n\n    this.drawPoint = function() {\n      strokeWeight(0.5);\n      stroke(142, 151, 168);\n      point(this.x, this.y);\n\n    }\n\n    this.drawLine = function() {\n      for (var i = 0; i < points.length; i++) {\n        var other = points[i];\n        strokeWeight(1);\n        // stroke(142, 151, 168, 100);\n        stroke(random(200), 0, random(255), 100);\n        noFill();\n        bezier(this.x, this.y, this.x + 50, this.y - 50, other.x - 50, other.y + 50, other.x, other.y);\n        this.x += random(-7,7);\n        this.y += random(-7,7);\n      }\n    }\n  }"
  },
  {
    "_id": "SssX8Nn74oF2hYyqZ",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "created_at": { "$date": "2019-02-01T02:30:10.968Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x0o9be8txxc605dvss0n",
        "version": 1548988276,
        "signature": "caaab22d0a1dae59a958ced908cdf3d48eca9510",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-01T02:31:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 12380530,
        "type": "upload",
        "etag": "658910adcbf8265f1d8cc990002a6dca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548988276/avalanche2019/x0o9be8txxc605dvss0n.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548988276/avalanche2019/x0o9be8txxc605dvss0n.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "7445879",
          "dar": "16:9"
        },
        "frame_rate": 25,
        "bit_rate": 7503351,
        "duration": 13.2,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/cjf4dqr9folvktku4p4f",
        "version": 1548988284,
        "signature": "f221cbcfe2a41d9c1117594476b3b24772c3560d",
        "width": 582,
        "height": 594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T02:31:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 15790618,
        "type": "upload",
        "etag": "804eba69148e61a111c1cd8d401acd54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548988284/avalanche2019/cjf4dqr9folvktku4p4f.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548988284/avalanche2019/cjf4dqr9folvktku4p4f.mov",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "mjpeg",
          "level": -99,
          "profile": "192",
          "bit_rate": "6831899",
          "dar": "97:99"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 6835827,
        "duration": 18.479833,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:24.92Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:25.872Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:03:57.786Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Rotating tiles (rect, ellipse, line) made with Processing.",
    "inspiration_name": "Processing"
  },
  {
    "_id": "SuCdnBP6Cxvots7Jg",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T14:20:01.203Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "SvLq5rHrig8JpCM9v",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:17:39.421Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/iu2uqu3sdkohos0bli0w",
        "version": 1548458567,
        "signature": "451d91583d7d207b203bcd4bacdfc76ac9362bcb",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:22:47Z",
        "tags": [],
        "bytes": 633590,
        "type": "upload",
        "etag": "d4ef85cb1d88b00e0589627c6da3fe0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458567/avalanche2019/iu2uqu3sdkohos0bli0w.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458567/avalanche2019/iu2uqu3sdkohos0bli0w.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:53.547Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "Sxwp3p5FNkNxtRq4r",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T22:21:07.13Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h1wgcvpj5edxhttk7czh",
        "version": 1553811672,
        "signature": "b3adcde193eec8f86c38c07f31acf8d7a9c8cb47",
        "width": 524,
        "height": 914,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T22:21:12Z",
        "tags": [],
        "bytes": 25762,
        "type": "upload",
        "etag": "109aacd8f268a5b18ba475cf6a7d67fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553811672/avalanche2019/h1wgcvpj5edxhttk7czh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553811672/avalanche2019/h1wgcvpj5edxhttk7czh.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "T273bYpjsoAk5aKqc",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-26T13:18:42.935Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nkgr4jtomxzozsvb5lxn",
        "version": 1553606333,
        "signature": "6db920229fd0cc447705f2d67eec563cae64b1c1",
        "width": 1000,
        "height": 1104,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-26T13:18:53Z",
        "tags": [],
        "bytes": 156692,
        "type": "upload",
        "etag": "c0511f4af6ad1d00151c37e6d32ab653",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553606333/avalanche2019/nkgr4jtomxzozsvb5lxn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553606333/avalanche2019/nkgr4jtomxzozsvb5lxn.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "face put together from class code",
    "inspiration_name": "exploration"
  },
  {
    "_id": "T2uG8dvk795SFeNZR",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T17:07:25.497Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nuhmt6a1ntwzeqnchwxx",
        "version": 1557508051,
        "signature": "9ccbde20477c0b539068b9e7feec65d7995a9f15",
        "width": 980,
        "height": 648,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T17:07:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 1932475,
        "type": "upload",
        "etag": "81b3ef3ff7b11cd542f714854613e0be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557508051/avalanche2019/nuhmt6a1ntwzeqnchwxx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557508051/avalanche2019/nuhmt6a1ntwzeqnchwxx.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1215081",
          "dar": "245:162"
        },
        "frame_rate": 60,
        "bit_rate": 1260789,
        "duration": 12.262,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T17:51:29.216Z" }
      }
    ],
    "title": "",
    "description": "Kirby eats cakes",
    "inspiration_name": "OpenProcessing Sketch",
    "inspiration_url": "https://www.openprocessing.org/sketch/203464/"
  },
  {
    "_id": "T5mnix2qMp2aLBixF",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:22:51.633Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "bohemian rhapsody",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n  ['F5', '4n'],\n  ['F5', '4n'],\n  ['F5', '4n'],\n  ['F5', '4n'],\n  ['F5', '4n'],\n  ['F5', '4n'],\n  \n ['rest', '0.2s'],\n \n  ['E5', '4n'],\n  ['E5', '4n'],\n  ['F5', '4n'],\n  ['E5', '4n'],\n   ['rest', '0.01s'],\n  ['D5', '4n'],\n     ['rest', '0.01s'],\n  ['C5', '4n'],\n\n ['rest', '0.2s'],\n \n\n  ['F5', '4n'],\n  ['F5', '4n'],\n  ['F5', '4n'],\n  ['G5', '4n'],\n     ['rest', '0.01s'],\n  ['F5', '4n'],\n  \n   ['rest', '0.2s'],\n \n   ['F4', '4n'],\n  ['F4', '4n'],\n  \n   ['D5', '4n'],\n    ['D5', '4n'],\n     ['D5#', '4n'],\n       ['D5', '4n'],\n       ['C5', '4n'],\n  ['A4#', '4n'],\n\n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "TDpBkLTz3dNgb4wdu",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-12T02:35:08.551Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bwp9dzufzstovdvyfiqu",
        "version": 1552358117,
        "signature": "9f7cb0669bf80ae12226945acf94970a405d9e54",
        "width": 994,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-12T02:35:17Z",
        "tags": [],
        "bytes": 1564273,
        "type": "upload",
        "etag": "f46afb9b4cc7f7028895434dd7fe0144",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552358117/avalanche2019/bwp9dzufzstovdvyfiqu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552358117/avalanche2019/bwp9dzufzstovdvyfiqu.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-12T23:54:26.305Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T00:42:47.417Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:20:22.136Z" }
      }
    ],
    "title": "",
    "description": "using the penUp() and penDown() to change color",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tmyTurtle = new Turtle();\n}\n\nfunction draw() {\n\tbackground(0);\n    frameRate(10);\n\tstrokeWeight(2);\n\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(width / 2, height / 2);\n    \n    drawShape();\n\n\tnoLoop();\n}\nfunction drawShape(){\n\n     for (var n = 0; n < 20; n += 1) {\n\tfor (var i = 0; i < 100; i++) {\n        myTurtle.moveTo(250,250);\n        myTurtle.penDown();\n        myTurtle.turnLeft(tan(n/8)+20);\n        DivideIntoDiferentColor();\n\t}\n}\n}\nfunction DivideIntoDiferentColor(){\n    for (i = 0; i < 10; i++) {\n    myTurtle.penDown();\n    stroke(40, 105, 155, 180);\n    myTurtle.moveForward(random(39,34));\n    myTurtle.penUp();\n    myTurtle.moveForward(33);\n    myTurtle.penDown();\n    stroke(237, 225, 105, 90);\n    myTurtle.moveForward(random(30));\n    myTurtle.penUp();\n    myTurtle.moveForward(29);\n    myTurtle.penDown();\n    stroke(208, 45, 135, 180);\n    myTurtle.moveForward(random(19,25));\n    myTurtle.penUp();\n    myTurtle.moveForward(20);\n   \n  }\n}"
  },
  {
    "_id": "TFWhTsq5xhrQeD48q",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T19:31:02.074Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xaabvvlkfehed40ds1fi",
        "version": 1550259150,
        "signature": "151d32f8c9bb15836ec3825588eabba8b80e5e7f",
        "width": 1136,
        "height": 1470,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T19:32:30Z",
        "tags": [],
        "bytes": 190796,
        "type": "upload",
        "etag": "2a9a7b939df3a0d57ca5d81dad3b8e4c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550259150/avalanche2019/xaabvvlkfehed40ds1fi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550259150/avalanche2019/xaabvvlkfehed40ds1fi.png"
      },
      {
        "public_id": "avalanche2019/snni07b1pddtxzwxf7r0",
        "version": 1550259291,
        "signature": "4f81842b88fe250af9cac7173f454879d7577853",
        "width": 1374,
        "height": 1774,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T19:34:51Z",
        "tags": [],
        "bytes": 305712,
        "type": "upload",
        "etag": "60990d5dbfc14df6ef40710d0b4fe2dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550259291/avalanche2019/snni07b1pddtxzwxf7r0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550259291/avalanche2019/snni07b1pddtxzwxf7r0.png"
      },
      {
        "public_id": "avalanche2019/p7peuvbzd96jnyemzxl5",
        "version": 1550259683,
        "signature": "53c82bc2bb2c336f68bfc6aabaf423e757af2a76",
        "width": 1340,
        "height": 1660,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T19:41:23Z",
        "tags": [],
        "bytes": 213219,
        "type": "upload",
        "etag": "0cbe499b7257b655fa7594af7a859ce3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550259683/avalanche2019/p7peuvbzd96jnyemzxl5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550259683/avalanche2019/p7peuvbzd96jnyemzxl5.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Instead of Random I used parameters and increments to model bezier that follow a more consistent random pattern that all curves follow \n\nyou can change gradient colors, separation, line density, etc",
    "inspiration_name": "Bezier Ribbons",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet startX;\nlet startY;\nlet endX;\nlet endY;\nlet control1;\nlet control2;\nlet numLines;\nlet curveDeviation;\n\nlet startColor;\nlet endColor;\nlet colors = [];\nlet curves = [];\n\nfunction setup() {\n\n    createCanvas(800, 800);\n    smooth();\n    colorMode(RGB, 255, 255, 255, 1);\n    stroke(255, 0, 0, 1);\n    strokeWeight(6);\n    fill(255, 0, 0, .1);\n    frameRate(5);\n    //set color 1 \n    createP('Color 1 Red');\n    color1SliderR = createSlider(0, 255, 255, 2);\n    color1R = color1SliderR.value();\n    createP('Color 1 Green');\n    color1SliderG = createSlider(0, 255, 0, 2);\n    color1G = color1SliderG.value();\n    createP('Color 1 Blue');\n    color1SliderB = createSlider(0, 255, 0, 2);\n    color1B = color1SliderB.value();\n    //set color2\n    createP('Color 2 Red');\n    color2SliderR = createSlider(0, 255, 0, 2);\n    color2R = color2SliderR.value();\n    createP('Color 2 Green');\n    color2SliderG = createSlider(0, 255, 0, 2);\n    color2G = color2SliderG.value();\n    createP('Color 2 Bllue');\n    color2SliderB = createSlider(0, 255, 255, 2);\n    color2B = color2SliderB.value();\n\n    createP('Seperation');\n    seperationSlider = createSlider(-10, 10, 0, 5);\n    seperation = seperationSlider.value();\n    createP('Density');\n    densitySlider = createSlider(0, 90, 16, 2);\n    density = densitySlider.value();\n\n    createP('Begin PosX');\n    startXSlider = createSlider(0, 800, 400, 10);\n    startX = startXSlider.value();\n    createP('Begin Height');\n    startYSlider = createSlider(0, 800, 100, 10);\n    startY = startYSlider.value();\n\n    createP('End PosX');\n    endXSlider = createSlider(0, 800, 400, 10);\n    endX = endXSlider.value();\n    createP('End Height');\n    endYSlider = createSlider(0, 800, 700, 10);\n    endY = endYSlider.value();\n    createP('Curves');\n    curveSlider = createSlider(0, 1600, 700, 10);\n    curve = curveSlider.value();\n    createP('Center Point');\n    centerSlider = createSlider(50, 750, 400, 10);\n    center = centerSlider.value();\n\n}\n\nfunction draw() {\n    background(0, 0, 0, 1);\n    let startColor = color(color1SliderR.value(), color1SliderG.value(), color1SliderB.value(), .2);\n    let endColor = color(color2SliderR.value(), color2SliderG.value(), color2SliderB.value(), .2);\n    //fill array with colors\n    let c = 0;\n    for (c = 0; c < densitySlider.value(); c++) {\n        colors[c] = lerpColor(startColor, endColor, (c / densitySlider.value()));\n\n    }\n    let seperationX = random(-50, 50);\n    let seperationY = random(-50, 50);\n    let seperationX2 = random(-50, 50);\n    let seperationY2 = random(-50, 50);\n    let controlOne = {\n        x: startXSlider.value() + ((Math.floor(Math.random() * curveSlider.value()))),\n        y: Math.floor(Math.random() * centerSlider.value()),\n    }\n    let controlTwo = {\n        x: startYSlider.value() + ((-1) * (Math.floor(Math.random() * curveSlider.value()))),\n        y: Math.floor((Math.random() * centerSlider.value() + centerSlider.value())),\n    }\n\n    for (i = 0; i < densitySlider.value(); i++) {\n        // controls = setControlPoints();\n\n        stroke(colors[i], 1);\n        // fill(colors[i], .1);\n        noFill();\n        b = bezier(startXSlider.value() + seperation, startYSlider.value(), controlOne.x, controlOne.y, controlTwo.x, controlTwo.y, endXSlider.value() + seperation, endYSlider.value());\n\n        // b = bezier(startXSlider.value() + seperation, startYSlider.value(), controls[0], controls[1], controls[2], controls[3], endXSlider.value() + seperation, endYSlider.value());\n        // curves[i] = b;\n\n        // ellipse(controls[0], controls[1], 5);\n        // ellipse(controls[2], controls[3], 5);\n        seperation += seperationSlider.value();\n\n        controlOne.x += seperationX;\n        controlOne.y += seperationY;\n        controlTwo.x += seperationX2;\n        controlTwo.y += seperationY2;\n    }\n\n}\n\nfunction setControlPoints() {\n    // let curveDeviation = (Math.random() * 150) + 50;\n    curveSlider.value();\n    let r = Math.floor((Math.random() * 2)) + 1;\n    let rand;\n    if (r == 1) {\n        rand = -1;\n    } else {\n        rand = 1;\n    }\n\n\n    let controlOne = {\n        //let the x axis of the control point be a random no larger than the curvedeviation\n        x: startXSlider.value() + (rand * (Math.floor(Math.random() * curveSlider.value()) + 100)),\n        y: Math.floor(Math.random() * centerSlider.value()),\n    };\n    //control Pont Two\n    let controlTwo = {\n        x: startYSlider.value() + ((-1) * rand * (Math.floor(Math.random() * curveSlider.value()))),\n        y: Math.floor((Math.random() * centerSlider.value() + centerSlider.value())),\n    };\n\n    return [controlOne.x, controlOne.y, controlTwo.x, controlTwo.y];\n}"
  },
  {
    "_id": "TFuX3AdDqwSQ7oaC5",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T17:23:26.709Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vg2o8zarmzhvr6grhbhd",
        "version": 1549480798,
        "signature": "26698ebc1dcb3c4087894b7d14a24a3e10ed8bdb",
        "width": 1000,
        "height": 1250,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-06T19:19:58Z",
        "tags": [],
        "bytes": 308439,
        "type": "upload",
        "etag": "ba0ea27d8bef85b38966c1dd84188c19",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549480798/avalanche2019/vg2o8zarmzhvr6grhbhd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549480798/avalanche2019/vg2o8zarmzhvr6grhbhd.jpg"
      },
      {
        "public_id": "avalanche2019/jubr2dpxtai7p13lstnk",
        "version": 1549480804,
        "signature": "a8fa6bc3dccbbea6bb16824df8861413efa0f63a",
        "width": 13867,
        "height": 5801,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T19:20:04Z",
        "tags": [],
        "bytes": 5108790,
        "type": "upload",
        "etag": "8cd6f4252b35d39648390549a15edd9c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549480804/avalanche2019/jubr2dpxtai7p13lstnk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549480804/avalanche2019/jubr2dpxtai7p13lstnk.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-06T20:41:02.473Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T02:38:20.479Z" }
      }
    ],
    "title": "",
    "description": "Irregular grid patterns inspired by [Georg Nees](https://www.google.com/search?q=georg+nees&rlz=1C5CHFA_enUS807US807&source=lnms&tbm=isch&sa=X&ved=0ahUKEwji5ufT6qfgAhXrc98KHWaKACgQ_AUIDigB&biw=1438&bih=798#imgrc=kammk0-_iWbw4M:)] and [Vera Molnár](https://www.google.com/search?q=vera+moln%C3%A1r&rlz=1C5CHFA_enUS807US807&source=lnms&tbm=isch&sa=X&ved=0ahUKEwiBm8il0KfgAhVNON8KHeYVC4wQ_AUIDigB&cshid=1549473978184963&biw=1438&bih=798#imgrc=I33YJpnL72aM9M:).\n\nSecond image shows same sketch with different randomized strokeWeight distributions (high, normal, low).",
    "inspiration_name": "Vera Molnár (& Georg Nees)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\n// Uses patterns from Vera Molnár's work to play with\n// high, low, normal distributions in form of stroke weight.\n// See line 35.\n\nconst canvas_width = 800,\n    canvas_height = 900,\n    step = 14,\n    border_pixels = 20,\n    max_rand = step / 10;\n\nfunction setup() {\n    createCanvas(canvas_width, canvas_height);\n    stroke(165, 42, 42);\n    noFill();\n    background(255, 250, 240, 100);\n    compose();\n}\n\nfunction compose() {\n    for (y = border_pixels; y < canvas_height - border_pixels - step; y++) {\n        for (x = border_pixels; x < canvas_width - border_pixels - step; x++) {\n            if (x % step === 0 && y % step === 0) {\n                setStrokeWeight();\n                rect(x + random(max_rand), y + random(max_rand), 20, 20);\n                drawInnerRect(8, 10);\n                drawInnerRect(4, 12);\n                drawInnerRect(2, 18);\n            }\n        }\n    }\n}\n\nfunction setStrokeWeight() {\n    // TOGGLE BETWEEN DIFFERENT STROKE WEIGHT DISTRIBUTIONS\n    // strokeWeight(max(random(1), random(1), random(1), random(1))); // high\n    // strokeWeight(min(random(1), random(1), random(1), random(1))); // low\n    strokeWeight((random(1) + random(1) + random(1) + random(1)) / 4); // normal\n\n    // MAKE SOME % OF SQUARES INVISIBLE, AS FUNCTION OF Y VALUE\n    y_norm = map(y, border_pixels, canvas_height - border_pixels, 0, 1);\n    if (random() < y_norm) {\n        strokeWeight(0);\n    }\n}\n\nfunction drawInnerRect(step_divider, step_adjuster) {\n    rect(\n        x + (step / step_divider) + random(-max_rand, max_rand), // x coordinate\n        y + (step / step_divider) + random(-max_rand, max_rand), // y coordinate\n        step - step_adjuster, // width\n        step - step_adjuster // height\n    );\n}",
    "inspiration_url": "https://en.wikipedia.org/wiki/Vera_Moln%C3%A1r"
  },
  {
    "_id": "TG4aB69iyEz6W49ie",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T13:42:43.956Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qkzctkeaiw1ga1fu5yx1",
        "version": 1555076579,
        "signature": "6877dfd47978316dab646248176b4dbcb9bc6d35",
        "width": 890,
        "height": 460,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T13:42:59Z",
        "tags": [],
        "bytes": 42665,
        "type": "upload",
        "etag": "2d3164feb2df12d6de53f646dfd33848",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555076579/avalanche2019/qkzctkeaiw1ga1fu5yx1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555076579/avalanche2019/qkzctkeaiw1ga1fu5yx1.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "random generator questions, would you rather....",
    "inspiration_name": "would you rather"
  },
  {
    "_id": "TGpxPFygWQQfXdkKC",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T19:43:03.395Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kcnkbh7p702tfjlh7oec",
        "version": 1556309578,
        "signature": "9ed5659bd24b534ac86e63662df63360296c58af",
        "width": 588,
        "height": 492,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T20:12:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 258615,
        "type": "upload",
        "etag": "365438558f31bf265bb097afdbb4c4f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556309578/avalanche2019/kcnkbh7p702tfjlh7oec.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556309578/avalanche2019/kcnkbh7p702tfjlh7oec.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "156081",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Constrained Baseline",
          "bit_rate": "55462",
          "dar": "49:41"
        },
        "is_audio": false,
        "frame_rate": 20,
        "bit_rate": 211114,
        "duration": 9.7,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Followed tutorials on Tone.js with Ace Editor; succeed in html but not in sketchbook...",
    "inspiration_url": "https://www.youtube.com/watch?v=xBQef0fs-_Q",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/ace.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/addons/p5.dom.min.js\n\nlet button;\n\nfunction setup(){\n createCanvas(windowWidth, windowHeight);\n\n  button = createButton('play');\n  button.position(width/2, height/2);\n  button.mousePressed(go());\n  \n  textAlign(CENTER);\n  textSize(50);\n  \n  \t\tp1.get('hihat').start();\n\t\tif([0,4,8,12].indexOf(idx) >=0)\n\t\tp1.get('kick').start();\n\t\tif([2,6,10,14].indexOf(idx) >=0)\n\t\tp1.get('snare').start();\n\n\t\tvar chords = [\n\t\t['C3', 'E3', 'G3'],\n\t\t['G3', 'B3', 'D3'],\n\t\t['A3', 'C3', 'E3'],\n\t\t['F3', 'A3', 'C3']\n\t\t];\n\n\t\tvar chordIndex = -1;\n\t\tif (idx === 0) chordIndex = 0;\n\t\tif (idx == 4) chordIndex = 1;\n\t\tif (idx == 8) chordIndex = 2;\n\t\tif (idx == 12) chordIndex = 3;\n\n\t\tif (chordIndex >= 0){\n\t\tpolySynth.triggerAttackRelease(chords[chordIndex][0],'16n');\n\t\tpolySynth.triggerAttackRelease(chords[chordIndex][1],'16n','+8n');\n\t\tpolySynth.triggerAttackRelease(chords[chordIndex][2],'16n','+4n');\n\t\t}\n\t\n\tvar editor = ace.edit('editor');\n\teditor.setTheme('ace/theme/monookai');\n\teditor.getSession().setMode('ace/mode/javascript');\n\teditor.setOptions({fontSiez:'20pt'});\n\n\tvar vol = new Tone.Volume(-12).toMaster();\n\tvar polySynth = new Tone.PolySynth(3, Tone.FMSynth);\n\n\tvar reverb = new Tone.Freeverb(0.4).connect(vol);\n\tvar vibrato = new Tone.Vibrato(3, 0.3).connect(vol);\n\n\n\tvar p1 = new Tone.Players({\n\t\t\"kick\":'https://cdn.jsdelivr.net/gh/Tonejs/Tone.js/examples/audio/505/kick.mp3',\n\t\t\"snare\":'https://cdn.jsdelivr.net/gh/Tonejs/Tone.js/examples/audio/505/snare.mp3',\n\t\t\"hihat\":'https://cdn.jsdelivr.net/gh/Tonejs/Tone.js/examples/audio/505/hh.mp3',\n\n\t}, function()\n\t{\n\n\t});\n\tpolySynth.connect(vibrato);\n\tp1.connect(vibrato);\n    \n}\n\n\n\tfunction go(){\n\t\t\t// polySynth.triggerAttackRelease('C4', '16n');\n\t\t\t\n\n\t\t\tTone.context.latencyHint = 'fastest';\n\t\t\tTone.Transport.bpm.value= 120;\n\n\t\t\tvar seq = new Tone.Sequence(function(time,idx)\n\t\t\t{\n\t\t\t\teval(editor.getValue());\n\t\t\t},[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16], \"8n\");\n\n\t\t\tTone.Transport.start('+0.2');\n\t\t\tseq.start();\n\t\t}",
    "inspiration_name": "Tone.js and Ace Editor tutorial"
  },
  {
    "_id": "TKQ6AvtYX9EXJ27qF",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T13:06:11.408Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/agi56xkelasmxc02jdcc",
        "version": 1553864778,
        "signature": "393a611bf2519ae7cf7b8f47b5d5b5b1cb69ae3c",
        "width": 2433,
        "height": 2708,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T13:06:18Z",
        "tags": [],
        "bytes": 1143979,
        "type": "upload",
        "etag": "21c65f2838147b5fda4598b543f50215",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864778/avalanche2019/agi56xkelasmxc02jdcc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864778/avalanche2019/agi56xkelasmxc02jdcc.jpg"
      },
      {
        "public_id": "avalanche2019/xnrlvp0t3gcr012781mn",
        "version": 1553864783,
        "signature": "379526583d3f1c9b47ff3c0f80d4c8cdc3a19729",
        "width": 1727,
        "height": 2107,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T13:06:23Z",
        "tags": [],
        "bytes": 2062761,
        "type": "upload",
        "etag": "b5344bdf007401387f773bfa820b4d36",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864783/avalanche2019/xnrlvp0t3gcr012781mn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864783/avalanche2019/xnrlvp0t3gcr012781mn.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T13:39:23.749Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:15:53.093Z" }
      }
    ],
    "title": "",
    "description": "Final poster :) If I had more time I would make it into a Risograph print!",
    "inspiration_name": "Braulio Amado",
    "inspiration_url": "https://badbadbadbad.com/"
  },
  {
    "_id": "TLryJN46wsoPjpcv4",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:25:21.962Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zqwfrgerpapv5cjsx7y5",
        "version": 1553883931,
        "signature": "6f6f722b4733dd820c92f0e410c92853cd9b773b",
        "width": 863,
        "height": 1280,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T18:25:31Z",
        "tags": [],
        "bytes": 1345600,
        "type": "upload",
        "etag": "aa311fd5b72bfbf2074d0ba263fb4ba9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553883931/avalanche2019/zqwfrgerpapv5cjsx7y5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553883931/avalanche2019/zqwfrgerpapv5cjsx7y5.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Printed poster for the data visualization keynote event. Changed to a 24 by 36. Bad lighting :("
  },
  {
    "_id": "TMZJA2ZwHbxF9r8wW",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T04:30:15.497Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h5ybzduefuuuotlrjw7y",
        "version": 1553834040,
        "signature": "8f3939c83667f5a262965fe23dbac757f63bf9ea",
        "width": 3600,
        "height": 3600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T04:34:00Z",
        "tags": [],
        "bytes": 643278,
        "type": "upload",
        "etag": "8abec17cb404d60b4d7064c68d914c43",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553834040/avalanche2019/h5ybzduefuuuotlrjw7y.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553834040/avalanche2019/h5ybzduefuuuotlrjw7y.png"
      },
      {
        "public_id": "avalanche2019/dyowx4v2celh8rpyzmha",
        "version": 1553834043,
        "signature": "f94752cfca60bece45d89f07b8934ddeb324b741",
        "width": 3600,
        "height": 3600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T04:34:03Z",
        "tags": [],
        "bytes": 643417,
        "type": "upload",
        "etag": "113cdb978dfdd97c7f9a63e0d841230f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553834043/avalanche2019/dyowx4v2celh8rpyzmha.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553834043/avalanche2019/dyowx4v2celh8rpyzmha.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T04:36:12.358Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-03-29T12:53:35.159Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T12:53:36.437Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T15:36:04.107Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T16:04:40.576Z" }
      }
    ],
    "title": "",
    "description": "Poster for data visualization thesis keynotes at the end of the semester"
  },
  {
    "_id": "TMiAK25omEkhizjHy",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T06:25:54.242Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fiimhqz3dxvs9xhyammd",
        "version": 1550816781,
        "signature": "10912cf6beabb024a932a0b7f2ae11ebbd2956cf",
        "width": 1944,
        "height": 1944,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T06:26:21Z",
        "tags": [],
        "bytes": 143226,
        "type": "upload",
        "etag": "b08cba99e9a8b1760e7750ae39972e48",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550816781/avalanche2019/fiimhqz3dxvs9xhyammd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550816781/avalanche2019/fiimhqz3dxvs9xhyammd.jpg"
      },
      {
        "public_id": "avalanche2019/w0linqsduqmavkqteerk",
        "version": 1550816791,
        "signature": "10a12d11569964a2d2701214147140083c973dc1",
        "width": 1952,
        "height": 1948,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T06:26:31Z",
        "tags": [],
        "bytes": 225379,
        "type": "upload",
        "etag": "f36dc2b3366d5bd197dd09b30773a32a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550816791/avalanche2019/w0linqsduqmavkqteerk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550816791/avalanche2019/w0linqsduqmavkqteerk.jpg"
      },
      {
        "public_id": "avalanche2019/ndunwof591a6eqrl7ulz",
        "version": 1550816815,
        "signature": "6943bac2c9bff628775a139bd39395494d3bd45b",
        "width": 978,
        "height": 978,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T06:26:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 747403,
        "type": "upload",
        "etag": "551fb81dcbd25d69a9cd250e07ad32c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550816815/avalanche2019/ndunwof591a6eqrl7ulz.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550816815/avalanche2019/ndunwof591a6eqrl7ulz.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "1832376",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 1839761,
        "duration": 3.25,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "TTJnEmCFj8MeMJedZ",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T18:52:16.669Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dvc3vwenpalsfthsiydg",
        "version": 1556823148,
        "signature": "1d76f3592e9f0207ea420345afda7792dfff212d",
        "width": 1220,
        "height": 1600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T18:52:28Z",
        "tags": [],
        "bytes": 110846,
        "type": "upload",
        "etag": "51fad4710d8cce4e0197b6db1d3d9f23",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556823148/avalanche2019/dvc3vwenpalsfthsiydg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556823148/avalanche2019/dvc3vwenpalsfthsiydg.jpg"
      },
      {
        "public_id": "avalanche2019/czjhoucdz749pxeixsxi",
        "version": 1556823153,
        "signature": "15497778ea41df16db7c11e4eae0e0397bd6cf73",
        "width": 1240,
        "height": 1524,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T18:52:33Z",
        "tags": [],
        "bytes": 97951,
        "type": "upload",
        "etag": "4c54a3ea9cc734289b6e0da136db21bc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556823153/avalanche2019/czjhoucdz749pxeixsxi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556823153/avalanche2019/czjhoucdz749pxeixsxi.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I was going to print out a C(omp) F(orm) cookie cutter, but the waiting list in 3D printing lab is sooooo loonnnnnggggg. Hopefully I can get it printed before next Friday so I can make cookies for everyone in PostM Party! : ')"
  },
  {
    "_id": "TWtaY4i3QAAkBLYvz",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T17:40:55.502Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uxncurzbzk3hqmthoyki",
        "version": 1552066884,
        "signature": "8100f1355fbb10bc2f4a44bec25503f8728718cb",
        "width": 640,
        "height": 916,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T17:41:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 2543339,
        "type": "upload",
        "etag": "5228a110030516395e9400b8fc11db79",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552066884/avalanche2019/uxncurzbzk3hqmthoyki.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552066884/avalanche2019/uxncurzbzk3hqmthoyki.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2823300",
          "dar": "160:229"
        },
        "frame_rate": 15,
        "bit_rate": 2825932,
        "duration": 7.2,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/zpe412avne1evzkalcu3",
        "version": 1552066887,
        "signature": "acd932a16aa822e11d2c21852018aa436c14f256",
        "width": 654,
        "height": 936,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T17:41:27Z",
        "tags": [],
        "bytes": 183448,
        "type": "upload",
        "etag": "5933cb6478a1d23cc2b7cbe271863c54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552066887/avalanche2019/zpe412avne1evzkalcu3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552066887/avalanche2019/zpe412avne1evzkalcu3.png"
      },
      {
        "public_id": "avalanche2019/qjcmcwssspnwxc9n7hx6",
        "version": 1552066991,
        "signature": "bddb46c61130c046ded6896f472dd098dcf00990",
        "width": 300,
        "height": 442,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T17:43:11Z",
        "tags": [],
        "bytes": 166168,
        "type": "upload",
        "etag": "4cca0f6209192094e8579a2d65d48ac8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552066991/avalanche2019/qjcmcwssspnwxc9n7hx6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552066991/avalanche2019/qjcmcwssspnwxc9n7hx6.png"
      }
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T18:16:57.329Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:11:39.948Z" }
      }
    ],
    "title": "",
    "description": "Me playing guitar. On fire.",
    "inspiration_name": "Get quick class example",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?/pixels/sketches/grass.js"
  },
  {
    "_id": "TYb9ehRvGFM8fu2eQ",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T03:31:47.443Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/arj8obyelhvodvssfmb3",
        "version": 1555558339,
        "signature": "a420ca6c009d3750b6ce543ccd82514815c8f9be",
        "width": 1256,
        "height": 932,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T03:32:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 4473928,
        "type": "upload",
        "etag": "7e518d7c921a1581e0e03bc5881871b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555558339/avalanche2019/arj8obyelhvodvssfmb3.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555558339/avalanche2019/arj8obyelhvodvssfmb3.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "312480",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "412193",
          "dar": "314:233"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 732680,
        "duration": 48.85,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Unkle",
    "inspiration_url": "https://genius.com/Unkle-back-and-forth-lyrics"
  },
  {
    "_id": "TZikFtdj38enkh2wq",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T13:32:55.798Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vwmmbhj5fqwewtmqt1ql",
        "version": 1555595745,
        "signature": "01f2b58b8eafdfab8fae940520ca486adeb9bfd1",
        "width": 2488,
        "height": 1396,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T13:55:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 1388022,
        "type": "upload",
        "etag": "7e64c7b732822ad91bcbe8d177ba87b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555595745/avalanche2019/vwmmbhj5fqwewtmqt1ql.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555595745/avalanche2019/vwmmbhj5fqwewtmqt1ql.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "218965",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "1423680",
          "dar": "622:349"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1788736,
        "duration": 6.207833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:52:33.67Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:57:27.889Z" }
      }
    ],
    "title": "",
    "description": "Additive frequencies.",
    "code": "let C1;\nlet C2;\nconst diam = 200;\nconst center = { x: window.innerWidth / 2, y: window.innerHeight / 2};\nlet d;\n\n// sound\nlet A3;\nlet A3_playing = false;\n\nlet A4;\nlet A4_playing = false;\n\nlet A5;\nlet A5_playing = false;\n\nfunction setup() {\n  createCanvas(window.innerWidth, window.innerHeight);\n  const center_left = { \n    x: diam,\n    y: window.innerHeight / 2\n  };\n  const center_right = {\n    x: window.innerWidth - diam,\n    y: window.innerHeight / 2\n  };\n  C1 = new Circle(\n    center_left,\n    color(255, 0, 0, 100),\n    diam,\n    1\n  );\n  C2 = new Circle(\n    center_right,\n    color(0, 0, 255, 100),\n    diam,\n    1\n  );\n  noStroke();\n  background(0);\n\n  // sound\n  A3 = new p5.Oscillator();\n  A3.setType('sine');\n  A3.freq(220);\n  A3.amp(0);\n  A3.start();\n\n  A4 = new p5.Oscillator();\n  A4.setType('sine');\n  A4.freq(440);\n  A4.amp(0);\n  A4.start();\n\n  A5 = new p5.Oscillator();\n  A5.setType('sine');\n  A5.freq(660);\n  A5.amp(0);\n  A5.start();\n}\n\nclass Circle {\n  constructor(_pos, _color, _diam, _note) {\n    (this.pos = _pos),\n    (this.color = _color),  // const\n    (this.diam = _diam),\n    (this.note = _note),    // const\n    (this.start = _pos);    // const\n  }\n\n  updateSelf(_to, _speed) {\n    this.pos.x = lerp(this.pos.x, _to.x, _speed);\n    this.pos.y = lerp(this.pos.y, _to.y, _speed);\n  }\n\n  drawSelf() {\n    push();\n    fill(this.color);\n    ellipse(this.pos.x, this.pos.y, this.diam, this.diam);\n    pop();\n  }\n}\n\nfunction draw() {\n  background(240);\n//   A3.amp(0.25, 0.05);\n//   A3_playing = true;\n\n//   A4.amp(0.5, 0.05);\n//   A4_playing = true;\n//   A5.amp(0.25, 0.05);\n//   A5_playing = true;\n\n  d = dist(C1.pos.x, C1.pos.y, C2.pos.x, C2.pos.y);\n  \n  if (d > diam) {\n      if (!A3_playing) {\n        A3.amp(0.25, 0.05);\n        A3_playing = true;\n      }\n      if (!A4_playing) {\n        A4.amp(0.25, 0.05);\n        A4_playing = true;\n      }\n  } else if (d > 1) {\n    if (A3_playing) {\n      A3.amp(0, .5);\n      A3_playing = false;\n    }\n    if (A4_playing) {\n      A4.amp(0, .5);\n      A4_playing = false;\n    }\n    if (!A5_playing) {\n      A5.amp(.25, .5);\n      A5_playing = true;\n    }\n  } else {\n    A5.amp(0, 0.5);\n    A5_playing = false;\n  }\n\n  C1.updateSelf(center, .02);\n  C2.updateSelf(center, .02);\n\n  C1.drawSelf();\n  C2.drawSelf();\n}"
  },
  {
    "_id": "TbN6KugZR7K5Wk5Xm",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-03-01T01:35:01.016Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fcxos7qsik5ygqsjxtwo",
        "version": 1551404139,
        "signature": "bc69f5919cfc6ade8e4697f71465e5a3c0331a64",
        "width": 796,
        "height": 788,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T01:35:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 1920355,
        "type": "upload",
        "etag": "f15fc2b6ce0a6fef5a748f6df46d2583",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551404139/avalanche2019/fcxos7qsik5ygqsjxtwo.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551404139/avalanche2019/fcxos7qsik5ygqsjxtwo.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "721272",
          "dar": "199:197"
        },
        "frame_rate": 60,
        "bit_rate": 728303,
        "duration": 21.094,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Callenge 1"
  },
  {
    "_id": "TbyHXNvbfqdntMJZ8",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T05:00:55.716Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/oelh2xiiohcjywph729r",
        "version": 1555650065,
        "signature": "89faab4f7d00ccf8298df6328d8058ccc4b602e7",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T05:01:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 2515472,
        "type": "upload",
        "etag": "a82c6f28b0d5e592f13bb6fbe3d7b406",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555650065/avalanche2019/oelh2xiiohcjywph729r.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555650065/avalanche2019/oelh2xiiohcjywph729r.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "123043",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "2014188",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 2229612,
        "duration": 9.025683,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Lyrics: There is a special class, a special special class: computational form. Made with VOCALOID 5 Editor, using sound band Amy."
  },
  {
    "_id": "Tc7L3REKffSqXhPpn",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:36:19.926Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k616vhous2b7gddbwzkx",
        "version": 1555094247,
        "signature": "0927b9bbda4f3882131aa5b3fd8ca8b2883285a4",
        "width": 1888,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T18:37:27Z",
        "tags": [],
        "bytes": 336767,
        "type": "upload",
        "etag": "290548fc25dd1e46fc08a3185da7766d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555094247/avalanche2019/k616vhous2b7gddbwzkx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555094247/avalanche2019/k616vhous2b7gddbwzkx.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-12T18:39:06.698Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-12T18:41:29.773Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-12T18:58:14.278Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-12T19:03:25.291Z" }
      }
    ],
    "title": "",
    "description": "An anagram generator. Right now it returns every possible unique combo of letters. Trying to use dictionary to only return valid English words",
    "code": "injectInterface();\nconst input = document.querySelector(\"input\");\nconst log = document.getElementById(\"values\");\nconst result = document.getElementById(\"returnResult\");\n\ninput.addEventListener(\"input\", updateValue);\n\nfunction updateValue(e) {\n  log.textContent = e.srcElement.value;\n  result.textContent = permutation(\" \", log.textContent);\n}\n\n//string permutation from stack overflow example but modified\n// https://stackoverflow.com/questions/5232295/is-there-any-pre-built-method-for-finding-all-permutations-of-a-given-string-in-j\nfunction permutation(start, string) {\n  if (string.length === 1) {\n    return [start + string];\n  } else {\n    const returnResult = [];\n    for (let i = 0; i < string.length; i++) {\n      let result = permutation(\n        string[i],\n        string.substr(0, i) + string.substr(i + 1)\n      );\n      for (let j = 0; j < result.length; j++) {\n        returnResult.push(start + result[j]);\n      }\n    }\n    // remove dups\n    let returnResultFilter = [...new Set(returnResult)];\n    return returnResultFilter;\n  }\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n    @import url('https://fonts.googleapis.com/css?family=Playfair+Display:400,900');\n\t\tbody {\n      font-family: 'Playfair Display', serif;\n      background-color: #3d3d3d;\n      color: #fff;\n      text-align: left;\n\t\t}\n\t\t.wrap {\n      background-color: #3d3d3d;\n      width: 80%;\n\t\t\tpadding: 30px;\n\t\t\tmargin: 0 auto;\n\t\t\ttext-align: left;\n\t\t}\n    \n    #returnResult {\n      font-size: 18px;\n      font-weight: normal;\n      opacity: 0.9;\n    }\n\n    input {\n      border-radius: 4px;\n      border: 1px solid gray;\n      font: inherit;\n    }\n    p {\n      margin-top: 10px;\n    }\n\n    span {\n      border-bottom: 1px dashed #fff;\n    }\n\n    #header {\n      margin-top: 40px;\n      opacity: 0.7;\n    }\n    h3{\n      margin-bottom: 16px;\n    }\n\n\t</style>\n  <div class=\"wrap\">\n  <h3>Enter a single word to see every possible anagram</h3>\n  <input placeholder=\" Enter anagram text\" name=\"name\"/> <span id=\"values\"></span>\n\n  <p id=\"header\">See all the possible anagrams below</p>\n  <p id=\"returnResult\"></p>\n\t</div>\n`\n  );\n}",
    "inspiration_name": "stack overflow help",
    "inspiration_url": "https://stackoverflow.com/questions/5232295/is-there-any-pre-built-method-for-finding-all-permutations-of-a-given-string-in-j"
  },
  {
    "_id": "TeXsm9oqLTL6sgkBW",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-01-28T17:53:21.887Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/huiawlfu8zs3mhvpavth",
        "version": 1548698005,
        "signature": "a184f0024ee3b40c81db4bdd74bda3415cc746d4",
        "width": 3000,
        "height": 3002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-28T17:53:25Z",
        "tags": [],
        "bytes": 40274,
        "type": "upload",
        "etag": "c2dbbdca0bc6c67dd202a04a7ad817e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548698005/avalanche2019/huiawlfu8zs3mhvpavth.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548698005/avalanche2019/huiawlfu8zs3mhvpavth.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:07.6Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:20.532Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "10x10 tiles of squares and triangles form the letter B, I used Ai."
  },
  {
    "_id": "TqNF5P4A9RW9kq3Xj",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:19:21.979Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nh5xykonwg4i3unwvatn",
        "version": 1554484768,
        "signature": "c1b643239c29c075e3830caf21185f85364a0bba",
        "width": 800,
        "height": 800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T17:19:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 483169,
        "type": "upload",
        "etag": "703d6f598855ec68cbb5ec88856f030c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554484768/avalanche2019/nh5xykonwg4i3unwvatn.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554484768/avalanche2019/nh5xykonwg4i3unwvatn.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "185642",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 192465,
        "duration": 20.083333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Trying to make a meteor..."
  },
  {
    "_id": "TrQgCNM8y2pYhezvM",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T19:30:50.873Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gy0ihkces8ahu6myfwig",
        "version": 1550259072,
        "signature": "430cdf4e716bb482a328dbd67525b5ce504a9455",
        "width": 1380,
        "height": 724,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T19:31:12Z",
        "tags": [],
        "bytes": 95764,
        "type": "upload",
        "etag": "8454284707af546982db3a37cf27f5f3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550259072/avalanche2019/gy0ihkces8ahu6myfwig.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550259072/avalanche2019/gy0ihkces8ahu6myfwig.jpg"
      },
      {
        "public_id": "avalanche2019/jahlzazpt55fheflilfx",
        "version": 1550259455,
        "signature": "0357e48fd9a69e9d7272d6435a769a25e34fe8da",
        "width": 1644,
        "height": 1116,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T19:37:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 3181620,
        "type": "upload",
        "etag": "b93c5f0886f547db084cf2ad6a641f52",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550259455/avalanche2019/jahlzazpt55fheflilfx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550259455/avalanche2019/jahlzazpt55fheflilfx.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "777314",
          "dar": "137:93"
        },
        "frame_rate": 60,
        "bit_rate": 781564,
        "duration": 32.566667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/cpeenz0zal2wngcshxng",
        "version": 1550259601,
        "signature": "69369e860e1e27bfb14f31194955f489e30e6677",
        "width": 1622,
        "height": 900,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T19:40:01Z",
        "tags": [],
        "bytes": 90059,
        "type": "upload",
        "etag": "da7086fe65a7af9eff91d1e7e1dbed44",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550259601/avalanche2019/cpeenz0zal2wngcshxng.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550259601/avalanche2019/cpeenz0zal2wngcshxng.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T19:45:22.989Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T19:45:24.41Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T21:21:32.944Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-15T21:21:55.014Z" }
      }
    ],
    "title": "",
    "description": "Still working on this one, more animals would be nice (or at least the monkey as a base). And there should be a smarter way to organize the code (it’s a conditional hell right now)",
    "inspiration_name": "Krogufant",
    "inspiration_url": "https://www.abebooks.co.uk/servlet/BookDetailsPL?bi=30152594904",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\nconst w = 1386;\nconst h = 780;\n\nfunction setModes() {\n  // colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  noStroke();\n  // pixelDensity(1);\n}\n\nfunction preload() {\n  dodo_mask = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0000_dodo-mask.png\"\n  );\n  dodo_hair = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0001_dodo-hair.png\"\n  );\n  dodo_mouth = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0002_dodo-mouth.png\"\n  );\n  dodo_nose = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0003_dodo-nose.png\"\n  );\n  dodo_eye = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0004_dodo-eye.png\"\n  );\n  dodo_base = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0005_dodo-base.png\"\n  );\n  fish_mask = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0006_fish-mask.png\"\n  );\n  fish_hair = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0007_fish-hair.png\"\n  );\n  fish_special = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0008_fish-special.png\"\n  );\n  fish_ear = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0009_fish-ear.png\"\n  );\n  fish_mouth = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0010_fish-mouth.png\"\n  );\n  fish_eye = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0011_fish-eye.png\"\n  );\n  fish_base = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0012_fish-base.png\"\n  );\n  monkey_mask = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0013_monkey-mask.png\"\n  );\n  monkey_eye = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0014_monkey-eyes.png\"\n  );\n  monkey_nose = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0015_monkey-nose.png\"\n  );\n  monkey_mouth = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0016_monkey-mouth.png\"\n  );\n  monkey_ear = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0017_monkey-ear.png\"\n  );\n  monkey_hair = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0018_monkey-hair.png\"\n  );\n  monkey_base = loadImage(\n    \"https://raw.githubusercontent.com/felixbuchholz/computational-form/master/18-parameters-face-generator/_0019_monkey-base.png\"\n  );\n}\n\nfunction setup() {\n  createCanvas(w, h);\n  setModes();\n  createP(\"Select options (hint: not all combinations work\");\n  selBase = createSelect();\n  selBase.option(\"select base\");\n  selBase.option(\"dodo\");\n  selBase.option(\"fish\");\n  // selBase.option(\"monkey\");\n  selMask = createSelect();\n  selMask.option(\"select shape\");\n  selMask.option(\"dodo\");\n  // selMask.option(\"fish\");\n  selMask.option(\"monkey\");\n  selMouth = createSelect();\n  selMouth.option(\"select mouth\");\n  selMouth.option(\"dodo\");\n  selMouth.option(\"fish\");\n  selMouth.option(\"monkey\");\n  selNose = createSelect();\n  selNose.option(\"select nose\");\n  selNose.option(\"dodo\");\n  selNose.option(\"monkey\");\n  selEar = createSelect();\n  selEar.option(\"select ear\");\n  selEar.option(\"fish\");\n  selEar.option(\"monkey\");\n  selEye = createSelect();\n  selEye.option(\"select eye\");\n  selEye.option(\"dodo\");\n  selEye.option(\"fish\");\n  selEye.option(\"monkey\");\n  selHair = createSelect();\n  selHair.option(\"select hair\");\n  selHair.option(\"dodo\");\n  selHair.option(\"fish\");\n  selHair.option(\"monkey\");\n  selSpecial = createSelect();\n  selSpecial.option(\"select special\");\n  selSpecial.option(\"fish\");\n\n  // selBase.changed(createSelector);\n}\n\nfunction draw() {\n  background(246, 243, 228);\n\n  if (selBase.value() == \"dodo\") {\n    image(dodo_base, 158, 130);\n    if (selMask.value() == \"dodo\") {\n      image(dodo_mask, 0, 0);\n      if (selMouth.value() == \"dodo\") {\n      } else if (selMouth.value() == \"fish\") {\n        push();\n        translate(443, 290);\n        rotate(31);\n        scale(1.8);\n        image(fish_mouth, 0, 0);\n        pop();\n        image(dodo_nose, 520, 320);\n      } else if (selMouth.value() == \"monkey\") {\n        push();\n        translate(450, 370);\n        noStroke();\n        fill(246, 243, 228);\n        circle(180, 220, 100);\n        rotate(15);\n        scale(1.8);\n        image(monkey_mouth, 0, 0);\n        pop();\n        image(dodo_nose, 520, 320);\n      }\n      if (selNose.value() == \"dodo\") {\n      } else if (selNose.value() == \"monkey\") {\n        fill(246, 243, 228);\n        circle(700, 490, 140);\n        if (selMouth.value() == \"dodo\") {\n          image(dodo_mouth, 353, 320);\n        } else if (selMouth.value() == \"fish\") {\n          push();\n          translate(443, 290);\n          rotate(31);\n          scale(1.8);\n          image(fish_mouth, 0, 0);\n          pop();\n        } else if (selMouth.value() == \"monkey\") {\n          push();\n          translate(450, 370);\n          noStroke();\n          fill(246, 243, 228);\n          circle(180, 220, 100);\n          rotate(15);\n          scale(1.8);\n          image(monkey_mouth, 0, 0);\n          pop();\n        }\n\n        push();\n        translate(506, 280);\n        scale(2);\n        rotate(-20);\n        image(monkey_nose, 0, 0);\n        pop();\n      }\n      if (selEar.value() == \"fish\") {\n        image(fish_ear, 270, 200);\n      } else if (selEar.value() == \"monkey\") {\n        image(monkey_ear, 270, 250);\n      }\n\n      if (selEye.value() == \"dodo\") {\n      } else if (selEye.value() == \"fish\") {\n        image(fish_eye, 468, 268);\n      } else if (selEye.value() == \"monkey\") {\n        image(monkey_eye, 468, 268);\n      }\n      if (selHair.value() == \"dodo\") {\n      } else if (selHair.value() == \"fish\") {\n        image(fish_hair, 250, 75);\n      } else if (selHair.value() == \"monkey\") {\n        image(monkey_hair, 240, 25);\n      }\n\n      if (selSpecial.value() == \"fish\") {\n        image(fish_special, 135, 403);\n        if (selMouth.value() == \"dodo\") {\n          image(dodo_mouth, 353, 320);\n        } else if (selMouth.value() == \"fish\") {\n          push();\n          translate(443, 290);\n          rotate(31);\n          scale(1.8);\n          image(fish_mouth, 0, 0);\n          pop();\n          if (selNose.value() == \"dodo\") {\n            image(dodo_nose, 520, 320);\n          } else if (selNose.value() == \"monkey\") {\n            push();\n            translate(450, 370);\n            noStroke();\n            fill(246, 243, 228);\n            circle(180, 220, 100);\n            rotate(15);\n            scale(1.8);\n            image(monkey_mouth, 0, 0);\n            pop();\n          }\n        } else if (selMouth.value() == \"monkey\") {\n          push();\n          translate(450, 370);\n          noStroke();\n          fill(246, 243, 228);\n          circle(180, 220, 100);\n          rotate(15);\n          scale(1.8);\n          image(monkey_mouth, 0, 0);\n          pop();\n        }\n      }\n    } else if (selMask.value() == \"fish\") {\n      image(fish_mask, -85, -70);\n    } else if (selMask.value() == \"monkey\") {\n      image(monkey_mask, -45, 30);\n      if (selMouth.value() == \"dodo\") {\n        image(dodo_mouth, 353, 320);\n      } else if (selMouth.value() == \"fish\") {\n        image(fish_mouth, 478, 378);\n      } else if (selMouth.value() == \"monkey\") {\n        image(monkey_mouth, 478, 378);\n      }\n\n      if (selNose.value() == \"dodo\") {\n        image(dodo_nose, 520, 320);\n      } else if (selNose.value() == \"monkey\") {\n        image(monkey_nose, 532, 280);\n      }\n\n      if (selEar.value() == \"fish\") {\n        image(fish_ear, 270, 200);\n      } else if (selEar.value() == \"monkey\") {\n        image(monkey_ear, 270, 250);\n      }\n\n      if (selEye.value() == \"dodo\") {\n      } else if (selEye.value() == \"fish\") {\n        image(fish_eye, 468, 268);\n      } else if (selEye.value() == \"monkey\") {\n        image(monkey_eye, 468, 268);\n      }\n      if (selHair.value() == \"dodo\") {\n      } else if (selHair.value() == \"fish\") {\n        image(fish_hair, 250, 75);\n      } else if (selHair.value() == \"monkey\") {\n        image(monkey_hair, 240, 25);\n      }\n\n      if (selSpecial.value() == \"fish\") {\n        image(fish_special, 135, 403);\n        if (selMouth.value() == \"dodo\") {\n          image(dodo_mouth, 353, 320);\n        } else if (selMouth.value() == \"fish\") {\n          image(fish_mouth, 478, 378);\n        } else if (selMouth.value() == \"monkey\") {\n          image(monkey_mouth, 478, 378);\n        }\n      }\n    }\n  } else if (selBase.value() == \"fish\") {\n    image(fish_base, 158, 140);\n    if (selNose.value() == \"dodo\") {\n      push();\n      translate(580, 400);\n      rotate(-60);\n      image(dodo_nose, 0, 0);\n      pop();\n    } else if (selNose.value() == \"monkey\") {\n      push();\n      translate(650, 320);\n      scale(1.2);\n      rotate(-15);\n      image(monkey_nose, 0, 0);\n      pop();\n    }\n    if (selMouth.value() == \"dodo\") {\n      push();\n      translate(380, 466);\n      rotate(-40);\n      image(dodo_mouth, 0, 0);\n      pop();\n    } else if (selMouth.value() == \"monkey\") {\n      push();\n      translate(500, 380);\n      scale(1.9);\n      image(monkey_mouth, 0, 0);\n      pop();\n    }\n    if (selEar.value() == \"monkey\") {\n      image(monkey_ear, 350, 250);\n    }\n    if (selEye.value() == \"dodo\") {\n      image(dodo_eye, 565, 305);\n    }\n    if (selHair.value() == \"dodo\") {\n      push();\n      translate(300, 80);\n      rotate(20);\n      image(dodo_hair, 0, 00);\n      pop();\n    } else if (selHair.value() == \"monkey\") {\n      image(monkey_hair, 300, 80);\n    }\n    if (selSpecial.value() == \"fish\") {\n      image(fish_special, 150, 450);\n    }\n  } else if (selBase.value() == \"monkey\") {\n    image(monkey_base, 0, 0);\n  }\n}"
  },
  {
    "_id": "TumCoYwh2tgjAmKLD",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T03:47:59.313Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j6x7lzc0svzsmwic6a2e",
        "version": 1555040885,
        "signature": "97a918ffd04a5916f32be004a08fbd16a3049c37",
        "width": 2274,
        "height": 1674,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:48:05Z",
        "tags": [],
        "bytes": 127550,
        "type": "upload",
        "etag": "4279fa257ab31fe0830b5c55430c2f14",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555040885/avalanche2019/j6x7lzc0svzsmwic6a2e.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555040885/avalanche2019/j6x7lzc0svzsmwic6a2e.png"
      },
      {
        "public_id": "avalanche2019/jwiz9w2eidtvqd6pnqhb",
        "version": 1555040888,
        "signature": "193becdc004f7abf9e82db33c139680d73ee0f14",
        "width": 2560,
        "height": 1608,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:48:08Z",
        "tags": [],
        "bytes": 93402,
        "type": "upload",
        "etag": "5ed2aab783b61d3713141871a69dab7c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555040888/avalanche2019/jwiz9w2eidtvqd6pnqhb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555040888/avalanche2019/jwiz9w2eidtvqd6pnqhb.png"
      },
      {
        "public_id": "avalanche2019/rk4e3lamjohk8w3fdwit",
        "version": 1555040891,
        "signature": "845beee315db83d3ab2b31e9d2f1f2089148972e",
        "width": 2630,
        "height": 1546,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:48:11Z",
        "tags": [],
        "bytes": 110637,
        "type": "upload",
        "etag": "1f6bc99da99f6b69eed1c989d3b6aeca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555040891/avalanche2019/rk4e3lamjohk8w3fdwit.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555040891/avalanche2019/rk4e3lamjohk8w3fdwit.png"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T12:54:50.02Z" }
      }
    ],
    "title": "",
    "description": "using tracery to create different rectangle",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    'top': ['#div#'],\n    'div': ['<div style=\"padding:#padding#; background:#background# ;border: #borderSize#  #borderColor#;  color: #borderColor#; text-align: center; text-transform: uppercase; font-family: sans-serif; margin: 10px;\">#content#</div>'],\n    'content': ['#div#', '#div# #div#','#word#'],\n    'borderSize': ['1px', '4px', '10px','20px'],\n//    'borderType': ['solid', 'dashed', 'dotted'],\n    'borderColor': ['black'],\n    'word': [''],\n 'background': ['green', 'yellow', 'violet'],\n    'padding':['200px','20px','70px']\n   \n\n}\n\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten('#top#');\n\n    const storyDiv = document.createElement('div');\n    storyDiv.innerHTML = story;\n\n    document.body.insertAdjacentElement('beforeend', storyDiv);\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "TyDT9Di9txcikxphk",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-30T14:09:22.23Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h1a5d6cxgjdgkisbwrow",
        "version": 1556633371,
        "signature": "7786aa1a3260860801b4b43b664b49aac1dc7446",
        "width": 780,
        "height": 622,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-30T14:09:31Z",
        "tags": [],
        "bytes": 51281,
        "type": "upload",
        "etag": "bc1e7855c1fdfc97a5bdac1e6ce40144",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556633371/avalanche2019/h1a5d6cxgjdgkisbwrow.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556633371/avalanche2019/h1a5d6cxgjdgkisbwrow.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:21:52.61Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "W2Q6jQf9gAi8x4cQd",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T19:02:54.588Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/micb1h2bwojmuzpztws7",
        "version": 1549566419,
        "signature": "7dbc2509f1b78fbc1d29919d739619d341948d03",
        "width": 640,
        "height": 312,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-07T19:06:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 19327870,
        "type": "upload",
        "etag": "66270b8e38315cf2e9a79a1aaad19886",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549566419/avalanche2019/micb1h2bwojmuzpztws7.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549566419/avalanche2019/micb1h2bwojmuzpztws7.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "124576",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "3753536",
          "dar": "80:39"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3886626,
        "duration": 39.783333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T05:11:31.823Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T11:51:45.529Z" }
      }
    ],
    "title": "",
    "description": "Pardon my french. \n\nPt 1: Smoke on water (visual generated randomly, respond to interaction)\nPt 2: same notes , varying octaves distributed randomly. (responsive visuals ).\n\ntry it out : http://architkaushik.com/mv/\n\ncredits:\nDaniel Shiffman- flow fields\nTone.js examples\nAudio context library"
  },
  {
    "_id": "W3jaGdGEEEmSycyj5",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T22:31:31.249Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/w6kunyxrzbqwpjiwmva4",
        "version": 1549924401,
        "signature": "3315437a5af89e0c691bb61b228b8a3488ac6ac7",
        "width": 670,
        "height": 1224,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-11T22:33:21Z",
        "tags": [],
        "bytes": 63959,
        "type": "upload",
        "etag": "23d0d9a5929f17d8c73f6806f4bf083f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549924401/avalanche2019/w6kunyxrzbqwpjiwmva4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549924401/avalanche2019/w6kunyxrzbqwpjiwmva4.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T04:14:40.849Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-14T05:25:22.332Z" }
      }
    ],
    "title": "",
    "description": "Playing around with p5's typography controls",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet x = 30;\nlet y = 150;\n\nfunction setup() {\n  colorMode(HSB, 100);\n  createCanvas(300, 300);\n  textFont(\"Monospace\");\n\n  createP(\"Font Weight\");\n  weightSelector = createSelect();\n  weightSelector.option(\"Regular\", NORMAL);\n  weightSelector.option(\"Bold\", BOLD);\n  weightSelector.option(\"Italics\", ITALIC);\n\n  createP(\"Font Size\");\n  fontSizeSlider = createSlider(10, 50, 30, 1);\n\n  createP(\"Letter Tracking\");\n  trackingSlider = createSlider(0, 80, 20, 0.5);\n\n  createP(\"Text Transform\");\n  selector = createSelect();\n  selector.option(\"Lower Case\", \"lower\");\n  selector.option(\"Upper Case\", \"upper\");\n  createP(\"<br> \");\n\n  createP(\"Y Position (staggered)\");\n  vertSlider = createSlider(-50, 50, 0, 1);\n\n  createP(\"Number of Characters\");\n  sliderNum = createSlider(1, 10, 5, 1);\n}\n\nfunction draw() {\n  moveStuff();\n  drawStuff();\n}\n\nfunction moveStuff() {\n  tracking = trackingSlider.value();\n  numLetters = sliderNum.value();\n  vert = vertSlider.value();\n  fontSize = fontSizeSlider.value();\n  fontWeight = weightSelector.value();\n}\n\nfunction drawStuff() {\n  background(50, 10, 95);\n  fill(50, 10, 25);\n  textSize(fontSize);\n  textStyle(fontWeight);\n\n  for (i = 0; i < numLetters; i++) {\n    selector.value() === \"upper\"\n      ? (textContent = `${char(97 + i).toUpperCase()}`)\n      : (textContent = `${char(97 + i).toLowerCase()}`);\n\n    text(textContent, x + i * tracking, y + i * vert);\n  }\n}"
  },
  {
    "_id": "W7R5BhjsFjNPFcrkN",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T04:54:38.163Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/evws0ggru3d91a4e1jni",
        "version": 1549601684,
        "signature": "c0fc397826a937923556e2c9b61e2e4fba588050",
        "width": 1258,
        "height": 1294,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T04:54:44Z",
        "tags": [],
        "bytes": 141417,
        "type": "upload",
        "etag": "bbfd2700cdbe5c6f03256e8d64bc1d6b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549601684/avalanche2019/evws0ggru3d91a4e1jni.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549601684/avalanche2019/evws0ggru3d91a4e1jni.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T05:24:19.914Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T11:47:22.92Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-09T19:51:22.401Z" }
      }
    ],
    "title": "",
    "description": "Disrupted lines, inspired by Georg Nees grids. \n\nCode builds off of [Justin's class example code](http://compform.net/random/), adding constraints to isolate the Brownian movement.",
    "inspiration_name": "Georg Nees",
    "inspiration_url": "https://en.wikipedia.org/wiki/Georg_Nees",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// This code builds off of Justin Bakse's Brownian Motion code\n// in the http://compform.net/random/ course material.\n// Specifically, *this* code:\n// - creates several controlled, vertical brownian paths\n// - isolates the each path's unpredictable movement to the x\n// direction, and only active at the center of the canvas\n//\n// Overall look inspired by Georg Nees.\n\nconst canvasWidth = 800,\n    canvasHeight = 800,\n    halfCanvasWidth = canvasWidth / 2,\n    halfCanvasHeight = canvasHeight / 2,\n    numCols = 60,\n    stepDistance = 5,\n    numSteps = canvasHeight / stepDistance;\n\nlet xStart = 10,\n    yStart = 10;\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    noLoop(); \n}\n\nfunction draw() {\n    strokeWeight(.5);\n\n    // Draw lots of vertical paths\n    for (c = 0; c < numCols; c++) {\n        drawPath(xStart, yStart, stepDistance, numSteps);\n        xStart += (canvasWidth - 20) / numCols;\n    }\n}\n\nfunction drawPath(x, y, segmentLength, steps) {\n    for (var step = 0; step < steps; step++) {\n\n        // Isolate the path's wiggle to the center of the canvas\n        if (dist(x, y, halfCanvasWidth, halfCanvasHeight) < 100) {\n            randomRangeValue = 4;\n        } else {\n            randomRangeValue = 0;\n        }\n\n        // Isolate the path's wiggle to the x-axis\n        var nextX;\n        nextX = xStart + random(-randomRangeValue, randomRangeValue);\n        nextY = y + segmentLength;\n\n        line(x, y, nextX, nextY);\n\n        x = nextX;\n        y = nextY;\n    }\n}"
  },
  {
    "_id": "WARuL5EgSadXuzqn4",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T23:21:17.039Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s2bcub2ubkt0sapj5itd",
        "version": 1549495666,
        "signature": "2f611fb697732b1653d6e9b431e1c65067700589",
        "width": 1204,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T23:27:46Z",
        "tags": [],
        "bytes": 2626708,
        "type": "upload",
        "etag": "21fcec3920237c246c0da34e560ea2e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549495666/avalanche2019/s2bcub2ubkt0sapj5itd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549495666/avalanche2019/s2bcub2ubkt0sapj5itd.png"
      },
      {
        "public_id": "avalanche2019/asp1p11kn4u5a7bz5qt5",
        "version": 1549495788,
        "signature": "e5b85d224a040b64cb09deb2863d21379972555c",
        "width": 1202,
        "height": 1188,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T23:29:48Z",
        "tags": [],
        "bytes": 1890062,
        "type": "upload",
        "etag": "db74a353a1fa0f7f1355e6c835232e99",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549495788/avalanche2019/asp1p11kn4u5a7bz5qt5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549495788/avalanche2019/asp1p11kn4u5a7bz5qt5.png"
      },
      {
        "public_id": "avalanche2019/ekwfcyrbjxque8zgskle",
        "version": 1549495800,
        "signature": "fec4a0bb28b8d27baf8a66aaaa84f6ed58eb147c",
        "width": 1196,
        "height": 1206,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T23:30:00Z",
        "tags": [],
        "bytes": 1040272,
        "type": "upload",
        "etag": "f76473ef6e7015374679d60f3cb26dc8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549495800/avalanche2019/ekwfcyrbjxque8zgskle.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549495800/avalanche2019/ekwfcyrbjxque8zgskle.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Randomness using bezier \n\nRather than randomizing/modeling straight lines and relying on color and opacity to create texture, I used bezier to model curvature groupings. \nI modeled  a wavy  hair texture in  which I created strands of hair that followed randomizing properties of  tufts they were part of as a whole \n\nAdditionally randomizing curvature and position of my control points allowed me to achieve a texture in which strands of hair create a overall hair consistency  that each hair and group of hairs slightly deviate from.\n\nThe last image shows control point deviation that allowed for this texture.",
    "inspiration_name": "Curved Hair texture",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n function setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n    smooth();\n    // colorMode(HSB);\n    colorMode(RGB, 255, 255, 255, 1);\n\n\n    // startShape();\n    noFill();\n    stroke(255, 102, 0, 1);\n\n    //a tuft of hair \n    for (tuft = 1; tuft < 15; tuft++) {\n        //starting point for a tuft of hair \n        origin = {\n            x: tuft * 50,\n            y: 50,\n        };\n        console.log(origin.x);\n        //end point for a tuft of hair \n        strandEnd = {\n            x: tuft * 50,\n            y: 400,\n        };\n        //curve deviation relative to strands \n        let curveDeviation = (Math.random() * 150) + 50;\n\n        //strands in a tuft\n        for (strand = 0; strand < 200; strand++) {\n            //using same color and opacity randomness form previous day \n            let red = Math.floor(100 * Math.random() + 155);\n            let green = Math.floor(20 * Math.random() + 50);\n            let opacity = Math.random() - .5;\n            stroke(red, green, 10, opacity);\n\n\n            //origin for a strand of hair deviates slightly from central tuft position\n            let originDeviationX = (Math.random() * 30) + 5;\n            curveStart = {\n                x: origin.x + originDeviationX,\n                y: origin.y,\n            };\n\n            //end point of each strand\n            let strandEndDeviationX = (Math.random() * 20) + 5;\n            //make strands that fall further from the x axis longer, and strands that end closer, shorter\n            let length = map(strandEndDeviationX, 5, 25, 0, 200);\n            curveEnd = {\n                x: strandEnd.x + strandEndDeviationX,\n                y: strandEnd.y + length,\n            };\n\n            //straight axis for start and end of strand of hair\n            let axis = dist(curveStart.x, curveStart.y, curveEnd.x, curveEnd.y);\n            //halfway point of a strand \n            let halfAxisLength = curveEnd.y / 2;\n\n\n\n            // control points \n            //the amount of curvature  of a control point is relative to its origin \n\n            let controlOne = {\n                //let the x axis of the control point be a random no larger than the curvedeviation\n                x: curveStart.x - (Math.floor(Math.random() * curveDeviation) + 100),\n                y: Math.floor(Math.random() * halfAxisLength),\n            };\n\n            //control Pont Two\n            let controlTwo = {\n                x: curveStart.x + (Math.floor(Math.random() * curveDeviation)),\n                y: Math.floor((Math.random() * halfAxisLength + halfAxisLength)),\n            };\n\n            bezier(curveStart.x, curveStart.y, controlOne.x, controlOne.y, controlTwo.x, controlTwo.y, curveEnd.x, curveEnd.y);\n        }\n    }\n}"
  },
  {
    "_id": "WB6TbJAd9noizrXK4",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-02-27T04:32:08.9Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/d6kpec3ekfnfnldvzwvc",
        "version": 1551242157,
        "signature": "9476111ff63c0c21054114b1bb48ec7082328a05",
        "width": 497,
        "height": 497,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-27T04:35:57Z",
        "tags": [],
        "bytes": 37654,
        "type": "upload",
        "etag": "023f35cdb7ff0fa700dc963c68efe6d9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551242157/avalanche2019/d6kpec3ekfnfnldvzwvc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551242157/avalanche2019/d6kpec3ekfnfnldvzwvc.jpg"
      },
      {
        "public_id": "avalanche2019/di4nfcys4geelkxafezo",
        "version": 1551242160,
        "signature": "9248abe5abb29769bfc85e3fe9b97c2d335e77cb",
        "width": 497,
        "height": 497,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-27T04:36:00Z",
        "tags": [],
        "bytes": 38824,
        "type": "upload",
        "etag": "371ce52b2c29ed581cff04cb326f8e93",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551242160/avalanche2019/di4nfcys4geelkxafezo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551242160/avalanche2019/di4nfcys4geelkxafezo.jpg"
      },
      {
        "public_id": "avalanche2019/xu0d9r1ti5v8caww6srm",
        "version": 1551242165,
        "signature": "c0e0644a69b79bd71e80057874d0140cb96df624",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-27T04:36:05Z",
        "tags": [],
        "bytes": 33642,
        "type": "upload",
        "etag": "057f239a3a79abfc6d40d79227911dba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551242165/avalanche2019/xu0d9r1ti5v8caww6srm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551242165/avalanche2019/xu0d9r1ti5v8caww6srm.png"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Coding Challenge to match a given pattern. \nThe first two images are the ones which I generated from my code, and the third one is the reference image.",
    "inspiration_name": "Match Dot Pattern",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Dot Challenge\n// Replicate the dot pattern image\n// Check the strategy.md file for logic assessment\n// https://github.com/akshansh2593/CompForm/blob/master/matchDotPattern/strategy.md\n\n\nvar hueValue; // vary the Hue value\nvar colorNoise;\n\nfunction setup() {\n    createCanvas(400, 400);\n}\n\n\nfunction draw() {\n    background(50);\n    colorMode(HSB);\n    noStroke();\n    ellipseMode(CENTER);\n\n\n    var noiseFrequency = 10; // play with this value to get the desired arrangement\n    // best value so far: 1\n\n    for (var i = 0; i < 100; i++) {\n\n        // Arrangement\n        noiseSeed(1);\n        var xPos = noise(i * noiseFrequency) * width;\n        noiseSeed(10002);\n        var yPos = noise(i * noiseFrequency) * height;\n\n        // Color\n        hueValue = random(0, 360);\n        var colorNoise = noise(hueValue * noiseFrequency) * 360;\n        fill(colorNoise, 100, 100);\n\n        // Size\n        var diameter = map(colorNoise, 0, 360, 4, 20);\n\n        ellipse(xPos, yPos, diameter, diameter);\n    }\n\n\n    noLoop();\n\n}"
  },
  {
    "_id": "WBB6GZBYCgsSN4NZX",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-29T16:55:51.153Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vnp655tuk6xscmqbkpku",
        "version": 1553878557,
        "signature": "f79bc258ec06b3f37bf464590b9f0c43e38e1969",
        "width": 996,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T16:55:57Z",
        "tags": [],
        "bytes": 571476,
        "type": "upload",
        "etag": "93fcfdbbd52a0bb2cea185d171db4390",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553878557/avalanche2019/vnp655tuk6xscmqbkpku.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553878557/avalanche2019/vnp655tuk6xscmqbkpku.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Elephant ii",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\t//noFill();\n\t//stroke(255);\n\t//background(255, 0, 128);\n\t//noLoop();\n\tmyTurtle = new Turtle();\n  \n  img = createImage(20, 20);\n    img.loadPixels();\n\n    for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n            var c = color(255, 0+y*12, 128+y*6);\n            img.set(x, y, c);\n        }\n    }\n\n    img.updatePixels();\n\n    noSmooth();\n    image(img, 0, 0, width, height);\n    noLoop();\n}\n\n\n\nfunction draw() {\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(250, 450);\n\tmyTurtle.turnTo(-90);\n\tmyTurtle.penDown();\n    stroke(255,255,255,90);\n\tstrokeWeight(4);\n    strokeCap(ROUND)\n\tdrawBranch(100);\n  \n  stroke(255,0,128,90);\n\tstrokeWeight(4);\n    strokeCap(ROUND)\n myTurtle.penUp();\n  myTurtle.moveTo(320, 225);\n  myTurtle.penDown();\n\tmyTurtle.turnTo(0);\n\tdrawCircle4(myTurtle);\n  \n  \n    \n  \n}\n\n\nfunction drawBranch(length) {\n\n\tif (length < 2) {\n\t\treturn;\n\t}\n\n\t// draw this branch\n\tmyTurtle.moveForward(length);\n\n\t// left child\n\tmyTurtle.pushState();\n\tmyTurtle.turnLeft(80);\n\tdrawBranch(length * 0.70);\n\t//drawBranch(length * random(.5, .9));\n\n\tmyTurtle.popState();\n\n\t// right child\n\tmyTurtle.pushState();\n\tmyTurtle.turnRight(35);\n\tdrawBranch(length * 0.75);\n\t//drawBranch(length * random(.5, .9));\n    stroke(255,255,255,90);\n\tstrokeWeight(4);\n    strokeCap(ROUND)\n\tmyTurtle.popState();\n\n}\n\nfunction drawCircle4(t) {\n\tfor (var i = 0; i < 36; i++) {\n\t\tt.moveForward(1);\n\t\tt.turnRight(8);\n\t}\n  stroke(255,0,128);\n\tstrokeWeight(4);\n    strokeCap(ROUND)\n}"
  },
  {
    "_id": "WEp33gYuNjaGKCs5A",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:34:34.18Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nm0dvvst5nonjui9n4nh",
        "version": 1557516982,
        "signature": "47a18a29a4ec41e6bf2a93e30e9ed0a0596a342e",
        "width": 1288,
        "height": 1492,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T19:36:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 470103,
        "type": "upload",
        "etag": "ae6c37e29e8332ff55640bea29d12f8d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557516982/avalanche2019/nm0dvvst5nonjui9n4nh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557516982/avalanche2019/nm0dvvst5nonjui9n4nh.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "228724",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "405027",
          "dar": "322:373"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 686010,
        "duration": 5.482167,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Far from what I originally planned, but did connect to P5.speech. Curious to see what types of games/microgrames could be fun with voice as controller.",
    "code": "let dog_img;\nlet dog_is_wagging = true;\nlet voiceInput = '';\nlet myRec = new p5.SpeechRec('en-US');\nmyRec.continuous = true;\n\nfunction preload() {\n    rest = loadAnimation(\n        './assets/wag/wag_0.png'\n    );\n    wag = loadAnimation(\n        './assets/wag/wag_1.png',\n        './assets/wag/wag_2.png',\n        './assets/wag/wag_1.png',\n        './assets/wag/wag_2.png',\n        './assets/wag/wag_1.png',\n        './assets/wag/wag_2.png'\n    );\n    \n}\n\nfunction setup() {\n    // visuals\n    const width = window.innerWidth;\n    const height = 750;\n    createCanvas(width, height);\n\n    // speech rec\n    const continuous = true;\n    const interim = true;\n    myRec.start(continuous, interim);\n}\n\nfunction draw() {\n    myRec.onResult = parseResult;\n    background(255, 50, 50);\n    frameRate(20);\n    if(voiceInput === 'treat') {\n        wag.visible = true;\n        wag.looping = false;\n        wag.play();\n\n        rest.visible = false;\n        rest.stop();\n    }\n    else {\n        wag.visible = false;\n        wag.stop();\n\n        rest.visible = true;\n        rest.play();\n    }\n\n    animation(wag, width / 2, height - 300);\n    animation(rest, width / 2, height - 300);\n}\n\n// speech rec - onResult\nfunction parseResult() {\n    // recognition system will often append words into phrases.\n    // so hack here is to only use the last word:\n    const s = myRec.resultString;\n    let sNorm = '';\n    console.log(s);\n    if (s.match(/treat|cheat|eat/g)) {\n        sNorm = 'treat';\n    } else if (s.match(/walk/g)) {\n        sNorm = 'walk';\n    } else if (s.match(/squirrel/g)) {\n        sNorm = 'squirrel';\n    } else if (s.match(/bath/g)) {\n        sNorm = 'bath';\n    }\n    voiceInput = sNorm;\n}"
  },
  {
    "_id": "WJYNobWLQ48GtBWYA",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-01-26T22:46:19.142Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rhjvdair20yuxbnt3unu",
        "version": 1548542801,
        "signature": "e6a13eeaaf0a4b48c0c3f505610514d76d19fd87",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-26T22:46:41Z",
        "tags": [],
        "bytes": 2533942,
        "type": "upload",
        "etag": "92a1eaf43a9867b917f2dd266418947d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548542801/avalanche2019/rhjvdair20yuxbnt3unu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548542801/avalanche2019/rhjvdair20yuxbnt3unu.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "My initials added together using Phoebe's tiles."
  },
  {
    "_id": "WLhzo2Mn4jmyazAjW",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T18:00:13.027Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yyiqcdsib600lu7vxa6p",
        "version": 1556820037,
        "signature": "9edcef9d86bbb1a7d2e978502224af84d388c09d",
        "width": 1440,
        "height": 686,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T18:00:37Z",
        "tags": [],
        "bytes": 524449,
        "type": "upload",
        "etag": "91ccb87f28719d9bd28511ff4f494f32",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556820037/avalanche2019/yyiqcdsib600lu7vxa6p.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556820037/avalanche2019/yyiqcdsib600lu7vxa6p.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "floating temple"
  },
  {
    "_id": "WN4MtB6yWjrZTGKqN",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-02-01T02:28:33.016Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l9xa1xxc8yehzttgtany",
        "version": 1548988139,
        "signature": "9e6c2832bd15a03d14baa823d1c1d7784c70b85e",
        "width": 524,
        "height": 632,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T02:28:59Z",
        "tags": [],
        "bytes": 185165,
        "type": "upload",
        "etag": "ec61cf31ad8cbfb2670130e3ea62b80b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548988139/avalanche2019/l9xa1xxc8yehzttgtany.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548988139/avalanche2019/l9xa1xxc8yehzttgtany.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:55.689Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "exploration with color",
    "inspiration_name": "undefined"
  },
  {
    "_id": "WS4NnaJoe763qo95n",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "created_at": { "$date": "2019-03-01T17:20:07.179Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/w62bfum9rwdayylt9jyh",
        "version": 1551460832,
        "signature": "8c5e8809aa17e92223753b042cd6a794367e7dd7",
        "width": 966,
        "height": 580,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T17:20:32Z",
        "tags": [],
        "bytes": 65095,
        "type": "upload",
        "etag": "d45e88590cee48b4c515361bc6f34e33",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551460832/avalanche2019/w62bfum9rwdayylt9jyh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551460832/avalanche2019/w62bfum9rwdayylt9jyh.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge expand",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar amplitude_slider;\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\n\nfunction setup() {\n    colorMode(HSB,1);\n    createCanvas(500, 300);\n    \n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 100, 50);\n    \n    createP('Frequency');\n    frequency_slider = createSlider(0, 100, 50);\n    \n    createP('Speed');\n    speed_slider = createSlider(0, 25, 10);\n}\n\nfunction draw() {\n    background(0,0,0.2);\n    ellipseMode(CENTER);\n\n    var amplitude = amplitude_slider.value() / 100;\n    var frequency = frequency_slider.value()/100;\n    var speed = speed_slider.value()/100;\n\n    noiseDetail(1, .5);\n\n    fill(255);\n    noStroke();\n\n    for (i = 0; i < 1; i += .02) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n\n        // hint: drive offsetX and offsetY with noise() instead of random()\n        var offsetX = noise(i * frequency) * amplitude;\n        var offsetY = noise(i * frequency * 10, frameCount * speed)*amplitude*y;\n        \n            let h = noise(i * frequency,1);\n            let s = 1;\n            let b = 1;\n            fill(h, s, b);\n            \n            let r = noise(i*frequency,1)*width;\n        \n        ellipse(x + offsetX, y + offsetY, r, r);\n    }\n\n\n\n}"
  },
  {
    "_id": "WS83PZSTefhJsFBhT",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:31:53.752Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sruqjwuiouhpk2nj397n",
        "version": 1548459386,
        "signature": "0d2dc0e02c8fb9495db4281d84d785ef4003b966",
        "width": 1022,
        "height": 1280,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-25T23:36:26Z",
        "tags": [],
        "bytes": 1267733,
        "type": "upload",
        "etag": "640f076d240b3b22c77e2a4db1673656",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459386/avalanche2019/sruqjwuiouhpk2nj397n.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459386/avalanche2019/sruqjwuiouhpk2nj397n.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:03:04.487Z" }
      }
    ],
    "title": "",
    "description": "Horrifying Monster",
    "inspiration_name": "Horrified"
  },
  {
    "_id": "WWHyuBMz5oKkxEKav",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T03:15:53.053Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k4npe7ezoljhn3hs6mrs",
        "version": 1549598438,
        "signature": "99b8d62b882cc9832506bddd45675771a9d233e1",
        "width": 1252,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T04:00:38Z",
        "tags": [],
        "bytes": 672662,
        "type": "upload",
        "etag": "62682f447d0ecdc4626f3c778f2d3322",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549598438/avalanche2019/k4npe7ezoljhn3hs6mrs.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549598438/avalanche2019/k4npe7ezoljhn3hs6mrs.png"
      },
      {
        "public_id": "avalanche2019/eipabl7wfjngiorz4bji",
        "version": 1549598446,
        "signature": "79a10cbcf0afe3f6cc5e6e69de11df8757e4f761",
        "width": 3677,
        "height": 2050,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T04:00:46Z",
        "tags": [],
        "bytes": 2234599,
        "type": "upload",
        "etag": "1690b531a100c7c6de21d8d9a94cceab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549598446/avalanche2019/eipabl7wfjngiorz4bji.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549598446/avalanche2019/eipabl7wfjngiorz4bji.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T02:32:49.171Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T03:13:43.324Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T05:19:00.857Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:34:56.153Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T19:55:21.825Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T05:37:00.736Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T11:46:57.392Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T20:56:58.875Z" }
      }
    ],
    "title": "",
    "description": "Brownian riffs on [Justin's class example code](http://compform.net/random/).\n\nSpecifically, sets the line's brightness based on its distance from the \"seed\" location, and randomizes step distance.",
    "inspiration_name": "Brownian motion",
    "inspiration_url": "https://en.wikipedia.org/wiki/Brownian_motion",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// This code builds off of Justin Bakse's Brownian Motion code\n// in the http://compform.net/random/ course material.\n// Specifically, *this* code:\n// - adds repetition to the existing draw pattern\n// - adds random variability to the existing draw pattern, in the form\n//   of step distance (ie density of overall form)\n// - makes the brightness of the line drawn a function of the distance\n//   it has traveled from its origin point.\n\nconst canvasWidth = 800,\n    canvasHeight = 800,\n    halfCanvasWidth = canvasWidth / 2,\n    halfCanvasHeight = canvasHeight / 2;\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    ellipse(canvasWidth * .5, halfCanvasHeight, 30, 30);\n    noLoop();\n    strokeWeight(.5);\n    colorMode(HSB, 1);   \n}\n\nfunction draw() {\n    let x = halfCanvasWidth;\n    let y = halfCanvasHeight;\n\n    // draw 30 brownian paths over each other, at variable densities,\n    // each with 3k steps\n    for (n = 0; n < 30; n++) {\n        drawBrownianPath(halfCanvasWidth, halfCanvasHeight, random(3, 4), 3000);\n    }\n}\n\nfunction drawBrownianPath(x, y, segmentLength, steps) {\n    for (var step = 0; step < steps; step++) {\n\n        distanceFromCenter = dist(x, y, halfCanvasWidth, halfCanvasHeight);\n        maxDistance = sqrt(sq(canvasWidth) + sq(canvasHeight));\n        radius = 50;\n\n        lineBrightness = map(distanceFromCenter, 0, maxDistance, 0, 3.5);\n\n        stroke(0, 0, lineBrightness);\n\n        var nextX, nextY;\n        nextX = x + floor(random(-1,2)) * segmentLength;\n        nextY = y + floor(random(-1,2)) * segmentLength;\n\n        line(x, y, nextX, nextY);\n\n        x = nextX;\n        y = nextY;\n    }\n}"
  },
  {
    "_id": "WZF6MLRsGWMjniJd5",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T02:21:06.817Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aay6dygojyippbsqxlks",
        "version": 1556850072,
        "signature": "20e76740e6a627f65e4a5d99c627c7087d6cfd82",
        "width": 3042,
        "height": 1948,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T02:21:12Z",
        "tags": [],
        "bytes": 735406,
        "type": "upload",
        "etag": "674612fe2a0c031de777de9ef59f1af6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556850072/avalanche2019/aay6dygojyippbsqxlks.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556850072/avalanche2019/aay6dygojyippbsqxlks.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T02:54:24.871Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T16:12:04.838Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:21:40.985Z" }
      }
    ],
    "title": "",
    "description": "ice cream",
    "code": "$fn=300;\n     union(){\n          color(\"Lightblue\"){\n       translate([30,0,17]) cube([12,3,4],true);\n         rotate([90,0,0])translate([30,20,0]) cylinder (h=3, r=6, center = true);\n     } \n   color(\"pink\"){\n        translate([30,0,12]) cube([12,3,6],true); \n   }  \n    color(\"lightgreen\"){\n        translate([30,0,6]) cube([12,3,6],true); \n   }  \n   \n    color(\"red\"){\n        translate([30,0,0]) cube([3,2,10],true); \n   }\n }\n \n    union(){\n color(\"pink\"){\n       translate([0,0,18])sphere(8);;\n }\n \ncolor(\"yellow\"){\n    $fn=50;\n cylinder(h=25, d1=0, d2=10, center=true);\n cylinder(  25,    0,    5,        true);\n cylinder(h=25, r1=0, r2=5, center=true);\n\n}\n}\n  union(){\n translate([-30,0,0])color(\"brown\"){\n     $fn=50;\n cylinder(h=25, d1=0, d2=10, center=true);\n cylinder(  25,    0,    5,        true);\n cylinder(h=25, r1=0, r2=5, center=true);\n }\n \n translate([-30,0,0]) color(\"pink\"){\n       translate([3,0,16])sphere(5);;\n }\n \n  translate([-30,0,0]) color(\"lightyellow\"){\n       translate([-3,0,16])sphere(5);;\n }\n \n   translate([-30,0,0]) color(\"orange\"){\n       translate([0,0,22])sphere(5);;\n }\n}"
  },
  {
    "_id": "WZabdJXjHEji5h4c6",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-08T04:07:12.526Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/awtedozb0flcowv8o0or",
        "version": 1554697028,
        "signature": "d3f700ed79fa5c99a420ccde8a146e7053cefa52",
        "width": 986,
        "height": 1512,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-08T04:17:08Z",
        "tags": [],
        "bytes": 144796,
        "type": "upload",
        "etag": "cd52f81df18fc43c25a29c9027f1368d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554697028/avalanche2019/awtedozb0flcowv8o0or.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554697028/avalanche2019/awtedozb0flcowv8o0or.png"
      },
      {
        "public_id": "avalanche2019/revo5jnwm4ft4t47irg0",
        "version": 1554697721,
        "signature": "d8e0aec84a62e3f858d5386ad71d1c204be5f637",
        "width": 312,
        "height": 820,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-08T04:28:41Z",
        "tags": [],
        "bytes": 38346,
        "type": "upload",
        "etag": "c26836b03403252bec6f355da38a4a96",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554697721/avalanche2019/revo5jnwm4ft4t47irg0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554697721/avalanche2019/revo5jnwm4ft4t47irg0.png"
      },
      {
        "public_id": "avalanche2019/smtcc2rynkjeal4kzzb8",
        "version": 1554698234,
        "signature": "e0f7d82be298cd7c9963e36a3d6df930fdbd8f0c",
        "width": 1192,
        "height": 1074,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-08T04:37:14Z",
        "tags": [],
        "bytes": 176504,
        "type": "upload",
        "etag": "110e7ad2fcee221b330631d0d46c5bdf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554698234/avalanche2019/smtcc2rynkjeal4kzzb8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554698234/avalanche2019/smtcc2rynkjeal4kzzb8.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "A little time left over today, so posting the beginning of a next sketch (just code for now). Goal is to generate words that *could be* but aren't.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// US English words that could be but aren't\n\nvowels = [\n    'ʌ',    // cup\n    'æ',    // cat\n    'e',    // bed\n    'ə',    // away\n    'ɪ',    // hit\n    'i',    // see\n    'ʊ',    // book\n    'u',    // blue\n    'aɪ',   // five\n    'aʊ',   // now\n    'eɪ',   // say\n    'oʊ',   // go\n    'ɔɪ'    // boy\n]\n\nplosives = [\n    'p',    // pop\n    'b',    // bob\n    't',    // ten\n    'd',    // den\n    'k',    // luck\n    'g'     // lug\n]\n\nfricatives = [ \n    'f',    // loft\n    'v',    // love\n    'θ',    // thanks\n    'ð',    // they\n    's',    // so\n    'z',    // zoo\n    'ʃ',    // show\n    'ʒ'     // garage\n]\n\naffricates = [\n    'tʃ',   // shut\n    'dʒ'    // just\n]\n\nnasals = [\n    'n',    // no\n    'm'     // may\n]\n\napproximants = [\n    'l',    // lucky\n    'r',    // rock\n    'w',    // water\n    'j'     // yet\n]\n\nclass Word {\n    constructor(_onset, _nucleus, _coda) {\n        this.onset = _onset,\n        this.nucleus = _nucleus,\n        this.coda = _coda\n    }\n\n    printSelf() {\n        console.log(`${this.onset} ${this.nucleus} ${this.coda}`)\n    }\n}\n\nconst onset_id = Math.floor(Math.random() * plosives.length);\nconst nucleus_id = Math.floor(Math.random() * vowels.length);\nconst coda_id = Math.floor(Math.random() * plosives.length);\n\nconst word = new Word(\n    plosives[onset_id],\n    vowels[nucleus_id],\n    plosives[coda_id]\n);\n\nword.printSelf();"
  },
  {
    "_id": "WZmw6izdETLWTBBtj",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T15:48:35.844Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/y5kkhsvbmpt3dawhr2df",
        "version": 1552664955,
        "signature": "bf5deccf5e2e99543c1c8e8152feef7c56213b15",
        "width": 994,
        "height": 994,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T15:49:15Z",
        "tags": [],
        "bytes": 63305,
        "type": "upload",
        "etag": "8252b097f5f0caa90e3c094e3db057b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552664955/avalanche2019/y5kkhsvbmpt3dawhr2df.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552664955/avalanche2019/y5kkhsvbmpt3dawhr2df.jpg"
      },
      {
        "public_id": "avalanche2019/nbc4pjuabk1wluaf0xdx",
        "version": 1552665137,
        "signature": "2f6dcecfc9bf1118dcbdfada143b2c2e3dc219d9",
        "width": 980,
        "height": 972,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T15:52:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 772745,
        "type": "upload",
        "etag": "2152bfe5f480f97292861bfebddba3e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552665137/avalanche2019/nbc4pjuabk1wluaf0xdx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552665137/avalanche2019/nbc4pjuabk1wluaf0xdx.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "442908",
          "dar": "245:243"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 452890,
        "duration": 13.65,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T15:51:52.642Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:40:46.33Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T17:47:48.35Z" }
      }
    ],
    "title": "",
    "description": "Project management: Generate a new schedule for the day every minute (coming up: sliders for work/life balance)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\nvar scheduleArray = [\n  ...Array(40).fill(\"work\"),\n  ...Array(16).fill(\"sleep\"),\n  ...Array(4).fill(\"eat\")\n];\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  frameRate(30);\n  background(0.53, 0.25, 0.9);\n  myTurtle.penUp();\n  myTurtle.moveTo(242, 100);\n  myTurtle.penDown();\n  angleMode(RADIANS);\n  shuffle(scheduleArray, true);\n}\n\nfunction draw() {\n  background(0.53, 0.25, 0.9);\n  myTurtle.penDown();\n\n  for (let s = 0; s < 60; s++) {\n    if (second() == 0) {\n      shuffle(scheduleArray, true);\n    }\n    if (s <= second() && s > 0) {\n      // myTurtle.penDown();\n      push();\n      fill(255);\n      textSize(16);\n      // textLeading(100);\n      myTextWidth = textWidth(scheduleArray[s]);\n      if (s < 30) {\n        translate(myTurtle.x, myTurtle.y);\n        rotate(myTurtle.bearingRadians - HALF_PI);\n      } else {\n        translate(myTurtle.x, myTurtle.y);\n        rotate(myTurtle.bearingRadians + HALF_PI);\n        translate(-myTextWidth, 0);\n      }\n      text(scheduleArray[s], 0, 0);\n      pop();\n      // circle(myTurtle.x, myTurtle.y, 10, 10);\n    } else {\n      myTurtle.penUp();\n    }\n    myTurtle.moveForward(15);\n    myTurtle.turnRight(6);\n  }\n  myTurtle.moveTo(242, 100);\n}"
  },
  {
    "_id": "Wi4u5xGbgXtvwfFNd",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T20:21:30.4Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gwbw7w9hfxppv3pghro2",
        "version": 1549052504,
        "signature": "f18c4e776e9b7150573668bdd1680abaed60ae12",
        "width": 1029,
        "height": 1567,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T20:21:44Z",
        "tags": [],
        "bytes": 166325,
        "type": "upload",
        "etag": "8e5f99893fd885592cd1f8e6d3a35094",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549052504/avalanche2019/gwbw7w9hfxppv3pghro2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549052504/avalanche2019/gwbw7w9hfxppv3pghro2.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T20:59:37.026Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:02:20.413Z" }
      }
    ],
    "title": "",
    "description": "Akshansh’s tiles, thank you they’re great!"
  },
  {
    "_id": "Wi8JPQG678DoC6Z2r",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-16T02:07:35.341Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kmipj5celhj6xyiwbved",
        "version": 1557972461,
        "signature": "dde9e86aafd8770c06ca97ee6fd087b3ab6a2ae4",
        "width": 720,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-16T02:07:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 8495830,
        "type": "upload",
        "etag": "fb7618ba19cae31146980607c38c8e3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557972461/avalanche2019/kmipj5celhj6xyiwbved.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557972461/avalanche2019/kmipj5celhj6xyiwbved.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1388693",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 1395141,
        "duration": 48.716667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/zmtthshekulmwwjhuyye",
        "version": 1557972465,
        "signature": "b53de8aac4910139f9dd18ed950cada6d0c9bdac",
        "width": 500,
        "height": 450,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-16T02:07:45Z",
        "tags": [],
        "bytes": 25810,
        "type": "upload",
        "etag": "cd3ab42a2d3d388954df0ee99c08df41",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557972465/avalanche2019/zmtthshekulmwwjhuyye.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557972465/avalanche2019/zmtthshekulmwwjhuyye.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Build your own shrine (drag & drop) and picture of shrine (after clicking \"picture this\" button). Still very slow, working on making the drag and drop more reliable and faster."
  },
  {
    "_id": "Wisy6rfmDEpD3ncxb",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-04T05:37:07.072Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cra5txytcjvqzlsvf85d",
        "version": 1549258630,
        "signature": "ead49134fc968c3492e313a1d9c4e29344043fbb",
        "width": 1374,
        "height": 2547,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-04T05:37:10Z",
        "tags": [],
        "bytes": 48473,
        "type": "upload",
        "etag": "99f66af441b1b52a453d469526d54925",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549258630/avalanche2019/cra5txytcjvqzlsvf85d.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549258630/avalanche2019/cra5txytcjvqzlsvf85d.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-04T17:39:51.598Z" }
      },
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-04T17:56:31.16Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-04T18:21:23.645Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T20:57:00.481Z" }
      }
    ],
    "title": "",
    "description": "Late night vase drawing meditation. Mouse down gives you a thicker stroke, if you want to try it. Code is very simple … enjoyed playing around too much. Everything would be better if I could draw though. :) Frame is Photoshop, blurriness is jpg.quality to 0%;",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nconst w = 400\nconst h = 800\nfunction setup() {\n  // window.cBack = color();\n  createCanvas(w, h)\n  background(250)\n}\n\nfunction draw() {\n  frameRate(15)\n  colorMode(HSB, 1)\n  stroke(0, random(1), random(1), random(1))\n  strokeWeight(random(1, 3))\n  if (mouseIsPressed === true) {\n    strokeWeight(5,8)\n  }\n  line(mouseX, mouseY, pmouseX + random(3), pmouseY + random(3))\n  noStroke()\n  if (frameCount % 3) {\n  } else {\n    fill(0, random(1), random(1), random(1))\n    ellipse(mouseX, mouseY, random(1, 10), random(1, 10))\n  }\n}"
  },
  {
    "_id": "WjrKZHLdkJWhjPQRR",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-01-27T18:51:59.473Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sm5xvfblugtpfwrfkhgq",
        "version": 1548615133,
        "signature": "2a3efc178b4895f7923b2afbb7289ddafb558d81",
        "width": 1052,
        "height": 1158,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-27T18:52:13Z",
        "tags": [],
        "bytes": 149518,
        "type": "upload",
        "etag": "20ef4d6f03179804719fc0362bebcda0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548615133/avalanche2019/sm5xvfblugtpfwrfkhgq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548615133/avalanche2019/sm5xvfblugtpfwrfkhgq.png"
      },
      {
        "public_id": "avalanche2019/oga7oiojoqtjzq5nprhc",
        "version": 1548615145,
        "signature": "0b9a1132867827feb89afb46bf02dd25427b8ff7",
        "width": 808,
        "height": 882,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-27T18:52:25Z",
        "tags": [],
        "bytes": 111810,
        "type": "upload",
        "etag": "3139612f8c54d449bef93642783e5b69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548615145/avalanche2019/oga7oiojoqtjzq5nprhc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548615145/avalanche2019/oga7oiojoqtjzq5nprhc.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:16:43.776Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Bird/Fish (air and water) pattern combination out of yin and yang, the 2 opposites.\nImage from: https://en.wikipedia.org/wiki/Yin_and_yang",
    "inspiration_name": "yin and yang",
    "inspiration_url": "https://en.wikipedia.org/wiki/Yin_and_yang"
  },
  {
    "_id": "Wm9EkfPTNHd3yJRGk",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T01:13:16.779Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kfspwfeyqdegifa2hya4",
        "version": 1552526649,
        "signature": "07e8361278d0699a22fba300c51b208f72bdb907",
        "width": 695,
        "height": 695,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T01:24:09Z",
        "tags": [],
        "bytes": 277563,
        "type": "upload",
        "etag": "a56f5738fdf4916d1cf56c0c1a2fea3b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552526649/avalanche2019/kfspwfeyqdegifa2hya4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552526649/avalanche2019/kfspwfeyqdegifa2hya4.png"
      },
      {
        "public_id": "avalanche2019/fefj2s3rdu7edyouit6t",
        "version": 1552526652,
        "signature": "c60a45e1d9a332fae0588d37d388499b1c0d0956",
        "width": 695,
        "height": 695,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T01:24:12Z",
        "tags": [],
        "bytes": 423237,
        "type": "upload",
        "etag": "e8b2d6666d6c876017a3946f5b7151e7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552526652/avalanche2019/fefj2s3rdu7edyouit6t.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552526652/avalanche2019/fefj2s3rdu7edyouit6t.png"
      },
      {
        "public_id": "avalanche2019/gpxugw8kgvb9pj33cswc",
        "version": 1552526656,
        "signature": "3148e6bd8d199855f7c83af8b11161074af7590c",
        "width": 695,
        "height": 695,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T01:24:16Z",
        "tags": [],
        "bytes": 691968,
        "type": "upload",
        "etag": "4fb1f96e8395cbc81f247a23309f6449",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552526656/avalanche2019/gpxugw8kgvb9pj33cswc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552526656/avalanche2019/gpxugw8kgvb9pj33cswc.png"
      }
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T06:27:34.321Z" }
      }
    ],
    "title": "",
    "description": "Song lyrics (I suggest opening the above video in another tab then, while the song is playing, use your mouse wheel to scroll wildly over the star images)...\n\nNobody gonna take my car\nI'm gonna race it to the ground\nNobody gonna beat my car\nIt's gonna break the speed of sound\nOooh it's a killing machine\nIt's got everything\nLike a driving power big fat tires\nAnd everything\nI love it and I need it\nI bleed it \nYeah it's a wild hurricane\nAlright hold tight\nI'm a highway star\nNobody gonna take my girl\nI'm gonna keep her to the end\nNobody gonna have my girl\nShe stays close on every bend\nOooh she's a killing machine\nShe's got everything\nLike a moving mouth body control\nAnd everything\nI love her I need her\nI seed her\nYeah she turns me on\nAlright hold on tight\nI'm a highway star\nNobody gonna take my head\nI got speed inside my brain\nNobody gonna steal my head\nNow that I'm on the road again\nOooh I'm in heaven again \nI've got everything\nLike a moving ground an open road\nAnd everything\nI love it and I need it\nI seed it\nEight cylinders all mine\nAlright hold on tight\nI'm a highway star\nNobody gonna take my car\nI'm gonna race it to the ground\nNobody gonna beat my car\nIt's gonna break the speed of sound\nOooh it's a killing machine\nIt's got everything\nLike a driving power big fat tires \nAnd everything\nI love it and I need it\nI bleed it\nYeah it's a mad hurricane\nAlright hold on tight\nI'm a highway star\nI'm a highway star\nI'm a highway star",
    "inspiration_name": "Deep Purple - Highway Star",
    "inspiration_url": "https://www.youtube.com/watch?v=Wr9ie2J2690",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n\tcreateCanvas(700, 700);\n\t// noFill();\n\tstroke(255);\n\tbackground(0);\n\tnoLoop();\n\n\n\tmyTurtle = new Turtle();\n}\n\n\nfunction draw() {\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(340, 340);\n\tmyTurtle.penDown();\n  stroke(80, 0, 200, 80);\n\n\tfor (var i = 0; i < 1000; i++) {\n\t\tmyTurtle.moveForward(0 + i * 1);\n\t\tmyTurtle.turnLeft(200);\n\t\tdrawLeaf();\n\n\t}\n}\n\n\nfunction drawLeaf() {\n\tmyTurtle.pushState();\n\n\n\tfor (i = 0; i < 15; i++) {\n\t\tmyTurtle.moveForward(2);\n\t\tmyTurtle.turnLeft(18);\n\t}\n\n\tmyTurtle.popState();\n}\n\n// Turtle\n// Basic turtle graphics implementation:\n// https://en.wikipedia.org/wiki/Turtle_graphics\n// For more info on Javascript OOP:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript\n//\n// The turtle's coordinate system uses pixels for distance and degrees for rotations\n// 0 degrees is straight right (east); positive degrees are clockwise\n\n// Turtle constructor\n// takes optional x, y starting coordinates (default is center of sketch)\nfunction Turtle(x, y) {\n  // assign default values to x and y if they were not passed\n  if (typeof x === \"undefined\") {\n    x = width * 0.5;\n  }\n  if (typeof y === \"undefined\") {\n    y = height * 0.5;\n  }\n  this.x = x;\n  this.y = y;\n  this.bearingRadians = 0;\n  this.isPenDown = true;\n  this._stateStack = [];\n}\n\n// moveTo instantly transports the turtle to the provided x, y location, drawing a line if pen is down\nTurtle.prototype.moveTo = function (newX, newY) {\n  if (this.isPenDown) {\n    line(this.x, this.y, newX, newY);\n  }\n  this.x = newX;\n  this.y = newY;\n};\n\n// moveForward moves the turtle along its current bearing, drawing a line if pen is down\nTurtle.prototype.moveForward = function (distance) {\n  var newX = this.x + cos(this.bearingRadians) * distance;\n  var newY = this.y + sin(this.bearingRadians) * distance;\n  this.moveTo(newX, newY);\n};\n\n// moveBackward moves the turtle backward from its current bearing, drawing a line if pen is down\nTurtle.prototype.moveBackward = function (distance) {\n  this.moveForward(-distance);\n};\n\n// turnTo changes the turtle's bearing to the provided angle in degrees\nTurtle.prototype.turnTo = function (angleDegrees) {\n  this.bearingRadians = radians(angleDegrees);\n};\n\n// turnRight rotates the turtle's bearing clockwise by the provided angle in degrees\nTurtle.prototype.turnRight = function (amountDegrees) {\n  this.bearingRadians += radians(amountDegrees);\n};\n\n// turnLeft rotates the turtle's bearing counter-clockwise by the provided angle in degrees\nTurtle.prototype.turnLeft = function (amountDegrees) {\n  this.bearingRadians -= radians(amountDegrees);\n};\n\n// penUp tells the turtle to move without drawing\nTurtle.prototype.penUp = function () {\n  this.isPenDown = false;\n};\n\n// penDown tells the turtle to draw a line when it moves\nTurtle.prototype.penDown = function () {\n  this.isPenDown = true;\n};\n\n// pushState records the turtle's current state (position, bearing, etc.) to a stack so that changes can be undone easily\nTurtle.prototype.pushState = function () {\n  this._stateStack.push({\n    x: this.x,\n    y: this.y,\n    bearingRadians: this.bearingRadians,\n    isPenDown: this.isPenDown\n  });\n};\n\n// popState restores the turtle's state to the top recorded state on the stack\nTurtle.prototype.popState = function () {\n  if (this._stateStack.length === 0) {\n    console.error(\n      \"Turtle: No states left on stack. Make sure your calls to .pushState and .popState are balanced.\"\n    );\n    return;\n  }\n  var state = this._stateStack.pop();\n  this.x = state.x;\n  this.y = state.y;\n  this.bearingRadians = state.bearingRadians;\n  this.isPenDown = state.isPenDown;\n};\n\n// image draws and image centered on the turtle's current location and alligned with the turtle's rotation (forward = up)\nTurtle.prototype.image = function (i, w, h) {\n  // w, h are optional parameters to this function and to p5's image\n  // p5's image function will draw the image at its \"normal\" size if w and h are undefined\n\n  push();\n  translate(this.x, this.y);\n  rotate(this.bearingRadians + PI * 0.5);\n  imageMode(CENTER);\n  image(i, 0, 0, w, h);\n  pop();\n};"
  },
  {
    "_id": "WpjfecYwMCuN4nNcH",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T08:22:38.357Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zjmlbphqkk3yknlci7or",
        "version": 1549614204,
        "signature": "b88eb85bf51d9067efff3addee351ab15187eac2",
        "width": 1200,
        "height": 1244,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-08T08:23:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 16310098,
        "type": "upload",
        "etag": "044efad79bb3d66e856e84d11cc8b56e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549614204/avalanche2019/zjmlbphqkk3yknlci7or.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549614204/avalanche2019/zjmlbphqkk3yknlci7or.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "4142837",
          "dar": "300:311"
        },
        "frame_rate": 15,
        "bit_rate": 4144615,
        "duration": 31.482,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/noyseew5lkkayf0lihf0",
        "version": 1549614600,
        "signature": "702c1c0d82762c89d5009804c9919e66dc80172d",
        "width": 1169,
        "height": 798,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T08:30:00Z",
        "tags": [],
        "bytes": 364286,
        "type": "upload",
        "etag": "e74333a318f9229e593595a04a47f5eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549614600/avalanche2019/noyseew5lkkayf0lihf0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549614600/avalanche2019/noyseew5lkkayf0lihf0.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T08:30:43.854Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T19:33:03.118Z" }
      }
    ],
    "title": "",
    "description": "Random Line Style Filter. \nMade with processing :)"
  },
  {
    "_id": "Wq67u3NLEoAsMDu2W",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T15:23:08.271Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ajeks8maaplfqq1orkqi",
        "version": 1557501877,
        "signature": "52350318404026baf424dc2ef1d074b913009a03",
        "width": 1436,
        "height": 1074,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T15:24:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 810007,
        "type": "upload",
        "etag": "bb54f960a41d4a5bd217ad53a96b6bf3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557501877/avalanche2019/ajeks8maaplfqq1orkqi.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557501877/avalanche2019/ajeks8maaplfqq1orkqi.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "496313",
          "dar": "718:537"
        },
        "frame_rate": 15,
        "bit_rate": 498465,
        "duration": 13,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ybv4led5zev6iw1owcof",
        "version": 1557501881,
        "signature": "873821098c507d8ab176c95cee05cb900fd2919e",
        "width": 1400,
        "height": 1038,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T15:24:41Z",
        "tags": [],
        "bytes": 62069,
        "type": "upload",
        "etag": "3cd15bf14411e7dcc13b3d6b8292fa08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557501881/avalanche2019/ybv4led5zev6iw1owcof.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557501881/avalanche2019/ybv4led5zev6iw1owcof.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T17:06:59.358Z" }
      }
    ],
    "title": "",
    "description": "Pong with a pig",
    "inspiration_name": "Lil pig",
    "inspiration_url": "https://opengameart.org/content/lil-pig"
  },
  {
    "_id": "WwRLPEowD6Q8rX3q7",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "created_at": { "$date": "2019-02-01T03:26:51.27Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qx7x8afudcx9xphxxqx7",
        "version": 1548991627,
        "signature": "3e79e3dd360f2adb5c66b7ce4cc2c26b31eb984f",
        "width": 1268,
        "height": 624,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T03:27:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 5830404,
        "type": "upload",
        "etag": "a76f7477780609fed023cf80c2016a4b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548991627/avalanche2019/qx7x8afudcx9xphxxqx7.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548991627/avalanche2019/qx7x8afudcx9xphxxqx7.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "2861003",
          "dar": "317:156"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2870352,
        "duration": 16.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:37:16.2Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "random tiles - processing"
  },
  {
    "_id": "X2qyqts4eZz8wikT3",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:20:31.914Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pdzph2mqejy74uhd6xwg",
        "version": 1550852447,
        "signature": "43f6a38f18ad64e3150bdcc71f7d0a02516439b2",
        "width": 1148,
        "height": 1152,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T16:20:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 6618997,
        "type": "upload",
        "etag": "aac3b27114c8776c7d722f7902521792",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550852447/avalanche2019/pdzph2mqejy74uhd6xwg.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550852447/avalanche2019/pdzph2mqejy74uhd6xwg.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "2752407",
          "dar": "287:288"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 2755188,
        "duration": 19.219,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "3D Supershapes and Spherical Geometry by Daniel Shiffman",
    "inspiration_url": "https://www.youtube.com/watch?v=m8WhMeW8jj0&t=6461s"
  },
  {
    "_id": "X5SACbqzCmPBNmPD2",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T13:50:25.547Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bmrgwus6sql71tgmu01y",
        "version": 1549893201,
        "signature": "f3c6bbe972aaaed65998cca00ebe875d614ad154",
        "width": 1100,
        "height": 422,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T13:53:21Z",
        "tags": [],
        "bytes": 106319,
        "type": "upload",
        "etag": "115dec424451c4e2cebfc839dbb225c8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549893201/avalanche2019/bmrgwus6sql71tgmu01y.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549893201/avalanche2019/bmrgwus6sql71tgmu01y.jpg"
      },
      {
        "public_id": "avalanche2019/bsxughbwimryy38wlpuk",
        "version": 1549894031,
        "signature": "3b61ced8250676c50b537922831c370e9e37ab69",
        "width": 2200,
        "height": 844,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-11T14:07:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 7738410,
        "type": "upload",
        "etag": "5c0c03d9b6c1ff036a14822c0cfd6a35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549894031/avalanche2019/bsxughbwimryy38wlpuk.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549894031/avalanche2019/bsxughbwimryy38wlpuk.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Baseline",
          "bit_rate": "3400603",
          "dar": "759519:291388"
        },
        "frame_rate": 15,
        "bit_rate": 3401498,
        "duration": 18.2,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T14:02:34.73Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T16:09:04.791Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-11T22:59:23.664Z" }
      }
    ],
    "title": "",
    "description": "Wobbly Font\n--\nMade with processing. Mouse position as parameters controller.",
    "inspiration_name": "Jerome Herr",
    "inspiration_url": "https://www.openprocessing.org/sketch/149337"
  },
  {
    "_id": "X5Yp7mRhgHz6YENGv",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T02:41:29.895Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hie3fulk8pyzehq5nsw4",
        "version": 1554345705,
        "signature": "e785e2bfc311e8830583c21b1a5870f7d55c4a9c",
        "width": 3300,
        "height": 2304,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-04T02:41:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 4425308,
        "type": "upload",
        "etag": "f8eb87ce2103c90b3e8f52e7ccc7bb17",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554345705/avalanche2019/hie3fulk8pyzehq5nsw4.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554345705/avalanche2019/hie3fulk8pyzehq5nsw4.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "253378",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "High",
          "bit_rate": "20108935",
          "dar": "275:192"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 19993857,
        "duration": 1.733333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-06T02:43:37.94Z" }
      }
    ],
    "title": "",
    "description": "tried to convert the javascript export function to paper script \nbuilding off my sketch from last we I tried like 4 or 5 different ways you could export animation frames from paperscipt. \nit mostly worked, look at my code if you are interested \nthis sketch is so heavy that I could still only get 25 frames bc I am downloading the frame automatically over internet and eventually my computer always disconnected or couldn't load as the sketch went on",
    "code": "var amebas = [];\n var amebaStartX;\n var amebaStartY;\n // var amebaSize = 60;\n var amebaSize = 80;\n var c = document.getElementById(\"myCanvas\");\n //for grid appraoch with text you can just keep a vairable that increases the randomness \n\n //draw amebas and fill array with amebas \n for (var i = 0; i < amebaSize; i++) {\n     var randomPoint = new Point(700, 700) * Point.random();\n     amebaLocation = new Point(randomPoint);\n     console.log(c.height);\n     console.log(c.height);\n     //random size\n     var randomSides = Math.floor(Math.random() * 7) + 4\n     var randomSize = Math.floor(Math.random() * 3) + 20;\n     var ameba = new Path.RegularPolygon(amebaLocation, randomSides, randomSize);\n     var randomRotation = Math.floor(Math.random() * 360);\n     ameba.rotate(randomRotation);\n     // var randomSegment = \n     ameba.removeSegment(0);\n     //delete one point \n     ameba.smooth('catmull-rom');\n     // console.log(ameba);\n     ameba.style = {\n         strokeColor: 'green',\n     }\n\n     //  ameba.fillColor = {\n     //      hue: 70,\n     //      saturation: (Math.random() * 20) + 50,\n     //      brightness: 50,\n     //  };\n     ameba.opacity = .5;\n     ameba.strokeColor = 'green';\n     amebas.push(ameba);\n }\n\n\n\n view.onFrame = function (event) {\n     //add a new vector to the balls \n     for (var i = 0; i < amebas.length; i++) {\n         var vector = new Point({\n             angle: 360 * Math.random(),\n             length: Math.random() * 5\n         });\n         amebas[i].position += vector;\n     }\n     createMergedAmebas();\n     exportScreen(\"AMEBAS\", event.count, 90)\n }\n\n function createMergedAmebas() {\n     for (var i = 0; i < amebas.length; i++) {\n         for (var j = 0; j < amebas.length; j++) {\n             //dint comapre an ameba with itself\n             if (i != j) {\n                 var intersections = amebas[i].getCrossings(amebas[j]);\n                 if (intersections.length > 0) {\n                     amebas[i].strokeColor = 'null';\n                     amebas[j].strokeColor = null;\n                     var mergedAmebia = amebas[i].unite(amebas[j])\n\n                     // mergedAmebia.blendMode = 'multiply';\n                     amebas[i].remove();\n                     // amebas[j].remove();\n                     amebas[i] = mergedAmebia;\n                     //  amebas[i].fillColor = 150;\n                     amebas[i].fillColor = (150, 150, 150);\n                     amebas[i].style = {\n                         strokeColor: new Color(0, 255, 0),\n\n                         shadowColor: new Color(0, 255, 0),\n                         shadowBlur: 10,\n                         // Offset the shadow by { x: 5, y: 5 }\n                         shadowOffset: new Point(5, 5)\n                     };\n                     amebas[i].opacity = .5;\n                 }\n             }\n         }\n     }\n }\n\n function exportScreen(name, frameNumber, maxFrame) {\n     if (maxFrame && frameNumber > maxFrame) {\n         return;\n     }\n\n     //  project.exportSVG();\n     downloadAsSVG(name + \" \" + frameNumber)\n }\n\n function downloadAsSVG(fileName) {\n     // use default name if not provided\n     fileName = fileName || \"output.svg\";\n\n     // create a data url of the file\n     //create a new project \n     var layer1 = project.activeLayer;\n     console.log(layer1.children);\n     var layer2 = new Layer;\n     layer2 = layer1;\n     layer2.rasterize();\n     console.log(layer2);\n     project.activeLayer.removeChildren();\n     project.activeLayer.addChildren(layer2);\n     console.log(project.activeLayer);\n\n     var svgData = project.exportSVG({\n         asString: true\n     });\n     var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n     // create a link to the data, and \"click\" it\n     var link = document.createElement(\"a\");\n     link.download = fileName;\n     link.href = url;\n     link.click();\n     //  project.activeLayer.removeChildren();\n     //  project.activeLayer.addChildren();\n     project.activeLayer.removeChildren();\n     project.activeLayer.addChildren(layer1);\n     console.log(project.activeLayer);\n }"
  },
  {
    "_id": "XCHnimiRB4SoWWo3M",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T04:53:18.741Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mepfixgyubsxxsjiic2e",
        "version": 1552625606,
        "signature": "25b5d44dc17d8bb0f6711eaa30986acbb530afe9",
        "width": 488,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T04:53:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 1520626,
        "type": "upload",
        "etag": "21dc94e74db4d64b4daa91a260da34dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552625606/avalanche2019/mepfixgyubsxxsjiic2e.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552625606/avalanche2019/mepfixgyubsxxsjiic2e.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "948214",
          "dar": "61:60"
        },
        "frame_rate": 60,
        "bit_rate": 955467,
        "duration": 12.732,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/aztos17d0h47wnrtuwyx",
        "version": 1552625612,
        "signature": "17d6574853c95a1492daec3e60878f7b3c157399",
        "width": 480,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T04:53:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 1741542,
        "type": "upload",
        "etag": "289dbe59098f89db7b10d1a1d512ca2d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552625612/avalanche2019/aztos17d0h47wnrtuwyx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552625612/avalanche2019/aztos17d0h47wnrtuwyx.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1153302",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 1160496,
        "duration": 12.0055,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:05:11.783Z" }
      },
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T16:08:50.253Z" }
      }
    ],
    "title": "",
    "description": "Snowflakes"
  },
  {
    "_id": "XHj46qqoTi3FN9iq4",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:37:48.988Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/px6iapvlm5cufyuagivw",
        "version": 1552077481,
        "signature": "d9b6c213b1174c7e683551bed46cd9a0012b5b7b",
        "width": 900,
        "height": 900,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-08T20:38:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 205439,
        "type": "upload",
        "etag": "51375ca140275dda6fd24b946fd977ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552077481/avalanche2019/px6iapvlm5cufyuagivw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552077481/avalanche2019/px6iapvlm5cufyuagivw.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "253375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "216492",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 503115,
        "duration": 3.266667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-10T02:46:29.406Z" }
      }
    ],
    "title": "",
    "description": "Fishes. (It is not moving, I will try to fix it.)"
  },
  {
    "_id": "XW9t95ZdeE2NYgreq",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T20:12:03.039Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u2ildduwjmk8v5kdrfsx",
        "version": 1549051938,
        "signature": "3d0bac0a0f0c32d15d24bc5b387ea498664ae308",
        "width": 3424,
        "height": 1343,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T20:12:18Z",
        "tags": [],
        "bytes": 853929,
        "type": "upload",
        "etag": "387b5502e2e425d59776429f91d4cabb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549051938/avalanche2019/u2ildduwjmk8v5kdrfsx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549051938/avalanche2019/u2ildduwjmk8v5kdrfsx.png"
      },
      {
        "public_id": "avalanche2019/wxep58ltovncgxwe6jtf",
        "version": 1549051941,
        "signature": "950a504946c3fd8b8596f3ec86209b4833ade42a",
        "width": 2827,
        "height": 1411,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T20:12:21Z",
        "tags": [],
        "bytes": 429845,
        "type": "upload",
        "etag": "7d7a7749cdf2d30d41c63074f7f0bb02",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549051941/avalanche2019/wxep58ltovncgxwe6jtf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549051941/avalanche2019/wxep58ltovncgxwe6jtf.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:56:17.079Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:58:09.61Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:21.319Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-02-01T20:59:33.489Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T20:59:36.143Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:36.865Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T20:59:38.752Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:02:15.432Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:55.016Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:26.684Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:14.687Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:04:52.926Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:05:01.557Z" }
      }
    ],
    "title": "",
    "description": "Take care of your small intestines\n---\nThis is a meaty tile. Wish everyone have a smooth bowel movement :)",
    "inspiration_url": "https://www.istockphoto.com/hk/vector/%E8%85%B8%E5%AD%90%E4%BA%BA%E9%AB%94%E5%85%A7%E9%83%A8%E5%99%A8%E5%AE%98%E5%8D%A1%E9%80%9A%E4%BA%BA%E7%89%A9-gm825683450-133948393"
  },
  {
    "_id": "XZRMHjgRMH8Sdv9x2",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T05:14:41.77Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/errbt9pfahzoegh4sdui",
        "version": 1551763009,
        "signature": "94c2cd9ff12c711e090e1181715969fc522eed43",
        "width": 1006,
        "height": 1002,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-05T05:16:49Z",
        "tags": [],
        "bytes": 447219,
        "type": "upload",
        "etag": "04b382a3a93de41d65a20bd7cd035a64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551763009/avalanche2019/errbt9pfahzoegh4sdui.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551763009/avalanche2019/errbt9pfahzoegh4sdui.jpg"
      },
      {
        "public_id": "avalanche2019/gnxip6p4kao95docfrom",
        "version": 1551763085,
        "signature": "e78eb9eb86978a4b0a941d7cfcb6d3c6cb8a809a",
        "width": 1004,
        "height": 1002,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-05T05:18:05Z",
        "tags": [],
        "bytes": 746521,
        "type": "upload",
        "etag": "970eff081dbdd0fa22a33c9431a68d29",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551763085/avalanche2019/gnxip6p4kao95docfrom.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551763085/avalanche2019/gnxip6p4kao95docfrom.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T14:12:27.514Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T18:02:34.63Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T21:51:40.07Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T00:59:55.318Z" }
      }
    ],
    "title": "",
    "description": "Experimenting with sin() & cos() again. Try the sliders! It looks like fish magically appears when you drag the second one to the left :)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nfunction setup() {\n  createCanvas(500, 500);\n  colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  createP(\"x\");\n  xSlider = createSlider(0, 100, 10, 0.001);\n  createP(\"y\");\n  ySlider = createSlider(0, 200, 10, 0.001);\n  // createP(\"pow\");\n  // powSlider = createSlider(0, 3, 1, 0.0001);\n}\n\nfunction draw() {\n  frameRate(10);\n  background(255);\n\n  img = createImage(500, 500);\n  img.loadPixels();\n\n  for (var y = 0; y < img.height; y++) {\n    for (var x = 0; x < img.width; x++) {\n      var oscValue = sin(\n        x * y * 0.1 -\n          x * xSlider.value() +\n          y * ySlider.value() * cos(x) +\n          y * sin(y) * ySlider.value()\n      );\n      // var oscValue2 = sin(x * y - sin(x * 0.1));\n      // var oscValue = cos(\n      //   (x + y * (x - y)) * sin(y * (x - y)) * xSlider.value() -\n      //     x * (x + y * (x - y)) * cos(y * (x - y)) * ySlider.value()\n      // );\n      var c = color(0, 0, oscValue);\n      img.set(x, y, c);\n    }\n  }\n\n  img.updatePixels();\n\n  noSmooth();\n  image(img, 0, 0, width, height);\n  // noLoop();\n}"
  },
  {
    "_id": "XZoGrQff56kMB495N",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T03:04:10.387Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n6pucvaoqfwtot8trbdp",
        "version": 1549508673,
        "signature": "2a6004695f5e2bee741c549787e244dfc5669b7b",
        "width": 1594,
        "height": 196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T03:04:33Z",
        "tags": [],
        "bytes": 28286,
        "type": "upload",
        "etag": "ca3091a781f417ff34440ddbc6b4e2ad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549508673/avalanche2019/n6pucvaoqfwtot8trbdp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549508673/avalanche2019/n6pucvaoqfwtot8trbdp.png"
      },
      {
        "public_id": "avalanche2019/ial1tj0vuazp78etzasr",
        "version": 1549556372,
        "signature": "d7db17db3fdd475027e5a06dc106bf8ed6b283d8",
        "width": 1481,
        "height": 196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T16:19:32Z",
        "tags": [],
        "bytes": 71788,
        "type": "upload",
        "etag": "1e91da6dcde2f5aec03a7979620c81ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549556372/avalanche2019/ial1tj0vuazp78etzasr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549556372/avalanche2019/ial1tj0vuazp78etzasr.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-07T04:13:58.417Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-02-07T17:32:13.542Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T18:23:22.1Z" }
      }
    ],
    "title": "",
    "description": "Random Sarah Sanders - changes 'gods' on click",
    "code": "var nameArray = ['\"God', '\"Allah', '\"Buddha','\"Kanye', '\"Spongebob', '\"V. Putin', '\"Lumpy P.', '\"Julius Irving', '\"Mr. Stinkbug', '\"Mr. F. Johnson'];\nvar sentenceArray = ['Wanted Donald Trump to Become President']\n\nfunction setup() {\n  createCanvas(800, 100);\n  textSize(24);\n  frameRate(1);\n}\n\nfunction draw(){\n  background(0);\n\ttextFont('Rockwell');\n\tfill(255);\n\t\n  \n  var randomName = random(nameArray);\n  var randomSentence = random(sentenceArray);\n  var nameSentenceMessage = randomName + ' ' + randomSentence + '.\"'\n  text(nameSentenceMessage, 5, 55);\n}"
  },
  {
    "_id": "XcFpiWNCboQbBtN24",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T16:05:07.033Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r1wxaujmsia0clvd4as1",
        "version": 1549641920,
        "signature": "1cd2a0636f84f15241933cc8bfedfd388667d20c",
        "width": 944,
        "height": 633,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T16:05:20Z",
        "tags": [],
        "bytes": 135769,
        "type": "upload",
        "etag": "ee0d9e5036cc1118339c1be7f523bf26",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549641920/avalanche2019/r1wxaujmsia0clvd4as1.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549641920/avalanche2019/r1wxaujmsia0clvd4as1.jpg"
      },
      {
        "public_id": "avalanche2019/aix8slyxqhzhudzw1kub",
        "version": 1549641938,
        "signature": "d333260e5d4ff01c8eee010ab3dd378791513564",
        "width": 1854,
        "height": 1198,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-08T16:05:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 6033134,
        "type": "upload",
        "etag": "182dc8d83aa7a97e0233899252f1a348",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549641938/avalanche2019/aix8slyxqhzhudzw1kub.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549641938/avalanche2019/aix8slyxqhzhudzw1kub.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "7424073",
          "dar": "927:599"
        },
        "frame_rate": 15,
        "bit_rate": 7426729,
        "duration": 6.498833,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T07:09:40.12Z" }
      }
    ],
    "title": "",
    "description": "Big Bang!",
    "inspiration_name": "Superbien",
    "inspiration_url": "https://app.muz.li/go?link=https%3A%2F%2Fthefwa.com%2Fcases%2Fsuperbien-p2&source=the_fwa&post=1da937b2376a287bdc377271439155d1",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\nvar lines = [];\n\nfunction setup() {\n  createCanvas(960, 960);\n  var angleStep = 0.01;\n  for (var theta = 0; theta < 2 * PI; theta += angleStep) {\n    lines.push(new Line(theta, 100, 0));\n    lines.push(new Line(theta, 150, 1234));\n    lines.push(new Line(theta, 200, 2345));\n    lines.push(new Line(theta, 250, 3456));\n    lines.push(new Line(theta, 300, 5678));\n  }\n\n}\n\nfunction draw() {\n  background(0);\n\n  for (let l of lines)\n    l.show();\n\n  noStroke();\n  fill(0);\n  ellipse(width / 2, height / 2, 70, 70);\n\n}\n\nclass Line {\n  constructor(angle, length, noiseOffset) {\n    this.angle = angle;\n    this.noiseScale = 3;\n    this.length = length * 0.8 + noise(this.angle * this.noiseScale + noiseOffset) * length * 1.2;\n    this.randomInnerAnlge = this.angle + random(-0.2, 0.2);\n\n    this.beginPos = createVector(cos(this.randomInnerAnlge) * this.length * 0.2, sin(this.randomInnerAnlge) * this.length * 0.2);\n    this.endPos = createVector(cos(this.angle) * this.length, sin(this.randomInnerAnlge) * this.length);\n    this.dir = p5.Vector.sub(this.endPos, this.beginPos);\n\n    this.curPos = this.beginPos.copy();\n    //this.currentLength = 0;\n    if (random(0, 1) < 0.4)\n      this.alpha = random(15, 30);\n    else\n      this.alpha = map(length, 100, 300, 180, 20);\n\n    this.dir.setMag(map(this.alpha, 15, 180, 7, 4) + random(-2, 2));\n\n\n  }\n\n  show() {\n    // if (this.currentLength < this.length)\n    //   this.currentLength += 0.1;\n    push();\n    translate(width / 2, height / 2);\n    stroke(this.alpha);\n    strokeWeight(1);\n    //line(this.beginPos.x, this.beginPos.y, this.endPos.x, this.endPos.y);\n\n    if (p5.Vector.sub(this.endPos, this.curPos).magSq() > 5)\n      this.curPos = p5.Vector.add(this.curPos, this.dir);\n\n    line(this.beginPos.x, this.beginPos.y, this.curPos.x, this.curPos.y);\n\n\n\n    pop();\n\n  }\n\n\n}"
  },
  {
    "_id": "Xe5Lxao58Bou7mh6N",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T20:52:38.71Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ec1uu9xofxskxmszoj0r",
        "version": 1550263977,
        "signature": "6350e02aac32b3490aec9cf249bba9cef7f64310",
        "width": 1604,
        "height": 1108,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-15T20:52:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 10371645,
        "type": "upload",
        "etag": "13a5b8658c07eecef1eefb4ce8ddd99e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550263977/avalanche2019/ec1uu9xofxskxmszoj0r.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550263977/avalanche2019/ec1uu9xofxskxmszoj0r.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "3117410",
          "dar": "401:277"
        },
        "frame_rate": 15,
        "bit_rate": 3119291,
        "duration": 26.6,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Was trying to control with gesture using machine learning. But latest xcode are not working properly with oF  so just the visuals"
  },
  {
    "_id": "XhoEGenu695i7gAnC",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T03:41:43.739Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fp6dzlkz3fdwwfdewxq0",
        "version": 1554486105,
        "signature": "c9ab57961b9046c55f957391d55472c39b504dbd",
        "width": 1600,
        "height": 1600,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T17:41:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 11904386,
        "type": "upload",
        "etag": "89610290d01c1f303d739dbc50af7e00",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554486105/avalanche2019/fp6dzlkz3fdwwfdewxq0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554486105/avalanche2019/fp6dzlkz3fdwwfdewxq0.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "253376",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "30998331",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 31745029,
        "duration": 3,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/kpgaidywg57v1nwkzihc",
        "version": 1554486325,
        "signature": "0c074d127e3ce596b912e1eb7d428379f4a58c5f",
        "width": 800,
        "height": 800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T17:45:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 3436078,
        "type": "upload",
        "etag": "06e20f23e0406c86d956860ee924507d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554486325/avalanche2019/kpgaidywg57v1nwkzihc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554486325/avalanche2019/kpgaidywg57v1nwkzihc.mov",
        "audio": {
          "codec": "pcm_s16be",
          "bit_rate": "1411200",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "7659133",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 9162874,
        "duration": 3,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-06T02:38:14.168Z" }
      }
    ],
    "title": "",
    "description": "**compform bumper**  \n_Update: higher quality_  \nBased on Anna’s code to make rings",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar EXPORT = false;\n\nconst canvas = {\n  w: 800,\n  h: 800\n};\nfunction setup() {\n  createCanvas(canvas.w, canvas.h);\n  pixelDensity(1);\n  // line and canvas aesthetics\n  // stroke(255, 60);\n  background(40);\n  noFill();\n  strokeWeight(0.05);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  window.s = sin(frameCount / 90 * 180) * 100;\n  var s2 = sin(frameCount / 90 * 360) * 100;\n\n  background(40);\n  translate(width / 2, height / 2);\n  rotate(frameCount);\n  translate(-width / 2, -height / 2);\n  stroke(0, 255, 255, 80);\n  makeShape(600, width/2+s2*2, height/2+s2*2);\n  stroke(255, 0, 0, 80);\n  makeShape(600, width/2+s2*2.2, height/2+s2*2.2);\n\n\n  if (EXPORT) {\n      saveFrame(\"EXPORT\", frameCount, \"jpg\", 90);\n  }\n  if (frameCount > 90) {\n      noLoop();\n  }\n\n}\n\nfunction makeRing(radius, xPar, yPar) {\n  // Uses https://www.youtube.com/watch?v=76fiD5DvzeQ, adds noise\n\n  beginShape();\n  for (let a = 0; a < 360; a += 1) {\n    let x = radius * sin(a) + xPar;\n    let y = radius * cos(a) + yPar;\n    let n = noise(\n      x * 0.0001 * 90-frameCount * 0.0001,\n      y * 0.0001 * 90-frameCount * 0.0001\n    );\n    vertex(x + radius * 0.2 * n*s*0.03, y + radius * 0.2 * n*s*0.03);\n  }\n  endShape(CLOSE);\n}\n\nfunction makeShape(numRings, x, y) {\n  for (let i = 1; i < numRings; i += 1) {\n    makeRing(i, x, y);\n  }\n}\n\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n      return;\n  }\n\n  if (!extension) {\n      extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "XjnAQin7k7BsemXcu",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:58:22.699Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nbdkrz6pwwcmp8ea5ydr",
        "version": 1553883129,
        "signature": "1c72e6e8490056f187a9e2d8e2e37cb19441ef4b",
        "width": 3024,
        "height": 3568,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:12:09Z",
        "tags": [],
        "bytes": 1497993,
        "type": "upload",
        "etag": "81e86192b60a0bad4fc193e402a93b56",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553883129/avalanche2019/nbdkrz6pwwcmp8ea5ydr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553883129/avalanche2019/nbdkrz6pwwcmp8ea5ydr.jpg"
      },
      {
        "public_id": "avalanche2019/mbei7pbyrw2aem3ykorx",
        "version": 1553883168,
        "signature": "5d1b7ff3f589d41bbfb74882b13fd5eef081b9c1",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:12:48Z",
        "tags": [],
        "bytes": 2072014,
        "type": "upload",
        "etag": "4d82e9e3c68bd90cae12371b911fbdb4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553883168/avalanche2019/mbei7pbyrw2aem3ykorx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553883168/avalanche2019/mbei7pbyrw2aem3ykorx.jpg"
      },
      {
        "public_id": "avalanche2019/yflzqeacwt5frcdusanz",
        "version": 1553883173,
        "signature": "762edf96773e8747b3a2651b333fd99e24a6b501",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:12:53Z",
        "tags": [],
        "bytes": 2193735,
        "type": "upload",
        "etag": "4e5e64b812a3b226a4bc464cd47ca5a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553883173/avalanche2019/yflzqeacwt5frcdusanz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553883173/avalanche2019/yflzqeacwt5frcdusanz.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:29:49.845Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:40:52.733Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2022-11-18T17:31:30.929Z" }
      }
    ],
    "title": "",
    "description": "Laser sketches"
  },
  {
    "_id": "XktLEKT5HK75iEuyK",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-05-16T02:39:12.309Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qzdenkzpmt5knolp9wn8",
        "version": 1557974358,
        "signature": "dad02e43d1183529088d9eba572d8fda65aba6d2",
        "width": 640,
        "height": 348,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-16T02:39:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 2756192,
        "type": "upload",
        "etag": "ea237027da2cd9ac06394df252df72bb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557974358/avalanche2019/qzdenkzpmt5knolp9wn8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557974358/avalanche2019/qzdenkzpmt5knolp9wn8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1768649",
          "dar": "160:87"
        },
        "frame_rate": 60,
        "bit_rate": 1775801,
        "duration": 12.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Working on making the rigs on the butterfly better and testing out for animation."
  },
  {
    "_id": "Xm8JeYbWYAQMMd6Mj",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "created_at": { "$date": "2019-02-17T15:02:58.982Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ctzviug95havqrqzauzv",
        "version": 1550415785,
        "signature": "734a3a1318539f7e2f88055afd4eaec0de0e5724",
        "width": 744,
        "height": 746,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-17T15:03:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 3310671,
        "type": "upload",
        "etag": "f4eff39dc64031f1f3b340eec289c56c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550415785/avalanche2019/ctzviug95havqrqzauzv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550415785/avalanche2019/ctzviug95havqrqzauzv.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7619673",
          "dar": "372:373"
        },
        "frame_rate": 60,
        "bit_rate": 7828188,
        "duration": 3.383333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Parameters",
    "title": "",
    "description": "I've been wanting to play with images. A hat tip to Janice for this code that I modified to frame Jimi. I'm not sure why, though, his image duplicates vertically.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nvar t;\nvar color_picker;\nvar preColor;\nvar img;\n\nfunction setup() {\n  createCanvas(750,750);\n  img = createImg('http://bothsides.jimihendrix.com/wp-content/uploads/2017/12/COVER_BothSidesOfTheSky.jpg');\n\n  background(128, 128, 0);\n  strokeWeight(2);\n  stroke(255, 0, 255);\n  noFill();\n  t = 1;\n  //noLoop()\n    \n  //color of quad\n  createP('Color');\n  color_picker = createInput(\"#FF00FF\", \"color\");\n}\n\nfunction draw() {  \n   image(img, 0,0,750,750); \n  translate(width/2, height/2);\n  \n  stroke(color_picker.value());\n  \n  for (var i=0; i < 200; i++) {\n   \n    rotate(i / 5.0);\n \n  var x1 = width * noise(t + 200);\n  var x2 = width * noise(t + 70);\n  var x3 = width * noise(t + 60);\n  var x4 = width * noise(t + 50);\n  var y1 = height * noise(t + 40);\n  var y2 = height * noise(t + 30);\n  var y3 = height * noise(t + 20);\n  var y4 = height * noise(t + 10);\n\n  quad(x1, y1, x2, y2, x3, y3, x4, y4);\n\n  t += 1;\n\n  if (frameCount % 800 == 0) {\n  background(128, 128, 0);  \n \n}\n}\n}"
  },
  {
    "_id": "XodLHnnaBygvDnfmT",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-23T13:53:43.846Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-04-23T20:28:09.364Z" }
      }
    ],
    "title": "",
    "description": "Random notes in major c produce particle systems.",
    "code": "//require http://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nconst synth = new Tone.Synth({\n  oscillator: {\n    type: \"sine\"\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.2,\n    sustain: 0.5,\n    release: 1\n  }\n});\n\nTone.Transport.bpm.value = 200;\n\nsynth.toMaster();\n\nconst cmajor = [\"C5\", \"D5\", \"E5\", \"F5\", \"G5\", \"A5\", \"B5\"];\n\nconst notes = cmajor;\n\nlet degree = 0;\n\nlet circles;\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  colorMode(HSB, 100);\n  circles = [];\n\n  // circles.run();\n\n  // for (let i = 0; i < circles.length; i++) {\n  //   circles[i] = new Circle();\n  // }\n}\n\nfunction draw() {\n  background(0);\n\n  for (i = 0; i < circles.length; i++) {\n    circles[i].run();\n    circles[i].addCircle();\n  }\n\n  // for (let i = 0; i < circles.length; i++) {\n  //   circles[i].run();\n  // }\n}\n\nfunction mousePressed() {\n  const melody = generateNote();\n  play(melody);\n\n  this.c = new CircleSystem(createVector(mouseX, mouseY));\n  circles.push(c);\n\n  // this.i = new Circle(mouseX, mouseY);\n  // circles.push(i);\n\n  // for (let i = 0; i < circles.length; i++) {\n  // circles[i] = new Circle(mouseX, mouseY);\n  // // circles[i].update();\n  // // circles[i].drawCircle();\n  // circles[i].push(i);\n  // // }\n}\n\nfunction generateNote() {\n  degree = randomInt(0, 9);\n  const m = [];\n\n  const change = sample([-1, -2, 2, 1, -5, 2, 3, 5, -3]);\n  degree = constrain(degree + change, 0, 6);\n  const note = notes[degree];\n  let length = Tone.Time(\"4n\");\n  if (Math.random() < 0.5) {\n    length = Tone.Time(\"8n\");\n  }\n\n  m.push([note, length]);\n  return m;\n}\nfunction play(melody) {\n  let t = Tone.now();\n\n  for (const note of melody) {\n    // if (note[0] !== \"rest\") {\n    synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    //   // }\n    t += Tone.Time(note[1]);\n  }\n}\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\n// function constrain(v, min, max) {\n//   return Math.min(max, Math.max(min, v));\n// }\n\nlet Circle = function(position) {\n  this.position = position.copy();\n  this.vel = createVector(random(-1, 1), random(-1, 1));\n  this.acceleration = createVector(random(-0.05, 0.05), random(-0.05, 0.05));\n  this.radius = random(5, 20);\n};\n\nCircle.prototype.run = function() {\n  this.update();\n  this.display();\n};\n\nCircle.prototype.update = function() {\n  this.vel.add(this.acceleration);\n  this.position.add(this.vel);\n};\n\nCircle.prototype.display = function() {\n  fill(random(10, 100), 80, 90);\n  noStroke();\n  ellipse(this.position.x, this.position.y, this.radius, this.radius);\n};\n\nCircle.prototype.isDead = function() {\n  if (this.position.x > width) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nlet CircleSystem = function(position) {\n  this.origin = position.copy();\n  this.circles = [];\n};\n\nCircleSystem.prototype.addCircle = function() {\n  c = new Circle(this.origin);\n  this.circles.push(c);\n};\n\nCircleSystem.prototype.run = function() {\n  for (let i = this.circles.length - 1; i >= 0; i--) {\n    let p = this.circles[i];\n    p.run();\n    if (p.isDead()) {\n      this.circles.splice(i, 1);\n    }\n  }\n};"
  },
  {
    "_id": "Xpp3477QAZ9ozsBCa",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T15:57:07.862Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/peqkufd5v5fxlucgsrck",
        "version": 1555689498,
        "signature": "4e16d9ca9d98b74d81cc3c89be9329ee47d0d776",
        "width": 1272,
        "height": 954,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T15:58:18Z",
        "tags": [],
        "bytes": 461334,
        "type": "upload",
        "etag": "e421440293c0aa9e1b8240dc2922e9dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555689498/avalanche2019/peqkufd5v5fxlucgsrck.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555689498/avalanche2019/peqkufd5v5fxlucgsrck.png"
      },
      {
        "public_id": "avalanche2019/thsws0swyuahebfbwu4r",
        "version": 1555689503,
        "signature": "e26eea95da291dbd0f83aef2288ceb64083396a3",
        "width": 1264,
        "height": 940,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T15:58:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 9050990,
        "type": "upload",
        "etag": "bbfd150093200ad98cd4b254199c6335",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555689503/avalanche2019/thsws0swyuahebfbwu4r.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555689503/avalanche2019/thsws0swyuahebfbwu4r.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "195920",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "730669",
          "dar": "316:235"
        },
        "is_audio": false,
        "frame_rate": 20,
        "bit_rate": 930561,
        "duration": 77.810998,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Expanded on to Alonso's moving circles sketch. added static effects and opacity to the circles. Inspired by Manuel Kretzer's Sound Mapping in processing."
  },
  {
    "_id": "XpsPqh5dpEez5aKrJ",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T01:59:21.192Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ds0ou7axna7k7xabr6e5",
        "version": 1552010427,
        "signature": "6d925c93a8dd7677ec39b0d792e8ad4b0e3aaf46",
        "width": 600,
        "height": 450,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-08T02:00:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 567151,
        "type": "upload",
        "etag": "2d8331f376b420183b8b0c86ce1103d0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552010427/avalanche2019/ds0ou7axna7k7xabr6e5.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552010427/avalanche2019/ds0ou7axna7k7xabr6e5.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "High",
          "bit_rate": "434715",
          "dar": "21:16"
        },
        "frame_rate": 10,
        "bit_rate": 436270,
        "duration": 10.4,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "made with Processing / webcam video captrue"
  },
  {
    "_id": "Xs65xv6C47jhyrEGP",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:08:53.777Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kxq81ponrun0xd3wfao0",
        "version": 1552061340,
        "signature": "9c1f6ad05145a9060b13b2a8b7ed380e3a956bd8",
        "width": 958,
        "height": 966,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:09:00Z",
        "tags": [],
        "bytes": 79124,
        "type": "upload",
        "etag": "a458c80f0a6fc342131a23da5f8040ad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552061340/avalanche2019/kxq81ponrun0xd3wfao0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552061340/avalanche2019/kxq81ponrun0xd3wfao0.png"
      },
      {
        "public_id": "avalanche2019/h4wqeixzeabvu7fqvy8m",
        "version": 1552061344,
        "signature": "46e9f2b9aef873c36c946939fc5371633b52e4c9",
        "width": 958,
        "height": 966,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:09:04Z",
        "tags": [],
        "bytes": 94662,
        "type": "upload",
        "etag": "17860d1eaf8938778071e8be541ad52f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552061344/avalanche2019/h4wqeixzeabvu7fqvy8m.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552061344/avalanche2019/h4wqeixzeabvu7fqvy8m.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T16:29:27.247Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T17:15:59.449Z" }
      }
    ],
    "title": "",
    "description": "pixel portrait of sven and justin"
  },
  {
    "_id": "XvHAvgAJ7ok8jJNSL",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T17:39:16.524Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pmkjkcoyohl9mmtlpyjr",
        "version": 1557510024,
        "signature": "f7bb58120408c90ab70fc441e31cc03d6cca1fb3",
        "width": 1628,
        "height": 1866,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-10T17:40:24Z",
        "tags": [],
        "bytes": 212196,
        "type": "upload",
        "etag": "8967f316b9725dc4f363b7cbea497cb0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557510024/avalanche2019/pmkjkcoyohl9mmtlpyjr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557510024/avalanche2019/pmkjkcoyohl9mmtlpyjr.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T23:04:33.008Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-05-10T23:51:21.861Z" }
      }
    ],
    "title": "",
    "description": "Coop-challenge: two player breakout",
    "inspiration_name": "P5.play breakout example",
    "inspiration_url": "http://molleindustria.github.io/p5.play/examples/index.html?fileName=breakout.js",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require /microgames/sketches/p5.play.js\n\n// Credit: P5 play example\n// http://molleindustria.github.io/p5.play/examples/index.html?fileName=breakout.js#\n//breakout close (core mechanics)\n//mouse to control the paddle, click to start\n\nvar paddle1, paddle2, ball, wallTop, wallBottom, wallLeft, wallRight;\nvar bricks;\nvar MAX_SPEED = 6;\nvar WALL_THICKNESS = 30;\nvar BRICK_W = 15;\nvar BRICK_H = 15;\nvar BRICK_MARGIN = 4;\nvar ROWS = 12;\nvar COLUMNS = 12;\nvar clicked = false;\n\nfunction setup() {\n  createCanvas(500, 500);\n  angleMode(DEGREES)\n  paddle1 = createSprite(width/2, height-30, 100, 10);\n  paddle1.immovable = true;\n  paddle2 = createSprite(height-30, width/2, 10, 100);\n  paddle2.immovable = true;\n\n\n  wallTop = createSprite(width/2, -WALL_THICKNESS/2, width+WALL_THICKNESS*2, WALL_THICKNESS);\n  wallTop.immovable = true;\n\n  // wallBottom = createSprite(width/2, height+WALL_THICKNESS/2, width+WALL_THICKNESS*2, WALL_THICKNESS);\n  // wallBottom.immovable = true;\n\n  wallLeft = createSprite(-WALL_THICKNESS/2, height/2, WALL_THICKNESS, height);\n  wallLeft.immovable = true;\n\n  // wallRight = createSprite(width+WALL_THICKNESS/2, height/2, WALL_THICKNESS, height);\n  // wallRight.immovable = true;\n\n  bricks = new Group();\n\n  var offsetX = width/5-(COLUMNS-1)*(BRICK_MARGIN+BRICK_W)/4;\n  var offsetY = height/12;\n\n  for(var r = 0; r<ROWS; r++)\n    for(var c = 0; c<COLUMNS; c++) {\n      var brick = createSprite(offsetX+c*(BRICK_W+BRICK_MARGIN), offsetY+r*(BRICK_H+BRICK_MARGIN), BRICK_W, BRICK_H);\n      brick.shapeColor = color(255, 255, 255);\n      bricks.add(brick);\n      brick.immovable = true;\n    }\n\n  //the easiest way to avoid pesky multiple collision is to\n  //have the ball bigger than the bricks\n  ball = createSprite(width/2, height-200, 11, 11);\n  ball.maxSpeed = MAX_SPEED;\n  paddle2.shapeColor = paddle1.shapeColor = ball.shapeColor = color(255, 255, 255);\n  \n  canvasContainer = document.querySelector(\".js-lab-view\");\n  canvasContainer.style.display = \"flex\";\n  canvasContainer.style.alignItems = \"center\";\n  \n  canvasEl = document.querySelector(\"canvas\");\n  canvasEl.style.transform = \"rotate(45deg)\";\n  canvasEl.style.margin = \"auto\";\n  \n\n  \n}\n\nfunction draw() {\n    \n  background(0, 0, 80);\n  if (!clicked) {\n      textSize(16);\n      fill(255);\n      text('Player 1 – left: A, right: D', 50, 25);\n      push()\n      translate(25, 50)\n      rotate(-90)\n      textAlign(RIGHT)\n      text('Player 2 – left: J, right: L', 0, 0);\n      pop()\n      push()\n      translate(width/2+100, height/2+100)\n      rotate(-45)\n      textAlign(CENTER)\n      textStyle(BOLD);\n      text('Click to start', 0, 0);\n      pop()\n  }\n  \n  \n  if(keyDown('a')) {\n    if(paddle1.position.x>50) {\n      paddle1.position.x -= 10;\n    }\n  }\n  if(keyDown('d')) {\n    if (paddle1.position.x < width -50) {\n      paddle1.position.x += 10;\n    }\n  }\n  if(keyDown('l')) {\n    if(paddle2.position.y>50) {\n      paddle2.position.y -= 10;\n    }\n  }\n  if(keyDown('j')) {\n    if (paddle2.position.y < width -50) {\n      paddle2.position.y += 10;\n    }\n  }\n\n  ball.bounce(wallTop);\n  // ball.bounce(wallBottom);\n  ball.bounce(wallLeft);\n  // ball.bounce(wallRight);\n\n  if(ball.bounce(paddle1))\n  {\n    var swing = (ball.position.x-paddle1.position.x)/2;\n    ball.setSpeed(MAX_SPEED, ball.getDirection()+swing);\n  }\n\n  if(ball.bounce(paddle2))\n  {\n    var swing = (ball.position.y-paddle2.position.y)/2;\n    ball.setSpeed(MAX_SPEED, ball.getDirection()+swing);\n  }\n\n  ball.bounce(bricks, brickHit);\n\n  drawSprites();\n}\n\nfunction mousePressed() {\n  if(ball.velocity.x == 0 && ball.velocity.y == 0)\n    ball.setSpeed(MAX_SPEED, random(90-10, 90+10));\n    clicked = true;\n    ball.position.x = width/2;\n    ball.position.y = height-200;\n}\n\nfunction brickHit(ball, brick) {\n  brick.remove();\n}"
  },
  {
    "_id": "Y4nh9AsexbkqXJ4Pf",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T15:32:33.03Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qsc3sxbapieyuyvcgi6i",
        "version": 1557502365,
        "signature": "c63a8fb1588ba811e755496495fe7251e1ce83ad",
        "width": 2540,
        "height": 1364,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T15:32:45Z",
        "tags": [],
        "bytes": 581353,
        "type": "upload",
        "etag": "b266fbd39e46e1c857d7ca85586e4237",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557502365/avalanche2019/qsc3sxbapieyuyvcgi6i.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557502365/avalanche2019/qsc3sxbapieyuyvcgi6i.png"
      },
      {
        "public_id": "avalanche2019/aals8svvrieb1ioge2dz",
        "version": 1557502405,
        "signature": "5b7d091647d6af2492e62b40a0753ca5f3f0043f",
        "width": 2544,
        "height": 1372,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T15:33:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 1954344,
        "type": "upload",
        "etag": "dc796845c32f53d63581f3f4dbfaea5b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557502405/avalanche2019/aals8svvrieb1ioge2dz.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557502405/avalanche2019/aals8svvrieb1ioge2dz.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "286065",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "2407448",
          "dar": "636:343"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2703415,
        "duration": 5.783333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Duck Hunt first take"
  },
  {
    "_id": "Y4uvJbYdPzFuCx4JY",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T18:58:46.179Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/upgktghjwahjkyf3cyuo",
        "version": 1555613939,
        "signature": "289782c8dbcaefa87dd454787bd8cc6c8ee571ba",
        "width": 1466,
        "height": 1226,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T18:58:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 345088,
        "type": "upload",
        "etag": "cb4661814080cb0f9aa0fdc1d7737e89",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555613939/avalanche2019/upgktghjwahjkyf3cyuo.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555613939/avalanche2019/upgktghjwahjkyf3cyuo.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "127925",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "185837",
          "dar": "733:613"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 327757,
        "duration": 8.4,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T20:58:09.831Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:54:49.031Z" }
      }
    ],
    "title": "",
    "description": "Playing with Pd"
  },
  {
    "_id": "Y5QxzbstaNskx93Cv",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T17:11:48.622Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hamupwowtf8rqzyfkfqb",
        "version": 1552065139,
        "signature": "1f46fe0bc802e4b5e8a18c07b6504d2823ec6dc8",
        "width": 786,
        "height": 1194,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T17:12:19Z",
        "tags": [],
        "bytes": 284013,
        "type": "upload",
        "etag": "bdfda3df48e2d699b041231bca749a1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552065139/avalanche2019/hamupwowtf8rqzyfkfqb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552065139/avalanche2019/hamupwowtf8rqzyfkfqb.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T17:24:21.057Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T18:16:57.316Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T19:30:56.198Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T19:55:24.507Z" }
      }
    ],
    "title": "",
    "description": "Reflect & blend with twisted colors",
    "inspiration_name": "Mona Lisa",
    "inspiration_url": "https://en.wikipedia.org/wiki/File:Mona_Lisa.jpg",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nvar myImage;\n\nfunction preload() {\n  myImage = loadImage(\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Mona_Lisa.jpg/396px-Mona_Lisa.jpg\"\n  );\n}\n\nfunction setup() {\n  pixelDensity(1);\n  createCanvas(myImage.width, myImage.height);\n  colorMode(HSB, 1, 1, 1, 1);\n  // console.log(lightness(color(0, 1, 1)));\n  myImage.loadPixels();\n}\n\nfunction draw() {\n  background(0);\n  for (var y = 0; y < myImage.height; y++) {\n    for (var x = 0; x < myImage.width; x++) {\n      var c = getQuick(myImage, x, y);\n      // cRGB = c.slice(0, 3);\n      // cSum = cRGB.reduce((a, b) => a + b);\n      // cAvg = cSum / 3;\n      // c = [cAvg, cAvg, cAvg, c[3]];\n      cA = [c[2], c[1], c[0], c[3]];\n      cB = [c[2], c[1], c[0], c[3]];\n      condition = x % 2 == 0 && y % 2 == 0;\n      // xYMap = (myImage.height * x) / myImage.width;\n      if (condition) {\n        // offset = floor(random(3));\n        xPos = myImage.width * 2 - x;\n        yPos = y;\n        myImage.set(xPos, yPos, cA);\n      } else {\n        myImage.set(x, y, cB);\n      }\n    }\n  }\n  myImage.updatePixels();\n  image(myImage, 0, 0, width, height);\n\n  noSmooth();\n  noLoop();\n}\n\nfunction getQuick(img, x, y) {\n  var i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3]\n  ];\n}"
  },
  {
    "_id": "Y6rGLb9tTqu3mzyEo",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T01:07:47.654Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dirfjzogwzs9yugy1czh",
        "version": 1550758537,
        "signature": "0e0fd130b227a9799e92cb0f5e912b6ad7edbce5",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T14:15:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 13392137,
        "type": "upload",
        "etag": "2a3c7ad9569a4c2b554393090334b784",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550758537/avalanche2019/dirfjzogwzs9yugy1czh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550758537/avalanche2019/dirfjzogwzs9yugy1czh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "4033099",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 4081413,
        "duration": 26.25,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/w7t2cm4vllwqmqogdpi1",
        "version": 1550758572,
        "signature": "68fdb7b339ffb870e0374fb57ba9a5ac1859dda4",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T14:16:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 11672247,
        "type": "upload",
        "etag": "635f0eea058aa9a05d3bc5c3d594cf83",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550758572/avalanche2019/w7t2cm4vllwqmqogdpi1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550758572/avalanche2019/w7t2cm4vllwqmqogdpi1.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3201500",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 3253588,
        "duration": 28.7,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/zdohm3x3lzxwyoazttwe",
        "version": 1550758577,
        "signature": "6c9f2a8fa4f9152d616c2b01d540e2f6c1c23653",
        "width": 796,
        "height": 599,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T14:16:17Z",
        "tags": [],
        "bytes": 571386,
        "type": "upload",
        "etag": "6c8f4cf1ae189db548e39f5e1911f5d2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550758577/avalanche2019/zdohm3x3lzxwyoazttwe.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550758577/avalanche2019/zdohm3x3lzxwyoazttwe.png"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-02-21T02:02:30.731Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "funny",
        "created_at": { "$date": "2019-02-21T02:16:35.635Z" }
      }
    ],
    "title": "",
    "description": "I was curious about glitch art so I found some code on code.sololearn.com and played around with the variables to get a sense of how it worked. I tried using this with the camera but couldn't get them to play well together.",
    "code": "let windowW = 800;\nlet windowH = 600;\nlet isLoaded = false;\nlet glitch;\nlet imgSrc = 'https://cdn.vox-cdn.com/thumbor/JFcDUj36RRx02dE9r5AtpnumuQ8=/0x0:3000x1999/1200x800/filters:focal(1554x620:2034x1100)/cdn.vox-cdn.com/uploads/chorus_image/image/59677705/953916374.jpg.0.jpg';\n\nfunction setup() {\n        background(0);\n  \n        createCanvas(windowW, windowH);\n        loadImage(imgSrc, function (img) {\n                glitch = new Glitch(img);\n                isLoaded = true;\n        });\n}\n\nfunction draw() {\n        clear();\n        background(0);\n\n        if (isLoaded) {\n                glitch.show();\n        }\n\n        // fill(255, 255, 255);\n        // textSize(14);\n        // text('FPS: ' + floor(frameRate()), 20, 30);\n}\n\nclass Glitch {\n        constructor(img) {\n                this.channelLen = 4;\n                this.imgOrigin = img;\n                this.imgOrigin.loadPixels();\n                this.copyData = [];\n                this.flowLineImgs = [];\n                this.shiftLineImgs = [];\n                this.shiftRGBs = [];\n                this.scatImgs = [];\n                this.throughFlag = true;\n                this.copyData = new Uint8ClampedArray(this.imgOrigin.pixels);\n\n                // flow line\n                for (let i = 0; i < 1; i++) {\n                        let o = {\n                                pixels: null,\n                                t1: floor(random(800, 1000)),\n                                speed: floor(random(4, 240)),\n                                randX: floor(random(24, 80))\n                        };\n                        this.flowLineImgs.push(o);\n                }\n\n                // shift line\n                for (let i = 0; i < 6; i++) {\n                        let o = null;\n                        this.shiftLineImgs.push(o);\n                }\n\n                // shift RGB\n                for (let i = 0; i < 1; i++) {\n                        let o = null;\n                        this.shiftRGBs.push(o);\n                }\n\n                // scat imgs\n                for (let i = 0; i < 3; i++) {\n                        let scatImg = {\n                                img: null,\n                                x: 0,\n                                y: 0\n                        };\n                        this.scatImgs.push(scatImg);\n                }\n        }\n\n        replaceData(destImg, srcPixels) {\n                for (let y = 0; y < destImg.height; y++) {\n                        for (let x = 0; x < destImg.width; x++) {\n                                let r, g, b, a;\n                                let index;\n                                index = (y * destImg.width + x) * this.channelLen;\n                                r = index;\n                                g = index + 1;\n                                b = index + 2;\n                                a = index + 3;\n                                destImg.pixels[r] = srcPixels[r];\n                                destImg.pixels[g] = srcPixels[g];\n                                destImg.pixels[b] = srcPixels[b];\n                                destImg.pixels[a] = srcPixels[a];\n                        }\n                }\n                destImg.updatePixels();\n        }\n\n        flowLine(srcImg, obj) {\n\n                let destPixels, tempY;\n                destPixels = new Uint8ClampedArray(srcImg.pixels);\n                obj.t1 %= srcImg.height;\n                obj.t1 += obj.speed;\n                //tempY = floor(noise(obj.t1) * srcImg.height);\n                tempY = floor(obj.t1);\n                for (let y = 0; y < srcImg.height; y++) {\n                        if (tempY === y) {\n                                for (let x = 0; x < srcImg.width; x++) {\n                                        let r, g, b, a;\n                                        let index;\n                                        index = (y * srcImg.width + x) * this.channelLen;\n                                        r = index;\n                                        g = index + 1;\n                                        b = index + 2;\n                                        a = index + 3;\n                                        destPixels[r] = srcImg.pixels[r] + obj.randX;\n                                        destPixels[g] = srcImg.pixels[g] + obj.randX;\n                                        destPixels[b] = srcImg.pixels[b] + obj.randX;\n                                        destPixels[a] = srcImg.pixels[a];\n                                }\n                        }\n                }\n                return destPixels;\n        }\n\n        shiftLine(srcImg) {\n\n                let offsetX;\n                let rangeMin, rangeMax;\n                let destPixels;\n                let rangeH;\n\n                destPixels = new Uint8ClampedArray(srcImg.pixels);\n                rangeH = srcImg.height;\n                rangeMin = floor(random(0, rangeH));\n                rangeMax = rangeMin + floor(random(1, rangeH - rangeMin));\n                offsetX = this.channelLen * floor(random(-40, 40));\n\n                for (let y = 0; y < srcImg.height; y++) {\n                        if (y > rangeMin && y < rangeMax) {\n                                for (let x = 0; x < srcImg.width; x++) {\n                                        let r, g, b, a;\n                                        let r2, g2, b2, a2;\n                                        let index;\n\n                                        index = (y * srcImg.width + x) * this.channelLen;\n                                        r = index;\n                                        g = index + 1;\n                                        b = index + 2;\n                                        a = index + 3;\n                                        r2 = r + offsetX;\n                                        g2 = g + offsetX;\n                                        b2 = b + offsetX;\n                                        destPixels[r] = srcImg.pixels[r2];\n                                        destPixels[g] = srcImg.pixels[g2];\n                                        destPixels[b] = srcImg.pixels[b2];\n                                        destPixels[a] = srcImg.pixels[a];\n                                }\n                        }\n                }\n                return destPixels;\n        }\n\n        shiftRGB(srcImg) {\n\n                let randR, randG, randB;\n                let destPixels;\n                let range;\n\n                range = 16;\n                destPixels = new Uint8ClampedArray(srcImg.pixels);\n                randR = (floor(random(-range, range)) * srcImg.width + floor(random(-range, range))) * this.channelLen;\n                randG = (floor(random(-range, range)) * srcImg.width + floor(random(-range, range))) * this.channelLen;\n                randB = (floor(random(-range, range)) * srcImg.width + floor(random(-range, range))) * this.channelLen;\n\n                for (let y = 0; y < srcImg.height; y++) {\n                        for (let x = 0; x < srcImg.width; x++) {\n                                let r, g, b, a;\n                                let r2, g2, b2, a2;\n                                let index;\n\n                                index = (y * srcImg.width + x) * this.channelLen;\n                                r = index;\n                                g = index + 1;\n                                b = index + 2;\n                                a = index + 3;\n                                r2 = (r + randR) % srcImg.pixels.length;\n                                g2 = (g + randG) % srcImg.pixels.length;\n                                b2 = (b + randB) % srcImg.pixels.length;\n                                destPixels[r] = srcImg.pixels[r2];\n                                destPixels[g] = srcImg.pixels[g2];\n                                destPixels[b] = srcImg.pixels[b2];\n                                destPixels[a] = srcImg.pixels[a];\n                        }\n                }\n\n                return destPixels;\n        }\n\n        getRandomRectImg(srcImg) {\n                let startX;\n                let startY;\n                let rectW;\n                let rectH;\n                let destImg;\n                startX = floor(random(0, srcImg.width - 30));\n                startY = floor(random(0, srcImg.height - 50));\n                rectW = floor(random(30, srcImg.width - startX));\n                rectH = floor(random(1, 50));\n                destImg = srcImg.get(startX, startY, rectW, rectH);\n                destImg.loadPixels();\n                return destImg;\n        }\n\n        show() {\n\n                // restore the original state\n                this.replaceData(this.imgOrigin, this.copyData);\n\n                // sometimes pass without effect processing\n                let n = floor(random(100));\n                if (n > 75 && this.throughFlag) {\n                        this.throughFlag = false;\n                        setTimeout(() => {\n                                this.throughFlag = true;\n                        }, floor(random(40, 400)));\n                }\n                if (!this.throughFlag) {\n                        push();\n                        translate((width - this.imgOrigin.width) / 2, (height - this.imgOrigin.height) / 2);\n                        image(this.imgOrigin, 0, 0);\n                        pop();\n                        return;\n                }\n\n                // flow line\n                this.flowLineImgs.forEach((v, i, arr) => {\n                        arr[i].pixels = this.flowLine(this.imgOrigin, v);\n                        if (arr[i].pixels) {\n                                this.replaceData(this.imgOrigin, arr[i].pixels);\n                        }\n                });\n\n                // shift line\n                this.shiftLineImgs.forEach((v, i, arr) => {\n                        if (floor(random(100)) > 50) {\n                                arr[i] = this.shiftLine(this.imgOrigin);\n                                this.replaceData(this.imgOrigin, arr[i]);\n                        } else {\n                                if (arr[i]) {\n                                        this.replaceData(this.imgOrigin, arr[i]);\n                                }\n                        }\n                });\n\n                // shift rgb\n                this.shiftRGBs.forEach((v, i, arr) => {\n                        if (floor(random(100)) > 65) {\n                                arr[i] = this.shiftRGB(this.imgOrigin);\n                                this.replaceData(this.imgOrigin, arr[i]);\n                        }\n                });\n\n                push();\n                translate((width - this.imgOrigin.width) / 2, (height - this.imgOrigin.height) / 2);\n                image(this.imgOrigin, 0, 0);\n                pop();\n\n                // scat image\n                this.scatImgs.forEach(obj => {\n                        push();\n                        translate((width - this.imgOrigin.width) / 2, (height - this.imgOrigin.height) / 2);\n                        if (floor(random(100)) > 80) {\n                                obj.x = floor(random(-this.imgOrigin.width * 0.3, this.imgOrigin.width * 0.7));\n                                obj.y = floor(random(-this.imgOrigin.height * 0.1, this.imgOrigin.height));\n                                obj.img = this.getRandomRectImg(this.imgOrigin);\n                        }\n                        if (obj.img) {\n                                image(obj.img, obj.x, obj.y);\n                        }\n                        pop();\n                });\n        }\n\n}"
  },
  {
    "_id": "YA27sh7WMgR9vM5Ae",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-24T15:18:11.155Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xk6pg9zibrfta53ogp2f",
        "version": 1556119182,
        "signature": "27abdb6e665726daf707befd1d6142a0e9f40924",
        "width": 1462,
        "height": 1150,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-24T15:19:42Z",
        "tags": [],
        "bytes": 185841,
        "type": "upload",
        "etag": "d4a7b6113873f298df744683a906f9c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556119182/avalanche2019/xk6pg9zibrfta53ogp2f.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556119182/avalanche2019/xk6pg9zibrfta53ogp2f.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-25T00:29:34.209Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-26T18:30:22.155Z" }
      }
    ],
    "title": "",
    "description": "Text Free Grammar + Marcov Chains + Synths = Song Generator \nYou can play around with the notes, sequences, and times given to each note to create a song, would like to play around more with the actual parameters but all set up and working",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n// require /text/tracery.min.js\nconst synth = new Tone.Synth({\n    oscillator: {\n        type: 'sine', // sine, square, triangle, sawtooth, fat*\n    },\n     envelope: {\n       attack: 0.1,\n         decay: 0.1,\n       sustain: 0.5,\n    release: 1,\n     },\n});\nsynth.toMaster();\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n    // Play the melody!\n\n    const combinedNotes = generate();\n\n    // console.log(notes);\n    const model = generateModel(combinedNotes);\n\n    const song = generateText(\"e4\", model);\n    // console.log(song);\n    const notes = generateNotes(song);\n    console.log(notes);\n    play(notes);\n\n};\n\n\n\nfunction generate() {\n    const songGrammar = {\n        \"song\": [\"#m1# #m1# #m1# #m1# #m2# #m2# #m3# #m3#\"],\n        \"m1\": [\"G4 C4 e4 C4 e4\"],\n        \"m2\": ['a4 C4 e4 a4 C4 e4'],\n        \"m3\": ['G4 c4 F4 G4 C4 e4'],\n\n    }\n    const songGrammar2 = {\n        \"song\": [\"#comb# #comb# #comb# #comb#\"],\n        \"comb\": [\"#m1# #m2# #m3#\"],\n        \"m1\": [\"e4 E4 b4 e4 E4 b4 e4 B4 D4 C4 A4\"],\n        \"m2\": ['C4 e4 A4 B4'],\n        \"m3\": ['e4 A4 b4 B4 C4'],\n\n    }\n\n    let grammar = tracery.createGrammar(songGrammar);\n    console.log(grammar);\n    let song1 = grammar.flatten(\"#song#\");\n\n    let grammar2 = tracery.createGrammar(songGrammar2);\n    console.log(grammar2);\n    let song2 = grammar2.flatten(\"#song#\");\n\n    const songDiv = document.createElement('div');\n    songDiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n    songDiv.textContent = song1 + song2;\n\n    document.body.insertAdjacentElement(\"beforeend\", songDiv);\n\n    let combined = song1 + \" \" + song2;\n    return combined;\n}\n\n\n\nfunction generateModel(input_text) {\n    const words = input_text.split(\" \");\n    const model = {};\n\n    // loop through all the words except the last one.\n    for (let i = 0; i < words.length - 1; i++) {\n        const target_word = words[i];\n        const next_word = words[i + 1];\n\n        // if the model doesn't contain the target word, add it.\n        if (!model[target_word]) {\n            model[target_word] = [];\n        }\n\n        // add the next word to the possibilities for target_word\n        model[target_word].push(next_word);\n    }\n\n    return model;\n}\n\n\nfunction generateText(first_word, model) {\n    // start with the word passed in\n    let output_text = first_word;\n    let current_word = first_word;\n    for (let i = 0; i < 120; i++) {\n        // choose the next word by sampling from options in the model\n        current_word = sample(model[current_word]);\n\n        // append word to output\n        output_text += \" \";\n        output_text += current_word;\n\n        // if we get to a word that ends with \".\" we are done.\n        const last_character = current_word.substr(current_word.length - 1);\n        if (last_character === \".\") {\n            break;\n        }\n    }\n    return output_text;\n}\n\nfunction sample(array) {\n    const index = Math.floor(Math.random() * array.length);\n    return array[index];\n}\n\nfunction generateNotes(song) {\n    const notes = song.split(\" \");\n    for (let i = 0; i < notes.length; i++) {\n        let length;\n\n        if (notes[i] == \"F4\" || notes[i] == \"c4\" || notes[i] == \"G4\" || notes[i] == \"A4\") {\n            // make note a half note \n            length = '2n';\n        } else if (notes[i] == \"e4\" || notes[i] == \"B4\" || notes[i] == \"D4\" || notes[i] == \"C4\" || notes[i] == \"E4\") {\n            // make it a quarter note\n            length = '4n';\n        } else if (notes[i] == \"b4\") {\n            // make it a 8th note\n            length = '8n';\n        }\n        note = [notes[i], length];\n        notes[i] = note;\n    }\n    return notes\n}\n\nfunction play(melody) {\n    let t = Tone.now();\n    for (const note of melody) {\n        // console.log(note[0], note[1].toNotation());\n        if (note[0] !== 'rest') {\n            // synth.triggerAttackRelease(note[0], note[1]), t);\n            synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n}\n\nconsole.log('click for music!');"
  },
  {
    "_id": "YGYc7KDnaD8hvqoTb",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T03:41:32.415Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sxhnbgong9nlclyoyqv6",
        "version": 1555040520,
        "signature": "947ca3b89dd6d3a5323529bc75d1f3c4c11c8d00",
        "width": 1368,
        "height": 506,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:42:00Z",
        "tags": [],
        "bytes": 51255,
        "type": "upload",
        "etag": "e31a44a5340a336f43b3f4bb1a3f6fc6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555040520/avalanche2019/sxhnbgong9nlclyoyqv6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555040520/avalanche2019/sxhnbgong9nlclyoyqv6.png"
      },
      {
        "public_id": "avalanche2019/reasrnhtryfk8d0gh6aj",
        "version": 1555040524,
        "signature": "7947ee553a5e6158bfd51bd4b8ebd128f16edf30",
        "width": 1336,
        "height": 486,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:42:04Z",
        "tags": [],
        "bytes": 51255,
        "type": "upload",
        "etag": "a8367eebf3cf677c1abef3ded19f7720",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555040524/avalanche2019/reasrnhtryfk8d0gh6aj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555040524/avalanche2019/reasrnhtryfk8d0gh6aj.png"
      },
      {
        "public_id": "avalanche2019/aavhlyi2gywifjx0nojk",
        "version": 1555040853,
        "signature": "33a4cf6be39a03fe862949c6d567d93f0feac6c4",
        "width": 1168,
        "height": 430,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T03:47:33Z",
        "tags": [],
        "bytes": 38357,
        "type": "upload",
        "etag": "098a2cba900457c111b96b2b7db84347",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555040853/avalanche2019/aavhlyi2gywifjx0nojk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555040853/avalanche2019/aavhlyi2gywifjx0nojk.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "What's for lunch?",
    "code": "//code from class Template Examples: http://compform.net/text/\ninjectInterface();\ndocument.getElementById(\"recipe\").textContent = generateRecipe();\n\n\nfunction generateRecipe() {\n\tvar food_descriptions = [\"slow-roasted\",\"crispy\",\"caramelized\",\"spicy\",\"wood-oven roasted\",\"gently-melted\",\"marinated\",\"fried\",\"grilled\"]\n\tvar food_nouns = [\"chicken\",\"brisket\",\"eggplant\",\"potato\",\"prawns\",\"pumpkins\",\"ice cream\",\"ribs\",\"omelette\"]\n  var food_nouns2 = [\"white rice\",\"penne pasta\",\"quinoa\",\"couscous\",\"linguine pasta\",\"brownie\",\"pie\",\"broccolis\",\"mushrooms\",\"biryani\"]\n  var food_nouns3 = [\"rasins\",\"walnuts\",\"sprinkles\",\"apples\",\"cranberries\",\"olives\",\"wasabi\",\"butter\"]\n  var adjectives = [\"tender\",\"sweet\",\"fluffy\",\"nicely chopped\",\"creamy\",\"carefully burned\",\"spicy\"]\n  var faces = [\"🤐\",\"😋\",\"😶\",\"🤢\",\"🤢\",\"🤤\",\"🤤\",\"🤤\",\"🤮\",\"😦\",\"💀\",\"😬\",\"😬\",\"🤔\",\"👌\",\"😍\",\"😅\"]\n\n\tvar food_description= sample(food_descriptions);\n\tvar food_noun = sample(food_nouns);\n  var food_noun2 = sample(food_nouns2);\n  var food_noun3 = sample(food_nouns3);\n\tvar adjective = sample(adjectives);\n  var face = sample(faces);\n\n\tvar recipe = \"\";\n\tif (Math.random() < 0.5) {\n    recipe = `${food_description} ${food_noun} with a side of ${adjective} ${food_noun2} ${face}`;\n\t\trecipe = `${food_noun} stuffed with ${food_description} ${food_noun3} ${face}`;\n\n\t}\n\telse {\n\t\trecipe = `${food_noun2} topped with ${food_description} ${food_noun3} with a side of ${adjective} ${food_noun} ${face} `;\n\t}\n\n\n\n\treturn recipe;\n}\n\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: left;\n\t\t\tfont-family: 'Roboto', sans-serif;\n      color: #232323;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px;\n\t\t\ttext-align: Left;\n\t\t}\n\t\t#recipe {\n\t\t\tfont-size: 20px;\n\t\t\tline-height: .9em;\n      width: 600px;\n      line-height: 1.5em;\n      color: #a3a3a3;\n\n\t\t}\n\n\t</style>\n\t<div class=\"wrap\">\n    <h1>What's For Lunch?</h1>\n\t\t<div id=\"recipe\">Lunch</div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "YKjhR3B8K4HTEmccN",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T16:08:45.602Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z09chddfwiirkudzajbw",
        "version": 1556899734,
        "signature": "8b331d5ca633bf7f38f2155ad846c85bf4ffc9a5",
        "width": 500,
        "height": 580,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T16:08:54Z",
        "tags": [],
        "bytes": 16675,
        "type": "upload",
        "etag": "16c7ff791f13aa4dec480e3201eadc9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899734/avalanche2019/z09chddfwiirkudzajbw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899734/avalanche2019/z09chddfwiirkudzajbw.png"
      },
      {
        "public_id": "avalanche2019/jg8dtbmyb1qlqyuxbodc",
        "version": 1556899740,
        "signature": "413fab19e2dd53c9a8bf2d0de09e4bf60b4b1698",
        "width": 480,
        "height": 580,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T16:09:00Z",
        "tags": [],
        "bytes": 15297,
        "type": "upload",
        "etag": "8e33df61c39574f5c2c3fc9ecbfc0d29",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899740/avalanche2019/jg8dtbmyb1qlqyuxbodc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899740/avalanche2019/jg8dtbmyb1qlqyuxbodc.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "code": "difference() {\ncolor(\"lightgrey\")\n    cube([20,20,80]);\n    translate([15,15,60])\n    cube([15,15,5]);\n    translate([15,15,50])\n    cube([15,15,5]);\n    translate([15,15,40])\n    cube([15,15,5]);\n    translate([15,15,30])\n    cube([15,15,5]);\n    translate([15,15,70])\n    cube([15,15,5]);\n    translate([-1,15,70])\n    cube([6,15,5]);\n    translate([-1,15,60])\n    cube([6,15,5]);\n    translate([-1,15,50])\n    cube([6,15,5]);\n    translate([-1,15,40])\n    cube([6,15,5]);\n    translate([-1,15,30])\n    cube([6,15,5]);\n    translate([15,-1,70])\n    cube([15,6,5]);\n    translate([15,-1,60])\n    cube([15,6,5]);\n    translate([15,-1,50])\n    cube([15,6,5]);\n    translate([15,-1,40])\n    cube([15,6,5]);\n    translate([15,-1,30])\n    cube([15,6,5]);\n}"
  },
  {
    "_id": "YLbSeWkaoBwMPJJLj",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T18:32:42.399Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/c1knkqzoiarbowjlpwjk",
        "version": 1553798160,
        "signature": "e4c1daa7117e29f84e086a197f7a18e4e709996c",
        "width": 326,
        "height": 478,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-28T18:36:00Z",
        "tags": [],
        "bytes": 42986,
        "type": "upload",
        "etag": "d47349760f7abaaa019cdab01e150104",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553798160/avalanche2019/c1knkqzoiarbowjlpwjk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553798160/avalanche2019/c1knkqzoiarbowjlpwjk.jpg"
      },
      {
        "public_id": "avalanche2019/fd6nyxconlh9eu7zmit7",
        "version": 1553886457,
        "signature": "0cb30a54756fab64ed94249a4996aafe378cdd45",
        "width": 1816,
        "height": 1122,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T19:07:37Z",
        "tags": [],
        "bytes": 312124,
        "type": "upload",
        "etag": "77b3bd0c9a97cf37a5e80f164fc4c34e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553886457/avalanche2019/fd6nyxconlh9eu7zmit7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553886457/avalanche2019/fd6nyxconlh9eu7zmit7.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing with Paper.js -> Illustrator workflow.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n\n// Laser lab protocol\n// var cutLineColor = new Color(0, 0, 255);\nvar engraveLineColor = new Color(255, 0, 0);\nvar engraveFillColor = new Color(0, 0, 0);\nvar cutLineColor = new Color(0, 0, 0); //temporary\n\nvar strokeWd = .3;\nvar circles = [];\nvar numCircles = 10;\nvar lines = [];\n\n// Circle\nvar stepX = getRandom(-40, 40);\nvar stepY = getRandom(-40, 40);\nvar numSteps = 100;\nvar currentPos = view.center;\nleaveMark(currentPos);\n\n// Brownian movement\nfor (var i = 0; i < numSteps; i++) {\n    nextPos = new Point(currentPos + new Point(getRandom(-15, 15), getRandom(-30, 30)));\n    leaveLine(currentPos, nextPos);\n    currentPos = nextPos;\n    leaveMark(currentPos);\n}\n\n// Leave circles\nfunction leaveMark(pos) {\n    for (var i = 0; i < 10; i++) {\n        circles[i] = new Path.Circle({\n            position: new Point(\n                pos + new Point(\n                    getRandom(-3, 3),\n                    getRandom(-3, 3)\n                )\n            ),\n            radius: getRandom(2, 4),\n            strokeColor: cutLineColor,\n            strokeWidth: strokeWd,\n            fillColor: cutLineColor\n        });\n    }\n}\n\n// Leave lines\nfunction leaveLine(from, to) {\n    for (var i = 0; i < 3; i++) {\n        lines[i] = new Path.Line(\n            new Point(\n                from + new Point(\n                    getRandom(-3, 3),\n                    getRandom(-3, 3)\n                )\n            ),\n            new Point(\n                to + new Point(\n                    getRandom(-3, 3),\n                    getRandom(-3, 3)\n                )\n            )\n        );\n        lines[i].strokeColor = cutLineColor;\n        lines[i].strokeWidth = strokeWd\n    }\n    console.log(lines);\n}\n\n// downloadAsSVG();\n\n// Utilities ///////////////////////////////////////////////////////\nfunction getRandom(min, max) {\n    return min + Math.floor(Math.random() * (max - min));\n}\n\n// Download ///////////////////////////////////////////////////////\nfunction downloadAsSVG(fileName) {\n    // use default name if not provided\n    fileName = fileName || \"output.svg\"\n        // create a data url of the file\n    var svgData = project.exportSVG({ asString: true });\n    var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n    // create a link to the data, and \"click\" it\n    var link = document.createElement(\"a\");\n    link.download = fileName;\n    link.href = url;\n    link.click();\n}"
  },
  {
    "_id": "YTrLdQteyc833Fixt",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:02:25.972Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rzajfxmgqr42ltc5qvwp",
        "version": 1557515042,
        "signature": "5ebfb04b809dafba2b7397df4b618b50e9f14ca8",
        "width": 1196,
        "height": 594,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-10T19:04:02Z",
        "tags": [],
        "bytes": 49695,
        "type": "upload",
        "etag": "720575a08011889ac2f1758099158a1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557515042/avalanche2019/rzajfxmgqr42ltc5qvwp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557515042/avalanche2019/rzajfxmgqr42ltc5qvwp.jpg"
      },
      {
        "public_id": "avalanche2019/y3sq1tg55gfueibl237n",
        "version": 1557515053,
        "signature": "b7b7663ca1f3640196c310dc8eb37df2af3aac53",
        "width": 1188,
        "height": 584,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T19:04:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 722960,
        "type": "upload",
        "etag": "d3f6d50b9213584c5902149f1a9ff6ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557515053/avalanche2019/y3sq1tg55gfueibl237n.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557515053/avalanche2019/y3sq1tg55gfueibl237n.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "673623",
          "dar": "297:146"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 685297,
        "duration": 8.439667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "French Revolution :)  \n– just moved to the microgames week",
    "inspiration_name": "Compform microgames introduction",
    "inspiration_url": "http://compform.net/microgames/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require /microgames/sketches/p5.play.js\n// art from opengameart.org\n// https://opengameart.org/content/a-platformer-in-the-forest\n// http://compform.net/microgames/\n\nvar king;\nvar draggedSprite;\nvar guillotine;\nvar kingAlive = true;\nvar start = 0;\n\nfunction preload() {\n  //create an animation from a sequence of numbered images\n  //pass the first and the last file name and it will try to find the ones in between\n  // guillotineAnimation = loadAnimation(\n  //   \"guillotine0001.png\",\n  //   \"guillotine0005.png\"\n  // );\n  //create an animation listing all the images files\n  window.from = color(180, 10, 20);\n  window.to = color(10, 10, 10);\n}\n\nfunction setup() {\n  createCanvas(600, 300);\n\n  guillotine = createSprite(100, 150, 100, 100);\n  var myAnimation = guillotine.addAnimation(\n    \"kill\",\n    \"guillotine0001.png\",\n    \"guillotine0005.png\"\n  );\n  guillotine.setCollider(\"circle\", 0, 0, 6);\n  guillotine.scale = 2;\n  // guillotine.mirrorX(-1);\n\n  // var kingImage = loadImage(\"/microgames/sketches/king.png\");\n  // local\n  var kingImage = loadImage(\"king.png\");\n\n  king = createSprite(600, 250, 100, 100);\n  king.addImage(\"main\", kingImage);\n  king.scale = 3;\n  king.mouseActive = true;\n  king.mirrorX(-1);\n  king.setCollider(\"circle\", 0, -80, 6);\n\n  king.onMousePressed = function() {\n    if (draggedSprite == null) {\n      draggedSprite = this;\n    }\n\n    king.onMouseReleased = function() {\n      if (draggedSprite == this) {\n        draggedSprite = null;\n      }\n    };\n  };\n}\n\nfunction explosion() {\n  king.remove();\n  kingAlive = false;\n  // spriteB.score++;\n}\n\nfunction draw() {\n  background(120, 10, 20);\n  textSize(25);\n  textStyle(ITALIC);\n  textFont(\"Georgia\");\n  fill(40, 0, 10);\n  text(\"Vive la révolution!\", width / 2, height / 2);\n  guillotine.changeAnimation(\"kill\");\n\n  king.overlap(guillotine, explosion);\n\n  if (draggedSprite != null) {\n    draggedSprite.position.x = mouseX;\n    draggedSprite.position.y = mouseY;\n  }\n\n  if (king.mouseIsOver) king.rotation = -20;\n  else {\n    king.rotation = 0;\n  }\n  noSmooth();\n  if (kingAlive) {\n    drawSprites();\n  } else {\n    let fade = lerpColor(from, to, start);\n    background(fade);\n    start += 0.05;\n    fill(255, 255, 255);\n    textSize(15);\n    text(\"Le roi est mort…\", width / 2, height / 2);\n    textSize(35);\n    text(\"Vive le roi!\", width / 2, height / 2 + 45);\n  }\n}"
  },
  {
    "_id": "YW8yuiXt7yAfGcdxt",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T15:41:06.703Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ailfxyaujvmomnwcwnws",
        "version": 1549036249,
        "signature": "4e8506e0f07180dd632d2ca41770070dfdfcc443",
        "width": 1196,
        "height": 1196,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T15:50:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 1332143,
        "type": "upload",
        "etag": "d22214b4a63efd5064a3b176bee2880a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549036249/avalanche2019/ailfxyaujvmomnwcwnws.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549036249/avalanche2019/ailfxyaujvmomnwcwnws.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "310239",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "330837",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 653438,
        "duration": 16.309333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:16:53.13Z" }
      }
    ],
    "title": "",
    "description": "Using Javascript to redo tile Generator --> set Rules for generation \n\n1. All tiles have 4 sides, these sides are either open or closed\n2.If the tile to the left or above the current tile is OPEN the coorepsonding side of the current tile must\n            also be OPEN \n3.If the tile to the left or above the current tile is CLOSED the coorepsonding side of the current tile must\n            also be CLOSED\n4.A new arrangement must be made every time the board of tiles is filled\n5.tiles apply these rules and build from left to right, from top to bottom",
    "code": "var drawX;\nvar drawY;\nvar tileLength;\nvar canvasSize;\n\nvar rowJump;\nvar rowCounter;\n\nlet sideEdges = [];\nlet bottomEdges = [];\n\nvar counter;\n\nvar topOpen;\nvar bottomOpen;\nvar leftOpen;\nvar rightOpen;\n\nlet sideOpen;\nlet verticalOpen;\n\nfunction setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n\n    drawX = 0;\n    drawY = 0;\n    tileLength = 60;\n    canvasSize = 600;\n\n    counter = 0;\n    rowJump = false\n    rowCounter = 1;\n    newTable = 0;\n    //setup the data for horizontal Tiles\n\n}\n\n\n\nwindow.draw = function () {\n    //populate data \n    if (newTable == 0 || newTable % 100 == 0) {\n        for (let i = 0; i < 100; i++) {\n            sideOpen = Math.floor(2 * Math.random());\n            if (sideOpen == 1) {\n                sideOpen = false;\n            } else {\n                sideOpen = true;\n            }\n            // sideEdges[i] = sideOpen;\n            sideEdges.push(sideOpen);\n            print(i + \": \" + sideEdges[i])\n\n        }\n        //setup the data for vertical Tiles\n        for (let i = 0; i < 100; i++) {\n            verticalOpen = Math.floor(2 * Math.random());\n\n            if (verticalOpen == 1) {\n                verticalOpen = false;\n            } else {\n                verticalOpen = true;\n            }\n            bottomEdges.push(verticalOpen);\n            print(i + \": \" + bottomEdges[i])\n        }\n    }\n    //update the tile position \n    if (drawX > canvasSize - tileLength) {\n        rowJump = true;\n        drawX = 0;\n        rowCounter++;\n        drawY += tileLength;\n    }\n\n    if (drawY > canvasSize - tileLength) {\n        rowJump = true;\n        drawY = 0;\n        drawX = 0;\n    }\n\n    //check if the sides of the current tile are open or closed \n    //if the right side of the tile to the left of the current tile is open\n\n    print(\"sideopen[counter]= \");\n    print(sideEdges[counter]);\n    //left\n    if (sideEdges[counter] == true) {\n        leftOpen = true;\n\n    } else {\n        leftOpen = false;\n    }\n    print(leftOpen)\n\n    //right\n    if (sideEdges[counter + 1] == true) {\n        rightOpen = true;\n    } else {\n        rightOpen = false;\n    }\n    print(rightOpen);\n\n    //top\n    if (bottomEdges[counter] == true) {\n        topOpen = true;\n    } else {\n        topOpen = false;\n    }\n    print(topOpen)\n\n    //bottom\n    if (bottomEdges[counter + 10] == true) {\n        bottomOpen = true;\n    } else {\n        bottomOpen = false;\n    }\n    print(bottomOpen);\n\n    //draw white squares\n    fill(255, 255, 255);\n    square(drawX, drawY, tileLength);\n\n    //draw lines \n    // drawLines(rightOpen, leftOpen, topOpen, bottomOpen);\n    push();\n    fill(0, 255, 0);\n    stroke(0, 255, 0);\n    strokeWeight(5);\n\n    // find midpoints of every side of tile\n    let midRight = {\n        x: drawX + tileLength,\n        y: drawY + tileLength / 2\n    };\n\n    let midLeft = {\n        x: drawX,\n        y: drawY + tileLength / 2\n    };\n    let midTop = {\n        x: drawX + tileLength / 2,\n        y: drawY\n    };\n    let midBottom = {\n        x: drawX + tileLength / 2,\n        y: drawY + tileLength\n    };\n\n    let tileCenter = {\n        x: drawX + tileLength / 2,\n        y: drawY + tileLength / 2\n    };\n\n    //draw the lines if the sides are open \n    if (rightOpen == true) {\n        line(midRight.x, midRight.y, tileCenter.x, tileCenter.y);\n    }\n    if (leftOpen == true) {\n        line(midLeft.x, midLeft.y, tileCenter.x, tileCenter.y);\n    }\n    if (topOpen == true) {\n        line(midTop.x, midTop.y, tileCenter.x, tileCenter.y);\n    }\n    if (bottomOpen == true) {\n        line(midBottom.x, midBottom.y, tileCenter.x, tileCenter.y);\n    }\n    pop();\n    //increase tile position \n    drawX += tileLength;\n    counter++;\n    newTable++;\n    print(counter);\n}"
  },
  {
    "_id": "YWndDvfqts6zzHWoA",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T20:51:45.07Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lov00wio1c3izdaavc0w",
        "version": 1556830317,
        "signature": "4c1a884e3ca5028d68f1ea211d605378b558eddc",
        "width": 1116,
        "height": 906,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T20:51:57Z",
        "tags": [],
        "bytes": 402341,
        "type": "upload",
        "etag": "214595f68a1ed0b45dc7fcf6247810ed",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556830317/avalanche2019/lov00wio1c3izdaavc0w.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556830317/avalanche2019/lov00wio1c3izdaavc0w.png"
      },
      {
        "public_id": "avalanche2019/bpyzrqna6qk5beblr6xv",
        "version": 1556830323,
        "signature": "cb99ec20856a3460e5bacd380d67b5bfda7259f7",
        "width": 1308,
        "height": 866,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T20:52:03Z",
        "tags": [],
        "bytes": 398190,
        "type": "upload",
        "etag": "b04d73a92492e62147efc7441b26acd3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556830323/avalanche2019/bpyzrqna6qk5beblr6xv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556830323/avalanche2019/bpyzrqna6qk5beblr6xv.png"
      },
      {
        "public_id": "avalanche2019/ckewhcdxmvlie8naxuhs",
        "version": 1556830328,
        "signature": "c13889d799899390ddde581a7418a729268cdf3b",
        "width": 1522,
        "height": 688,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T20:52:08Z",
        "tags": [],
        "bytes": 169047,
        "type": "upload",
        "etag": "224daebd82edc75bdb961c556c226700",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556830328/avalanche2019/ckewhcdxmvlie8naxuhs.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556830328/avalanche2019/ckewhcdxmvlie8naxuhs.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "it me!"
  },
  {
    "_id": "YXCdzSh8joP9CpCte",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T13:00:51.889Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jh8tfz7ubdbxuynlkb74",
        "version": 1550667692,
        "signature": "bd466e964efd93c3f5c4d9f50faa66e13b6b2d7f",
        "width": 950,
        "height": 626,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-20T13:01:32Z",
        "tags": [],
        "bytes": 231120,
        "type": "upload",
        "etag": "4111dc8a1042acb074f959845031bf40",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550667692/avalanche2019/jh8tfz7ubdbxuynlkb74.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550667692/avalanche2019/jh8tfz7ubdbxuynlkb74.jpg"
      },
      {
        "public_id": "avalanche2019/yoogqydgpulz3cvp4abd",
        "version": 1550667698,
        "signature": "a1915fa2f88cdfc37b9ceff9619be94827fde58f",
        "width": 950,
        "height": 626,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-20T13:01:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 1791501,
        "type": "upload",
        "etag": "bb5997acc2bfce0ea912e1b082f8e921",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550667698/avalanche2019/yoogqydgpulz3cvp4abd.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550667698/avalanche2019/yoogqydgpulz3cvp4abd.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "277908",
          "dar": "475:313"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 282484,
        "duration": 50.735578,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/nvxqeglkiiuw6gnrblsi",
        "version": 1550667705,
        "signature": "3c902565a93520f2e029d4e5fe793eb6f1778ecd",
        "width": 947,
        "height": 624,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-20T13:01:45Z",
        "tags": [],
        "bytes": 220547,
        "type": "upload",
        "etag": "8982d95019e5d2424fd6777e17db7d9c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550667705/avalanche2019/nvxqeglkiiuw6gnrblsi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550667705/avalanche2019/nvxqeglkiiuw6gnrblsi.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-04-02T05:56:45.385Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a flow field using Perlin Noise in p5.js. The entire canvas is divided into a grid and each cross-section of the grid contains a vector (direction). I have used a constructor function to create a particle to follow the vector. This shows a pattern on the screen. \nI have used a constructor function for generating the particles.",
    "inspiration_name": "Flow Field",
    "inspiration_url": "https://youtu.be/BjoM9oKOAKY",
    "code": "https://github.com/akshansh2593/CompForm/tree/master/flowField"
  },
  {
    "_id": "YXkN82SKNWCsNWG4z",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-29T23:23:37.247Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/do5mphdgei9xpthi2fw5",
        "version": 1548804306,
        "signature": "37193d9fae552aec432835293a077352b79db328",
        "width": 437,
        "height": 496,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-29T23:25:06Z",
        "tags": [],
        "bytes": 303460,
        "type": "upload",
        "etag": "fa66e176eb7a34d4ba3f59b99f5e9b5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548804306/avalanche2019/do5mphdgei9xpthi2fw5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548804306/avalanche2019/do5mphdgei9xpthi2fw5.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:00.497Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:34.06Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:34.648Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:45.058Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:25.71Z" }
      }
    ],
    "title": "",
    "description": "Aerial - LA Freeway Exchange - Photoshop",
    "inspiration_name": "lost, and stuck on the 605"
  },
  {
    "_id": "YeoEigwxSKYcfndDp",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T16:06:50.759Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "YjgfwLfefdYGQm6ei",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-03-01T17:57:49.208Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/f19662vc5gfsfgkonhd6",
        "version": 1551463153,
        "signature": "a7ff1cc391889ae328772bd8a80bab799bef9f09",
        "width": 1920,
        "height": 944,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T17:59:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 20106660,
        "type": "upload",
        "etag": "0d47bae1bf4dd9687e3d0b5c177d9265",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551463153/avalanche2019/f19662vc5gfsfgkonhd6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551463153/avalanche2019/f19662vc5gfsfgkonhd6.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "19480084",
          "dar": "120:59"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 19497367,
        "duration": 8.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "If you move the mouse slowly from left to right it looks like a rocket flying through space?",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x, y;\nlet prevX, prevY;\n\nlet hue, sat;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  frameRate(30);\n  colorMode(HSB, 100, 100, 100);\n}\n\nfunction draw() {\n  background(50, 100, hue);\n  // fill(hue, sat, 100);\n  noFill();\n  // x = mouseX;\n  // y = mouseY;\n  prevX = pmouseX;\n  prevY = pmouseY;\n  strokeWeight(2);\n\n  for (let i = 0; i < 1; i++) {\n    beginShape();\n\n    for (let x = 0; x < mouseX; x += 15) {\n      // let x = mouseX;\n      let n = noise(x * 0.001 * frameCount, i * 0.001 * frameCount);\n      let y = map(n, 0, 1, 0, height);\n      // let y = mouseY;\n\n      hue = map(x, 0, width, 0, 100);\n      sat = 70;\n      stroke(hue, sat, 100);\n      curveVertex(x, y);\n      // curveVertex(x - mouseX, y - mouseY);\n      curveVertex(mouseX, mouseY);\n    }\n    endShape();\n  }\n}"
  },
  {
    "_id": "Yjv5DoTTFahQj5dra",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T19:33:01.423Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rxttxxxf5kctbg2arl73",
        "version": 1556825585,
        "signature": "c1879fe60089fc7e55da3ba7a04f5035a0cd8972",
        "width": 1276,
        "height": 1014,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:33:05Z",
        "tags": [],
        "bytes": 453192,
        "type": "upload",
        "etag": "8ebc7336afc7173ecd47d8138e993c19",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825585/avalanche2019/rxttxxxf5kctbg2arl73.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825585/avalanche2019/rxttxxxf5kctbg2arl73.png"
      },
      {
        "public_id": "avalanche2019/s51kc5lrffzdqmhc5rrp",
        "version": 1556825589,
        "signature": "efc97230a8336a4618e54e96a1f34de46a498cfb",
        "width": 1956,
        "height": 898,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:33:09Z",
        "tags": [],
        "bytes": 485141,
        "type": "upload",
        "etag": "eb0e718c4404f1561f027b0a4cd7ea35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825589/avalanche2019/s51kc5lrffzdqmhc5rrp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825589/avalanche2019/s51kc5lrffzdqmhc5rrp.png"
      },
      {
        "public_id": "avalanche2019/osiv6sss3jpzomjassnd",
        "version": 1556825768,
        "signature": "8f955542351ae2645133577888cc77e941122260",
        "width": 1320,
        "height": 756,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T19:36:08Z",
        "tags": [],
        "bytes": 285273,
        "type": "upload",
        "etag": "eea3c3e944fb1484fb15f68d9bee65f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556825768/avalanche2019/osiv6sss3jpzomjassnd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556825768/avalanche2019/osiv6sss3jpzomjassnd.png"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T20:51:21.094Z" }
      },
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T23:26:12.219Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-05-03T16:12:34.068Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T16:12:35.069Z" }
      }
    ],
    "title": "",
    "description": "Having a hard time figuring out the body sheen. Started playing around with the transmission but it looked like a black hole, turned up the values but looks grey now. Made using Maya and Arnold materials."
  },
  {
    "_id": "YmjGB55EP6ZjhXojd",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T06:57:54.413Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/abcy7vp5t409wla0oyms",
        "version": 1550127479,
        "signature": "6fc2ae2f5c3d1559096b48cc0516a8875107eb7c",
        "width": 1428,
        "height": 548,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T06:57:59Z",
        "tags": [],
        "bytes": 1573758,
        "type": "upload",
        "etag": "2abc7e474eabeda4c734005ab9ccb824",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550127479/avalanche2019/abcy7vp5t409wla0oyms.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550127479/avalanche2019/abcy7vp5t409wla0oyms.png"
      },
      {
        "public_id": "avalanche2019/aorbocxk9z3tqx8rnfeu",
        "version": 1550127484,
        "signature": "c8aa31cb2050a2e8463554fcee49fc95b4d93611",
        "width": 1152,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-14T06:58:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 20892481,
        "type": "upload",
        "etag": "b0300d40a89f77d21f33f7e3f1c54168",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550127484/avalanche2019/aorbocxk9z3tqx8rnfeu.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550127484/avalanche2019/aorbocxk9z3tqx8rnfeu.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "241845",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3515760",
          "dar": "8:5"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3765824,
        "duration": 44.383333,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T12:37:52.766Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-14T12:38:45.585Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-14T17:10:35.222Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T17:57:18.604Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T18:02:46.348Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T18:19:28.081Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "funny",
        "created_at": { "$date": "2019-02-28T21:45:40.715Z" }
      }
    ],
    "title": "",
    "description": "Roll a Picasso\nCode:https://editor.p5js.org/\ntinsleyfok/sketches/3E_c6HqPN",
    "inspiration_name": "Roll a Picasso Game",
    "inspiration_url": "https://www.teacherspayteachers.com/Product/Roll-A-Picasso-Art-Game-403496",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\nlet figure1,figure2,figure3;\nlet figures =[];\nfunction setup() {\n  createCanvas(windowWidth, 600);\n  createP('Figure');\n  selector = createSelect();\n  selector.option(\"figure1\", \"figure1\");\n  selector.option(\"figure2\", \"figure2\");\n  selector.option(\"figure3\", \"figure3\");\n  createP(\" \");\n  figure1=loadImage('2.jpg');\n  figure2=loadImage('1.jpg');\n  figure3=loadImage('3.jpg');\n  var eye_text = createP('Eyes');\n  eye_text.position(150,600);\n  selector2 = createSelect();\n  selector2.option(\"eye1\", \"eye1\");\n  selector2.option(\"eye2\", \"eye2\");\n  selector2.option(\"eye3\", \"eye3\");\n   selector2.position(150,650);\n  createP(\" \");\n  eye1=loadImage('eye1.png');\n  eye2=loadImage('eye2.png');\n  eye3=loadImage('eye3.png');\n  \n  var nose_text=createP('nose');\n  nose_text.position(300,600);\n  selector3 = createSelect();\n  selector3.option(\"nose1\", \"nose1\");\n  selector3.option(\"nose2\", \"nose2\");\n  selector3.option(\"nose3\", \"nose3\");\n  selector3.position(300,650);\n  createP(\" \");\n  nose1=loadImage('nose1.png');\n  nose2=loadImage('nose2.png');\n  nose3=loadImage('nose3.png');\n  \n    var mouth_text =createP('mouth');\n   mouth_text.position(450,600);\n  selector4 = createSelect();\n  selector4.option(\"mouth1\", \"mouth1\");\n  selector4.option(\"mouth2\", \"mouth2\");\n  selector4.option(\"mouth3\", \"mouth3\");\n  selector4.position(450,650)\n  createP(\" \");\n  mouth1=loadImage('mouth1.png');\n  mouth2=loadImage('mouth2.png');\n  mouth3=loadImage('mouth3.png');\n  \n  var eye_y_text=createP('Eyes y_pos');\n   eye_y_text.position(530,0);\neye_y_slider = createSlider(100, 500, 150);\n  eye_y_slider.position(530,50);\n  var  nose_y_text = createP('nose y_pos');\n  nose_y_text.position(530,150);\nnose_y_slider = createSlider(100, 500, 200);\n   nose_y_slider.position(530,200);\n  \n    var mouth_y_text =  createP('mouth y_pos');\n  mouth_y_text.position(530,300);\nmouth_y_slider = createSlider(100, 500, 300);\n   mouth_y_slider.position(530,350);\n}\n\n\n\nfunction draw(){\n  var eye_y = eye_y_slider.value();\n    var nose_y = nose_y_slider.value();\n      var mouth_y = mouth_y_slider.value();\n  \n if (selector.value() === \"figure1\") {\n  image(figure1,0,0);\n  } else if (selector.value() === \"figure2\") {\n   image(figure2,0,0);\n  } else if (selector.value() === \"figure3\") {\n  image(figure3,0,0);\n  }\n  \n   if (selector2.value() === \"eye1\") {\n  image(eye1,150,eye_y);\n  } else if (selector2.value() === \"eye2\") {\n   image(eye2,150,eye_y);\n  } else if (selector2.value() === \"eye3\") {\n  image(eye3,150,eye_y);\n  }\n  \n    if (selector3.value() === \"nose1\") {\n  image(nose1,250,nose_y);\n  } else if (selector3.value() === \"nose2\") {\n   image(nose2,250,nose_y);\n  } else if (selector3.value() === \"nose3\") {\n  image(nose3,250,nose_y);\n  }\n  \n    if (selector4.value() === \"mouth1\") {\n  image(mouth1,200,mouth_y);\n  } else if (selector4.value() === \"mouth2\") {\n   image(mouth2,200,mouth_y);\n  } else if (selector4.value() === \"mouth3\") {\n  image(mouth3,200,mouth_y);\n  }\n \n}"
  },
  {
    "_id": "YnNqdBGDKjdbePqmN",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T05:45:43.901Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yijlumwwyiyw1npwr4ah",
        "version": 1550209588,
        "signature": "9a90e08553638bfdfeb3de95aac157ef414c9e33",
        "width": 800,
        "height": 600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-15T05:46:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 199274,
        "type": "upload",
        "etag": "214f9dbb1c0bb1ef829d627638d62979",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550209588/avalanche2019/yijlumwwyiyw1npwr4ah.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550209588/avalanche2019/yijlumwwyiyw1npwr4ah.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "124048"
        },
        "frame_rate": 10,
        "bit_rate": 125526,
        "duration": 12.7,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Material Button\n- Made with ReactJS + FramerX"
  },
  {
    "_id": "YqyDZCtZrh8YYGL6c",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Music",
    "created_at": { "$date": "2019-05-15T04:21:59.665Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nsmflasl3whozcyvtwog",
        "version": 1557894128,
        "signature": "d5696074b2b2abd90fd26edf50f4ec479a27b375",
        "width": 1280,
        "height": 596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-15T04:22:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 7061355,
        "type": "upload",
        "etag": "bc1eb42aa9020d0ad3e3fd13372a4c56",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557894128/avalanche2019/nsmflasl3whozcyvtwog.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557894128/avalanche2019/nsmflasl3whozcyvtwog.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "249571",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5740887",
          "dar": "320:149"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5999027,
        "duration": 9.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "basic synth using template code from sound week"
  },
  {
    "_id": "YsTnF9CGqjciT86N4",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T14:42:33.915Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bymxdhup6u0926scgu8e",
        "version": 1550760168,
        "signature": "8a6372c43f7b2f87931b2f30a179c45f902ab1bf",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T14:42:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 7613533,
        "type": "upload",
        "etag": "e7be3f0c899da054f4a90734548b7a71",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550760168/avalanche2019/bymxdhup6u0926scgu8e.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550760168/avalanche2019/bymxdhup6u0926scgu8e.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5536332",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 5596471,
        "duration": 10.883333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ioimbxepon11xe1os8lw",
        "version": 1550760198,
        "signature": "a7dc1dd78b8ac5f09a97ff5aeb1da3431b4bd88f",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T14:43:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 7477308,
        "type": "upload",
        "etag": "2d4ef3c8b84032d77b723deb18eca18a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550760198/avalanche2019/ioimbxepon11xe1os8lw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550760198/avalanche2019/ioimbxepon11xe1os8lw.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5511101",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 5607980,
        "duration": 10.666667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/yipsoplce1hbuw4wm8cn",
        "version": 1550760266,
        "signature": "0037b59fcfd7ad2927c7422518146bb93e0f99f6",
        "width": 796,
        "height": 599,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T14:44:26Z",
        "tags": [],
        "bytes": 680364,
        "type": "upload",
        "etag": "6ca4477555b514e605095cb5d08cad7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550760266/avalanche2019/yipsoplce1hbuw4wm8cn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550760266/avalanche2019/yipsoplce1hbuw4wm8cn.png"
      }
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-02-21T22:59:13.043Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-22T04:18:05.483Z" }
      }
    ],
    "title": "",
    "description": "I've been totally inspired by many of the topographic looking submissions from this week. Riffing of one of Anna's floral geometric pieces and wanted to explore different shapes and densities of lines. How organic could it begin to feel? Could this feel like something breathing?",
    "inspiration_name": "Tomas Saraceno",
    "inspiration_url": "https://studiotomassaraceno.org/on-air/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nconst canvas = {\n    w: 800,\n    h: 600\n};\n\nfunction setup() {\n    createCanvas(canvas.w, canvas.h);\n    strokeWeight(.2);\n    colorMode(HSB, 1);\n    stroke(.7, 0, 1);\n    noFill();\n    angleMode(DEGREES);\n}\n\nfunction draw() {\n    background(0);\n    //background(7, 2, 4, 5);\n    makeShape(Math.floor(canvas.w *5));\n}\n\nfunction makeRing(radius) {\n    \n  //define shape\n  beginShape();\n    let numPoints = 4;\n    for(let i=0; i < numPoints; i++) {\n        let raw = {\n            x: (canvas.w / 2) + radius * Math.cos(i * (2 * Math.PI) / numPoints),\n            y: (canvas.h / 2) + radius * Math.sin(i * (2 * Math.PI) / numPoints)\n        };\n        let noisyRadius = radius * noise(raw.x * .01, raw.y * .01, millis() * .00005);\n      \n      //position\n      let noisy = {\n            x: (canvas.w / 2) + noisyRadius * Math.cos(i * (2 * Math.PI) / numPoints),\n            y: (canvas.h / 2) + noisyRadius * Math.sin(i * (2 * Math.PI) / numPoints)\n        };\n        vertex(noisy.x, noisy.y);\n    }\n    endShape(CLOSE);\n}\n\nfunction makeShape(numRings) {\n    for (let i = 0; i < numRings; i += 1) {\n        makeRing(i);\n    }\n}"
  },
  {
    "_id": "Yv72QABdrJ98MT4of",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T01:04:32.294Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "Z2Yo7TDX5JhLt75zn",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T17:59:04.973Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mick0rwvotqxnsfkgaer",
        "version": 1557424752,
        "signature": "a0e8a378508ef6737474c4225c81724c93d6dffd",
        "width": 1000,
        "height": 496,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-09T17:59:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 582009,
        "type": "upload",
        "etag": "a23eafc616f0a1a02318c0b1ed5f9197",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557424752/avalanche2019/mick0rwvotqxnsfkgaer.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557424752/avalanche2019/mick0rwvotqxnsfkgaer.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "449005",
          "dar": "125:62"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 449381,
        "duration": 10.3561,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qh92u8pqlccjzzbnejfg",
        "version": 1557424759,
        "signature": "175594929dae79ff951b149b73d48290b6a47887",
        "width": 1000,
        "height": 496,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-09T17:59:19Z",
        "tags": [],
        "bytes": 51236,
        "type": "upload",
        "etag": "42d193b973c29350517faddbc09e5e6d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557424759/avalanche2019/qh92u8pqlccjzzbnejfg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557424759/avalanche2019/qh92u8pqlccjzzbnejfg.jpg"
      },
      {
        "public_id": "avalanche2019/htpwn9lm0fc3lvris7rs",
        "version": 1557424761,
        "signature": "9857f4687982e66a97f8f81d0f5ad7327882e093",
        "width": 1000,
        "height": 496,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-09T17:59:21Z",
        "tags": [],
        "bytes": 50988,
        "type": "upload",
        "etag": "fe3197748663e1777bd2c1baade8e5d0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557424761/avalanche2019/htpwn9lm0fc3lvris7rs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557424761/avalanche2019/htpwn9lm0fc3lvris7rs.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a screensaver for CompForm using C and F icons. \nI have used colliders and bounce functions in p5.play.js and have created the icons in Illustrator.",
    "inspiration_name": "CompForm Screensaver",
    "inspiration_url": "http://molleindustria.github.io/p5.play/examples/index.html?fileName=collisions4.js",
    "code": "// Screensaver for CompForm\n\n// Reference: http://molleindustria.github.io/p5.play/examples/index.html?fileName=collisions4.js\n\n\n// Github link: https://github.com/akshansh2593/CompForm/tree/master/compForm_screensaver\n\n//Collision detection - Bouncing behavior\n\nvar circles;\nvar comp_sprite;\nvar form_sprite;\n\nfunction setup() {\n    createCanvas(800, 400);\n\n    circles = new Group();\n\n    for (var i = 0; i < 20; i++) {\n        var circle = createSprite(random(0, width), random(0, height));\n        circle.addImage('main', loadImage('sketches/circle.png'));\n        circle.setCollider('circle', -2, 2, 55);\n        circle.setSpeed(random(1, 2), random(0, 360));\n\n        //scale affects the size of the collider\n        circle.scale = random(0.5, 1);\n        //mass determines the force exchange in case of bounce\n        circle.mass = circle.scale;\n        //restitution is the dispersion of energy at each bounce\n        //if = 1 the circles will bounce forever\n        //if < 1 the circles will slow down\n        //if > 1 the circles will accelerate until they glitch\n        //circle.restitution = 0.9;\n        circles.add(circle);\n    }\n\n\n    // Placing the Comp Form letters\n    // C\n    comp_sprite = createSprite(300, 200);\n    comp_sprite.addImage(loadImage('sketches/c.png'));\n    // make letter immovable\n    comp_sprite.immovable = true;\n    // F\n    form_sprite = createSprite(500, 200);\n    form_sprite.addImage(loadImage('sketches/f.png'));\n    // make letter immovable\n    form_sprite.immovable = true;\n\n}\n\nfunction draw() {\n    background(255, 255, 255);\n\n    //circles bounce against each others and against boxes\n    circles.bounce(circles);\n    //boxes are \"immovable\"\n    circles.bounce(comp_sprite);\n    circles.bounce(form_sprite);\n\n    //all sprites bounce at the screen edges\n    for (var i = 0; i < allSprites.length; i++) {\n        var s = allSprites[i];\n        if (s.position.x < 0) {\n            s.position.x = 1;\n            s.velocity.x = abs(s.velocity.x);\n        }\n\n        if (s.position.x > width) {\n            s.position.x = width - 1;\n            s.velocity.x = -abs(s.velocity.x);\n        }\n\n        if (s.position.y < 0) {\n            s.position.y = 1;\n            s.velocity.y = abs(s.velocity.y);\n        }\n\n        if (s.position.y > height) {\n            s.position.y = height - 1;\n            s.velocity.y = -abs(s.velocity.y);\n        }\n    }\n\n    drawSprites();\n\n}"
  },
  {
    "_id": "Z3H66r5Ls89JZ6AzG",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T21:34:41.99Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ailsxzxh3vh8on76bx1m",
        "version": 1549402864,
        "signature": "1ec38cc26ad75472296c216327ebb4dd07d67e3d",
        "width": 990,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-05T21:41:04Z",
        "tags": [],
        "bytes": 60032,
        "type": "upload",
        "etag": "ad30479e72fe27a869053818da71075d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549402864/avalanche2019/ailsxzxh3vh8on76bx1m.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549402864/avalanche2019/ailsxzxh3vh8on76bx1m.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T03:13:17.953Z" }
      }
    ],
    "title": "",
    "description": "Little bitty pastels that change on click - p5",
    "code": "//found random colors -- Ivy Meadows\n//declare and assign number of rows and columns\nvar rows = 20;\nvar columns = 20;\nvar r,g,b,a;\n\n//declare randomColor\nvar randomColor;\n\n//variables for steps\nvar stepX;\nvar stepY;\n\nfunction setup() {\n  \n  //tiny canvas\n  createCanvas(500, 500);\n  \n  //white background\n  background(255);\n  \n  //draw rectangles from the corner\n  rectMode(CORNER);\n  \n  //no border\n  noStroke();\n  \n  //calculate steps\n  stepX = width/columns;\n  stepY = height/rows;\n  \n  //for loop to iterate columns\n  for (var i = 0; i < columns; i++) {\n    //for loop to iterate rows\n    for (var j = 0; j < rows; j++) {\n      \n      //random gray\n      randomColor = color(random(207),random(123),random(215),random(50));\n      \n      fill(randomColor);\n      noStroke();\n      //rect(posX, posY, width, height);\n      rect(i * stepX, j * stepY, stepX, stepY);\n    }\n  }\n  \n}"
  },
  {
    "_id": "Z3LZKNErye8E3D9Fg",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:45:46.54Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g8g9fcmqhtnkjm4f4fdo",
        "version": 1556305571,
        "signature": "985c73521034a65e131d37cd487d5dcad3c91034",
        "width": 688,
        "height": 390,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T19:06:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 7977959,
        "type": "upload",
        "etag": "e853be51b4db82f7f7427a9b4437f9f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556305571/avalanche2019/g8g9fcmqhtnkjm4f4fdo.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556305571/avalanche2019/g8g9fcmqhtnkjm4f4fdo.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "228360",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1712456",
          "dar": "344:195"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2093723,
        "duration": 30.483333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/movimeocwejgdgdch03y",
        "version": 1556305601,
        "signature": "5b6cc068171ee8e49ae0c0b20dc26396038d529e",
        "width": 688,
        "height": 392,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-26T19:06:41Z",
        "tags": [],
        "bytes": 20525,
        "type": "upload",
        "etag": "db5f1022a110f9934ca4e25b3f1d7b13",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556305601/avalanche2019/movimeocwejgdgdch03y.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556305601/avalanche2019/movimeocwejgdgdch03y.png"
      },
      {
        "public_id": "avalanche2019/excofelqgkuugqm4k2a0",
        "version": 1556305605,
        "signature": "fd3d1eecab6f9c3a4a22357f92698ebb14d49355",
        "width": 688,
        "height": 392,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-26T19:06:45Z",
        "tags": [],
        "bytes": 15845,
        "type": "upload",
        "etag": "af6980ef2dc32104529ad593729c3b7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556305605/avalanche2019/excofelqgkuugqm4k2a0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556305605/avalanche2019/excofelqgkuugqm4k2a0.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "More oscillator experiments. I started treating this one more like an instrument and tried to play it as I might in a gig.",
    "code": "let osc, fft;\n\nfunction setup() {\n  createCanvas(800, 400);\n\n  osc = new p5.TriOsc(); // set frequency and type\n  osc.amp(0.5);\n\n  fft = new p5.FFT();\n  osc.start();\n}\n\nfunction draw() {\n  background(30, 30, 40);\n  \n  //   //vertical bars\n  // fill(30);\n  // rect(0, 0, 50, 400);\n  // rect(100, 0, 50, 400);\n  // rect(200, 0, 50, 400);\n  // rect(300, 0, 50, 400);\n  // rect(400, 0, 50, 400);\n  // rect(500, 0, 50, 400);\n  // rect(600, 0, 50, 400);\n  // rect(700, 0, 50, 400);\n\n// //horizontal lines\n//   fill(40, 40, 40);\n//   rect(0, 25, 800, 1);\n//     rect(0, 50, 800, 1);\n//     rect(0, 75, 800, 1);\n//     rect(0, 50, 800, 1);\n//     rect(0, 100, 800, 1);\n//     rect(0, 125, 800, 1);\n//     rect(0, 150, 800, 1);\n//     rect(0, 175, 800, 1);\n//     rect(0, 200, 800, 1);\n//     rect(0, 225, 800, 1);\n//     rect(0, 250, 800, 1);\n//     rect(0, 275, 800, 1);\n//     rect(0, 300, 800, 1);\n//     rect(0, 325, 800, 1);\n//     rect(0, 350, 800, 1);\n//     rect(0, 375, 800, 1);\n\n  let waveform = fft.waveform(); // analyze the waveform\n  beginShape();\n  fill(50, 50, 200);\n  noStroke();\n  //strokeWeight(5);\n  for (let i = 0; i < waveform.length; i++) {\n    let x = map(i, 0, waveform.length, 0, width);\n    let y = map(waveform[i], -1, 1, height, 0);\n    vertex(x, y);\n  }\n  endShape();\n\n  // change oscillator frequency based on mouseX\n  let freq = map(mouseX, 0, width, 40, 80);\n  osc.freq(freq);\n\n  let amp = map(mouseY, 0, height, 1, 0.1);\n  osc.amp(amp);\n}"
  },
  {
    "_id": "Z5YKxXBpyGjvnZkWi",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T18:26:40.56Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/q2hgwzv7ws9qq0w3rli3",
        "version": 1550860064,
        "signature": "f97e26cf6521c81be0d1dc20a79a9aa5923e43bc",
        "width": 2540,
        "height": 1272,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T18:27:44Z",
        "tags": [],
        "bytes": 1672668,
        "type": "upload",
        "etag": "daeafa6d3b2fb8fc91194fa11899f739",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550860064/avalanche2019/q2hgwzv7ws9qq0w3rli3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550860064/avalanche2019/q2hgwzv7ws9qq0w3rli3.png"
      },
      {
        "public_id": "avalanche2019/ck3o25yh0fz8ounfwngn",
        "version": 1550860071,
        "signature": "adaa3a367845fbe67e2c936bc7124c705911d023",
        "width": 2540,
        "height": 1244,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T18:27:51Z",
        "tags": [],
        "bytes": 1631137,
        "type": "upload",
        "etag": "beec2889a541a029edf24f07c7f172ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550860071/avalanche2019/ck3o25yh0fz8ounfwngn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550860071/avalanche2019/ck3o25yh0fz8ounfwngn.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T18:58:54.959Z" }
      }
    ],
    "title": "",
    "description": "2nd try of a noise subway map. (processing)",
    "inspiration_name": "Generative Gestaltung",
    "inspiration_url": "http://www.generative-gestaltung.de",
    "code": "https://github.com/pinkisholifant/ywc-github/tree/master/sketch_2"
  },
  {
    "_id": "Z63jLHKdMsAetmrCj",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T01:52:58.367Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ttahowywqjsk7bc3p8op",
        "version": 1549590863,
        "signature": "ba41ab447d942ea872e38fab362ed3b077abe0b2",
        "width": 1898,
        "height": 1052,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T01:54:23Z",
        "tags": [],
        "bytes": 2745156,
        "type": "upload",
        "etag": "d98e782f63f43ae741c4df7d2444b7db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549590863/avalanche2019/ttahowywqjsk7bc3p8op.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549590863/avalanche2019/ttahowywqjsk7bc3p8op.png"
      },
      {
        "public_id": "avalanche2019/jc7bimy48zl0rjoxhhfl",
        "version": 1549590892,
        "signature": "b75aa3de0446b3e5e71094aaa0e9e801725015f2",
        "width": 960,
        "height": 540,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T01:54:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 4659332,
        "type": "upload",
        "etag": "edab15da5c962cf582690509df354b75",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549590892/avalanche2019/jc7bimy48zl0rjoxhhfl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549590892/avalanche2019/jc7bimy48zl0rjoxhhfl.mov",
        "audio": {
          "codec": "pcm_s16le",
          "bit_rate": "1536000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "41749738",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 55856155,
        "duration": 0.667333,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T01:59:47.357Z" }
      },
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T07:06:14.254Z" }
      }
    ],
    "title": "",
    "description": "Playing with random seed in Maya"
  },
  {
    "_id": "Z6c4dce2RPjYFLwRq",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T13:17:16.584Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gaoyi8owvkkh1nxmj7gp",
        "version": 1556716659,
        "signature": "9e94689091c30fe9a577b02571da87c9e416c5de",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T13:17:39Z",
        "tags": [],
        "bytes": 1007284,
        "type": "upload",
        "etag": "3d56fd7575a79116ea606e08d89ffea1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556716659/avalanche2019/gaoyi8owvkkh1nxmj7gp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556716659/avalanche2019/gaoyi8owvkkh1nxmj7gp.jpg"
      },
      {
        "public_id": "avalanche2019/g7svtwz7lk9aqgcpibqm",
        "version": 1556716663,
        "signature": "131c52a0b55464ea4c9fd29ecdfd262060dece12",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T13:17:43Z",
        "tags": [],
        "bytes": 849900,
        "type": "upload",
        "etag": "d7ab32f8c10c0096792fa8b0ff362969",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556716663/avalanche2019/g7svtwz7lk9aqgcpibqm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556716663/avalanche2019/g7svtwz7lk9aqgcpibqm.jpg"
      },
      {
        "public_id": "avalanche2019/mgde5sqhdy8kixqcv5qp",
        "version": 1556716666,
        "signature": "bae8c1c28b56667f98d8b78dd661a217ff4bdbf8",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T13:17:46Z",
        "tags": [],
        "bytes": 829346,
        "type": "upload",
        "etag": "0ee3b90683be67f3991f68ec5f9dc86b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556716666/avalanche2019/mgde5sqhdy8kixqcv5qp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556716666/avalanche2019/mgde5sqhdy8kixqcv5qp.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-01T18:00:33.23Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T16:05:07.379Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:14:28.282Z" }
      }
    ],
    "title": "",
    "description": "OpenSCAD psychedelia."
  },
  {
    "_id": "Z6kXo3ydEBS5r3ser",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "created_at": { "$date": "2019-03-01T18:40:47.257Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ub6rzplcbtklqwaktl0e",
        "version": 1551465691,
        "signature": "962d5d5225edfb3b0ba6ed1d6eb550ed4cc421ac",
        "width": 1004,
        "height": 704,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T18:41:31Z",
        "tags": [],
        "bytes": 80380,
        "type": "upload",
        "etag": "dbf928cecc644962a8c2ac1c703a5a19",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551465691/avalanche2019/ub6rzplcbtklqwaktl0e.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551465691/avalanche2019/ub6rzplcbtklqwaktl0e.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Non-overlapping ellipses",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nlet frequency = 0.5;\nlet x =0;\nlet y= 0;\nvar circles = [];\n\nfunction setup() {\n  createCanvas(720, 400);\n  noStroke();\n\tcolorMode(HSB,1);\n\t\n\t\tbackground(0,0,0.2);\n\tfor (var i = 0; i < 1000; i++){\n\t\tvar circle = {\n\t   x : random(width),\n     y : random(height),\n\t\t r: noise(i*frequency,10)*50\t\t\n\t\t };\n\t\n\t\tvar overlapping = false;\n\t\t\n\t\tfor (var j = 0; j < circles.length;j++){\n\t\t\tvar other = circles[j];\n\t\t\tvar d = dist(circle.x, circle.y, other.x,other.y);\n\t\t\tif(d< circle.r + other.r){\n\t\t\t\toverlapping = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!overlapping){\n\t\t\t\t\tcircles.push(circle);\t\n\t\t}\t\n\t }\n\t\n\t\n}\n\nfunction draw() {\n\tfor (var i = 0; i < circles.length; i++){\n\tlet h = map(circles[i].r,0,20,1,0);\n  let s = 1;\n  let b = 1;\n  fill(h, s, b)\n  ellipse(circles[i].x, circles[i].y, circles[i].r, circles[i].r);\n\t}\n\n\n}"
  },
  {
    "_id": "Z7HsSbHuLooRaDHJj",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T01:28:56.217Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qsrotee0q1h80hvr8nzd",
        "version": 1553822988,
        "signature": "ea22148206132821831508900af802513f74581f",
        "width": 654,
        "height": 930,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:29:48Z",
        "tags": [],
        "bytes": 288283,
        "type": "upload",
        "etag": "409a2f889e175bbd851b33cc515e9408",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553822988/avalanche2019/qsrotee0q1h80hvr8nzd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553822988/avalanche2019/qsrotee0q1h80hvr8nzd.png"
      },
      {
        "public_id": "avalanche2019/sul9jedabmvcgn6u7ae3",
        "version": 1553823014,
        "signature": "c49bbeddcf673ebbba170125c2c127f7d6e9880f",
        "width": 780,
        "height": 1144,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:30:14Z",
        "tags": [],
        "bytes": 208703,
        "type": "upload",
        "etag": "b59339777a0381a1c43cb921f9053980",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553823014/avalanche2019/sul9jedabmvcgn6u7ae3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553823014/avalanche2019/sul9jedabmvcgn6u7ae3.png"
      },
      {
        "public_id": "avalanche2019/o5ujv7imkwnghrstfdut",
        "version": 1553823018,
        "signature": "1333ea6f7bad5ab3cfff361d4d5f5c500f25aaa2",
        "width": 938,
        "height": 1094,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:30:18Z",
        "tags": [],
        "bytes": 200608,
        "type": "upload",
        "etag": "9eee5d3f75cbf80f88cbf62602312c9d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553823018/avalanche2019/o5ujv7imkwnghrstfdut.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553823018/avalanche2019/o5ujv7imkwnghrstfdut.png"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-18T21:03:34.409Z" }
      }
    ],
    "title": "",
    "description": "Getting Started in paper.JS\n\ngrouping rasters with compound paths to create moon cycle",
    "inspiration_name": "Moon Cycle",
    "code": "var moonRadius = 100;\nvar moonSeperation = 250;\nvar sunRadius = 100;\nvar moonSunSeperation = 10;\nvar change = 10;\nvar row = new Point(0, 150);\nvar halfWay = 8;\n\n//raster stuff/////////\nvar raster = new Raster('moon');\nconsole.log(raster);\nraster.visible = false;\nraster.on('load', drawMoons);\nvar background = new Path.Rectangle({\n    point: [0, 0],\n    size: [3000, 4000],\n    fillColor: 'black'\n});\n\nfunction drawMoons() {\n    var moonLocation = new Point(150, 150);\n    for (var i = 0; i < 16; i++) {\n        //set moon Location\n        if (i > 3 && i % 4 == 0) {\n            moonLocation.y += 150;\n            moonLocation.x = 150;\n            row.y += 400;\n        } else {\n            moonLocation.y = row.y;\n        }\n\n\n        var moon = new Path.Circle(moonLocation, moonRadius);\n        moon.strokeColor = 'grey';\n        if (i < halfWay) {\n\n            var sunLocation = moonLocation + new Point(moonSunSeperation, 0);\n            var sun = new Path.Circle(sunLocation, sunRadius);\n            sun.strokeColor = 'grey';\n            var moonPath = moon.subtract(sun);\n            var group = makeNewRasterGroup(moonPath, moonLocation, moonSeperation, row);\n            moonLocation += new Point(moonSeperation, row);\n\n        } else if (i >= halfWay) {\n            sunLocation.x = moonLocation.x - sunRadius + change;\n            sunLocation.y = moonLocation.y;\n            var sun = new Path.Circle(sunLocation, sunRadius);\n            sun.strokeColor = 'grey';\n            var moonPath = moon.intersect(sun);\n            var group = makeNewRasterGroup(moonPath, moonLocation, moonSeperation, row);\n            moonLocation += new Point(moonSeperation, row);\n\n\n        } else if (i + 1 == (halfWay * 2)) {\n            moon.strokeColor = 'blue';\n            moonLocation += new Point(moonLocation, moonRadius);\n        }\n        if (i < halfWay) {\n            moonSunSeperation += 34;\n            sunRadius += 22;\n        } else if (i >= halfWay) {\n            change += 12;\n            sunRadius -= 24;\n        }\n        moonPath.style = {\n            fillColor: null,\n            shadowBlur: 12,\n            shadowOffset: new Point(5, 5),\n        };\n\n\n    }\n}\n\nfunction makeNewRasterGroup(moonPath, moonLocation, moonSeperation, row) {\n    var raster = new Raster('moon', moonLocation);\n    raster.size = 250;\n    var group = new Group([moonPath, raster]);\n    group.clipped = true;\n    // group.style = {\n    //     shadowBlur: 12,\n    //     shadowOffset: new Point(5, 5),\n    //     strokeColor: 'purple',\n    // }\n    return group;\n}"
  },
  {
    "_id": "Z9NtwnWT2Ym2aFCXN",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T06:45:32.712Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/crb5rkexiw22vxdchwm9",
        "version": 1549435590,
        "signature": "d62aa4577d9fbb66eb51a0f8f41fc139bceda702",
        "width": 1608,
        "height": 1610,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-06T06:46:30Z",
        "tags": [],
        "bytes": 135823,
        "type": "upload",
        "etag": "bb6cd5a20f621962d5ceb2b4a02162a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549435590/avalanche2019/crb5rkexiw22vxdchwm9.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549435590/avalanche2019/crb5rkexiw22vxdchwm9.jpg"
      },
      {
        "public_id": "avalanche2019/enbd5mm1w8xbsxdnd9ow",
        "version": 1549435958,
        "signature": "c4aba630d7267c8d963434977b4db5963a8ef3e8",
        "width": 1588,
        "height": 1596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-06T06:52:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 4325954,
        "type": "upload",
        "etag": "3098cf6b857df1d568192087087702d3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549435958/avalanche2019/enbd5mm1w8xbsxdnd9ow.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549435958/avalanche2019/enbd5mm1w8xbsxdnd9ow.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "5529107",
          "dar": "397:399"
        },
        "frame_rate": 60,
        "bit_rate": 5537221,
        "duration": 6.25,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T05:07:26.552Z" }
      }
    ],
    "title": "",
    "description": "Isometric drawing with sketchy line generator, would love to improve the sketchy line generator to make rectangles with slight offsets.",
    "inspiration_name": "Impossible cube ( shutterstock :) )",
    "inspiration_url": "https://www.shutterstock.com/image-vector/impossible-cube-isometric-drawing-vector-illustration-481575334",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nconst w = 800;\nconst h = 800;\nconst iw = 400;\nconst ih = 460;\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  backgroundColor = color(0, 0, 0);\n  angleMode(DEGREES);\n  createCanvas(w, h);\n  background(backgroundColor);\n  stroke(0, 0, 1);\n}\n\nfunction draw() {\n  frameRate(10);\n  background(backgroundColor);\n  translate(200, 180);\n  // 1\n  drawSketchyline({ x: 0, y: ih * 0.25 }, { x: iw * 0.5, y: 0 }, 60, 0.4);\n  drawSketchyline(\n    { x: 0, y: ih * 0.25 },\n    { x: iw * 0.4, y: ih * 0.45 },\n    60,\n    0.4\n  );\n  // 2\n  drawSketchyline({ x: iw * 0.5, y: 0 }, { x: iw, y: ih * 0.25 }, 60, 0.4);\n\n  // 3\n  drawSketchyline({ x: iw, y: ih * 0.25 }, { x: iw, y: ih * 0.75 }, 60, 0.4);\n  drawSketchyline(\n    { x: iw, y: ih * 0.25 },\n    { x: iw * 0.6, y: ih * 0.45 },\n    60,\n    0.4\n  );\n\n  // 4\n  drawSketchyline({ x: iw, y: ih * 0.75 }, { x: iw * 0.5, y: ih }, 60, 0.4);\n  // 5\n  drawSketchyline({ x: iw * 0.5, y: ih }, { x: 0, y: ih * 0.75 }, 60, 0.4);\n  drawSketchyline(\n    { x: iw * 0.5, y: ih },\n    { x: iw * 0.5, y: ih * 0.6 },\n    60,\n    0.4\n  );\n\n  // 6\n  drawSketchyline({ x: 0, y: ih * 0.75 }, { x: 0, y: ih * 0.25 }, 60, 0.4);\n  for (let i = 0; i < 3; i++) {\n    push();\n    translate(iw / 2, ih / 2);\n    rotate(120*i);\n    translate(-iw / 2, -ih / 2);\n    drawSketchyline({ x: iw * 0.5, y: ih * 0.10 }, { x: iw * 0.8, y: ih * 0.25 }, 60, 0.4);\n    drawSketchyline({ x: iw * 0.8, y: ih * 0.25 }, { x: iw * 0.6, y: ih * 0.35 }, 60, 0.4);\n    drawSketchyline({ x: iw * 0.4, y: ih * 0.35 }, { x: iw * 0.2, y: ih * 0.25 }, 60, 0.4);\n    drawSketchyline({ x: iw * 0.2, y: ih * 0.25 }, { x: iw * 0.5, y: ih * 0.10 }, 60, 0.4);\n\n    drawSketchyline({ x: iw * 0.3, y: ih * 0.30 }, { x: iw * 0.4, y: ih * 0.25 }, 60, 0.4);\n    drawSketchyline({ x: iw * 0.4, y: ih * 0.25 }, { x: iw * 0.4, y: ih * 0.45 }, 60, 0.4);\n\n    drawSketchyline({ x: iw * 0.6, y: ih * 0.25 }, { x: iw * 0.7, y: ih * 0.3 }, 60, 0.4);\n    drawSketchyline({ x: iw * 0.6, y: ih * 0.25 }, { x: iw * 0.6, y: ih * 0.45 }, 60, 0.4);\n\n    drawSketchyline({ x: iw * 0.5, y: ih * 0.10 }, { x: iw * 0.5, y: ih * 0.5 }, 60, 0.4);\n\n    pop();\n    \n  }\n\n}\n\nfunction drawSketchyline(point1, point2, granularity, amplitude) {\n  const startP = Object.assign({}, point1);\n  let nextP = Object.assign({}, point1);\n  let prevP = Object.assign({}, point1);\n  const endP = Object.assign({}, point2);\n\n  const vector = { x: endP.x - startP.x, y: endP.y - startP.y };\n  const pRVector = { x: vector.y, y: -vector.x };\n  const pLVector = { x: -vector.y, y: vector.x };\n  const steps = granularity * 2;\n  const scaleFactor = 1 / steps;\n  let randomArray = [];\n  for (let i = 0; i < steps / 2; i++) {\n    const r = random(1);\n    randomArray.push(r);\n  }\n  randomMinusArray = randomArray.map(x => -x);\n  randomArray = randomArray.concat(randomMinusArray);\n  randomArray = shuffle(randomArray);\n  for (let i = 0; i < steps; i++) {\n    nextP.x +=\n      vector.x * scaleFactor +\n      pRVector.x * scaleFactor * randomArray[0] * amplitude;\n    nextP.y +=\n      vector.y * scaleFactor +\n      pRVector.y * scaleFactor * randomArray[0] * amplitude;\n    line(prevP.x, prevP.y, nextP.x, nextP.y);\n    prevP.x = nextP.x;\n    prevP.y = nextP.y;\n    randomArray.splice(0, 1);\n  }\n}"
  },
  {
    "_id": "ZBdrCY2qLwc27wor3",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T17:28:48.494Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xhjexkinluvjegw9tuxc",
        "version": 1556303389,
        "signature": "7d96d4bab79c6b8a2ea6fdb2443a14ce99852abe",
        "width": 800,
        "height": 1524,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T18:29:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 2684471,
        "type": "upload",
        "etag": "2d92a2cd902102444599987ea4f67fb3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556303389/avalanche2019/xhjexkinluvjegw9tuxc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556303389/avalanche2019/xhjexkinluvjegw9tuxc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "320598",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1706297",
          "dar": "200:381"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2037774,
        "duration": 10.538833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Rise and fall...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 100;\nlet m = [];\n\nwindow.onmousedown = () => {\n  // Play the melody!\n\n  const melody = generate();\n  play(melody);\n};\n\nconst cmajor = [\n    'C2', 'D2', 'E2', 'F2', 'G2', 'A2', 'B2',\n    'C3', 'D3', 'E3', 'F3', 'G3', 'A3', 'B3',\n    'C4', 'D4', 'E4', 'F4', 'G4', 'A4', 'B4',\n];\nconst notes = cmajor;\n\nlet degree = 0;\n\nfunction generate() {\n  // choose a starting place\n  degree = randomInt(0, 7);\n\n  // generate some measures\n  const a = generateMeasure('rise');\n  const b = generateMeasure('fall');\n\n  return [].concat(a, b, a, b);\n}\n\nfunction generateMeasure(riseOrFall) {\n  m = [];\n\n  let timeLeft = Tone.Time('1m');\n\n  while (timeLeft.toSeconds() > 0) {\n    // choose note\n    // heavily biased towards climb\n    let change;\n    if (riseOrFall === 'rise') {\n        change = sample([1, 1, -1, 1, 1, 1, 2, 2, -2, 3, 3]);\n    } else {\n        change = sample([-1, -1, 1, -1, -1, -1, -2, -2, 2, -3, -3]);\n    }\n    \n    degree = constrain(degree + change, 0, cmajor.length);\n    const note = notes[degree];\n\n    // choose length\n    let length = Tone.Time('16n');\n    if (Math.random() < 0.5) {\n      length = Tone.Time('8n');\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n\n    // keep track of time\n    timeLeft = Tone.Time(timeLeft - length);\n\n    // add the note to the melody\n    m.push([note, length]);\n  }\n\n  return m;\n}\n\n\n\nfunction play(melody) {\n  console.log(\"---- start ----\");\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n  console.log(\"---- stop -----\");\n}\n\n\nconsole.log('click for music!');\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}"
  },
  {
    "_id": "ZCBjzRHJixtDPF6EH",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T05:56:40.346Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/omm9yuoi8bbdgab8amuj",
        "version": 1555653464,
        "signature": "bce1a56d91c5e4bf742d8963fc49e6803887e883",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T05:57:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 14486073,
        "type": "upload",
        "etag": "d20d7482ae3881335b1bf6667b83f2dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555653464/avalanche2019/omm9yuoi8bbdgab8amuj.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555653464/avalanche2019/omm9yuoi8bbdgab8amuj.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "104982",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "2326943",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 2449354,
        "duration": 47.313933,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T14:04:58.537Z" }
      }
    ],
    "title": "",
    "description": "\"Captured and Drowned \"No code sound experiment."
  },
  {
    "_id": "ZEryt5FhaQox5v5ZJ",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "created_at": { "$date": "2019-03-01T20:28:10.059Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yeqtvn0upybxl3dw9pep",
        "version": 1551472100,
        "signature": "dc665f63299d29547fdf9c2fba584a735905d09e",
        "width": 564,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T20:28:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 9482738,
        "type": "upload",
        "etag": "4643937a271b353f06f687e39258e369",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551472100/avalanche2019/yeqtvn0upybxl3dw9pep.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551472100/avalanche2019/yeqtvn0upybxl3dw9pep.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4108509",
          "dar": "47:40"
        },
        "frame_rate": 60,
        "bit_rate": 4115362,
        "duration": 18.433833,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/hdqmkapp7jfg3gkro7w5",
        "version": 1551472108,
        "signature": "3d5e80b4fe52f193640181fa5d71a261cd62dc78",
        "width": 1284,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T20:28:28Z",
        "tags": [],
        "bytes": 161678,
        "type": "upload",
        "etag": "fd78b7c84b0f6b4bacd62d9d2c7924eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551472108/avalanche2019/hdqmkapp7jfg3gkro7w5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551472108/avalanche2019/hdqmkapp7jfg3gkro7w5.png"
      },
      {
        "public_id": "avalanche2019/aejfypd7t0xc2vjt1rjq",
        "version": 1551472111,
        "signature": "cc879f2dbdf72cd34edad2ac6cdecf2418e62d61",
        "width": 1278,
        "height": 1084,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T20:28:31Z",
        "tags": [],
        "bytes": 115746,
        "type": "upload",
        "etag": "91236f20fa041c2f960fe9106346f945",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551472111/avalanche2019/aejfypd7t0xc2vjt1rjq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551472111/avalanche2019/aejfypd7t0xc2vjt1rjq.png"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": ""
  },
  {
    "_id": "ZHoi7HLugk7oSsvXN",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T19:48:18.025Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/iktvxl2qaveyadwgmpbh",
        "version": 1557431305,
        "signature": "f5b57da1371bb6f310b3d9fa9007db19328f88b8",
        "width": 796,
        "height": 596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T19:48:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 1561698,
        "type": "upload",
        "etag": "af0ef9bd63e634a215175d7d28e5cb9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557431305/avalanche2019/iktvxl2qaveyadwgmpbh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557431305/avalanche2019/iktvxl2qaveyadwgmpbh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1377427",
          "dar": "199:149"
        },
        "frame_rate": 60,
        "bit_rate": 1419725,
        "duration": 8.8,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/oafxsdzhiqkylc3cuvml",
        "version": 1557431308,
        "signature": "83003f3048ee1ccfddb1dc924b409de12056cfe4",
        "width": 796,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-09T19:48:28Z",
        "tags": [],
        "bytes": 27988,
        "type": "upload",
        "etag": "a4c4598d31247f88bbaafeafa01f4114",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557431308/avalanche2019/oafxsdzhiqkylc3cuvml.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557431308/avalanche2019/oafxsdzhiqkylc3cuvml.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing with the Breakout example",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require /microgames/sketches/p5.play.js\n// art from opengameart.org\n// https://opengameart.org/content/a-platformer-in-the-forest\n// http://compform.net/microgames/\n//breakout close (core mechanics)\n//mouse to control the paddle, click to start//breakout close (core mechanics)\n//mouse to control the paddle, click to start\n\nvar paddle, ball, wallTop, wallBottom, wallLeft, wallRight;\nvar bricks;\nvar MAX_SPEED = 12;\nvar WALL_THICKNESS = 2;\nvar BRICK_W = 40;\nvar BRICK_H = 4;\nvar BRICK_MARGIN = 1;\nvar ROWS = 60;\nvar COLUMNS = 18;\n\nfunction setup() {\n  createCanvas(800, 600);\n\n  paddle = createSprite(width/2, height-50, 80, 2);\n  paddle.immovable = true;\n\n  wallTop = createSprite(width/4, -WALL_THICKNESS/2, width+WALL_THICKNESS*2, WALL_THICKNESS);\n  wallTop.immovable = true;\n\n  wallBottom = createSprite(width/2, height+WALL_THICKNESS/2, width+WALL_THICKNESS*2, WALL_THICKNESS);\n  wallBottom.immovable = true;\n\n  wallLeft = createSprite(-WALL_THICKNESS/2, height/2, WALL_THICKNESS, height);\n  wallLeft.immovable = true;\n\n  wallRight = createSprite(width+WALL_THICKNESS/2, height/2, WALL_THICKNESS, height);\n  wallRight.immovable = true;\n\n  bricks = new Group();\n\n  var offsetX = width/2-(COLUMNS-1)*(BRICK_MARGIN+BRICK_W)/2;\n  var offsetY = 80;\n\n  for(var r = 0; r<ROWS; r++)\n    for(var c = 0; c<COLUMNS; c++) {\n      var brick = createSprite(offsetX+c*(BRICK_W+BRICK_MARGIN), offsetY+r*(BRICK_H+BRICK_MARGIN), BRICK_W, BRICK_H);\n      randomColor = color(random(255),random(255),random(255));\n      \n      fill(randomColor);\n      brick.shapeColor = color(random(255),random(255),random(255));\n      bricks.add(brick);\n      brick.immovable = true;\n    }\n\n  //the easiest way to avoid pesky multiple collision is to\n  //have the ball bigger than the bricks\n  ball = createSprite(width/2, height-200, 8, 8);\n  ball.maxSpeed = MAX_SPEED;\n  paddle.shapeColor = ball.shapeColor = color(255, 255, 255);\n\n}\n\nfunction draw() {\n  background(0);\n\n  paddle.position.x = constrain(mouseX, paddle.width/2, width-paddle.width/2);\n\n  ball.bounce(wallTop);\n  ball.bounce(wallBottom);\n  ball.bounce(wallLeft);\n  ball.bounce(wallRight);\n\n  if(ball.bounce(paddle))\n  {\n    var swing = (ball.position.x-paddle.position.x)/3;\n    ball.setSpeed(MAX_SPEED, ball.getDirection()+swing);\n  }\n\n  ball.bounce(bricks, brickHit);\n\n  drawSprites();\n}\n\nfunction mousePressed() {\n  if(ball.velocity.x == 0 && ball.velocity.y == 0)\n    ball.setSpeed(MAX_SPEED, random(90-10, 90+10));\n}\n\nfunction brickHit(ball, brick) {\n  brick.remove();\n}"
  },
  {
    "_id": "ZK9QeJhjrfMvDrsKH",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T19:58:06.054Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kc8d3wyhfuiemkthmq73",
        "version": 1550606298,
        "signature": "c4ddedc0f51164398b08374bcf78fe5a362bbd73",
        "width": 1440,
        "height": 800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T19:58:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 2160653,
        "type": "upload",
        "etag": "723b1082fb466bd3a605ed561144bc0d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550606298/avalanche2019/kc8d3wyhfuiemkthmq73.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550606298/avalanche2019/kc8d3wyhfuiemkthmq73.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "4189750",
          "dar": "9:5"
        },
        "frame_rate": 60,
        "bit_rate": 4198839,
        "duration": 4.116667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T20:22:00.718Z" }
      }
    ],
    "title": "",
    "description": "Using Lerp Color with Noise adding high frequency noise.  (Just have to turn 90 degrees)",
    "inspiration_name": "Brooke's Rothko Generator",
    "code": "var elevation;\nvar t;\nvar  offx=0;\nvar offy=0.025;\n\nfunction setup() {\n  createCanvas(400, 720);\n  background(255);\n  noStroke();\n  //noLoop();\n  \n}\n\nfunction draw() {\n  background(255);\n  // translate (width/3, height/3);\n  // rotate (PI/2);\n  // translate (-width/3, -height/3);\n  \n    for (let x = 15; x < width - 5; x += 1.5) {\n      //for (let y = 15; y < width - 5; y += 1.5) {\n        let offsetX = 0;\n        let offsetY = 0;\n      \n  offx +=0.01;\n  offy +=0.01;\n      \n  from = color(255*noise(offx), 29, 0, 0.2 * 255);\n  to = color(255, 163, 25, 0.2 * 255);\n  c1 = lerpColor(from, to, .33);\n  c2 = lerpColor(from, to, .66);\n  \n      for (var i = 0; i < 15; i++) {\n    \tfill(from);\n        \n    quad(random(-40, 220), random(height),\n         random(-40, 220), random(height),\n         random(-40, 220), random(height),\n        random(-40, 220), random(height));\n    fill(c1);\n    quad(random(140, 380), random(height),\n         random(140, 380), random(height),\n         random(140, 380), random(height), \n         random(140, 380), random(height));\n    fill(c2);\n    quad(random(320, 580), random(height), \n         random(320, 580), random(height),\n         random(320, 580), random(height), \n         random(320, 580), random(height));\n    fill(to);\n    quad(random(500, 760), random(height), \n         random(500, 760), random(height),\n         random(500, 760), random(height), \n         random(500, 760), random(height));\n        \n        \n        // height (very high frequency becomes fully random due to aliasing)\n        //offsetX += noise(x * 100) * 20;\n  }\n  frameRate(2);\n  \n    }\n}"
  },
  {
    "_id": "ZLdrwfnd3YJjPRPWm",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T06:51:26.939Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wkex6bstqsqgvvowkrvh",
        "version": 1550819282,
        "signature": "a1bdd918ccd252d1e3c59aed37983620eb756c22",
        "width": 1600,
        "height": 1244,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T07:08:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 11777307,
        "type": "upload",
        "etag": "5d9beb0c2ab975fc39b5516022f271eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550819282/avalanche2019/wkex6bstqsqgvvowkrvh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550819282/avalanche2019/wkex6bstqsqgvvowkrvh.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Baseline",
          "bit_rate": "2814579",
          "dar": "247:192"
        },
        "frame_rate": 15,
        "bit_rate": 2815264,
        "duration": 33.466992,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/v2cecynqpzp1bdjl79d8",
        "version": 1550822791,
        "signature": "159e669a4aad26d15bf707a18cd6d2ebc7b780d2",
        "width": 1600,
        "height": 1244,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T08:06:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 15798882,
        "type": "upload",
        "etag": "7ab7ca98a9f1887eb948d168673e570d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550822791/avalanche2019/v2cecynqpzp1bdjl79d8.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550822791/avalanche2019/v2cecynqpzp1bdjl79d8.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "5557777",
          "dar": "400:311"
        },
        "frame_rate": 15,
        "bit_rate": 5559723,
        "duration": 22.733333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Spirograph meets noise"
  },
  {
    "_id": "ZMGnnLXYDPZked2CC",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-01-28T14:58:21.014Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qzzogjaurnhat1jogmnb",
        "version": 1548687532,
        "signature": "34ad8a05e26488bd227dc1cdda77335ce86b7f2a",
        "width": 1729,
        "height": 2304,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T14:58:52Z",
        "tags": [],
        "bytes": 2070742,
        "type": "upload",
        "etag": "7ecfc225974a043c7eb77dbd56820f46",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548687532/avalanche2019/qzzogjaurnhat1jogmnb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548687532/avalanche2019/qzzogjaurnhat1jogmnb.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:58.718Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:02:25.186Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Dot tiles, Illustrator (p5 code near complete, but not quite)",
    "inspiration_name": "Yayoi Kusama",
    "inspiration_url": "https://en.wikipedia.org/wiki/Yayoi_Kusama"
  },
  {
    "_id": "ZPCsaSNCdLcuPiFw7",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T18:17:14.718Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r4bkaty7wvf3tey9soto",
        "version": 1549563444,
        "signature": "e93b3632e34584de5edb653eeb2bd2dd5da14ad2",
        "width": 1146,
        "height": 398,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T18:17:24Z",
        "tags": [],
        "bytes": 27443,
        "type": "upload",
        "etag": "4f914c56a4398c11be51135d6fc60fa8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549563444/avalanche2019/r4bkaty7wvf3tey9soto.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549563444/avalanche2019/r4bkaty7wvf3tey9soto.png"
      },
      {
        "public_id": "avalanche2019/xn4ehmomzpebftkeanbm",
        "version": 1549563447,
        "signature": "567fc031827273a0af00c833a35b74d6e242795f",
        "width": 1142,
        "height": 408,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T18:17:27Z",
        "tags": [],
        "bytes": 29884,
        "type": "upload",
        "etag": "25a5235317f26cb5edd0086a4581ebcd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549563447/avalanche2019/xn4ehmomzpebftkeanbm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549563447/avalanche2019/xn4ehmomzpebftkeanbm.png"
      },
      {
        "public_id": "avalanche2019/aui0lderhlwknlr8yjx7",
        "version": 1549563452,
        "signature": "70270eed84cc86f0f7b4055398da322883b0688b",
        "width": 1140,
        "height": 398,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T18:17:32Z",
        "tags": [],
        "bytes": 32182,
        "type": "upload",
        "etag": "f654a3727e32f5de681a7a93f963d742",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549563452/avalanche2019/aui0lderhlwknlr8yjx7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549563452/avalanche2019/aui0lderhlwknlr8yjx7.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Based on an example in class (credit Justin) I played around with the set of a piano keyboard and the random functions.",
    "inspiration_name": "Piano"
  },
  {
    "_id": "ZW3Kf97vyoABbsaoS",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Animation",
    "created_at": { "$date": "2019-03-31T19:02:12.721Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jmdsqg2vfbbf8ba3cpby",
        "version": 1554062277,
        "signature": "1992b1b27a1411086dd8cf3ae257065699a9cdcf",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-31T19:57:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 2139911,
        "type": "upload",
        "etag": "eecf2e903ae2722571cfe44021e1f5df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554062277/avalanche2019/jmdsqg2vfbbf8ba3cpby.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554062277/avalanche2019/jmdsqg2vfbbf8ba3cpby.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "5219704",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 5611654,
        "duration": 3,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Draft 1",
    "inspiration_name": "Door Credit",
    "inspiration_url": "https://pngtree.com/freepng/chinese-traditional-gold-inlaid-hollow-carving-dahongmen_3477702.html"
  },
  {
    "_id": "ZWiehhRy7BGTWSAW4",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T13:52:14.835Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pw3kj00uva4sgnulvm5j",
        "version": 1555681941,
        "signature": "138c5e508eb7bc0f319df053b7f2c1c5df9da1bf",
        "width": 502,
        "height": 498,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T13:52:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 5673003,
        "type": "upload",
        "etag": "792b84119c604e7b761abb6b72fc2298",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555681941/avalanche2019/pw3kj00uva4sgnulvm5j.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555681941/avalanche2019/pw3kj00uva4sgnulvm5j.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "202254",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2826288",
          "dar": "251:249"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3341155,
        "duration": 13.583333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T15:38:25.037Z" }
      }
    ],
    "title": "",
    "description": "Thumbs by Shel Silverstein. Inspired by one of Tinsley's sketches.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\nlet sound;\nlet fft;\n\nfunction preload() {\n    mySound = loadSound('24 Thumbs.m4a');\n}\n\nfunction setup() {\n    createCanvas(500, 500);\n    colorMode(HSB, 255);\n    fft = new p5.FFT(0.1, 256);\n    fft.setInput(sound);\n    \n    \n    startButton = createButton('start');\n    startButton.mousePressed(start);\n\n    stopButton = createButton('stop');\n    stopButton.mousePressed(stop);\n}\n\nfunction start() {\n    mySound.loop(1, 1, 1, 0, 24);\n}\n\nfunction stop() {\n    mySound.pause();\n}\n\nfunction draw() {\n    blendMode(BLEND);\n    background(180,160,160);\n    let spectrum = fft.analyze();\n    //noStroke();\n    blendMode(SCREEN);\n    for (i = 0; i < spectrum.length; i++) {\n        let x = map(i, 0, spectrum.length - 1, width / 2, width);\n        let w = width / spectrum.length;\n        let hue = map(i, 0, spectrum.length - 1, 0, 255);\n        let sat = 120;\n        let diameter = map(spectrum[i], 0, 255, 0, height );\n        let br = spectrum[i];\n        fill(hue, sat, 21);\n        ellipse(x, height / 2, diameter, diameter);\n        x = map(i, 0, spectrum.length, width / 2, 0);\n        ellipse(x, height /2, diameter, diameter);\n\n    }\n}"
  },
  {
    "_id": "ZcXL6mcMY8XjnqENu",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Music",
    "created_at": { "$date": "2019-05-15T05:47:56.684Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ywvmqkwopwekj98zq5l0",
        "version": 1557899281,
        "signature": "7bf65e30ea400782d1c720d24ecc16bf28f632f2",
        "width": 1256,
        "height": 460,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-15T05:48:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 4125122,
        "type": "upload",
        "etag": "5ad61ce618e3c83ed781aae803fb5239",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557899281/avalanche2019/ywvmqkwopwekj98zq5l0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557899281/avalanche2019/ywvmqkwopwekj98zq5l0.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "241241",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2099226",
          "dar": "314:115"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2348823,
        "duration": 14.05,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "trying to understand \"gain\""
  },
  {
    "_id": "Zd9Hou99FthtkhLmN",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T19:26:47.019Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rokyrkowzk3fm4kymtyv",
        "version": 1555097214,
        "signature": "14e836e5f8ee7672c5286b013f6ba34f488d3655",
        "width": 926,
        "height": 760,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:26:54Z",
        "tags": [],
        "bytes": 88573,
        "type": "upload",
        "etag": "e73770615aa4554d958d4a036ff9f528",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555097214/avalanche2019/rokyrkowzk3fm4kymtyv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555097214/avalanche2019/rokyrkowzk3fm4kymtyv.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T23:56:58.64Z" }
      }
    ],
    "title": "",
    "description": "Random description of animals using python"
  },
  {
    "_id": "ZdsG9dNuuLgW5jLLq",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T07:23:13.132Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bwjsd95kcedm7t3chr1r",
        "version": 1550215408,
        "signature": "9723c47bc0253e5107408752b8bf4bcc8b843ed8",
        "width": 1080,
        "height": 1076,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T07:23:28Z",
        "tags": [],
        "bytes": 50864,
        "type": "upload",
        "etag": "f6cff18725d2b01616c654f28094be5d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550215408/avalanche2019/bwjsd95kcedm7t3chr1r.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550215408/avalanche2019/bwjsd95kcedm7t3chr1r.png"
      },
      {
        "public_id": "avalanche2019/nn9wnevpuyjy9pjcaxvq",
        "version": 1550215411,
        "signature": "15ce0124a9c99c62af1d5f26cfbcbc2e21a79b05",
        "width": 1076,
        "height": 1076,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T07:23:31Z",
        "tags": [],
        "bytes": 163081,
        "type": "upload",
        "etag": "b17bf1e4b6bedfdd31b9d5e2af3ef7cb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550215411/avalanche2019/nn9wnevpuyjy9pjcaxvq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550215411/avalanche2019/nn9wnevpuyjy9pjcaxvq.png"
      },
      {
        "public_id": "avalanche2019/pjkgyoprnbmwxec63tcq",
        "version": 1550215415,
        "signature": "142544a1f2b4309555f4e043b0cf488fe1ff8150",
        "width": 1078,
        "height": 1078,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T07:23:35Z",
        "tags": [],
        "bytes": 436853,
        "type": "upload",
        "etag": "32d1848306af263e70e817ac9ce5453f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550215415/avalanche2019/pjkgyoprnbmwxec63tcq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550215415/avalanche2019/pjkgyoprnbmwxec63tcq.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Factorial Tree\n- \nAble to change height and ratio",
    "inspiration_name": "Daniel Shiffman",
    "inspiration_url": "https://github.com/CodingTrain/website/tree/master/CodingChallenges"
  },
  {
    "_id": "ZfNk2HRc6FQJ6Hj5x",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T05:04:22.924Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xyl1y0qam70wudjh6xd7",
        "version": 1549515870,
        "signature": "b6b9e67919c878d05bd0e6479a7095b1181f768c",
        "width": 3360,
        "height": 1880,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T05:04:30Z",
        "tags": [],
        "bytes": 578074,
        "type": "upload",
        "etag": "334f1457d9e2ec4b78488c69aed7702f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549515870/avalanche2019/xyl1y0qam70wudjh6xd7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549515870/avalanche2019/xyl1y0qam70wudjh6xd7.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T05:12:38.254Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-07T05:19:46.973Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T02:12:20.153Z" }
      }
    ],
    "title": "",
    "description": "Perspective scarcity (low bias randomness, overlapping is sometimes wrong)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nconst w = window.innerWidth;\nconst h = window.innerHeight;\nconst myB = 0.96;\nconst shadows = true;\nlet rows = 15;\nlet cols = 70;\nlet startSize = 8;\nlet perspectiveFactor = 10;\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  backgroundColor = color(0.9, 0.1, 0.2);\n  ballColors = [color(0.95, 0.6, 1), color(0.5, 0.6, 1), color(0.15, 0.6, 1)];\n\n  highlightColor = color(0, 0, 1, 0.9);\n  shadingColor = color(0, 0, 0, 0.05);\n  angleMode(DEGREES);\n  createCanvas(w, h);\n  noStroke();\n\n  translate(0, 20);\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < cols; col++) {\n      let xPos = (col * w) / cols + random(-200, 300);\n      const xRandomness = random(-10, 10);\n      xPos += xRandomness;\n      let yPos = row * row * rows * 0.45;\n      const yRandomness = random(0, 10);\n      yPos += yRandomness;\n      let size = startSize + perspectiveFactor * row;\n      const sizeRandomness = random(-10, 10);\n      const randomColorPicker = floor(random(3));\n      const color = ballColors[randomColorPicker];\n      const frequencyCondition =\n        min(random(1), random(1), random(1)) >= row / rows;\n      // console.log(col, col / cols);\n\n      if (frequencyCondition) {\n        drawBall(xPos, yPos, size, color);\n      }\n    }\n  }\n}\n\nfunction draw() {}\n\nfunction drawBall(x, y, r, myfill) {\n  push();\n  translate(x, y);\n  // shadow\n  if (shadows) {\n    push();\n    fill(shadingColor);\n    ellipse(0, r, 2 * r, 0.1 * r);\n    pop();\n  }\n  // base circle\n  fill(myfill);\n  circle(0, 0, r);\n  drawReflections(0, 0, r);\n  drawProperArc(r, r * 0.25, 60, shadingColor);\n  drawProperArc(r * 0.9, r * 0.1, -120, highlightColor);\n  pop();\n}\n\nfunction drawReflections(x, y, r) {\n  push();\n  fill(highlightColor);\n  circle(x - 0.3 * r, y - 0.4 * r, 0.08 * r);\n  circle(x - 0.44 * r, y - 0.24 * r, 0.04 * r);\n  // circle(x - 0.3 * r, y + 0.5 * r, 0.04 * r);\n  pop();\n}\n\nfunction drawProperArc(radius, progress, rotation, myfill) {\n  push();\n  rotate(rotation);\n  fill(myfill);\n  beginShape();\n  // Start, mid bottom\n  vertex(0, radius);\n  // Outer (left)\n  bezierVertex(\n    +radius * myB,\n    radius,\n    +radius,\n    0 + (1 - myB * 0.98) * radius,\n    +radius,\n    0\n  );\n  bezierVertex(\n    +radius,\n    -radius * myB,\n    0 + (1 - myB) * radius * 0.98,\n    -radius,\n    0,\n    -radius\n  );\n  // Inner (right)\n  bezierVertex(\n    (+radius - progress) * myB,\n    -radius + (1 - myB * 0.98) * radius,\n    +radius - progress,\n    0 - (1 - myB * 0.98) * radius,\n    0 + radius - progress,\n    0\n  );\n  bezierVertex(\n    (+radius - progress) * myB,\n    radius - (1 - myB * 0.98) * radius,\n    0,\n    radius,\n    0,\n    radius\n  );\n  endShape();\n  pop();\n}"
  },
  {
    "_id": "ZgCyzZRqz7X5AukRj",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:44:19.963Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yo8z4opc92gi8erbjjxb",
        "version": 1557517471,
        "signature": "909e90ed621d6fb0f7ee4a2804da652783e0bab6",
        "width": 1140,
        "height": 1056,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-10T19:44:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 2303750,
        "type": "upload",
        "etag": "d7428b2d0e1d4f5dce6c66634c15be4f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557517471/avalanche2019/yo8z4opc92gi8erbjjxb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557517471/avalanche2019/yo8z4opc92gi8erbjjxb.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "194343",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "982100",
          "dar": "95:88"
        },
        "is_audio": false,
        "frame_rate": 20,
        "bit_rate": 1179293,
        "duration": 15.627029,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Game 3",
    "code": "// p5 link: https://editor.p5js.org/uryuu1002/sketches/Hd4zs-P_n\n\n\nvar girl;\n\n//it's advisable (but not necessary) to load the images in the preload function\n//of your sketch otherwise they may appear with a little delay\nfunction preload() {\n\n  //create an animation from a sequence of numbered images\n  //pass the first and the last file name and it will try to find the ones in between\n  girl = loadAnimation('frames/frame_001.png','frames/frame_002.png','frames/frame_003.png','frames/frame_004.png','frames/frame_005.png','frames/frame_006.png','frames/frame_007.png','frames/frame_008.png','frames/frame_009.png','frames/frame_010.png','frames/frame_011.png','frames/frame_012.png','frames/frame_013.png','frames/frame_014.png','frames/frame_015.png');\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n}\n\nfunction draw() {\n  background(0);\n  animation(girl, width/2, height/2-50);\n  fill(255);\n  noStroke();\n  textSize(72);\n  textAlign(CENTER, CENTER);\n  text(\"Loading...\", width/2, height-150);\n\n}"
  },
  {
    "_id": "ZgRmbvg9Cd3PgyQ2p",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T17:11:20.988Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zzxrveoehjciki7eliaa",
        "version": 1555089135,
        "signature": "72290dd3023613a8fe2e2348c57c0229a75bce74",
        "width": 1216,
        "height": 176,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T17:12:15Z",
        "tags": [],
        "bytes": 39578,
        "type": "upload",
        "etag": "6135de075a28a0f85b12e4bb015fb81b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555089135/avalanche2019/zzxrveoehjciki7eliaa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555089135/avalanche2019/zzxrveoehjciki7eliaa.png"
      },
      {
        "public_id": "avalanche2019/urmzmsx3ahz4xxa1t9th",
        "version": 1555089139,
        "signature": "38d6c050276fb5e99c8bf9f83ff2b437fa256b4d",
        "width": 1230,
        "height": 204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T17:12:19Z",
        "tags": [],
        "bytes": 25313,
        "type": "upload",
        "etag": "add548756959011b150a6b9c590addb2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555089139/avalanche2019/urmzmsx3ahz4xxa1t9th.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555089139/avalanche2019/urmzmsx3ahz4xxa1t9th.png"
      },
      {
        "public_id": "avalanche2019/kl9ci3sraenogtcbbxag",
        "version": 1555089142,
        "signature": "3a2817da70b972b7f7cc77b1b470f06d7a720575",
        "width": 1216,
        "height": 188,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T17:12:22Z",
        "tags": [],
        "bytes": 24621,
        "type": "upload",
        "etag": "186b5c0ff6e6a172cb0018375d01e683",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555089142/avalanche2019/kl9ci3sraenogtcbbxag.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555089142/avalanche2019/kl9ci3sraenogtcbbxag.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Using class ex to mix in Cher's tweets with EE Cummings' poems.\nGoing to try to make a twitter bot out of this."
  },
  {
    "_id": "ZkyN3EiuNkQym3fGa",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T19:18:29.025Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nyeslp3tcqvdpmhrj4ey",
        "version": 1553887115,
        "signature": "476b736d7bc2f5f13c84cb87738758b68cf93c9f",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:18:35Z",
        "tags": [],
        "bytes": 1047164,
        "type": "upload",
        "etag": "f7f232e179750feb9476f56ba1579636",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553887115/avalanche2019/nyeslp3tcqvdpmhrj4ey.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553887115/avalanche2019/nyeslp3tcqvdpmhrj4ey.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Hokusai poster print out"
  },
  {
    "_id": "Zr9EdjdZnioqEiuWM",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T08:39:43.347Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ppz9gp755awhpfxgqywm",
        "version": 1557477587,
        "signature": "61da8cd272a7fb65cdac4bfe82148b8f0f289090",
        "width": 1176,
        "height": 956,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T08:39:47Z",
        "tags": [],
        "bytes": 93748,
        "type": "upload",
        "etag": "0ecd692949ebf163aaeac70c50452829",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557477587/avalanche2019/ppz9gp755awhpfxgqywm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557477587/avalanche2019/ppz9gp755awhpfxgqywm.png"
      },
      {
        "public_id": "avalanche2019/uijgculd2eyudbksdpob",
        "version": 1557477591,
        "signature": "f09db564bc84468d0183d850e4173b64c032b851",
        "width": 1080,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T08:39:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 2145529,
        "type": "upload",
        "etag": "a77f1b2baf1a66eaab42df46b9b068b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557477591/avalanche2019/uijgculd2eyudbksdpob.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557477591/avalanche2019/uijgculd2eyudbksdpob.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "247683",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1023042",
          "dar": "3:2"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1279321,
        "duration": 13.416667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Iteration 1. Build your own shrine. Drag and drop taking way too long"
  },
  {
    "_id": "ZvKdS4TgzdWL9kQ6m",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-17T04:34:37.808Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ark3ih6phprchanzhwv9",
        "version": 1555475869,
        "signature": "4fd5eadb4a2d1673d036ba1029f550401dbe3abd",
        "width": 640,
        "height": 360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-17T04:37:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 2147890,
        "type": "upload",
        "etag": "2692eac5fc13e49e9d01e18c1b3754d5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555475869/avalanche2019/ark3ih6phprchanzhwv9.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555475869/avalanche2019/ark3ih6phprchanzhwv9.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "161100",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "2789278",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 2959647,
        "duration": 5.8058,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-04-17T21:48:33.571Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T01:44:38.336Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T03:35:27.347Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T21:32:48.421Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:55:30.627Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2020-12-01T17:56:06.745Z" }
      }
    ],
    "title": "",
    "description": "No coding involved here, but did start playing around with sound + visuals. Will maybe build this out a little more tomorrow.\n\nSounds come from a package of sound effects shared with us first years during MFADT Bootcamp...I'm actually not sure where they're from :/"
  },
  {
    "_id": "ZyibReecmh6Py8gw4",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T13:18:36.454Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/whldeww0jaawid7y7ze5",
        "version": 1551791926,
        "signature": "b9d1cb3b42c35728ba74a0dd32312246222cd00d",
        "width": 531,
        "height": 531,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-05T13:18:46Z",
        "tags": [],
        "bytes": 81563,
        "type": "upload",
        "etag": "0327831c2d169c1cac165a974e597df0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551791926/avalanche2019/whldeww0jaawid7y7ze5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551791926/avalanche2019/whldeww0jaawid7y7ze5.jpg"
      },
      {
        "public_id": "avalanche2019/rguxskuxzm7ahs1ye7za",
        "version": 1551791929,
        "signature": "a1e0f33e379d988e358a5415deed2dad8fe754a2",
        "width": 425,
        "height": 425,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-05T13:18:49Z",
        "tags": [],
        "bytes": 20826,
        "type": "upload",
        "etag": "d96c83439f141974cb5e9357e67b3398",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551791929/avalanche2019/rguxskuxzm7ahs1ye7za.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551791929/avalanche2019/rguxskuxzm7ahs1ye7za.jpg"
      },
      {
        "public_id": "avalanche2019/ueuyidimademhqxqqwuy",
        "version": 1551791932,
        "signature": "cecbe1d42fa65d342a24bed2b30148a83fb19441",
        "width": 527,
        "height": 528,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-05T13:18:52Z",
        "tags": [],
        "bytes": 41991,
        "type": "upload",
        "etag": "a6b3a68eecd241fb0526c10dcde86d21",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551791932/avalanche2019/ueuyidimademhqxqqwuy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551791932/avalanche2019/ueuyidimademhqxqqwuy.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "I have used pixel detection to recreate a different version of Mondrian painting. \nEach pixel is mapped to the image, and the color changes as per the conditions.\n\nPS. I wanted to create Mondrian painting using particles, but the image was too big to be loaded and my browser kept crashing.",
    "inspiration_name": "Image Pattern",
    "inspiration_url": "http://compform.net/pixels/",
    "code": "// IMAGE PATTERN BY CHANGING COLORS\n\nvar referenceImage;\nvar referenceImageColors; // pixel color values of the reference image\n\nfunction preload() {\n    // referenceImage = loadImage('mondrian.jpg');\n    referenceImage = loadImage('reference.jpg');\n}\n\n\nfunction setup() {\n    createCanvas(425, 425);\n}\n\n\nfunction draw() {\n    background(51);\n\n    for (var y = 0; y < referenceImage.height; y++) {\n        for (var x = 0; x < referenceImage.width; x++) {\n            referenceImageColors = referenceImage.get(x, y);\n\n            var r = red(referenceImageColors);\n            var g = green(referenceImageColors);\n            var b = blue(referenceImageColors);\n\n            var changedColors;\n            if (r === 255) {\n                changedColors = color(255, 0, 0);\n            } else {\n                changedColors = color(0, 0, 255);\n            }\n\n            referenceImage.set(x, y, changedColors);\n            referenceImage.updatePixels();\n        }\n    }\n\n    noSmooth();\n    image(referenceImage, 0, 0, width, height);\n\n\n    noLoop();\n\n}"
  },
  {
    "_id": "Zz95AdwMCtkwshBMS",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:50:05.532Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/esdp5xchnwkyugqcghkh",
        "version": 1552668614,
        "signature": "3190279ef515f732715e390a64fe8a48fd09638f",
        "width": 300,
        "height": 300,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:50:14Z",
        "tags": [],
        "bytes": 35654,
        "type": "upload",
        "etag": "a2facac6c568ebd12a50d38952e48053",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552668614/avalanche2019/esdp5xchnwkyugqcghkh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552668614/avalanche2019/esdp5xchnwkyugqcghkh.png"
      },
      {
        "public_id": "avalanche2019/y8fzzauss7kbaiuysipt",
        "version": 1552668623,
        "signature": "7dc7659e19a944f3e2a8aa3fa1b1b674fc7645d6",
        "width": 300,
        "height": 300,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:50:23Z",
        "tags": [],
        "bytes": 54645,
        "type": "upload",
        "etag": "a56700aaa05ffb06ba30dae10c39ab89",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552668623/avalanche2019/y8fzzauss7kbaiuysipt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552668623/avalanche2019/y8fzzauss7kbaiuysipt.png"
      },
      {
        "public_id": "avalanche2019/jtbfgwnmh1dxenxidgoy",
        "version": 1552668632,
        "signature": "76ff69369186d38d9b9bef2fe7a9bfcc856707ce",
        "width": 300,
        "height": 300,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:50:32Z",
        "tags": [],
        "bytes": 14885,
        "type": "upload",
        "etag": "47c1ea775ef8304dd2d24be9e66185ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552668632/avalanche2019/jtbfgwnmh1dxenxidgoy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552668632/avalanche2019/jtbfgwnmh1dxenxidgoy.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "played with repeat function",
    "inspiration_url": "http://ecs.fullerton.edu/~ic07/javascript-turtle/"
  },
  {
    "_id": "a3AmNo8X4DLNkeqTz",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T15:51:11.781Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/avdwr7s6qgv2x34lnkd5",
        "version": 1549037833,
        "signature": "f8936ecd713d0e532902c1f5749d23d6777f9ded",
        "width": 1188,
        "height": 1200,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T16:17:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 4525242,
        "type": "upload",
        "etag": "e5b5bc6a973434e5f56483059180af3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549037833/avalanche2019/avdwr7s6qgv2x34lnkd5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549037833/avalanche2019/avdwr7s6qgv2x34lnkd5.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "310069",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1652044",
          "dar": "99:100"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2066359,
        "duration": 17.519667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:51.655Z" }
      }
    ],
    "title": "",
    "description": "Tile Generator 3: Javascript using images of illustrator images from previous sketch (Andrew's design) \n\nCode draws images based on previous tile instead of  grid\n\n**cannot get rule for top-to-bottom stacking to work properly, check out my code, it's the part commented out near the bottom. Logically, I cannot think of why it wouldn't work.   If anyone had ideas for how I can do this let me know",
    "code": "var drawX;\nvar drawY;\nvar tileLength;\nvar canvasSize;\n\nvar rowJump;\nvar rowCounter;\n\nvar counter;\n\nvar topOpen;\nvar bottomOpen;\nvar leftOpen;\nvar rightOpen;\n\nvar images = [];\nvar tiles = [];\n\n\nfunction preload() {\n\n    // open on one side\n    right = loadImage(\"RIGHT.jpg\")\n    //open on two sides (across from one another)\n    leftRight = loadImage(\"LEFT_RIGHT.jpg\")\n\n    //open on two sides (next to each other)\n    leftBottom = loadImage(\"LEFT_BOTTOM.jpg\")\n\n    //open on three sides\n    leftBottomTop = loadImage(\"LEFT_BOTTOm_TOP.jpg\")\n\n}\n\nfunction setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n\n    drawX = 0;\n    drawY = 0;\n    tileLength = 60;\n    canvasSize = 600;\n\n    counter = 0;\n    rowJump = false\n    rowCounter = 1;\n    newTable = 0;\n\n    // assign them values of if sides are open or closed \n    let r = {\n        img: right,\n        rightOpen: true,\n        leftOpen: false,\n        topOpen: false,\n        bottomOpen: false,\n    };\n    images[0] = r;\n    let lR = {\n        img: leftRight,\n        rightOpen: true,\n        leftOpen: true,\n        topOpen: false,\n        bottomOpen: false,\n    };\n    images[1] = lR;\n\n    let lB = {\n        img: leftBottom,\n        rightOpen: false,\n        leftOpen: true,\n        topOpen: false,\n        bottomOpen: true,\n    };\n    images[2] = lB;\n    let lBT = {\n        img: leftBottomTop,\n        rightOpen: false,\n        leftOpen: true,\n        topOpen: true,\n        bottomOpen: true,\n    };\n    images[3] = lBT;\n\n\n\n}\n\nwindow.draw = function () {\n    //update the tile position \n    if (drawX > canvasSize - tileLength) {\n        rowJump = true;\n        drawX = 0;\n        rowCounter++;\n        drawY += tileLength;\n    }\n\n    if (drawY > canvasSize - tileLength) {\n        rowJump = true;\n        drawY = 0;\n        drawX = 0;\n    }\n\n    //randomly choose one of the images from the array \n    let random = Math.floor(4 * Math.random());\n\n    //check if thils random image selectoin works in the current tile scheme \n\n    //if the tile to the left's right tile is the same as the random selected image cooresponding side\n    //use that else generate a new random image \n    if (counter > 0) {\n        while (tiles[counter - 1].rightOpen != images[random].leftOpen) {\n            random = Math.floor(4 * Math.random());\n        }\n        //&& counter <= 9\n    }\n    // if (counter > 9) {\n    //     while (tiles[counter - 1].rightOpen != images[random].leftOpen || tiles[counter - 10].bottomOpen != images[random].topOpen) {\n    //         random = Math.floor(4 * Math.random());\n    //     }\n    //     // while (tiles[counter - 10].bottomOpen != images[random].topOpen) {\n    //     //     random = Math.floor(4 * Math.random());\n    //     // }\n    // }\n\n\n    let draw = images[random].img;\n    image(draw, drawX, drawY, 60, 60);\n\n    //add this tile to the array of tiles \n    tiles.push(images[random]);\n\n    //increase tiles poition and counter\n    drawX += tileLength;\n    counter++;\n}"
  },
  {
    "_id": "a3u48vdxDKtgZ7TnW",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-24T03:48:11.733Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-25T21:31:06.81Z" }
      }
    ],
    "title": "",
    "description": "Finished the in-class example melody and threw on some effects",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\nvar reverb = new Tone.JCReverb(0.75).connect(Tone.Master);\nvar delay = new Tone.FeedbackDelay(0.7);\nvar autoWah = new Tone.AutoWah(50, 6, -30);\nvar dist = new Tone.Distortion(1);\nvar synth = new Tone.DuoSynth().chain(delay, reverb, autoWah, dist);\nautoWah.Q.value = 6;\n\nTone.Transport.bpm.value = 185;\n\nconst melody = [\n  [\"E4\", \"4n.\"],\n  [\"D4\", \"8n\"],\n  [\"C4\", \"4n\"],\n  [\"D4\", \"4n\"],\n\n  [\"E4\", \"4n\"],\n  [\"E4\", \"4n\"],\n  [\"E4\", \"4n\"],\n\n  [\"rest\", \"4n\"],\n\n  [\"D4\", \"4n\"],\n  [\"D4\", \"4n\"],\n  [\"D4\", \"4n\"],\n\n  [\"rest\", \"4n\"],\n\n  [\"E4\", \"4n\"],\n  [\"G4\", \"4n\"],\n  [\"G4\", \"4n\"],\n\n  [\"rest\", \"4n\"],\n\n  [\"E4\", \"4n.\"],\n  [\"D4\", \"8n\"],\n  [\"C4\", \"4n\"],\n  [\"D4\", \"4n\"],\n\n  [\"E4\", \"4n\"],\n  [\"E4\", \"4n\"],\n  [\"E4\", \"4n\"],\n  [\"E4\", \"4n\"],\n  [\"D4\", \"4n\"],\n  [\"D4\", \"4n\"],\n  [\"E4\", \"4n\"],\n  [\"D4\", \"4n\"],\n  [\"C4\", \"4n\"]\n];\n\nwindow.onmousedown = e => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log(\"click for music!\");",
    "inspiration_name": "mary had a little lamb",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?/music/tone_sketches/simple_song.js"
  },
  {
    "_id": "a4xXZ39urhAH8ZDJt",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T14:49:46.984Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ny0tba5gpradek4tpn7z",
        "version": 1550242193,
        "signature": "233d0bf785a6ccd2930f0e06fb8610f58b345d71",
        "width": 456,
        "height": 464,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T14:49:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 548782,
        "type": "upload",
        "etag": "bd5f6061f0d6e8cbc38f210622cd0356",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550242193/avalanche2019/ny0tba5gpradek4tpn7z.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550242193/avalanche2019/ny0tba5gpradek4tpn7z.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "331382",
          "dar": "57:58"
        },
        "frame_rate": 60,
        "bit_rate": 338580,
        "duration": 12.966667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Women face (vec. from <\"https://www.freepik.com/free-photos-vectors/background\">Background vector created by brgfx - www.freepik.com)"
  },
  {
    "_id": "a5iq5dtRGPGm3tZ35",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T04:52:47.883Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qx2zzslz8lr3yh2dqu1i",
        "version": 1554439975,
        "signature": "e847659f238470b025121700d3d3171135ee84aa",
        "width": 1184,
        "height": 1184,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T04:52:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 366906,
        "type": "upload",
        "etag": "a0a4d7b363f1f8f0b12144c3584a77d8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554439975/avalanche2019/qx2zzslz8lr3yh2dqu1i.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554439975/avalanche2019/qx2zzslz8lr3yh2dqu1i.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "250722",
          "dar": "1:1"
        },
        "frame_rate": 20,
        "bit_rate": 251952,
        "duration": 11.65,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Infinite color strip"
  },
  {
    "_id": "a8xtQMd8YmF4u3Li2",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T15:57:51.902Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pvyd8vwkinty9wrihzhc",
        "version": 1556899096,
        "signature": "ee616930a8bc3dc83f80324b2fc8633195093263",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-03T15:58:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 4502133,
        "type": "upload",
        "etag": "a4db2eaed2f1586a1ce3cf72d117bf24",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556899096/avalanche2019/pvyd8vwkinty9wrihzhc.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556899096/avalanche2019/pvyd8vwkinty9wrihzhc.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "7901435",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 8156038,
        "duration": 4.366667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/z7uxo3myrahwz6nw0nso",
        "version": 1556899112,
        "signature": "9071a823bb182329ddec222c179f4e43e614f094",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T15:58:32Z",
        "tags": [],
        "bytes": 712255,
        "type": "upload",
        "etag": "1fcfc2dc57aa29755d46fa4f25105785",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899112/avalanche2019/z7uxo3myrahwz6nw0nso.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899112/avalanche2019/z7uxo3myrahwz6nw0nso.png"
      },
      {
        "public_id": "avalanche2019/xwjzdzavblw6fuw42fbh",
        "version": 1556899118,
        "signature": "6bc28e4e4560d3dd05cc997a7dc14c8e87ccaeef",
        "width": 1258,
        "height": 650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T15:58:38Z",
        "tags": [],
        "bytes": 95480,
        "type": "upload",
        "etag": "f7c319894c3e9c59b31b4deb1ea8c026",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899118/avalanche2019/xwjzdzavblw6fuw42fbh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899118/avalanche2019/xwjzdzavblw6fuw42fbh.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "This sketch illustrates the way the body sways as a soldier's body is hit and is dying.\nI have used Autodesk's Character Generator, Mixamo's Character Animator, Maxon's Cinema 4D's 3D Animation and Adobe After Effects' Animation Production to prepare this piece.",
    "inspiration_name": "The Death of a Soldier"
  },
  {
    "_id": "aAkQtgSEPdQwFDoa5",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:34:04.029Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cnim5lzn4thkbi2xaxqf",
        "version": 1550854130,
        "signature": "07d096fbd776ace545ef25e047d524d4569072f2",
        "width": 794,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T16:48:50Z",
        "tags": [],
        "bytes": 348119,
        "type": "upload",
        "etag": "01b8bb2528ee7f20509f26ca311487e3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550854130/avalanche2019/cnim5lzn4thkbi2xaxqf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550854130/avalanche2019/cnim5lzn4thkbi2xaxqf.png"
      },
      {
        "public_id": "avalanche2019/sx8papaucxjhxecg7jd3",
        "version": 1550854161,
        "signature": "809ab8d89ecad440d026266dd10f5ef50b88a35e",
        "width": 796,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T16:49:21Z",
        "tags": [],
        "bytes": 297616,
        "type": "upload",
        "etag": "c2a2851660dd382145f76da611b48abd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550854161/avalanche2019/sx8papaucxjhxecg7jd3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550854161/avalanche2019/sx8papaucxjhxecg7jd3.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T17:55:52.106Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T18:14:46.05Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T18:57:49.569Z" }
      }
    ],
    "title": "",
    "description": "1st try of a subway terrain map. (processing)",
    "inspiration_name": "PerlinNoiseTerrain",
    "inspiration_url": "https://www.youtube.com/watch?v=IKB1hWWedMk",
    "code": "// Code for: https://youtu.be/IKB1hWWedMk\n\nint cols, rows;\nint scl = 20;\nint w = 2000;\nint h = 1600;\n\nfloat flying = 0;\n\nfloat[][] terrain;\nPImage img;\n\nvoid setup() {\n  size(400, 400, P3D);\n  cols = w / scl;\n  rows = h/ scl;\n  terrain = new float[cols][rows];\n  \n  img = loadImage(\"map.jpg\");\n}\n\n\nvoid draw() {\n\n  flying -= 0.1;\n\n  float yoff = flying;\n  for (int y = 0; y < rows; y++) {\n    float xoff = 0;\n    for (int x = 0; x < cols; x++) {\n      terrain[x][y] = map(noise(xoff, yoff), 0, 1, -100, 100);\n      xoff += 0.2;\n    }\n    yoff += 0.2;\n  }\n\n\n\n  background(0);\n  stroke(255);\n  //noFill();\n  fill(10,40,150);\n  \n  \n  translate(width/2, height/2+50);\n  rotateX(PI/3);\n  translate(-w/2, -h/2);\n  for (int y = 0; y < rows-1; y++) {\n    beginShape(TRIANGLE_STRIP);\n    texture(img);\n    //image(img,600,100);\n  \n    for (int x = 0; x < cols; x++) {\n      \n      vertex(x*scl, y*scl, terrain[x][y],map(x,0,cols,0,img.width), map(y,0,rows,0,img.height));\n      vertex(x*scl, (y+1)*scl, terrain[x][y+1],map(y+1,0,rows,0,img.height));\n      //rect(x*scl, y*scl, scl, scl);\n    }\n    endShape();\n  }\n}"
  },
  {
    "_id": "aCAh8PjvhiwKJqYrp",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T04:01:35.865Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "low pitch",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// code from class example \n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 250;\n\nconst melody = [\n  ['E2', '8n.'],\n  ['A2', '3n.'],\n  ['Ab2', '3n.'],\n  \n  ['rest', '0.2s'],\n  ['E2', '8n.'],\n  ['A2', '3n.'],\n  ['C3', '3n.'],\n  \n  ['rest', '0.2s'],\n ['E2', '8n.'],\n  ['A2', '3n.'],\n  ['Ab2', '3n.'],\n  ['G2', '3n.'],\n  ['Ab2', '3n.'],\n  ['C3', '8n'],\n   ['C3', '8n'],\n    ['C3', '8n'],\n\n];\n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "aEvqkhPbn3nmHoyjN",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T15:32:58.674Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "aG6tcYMANrHezmomE",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T02:00:28.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hjbptcaz0czlvgpeni8d",
        "version": 1555034436,
        "signature": "cfef2b3f63f3a9e3d7fdf1892a7e0d48e291709b",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-12T02:00:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 19329699,
        "type": "upload",
        "etag": "17e4676e551302a6b2e3b4b43ef8d8c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555034436/avalanche2019/hjbptcaz0czlvgpeni8d.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555034436/avalanche2019/hjbptcaz0czlvgpeni8d.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "5640315",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 5644937,
        "duration": 27.394033,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T02:45:29.489Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T17:21:30.37Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T19:51:50.296Z" }
      }
    ],
    "title": "",
    "description": "type your favorite color"
  },
  {
    "_id": "aKi2kT4GNvgnb5eWr",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T23:43:49.644Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dqine24r9draophqj8gn",
        "version": 1552002244,
        "signature": "3b953dd76c6fec331b07f9907a7e9f341258eb28",
        "width": 1020,
        "height": 934,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T23:44:04Z",
        "tags": [],
        "bytes": 162950,
        "type": "upload",
        "etag": "59614e9395d3063caf80af8d17df8608",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552002244/avalanche2019/dqine24r9draophqj8gn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552002244/avalanche2019/dqine24r9draophqj8gn.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Pixel Array'get' and 'quick', but not sooo quick...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/p5.min.js\n\n\nvar testImage;\n\nfunction preload() {\n    testImage = loadImage(\"arc.png\");\n    noLoop();\n}\n\nfunction setup() {\n    // create a place to draw\n    createCanvas(530, 530);\n\n\n}\n\n\nfunction draw() {\n    // clear the background\n    background(255);\n    //var start, end;\n    var testImageCopy = createImage(width/2, height);\n  \t//var testImageCopy = createImage(200, 530);\n\n    noSmooth();\n\n    // draw original image\n    image(testImage, 0, 0);\n\n    // invert and draw\n    testImageCopy.copy(testImage, 0, 0, 316, 350, 0, 0, 350, 350);\n    start = millis();\n    invertStandard(testImageCopy);\n    end = millis();\n    //console.log(\"invertStandard: \", end - start);\n    image(testImageCopy, 250, 0);\n  \n      // invert and draw\n    testImageCopy.copy(testImage, 0, 0, 316, 350, 0, 0, 350, 350);\n    start = millis();\n    invertStandard(testImageCopy);\n    end = millis();\n    //console.log(\"invertStandard: \", end - start);\n    image(testImageCopy, 0, 0);\n  \n        // invert and draw\n    testImageCopy.copy(testImage, 0, 0, 316, 350, 0, 0, 350, 350);\n    start = millis();\n    invertStandard(testImageCopy);\n    end = millis();\n    //console.log(\"invertStandard: \", end - start);\n    image(testImageCopy, 0, 250);\n  \n          // invert and draw\n    testImageCopy.copy(testImage, 0, 0, 316, 350, 0, 0, 350, 350);\n    start = millis();\n    invertStandard(testImageCopy);\n    end = millis();\n    //console.log(\"invertStandard: \", end - start);\n    image(testImageCopy, 250, 250);\n\n\n      // invert and draw\n    //testImageCopy.copy(testImage, 0, 0, 0, 100, 0, 0, 0, 0);\n    start = millis();\n    invertQuick(testImageCopy);\n    end = millis();\n    console.log(\"invertQuick: \", end - start);\n    image(testImageCopy, 0, 0);\n  \n        // invert and draw\n    //testImageCopy.copy(testImage, 0, 0, 0, 100, 0, 0, 0, 0);\n    start = millis();\n    invertQuick(testImageCopy);\n    end = millis();\n    console.log(\"invertQuick: \", end - start);\n    image(testImageCopy, 270, 0);\n\n\n    noLoop();\n}\n\n\n//var pixelRed = img.pixels[(y * 640 + x) * 4];\nfunction invertStandard(img) {\n\n    //noprotect\n  \tfor (y = 0; y < img.height; y++) {\n        for (x = 0; x < img.width; x++) {\n\n\n            var c = img.get(x, y);\n            c = [\n                25 - c[0],\n                255 - c[1],\n                255 - c[2],\n                c[3],\n            ];\n            img.set(x, y, c);\n            img.updatePixels();\n\n        }\n    }\n}\n\n\nfunction invertQuick(img) {\n    // load up the pixel[] array so we can read colors out of it\n    img.loadPixels();\n\n\n    for (y = 0; y < img.height; y++) {\n        for (x = 0; x < img.width; x++) {\n\n\n            var c = getQuick(img, x, y);\n            c = [\n                255 - c[0],\n                255 - c[1],\n                255 - c[2],\n                c[3],\n            ];\n            img.set(x, y, c);\n\n\n        }\n    }\n\n    img.updatePixels();\n}\n\n\n\n// find the RGBA values of the pixel at x, y in the img.pixels array\n// see: http://p5js.org/reference/#/p5/pixels[]\n// we don't need to worry about screen pixel density here, because we are not reading from the screen\n\nfunction getQuick(img, x, y) {\n\n    var i = (y * img.width + x) * 2;\n    return [\n        testImage.pixels[i],\n        testImage.pixels[i + 1],\n        testImage.pixels[i + 2],\n        testImage.pixels[i + 3],\n    ];\n}"
  },
  {
    "_id": "aMkzkK58eh8wKTbS9",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-02-28T13:55:24.124Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n9wvfr8ehl3j3laucyna",
        "version": 1551362142,
        "signature": "3ff8de03c6516d5d09aa343d6c855f8e70406574",
        "width": 646,
        "height": 706,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-28T13:55:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 1391812,
        "type": "upload",
        "etag": "80c0955d34f85da16c05e825658eb41a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551362142/avalanche2019/n9wvfr8ehl3j3laucyna.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551362142/avalanche2019/n9wvfr8ehl3j3laucyna.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "265304",
          "dar": "323:353"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 269546,
        "duration": 41.308277,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/jj3afbtqpnvmr0w0l8s7",
        "version": 1551362146,
        "signature": "eb00302fba0bf6b003e125fd595dfc35d08eafb4",
        "width": 643,
        "height": 693,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-28T13:55:46Z",
        "tags": [],
        "bytes": 29730,
        "type": "upload",
        "etag": "0c022934c84dee8f748f8f6576d97e3b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551362146/avalanche2019/jj3afbtqpnvmr0w0l8s7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551362146/avalanche2019/jj3afbtqpnvmr0w0l8s7.jpg"
      },
      {
        "public_id": "avalanche2019/x3jw7in6pr8llpjecgub",
        "version": 1551362149,
        "signature": "94f09b5c1f2fca091d3201d9fdf9b5ed999247c6",
        "width": 643,
        "height": 700,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-28T13:55:49Z",
        "tags": [],
        "bytes": 31139,
        "type": "upload",
        "etag": "b2e65029196789bdf2904eb6ac86f37b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551362149/avalanche2019/x3jw7in6pr8llpjecgub.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551362149/avalanche2019/x3jw7in6pr8llpjecgub.jpg"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Coding Challenge to match the wave motion, like that of a caterpillar. \nThe frequency decides the number of octaves in the wave, the amplitude changes the distance between crests and troughs of the wave, and the time speed changes the speed of movement of the wave.",
    "inspiration_name": "Caterpillar Motion",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// Coding Challenge\n// Create a caterpillar motion with sliders for change\n// Check the strategy.md file for details\n// GitHub link: https://github.com/akshansh2593/CompForm/blob/master/caterpillarMotion/strategy.md\n\n\nvar frequency_slider;\nvar amplitude_slider;\nvar timeSpeed_slider;\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\nvar speed = 0;\nvar speedX = 0;\nvar speedY = 0;\n\n\n\nfunction setup() {\n    createCanvas(500, 300);\n\n    createP('Frequency');\n    frequency_slider = createSlider(0, 100, 20);\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 100, 50);\n    createP('Time Speed');\n    timeSpeed_slider = createSlider(0, 100, 50);\n\n}\n\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n\n    var frequency = frequency_slider.value() / 1000;\n    var amplitude = amplitude_slider.value() / 100;\n    var timeSpeed = timeSpeed_slider.value() / 300;\n\n    speed = speedX + timeSpeed;\n    speed = speedY + timeSpeed;\n\n    noiseDetail(1, 0.0001);\n    // noiseDetail: similar to harmonics in Physics\n    // (1, 0.5) means 1 octave will be used by noise() with 50% falloff factor for each octave\n\n    fill(255);\n    noStroke();\n\n    for (i = 0; i < 1; i += .02) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n\n        var offsetX = (.5 - noise((x * frequency), (speed * timeSpeed))) * amplitude * 100;\n        var offsetY = (.5 - noise((y * 0.01), (speed * timeSpeed))) * amplitude * 100;\n        // 0.5 - noise: so that it moves in the 4th quadrant\n\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n\n        speedX += 0.005;\n        speedY += 0.005;\n    }\n\n}"
  },
  {
    "_id": "aPbbDErs2Xdb33exr",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T18:10:07.13Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/onh4su7wksihy3mw3zii",
        "version": 1550599954,
        "signature": "d782668f5d1f357ed2ec6c779208183977d21df6",
        "width": 2012,
        "height": 1312,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-19T18:12:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 7066003,
        "type": "upload",
        "etag": "3183c926170b13ad21e2388bd15c2a07",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550599954/avalanche2019/onh4su7wksihy3mw3zii.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550599954/avalanche2019/onh4su7wksihy3mw3zii.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Baseline",
          "bit_rate": "2743234",
          "dar": "23:15"
        },
        "frame_rate": 15,
        "bit_rate": 2744078,
        "duration": 20.6,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T19:13:28.021Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T19:27:18.388Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T20:24:39.726Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-21T23:16:35.907Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T20:59:42.241Z" }
      }
    ],
    "title": "",
    "description": "Flowing Brush\nmade with oF; using flow field"
  },
  {
    "_id": "aTjtocyqZfSWRad8y",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T16:05:16.976Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uvfvflcv1vfltw9rz0op",
        "version": 1549987538,
        "signature": "d41ec3eb1475060558cb01a3f400da30f7f320fc",
        "width": 2160,
        "height": 1404,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-12T16:05:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 15370054,
        "type": "upload",
        "etag": "1db252256578f5e2040fb5906a4a35ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549987538/avalanche2019/uvfvflcv1vfltw9rz0op.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549987538/avalanche2019/uvfvflcv1vfltw9rz0op.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Baseline",
          "bit_rate": "2894781",
          "dar": "20:13"
        },
        "frame_rate": 15,
        "bit_rate": 2895434,
        "duration": 42.466992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-13T19:18:45.575Z" }
      }
    ],
    "title": "",
    "description": "Play with sphere surface math\nProcessing + ControlP5"
  },
  {
    "_id": "aYRDNWQWWfA3YskuA",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T01:34:49.767Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dwen9niv22sqnit1yqpt",
        "version": 1550799318,
        "signature": "60da6e4782bc4cdb3811c7ad5a34caa1fae8f179",
        "width": 1280,
        "height": 644,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T01:35:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 4726490,
        "type": "upload",
        "etag": "4918d5c30135619e699aeaabcd29dd64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550799318/avalanche2019/dwen9niv22sqnit1yqpt.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550799318/avalanche2019/dwen9niv22sqnit1yqpt.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "4861792",
          "dar": "320:161"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4878957,
        "duration": 7.75,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Blobs and colors noising around the canvas",
    "inspiration_name": "Gene Kogan",
    "inspiration_url": "http://genekogan.com/code/p5js-perlin-noise/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nlet x, y;\nlet offset;\nlet totalVerts = 40;\nlet changeX = 0;\nlet changeY =3;\n\nfunction setup(){\n\tcreateCanvas(windowWidth, windowHeight);\n\toffset = 0;\n\tcols = floor(width/scale);\n\trows = floor(height/scale);\n}\n\nfunction draw(){\n\tbackground(0, 5);\n\n  let r = 255 * noise(changeX+10);\n  let g = 255 * noise(changeX+15);\n  let b = 255 * noise(changeY+20);\n\n  fill(g, b, r);\n  stroke(r,g,b);\n  strokeWeight(3);\n// noStroke();\t\n// translate(width/2, height/2);\n  beginShape();\n  for(let i = 0; i < totalVerts; i++){\n\tlet angle = map(i, 0, 40, 0, TWO_PI);\n\tlet radius = width/5 * noise(i + offset);\n\tx = radius * cos(angle);\n\ty = radius * sin(angle);\n\n\tx += width * noise(changeX);\n\ty += height * noise(changeY);\n\n\tcurveVertex(x,y);\n\tchangeX +=0.0001;\n\tchangeY +=0.0001;\t\n}\n  endShape(CLOSE);\n  offset +=0.01;\n}"
  },
  {
    "_id": "aYzx4gsgMmegXC7cQ",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T19:11:00.793Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wz8zxi6bsij8raaic9nf",
        "version": 1555701068,
        "signature": "9859215153bba973b77822bdcf8db627cee1ada6",
        "width": 784,
        "height": 780,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T19:11:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 363818,
        "type": "upload",
        "etag": "d50cec9941e99e8bc9c8b94df864dbf5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555701068/avalanche2019/wz8zxi6bsij8raaic9nf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555701068/avalanche2019/wz8zxi6bsij8raaic9nf.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "327183",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "94123",
          "dar": "196:195"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 444075,
        "duration": 6.554167,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Typewriter :)"
  },
  {
    "_id": "aZpRgFmy3WW7N8HXp",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T04:06:33.973Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ual7nwklx74lovbsdhcw",
        "version": 1553832840,
        "signature": "a5f29f83923ce7639a04b2cb85e7c381a4128c4a",
        "width": 992,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T04:14:00Z",
        "tags": [],
        "bytes": 68566,
        "type": "upload",
        "etag": "b17566229f149ecb95a2a5728309c5a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553832840/avalanche2019/ual7nwklx74lovbsdhcw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553832840/avalanche2019/ual7nwklx74lovbsdhcw.png"
      },
      {
        "public_id": "avalanche2019/g4ftkvrlwkrv1xntg0ge",
        "version": 1553832850,
        "signature": "df0bf49396fa9c672a145f24c4dedad2aec57f85",
        "width": 640,
        "height": 360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T04:14:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 18969784,
        "type": "upload",
        "etag": "b0d49227537bba7467bd1f209244f23a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553832850/avalanche2019/g4ftkvrlwkrv1xntg0ge.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553832850/avalanche2019/g4ftkvrlwkrv1xntg0ge.mov",
        "audio": {},
        "video": {
          "pix_format": "yuva444p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "9992051"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 9996044,
        "duration": 15.181833,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "where Simpson is looking at?",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\nvar rectangle = new Rectangle(new Point(0, 0), new Point(1550, 1550));\nvar background = new Path.Rectangle(rectangle);\nbackground.fillColor = '#FFE815';\n\nvar eye_radius = 50;\nvar pupil_radius = 10;\n\n\nvar max_vector_length = eye_radius - pupil_radius;\n\n\nvar eye1 = new Path.Circle({\n    center: [150,350],\n    radius: eye_radius,\n    strokeColor: 'black',\n    fillColor:'white',\n});\n\nvar eye2 = new Path.Circle({\n    center: [300,350],\n    radius: eye_radius,\n    strokeColor: 'black',\n    fillColor:'white',\n    \n});\n\n\nvar pupil1 = new Path.Circle({\n    center: [150,350],\n    radius: pupil_radius,\n    fillColor: 'black'\n});\n\nvar pupil2 = new Path.Circle({\n    center: [300,350],\n    radius: pupil_radius,\n    fillColor: 'black'\n});\n\n\nfunction onMouseMove(event) {\n\n    var vector = event.point - eye1.position;\n   \n    if (vector.length > max_vector_length) {\n        vector = vector.normalize(max_vector_length);\n    }\n\n    pupil1.position = eye1.position + vector;\n    pupil2.position = eye2.position + vector;\n}\n\nvar myPath;\n\nfunction onMouseDown(event) {\n\tmyPath = new Path();\n\tmyPath.strokeColor = 'black';\n}\n\nfunction onMouseDrag(event) {\n\tmyPath.add(event.point);\n}"
  },
  {
    "_id": "abG4w78FR5xGs7tR4",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T00:42:28.905Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n6zirmvjqulz5mh2mcet",
        "version": 1551746561,
        "signature": "768efff931af99a671252e02a46ab6d103d575e5",
        "width": 796,
        "height": 591,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T00:42:41Z",
        "tags": [],
        "bytes": 302690,
        "type": "upload",
        "etag": "eaadf5b3966abfa1a8bc595d05633780",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551746561/avalanche2019/n6zirmvjqulz5mh2mcet.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551746561/avalanche2019/n6zirmvjqulz5mh2mcet.png"
      },
      {
        "public_id": "avalanche2019/t1v4sxwhnlln84drioq9",
        "version": 1551746565,
        "signature": "c90c33d58d7ce280cab16c9803fe8865b85cc052",
        "width": 796,
        "height": 591,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T00:42:45Z",
        "tags": [],
        "bytes": 393598,
        "type": "upload",
        "etag": "7013fc0ddb666d1415dbdcc9060c0aee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551746565/avalanche2019/t1v4sxwhnlln84drioq9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551746565/avalanche2019/t1v4sxwhnlln84drioq9.png"
      },
      {
        "public_id": "avalanche2019/exjwphgglhe8d2el69qh",
        "version": 1551747700,
        "signature": "5d6fa759793b0094a0682478be3db0945f185aac",
        "width": 744,
        "height": 744,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T01:01:40Z",
        "tags": [],
        "bytes": 322453,
        "type": "upload",
        "etag": "67321da955909accafda0671a90f7bc9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551747700/avalanche2019/exjwphgglhe8d2el69qh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551747700/avalanche2019/exjwphgglhe8d2el69qh.png"
      }
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T00:59:52.701Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T13:27:43.657Z" }
      }
    ],
    "title": "",
    "description": "Playing with photos. The top photo is my wife dancing, the middle photo is an unwrapped 3D texture and the final photo is a portrait of my friend, Monzeeki.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/p5.min.js\n\n// draws some grass with density driven by a luminance map image\n\nvar testImage;\n\nfunction preload() {\n    testImage = loadImage(\"Head01.png\");\n    noLoop();\n}\n\nfunction setup() {\n    // create a place to draw\n    createCanvas(800, 600);\n\n    // load up the pixel[] array so we can read colors out of it later\n    testImage.loadPixels();\n}\n\n\nfunction draw() {\n    // clear the background\n    background(0, 0, 0);\n\n    // set drawing styles\n    stroke(255, 50, 120);\n    fill(255, 255, 255);\n    stroke(255, 255, 255, 80);\n\n    var start = millis();\n\n    // loop over every x,y pixel coordinate in the image\n    for (x = 0; x < 800; x++) {\n        for (y = 0; y < 600; y++) {\n\n            // slow\n            // this is _really_ slow, it might crash your browser\n            // var pixelRed = red(testImage.get(x, y));\n\n            // quick\n            var pixelRed = getQuick(testImage, x, y)[0];\n\n\n            // pick a random value and compare it pixelRed\n            // for example:\n            // if pixelRed is 0, we'll never draw\n            // if pixelRed is 255, we'll always draw\n            // if pixelRed is 127, we'll draw 50% of the time\n            if (random(255) < pixelRed) {\n                drawGrassBlade(x, y);\n            }\n        }\n    }\n\n    var end = millis();\n\n    console.log(`took ${floor(end - start)} ms`);\n\n    noLoop();\n}\n\nfunction drawGrassBlade(x, y) {\n\n    var bladeHeight = min(\n        random(1, 60), random(1, 60), random(1, 60),\n        random(1, 60), random(1, 60), random(1, 60)\n    );\n\n    var bladeLean = random(-.3, .3);\n    bladeLean *= bladeHeight;\n\t\t//strokeWeight();\n    line(x * 1.05, y, x + bladeLean, y - bladeHeight);\n\n}\n\n\n// find the RGBA values of the pixel at x, y in the img.pixels array\n// see: http://p5js.org/reference/#/p5/pixels[]\n// we don't need to worry about screen pixel density here, because we are not reading from the screen\n\nfunction getQuick(img, x, y) {\n\n    var i = (y * img.width + x) * 4;\n    return [\n        testImage.pixels[i],\n        testImage.pixels[i + 1],\n        testImage.pixels[i + 2],\n        testImage.pixels[i + 3],\n    ];\n}"
  },
  {
    "_id": "agBDPBma43mPJcFhZ",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "created_at": { "$date": "2019-02-26T20:12:30.293Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g66ny9ielgzmcbwuvli8",
        "version": 1551212636,
        "signature": "615b9efe9c5767754748ff2d5efd31c36ab99203",
        "width": 792,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T20:23:56Z",
        "tags": [],
        "bytes": 76156,
        "type": "upload",
        "etag": "9ec36f8b659d800db7d5e3c600aa31e3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551212636/avalanche2019/g66ny9ielgzmcbwuvli8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551212636/avalanche2019/g66ny9ielgzmcbwuvli8.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "dot challenge",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Dot Challenge Starting Point\n\n//observation: \n//1. color \n//2. size: circles are in different size \n//3. circles' positions are on the center \n\nfunction setup() {\n    createCanvas(400, 400);\n}\n\n\nfunction draw() {\n    background(50);\n    noStroke();\n    ellipseMode(CENTER);\n\n\n\n   \n    var frequency = 0.5;\n    for (var i = 0; i < 100; i++) {\n        // these points are not scattered in the same way\n        // how can you make the arrangement match the challenge?\n        //- noise placement \n        var x = noise(i * frequency, 0) * width;\n        var y = noise(i * frequency, 1000) * height;\n\n        // the diameter shouldn't always be 10, it needs to vary\n        //- middle bias distribution \n        var diameter = (random(5,20)+ random(10,20))/2;\n\n        // the colors also need to change\n        // what colorMode would be easiest to work with?\n        if(diameter >15){\n        fill(random(0,255), random(0,100), random(200,255));\n        }else if(diameter>10 && diameter <15){\n            fill(random(0,100), max(random(0,250),random(230,250)), random(100,255));\n        }else  {\n            fill(random(220,255),random(50,100),random(0,50));\n        }\n     \n\n        ellipse(x, y, diameter, diameter);\n    }\n\n\n    noLoop();\n\n\n}"
  },
  {
    "_id": "aiNNuk7KwCJjPcyr9",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T13:32:01.318Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uintojpin0j8qqrepals",
        "version": 1555594559,
        "signature": "a9cd6a7abfe7d4d1e5b2d0535cc0bc547ebd4b4f",
        "width": 780,
        "height": 792,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-18T13:35:59Z",
        "tags": [],
        "bytes": 220720,
        "type": "upload",
        "etag": "305dc8826410aedc4d4b428be802e415",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555594559/avalanche2019/uintojpin0j8qqrepals.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555594559/avalanche2019/uintojpin0j8qqrepals.png"
      },
      {
        "public_id": "avalanche2019/gdekczx7qc1j35tqqev3",
        "version": 1555594578,
        "signature": "4edc64daa3bd2a0ccaaa3c506fd3c6db11a6bec3",
        "width": 784,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T13:36:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 20425244,
        "type": "upload",
        "etag": "b441749f1e6d7cb612d6176a53b9c1a3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555594578/avalanche2019/gdekczx7qc1j35tqqev3.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555594578/avalanche2019/gdekczx7qc1j35tqqev3.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "243029",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3901357",
          "dar": "196:199"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4152527,
        "duration": 39.35,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Using the Amplifier  -",
    "inspiration_url": "Stack Overflow",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\n\nvar circles = [];\nvar lastTouchX;\nvar lastTouchY;\n\nfunction preload() {\n  sound = loadSound ('herecomesthesun.mp3');\n}\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  amplitude = new p5.Amplitude();\n  sound.play();\n  \n  lastTouchX = width / 2;\n  lastTouchY = height / 2;\n  \n}\n\nfunction draw() {\nfill(98,18);\n  //fill(102,128,154);\n  // fill(105,105,105);\n  // fill(245,245,245);\n  rect(0, 0, 400, 400);\n  \n  for (var i = 0; i < circles.length;i++) {\n    circles [i].display();\n  }\n}\n\nfunction mousePressed() {\n  lastTouchX = mouseX;\n  lastTouchY = mouseY;\n  circles.push(new Circle());\n}\n\nfunction Circle(){\nthis.x = lastTouchX;\nthis.y = lastTouchY;\n\nthis.display = function() {\n  var level = amplitude.getLevel();\n  var size = map(level, 0, 1, 100, 280);\n  noStroke();\n  \n  fill(118,166,206,20);\n  fill(255,215,0,20);\n  noStroke();\n  \n\n  ellipse(this.x, this.y, size, size);\n}\n}"
  },
  {
    "_id": "aiiQ9DwQS52YQ2CXz",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T20:05:58.738Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tvldrxc2seti7iilfn8x",
        "version": 1550261168,
        "signature": "dc7b69f393d43ee1bff7f076f68959360e48c3c5",
        "width": 2532,
        "height": 1376,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T20:06:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 2572615,
        "type": "upload",
        "etag": "107ffb10824f3fa62d84a61aa859ec55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550261168/avalanche2019/tvldrxc2seti7iilfn8x.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550261168/avalanche2019/tvldrxc2seti7iilfn8x.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "2095647",
          "dar": "633:344"
        },
        "frame_rate": 60,
        "bit_rate": 2100093,
        "duration": 9.8,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T20:37:31.439Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T20:39:44.385Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T20:52:04.608Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T20:52:41.32Z" }
      }
    ],
    "title": "",
    "description": "Feed the puppy !"
  },
  {
    "_id": "apHwpXuJCD3kihpxL",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-01-27T01:09:33.476Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/c4lgtbjwy9vwlmclbiam",
        "version": 1548551558,
        "signature": "45ff991c0aa4ec9bdcd553c02c2a12b773d11a09",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-27T01:12:38Z",
        "tags": [],
        "bytes": 2842854,
        "type": "upload",
        "etag": "8ea3bcdbc6c79724ee0a3df28fe98129",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548551558/avalanche2019/c4lgtbjwy9vwlmclbiam.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548551558/avalanche2019/c4lgtbjwy9vwlmclbiam.jpg"
      },
      {
        "public_id": "avalanche2019/qk0l1f1gr5sxqclsi7b2",
        "version": 1548551575,
        "signature": "cc459695b24b3562f77ed7ef6dc8e10da31d734b",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-27T01:12:55Z",
        "tags": [],
        "bytes": 2835559,
        "type": "upload",
        "etag": "a1fdc9f45f9d6644693a2c9ea8c84d51",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548551575/avalanche2019/qk0l1f1gr5sxqclsi7b2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548551575/avalanche2019/qk0l1f1gr5sxqclsi7b2.jpg"
      },
      {
        "public_id": "avalanche2019/jg4yjkrowcxabl4zcqti",
        "version": 1548551583,
        "signature": "92bfd77ef8562cf7139b50765a66bf36f3930f3c",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-27T01:13:03Z",
        "tags": [],
        "bytes": 3023405,
        "type": "upload",
        "etag": "dc7a54ef1f5d0cb612205fff407c1214",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548551583/avalanche2019/jg4yjkrowcxabl4zcqti.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548551583/avalanche2019/jg4yjkrowcxabl4zcqti.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:45.832Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "I have designed a tile pattern resembling the periodic table of elements using tiles designed by Felix Buchholz. \nI have also added my tiles to write my initials (AC).",
    "inspiration_name": "Periodic Table of Felix",
    "inspiration_url": "https://www.ptable.com/"
  },
  {
    "_id": "awR8LDDPHt9BFEp63",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T00:33:14.694Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/o5ftmwymavjugnwnxtqb",
        "version": 1550709208,
        "signature": "fa730636e24830dbac6964a613b8e25cc72bed86",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T00:33:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 5641343,
        "type": "upload",
        "etag": "fdf344c11a083eb0ff287a74cdde3f0b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550709208/avalanche2019/o5ftmwymavjugnwnxtqb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550709208/avalanche2019/o5ftmwymavjugnwnxtqb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1680643",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 1724741,
        "duration": 26.166667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/plcldzpulblzzttmksru",
        "version": 1550709215,
        "signature": "565115e7fd2b8f420075d7d773edf4321a075da7",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T00:33:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 6453802,
        "type": "upload",
        "etag": "9c4515e5edaa26dc154df490c07a0868",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550709215/avalanche2019/plcldzpulblzzttmksru.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550709215/avalanche2019/plcldzpulblzzttmksru.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1931876",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 1969373,
        "duration": 26.216667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I wanted to play with the variability of the aesthetics in that code. I was trying to contrast something washy and organic with something clean and 'digital'. Based on Justin's building code.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet amplitude = 1300;\nlet frequency = 100;\n\nfunction setup() {\n    createCanvas(800, 600);\n    noStroke();\n\n    noiseSeed(1);\n\n    // uncomment next line for simpler/less detailed noise\n    noiseDetail(1, 0);\n\n}\n\nfunction draw() {\n    background(200, 200, 210);\n    //fill(100);\n  \n  //sets gradient\n  var color1 = color(255, 170, 53);\n\tvar color2 = color(220, 0, 0);\n  setGradient(0, 0, windowWidth, windowHeight, color1, color2, \"Y\");\n  \n\n//sets gradient\nfunction setGradient(x, y, w, h, c1, c2, axis) {\n  noFill();\n  if (axis == \"Y\") {  // Top to bottom gradient\n    for (let i = y; i <= y+h; i++) {\n      var inter = map(i, y, y+h, 0, 1);\n      var c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(x, i, x+w, i);\n    }\n  }  \n  else if (axis == \"X\") {  // Left to right gradient\n    for (let j = x; j <= x+w; j++) {\n      var inter2 = map(j, x, x+w, 0, 1);\n      var d = lerpColor(c1, c2, inter2);\n      stroke(d);\n      line(j, y, j, y+h);\n    }\n  }\n}\n  \n  //lines\n  fill(150, 24, 10, 10);\n  noStroke();\n    let x = 100;\n    for (x = 0; x < width; x += 4) {\n        let buildingHeight = noise(x * frequency, frameCount / 500) * amplitude;\n\n        rect(x, height  - buildingHeight, 100, buildingHeight);\n    }\n\n    fill(150);\n    // rect(0, height * .9, width, height * .5);\n}"
  },
  {
    "_id": "b2FWaRNTaruM63sd7",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T16:49:31.908Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mr7xy91e3w3sddi6y067",
        "version": 1553791784,
        "signature": "7a168399c810f692c331d51deab211f108bd98bf",
        "width": 1050,
        "height": 1464,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T16:49:44Z",
        "tags": [],
        "bytes": 136381,
        "type": "upload",
        "etag": "d455f152bcf2f1b6b8aebdbf3648a935",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553791784/avalanche2019/mr7xy91e3w3sddi6y067.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553791784/avalanche2019/mr7xy91e3w3sddi6y067.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T17:11:32.048Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T17:34:10.212Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T20:26:18.168Z" }
      }
    ],
    "title": "",
    "description": "Circles meet squares - experiments with logic operations.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// Laser lab protocol\nvar cutLineColor = new Color(0, 0, 255);\nvar engraveLineColor = new Color(255, 0, 0);\nvar engraveFillColor = new Color(0, 0, 0);\n\n// Square\nvar square = new Path.Rectangle({\n    position: view.center,\n    size: 200,\n    strokeColor: engraveLineColor\n});\n\n// Circle\nvar stepX = getRandom(-200, 200);\nvar stepY = getRandom(-200, 200);\n\nvar circle = new Path.Circle({\n    position: new Point(\n        view.center + new Point(\n            getRandom(-100, 100),\n            getRandom(-100, 100)\n        )\n    ),\n    radius: 100,\n    strokeColor: engraveLineColor\n});\n\n// Merge\n// Choose between 'unite', 'intersect', 'subtract', 'exclude'\nvar comboPath = square.subtract(circle);\ncomboPath.style = {\n    strokeColor: engraveFillColor,\n    fillColor: engraveFillColor\n}\n\n// downloadAsSVG();\n\n// Utilities ///////////////////////////////////////////////////////\nfunction getRandom(min, max) {\n    return min + Math.floor(Math.random() * (max - min));\n}\n\n// Download ///////////////////////////////////////////////////////\nfunction downloadAsSVG(fileName) {\n    // use default name if not provided\n    fileName = fileName || \"output.svg\"\n        // create a data url of the file\n    var svgData = project.exportSVG({ asString: true });\n    var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n    // create a link to the data, and \"click\" it\n    var link = document.createElement(\"a\");\n    link.download = fileName;\n    link.href = url;\n    link.click();\n}"
  },
  {
    "_id": "b2zSQq2RPJepgLnox",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T16:45:49.238Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u7jah0jjcfdwr5njp3ep",
        "version": 1557420371,
        "signature": "898ffaa71e7554e2e7bf17532e26ada778678619",
        "width": 800,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-09T16:46:11Z",
        "tags": [],
        "bytes": 174903,
        "type": "upload",
        "etag": "c6e2d4c37a74ee6ef82e60570b24d0a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557420371/avalanche2019/u7jah0jjcfdwr5njp3ep.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557420371/avalanche2019/u7jah0jjcfdwr5njp3ep.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I need to code this but here's a screenshot that gets the idea across."
  },
  {
    "_id": "b4PpZXPHkFLAoLkvh",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-01-28T00:21:15.426Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/brpumlgauijpywkn7a49",
        "version": 1548634922,
        "signature": "2c7bcfcf94a1e5dce27d03e52105b519a358b24a",
        "width": 1463,
        "height": 1211,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T00:22:02Z",
        "tags": [],
        "bytes": 128312,
        "type": "upload",
        "etag": "f6eaeb2387d67a1428fa69fd718c5fec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548634922/avalanche2019/brpumlgauijpywkn7a49.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548634922/avalanche2019/brpumlgauijpywkn7a49.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Gradient Man. Made in illustrator.",
    "inspiration_name": "Gradient Man"
  },
  {
    "_id": "b5sxngaPBQ5ixbcQH",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-19T14:02:31.434Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sj8rdenhgr15o0kpq3nf",
        "version": 1553004592,
        "signature": "6ce017abdf123371f64e64b51291da2f137dc65b",
        "width": 2000,
        "height": 2000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-19T14:09:52Z",
        "tags": [],
        "bytes": 1272027,
        "type": "upload",
        "etag": "c67c3721d2c284f7312b94eb6601348b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553004592/avalanche2019/sj8rdenhgr15o0kpq3nf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553004592/avalanche2019/sj8rdenhgr15o0kpq3nf.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-19T15:07:27.271Z" }
      }
    ],
    "title": "",
    "description": "I liked the hand-drawn experiment from yesterdays sketch, so decided to play with that further today. \n\nI simplified the code, pulled out all the color stuff, and made some changes to make a more deliberate looking composition. I added some stroke variation with hand-drawn tools in mind. The final version is post processed in photoshop.\n\nStill not 100% convincing, but I'm getting close to happy with the final effect.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n/*eslint no-undef: 0*/\n\nvar WIDTH = 600;\nvar HEIGHT = 600;\nvar CLUSTER_COUNT = 18;\nvar CLUSTER_RADIUS = 130;\nvar DOT_COUNT = 70;\nvar DOT_RADIUS = 18;\n\ncreateClusters();\nproject.activeLayer.scale(0.5);\n\nfunction createClusters() {\n  var cluster_points = [];\n  var i;\n\n  // randomly place clusters around drawing\n  for (i = 0; i < CLUSTER_COUNT; i++) {\n    cluster_points.push(\n      new Point(randomRange(0, WIDTH), randomRange(0, HEIGHT))\n    );\n  }\n\n  // relax them a bit\n  relaxPoints(\n    cluster_points,\n    CLUSTER_RADIUS * 1.5,\n    false,\n    CLUSTER_RADIUS * 0.1,\n    10\n  );\n\n  // remove a few to create some gaps\n  cluster_points.shift();\n  cluster_points.shift();\n  cluster_points.shift();\n  cluster_points.shift();\n  cluster_points.shift();\n\n  // sort top to bottom\n  cluster_points.sort(function(a, b) {\n    return a.y < b.y ? -1 : 1;\n  });\n\n  for (i = 0; i < cluster_points.length; i++) {\n    var point = cluster_points[i];\n    createCluster(point);\n  }\n}\n\nfunction createCluster(cluster_point) {\n  var dot_points = [];\n  var i;\n\n  // randomly place points around 0,0\n  for (i = 0; i < DOT_COUNT; i++) {\n    dot_points.push(randomPoint() * CLUSTER_RADIUS * 0.5);\n  }\n\n  // relax them a bit\n  relaxPoints(dot_points, DOT_RADIUS * 1.4, false, DOT_RADIUS * 0.1, 100);\n\n  // sort by distance from 0,0\n  dot_points.sort(function(a, b) {\n    return a.length < b.length ? 1 : -1;\n  });\n\n  var types = [\"leaf\", \"vine\", \"vine\", \"flower\", \"flower\"];\n  var type = pick(types);\n  if (type === \"leaf\") createLeafPlant(cluster_point, dot_points);\n  if (type === \"flower\") createFlowerPlant(cluster_point, dot_points);\n  if (type === \"vine\") createVinePlant(cluster_point, dot_points);\n}\n\nfunction createFlowerPlant(cluster_point, dot_points) {\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    if (chance(0.3)) {\n      createFlower(cluster_point, dot_point);\n    } else {\n      createDot(cluster_point, dot_point, DOT_RADIUS);\n    }\n  }\n}\n\nfunction createVinePlant(cluster_point, dot_points) {\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    if (chance(0.3)) {\n      createVine(cluster_point, dot_point);\n      createDot(cluster_point, dot_point, DOT_RADIUS);\n    } else {\n      createDot(cluster_point, dot_point, DOT_RADIUS);\n    }\n  }\n}\n\nfunction createLeafPlant(cluster_point, dot_points) {\n  base_color = new Color(0.1, 0.5, 0.15, 1);\n  tint = Math.min(randomRange(0, 0.2), randomRange(0, 0.2));\n  tint_color = new Color(tint, tint, tint, 0);\n  cluster_color = base_color - tint_color;\n\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    createDot(cluster_point, dot_point, DOT_RADIUS);\n  }\n}\n\nfunction createDot(cluster_point, dot_point, r) {\n  var back_path = new Path.Circle(cluster_point + dot_point, r + 2);\n\n  back_path.translate(randomPoint() * 2);\n\n  back_path.style = {\n    fillColor: new Color(1, 1, 1, 1),\n    shadowColor: new Color(1, 1, 1, 1),\n    shadowBlur: 4,\n    shadowOffset: new Point(randomRange(-1, 1), randomRange(1, 1))\n  };\n\n  var path = new Path.Circle(cluster_point + dot_point, r);\n  var pressure = randomRange(-0.5, 0.5);\n  path.style = {\n    strokeColor: new Color(0.3, 0.3, 0.3) + new Color(0.1, 0.1, 0.1) * pressure,\n    strokeWidth: 1 - pressure * 0.1\n  };\n\n  //   path.clone().translate(randomPoint() * 0.3);\n\n  return { path: path, back_path: back_path };\n}\n\nfunction createFlower(cluster_point, dot_point) {\n  var d = dot_point / 5;\n  var p = dot_point;\n  var i;\n\n  for (i = 0; i < 5; i++) {\n    var r = map(i, 0, 5, DOT_RADIUS, DOT_RADIUS * 0.25);\n    paths = createDot(cluster_point, p, r);\n\n    d = d + [0, 5];\n    d *= 0.8;\n    p += d;\n  }\n\n  d = dot_point / 5;\n  p = dot_point;\n  for (i = 0; i < 5; i++) {\n    r = map(i, 0, 5, DOT_RADIUS, DOT_RADIUS * 0.25);\n    paths = createDot(cluster_point, p, r * 0.5);\n    paths.path.remove();\n    d = d + [0, 5];\n    d *= 0.8;\n    p += d;\n  }\n}\n\nfunction createVine(cluster_point, dot_point) {\n  var i;\n  var length = Math.min(randomRange(10, 40), randomRange(10, 40));\n  var offset_x = 0;\n  for (i = 0; i < length; i++) {\n    var offset_point = [offset_x, i * DOT_RADIUS * 0.6];\n    offset_x += randomRange(-5, 5);\n    createDot(cluster_point, dot_point + offset_point, DOT_RADIUS * 0.4);\n  }\n}\n\n//////////////////////////////////////////\n// util\n\n// function unite(a) {\n//   console.log(a);\n//   var path = a[0];\n//   path.remove();\n//   var i;\n//   for (i = 1; i < a.length; i++) {\n//     a[i].remove();\n//     console.log(i, a.length);\n//     path = path.unite(a[i]);\n//   }\n//   project.activeLayer.addChild(path);\n//   return path;\n// }\n\nfunction map(x, inMin, inMax, outMin, outMax) {\n  var n = (x - inMin) / (inMax - inMin);\n  return n * (outMax - outMin) + outMin;\n}\n\nfunction randomRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction randomPoint() {\n  return new Point(randomRange(-1, 1), randomRange(-1, 1));\n}\n\nfunction chance(t) {\n  return Math.random() < t;\n}\n\nfunction pick(a) {\n  var i = Math.floor(Math.random() * a.length);\n  return a[i];\n}\n\nfunction relaxPoints(points, min, max, stepSize, steps) {\n  min = min * min;\n  max = max * max;\n  for (step = 0; step < steps; step++) {\n    for (i1 = 0; i1 < points.length; i1++) {\n      for (i2 = 0; i2 < points.length; i2++) {\n        if (i1 === i2) continue;\n        p1 = points[i1];\n        p2 = points[i2];\n        var n = (p1 - p2).normalize();\n        var dist = p1.getDistance(p2, true);\n        if (dist < min) {\n          p1 = p1 + n * stepSize;\n          p2 = p2 - n * stepSize;\n        }\n        if (max && dist > max) {\n          p1 = p1 - n * stepSize;\n          p2 = p2 + n * stepSize;\n        }\n        points[i1] = p1;\n        points[i2] = p2;\n      }\n    }\n  }\n}"
  },
  {
    "_id": "bA9kDBRwcBfRKTCND",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-28T06:02:19.677Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/guwwkgjtucd9jc5riqj2",
        "version": 1556431380,
        "signature": "24c60b852e9d2480e395ce0bd9fa9249d8c71311",
        "width": 500,
        "height": 500,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-28T06:03:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 13609583,
        "type": "upload",
        "etag": "c01958542ed72cc15d86ce1b9bda6f49",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556431380/avalanche2019/guwwkgjtucd9jc5riqj2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556431380/avalanche2019/guwwkgjtucd9jc5riqj2.mov",
        "audio": {},
        "video": {
          "pix_format": "rgb24",
          "codec": "qtrle",
          "level": -99,
          "bit_rate": "10038763",
          "dar": "1:1"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 10876789,
        "duration": 10.01,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "playing around with 3D form, light and shadow in AE"
  },
  {
    "_id": "bAStn8PWiQGNKrkND",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Music",
    "created_at": { "$date": "2019-05-02T17:08:22.686Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/inbxbzrc3ll3rcrvpzo7",
        "version": 1556816935,
        "signature": "86d6c5a82788615ef6720ffcee23463fee934faa",
        "width": 0,
        "height": 0,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-02T17:08:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 85622,
        "type": "upload",
        "etag": "6f987f26159dace263371abe5c23cf65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556816935/avalanche2019/inbxbzrc3ll3rcrvpzo7.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556816935/avalanche2019/inbxbzrc3ll3rcrvpzo7.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "96056",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {},
        "is_audio": true,
        "bit_rate": 99412,
        "duration": 6.890208
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "playing with music notes",
    "inspiration_name": "notes"
  },
  {
    "_id": "bBSgi7pruZ8fsc84m",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:25:16.443Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jj9925rqcf4krpyo3dzj",
        "version": 1553884033,
        "signature": "a2a96b77beaeb86dcab0a2b3d023c23e9a5cfe43",
        "width": 2480,
        "height": 3508,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:27:13Z",
        "tags": [],
        "bytes": 1491696,
        "type": "upload",
        "etag": "4abe95749bf49e00e8b16623fff43615",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553884033/avalanche2019/jj9925rqcf4krpyo3dzj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553884033/avalanche2019/jj9925rqcf4krpyo3dzj.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "poster"
  },
  {
    "_id": "bMGJPKw5Wmb7ciRto",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-05-06T21:00:35.532Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bmbixi6najmthf0onrcg",
        "version": 1557176612,
        "signature": "e155ab591cc9aec841435a891c64b74d88706137",
        "width": 1512,
        "height": 1308,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-06T21:03:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 1273013,
        "type": "upload",
        "etag": "a51662e5b32005d1762346a8d4dd9a7e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557176612/avalanche2019/bmbixi6najmthf0onrcg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557176612/avalanche2019/bmbixi6najmthf0onrcg.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "227703",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "590371",
          "dar": "126:109"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 826855,
        "duration": 12.316667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T15:12:16.151Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T17:52:24.995Z" }
      }
    ],
    "lesson": "Microgames!",
    "title": "",
    "description": "Guy Fieri hungry pong",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.js\n\nlet guy;\n\nlet maxSpeed = 10;\n\nlet hamburger, hotdog;\n\nlet xPos = 100;\nlet yPos = 200;\nlet randY;\nlet x = 20;\nlet y = 20;\nlet dx = 5;\nlet dy = 5;\n\nlet hotdogs, hamburgers;\n\nfunction preload() {\n  guy = loadAnimation(\"guy-1.png\", \"guy-2.png\");\n\n  hamburger = loadImage(\"hamburger.png\");\n  hotdog = loadImage(\"hotdog.png\");\n}\n\nfunction setup() {\n  //   frameRate(15);\n  createCanvas(750, 650);\n\n  hotdog.resize(50, 30);\n  hamburger.resize(50, 50);\n  y = random(10, height - 30);\n  x = random(width / 3, width);\n}\nfunction draw() {\n  background(0);\n  animation(guy, 90, mouseY);\n  x += dx;\n  y += dy;\n\n  food(x, y);\n\n  if (x < 0 || x > width - 50) {\n    dx *= -1;\n  }\n  if (y < 0 || y > height - 50) {\n    dy *= -1;\n  }\n\n  if (\n    (x <= 90) & (y <= mouseY) & (dist(x, y, 90, mouseY) <= 45) ||\n    (x > 90) & (y <= mouseY) & (dist(x, y, 90, mouseY) <= 45)\n  ) {\n    dx *= -1;\n    dy *= -1;\n  }\n}\n\nfunction food(x, y) {\n  image(hamburger, x, y);\n}\n\nfunction keyPressed() {\n  x = random(20, width - 20);\n  y = random(20, width - 20);\n  dx = 5;\n  dy = 5;\n}"
  },
  {
    "_id": "bQjYdwehaMu5iL2re",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-02-25T04:01:52.542Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cyveure2ftbpvbocgjas",
        "version": 1551067328,
        "signature": "fe459ef81e160ffe2c199785dcb5b79a144766af",
        "width": 772,
        "height": 872,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-25T04:02:08Z",
        "tags": [],
        "bytes": 36043,
        "type": "upload",
        "etag": "21a697096be27901d11cf2cf65b3b938",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551067328/avalanche2019/cyveure2ftbpvbocgjas.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551067328/avalanche2019/cyveure2ftbpvbocgjas.jpg"
      },
      {
        "public_id": "avalanche2019/vacah5qkb1q2xxgqyeek",
        "version": 1551067331,
        "signature": "7db7df9541faab3a95f2d51942db318dfa394d90",
        "width": 772,
        "height": 872,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-25T04:02:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 162684,
        "type": "upload",
        "etag": "51de12c6f17c145bb9596ec7e3b38171",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551067331/avalanche2019/vacah5qkb1q2xxgqyeek.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551067331/avalanche2019/vacah5qkb1q2xxgqyeek.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1380",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "49533",
          "dar": "193:218"
        },
        "is_audio": false,
        "frame_rate": 15.002,
        "bit_rate": 53374,
        "duration": 24.345283,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/nzpgettocnrx8amuh6ij",
        "version": 1551067336,
        "signature": "8961f6f6b99bbd5b89da2311070553847382aa26",
        "width": 772,
        "height": 872,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-25T04:02:16Z",
        "tags": [],
        "bytes": 35462,
        "type": "upload",
        "etag": "4dade4e7dbddb3055638c22d12e5c583",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551067336/avalanche2019/nzpgettocnrx8amuh6ij.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551067336/avalanche2019/nzpgettocnrx8amuh6ij.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-26T05:02:15.205Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T03:04:22.818Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Play the Ball Game in which you have to cross the road using your mouse. \nTry to cross with minimum number of collisions.\nTo win the game, avoid bumping into the moving objects.\n\nCreated using p5.js.\nTactics used: ball bounce and collision detection",
    "inspiration_name": "Ball Game",
    "code": "// Ball Game\n// Using the Bouncing Ball Tactic\n// Check reviseTactics.md for more info.\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\n\n// Obstructions\nvar ob1Height, ob2Height, ob3Height; // Height of obstructions\nvar ob1Width, ob2Width, ob3Width; // Width of obstructions\nvar ob1Position, ob2Position, ob3Position; // Location of obstructions\nvar ob1Movement, ob2Movement, ob3Movement; // Movement of obstructions\nvar ob1speed, ob2speed, ob3speed; // Speed of obstructions\n\n// Ball\nvar ballDiameter;\n\n// Collision and Result\nvar collisionCount;\nvar gameResult;\n\n\nfunction setup() {\n    createCanvas(600, 600);\n\n    // Creating Obstructions\n    ob1Height = 400;\n    ob2Height = 200;\n    ob3Height = 450;\n\n    ob1Width = 20;\n    ob2Width = 60;\n    ob3Width = 20;\n\n    ob1Position = 150;\n    ob2Position = 250;\n    ob3Position = 400;\n\n    ob1Movement = 0;\n    ob2Movement = height / 2;\n    ob3Movement = 0;\n\n    ob1speed = 5;\n    ob2speed = 25;\n    ob3speed = 15;\n\n    // Creating Ball\n    ballDiameter = 40;\n\n    collisionCount = 0;\n\n    gameResult = createP(\"Your result: \");\n    createP(\"Use Mouse to move the ball.\");\n}\n\n\nfunction draw() {\n    background(0);\n\n    // Moving Obstructions\n    obstruction1();\n    obstruction2();\n    obstruction3();\n\n    // Moving Ball\n    ballMovement();\n    fill(255);\n    text('Collisions: ' + collisionCount, 20, 20);\n    ballCollisionDetection();\n\n    // Game Result\n    result();\n}\n\n\nfunction obstruction1() {\n    if (ob1Movement < 0) {\n        ob1speed = abs(ob1speed);\n    }\n    if (ob1Movement > height - ob1Height) {\n        ob1speed = -abs(ob1speed);\n    }\n    rect(ob1Position, ob1Movement, ob1Width, ob1Height);\n    ob1Movement += ob1speed;\n    // console.log('Obstacle 1 Position: ' + ob1Movement);\n}\n\n\nfunction obstruction2() {\n    if (ob2Movement < 0) {\n        ob2speed = abs(ob2speed);\n    }\n    if (ob2Movement > height - ob2Height) {\n        ob2speed = -abs(ob2speed);\n    }\n    rect(ob2Position, ob2Movement, ob2Width, ob2Height);\n    ob2Movement += ob2speed;\n}\n\n\nfunction obstruction3() {\n    if (ob3Movement < 0) {\n        ob3speed = abs(ob3speed);\n    }\n    if (ob3Movement > height - ob3Height) {\n        ob3speed = -abs(ob3speed);\n    }\n    rect(ob3Position, ob3Movement, ob3Width, ob3Height);\n    ob3Movement += ob3speed;\n}\n\n\nfunction ballMovement() {\n\n    // switch sides\n    // if (mouseX < 0) {\n    //     mouseX = width - ballDiameter;\n    // }\n    // if (mouseX > width) {\n    //     mouseX = 0;\n    // }\n\n    ellipse(mouseX + ballDiameter / 2, height - ballDiameter / 2, ballDiameter, ballDiameter);\n\n    // console.log('Mouse Position: ' + mouseX);\n}\n\n\nfunction ballCollisionDetection() {\n\n    // for Obstruction 1\n    for (i = ob1Position - ob1Width; i < ob1Position + ob1Width; i++) {\n        if ((mouseX === i) && (ob1Movement > (height - ob1Height - ballDiameter))) {\n            mouseX = 0;\n            collisionCount++;\n            console.log('Number of collisions: ' + collisionCount);\n        }\n    }\n    // for Obstruction 2\n    for (i = ob2Position - ob2Width; i < ob2Position + ob2Width; i++) {\n        if ((mouseX === i) && (ob2Movement > (height - ob2Height - ballDiameter))) {\n            mouseX = 0;\n            collisionCount++;\n            console.log('Number of collisions: ' + collisionCount);\n\n        }\n    }\n    // for Obstruction 3\n    for (i = ob3Position - ob3Width; i < ob3Position + ob3Width; i++) {\n        if ((mouseX === i) && (ob3Movement > (height - ob3Height - ballDiameter))) {\n            mouseX = 0;\n            collisionCount++;\n            console.log('Number of collisions: ' + collisionCount);\n\n        }\n    }\n}\n\n\nfunction result() {\n    if (collisionCount === 0 && mouseX < ob1Position) {\n        gameResult.html('Start the game');\n    }\n    if (collisionCount === 0 && mouseX > (ob3Position + ob3Width)) {\n        gameResult.html('You Won!');\n    }\n    if (collisionCount > 0) {\n        gameResult.html('You lost.');\n    }\n}"
  },
  {
    "_id": "bXKzJKgwqpcmqCBEK",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T23:13:17.299Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lc2tdbzlcxqnwde4uoae",
        "version": 1552000404,
        "signature": "094e3dcf6e874909b9ad2d7038d657d5e1e8d0b6",
        "width": 600,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T23:13:24Z",
        "tags": [],
        "bytes": 15263,
        "type": "upload",
        "etag": "c397df873caa78106de1107a0444bb7b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552000404/avalanche2019/lc2tdbzlcxqnwde4uoae.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552000404/avalanche2019/lc2tdbzlcxqnwde4uoae.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "random color generation of pixel figure",
    "inspiration_name": "pixel figure scaled"
  },
  {
    "_id": "bcFfjMZ8nqNxmXM4Z",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T02:34:18.604Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-04-26T18:27:58.22Z" }
      }
    ],
    "title": "",
    "description": "That’s What I Like",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n  ['G5', '2n'],\n   ['F5', '2n'],\n    ['E5', '2n'],\n     ['D5', '4n'],\n      ['C5', '4n'], \n      ['A4', '4n'],\n       ['E5', '4n'],\n   \n    ['G5', '4n'],\n   ['F5', '4n'],\n    ['E5', '4n'],\n     ['D5', '4n'],\n      ['C5', '4n'], \n      ['G5', '4n'],\n       ['D5', '4n'],\n\n        ['E5', '8n'],\n        ['E5', '8n'],\n        ['E5', '8n'],\n        ['E5', '8n'],\n        ['C5', '8n'],\n        ['A4', '8n'],\n        ['D5', '4n'],\n\n        ['E5', '8n'],\n        ['C5', '8n'],\n        ['A4', '8n'],\n        ['D5', '4n'],\n\n         ['E5', '8n'],\n        ['E5', '8n'],\n        ['E5', '8n'],\n        ['E5', '8n'],\n        ['C5', '8n'],\n        ['A4', '8n'],\n        ['D5', '4n'],\n\n           ['E5', '8n'],\n        ['C5', '8n'],\n        ['A4', '8n'],\n        ['D5', '4n'],\n  \n\n\n\n\n\n  \n \n\n\n \n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "bdquhWxo524R8CQZ5",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T04:11:18.13Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mbdrpynfwbsalyxh4pip",
        "version": 1555042282,
        "signature": "19bac0ba5f8362e121e524c036c1a75a1c0afe4b",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T04:11:22Z",
        "tags": [],
        "bytes": 118180,
        "type": "upload",
        "etag": "5d4148aec6ddf83b9b5dbbd89b91990f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555042282/avalanche2019/mbdrpynfwbsalyxh4pip.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555042282/avalanche2019/mbdrpynfwbsalyxh4pip.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "inspire by Ting's last year sketch",
    "inspiration_name": "TING CHENG",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?http://sketches2018.compform.net/posts/8T9AKxYXWnFe6Yaug/code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nfunction setup() {\n  createCanvas(500, 500);\n  frameRate(5);\n\n}\n\nfunction draw(){\n  background(219,218,213);\n  generateTitle(); \n}\n\n\nfunction sample(array) {\n\tvar index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\n\nfunction generateTitle(text_sz) {\n  for(x=0;x<15;x++){\n  for(y=0;y<8;y++){\n  var o = [\"o\", \"0\",  \".\"];\n  var oo = sample(o);\n\n  var title = \"\";\n    title = `${oo}`\n  \n  var x;\n  var y;\n    text_sz = random(10,60);\n    textSize(text_sz);\n    text(title,100+20*x, 120+40*y);\n    }\n  }\n\n}"
  },
  {
    "_id": "beJ5FmLZCsbLJFwpp",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T23:54:17.024Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cvxmdzvkasspyt16mx9h",
        "version": 1554854269,
        "signature": "3bb50af1d8bf5a25da427639ad2dcd888ade404d",
        "width": 2952,
        "height": 1970,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T23:57:49Z",
        "tags": [],
        "bytes": 596367,
        "type": "upload",
        "etag": "cf8ea3104cde69c932eb49bf5369cfe4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554854269/avalanche2019/cvxmdzvkasspyt16mx9h.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554854269/avalanche2019/cvxmdzvkasspyt16mx9h.png"
      },
      {
        "public_id": "avalanche2019/hj8astvziemg5hqqfbaf",
        "version": 1554854323,
        "signature": "9a56a759612b36688a7859b2f79ce8eb0970ab11",
        "width": 2952,
        "height": 1970,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T23:58:43Z",
        "tags": [],
        "bytes": 596367,
        "type": "upload",
        "etag": "cf8ea3104cde69c932eb49bf5369cfe4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554854323/avalanche2019/hj8astvziemg5hqqfbaf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554854323/avalanche2019/hj8astvziemg5hqqfbaf.png"
      },
      {
        "public_id": "avalanche2019/v4ejhfeglx4bylcmz2rf",
        "version": 1554854361,
        "signature": "dad185a425a6cd99b76c4f37f7ec3378754d1953",
        "width": 740,
        "height": 262,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T23:59:21Z",
        "tags": [],
        "bytes": 29357,
        "type": "upload",
        "etag": "25ac196f02141e0172484181ef857d74",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554854361/avalanche2019/v4ejhfeglx4bylcmz2rf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554854361/avalanche2019/v4ejhfeglx4bylcmz2rf.png"
      }
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-10T06:35:50.093Z" }
      }
    ],
    "title": "",
    "description": "A little mad libs poem to start getting used to text. \n\nThe first one roughly translates to:\nSeptember brings love to those who search. \nVirgo hides behind their rose. \nThe world is seen through pink tinted glasses.\n\nThe second one to:\nDecember brings power to those who search. \nGeminis hides behind their trophy . \nThe world is seen through sky blue tinted glasses."
  },
  {
    "_id": "bec6tvznijCG3rz6X",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Strategies",
    "created_at": { "$date": "2019-02-22T04:54:54.392Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "bhFtAGfK7j6j84cvd",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "created_at": { "$date": "2019-02-01T06:35:35.677Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vbxljcsthe1mszelbxhn",
        "version": 1549002941,
        "signature": "d47457e8b1e0c387a46c472375ce15ab13a3bba4",
        "width": 800,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T06:35:41Z",
        "tags": [],
        "bytes": 17967,
        "type": "upload",
        "etag": "01057f492973f8413d36a85a0e72c024",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549002941/avalanche2019/vbxljcsthe1mszelbxhn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549002941/avalanche2019/vbxljcsthe1mszelbxhn.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:00:21.895Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:02:05.209Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Shades",
    "inspiration_name": "Tiles 3"
  },
  {
    "_id": "bhoevz63PtwTQcMYs",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-18T23:44:37.836Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ik9jbrlxyxdqwzyhwbp8",
        "version": 1552952683,
        "signature": "1dde705a4178a391e79c8308eb413ee447284f0b",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-18T23:44:43Z",
        "tags": [],
        "bytes": 1004376,
        "type": "upload",
        "etag": "b0eda10e8b0d8cbd8a795d7cea0721a7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552952683/avalanche2019/ik9jbrlxyxdqwzyhwbp8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552952683/avalanche2019/ik9jbrlxyxdqwzyhwbp8.png"
      },
      {
        "public_id": "avalanche2019/tmzw5r8ncbzjutpuwyr3",
        "version": 1552954464,
        "signature": "176287509190517dc755f05fa597887cd42f9941",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-19T00:14:24Z",
        "tags": [],
        "bytes": 652587,
        "type": "upload",
        "etag": "6575a5fa787165ca85a00141024f8c54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552954464/avalanche2019/tmzw5r8ncbzjutpuwyr3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552954464/avalanche2019/tmzw5r8ncbzjutpuwyr3.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Took yesterday's sketch and moved it towards a wall garden. Also makes me think of electron microscope images.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n\nvar width = 600;\nvar height = 600;\nvar cluster_count = 10;\nvar cluster_radius = 130;\nvar dot_count = 70;\nvar dot_radius = 18;\n\nvar bounds = new Rectangle(new Point(0, 0), new Point(width, height));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = \"#EEE\";\n\ncreateClusters();\n// project.activeLayer.scale(0.25);\n\nfunction createClusters() {\n  var cluster_points = [];\n  var i;\n  for (i = 0; i < cluster_count; i++) {\n    cluster_points.push(\n      new Point(randomRange(0, width), randomRange(0, height))\n    );\n  }\n  relaxPoints(\n    cluster_points,\n    cluster_radius * 1.5,\n    false,\n    cluster_radius * 0.1,\n    10\n  );\n\n  cluster_points.sort(function(a, b) {\n    return a.y < b.y ? -1 : 1;\n  });\n  for (i = 0; i < cluster_points.length; i++) {\n    var point = cluster_points[i];\n    createCluster(point);\n  }\n}\n\nfunction createCluster(cluster_point) {\n  var dot_points = [];\n  var i;\n  for (i = 0; i < dot_count; i++) {\n    // console.log(cluster_point, cluster_point + randomPoint * cluster_radius);\n    dot_points.push(randomPoint() * cluster_radius * 0.5);\n  }\n  relaxPoints(dot_points, dot_radius * 1.4, 0, dot_radius * 0.1, 100);\n  dot_points.sort(function(a, b) {\n    return a.length < b.length ? 1 : -1;\n  });\n\n  var types = [\"leaf\", \"vine\", \"flower\", \"vine\"];\n  var type = pick(types);\n\n  if (type === \"leaf\") createLeafPlant(cluster_point, dot_points);\n  if (type === \"flower\") createFlowerPlant(cluster_point, dot_points);\n  if (type === \"vine\") createVinePlant(cluster_point, dot_points);\n}\n\nfunction createFlowerPlant(cluster_point, dot_points) {\n  base_color = new Color(0.1, 0.5, 0.15, 1);\n  tint = Math.min(randomRange(0, 0.2), randomRange(0, 0.2));\n  tint_color = new Color(tint, tint, tint, 0);\n  cluster_color = base_color - tint_color;\n\n  if (chance(0.5)) {\n    flower_color = new Color(0.7, 0.1, 0.1);\n  } else {\n    flower_color = new Color(1, 1, 1);\n  }\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    if (chance(0.2)) {\n      createFlower(cluster_point, dot_point, flower_color);\n    } else {\n      createDot(cluster_point, dot_point, cluster_color);\n    }\n  }\n}\n\nfunction createVinePlant(cluster_point, dot_points) {\n  base_color = new Color(0.1, 0.5, 0.15, 1);\n  tint = Math.min(randomRange(0, 0.2), randomRange(0, 0.2));\n  tint_color = new Color(tint, tint, tint, 0);\n  cluster_color = base_color - tint_color;\n\n  vine_color = cluster_color * 1.1;\n\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    if (chance(0.3)) {\n      createVine(cluster_point, dot_point, vine_color);\n      createDot(cluster_point, dot_point, cluster_color);\n    } else {\n      createDot(cluster_point, dot_point, cluster_color);\n    }\n  }\n}\n\nfunction createLeafPlant(cluster_point, dot_points) {\n  base_color = new Color(0.1, 0.5, 0.15, 1);\n  tint = Math.min(randomRange(0, 0.2), randomRange(0, 0.2));\n  tint_color = new Color(tint, tint, tint, 0);\n  cluster_color = base_color - tint_color;\n\n  for (i = 0; i < dot_points.length; i++) {\n    var dot_point = dot_points[i];\n    createDot(cluster_point, dot_point, cluster_color);\n  }\n}\n\nfunction createDot(cluster_point, dot_point, cluster_color) {\n  var path = new Path.Circle(cluster_point + dot_point, dot_radius);\n  tint = Math.min(randomRange(0, 0.05), randomRange(0, 0.05));\n  tint_color = new Color(tint, tint, tint, 0);\n  dot_color = cluster_color - tint_color;\n  path.style = {\n    fillColor: dot_color,\n    shadowColor: new Color(0, 0, 0, 0.3),\n    shadowBlur: 16,\n    shadowOffset: new Point(randomRange(-2, 2), randomRange(0.5, 2))\n  };\n}\n\nfunction createFlower(cluster_point, dot_point, base_color) {\n  tint = Math.min(randomRange(0, 0.05), randomRange(0, 0.05));\n  tint_color = new Color(tint, tint, tint, 0);\n  flower_color = base_color - tint_color;\n\n  var d = dot_point / 100;\n  var i;\n  var paths = [];\n  for (i = 0; i < 10; i++) {\n    var path = new Path.Circle(\n      cluster_point + dot_point,\n      map(i, 0, 10, dot_radius, dot_radius * 0.25)\n    );\n    path.style = {\n      fillColor: flower_color,\n      shadowColor: new Color(0, 0, 0, 0.1),\n      shadowBlur: 16,\n      shadowOffset: new Point(randomRange(-2, 2), randomRange(0.5, 2))\n    };\n    paths.push(path);\n    d = d + [0, 0.02];\n    dot_point += d * i;\n  }\n  //  var path = unite(paths);\n}\n\nfunction createVine(cluster_point, dot_point, base_color) {\n  tint = Math.min(randomRange(0, 0.05), randomRange(0, 0.05));\n  tint_color = new Color(tint, tint, tint, 0);\n  flower_color = base_color - tint_color;\n\n  var i;\n  var paths = [];\n  var length = Math.min(randomRange(10, 40), randomRange(10, 40));\n  var offset_x = 0;\n  for (i = 0; i < length; i++) {\n    var offset_point = [offset_x, i * dot_radius * 0.6];\n    offset_x += randomRange(-5, 5);\n    var path = new Path.Circle(\n      cluster_point + dot_point + offset_point,\n      dot_radius * 0.4\n    );\n    path.style = {\n      fillColor: flower_color,\n      shadowColor: new Color(0, 0, 0, 0.3),\n      shadowBlur: 16,\n      shadowOffset: new Point(randomRange(-2, 2), randomRange(0.5, 2))\n    };\n    paths.push(path);\n  }\n  //  var path = unite(paths);\n}\n\nfunction unite(a) {\n  console.log(a);\n  var path = a[0];\n  path.remove();\n  var i;\n  for (i = 1; i < a.length; i++) {\n    a[i].remove();\n    console.log(i, a.length);\n    path = path.unite(a[i]);\n  }\n  project.activeLayer.addChild(path);\n  return path;\n}\n\nfunction map(x, inMin, inMax, outMin, outMax) {\n  var n = (x - inMin) / (inMax - inMin);\n  return n * (outMax - outMin) + outMin;\n}\nfunction randomRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction randomPoint() {\n  return new Point(randomRange(-1, 1), randomRange(-1, 1));\n}\n\nfunction chance(t) {\n  return Math.random() < t;\n}\n\nfunction pick(a) {\n  var i = Math.floor(Math.random() * a.length);\n  return a[i];\n}\nfunction relaxPoints(points, min, max, stepSize, steps) {\n  min = min * min;\n  max = max * max;\n  for (step = 0; step < steps; step++) {\n    for (i1 = 0; i1 < points.length; i1++) {\n      for (i2 = 0; i2 < points.length; i2++) {\n        if (i1 === i2) continue;\n        p1 = points[i1];\n        p2 = points[i2];\n        var n = (p1 - p2).normalize();\n        var dist = p1.getDistance(p2, true);\n        if (dist < min) {\n          p1 = p1 + n * stepSize;\n          p2 = p2 - n * stepSize;\n        }\n        if (max && dist > max) {\n          p1 = p1 - n * stepSize;\n          p2 = p2 + n * stepSize;\n        }\n        points[i1] = p1;\n        points[i2] = p2;\n      }\n    }\n  }\n}"
  },
  {
    "_id": "bhtFTLumd6xsiSG9x",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-29T22:29:50.398Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wolej7dgn38nevqezstn",
        "version": 1556586065,
        "signature": "c63344ae6f9447afe077a6472493daaee2472a54",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-30T01:01:05Z",
        "tags": [],
        "bytes": 340922,
        "type": "upload",
        "etag": "eeeeb6eef4f441ab626f12f2373497ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556586065/avalanche2019/wolej7dgn38nevqezstn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556586065/avalanche2019/wolej7dgn38nevqezstn.jpg"
      },
      {
        "public_id": "avalanche2019/ir2ntctvcalq9mt8ttxg",
        "version": 1556586071,
        "signature": "a337bded539644cf22fd874f752fee038e55fe81",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-30T01:01:11Z",
        "tags": [],
        "bytes": 539216,
        "type": "upload",
        "etag": "0cb3dec59fe1ea8c17f9d3d8cfe1cabe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556586071/avalanche2019/ir2ntctvcalq9mt8ttxg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556586071/avalanche2019/ir2ntctvcalq9mt8ttxg.jpg"
      },
      {
        "public_id": "avalanche2019/slf3bnfmwcssiykeb3p4",
        "version": 1556586075,
        "signature": "4798dac870f28072c48d20ea251ae9afe2be4ae8",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-30T01:01:15Z",
        "tags": [],
        "bytes": 386204,
        "type": "upload",
        "etag": "b47bb8c1022d7b3f35f60389cecbd00f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556586075/avalanche2019/slf3bnfmwcssiykeb3p4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556586075/avalanche2019/slf3bnfmwcssiykeb3p4.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-30T14:54:04.835Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-01T18:01:03.418Z" }
      }
    ],
    "title": "",
    "description": "Ouroboros Death Star. Inspired by Felix's accidental helmet. I realized one of my main ways of learning is to take something I like and push its parameters. It's fun to break things.",
    "code": "$fn = 10;\nbrick_length = 28;\nbrick_height = 8;\n\n\nmodule wall_ring () {\n    for (r = [0:100]) {\n        rotate([0,0,3.6*r]) translate([0,1000,0])  cube([400,6,30],true);\n    }\n}\nmodule wall() {\n    for (l = [0:1000]) {\n        rotate([0,1.8*l,0]) translate([0,0,4*l]) wall_ring();\n    }\n}\n\nwall();\n\nmodule wall_ring () {\n    for (r = [0:100]) {\n        rotate([0,0,3.6*r]) translate([8000,1000,0])  cube([400,6,30],true);\n    }\n}\nmodule wall() {\n    for (l = [0:1000]) {\n        rotate([0,1.8*l,0]) translate([1000,0,4*l]) wall_ring();\n    }\n}\n\nwall();"
  },
  {
    "_id": "bpFpoRCCpiqhFoan7",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T18:31:12.752Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qpo8vracphhwnqkt81rs",
        "version": 1554402682,
        "signature": "1b025e47ec55b7c186172b2636ca1e1a42ca7e2e",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-04T18:31:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 3328785,
        "type": "upload",
        "etag": "773d0e2283b78db599deec4cdbf61160",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554402682/avalanche2019/qpo8vracphhwnqkt81rs.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554402682/avalanche2019/qpo8vracphhwnqkt81rs.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317588",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "4941123"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 5236854,
        "duration": 5.04,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T19:19:46.129Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "bxjP3B5jGSjgBxFrt",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T21:54:30.014Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ucnkr7t8mhxgvsr9kuj6",
        "version": 1549490081,
        "signature": "cbfa3898a5e1c9709cb6cf42aeaf83bca3da2fa2",
        "width": 2880,
        "height": 1420,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T21:54:41Z",
        "tags": [],
        "bytes": 1291494,
        "type": "upload",
        "etag": "0583142c0947203a8b6942466556db97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549490081/avalanche2019/ucnkr7t8mhxgvsr9kuj6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549490081/avalanche2019/ucnkr7t8mhxgvsr9kuj6.png"
      },
      {
        "public_id": "avalanche2019/dnhai3st9nq7csmivfe5",
        "version": 1549490189,
        "signature": "f28a39b1de32186624cfe5c376f2e525f550b300",
        "width": 1024,
        "height": 894,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-06T21:56:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 3819619,
        "type": "upload",
        "etag": "279999df285695078afe7a9162b474be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549490189/avalanche2019/dnhai3st9nq7csmivfe5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549490189/avalanche2019/dnhai3st9nq7csmivfe5.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "81875",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "4840285",
          "dar": "512:447"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 4928540,
        "duration": 6.2,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Random circle lightness, random circles sizes with low bias, and hue slider top left\n\n`made with p5.js`",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\n// make2D array function code from The Coding Train Tutorial\n// https://www.youtube.com/watch?v=OTNpiLUSiB4\nlet cols = 50;\nlet rows = 30;\n\nfunction make2Darray(cols, rows) {\n  var arr = new Array(cols);\n  arr.forEach(el => {\n    arr[el] = new Array(rows);\n  });\n  return arr;\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 100);\n  make2Darray(cols, rows);\n\n  slider = createSlider(0, 100, 50, 10);\n  slider.position(20, 15);\n  slider.style(\"width\", \"80px\");\n  slider.style(\"background-color\", \"red\");\n}\n\nfunction draw() {\n  let radius = min(\n    random(10, 75),\n    random(10, 75),\n    random(10, 75),\n    random(10, 75),\n    random(10, 75)\n  );\n\n  let hue = slider.value();\n  frameRate(5);\n  background(\"#222\");\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * 30;\n      let y = j * 30;\n      fill(hue, 60, random(100));\n      stroke(hue, 60, random(100));\n      ellipse(x, y, radius);\n      rect(x, y, 30, 30);\n    }\n  }\n}"
  },
  {
    "_id": "c6y9jrm7mz4Acfqww",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-23T16:08:28.584Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gfoicl0gqykq95gbohru",
        "version": 1556035767,
        "signature": "763635581fea0fa097616d9a8fd9e9c8309861fb",
        "width": 1068,
        "height": 1168,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-23T16:09:27Z",
        "tags": [],
        "bytes": 138547,
        "type": "upload",
        "etag": "234f8b6e6901a430be6c440250e9475e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556035767/avalanche2019/gfoicl0gqykq95gbohru.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556035767/avalanche2019/gfoicl0gqykq95gbohru.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-23T20:46:27.041Z" }
      }
    ],
    "title": "",
    "description": "Progress toward text free grammars and synth note player; getting some errors, need to move on but will pick it back up tomorrow",
    "code": "// require /text/tracery.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth({\n    oscillator: {\n        type: 'sine', // sine, square, triangle, sawtooth, fat*\n    },\n    envelope: {\n        attack: 0.1,\n        decay: 0.1,\n        sustain: 0.5,\n        release: 1,\n    },\n});\nsynth.toMaster();\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n    // Play the melody!\n\n    const melody = generate();\n    // console.log(melody);\n    play(melody);\n    //    const notes = input_text.split(\" \");\n}\n\n\n\nfunction generate() {\n\n    const songGrammar = {\n        \"song\": [\"#g# #measure1# #rest#\"],\n        \"measure1\": [\"#p1# #p1# #p1# #p1# #p1# #p1# #p1# #p1# \"],\n        \"p1\": ['#c# #D/e# fg'],\n        \"fg\": ['#f# #g#'],\n        \"D/e\": ['#D#', '#e#'],\n        \"g\": [\"g4 2n\"],\n        \"c\": [\"c4 2n\"],\n        \"f\": [\"f4 8n\"],\n        \"D\": [\"D4 4n\"],\n        \"e\": [\"e4 4n\"],\n        \"rest\": [\"REST 1m\"],\n\n    }\n    let grammar = tracery.createGrammar(songGrammar);\n    console.log(grammar);\n    let song = grammar.flatten(\"#song#\");\n    // console.log(song);\n    const storyDiv = document.createElement('div');\n    storyDiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n    storyDiv.textContent = song;\n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    return song;\n}\n\n\nfunction play(melody) {\n    let t = Tone.now();\n    for (let i = 0; i < melody.length; i += 2) {\n        console.log(melody[i], melody[i + 1].toNotation());\n        if (melody[i] !== 'REST') {\n            // synth.triggerAttackRelease(note[0], note[1]), t);\n            synth.triggerAttackRelease(melody[i], Tone.Time(melody[i + 1]) - 0.01, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n}\n\nconsole.log('click for music!');"
  },
  {
    "_id": "cAZkr2Y5oHPbvbdko",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T05:29:30.538Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/chg4gzhrlx0g21pw1583",
        "version": 1550813759,
        "signature": "e9eeea0ba3c5d1c4f267a93234efd08c1a375115",
        "width": 994,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T05:35:59Z",
        "tags": [],
        "bytes": 457652,
        "type": "upload",
        "etag": "0eb138baadd7b519a1bc7f4e24d7576e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550813759/avalanche2019/chg4gzhrlx0g21pw1583.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550813759/avalanche2019/chg4gzhrlx0g21pw1583.png"
      },
      {
        "public_id": "avalanche2019/kvkewwjbdk1fudrnyzfz",
        "version": 1550813767,
        "signature": "a9111f1390ec5702afe631701279e79ef8e59551",
        "width": 1000,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T05:36:07Z",
        "tags": [],
        "bytes": 475228,
        "type": "upload",
        "etag": "8646517368e9a11f20d95149c6ce5629",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550813767/avalanche2019/kvkewwjbdk1fudrnyzfz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550813767/avalanche2019/kvkewwjbdk1fudrnyzfz.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Treasure map",
    "inspiration_name": "3D Terrain Generation",
    "inspiration_url": "https://www.youtube.com/watch?v=IKB1hWWedMk",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// code by Daniel Shiffman \"3D Terrain Generation with Perlin Noise in Processing\" https://www.youtube.com/watch?v=IKB1hWWedMk\n\nvar cols, rows;\nvar scallee = 3;\nvar h = 800;\nvar w = 800;\nvar flying = 0;\nvar terrain = [];\n\nfunction setup() {\n  createCanvas(500, 500, WEBGL);\n  cols = w / scallee;\n  rows = h / scallee;\n\n  for (var x = 0; x < cols; x++) {\n    terrain[x] = [];\n    for (var y = 0; y < rows; y++) {\n      terrain[x][y] = 0;\n    }\n  }\n  noLoop();\n\n}\n\nfunction draw() {\n  flying -= 0.5;\n  var yoff = flying;\n  for (var y = 0; y < rows; y++) {\n    var xoff = 0;\n    for (var x = 0; x < cols; x++) {\n      terrain[x][y] = map(noise(xoff, yoff), 0, 1, -170, 170);\n      xoff += 0.02;\n    }\n    yoff += 0.02;\n  }\n\n  translate(0, 100);\n  rotateX(PI/3.4);\n  smooth();\n  strokeWeight(0.3);\n  noFill();\n  stroke(\"#273d0e\");\n  translate(-w/2, -h*0.4);\n  for (var y = 0; y < rows-1; y++) {\n    beginShape();\n    for (var x = 0; x < cols; x++) {\n      vertex(x*scallee, y*scallee, terrain[x][y]);\n      vertex(x*scallee, (y+1)*scallee, terrain[x][y+1]);\n    }\n    endShape();\n  }\n\n  //treasure\n  translate(random(100,400),random(100, 400))\n  rotateX(frameCount * 0.3);\n  rotateY(frameCount * 0.3);\n  fill(\"#ff3d30\");\n  box(10);\n}"
  },
  {
    "_id": "cBqha26B8kF5WxBbo",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T17:29:48.983Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xwbwlvcjr7nxajtonpb6",
        "version": 1556299960,
        "signature": "9ac5e8907a8754f79be58c7c50aff78c927d2f69",
        "width": 492,
        "height": 680,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T17:32:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 336713,
        "type": "upload",
        "etag": "75f60bd7a364f8b0bebe0d0696fe241e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556299960/avalanche2019/xwbwlvcjr7nxajtonpb6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556299960/avalanche2019/xwbwlvcjr7nxajtonpb6.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "344758",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "15774",
          "dar": "123:170"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 378550,
        "duration": 7.115833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "cDRtH2NEi4BYr52MN",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T13:50:22.486Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zoncanicpd8owgjsuve1",
        "version": 1556286735,
        "signature": "b32e431c843f9d14cb1c4df2ee17da74df001ab3",
        "width": 806,
        "height": 400,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T13:52:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 4982578,
        "type": "upload",
        "etag": "b5f3864a8dae4d0a3391ff5778b26d3a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556286735/avalanche2019/zoncanicpd8owgjsuve1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556286735/avalanche2019/zoncanicpd8owgjsuve1.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "190603",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4260791",
          "dar": "403:200"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5121279,
        "duration": 7.783333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/wxdqoh65glzqxsngvdix",
        "version": 1556286741,
        "signature": "b7edbd116299866a2d893b87aa1f7ba40ffcf627",
        "width": 806,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-26T13:52:21Z",
        "tags": [],
        "bytes": 22908,
        "type": "upload",
        "etag": "f62e318b778b115321240d046d607272",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556286741/avalanche2019/wxdqoh65glzqxsngvdix.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556286741/avalanche2019/wxdqoh65glzqxsngvdix.png"
      },
      {
        "public_id": "avalanche2019/cgn800txwe18kyto6sdn",
        "version": 1556304339,
        "signature": "ba6ce977b297946810f9a3eb8cfb76068f96031c",
        "width": 806,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-26T18:45:39Z",
        "tags": [],
        "bytes": 23411,
        "type": "upload",
        "etag": "9ed19d19415dcd6e3c21e48057a55024",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556304339/avalanche2019/cgn800txwe18kyto6sdn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556304339/avalanche2019/cgn800txwe18kyto6sdn.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-26T18:48:03.655Z" }
      }
    ],
    "title": "",
    "description": "Playing with oscillators.",
    "code": "let osc, fft;\n\nfunction setup() {\n  createCanvas(800, 400);\n\n  osc = new p5.TriOsc(); // set frequency and type\n  osc.amp(0.5);\n\n  fft = new p5.FFT();\n  osc.start();\n}\n\nfunction draw() {\n  background(40, 40, 40);\n  \n    //vertical bars\n  fill(30);\n  rect(0, 0, 50, 400);\n  rect(100, 0, 50, 400);\n  rect(200, 0, 50, 400);\n  rect(300, 0, 50, 400);\n  rect(400, 0, 50, 400);\n  rect(500, 0, 50, 400);\n  rect(600, 0, 50, 400);\n  rect(700, 0, 50, 400);\n\n//horizontal lines\n  fill(40, 40, 40);\n  rect(0, 25, 800, 1);\n    rect(0, 50, 800, 1);\n    rect(0, 75, 800, 1);\n    rect(0, 50, 800, 1);\n    rect(0, 100, 800, 1);\n    rect(0, 125, 800, 1);\n    rect(0, 150, 800, 1);\n    rect(0, 175, 800, 1);\n    rect(0, 200, 800, 1);\n    rect(0, 225, 800, 1);\n    rect(0, 250, 800, 1);\n    rect(0, 275, 800, 1);\n    rect(0, 300, 800, 1);\n    rect(0, 325, 800, 1);\n    rect(0, 350, 800, 1);\n    rect(0, 375, 800, 1);\n\n  let waveform = fft.waveform(); // analyze the waveform\n  beginShape();\n  fill(255);\n  strokeWeight(5);\n  for (let i = 0; i < waveform.length; i++) {\n    let x = map(i, 0, waveform.length, 0, width);\n    let y = map(waveform[i], -1, 1, height, 0);\n    vertex(x, y);\n  }\n  endShape();\n\n  // change oscillator frequency based on mouseX\n  let freq = map(mouseX, 0, width, 40, 880);\n  osc.freq(freq);\n\n  let amp = map(mouseY, 0, height, 1, 0.01);\n  osc.amp(amp);\n}"
  },
  {
    "_id": "cHJfu8oDszt7Qv8Py",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "created_at": { "$date": "2019-03-01T15:58:26.316Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sn3tgmk0vtdxtgnmc9z0",
        "version": 1551455911,
        "signature": "e7ab7fe349209c58cf460a7ea19d189101e96f0e",
        "width": 964,
        "height": 556,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T15:58:31Z",
        "tags": [],
        "bytes": 32248,
        "type": "upload",
        "etag": "cee86b08b16b7c74c61db0a9faded15a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551455911/avalanche2019/sn3tgmk0vtdxtgnmc9z0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551455911/avalanche2019/sn3tgmk0vtdxtgnmc9z0.png"
      },
      {
        "public_id": "avalanche2019/m6vbpnv9ok3sgifetqeg",
        "version": 1551455916,
        "signature": "758d89ac63386a7d6e162719eefbc01f20fec1dd",
        "width": 964,
        "height": 548,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T15:58:36Z",
        "tags": [],
        "bytes": 33183,
        "type": "upload",
        "etag": "aed5b9506089632fb2bb5c518dffd139",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551455916/avalanche2019/m6vbpnv9ok3sgifetqeg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551455916/avalanche2019/m6vbpnv9ok3sgifetqeg.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Almost"
  },
  {
    "_id": "cMYX8k4SpMyCw6ybY",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-04T16:04:44.389Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jc4g9qfoqnx5tboy4lw0",
        "version": 1556986252,
        "signature": "64903c450238c40c7c9b58646d9c8762136b0475",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-04T16:10:52Z",
        "tags": [],
        "bytes": 2269957,
        "type": "upload",
        "etag": "3198a488e43512a3746c6747295d0733",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556986252/avalanche2019/jc4g9qfoqnx5tboy4lw0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556986252/avalanche2019/jc4g9qfoqnx5tboy4lw0.jpg"
      },
      {
        "public_id": "avalanche2019/pdgipinylsigv0lle5ax",
        "version": 1556986616,
        "signature": "ed260b16f4f0472cb6205384ef0114962bb740d8",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-04T16:16:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 13994546,
        "type": "upload",
        "etag": "910e0a2b20085a74e2b5deb6d8a65029",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556986616/avalanche2019/pdgipinylsigv0lle5ax.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556986616/avalanche2019/pdgipinylsigv0lle5ax.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "106843",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2339639",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 2465345,
        "duration": 45.412033,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ij07rf3l5d1blmnkav3l",
        "version": 1556987706,
        "signature": "377c0b16507c711d411c8d3c8273ae5cd6bcc896",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-04T16:35:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 16904783,
        "type": "upload",
        "etag": "69ac6af7725fd4db5715d9214221be91",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556987706/avalanche2019/ij07rf3l5d1blmnkav3l.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556987706/avalanche2019/ij07rf3l5d1blmnkav3l.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "115851",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "7274424",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 7464263,
        "duration": 18.1181,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-05T05:04:44.804Z" }
      }
    ],
    "title": "",
    "description": "Making a silicon lung... the third video is something I saw online: the newly-released (May 2nd) very first 3d bioprinted lung-mimicking air sac (https://www.youtube.com/watch?v=GqJYMgAcc0Q&feature=youtu.be)"
  },
  {
    "_id": "cXf49toA75QfkK2SP",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T04:37:12.519Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/myykatkpc00fn9041ttm",
        "version": 1556858305,
        "signature": "6e1de767f8fca7e183a0ec0b9191b18a45d16821",
        "width": 858,
        "height": 934,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-03T04:38:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 4301270,
        "type": "upload",
        "etag": "562f1053db536e99f0ef0d55d73e4596",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556858305/avalanche2019/myykatkpc00fn9041ttm.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556858305/avalanche2019/myykatkpc00fn9041ttm.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "77469",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "3857278",
          "dar": "429:467"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 3940084,
        "duration": 8.733356,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/bhixm8n11ypzegxfmt2b",
        "version": 1556858383,
        "signature": "f241f35be6031ffb5f4d6e9db33e46823ff97d65",
        "width": 550,
        "height": 956,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T04:39:43Z",
        "tags": [],
        "bytes": 63712,
        "type": "upload",
        "etag": "1f84b4345d326fee933642d161a30973",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556858383/avalanche2019/bhixm8n11ypzegxfmt2b.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556858383/avalanche2019/bhixm8n11ypzegxfmt2b.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:45:33.73Z" }
      }
    ],
    "title": "",
    "description": "I'm not sure but it looks like there's a party inside one of those lead refill containers for a mechanical pencil"
  },
  {
    "_id": "cZdCzQbD9NLnteX6y",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T04:07:46.079Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kgvo4idruk8x2e7q1lfs",
        "version": 1550549383,
        "signature": "3600882d60d4536638e0af84f7ed6a5173fb5834",
        "width": 638,
        "height": 728,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-19T04:09:43Z",
        "tags": [],
        "bytes": 38189,
        "type": "upload",
        "etag": "f98c80e1bfcbd6930912b0ed8d1ba23b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550549383/avalanche2019/kgvo4idruk8x2e7q1lfs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550549383/avalanche2019/kgvo4idruk8x2e7q1lfs.jpg"
      },
      {
        "public_id": "avalanche2019/vfzsxluq6jw6tkvmev2l",
        "version": 1550549403,
        "signature": "35bdd58be0c23fc199b47b894a670e002b6a4b08",
        "width": 638,
        "height": 728,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-19T04:10:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 596706,
        "type": "upload",
        "etag": "6ebe60f4a565a9bd41543da3d738d335",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550549403/avalanche2019/vfzsxluq6jw6tkvmev2l.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550549403/avalanche2019/vfzsxluq6jw6tkvmev2l.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "380626",
          "dar": "319:364"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 383348,
        "duration": 12.445896,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/lovtzroo3uzhz6c8x04j",
        "version": 1550549495,
        "signature": "6cf1c31abc18d5f7bbc8fe65b02c1d924aaf9c23",
        "width": 638,
        "height": 728,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-19T04:11:35Z",
        "tags": [],
        "bytes": 31927,
        "type": "upload",
        "etag": "a88065d95b53b145ea3f8d9ee339c3c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550549495/avalanche2019/lovtzroo3uzhz6c8x04j.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550549495/avalanche2019/lovtzroo3uzhz6c8x04j.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a natural landscape using the noise function in p5.js.\nThe Mountains and river move at different speeds creating a parallax effect. The slider changes the time of the day, and the entire landscape changes color based on the sun's location.",
    "inspiration_name": "Sea Landscape",
    "code": "// Creating a landscape\n// Control the landscape look based on sunrise and sunset\n// Generating waves and mountains through Noise function\n\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nvar mountainStartValue = 0; // start value of graph\nvar mountainSlope = 0.003; // increment value\n\nvar riverStartValue = 0;\nvar riverSlope = 0.01;\n\nvar sun_position_slider;\nvar mountain_color;\nvar river_color;\nvar sky_color;\n\n// Color changes as per sun's position\nvar dayPosition = 50;\nvar nightPosition = 350;\n\nfunction setup() {\n    createCanvas(500, 500);\n\n    createP('Change time of the day');\n    sun_position_slider = createSlider(dayPosition, nightPosition, 50, 10);\n}\n\n\nfunction draw() {\n    colorMode(HSB);\n    background(212, 50, 100 - (sun_position_slider.value()) / 3); // sky\n    noStroke();\n\n    createSun();\n    createMountain();\n    createRiver();\n\n}\n\nfunction createSun() {\n    fill(49, 100, 100 - (sun_position_slider.value()) / 3);\n    ellipse(width / 2, sun_position_slider.value(), 50, 50);\n}\n\nfunction createMountain() {\n    beginShape();\n    fill(95, 58, 100 - (sun_position_slider.value()) / 3); // mountain\n    var mountainVariation = mountainStartValue; // offset\n\n    for (var x = 0; x < width; x += 0.3) {\n        var y = map(noise(mountainVariation), 0, 1, 50, 450);\n        vertex(x, y);\n        mountainVariation += mountainSlope;\n    }\n    vertex(width, height);\n    vertex(0, height);\n    endShape(CLOSE);\n\n    mountainStartValue += mountainSlope;\n}\n\n\nfunction createRiver() {\n    beginShape();\n    fill(210, 100, 100 - (sun_position_slider.value()) / 3); // river\n    var riverVariation = riverStartValue; // offset\n\n    for (var x = 0; x < width; x += 5) {\n        var y = map(noise(riverVariation), 0, 1, 350, height);\n        vertex(x, y);\n        riverVariation += riverSlope;\n    }\n    vertex(width, height);\n    vertex(0, height);\n    endShape(CLOSE);\n\n    riverStartValue += riverSlope;\n}"
  },
  {
    "_id": "cdTdN5MZiGLCK3vNg",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "created_at": { "$date": "2019-03-01T19:59:17.316Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tfygm5jtuwbzmsyv18mz",
        "version": 1551470398,
        "signature": "c584851ba9c1022a3528e8a99f25661439b85817",
        "width": 874,
        "height": 882,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T19:59:58Z",
        "tags": [],
        "bytes": 100350,
        "type": "upload",
        "etag": "40055f3d42f5e224c86528689abe4d83",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551470398/avalanche2019/tfygm5jtuwbzmsyv18mz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551470398/avalanche2019/tfygm5jtuwbzmsyv18mz.png"
      },
      {
        "public_id": "avalanche2019/bgo9uakxbazqccxi9gpf",
        "version": 1551470406,
        "signature": "6614e7397fb986cc35ef335ce7f8884035dc1849",
        "width": 832,
        "height": 838,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T20:00:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 3470844,
        "type": "upload",
        "etag": "3a92f24979d9d9a50f0db296276e96a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551470406/avalanche2019/bgo9uakxbazqccxi9gpf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551470406/avalanche2019/bgo9uakxbazqccxi9gpf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "3587970",
          "dar": "416:419"
        },
        "frame_rate": 15,
        "bit_rate": 3590528,
        "duration": 7.733333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 1 extended. Using noise for some wiggling lines and hue.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\n// Dot Challenge\nlet canvas = { width: 400, height: 400 };\n\nfunction setup() {\n  createCanvas(canvas.width, canvas.height);\n  colorMode(HSB, 100);\n}\nlet gap = 100;\n\nfunction draw() {\n  background(20);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  var noiseFrequency = 0.02;\n\n  randomSeed(1);\n  for (z = 0; z < 400; z++) {\n    for (var i = 0; i < 100; i++) {\n      // these points are not scattered in the same way\n      // how can you make the arrangement match the challenge?\n\n      // let x = random(canvas.width * 0.1) + 25;\n      let x = noise(frameCount * 0.03, frameCount * 0.03) * 100;\n\n      let y = random(canvas.height);\n\n      // the diameter shouldn't always be 10, it needs to vary\n      let diameter = random(3, 16);\n\n      // the colors also need to change\n      // what colorMode would be easiest to work with?\n      fill(noise(x * noiseFrequency, y * noiseFrequency) * 125, 100, 100);\n\n      ellipse(x + z, y, diameter);\n    }\n    z += gap;\n  }\n\n  // noLoop();\n}"
  },
  {
    "_id": "cj8FgNZ3MGjSKftSH",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:23:57.867Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fthbwojjmswr9vuxgnoe",
        "version": 1556303046,
        "signature": "10281c42833c63ec9ca656708a1e2df3c099fa22",
        "width": 480,
        "height": 652,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T18:24:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 177164,
        "type": "upload",
        "etag": "8abc21eaea51b6991d0fa3f62ba7a643",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556303046/avalanche2019/fthbwojjmswr9vuxgnoe.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556303046/avalanche2019/fthbwojjmswr9vuxgnoe.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "351660",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "16778",
          "dar": "120:163"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 380282,
        "duration": 3.727,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "cjEyWa6DWK9Z2ESSS",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T00:35:28.887Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zh4vroe0xhnu6lujeq9t",
        "version": 1549845353,
        "signature": "9baf91d9fd566760811d9ef536a73f5c9ff737b2",
        "width": 1035,
        "height": 1312,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T00:35:53Z",
        "tags": [],
        "bytes": 535882,
        "type": "upload",
        "etag": "d22a68b5d1ea8e09fc7751b6b0dad033",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549845353/avalanche2019/zh4vroe0xhnu6lujeq9t.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549845353/avalanche2019/zh4vroe0xhnu6lujeq9t.jpg"
      },
      {
        "public_id": "avalanche2019/yba0fcafltw6lawmyoxi",
        "version": 1549845375,
        "signature": "25468f8f3de0234b46e5ce05e3e4b85ea34c2239",
        "width": 994,
        "height": 906,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-11T00:36:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 18402985,
        "type": "upload",
        "etag": "edb48b0494fa8d42402a947ff5fa56c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549845375/avalanche2019/yba0fcafltw6lawmyoxi.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549845375/avalanche2019/yba0fcafltw6lawmyoxi.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2255433",
          "dar": "497:453"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 2256372,
        "duration": 65.24805,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/tessfafzuoatchvxmxwu",
        "version": 1549845411,
        "signature": "2045468b46bbbab9bf66289736c49dc8ccef6697",
        "width": 988,
        "height": 910,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T00:36:51Z",
        "tags": [],
        "bytes": 131130,
        "type": "upload",
        "etag": "8a9d52be834969c3b90183020e212b02",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549845411/avalanche2019/tessfafzuoatchvxmxwu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549845411/avalanche2019/tessfafzuoatchvxmxwu.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this piece, I have created an optical illusion using lines. They appear 3D (going inside) and continuous but are on the same plane. \nI have used parameters to change the line density, line color, line weight, and background color of the sketch.",
    "inspiration_name": "Optical Illusion",
    "code": "// Creating an optical illusion of lines looking curved and going inside\n// Using parameters to customize the look of the illusion\n\n\n// Declaring parameters to customize in the sketch\nvar line_count, line_thickness, line_color, background_color;\n\nfunction setup() {\n    createCanvas(window.innerWidth, window.innerHeight);\n    // colorMode(HSB);\n\n    createP('Change Line Spacing');\n    line_count = createSlider(10, 60, 35);\n\n    createP('Change Line Thickness');\n    line_thickness = createSlider(1, 5, 2);\n\n    createP('Change Line Color');\n    line_color = createInput(\"#000000\", \"color\");\n\n    createP('Select Background Color');\n    background_color = createInput(\"#ffffff\", \"color\");\n\n}\n\n\nfunction draw() {\n\n    background(background_color.value());\n    drawIllusion();\n\n}\n\nfunction drawIllusion() {\n    // creating a variable for the line count\n    var totalLines = line_count.value();\n\n    strokeWeight(line_thickness.value());\n    stroke(line_color.value());\n\n    // MOVING ALONG HEIGHT\n    // creating lines which flow from top to bottom on the left side\n    for (let i = 0; i < height; i += totalLines) {\n        line(0, i, i, height);\n    }\n\n    // Creating lines from bottom to top on the right side\n    for (let i = 0; i < height; i += totalLines) {\n        line(width, height - i, width - i, 0);\n    }\n\n    // MOVING ALONG WIDTH\n    // Creating lines from right to left on the top\n    for (let i = 0; i < width; i += totalLines) {\n        line(width - i, 0, 0, i);\n    }\n\n    // Creating lines from left to right on the bottom\n    for (let i = 0; i < width; i += totalLines) {\n        line(i, height, width, width - i);\n    }\n\n\n}"
  },
  {
    "_id": "cjMEpev6khy3ce2du",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T19:51:49.398Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/joloo1dbq0qbc2tlxmhn",
        "version": 1554493924,
        "signature": "683ab310501e8a781858d09e34f2c3d1bafd8089",
        "width": 1370,
        "height": 1130,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T19:52:04Z",
        "tags": [],
        "bytes": 529342,
        "type": "upload",
        "etag": "95ef338d093dd1a8f938d65723a9c3b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554493924/avalanche2019/joloo1dbq0qbc2tlxmhn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554493924/avalanche2019/joloo1dbq0qbc2tlxmhn.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "progress towards tidal wave CF bumper Maya fluid modeling / animation"
  },
  {
    "_id": "cmeCweHAmmPeBJtH5",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-29T06:00:34.559Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aao6ia0nddtndcw8ywi3",
        "version": 1556517668,
        "signature": "517ef76a3798e33a44794e726a475965a45f1a5e",
        "width": 2378,
        "height": 1490,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-29T06:01:08Z",
        "tags": [],
        "bytes": 197328,
        "type": "upload",
        "etag": "0cfab4aaa61842b0ad08d40667172c8c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556517668/avalanche2019/aao6ia0nddtndcw8ywi3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556517668/avalanche2019/aao6ia0nddtndcw8ywi3.jpg"
      },
      {
        "public_id": "avalanche2019/sdyxpr2h4xkxpwnvgesw",
        "version": 1556517976,
        "signature": "9d90d818c3ebf3d5841a657019244d426def8e4b",
        "width": 1176,
        "height": 1316,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-29T06:06:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 2466659,
        "type": "upload",
        "etag": "144f7f8e054a6e50e5b984bb867d44bc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556517976/avalanche2019/sdyxpr2h4xkxpwnvgesw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556517976/avalanche2019/sdyxpr2h4xkxpwnvgesw.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "4202234",
          "dar": "42:47"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4232034,
        "duration": 4.662833,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Getting started with all in-class challenges combined… just liked the perspective :)",
    "code": "$fn=40;\n\nsphere(r=5);\nmirror([10,0,0]) translate([40,0,0]) sphere(r=5);\nrotate([0,90,0]) translate([0,0,-20]) cylinder(h=40, r=1, center=true);\n\n\ncolor(\"cyan\")\ntranslate([-80,0,0]) rotate([0,90,0])  difference() {\n    union() {\n        cylinder(h=8, d=40, center=true, $fn=1000);\n        translate([0,40,0]) cube([40,80,8],true);\n    }\n    cylinder(h=9, r=10, center=true, $fn=1000);\n}\n\ncolor(\"red\")\ntranslate([60,0,0]) difference() {\n    union() {\n    cylinder(h=50, d=30, center=true, $fn=100);\n    rotate([0,90,0]) cylinder(h=50, d=30, center=true, $fn=100);\n    }\n    union() {\n    cylinder(h=52, d=25, center=true, $fn=100);\n    rotate([0,90,0]) cylinder(h=52, d=25, center=true, $fn=100);\n    }\n    \n}\n\ncolor(\"pink\")\nrotate([0,90,0]) translate([0,0,15]) for (r = [0:10]) {\n    rotate([0,0,36*r]) translate([0,20,0]) cylinder(h=5, d=20, center=true, $fn=100);\n}"
  },
  {
    "_id": "codYWXME8zfxfu42P",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T17:50:17.682Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/votth8mipojm3lyenovz",
        "version": 1556733126,
        "signature": "8100e2f231d34c8e0f22e4ab89180ba12f055df0",
        "width": 2868,
        "height": 1748,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-01T17:52:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 16058621,
        "type": "upload",
        "etag": "d2c9151e67f40eab2450433b32beec7d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556733126/avalanche2019/votth8mipojm3lyenovz.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556733126/avalanche2019/votth8mipojm3lyenovz.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "10849194",
          "dar": "717:437"
        },
        "frame_rate": 60,
        "bit_rate": 10881206,
        "duration": 11.8065,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/bctws3r3gmfqmlztjtnh",
        "version": 1556733568,
        "signature": "d965a865cfa194ffa45930155fe0a0b7af7704bf",
        "width": 2880,
        "height": 1748,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-01T17:59:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 11833270,
        "type": "upload",
        "etag": "5b658f28dd70ba5f96ab68fd865cf08a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556733568/avalanche2019/bctws3r3gmfqmlztjtnh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556733568/avalanche2019/bctws3r3gmfqmlztjtnh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "10569563",
          "dar": "720:437"
        },
        "frame_rate": 60,
        "bit_rate": 10605465,
        "duration": 8.926167,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/iua6osbhupafmx0jaio4",
        "version": 1556733572,
        "signature": "f141d8806ded27d277e8228ff759548ac60f70d7",
        "width": 2880,
        "height": 1752,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-01T17:59:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 10300651,
        "type": "upload",
        "etag": "672fa70251b788171757ba81a3abfe5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556733572/avalanche2019/iua6osbhupafmx0jaio4.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556733572/avalanche2019/iua6osbhupafmx0jaio4.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "21030139",
          "dar": "120:73"
        },
        "frame_rate": 60,
        "bit_rate": 21153948,
        "duration": 3.8955,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:21:42.258Z" }
      }
    ],
    "title": "",
    "description": "Fancy column for a future castle...",
    "code": "$fn = 7;\n\npad = 2;\n\nmodule column(length, width, height) {\n    for (x=[0:length])\n    for (y=[0:width])\n    for (z=[0:height])\n    \n    // 10x10x10 super-cube of cubes\n    translate([x*pad,y*pad,z*pad])\n        union() {\n            sphere(rands(0,2,1)[0]);\n            //cube(rands(0,3,1)[0], center = true);\n            cylinder(h = pad * 1.5, r = .5, center = true);\n    }\n}\n\ncolumn(3, 3, 30);"
  },
  {
    "_id": "cqyCKQ8bJ63qtwiwv",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T13:34:48.125Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hpzirgi5fvcxntenzqq3",
        "version": 1556285702,
        "signature": "4dff3409814a3e7faca370a7dda43a774209a043",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T13:35:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 8517289,
        "type": "upload",
        "etag": "96d7a53b8b6aa94a873a7738b0502f9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556285702/avalanche2019/hpzirgi5fvcxntenzqq3.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556285702/avalanche2019/hpzirgi5fvcxntenzqq3.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "26856149",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 29595757,
        "duration": 2.3023,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T17:28:34.014Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T17:28:47.245Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "cspHJut56b4k7CqsR",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:22:19.641Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u6cgcekuyvcuxtafp5vt",
        "version": 1548458600,
        "signature": "9ba66f1f2eca4ec3f1ef0d7841561130fd1fd52a",
        "width": 2448,
        "height": 3264,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:23:20Z",
        "tags": [],
        "bytes": 1466057,
        "type": "upload",
        "etag": "b156b07a13ee5c934d8ffb58fac547dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458600/avalanche2019/u6cgcekuyvcuxtafp5vt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458600/avalanche2019/u6cgcekuyvcuxtafp5vt.jpg"
      },
      {
        "public_id": "avalanche2019/lueea48hprhbpg6kxamy",
        "version": 1548458605,
        "signature": "22f4d8aa61ad125eebb7f5ab50f814398b77a814",
        "width": 2448,
        "height": 2448,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:23:25Z",
        "tags": [],
        "bytes": 1129754,
        "type": "upload",
        "etag": "2c371836d48d0d38e65beaa0e87a6a2b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458605/avalanche2019/lueea48hprhbpg6kxamy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458605/avalanche2019/lueea48hprhbpg6kxamy.jpg"
      },
      {
        "public_id": "avalanche2019/fgovhfpnawirhpytlafv",
        "version": 1548458611,
        "signature": "adfdc2c30be148329b6301e31472aaf98c58fb56",
        "width": 2448,
        "height": 2448,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:23:31Z",
        "tags": [],
        "bytes": 1012971,
        "type": "upload",
        "etag": "4f77bb0dd575e6c1244fdeb78dad00b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458611/avalanche2019/fgovhfpnawirhpytlafv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458611/avalanche2019/fgovhfpnawirhpytlafv.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:00.126Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:15.87Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:41.337Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "cvWKTxiffcQ7oY7up",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T14:04:08.458Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aihrlbjjh3aocbl7fmfc",
        "version": 1555682661,
        "signature": "e7968dcf4dd67ff3f1c912e285011ce647b5526f",
        "width": 1076,
        "height": 1512,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T14:04:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 20676270,
        "type": "upload",
        "etag": "f43c2f609ca4a08dc70cc0cd509749b4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555682661/avalanche2019/aihrlbjjh3aocbl7fmfc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555682661/avalanche2019/aihrlbjjh3aocbl7fmfc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "222385",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "26519276",
          "dar": "269:378"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 26855930,
        "duration": 6.159167,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/hjxaxrqsp3moy5zf4gvo",
        "version": 1555682742,
        "signature": "a3c77343b56bfacb5c8c8bf92fbf8f1bcdb79be9",
        "width": 1076,
        "height": 1512,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T14:05:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 16374774,
        "type": "upload",
        "etag": "8e49ba28ee68b4bcf0019b3f4e58bd1d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555682742/avalanche2019/hjxaxrqsp3moy5zf4gvo.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555682742/avalanche2019/hjxaxrqsp3moy5zf4gvo.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "223107",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "19378478",
          "dar": "269:378"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 21042196,
        "duration": 6.2255,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/bdyno3kcvpwgsb8fdkjn",
        "version": 1555682977,
        "signature": "687ac082ffd18d1600e244e1dd92e6626d4f203f",
        "width": 1076,
        "height": 1512,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T14:09:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 17377459,
        "type": "upload",
        "etag": "03957fb1d769e2f031539a5fbcd27d9b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555682977/avalanche2019/bdyno3kcvpwgsb8fdkjn.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555682977/avalanche2019/bdyno3kcvpwgsb8fdkjn.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "222786",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "24103786",
          "dar": "269:378"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 27117852,
        "duration": 5.1265,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T14:13:01.313Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T14:29:34.966Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T15:38:16.995Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T16:44:19.633Z" }
      }
    ],
    "title": "",
    "description": "**[Live page](https://annagarbier.github.io/exampleCode/soundGrid/)**. \n\n[Philharmonia Orchestra sound samples](https://www.philharmonia.co.uk/explore/sound_samples) meet an old Georg Nees-inspired grid.\n\nLonger video [here](https://vimeo.com/331420084)."
  },
  {
    "_id": "d2srnJ6RfvNNovSvG",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-02-24T01:37:49.615Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ydmcq9ifpudaxpcwem6i",
        "version": 1550973821,
        "signature": "b9195a8f35ce00ee7bbfcbb9667e638b3cabb4cd",
        "width": 804,
        "height": 806,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-24T02:03:41Z",
        "tags": [],
        "bytes": 55351,
        "type": "upload",
        "etag": "ef6574757ad15a6ee6885e18ca843246",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550973821/avalanche2019/ydmcq9ifpudaxpcwem6i.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550973821/avalanche2019/ydmcq9ifpudaxpcwem6i.jpg"
      },
      {
        "public_id": "avalanche2019/t7vqqxqwi9z8l3g2mdlw",
        "version": 1550973842,
        "signature": "a7bdad6444f70b6eb0bb37c583e4d19ab85b938a",
        "width": 802,
        "height": 804,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-24T02:04:02Z",
        "tags": [],
        "bytes": 56677,
        "type": "upload",
        "etag": "c3190dc917c05b4883bcb908b5c973d4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550973842/avalanche2019/t7vqqxqwi9z8l3g2mdlw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550973842/avalanche2019/t7vqqxqwi9z8l3g2mdlw.jpg"
      },
      {
        "public_id": "avalanche2019/rbrlxi185fcivxhcejmv",
        "version": 1550973844,
        "signature": "0a10b93fd325963bd0876af5a489c586d2de236e",
        "width": 802,
        "height": 802,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-24T02:04:04Z",
        "tags": [],
        "bytes": 55781,
        "type": "upload",
        "etag": "9fb3e4f5684842a41d96f1c847a48dac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550973844/avalanche2019/rbrlxi185fcivxhcejmv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550973844/avalanche2019/rbrlxi185fcivxhcejmv.jpg"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "edit: thought the example was a static image until I refreshed the site :) \nThe first image is taken from the final code, the other two are earlier stages",
    "inspiration_name": "Dot Challenge",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 1, 1, 1, 1); // for the central bias of hue\n\n  noStroke();\n  ellipseMode(CENTER);\n  // Once I had a good distribution\n  // I used a slider to move through noiseSeed values\n  // to get closer to the goal\n  // noiseSeed(mySlider.value());\n  // console.log(mySlider.value());\n  // window.mySlider = createSlider(600, 603, 601, 0.01);\n  // ***\n  // comment this to see different variations\n  // noiseSeed(61);\n  // ***\n}\n\nfunction draw() {\n  background(0, 0, 0.2);\n\n  var noiseFrequency = 0.2;\n\n  // noiseDetail(5, 0.3); This wasn’t helpful\n  for (var i = 0; i < 100; i++) {\n    myDistance = 1000; // make sure x and y are not related (noise walk)\n    myNoiseX = noise(i * noiseFrequency, 0);\n    myNoiseY = noise(i * noiseFrequency, myDistance);\n    var x = myNoiseX * width;\n    var y = myNoiseY * height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    myDistance = 601.1; // make sure position and diameter are not related\n    myNoiseD = noise(i * noiseFrequency * 4, myDistance);\n    diameter = map(myNoiseD, 0, 1, 4, 20);\n\n    // I actually didn’t need a separate noise function for the hue\n    // diameter and hue are connected\n    // myDistance = 321.94;\n    // myNoiseHue = noise(i * noiseFrequency, myDistance);\n    // Thought I might need to narrow the hue further down,\n    // wasn’t necessary\n    myHue = map(myNoiseD, 0.1, 0.9, 0, 1);\n\n    fill(myHue, 1, 1);\n    ellipse(x, y, diameter, diameter);\n  }\n}"
  },
  {
    "_id": "d4WhvQMYLabZYovMc",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T01:36:56.513Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ws7vru92db87vexatmy2",
        "version": 1555036171,
        "signature": "43fb0a4c4dd5e66ffb0fe89db465300e426273ab",
        "width": 1444,
        "height": 864,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T02:29:31Z",
        "tags": [],
        "bytes": 201657,
        "type": "upload",
        "etag": "b1ba9b294fd1efc2c7068e4e983787cc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555036171/avalanche2019/ws7vru92db87vexatmy2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555036171/avalanche2019/ws7vru92db87vexatmy2.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Using Tracery - still having 'Fun with Dick and Jane'.",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    \"story\": [\"Look, look, look. Oh, oh, oh, #adjective#. See It Go Jane said, Look, look. I see a big #adjective3#, #noun#. I want to go #verb#, in it. See the big #adjective3#, #noun# go. Sally said, I see it.  I see the big #adjective3#, #noun#.  I want to go  #verb# in it.  I want to go #verb#, #verb#. Dick said, Look  #verb2# Sally. You can see something.  It is #adjective3# and #adjective3#. It can go #verb#, #verb#, #verb#. It can go #verb2#. Sally said, I want to go #verb2#. I want to go #verb2# in it. I want to go #verb2#, #verb2#, #verb2#. I want to go #verb2# and away. Look, Sally,” said Dick. Here is #petname# in a #noun1#. You can go away in it. #verb2# in, #verb2# in said #petname#. #verb2# in the big #adjective# #noun1#. We can go, said Sally. We can go away in a #noun1#. Away in a big #adjective3# #noun1#.\"],\n    \"phrase\": [\"#subject.a# #verb# #object.a#\"],\n    \"subject\": [\"#noun#\", \"#adjective# #noun#\"],\n    \"object\": [\"#noun#\", \"#adjective# #noun#\", \"#adjective# #noun# and #adverb.a# #adjective# #noun#\"],\n    \"adverb\": [\"exceptionally\", \"somewhat\"],\n    \"adjective\": [\"crap\", \"hell\", \"shit\", \"jeez\", \"fuck\"],\n    \"adjective3\": [\"yellow\", \"purple\", \"plastic\", \"furry\"],\n    \"noun\": [\"car\", \"switchblade\", \"knuckle-ring\", \"tennis-shoe\"],\n    \"noun1\": [\"boat\", \"toaster\", \"sandwich\", \"corn cake\"],\n    \"verb\": [\"to sleep\", \"watch The Simpsons\", \"kick a can\"],\n    \"verb2\": [\"cross-eyed\", \"cock-eyed\", \"crazy-like\"],\n    \"petname\": [\"Lemonhead\", \"Abba zabba\", \"Bit-O-Honey\", \"Jujube\", \"Hot Tamale\"]\n    \n}\n\n\ndocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Josefin+Slab');\n\t\tbody {\n\t\t\tfont-family: 'Josefin Slab', serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#heading {\n\t\t    text-align: center;\n\t\t    font-size: 25px; \n\t\t}\n\t</style>\n\t<div id=\"heading\">\n\t\"Fun with Dick and Jane\" \n\t</div>\n`);\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten(\"#story#\");\n\n    const storyDiv = document.createElement('div');\n    storyDiv.style = \"font-size: 20px; margin: 10%; line-height: 1.5;\";\n    storyDiv.textContent = story;\n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "d4nrsZ7PGRYzAKzAQ",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-11T20:06:59.435Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kue7xo6cunvrmhzxt62v",
        "version": 1552334832,
        "signature": "b9771c3ad7e9e109d604a537bc5cbe44c28f5563",
        "width": 1058,
        "height": 1052,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-11T20:07:12Z",
        "tags": [],
        "bytes": 165811,
        "type": "upload",
        "etag": "ba6e1d9998be39f1277811511fe59dc3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552334832/avalanche2019/kue7xo6cunvrmhzxt62v.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552334832/avalanche2019/kue7xo6cunvrmhzxt62v.png"
      },
      {
        "public_id": "avalanche2019/ntdnfsjayqvfk173mswu",
        "version": 1552334835,
        "signature": "eb5ab342a2cb082b5f22d6ebed5d8c6b03324f39",
        "width": 1052,
        "height": 1052,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-11T20:07:15Z",
        "tags": [],
        "bytes": 207152,
        "type": "upload",
        "etag": "41d802ee4cebea2a734c36fbf080516c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552334835/avalanche2019/ntdnfsjayqvfk173mswu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552334835/avalanche2019/ntdnfsjayqvfk173mswu.png"
      },
      {
        "public_id": "avalanche2019/xcm6jsbawp71k3fr2oaf",
        "version": 1552334938,
        "signature": "43e155b103955b383bf33e1c24e3f1b57f97c4cb",
        "width": 992,
        "height": 990,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-11T20:08:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 5268268,
        "type": "upload",
        "etag": "802dcc121cf7325b03b9d412fa5247eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552334938/avalanche2019/xcm6jsbawp71k3fr2oaf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552334938/avalanche2019/xcm6jsbawp71k3fr2oaf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "3008328",
          "dar": "496:495"
        },
        "frame_rate": 15,
        "bit_rate": 3010438,
        "duration": 14,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-12T03:32:24.138Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T22:10:26.671Z" }
      }
    ],
    "title": "",
    "description": "Orb that draws over itself to create a scratchy donut looking thing",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// require /turtles/turtle/turtle.js\n\nlet canvas = { width: 500, height: 500 };\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  colorMode(HSB, 100);\n  noFill();\n  // stroke(50, 50, 50);\n  background(50, 40, 70);\n  // noLoop();\n\n  myTurtle = new Turtle();\n  myTurtle.penUp();\n  myTurtle.moveTo(width / 2, height / 2 - 50);\n}\n\nfunction draw() {\n  // background(90, 20, 90);\n\n  for (let i = 0; i < 10; i++) {\n    for (let x = 0; x < 300; x++) {\n      myTurtle.penDown();\n      myTurtle.moveForward(1);\n      myTurtle.turnRight(1);\n    }\n    myTurtle.penUp();\n    myTurtle.moveForward(10);\n    stroke(random(20), random(20, 50), 100);\n    myTurtle.turnLeft(20);\n  }\n\n  myTurtle.moveForward(2);\n  myTurtle.turnLeft(0.1);\n}"
  },
  {
    "_id": "d7KLSa5PHXAXFXgML",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-02-01T01:48:51.659Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qijsr77n2up1scwjwb6o",
        "version": 1548985744,
        "signature": "9b67cb2fda50315326a214753fcf4986cb6a7f7a",
        "width": 3001,
        "height": 3001,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T01:49:04Z",
        "tags": [],
        "bytes": 142443,
        "type": "upload",
        "etag": "9fff5ef3e65ffac02a4887f1b00b627e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548985744/avalanche2019/qijsr77n2up1scwjwb6o.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548985744/avalanche2019/qijsr77n2up1scwjwb6o.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:42.433Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:04:49.976Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:40:05.274Z" }
      }
    ],
    "lesson": "Tiles",
    "title": ""
  },
  {
    "_id": "dBFWNkcFtYT4jqLke",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T17:38:10.311Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aujhy5j62kixd5nulldc",
        "version": 1556300296,
        "signature": "3f70d6fe0e9fa197cd79de69da6092d30ede6bd0",
        "width": 464,
        "height": 628,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T17:38:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 248147,
        "type": "upload",
        "etag": "e3435bf560d2e5cdc290a9ff134b48bb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556300296/avalanche2019/aujhy5j62kixd5nulldc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556300296/avalanche2019/aujhy5j62kixd5nulldc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "337966",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "56726",
          "dar": "116:157"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 421108,
        "duration": 4.714167,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "dKTpyfFFTxmyXQgvu",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-08T01:46:04.182Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dc5sqdf4nnt00grevmtc",
        "version": 1554688418,
        "signature": "9785f59ac058fd361f13e113df986fb02aa01f2f",
        "width": 2212,
        "height": 1178,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-08T01:53:38Z",
        "tags": [],
        "bytes": 257799,
        "type": "upload",
        "etag": "436b6666bb4a038bd71c8fe99a0b1ca8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554688418/avalanche2019/dc5sqdf4nnt00grevmtc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554688418/avalanche2019/dc5sqdf4nnt00grevmtc.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Did the challenges to get started with the Template functionalities,"
  },
  {
    "_id": "dRdbwQQvgpYMA2XFs",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T05:31:07.916Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s2oie5dt1cteil3omcak",
        "version": 1554442272,
        "signature": "1a9979009a47dbff3c1261cbed2258f0833fc50c",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T05:31:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 685674,
        "type": "upload",
        "etag": "4ba4fbfaee18b6eaa59aee5f9e94faef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554442272/avalanche2019/s2oie5dt1cteil3omcak.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554442272/avalanche2019/s2oie5dt1cteil3omcak.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "531846",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 539007,
        "duration": 10.176833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Should be much quicker if using after effect. But I use Javascript to code this fake chatbot.",
    "code": "//javascript code \n\nsetTimeout(function () {\ndocument.getElementById(\"one\").style.display = \"block\";\n},1000);\nsetTimeout(function () {\ndocument.getElementById(\"two\").style.display = \"block\";\n},2000);\nsetTimeout(function () {\ndocument.getElementById(\"three\").style.display = \"block\";\n},3000);\nsetTimeout(function () {\ndocument.getElementById(\"buttonone\").style.display = \"block\";\n},4000);\nsetTimeout(function () {\ndocument.getElementById(\"buttontwo\").style.display = \"block\";\n},4000);\n\n\n$(\"#buttonone\").click(function(){\n  $(\"#buttonone\").hide();\n     $(\"#buttontwo\").hide();\n    setTimeout(function () {\n    document.getElementById(\"answer\").style.display = \"block\";\n},500);\n});"
  },
  {
    "_id": "dZtYSJjya6Za8pJWG",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-02T22:38:15.91Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/noeeolkuqdizgx3nkyqd",
        "version": 1549147387,
        "signature": "88a1c4f75699aeda8297ab213c62df1a519db2ce",
        "width": 1984,
        "height": 1388,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-02T22:43:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 14476651,
        "type": "upload",
        "etag": "e754d96446ef9ba8340d9114bd9f8ca6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549147387/avalanche2019/noeeolkuqdizgx3nkyqd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549147387/avalanche2019/noeeolkuqdizgx3nkyqd.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "12238608",
          "dar": "496:347"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12255365,
        "duration": 9.45,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Random shivering circles bouncing around the screen",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nvar x, y;\nvar radius;\n// var h, s, b;\nvar col = [];\n\nvar circles = [];\nvar r, g, b, a;\n\nvar dirX, dirY;\nvar angle;\nvar xOffset, yOffset;\n\nfunction setup() {\n  angleMode(DEGREES);\n  createCanvas(1000, 700);\n  radius = 40;\n\n  for (var i = 0; i < 60; i++) {\n    r = 0;\n    g = random(150);\n    b = random(255);\n    a = random(20, 200);\n    col[i] = color(r, g, b, a);\n    circles[i] = new Circle();\n  }\n}\n\n\nfunction draw() {\n  background(255);\n\n  for (var i = 0; i < circles.length; i++) {\n    fill(col[i]);\n    circles[i].update();\n    circles[i].drawCircle();\n\n  }\n}\n\nfunction Circle() {\n  this.x = random(width);\n  this.y = random(height);\n  this.dirX = random(-5, 5);\n  this.dirY = random(-5, 5);\n\n  this.update = function() {\n    this.x += this.dirX;\n    this.y += this.dirY;\n\n    if (this.x >= width - radius / 2) {\n      this.dirX *= -1;\n    } else if (this.x <= 0 + radius / 2) {\n      this.dirX *= -1;\n    } else if (this.y >= height - radius / 2) {\n      this.dirY *= -1;\n    } else if (this.y <= 0 - radius / 2) {\n      this.dirY *= -1;\n    }\n  }\n  this.drawCircle = function() {\n    angle = random(360);\n    var distance = random(10);\n    xOffset = cos(angle) * distance;\n    yOffset = sin(angle) * distance;\n    noStroke();\n\n    ellipse(this.x + xOffset, this.y + yOffset, radius, radius);\n  }\n}"
  },
  {
    "_id": "ddzdZAQErLtYncWz9",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:33:27.134Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k4fqmqdcmfkq20ae0n9t",
        "version": 1555699172,
        "signature": "a25366926252e9969acdcb2f1442da289c6a3b43",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T18:39:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 17115422,
        "type": "upload",
        "etag": "49cd8858cbbd87239d0ea25527c66dfb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555699172/avalanche2019/k4fqmqdcmfkq20ae0n9t.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555699172/avalanche2019/k4fqmqdcmfkq20ae0n9t.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "105791",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2272864",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 2387200,
        "duration": 57.3573,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "\"Performed\" Breathing Sound 1 (for my \"the useful machine that breathes like me and the useless human which is me\" project)"
  },
  {
    "_id": "dfWiaHctHTSxWGCRD",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T17:52:46.573Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zv45baw50119s0jm90h5",
        "version": 1555005210,
        "signature": "9d7b48371123eb5e706eaa8e8031b12a36e90515",
        "width": 1044,
        "height": 350,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T17:53:30Z",
        "tags": [],
        "bytes": 53292,
        "type": "upload",
        "etag": "ebef9ea55abf8ad39346d2b4e8a7e942",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555005210/avalanche2019/zv45baw50119s0jm90h5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555005210/avalanche2019/zv45baw50119s0jm90h5.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Using the open weather api and a numbers api, enter a zip code to get some info back that dynamically builds a paragraph",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nconst weatherAPI = {\n  key: \"058e5a582368a449e5156441d3403646\",\n  location: 11238\n};\n\nlet input, button;\nlet temp = 0;\n\nfunction setup() {\n  createCanvas(400, 50);\n  colorMode(HSB, 100);\n\n  input = createInput().attribute(\"placeholder\", \" 🕵🏻‍♂️ Enter a Zipcode\");\n  input.position(40, 51);\n\n  button = createButton(\"Tell me something!\");\n  button.position(input.x + input.width + 10, 48);\n  button.mousePressed(gen);\n}\n\nfunction gen() {\n  weatherAPI.location = input.value();\n  input.value(\"\");\n\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?zip=${\n      weatherAPI.location\n    },us&units=imperial&appid=${weatherAPI.key}`\n  )\n    .then(res => {\n      return res.json();\n    })\n    .then(weather => {\n      temp = Math.round(weather.main.temp);\n      createP(`<br>I can tell you something boring...<br> in <b>${\n        weather.name\n      }</b> it's currently <b>${temp}</b> ℉ (also\n      ${weather.weather[0].main.toLowerCase()} with a windspeed of ${\n        weather.wind.speed\n      } mph).\n      \n  `);\n    })\n    .then(x => {\n      fetch(`http://numbersapi.com/${temp}?json`)\n        .then(res => {\n          return res.json();\n        })\n        .then(nums => {\n          createP(`<br>\n        But something more interesting... <br>is that <b>${\n          nums.text\n        }</b><br><br>`);\n        });\n    })\n    .catch(err => {\n      console.log(err);\n      createP(`Something went wrong, try entering a zip code again!`);\n    });\n}"
  },
  {
    "_id": "dgC5N9GCjF64hZ3k5",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T05:22:39.548Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eliptq9kfqstovxswpfw",
        "version": 1551763414,
        "signature": "df58593599c461aa35d91985e7ffd125d5fdd7bf",
        "width": 1034,
        "height": 1032,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-05T05:23:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 2784607,
        "type": "upload",
        "etag": "3044b6bd6b0367a7c47dca0f617a0ffc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551763414/avalanche2019/eliptq9kfqstovxswpfw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551763414/avalanche2019/eliptq9kfqstovxswpfw.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "1438246",
          "dar": "517:516"
        },
        "frame_rate": 15,
        "bit_rate": 1440313,
        "duration": 15.466667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/lrfly3w2mzhmoejwuyzw",
        "version": 1551763416,
        "signature": "22f7b418c4f19790a98ebbee56d27c009e727b59",
        "width": 1034,
        "height": 1060,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T05:23:36Z",
        "tags": [],
        "bytes": 23704,
        "type": "upload",
        "etag": "b36cbc58393f6192977dc5f639b10044",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551763416/avalanche2019/lrfly3w2mzhmoejwuyzw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551763416/avalanche2019/lrfly3w2mzhmoejwuyzw.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Remix basic pixel example to loop with noise controlling hue in 100 x 1 grid",
    "inspiration_name": "Basic Pixel Example",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet canvas = { width: 500, height: 500 };\n\nfunction setup() {\n  createCanvas(canvas.width, canvas.height);\n  colorMode(HSB, 100);\n}\n\nfunction draw() {\n  randomSeed(1);\n  background(100);\n\n  img = createImage(100, 1);\n  img.loadPixels();\n\n  for (var y = 0; y < img.height; y++) {\n    for (var x = 0; x < img.width; x++) {\n      let hue = noise(100) * frameCount * random();\n      var c = color(hue, 50, 90);\n      img.set(x, y, c);\n    }\n  }\n\n  img.updatePixels();\n\n  noSmooth();\n  image(img, 0, 0, width, height);\n  // noLoop();\n}"
  },
  {
    "_id": "dkcEHpjYHRy3aZcME",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T22:46:22.521Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/potmg4gvcx6mjnzlw1lw",
        "version": 1555627613,
        "signature": "c2e7d39a4df6d55d9f5e43eed588ef473c81204f",
        "width": 1460,
        "height": 1260,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T22:46:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 3162037,
        "type": "upload",
        "etag": "96cfbb4aecd4588d616af6e657f35b2a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555627613/avalanche2019/potmg4gvcx6mjnzlw1lw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555627613/avalanche2019/potmg4gvcx6mjnzlw1lw.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "240915",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1120929",
          "dar": "73:63"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1433502,
        "duration": 17.6465,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T00:29:02.434Z" }
      }
    ],
    "title": "",
    "description": "Playing around with voice manipulation using an old sketch as the visual. Nearly blew out my laptop speakers in the process.",
    "code": "let curveHorz, curveVert;\nlet curveStart, curveStop, curveY;\n\nlet r, g, b;\nlet backCol;\nlet voices;\nlet reverb;\n\nlet frequency;\nlet delay;\nfunction preload() {\n  voices = loadSound(\"voices.mp3\");\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  backCol = 0;\n  voices.disconnect();\n  reverb = new p5.Reverb();\n  delay = new p5.Delay();\n\n  curveStart = 20;\n  curveStop = width - 20;\n  curveY = height / 2;\n\n  createP(\"Y Point\");\n  curveVert = createSlider(10, height - 10, height / 2);\n\n  createP(\"X Point\");\n  curveHorz = createSlider(curveStart + 20, curveStop, curveStop / 2);\n}\n\nfunction draw() {\n  background(backCol);\n\n  let reverbVal = map(curveHorz.value(), 41, 1276, 1, 30);\n  let delayVal = map(curveVert.value(), 10, 717, 0.1, 0.5);\n\n  reverb.process(voices, 0, reverb.process(voices, reverbVal));\n  delay.process(voices, 0.12, delayVal, 220);\n  delay.setType(\"pingPong\");\n\n  voices.loop();\n\n  let curvePtX = curveHorz.value();\n  let curvePtY = curveVert.value();\n  noFill();\n\n  r = map(curvePtY, 10, height - 10, 50, 200);\n  g = map(curvePtX, curveStart + 20, curveStop, 50, 200);\n  b = map(curvePtY, 10, height - 10, 255, 20);\n  backCol = map(curvePtX, 10, height - 10, 255, 0);\n\n  strokeWeight(3);\n  stroke(r, 255, b);\n  stroke(map());\n  beginShape();\n  curveVertex(curveStart, curveY);\n  curveVertex(curveStart, curveY);\n  curveVertex(curvePtX, curvePtY);\n  curveVertex(curveStop, curveY);\n  curveVertex(curveStop, curveY);\n  endShape();\n\n  stroke(r, g, 238);\n  beginShape();\n  curveVertex(curveStart, curveY + 10);\n  curveVertex(curveStart, curveY + 10);\n  curveVertex(curvePtX, curvePtY + 10);\n  curveVertex(curveStop, curveY + 10);\n  curveVertex(curveStop, curveY + 10);\n  endShape();\n\n  stroke(r, g, 126);\n  beginShape();\n  curveVertex(curveStart, curveY + 20);\n  curveVertex(curveStart, curveY + 20);\n  curveVertex(curvePtX, curvePtY + 20);\n  curveVertex(curveStop, curveY + 20);\n  curveVertex(curveStop, curveY + 20);\n  endShape();\n\n  stroke(238, g, 126);\n  beginShape();\n  curveVertex(curveStart, curveY + 30);\n  curveVertex(curveStart, curveY + 30);\n  curveVertex(curvePtX, curvePtY + 30);\n  curveVertex(curveStop, curveY + 30);\n  curveVertex(curveStop, curveY + 30);\n  endShape();\n}"
  },
  {
    "_id": "dmeJGbRZ9XYfQwXf3",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-24T23:42:48.23Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/soi7fppgcemkslhymonm",
        "version": 1556149593,
        "signature": "757e1584e1411515136c8e590258aabd3ebeb605",
        "width": 624,
        "height": 434,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-24T23:46:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 862850,
        "type": "upload",
        "etag": "41d97b3f484e7a25bb89f6d0bab9c824",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556149593/avalanche2019/soi7fppgcemkslhymonm.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556149593/avalanche2019/soi7fppgcemkslhymonm.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "85277",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "Main",
          "bit_rate": "105850",
          "dar": "312:217"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 194427,
        "duration": 35.503288,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/hsvuyu1b8hguadpko9fn",
        "version": 1556149601,
        "signature": "bf8362fb763e083ac5ef331158af5a95f290b847",
        "width": 598,
        "height": 258,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-24T23:46:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 232272,
        "type": "upload",
        "etag": "2e0ec4fcd8ce637f38889331dbce3e7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556149601/avalanche2019/hsvuyu1b8hguadpko9fn.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556149601/avalanche2019/hsvuyu1b8hguadpko9fn.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "92227",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "5798",
          "dar": "299:129"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 101813,
        "duration": 18.250862,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/izfnb0igwynowhht5vzy",
        "version": 1556149607,
        "signature": "4844ad3227047879c5db6d897e96ad2c8dc7340d",
        "width": 624,
        "height": 434,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-24T23:46:47Z",
        "tags": [],
        "bytes": 14386,
        "type": "upload",
        "etag": "b944e58b45b341f520cc49d1b51c007f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556149607/avalanche2019/izfnb0igwynowhht5vzy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556149607/avalanche2019/izfnb0igwynowhht5vzy.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this piece, I have created a melody loop of Canon in D using tone.js.\nI have used a sine wave oscillator with a constant attack, decay, and release. \nThe notes are in 3rd and 4th octave.",
    "inspiration_name": "Canon in D Melody Loop",
    "inspiration_url": "https://youtu.be/rNsgHMklBW0",
    "code": "// Tone.js\n// Canon in D Melody Loop\n\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n\n// Inspiration\n// https://youtu.be/rNsgHMklBW0\n\n// Create a new synthesizer (keyboard)\nconst synth = new Tone.Synth({\n    oscillator: {\n        type: 'sine',\n    },\n    envelope: {\n        attack: 1,\n        decay: 1,\n        sustain: 0.5,\n        release: 1,\n    },\n});\n\n// create a gain\nconst gain = new Tone.Gain(0.5);\ngain.toMaster();\nsynth.connect(gain);\n\n// Plugin the keyboard\n// synth.toMaster();\n\n// Play the sound\n// synth.triggerAttackRelease('C4', '8n');\n\n// build an array of notes\nconst notes = [\n    'A4', '',\n    'F#4', 'G4', 'A4', '',\n    'F#4', 'G4', 'A4', 'A3', 'B3', 'C#4', 'D4', 'E4', 'F#4', 'G4', '',\n    'F#4', '',\n    'D4', 'E4', 'F#4', '',\n    'F#3', 'G3', 'A3', 'B3', 'A3', 'G3', 'A3', 'F#3', 'G3', 'A3',\n\n    'G3', '',\n    'B3', 'A3', 'G3', '',\n    'F#3', 'E3', '',\n    'F#3', 'E3', 'D3', 'E3', 'F#3', 'G3', 'A3', 'B3', '',\n    'G3', '',\n    'B3', 'A3', 'B3', '',\n    'C#4', 'D4', '',\n    'A3', 'B3', 'C#4', 'D4', 'E4', 'F#4', 'G4', 'A4', '',\n];\n\n// store the note value\nvar index = 0;\n\n// Music Repeat Pattern\nTone.Transport.scheduleRepeat(time => {\n    repeat(time);\n}, '8n');\n\n// Default beats per minute\nconsole.log(Tone.Transport.bpm.value);\n// Tone.Transport.bpm.value = 90;\n\nfunction repeat(time) {\n    let note = notes[index % notes.length];\n    // if note gets to the end, start at 0\n    synth.triggerAttackRelease(note, '8n', time);\n    index++;\n}\n\n// start the music\nTone.Transport.start();\n\n// stop the music after 5 seconds\nsetTimeout(() => {\n    Tone.Transport.stop();\n}, 30000);"
  },
  {
    "_id": "dnjn7kEjizjWE4wHF",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T23:18:52.945Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k0tz36uzaglaew1dxxmb",
        "version": 1554247207,
        "signature": "a408cc24b595a3d7d1a54feb6e73da3e1f11d2e9",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-02T23:20:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 4302886,
        "type": "upload",
        "etag": "d4c61dc7b4b5925a4f8bdff68661cb45",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554247207/avalanche2019/k0tz36uzaglaew1dxxmb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554247207/avalanche2019/k0tz36uzaglaew1dxxmb.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "257625",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "3482497",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 3820966,
        "duration": 9.009,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-03T00:09:26.625Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-04-04T00:45:23.841Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "funny",
        "created_at": { "$date": "2019-04-05T14:37:47.686Z" }
      }
    ],
    "title": "",
    "description": "For an unsettling evening I suggest sitting down with a bottle of heavy booze and watching this sketch on loop. Layered code sketch with photoshop plus some audio that bummed me out the more I listened to it."
  },
  {
    "_id": "do9kXmGD7CSSzc4jT",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T12:27:44.783Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mwyxzo3jfceon5dkpfyy",
        "version": 1549628879,
        "signature": "d8f54e83ba2c737188badae9880cba9ffe629fe1",
        "width": 1214,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T12:27:59Z",
        "tags": [],
        "bytes": 99125,
        "type": "upload",
        "etag": "3f72294ad2eac68c660ace8a1d824fdf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549628879/avalanche2019/mwyxzo3jfceon5dkpfyy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549628879/avalanche2019/mwyxzo3jfceon5dkpfyy.jpg"
      },
      {
        "public_id": "avalanche2019/zr2ie5dg92si4clcrjbz",
        "version": 1549628914,
        "signature": "a56a9055a5c3e94cf10cb1783eea770a429f9051",
        "width": 1658,
        "height": 916,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-08T12:28:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 4351002,
        "type": "upload",
        "etag": "2453fcffefc78c029ed87c8af735dce4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549628914/avalanche2019/zr2ie5dg92si4clcrjbz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549628914/avalanche2019/zr2ie5dg92si4clcrjbz.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1336918",
          "dar": "829:458"
        },
        "frame_rate": 15,
        "bit_rate": 1386644,
        "duration": 25.102333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Isometric Bar Again! Made  with Unity & AE;",
    "inspiration_name": "Anni Albers",
    "inspiration_url": "https://www.google.com/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwiQt8fSlqzgAhVpleAKHaqLB5MQjhx6BAgBEAM&url=http%3A%2F%2Fartknowledgenews.com%2F201001219669%2F2010-01-20-23-29-08-alan-cristea-gallery-announces-first-major-retrospective-of-bauhaus-artist-annie-albers.html&psig=AOvVaw36A9IPAgCcP6UZjphpm2tj&ust=1549716512456987"
  },
  {
    "_id": "doJ5ZZ3xqNAP7448g",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T18:25:55.406Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pqu0ro1tsxyukexbndyu",
        "version": 1552674390,
        "signature": "36932359d9d2e66f2524fb1433e3405d79adac52",
        "width": 1404,
        "height": 1408,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T18:26:30Z",
        "tags": [],
        "bytes": 253548,
        "type": "upload",
        "etag": "66e115f714212d788601a28a3a20af99",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552674390/avalanche2019/pqu0ro1tsxyukexbndyu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552674390/avalanche2019/pqu0ro1tsxyukexbndyu.jpg"
      },
      {
        "public_id": "avalanche2019/gofszlri54l3o3j7nf41",
        "version": 1552674395,
        "signature": "9b14c05694d21f7684c6feb46f73bf262f97b7cb",
        "width": 714,
        "height": 714,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T18:26:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 165191,
        "type": "upload",
        "etag": "5348d324211dc4821157f8519078d6c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552674395/avalanche2019/gofszlri54l3o3j7nf41.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552674395/avalanche2019/gofszlri54l3o3j7nf41.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "349688",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 357169,
        "duration": 3.7,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "doR759gti9sPqfkXY",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T06:19:50.833Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vuu2rs76spfbmxz9qwkb",
        "version": 1550211602,
        "signature": "d3556bdcb773be4e4636dfdce39fa4bc988d621f",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T06:20:02Z",
        "tags": [],
        "bytes": 43824,
        "type": "upload",
        "etag": "d625b11fbe9ea53ae6fcc42816778dc5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550211602/avalanche2019/vuu2rs76spfbmxz9qwkb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550211602/avalanche2019/vuu2rs76spfbmxz9qwkb.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "this pixel can smile, frown and gasp",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar face_color, shocked_btn, sad_btn;\nfunction setup() {\n    createCanvas(500,500);\n    createP('Face Color');\n    face_color = createInput(\"#F7F728\", \"color\");\n   \n\n    createP('Face Expression');\n\n    shocked_btn = createButton(\"Happy\");\n    shocked_btn.position(0, 620);\n    shocked_btn.mousePressed(happy);\n\n    shocked_btn = createButton(\"Shocked!\");\n    shocked_btn.position(60, 620);\n    shocked_btn.mousePressed(shocked);\n\n    sad_btn = createButton(\"Sad\");\n    sad_btn.position(135, 620);\n    sad_btn.mousePressed(sad);\n    noLoop();\n}\n\nfunction happy(){\n  draw_face()\n  fill(0);\n  rect(213, 283, 78, 26);\n}\n\nfunction shocked(){\n  draw_face()\n  fill(0);\n  rect(213, 231, 78, 26);\n  rect(213, 283, 78, 26);\n}\n\nfunction sad(){\n  draw_face()\n  fill(0);\n\trect(213, 231, 78, 26);\n\n}\n\nfunction draw() {\n  noStroke();\n  fill(face_color.value());\n  background(\"#00AEEF\");\n  draw_face()\n  happy()\n}\n\nfunction draw_face(){\n  noStroke();\n  fill(face_color.value());\n  rect(163, 157, 177, 177);\n  fill(23);\n  rect(138, 182, 26, 130);\n  rect(163, 311, 26, 26);\n  rect(188, 334, 130, 26);\n  rect(163, 157, 26, 26);\n  // long right\n  rect(340, 182, 26, 130);\n\n  // top right\n  rect(317, 157, 26, 26);\n\n  // bottom right\n  rect(317, 311, 26, 26);\n\n  // long top\n  rect(188, 132, 130, 26);\n\n  //mouth\n  rect(188, 258, 26, 26);\n  rect(291, 258, 26, 26);\n\n  // eye\n  rect(213, 182, 26, 26);\n  rect(264, 182, 26, 26);\n\n  //legs\n  rect(188, 360, 26, 26);\n  rect(292, 360, 26, 26);\n}"
  },
  {
    "_id": "dvqvQzSm8CT3Dc2ta",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T03:54:53.656Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nomwmjqohauyveynzeyt",
        "version": 1552479738,
        "signature": "0bebdc2a4b3bba35cdf5cc03fd135e6f565fa207",
        "width": 1194,
        "height": 1418,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T12:22:18Z",
        "tags": [],
        "bytes": 407968,
        "type": "upload",
        "etag": "2c6ae03be5febb0eb95cbdbc3f9afbc6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552479738/avalanche2019/nomwmjqohauyveynzeyt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552479738/avalanche2019/nomwmjqohauyveynzeyt.png"
      },
      {
        "public_id": "avalanche2019/xi2ncwuasngxsilp33bz",
        "version": 1552479745,
        "signature": "adcc77498689f57687818387304bb7a8a7877d76",
        "width": 1152,
        "height": 1274,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T12:22:25Z",
        "tags": [],
        "bytes": 264373,
        "type": "upload",
        "etag": "0085be208aa7c7fccdcc45c2be259066",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552479745/avalanche2019/xi2ncwuasngxsilp33bz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552479745/avalanche2019/xi2ncwuasngxsilp33bz.png"
      },
      {
        "public_id": "avalanche2019/ln3r9wqhk1brg8emjhdp",
        "version": 1552479751,
        "signature": "c93aad1e708920a3a41313a1b4326aa890328e4d",
        "width": 1272,
        "height": 1428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T12:22:31Z",
        "tags": [],
        "bytes": 360064,
        "type": "upload",
        "etag": "23336e8b4dcd8575952b85d64e14e1be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552479751/avalanche2019/ln3r9wqhk1brg8emjhdp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552479751/avalanche2019/ln3r9wqhk1brg8emjhdp.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-13T15:34:25.27Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T00:42:50.28Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:51:04.247Z" }
      }
    ],
    "title": "",
    "description": "A short iteration on the previous sketch to keep things moving. \n\nAdds recursive movement and a tiny bit of noise.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nlet turnOptions = [];\nlet forwardOptions = [];\n\nconst stepDist = 1;\nconst turnDeg = 90;\nconst strokeWt = .6;\n\nlet hexRed;\nlet hexYellow;\nlet hexBlue;\n\nfunction setup() {\n    createCanvas(windowWidth, windowHeight);\n    myTurtle = new Turtle();\n\n    noFill();\n    strokeWeight(strokeWt);\n    background(245, 245, 245);\n    \n    for (let i = 0; i < 360; i += turnDeg) {\n        turnOptions.push(i);\n    }\n\n    hexRed = color(\"#e0233d\");\n    hexYellow = color(\"#e0b023\");\n    hexBlue = color(\"#4286f4\");\n\n    chooseRandColor();\n}\n\nfunction draw() {\n    // teleport to center of canvas\n    myTurtle.moveTo(width / 2, height / 2);\n    myTurtle.penDown();\n\n    // put the pen down to draw\n    for (let i = 0; i < 8000; i++) {\n\n        let nX = noise(myTurtle.x * .01, 0, 0);\n        let nY = noise(0, myTurtle.y * .01, 1000);\n        let thisTurnIndex = Math.floor(random(turnOptions.length));\n        let thisTurn = turnOptions[thisTurnIndex];\n\n        if (myTurtle.x < width && myTurtle.x > 0) {\n            if (myTurtle.y < height && myTurtle.y > 0) {\n                myTurtle.moveForward(stepDist);\n                myTurtle.turnRight(thisTurn + ((random(-1, 1) * nY) / 10));\n            }\n        }\n\n        if (thisTurn === 90) {\n            chooseRandColor();\n        }\n\n        push();\n        for (let i = 0; i < 10; i++) {\n            let thisTurn = turnOptions[thisTurnIndex];\n            if (myTurtle.x < width && myTurtle.x > 0) {\n                if (myTurtle.y < height && myTurtle.y > 0) {\n                    myTurtle.moveForward(stepDist);\n                    myTurtle.turnRight(thisTurn);\n                }\n            }\n        }\n        pop();\n    }\n\tnoLoop();\n}\n\nfunction chooseRandColor() {\n    let randC = random();\n    if (randC < (1/3)) {\n        stroke(color(hexRed));\n        fill(color(hexRed));\n    } else if (randC < (2/3)) {\n        stroke(color(hexYellow));\n        fill(color(hexYellow));\n    } else if (randC < 1) {\n        stroke(color(hexBlue));\n        fill(color(hexBlue));\n    }\n}"
  },
  {
    "_id": "dx3k9dSSubcTvSamG",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T04:43:39.992Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/i7ju7kwpwgmpvkv6wqsf",
        "version": 1552625080,
        "signature": "61e4734253f5aeaec27deed7cc94b4e66d76a46e",
        "width": 992,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T04:44:40Z",
        "tags": [],
        "bytes": 57696,
        "type": "upload",
        "etag": "af7db0784e703625b2eec60bbe7a480d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552625080/avalanche2019/i7ju7kwpwgmpvkv6wqsf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552625080/avalanche2019/i7ju7kwpwgmpvkv6wqsf.png"
      },
      {
        "public_id": "avalanche2019/i1okw2ffrsxhecd7s6ae",
        "version": 1552625199,
        "signature": "2ccf84821a1f0257b23fa91866433d176004f57c",
        "width": 986,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T04:46:39Z",
        "tags": [],
        "bytes": 75578,
        "type": "upload",
        "etag": "9f6debc67d907a16522494cbfbfb0d8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552625199/avalanche2019/i1okw2ffrsxhecd7s6ae.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552625199/avalanche2019/i1okw2ffrsxhecd7s6ae.png"
      },
      {
        "public_id": "avalanche2019/x8yantilqqgtundlxoqu",
        "version": 1552625219,
        "signature": "8fb641227a5e673bb69255d42f0e5d9d575c2fcf",
        "width": 984,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T04:46:59Z",
        "tags": [],
        "bytes": 48261,
        "type": "upload",
        "etag": "df15732158dd475c3bb3e3ee745ab440",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552625219/avalanche2019/x8yantilqqgtundlxoqu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552625219/avalanche2019/x8yantilqqgtundlxoqu.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:05:20.279Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n// color code from https://p5js.org/examples/simulate-brownian-motion.html\n\nvar myTurtle;\nvar num = 100;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tmyTurtle = new Turtle();\n\tbackground(20);\n\tframeRate(3);\n\tcolorMode();\n}\n\nfunction draw() {\n\tnoFill();\n\tstrokeWeight(0.185);\n\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(250, 250);\n\n\tmyTurtle.penDown();\n\n\tfor ( let j = 1; j < num; j++ ) {\n\t\tvar val = j / num * 241.0 + 51;\n\t}\n\n\tfor (var i = 0; i < 4; i++) {\n\t\tstroke(val);\n\t\tmyTurtle.moveForward(random(5,100));\n\t\tmyTurtle.turnRight(120);\n\t\tmyTurtle.moveBackward(random(2,5));\n\t}\n}"
  },
  {
    "_id": "dxBkpQr8ut8WwFB6p",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:11:17.818Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wkrf0opjdgvxajdecput",
        "version": 1552075892,
        "signature": "ce77da6b508d74272cc00b4f2da74e1ac8bada3e",
        "width": 994,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T20:11:32Z",
        "tags": [],
        "bytes": 2093467,
        "type": "upload",
        "etag": "5ed439476b3fe7bf852ae6a834afd8ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552075892/avalanche2019/wkrf0opjdgvxajdecput.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552075892/avalanche2019/wkrf0opjdgvxajdecput.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "lung 3-rd edition",
    "code": "var worldImage;\n\nfunction preload() {\n    worldImage = loadImage(\"lung_2.png\");\n    // worldImage = loadImage(\"/pixels/sketches/world_100.png\");\n}\n\nfunction setup() {\n    createCanvas(500, 500);\n  // noprotect\n}\n\n\nfunction draw() {\n    background(50, 50, 50);\n\n    //fill(random(200,255),random(200,255),random(200,255),);\n    noStroke();\n\n    var spacing = 500 / worldImage.width;\n    for (var y = 0; y < worldImage.height; y++) {\n        for (var x = 0; x < worldImage.width; x++) {\n            var in_color = worldImage.get(x, y);\n            var dot_size = lightness(in_color) / 255 * 10;\n            ellipse(x * spacing + spacing * 0.5, y * spacing + spacing * 0.5, dot_size, dot_size);\n          fill(random(150,250),random(150,250),random(150,250),);\n        }\n    }\n\n    // we don't draw the image, its just input\n\n    noLoop();\n}"
  },
  {
    "_id": "e4yYFJtGd5MHZQvrz",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T16:30:59.064Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jgctt6sd2r97mddcdx2w",
        "version": 1555000270,
        "signature": "2a6b6a9b6dfd9ec3ef98f88a16672869895a3d68",
        "width": 2602,
        "height": 1260,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-11T16:31:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 1265944,
        "type": "upload",
        "etag": "ff91f96c6b068b4bac78ba9752be2175",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555000270/avalanche2019/jgctt6sd2r97mddcdx2w.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555000270/avalanche2019/jgctt6sd2r97mddcdx2w.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "High",
          "bit_rate": "2268764",
          "dar": "1301:630"
        },
        "frame_rate": 60,
        "bit_rate": 2275854,
        "duration": 4.45,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-11T20:20:47.929Z" }
      }
    ],
    "title": "",
    "description": "Random Love Letter Generator? Sentence pulled from Internet, ew.",
    "inspiration_name": "ScrambleTextPlugin",
    "inspiration_url": "https://greensock.com/ScrambleTextPlugin"
  },
  {
    "_id": "e8MoargBhQkP92dtL",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-30T19:35:33.317Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ygivaxixajaruxzvjyur",
        "version": 1548876937,
        "signature": "5c435d9c847c24b4ba9097bb1c25c29f1bf0bdf3",
        "width": 1468,
        "height": 838,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-30T19:35:37Z",
        "tags": [],
        "bytes": 48657,
        "type": "upload",
        "etag": "1434b512f0ad5bb81a0e427463854a1b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548876937/avalanche2019/ygivaxixajaruxzvjyur.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548876937/avalanche2019/ygivaxixajaruxzvjyur.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "This is a tile map using an array of 1s and 0s to draw my initials. 1s draw a fuchsia square,  0s draw a cyan square. If you look at the map array code, you can see the 1s in the shape of my initials. The code didn't maintain the formatting when I pasted it so my apologies if it's difficult to read.",
    "inspiration_name": "2d tile map javascript tutorial",
    "inspiration_url": "https://www.youtube.com/watch?v=WMTv6QsAp0I",
    "code": "// credit to Frank Poth youtube tutorial: https://www.youtube.com/watch?v=WMTv6QsAp0I\n\n(function() {\n  let buffer, context, map, size;\n  let drawMap;\n  let tileRed;\n\n  buffer = document.createElement(\"canvas\").getContext(\"2d\");\n  context = document.querySelector(\"canvas\").getContext(\"2d\");\n\n  map = [ 1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,\n                1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,\n                1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,\n                1,0,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,\n                1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,\n                1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1\n          ];\n\n  size = 36;\n\n  buffer.canvas.width = 18 * size;\n  buffer.canvas.height = 6 * size;\n\n  drawMap = function() {\n    for (let index = 0; index < map.length; index++) {\n      buffer.fillStyle = (map[index] == 1)?\"#ca2c92\":\"#00ffff\";\n      buffer.fillRect((index % 18) * size, Math.floor(index / 18) * size, size, size);\n    }\n    context.drawImage(\n      buffer.canvas, 0, 0, buffer.canvas.width, buffer.canvas.height,0, 0, context.canvas.width, context.canvas.height\n    );\n  };\n  resize = function(event) {\n\n    context.canvas.width = Math.floor(document.documentElement.clientWidth - 36);\n\n    if (context.canvas.width > document.documentElement.clientHeight) {\n\n      context.canvas.width = Math.floor(document.documentElement.clientHeight);\n\n    }\n\n    context.canvas.height = Math.floor(context.canvas.width * 0.5625);\n\n    drawMap();\n\n  };\n\n  window.addEventListener(\"resize\", resize, {passive:true});\n\n  resize();\n\n})();"
  },
  {
    "_id": "eAcXdPQghPpidBTna",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T00:14:07.674Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r8lye52ajknd1irrthr5",
        "version": 1552436063,
        "signature": "a81f3ca0a5f591830dc31368071f0115473c78c7",
        "width": 600,
        "height": 606,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T00:14:23Z",
        "tags": [],
        "bytes": 272726,
        "type": "upload",
        "etag": "fe8988e2068b2613dd0a37eedb21d20d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552436063/avalanche2019/r8lye52ajknd1irrthr5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552436063/avalanche2019/r8lye52ajknd1irrthr5.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T01:38:57.353Z" }
      }
    ],
    "title": "",
    "description": "Playing with HSB -- and like the 3D-ness",
    "inspiration_name": "Starter Code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n\nvar myTurtle;\nvar h,s,b;\n\nfunction setup() {\n\tcreateCanvas(300, 300);\n  \n  colorMode(HSB,250);\n\tmyTurtle = new Turtle();\n    s = 200;\n  \tb = 200;\n  \th = 200;\n}\n\nfunction draw() {\n\tbackground(1);\n\n\n\t//noFill();\n\t//stroke(135, 55, 255, 140);\n  \t//stroke(h, s, b, 180);\n\t//strokeWeight(.5);\n\n\n\t// move to starting position (without drawing)\n\t//myTurtle.pushState();\n  myTurtle.penUp();\n\tmyTurtle.moveTo(20, 90);\n\n\t// put the pen down to draw\n\tmyTurtle.penDown();\n    myTurtle.pushState();\n\n\t// draw the triangle\n\tfor (var i = 0; i < 140; i++) {\n        b = map(myTurtle.x, 0, width, 15, 200);\n\t\tmyTurtle.moveForward(250);\n\t\tmyTurtle.turnRight(125);\n    myTurtle.turnLeft(-15/3);\n    myTurtle.turnLeft(-1);\n    stroke(h,s,b);\n    \n\t}\n\n\tnoLoop();\n}"
  },
  {
    "_id": "eBuxCkTzk4GZM3qB9",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-08T03:09:24.896Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aw7znkenuxt0d7pljgve",
        "version": 1554692993,
        "signature": "8fb05507b1cd702e04530d6b9c85062fb42de1de",
        "width": 1580,
        "height": 1484,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-08T03:09:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 10804298,
        "type": "upload",
        "etag": "b872f77a2cad0f2cdd083aae69cea498",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554692993/avalanche2019/aw7znkenuxt0d7pljgve.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554692993/avalanche2019/aw7znkenuxt0d7pljgve.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "2384444",
          "dar": "395:371"
        },
        "frame_rate": 60,
        "bit_rate": 2405900,
        "duration": 35.926,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-08T18:18:08.703Z" }
      }
    ],
    "title": "",
    "description": "**Salutation confidante.** Today's sketch builds off of something I already had in progress. But I'd been meaning to add to it, and text week is was the perfect chance!\n\nLive: [https://annagarbier.github.io/exampleCode/naiveThesaurus/](https://annagarbier.github.io/exampleCode/naiveThesaurus/)"
  },
  {
    "_id": "eDy43bHnMQ9ptnQRz",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T05:56:31.607Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vd082rddcdxihzxisiyo",
        "version": 1550210210,
        "signature": "c836faca698e0f5973f99e9c38677a208a9625f7",
        "width": 994,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T05:56:50Z",
        "tags": [],
        "bytes": 952115,
        "type": "upload",
        "etag": "99d55751b6ff95d1b08f3443e58667ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550210210/avalanche2019/vd082rddcdxihzxisiyo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550210210/avalanche2019/vd082rddcdxihzxisiyo.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T20:40:14.387Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-16T15:07:14.652Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-02-25T14:10:03.261Z" }
      }
    ],
    "title": "",
    "description": "a galaxy ?  ¯\\_(ツ)_/¯ . This is Brownian movement, user can adjust the size and speed of points, blend mode here is screen, so the circles turn lighter when they overlap",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// from https://p5js.org/examples/simulate-brownian-motion.html\n\nvar psizze, speed;\nvar length = 10;\nvar sizzee = 40;\nvar ax = [];\nvar ay = [];\n\nfunction setup(){\n  createCanvas(500, 500);\n  background(10);\n  for ( var i = 0; i < length; i++ ) {\n    ax[i] = width / 2;\n    ay[i] = height / 2;\n    blendMode(SCREEN);\n  }\n  createP('size');\n  psizze = createSlider(1,70,5);\n  createP('Speed');\n  speed = createSlider(1,150,5);\n}\n\nfunction draw(){\n  stroke(220);\n  strokeWeight(psizze.value());\n  frameRate(speed.value());\n  noFill();\n  for ( var i = 1; i < length; i++ ) {\n    ax[i-1] = ax[i];\n    ay[i-1] = ay[i];\n  }\n  ax[length - 1] += random(-sizzee, sizzee);\n  ay[length - 1] += random(-sizzee, sizzee);\n  ax[length - 1] = constrain(ax[length - 1], 0, width);\n  ay[length - 1] = constrain(ay[length - 1], 0, height);\n  for ( var j = 1; j < length; j++ ) {\n    smooth();\n    stroke(random(80),random(75),random(400),5);\n    point(ax[j - 1], ay[j - 1], ax[j-1]);\n  }\n}"
  },
  {
    "_id": "eEvYNk2sGuhBYdxF6",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T02:01:34.936Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n5crrc5mx3l3mad4thwr",
        "version": 1552010499,
        "signature": "a6b4ee8053d257c16732b302d9905d85eb31d16c",
        "width": 600,
        "height": 450,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-08T02:01:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 980854,
        "type": "upload",
        "etag": "c12552f1c38260c808b09702e72983f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552010499/avalanche2019/n5crrc5mx3l3mad4thwr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552010499/avalanche2019/n5crrc5mx3l3mad4thwr.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "High",
          "bit_rate": "652395",
          "dar": "21:16"
        },
        "frame_rate": 10,
        "bit_rate": 653902,
        "duration": 12,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "made with Processing"
  },
  {
    "_id": "eFe82toTZmmR3imZp",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-24T02:08:53.195Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Fixed the bugs! run the program text free grammars and synth combo",
    "code": "// require /text/tracery.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth({\n    oscillator: {\n        type: 'sine', // sine, square, triangle, sawtooth, fat*\n    },\n   envelope: {\n        attack: 0.3,\n        decay: 0.1,\n        sustain: 0.3,\n        release: 1,\n    },\n});\nsynth.toMaster();\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n    // Play the melody!\n\n    const melody = generate();\n       const notes = melody.split(\" \");\n       console.log(notes); \n    play(notes);\n  \n};\n\n\n\nfunction generate() {\n\n    const songGrammar = {\n        \"song\": [\"#g# #measure1# #rest#\"],\n        \"measure1\": [\"#p1# #p1# #p1# #p1# #p1# #p1# #p1# #p1#\"],\n        \"p1\": ['#c# #D/e# #fg#'],\n        \"fg\": ['#f# #g#'],\n        \"D/e\": ['#D#', '#e#'],\n        \"g\": [\"g4 2n\"],\n        \"c\": [\"c4 2n\"],\n        \"f\": [\"f4 8n\"],\n        \"D\": [\"D4 4n\"],\n        \"e\": [\"e4 4n\"],\n        \"rest\": [\"REST 1m\"],\n\n    }\n    let grammar = tracery.createGrammar(songGrammar);\n    console.log(grammar);\n    let song = grammar.flatten(\"#song#\");\n    // console.log(song);\n    const storyDiv = document.createElement('div');\n    storyDiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n    storyDiv.textContent = song;\n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    return song;\n}\n\n\nfunction play(melody) {\n    let t = Tone.now();\n    for (let i = 0; i < melody.length; i += 2) {\n        // console.log(melody[i], melody[i + 1].toNotation());\n        console.log(melody[i]); \n        if (melody[i] !== 'REST') {\n            // synth.triggerAttackRelease(note[0], note[1]), t);\n            synth.triggerAttackRelease(melody[i], Tone.Time(melody[i + 1]) - 0.01, t);\n        }\n        t += Tone.Time(melody[i+1]);\n    }\n}\n\nconsole.log('click for music!');\n\n// function randomNote() {\n//     // console.log(gotNotes.length);\n//     const index = Math.floor(Math.random() * gotNotes.length);\n//     var note = gotNotes[index];\n//     return note;\n// }"
  },
  {
    "_id": "eNQNpCG4LqH3Ym6vW",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-03-01T18:58:31.445Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jwneyihkvgbaxugm9dzv",
        "version": 1551468096,
        "signature": "c02081f908ce1b598f8a0a8c7b073b9a9938d769",
        "width": 1904,
        "height": 1060,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T19:21:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 5532864,
        "type": "upload",
        "etag": "afaa56e4c592b5d6c777faefda100f63",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551468096/avalanche2019/jwneyihkvgbaxugm9dzv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551468096/avalanche2019/jwneyihkvgbaxugm9dzv.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "226085",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1217840",
          "dar": "476:265"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1484618,
        "duration": 29.814333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/crmmdlmhcqsbqrrqbhet",
        "version": 1551468104,
        "signature": "bd03dea0f237b1e26b326bb9d0a263324e890be8",
        "width": 912,
        "height": 824,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T19:21:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 3928214,
        "type": "upload",
        "etag": "2ae745bc3437bd7c31f86074cae400e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551468104/avalanche2019/crmmdlmhcqsbqrrqbhet.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551468104/avalanche2019/crmmdlmhcqsbqrrqbhet.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "226813",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "786792",
          "dar": "114:103"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1036963,
        "duration": 30.3055,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ysjhh6udokzapo2vetnv",
        "version": 1551468109,
        "signature": "03334e213e3a438c41172199cf1e941755d1e11a",
        "width": 928,
        "height": 772,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T19:21:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 3209656,
        "type": "upload",
        "etag": "472fd1b6385af71a6fca253ad4c00152",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551468109/avalanche2019/ysjhh6udokzapo2vetnv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551468109/avalanche2019/ysjhh6udokzapo2vetnv.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "224959",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "758815",
          "dar": "232:193"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 992037,
        "duration": 25.883333,
        "rotation": 0
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "*More talking dots.*\n\n- video 1: everyday phrases\n- video 2: tired phrases\n- video 3: phrases abroad",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\n// audio from forvo.com\n// currently requires local audio files.\n// will try to make useable on the site later this week.\n\nconst phrases = [];\nconst Talkers = [];\nconst numTalkers = 6;\nconst triggerDist = 70;\nlet talker;\nlet meetingPoint;\nlet convene;\n\nconst canvasWidth = 400;\nconst canvasHeight = 400;\n\nfunction preload() {\n    for (i = 0; i <= numTalkers; i++) {\n        phrases.push(loadSound(`./cliches/${i}.mp3`)); // max 6\n        // phrases.push(loadSound(`./randomPhrases/${i}.mp3`)); // max 11\n        // phrases.push(loadSound(`./italian/${i}.mp3`)); // max 6\n        // phrases.push(loadSound(`./shakespeare/${i}.mp3`)); // max 7\n    }\n}\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    ellipseMode(CENTER);\n\n    meetingPoint = {\n        x: random(canvasWidth),\n        y: random(canvasHeight)\n    };\n\n    // controls\n    conveneSlider = createButton(\"convene\");\n    conveneSlider.position(canvasWidth / 2 - 50, canvasHeight);\n    conveneSlider.mousePressed(conveneAll);\n\n    disperseSlider = createButton(\"disperse\");\n    disperseSlider.position(canvasWidth / 2 + 50, canvasHeight);\n    disperseSlider.mousePressed(disperseAll);\n\n    createTalkers();\n    console.log(Talkers[0].x, Talkers[0].y);\n}\n\nfunction draw() {\n    background(255);\n    // Draw talkers\n    if (convene === true) {\n        for (let i = 0; i < Talkers.length; i++) {\n            Talkers[i].convene();\n            Talkers[i].show();\n            Talkers[i].talk();\n        }\n    } else {\n        for (let i = 0; i < Talkers.length; i++) {\n            Talkers[i].disperse();\n            Talkers[i].show();\n            Talkers[i].talk();\n        }\n    }\n}\n\n\n// Talker class\nclass Talker {\n    constructor(_x, _y, _phrase_key) {\n        this.origin = {\n            x: _x,\n            y: _y\n        },\n        this.x = _x,\n        this.y = _y,\n        this.phrase_key = _phrase_key,\n        this.diam = 14,\n        // this.disperseValenceX = Math.floor(random(-1, 2)),\n        // this.disperseValenceY = Math.floor(random(-1, 2)),\n        this.disperseNoiseX = noise(this.x * .01, 0),\n        this.disperseNoiseY = noise(this.y * .01, 1)\n    }\n\n    convene() {\n        this.x = lerp(this.x + random(-.3, .3), meetingPoint.x, .003);\n        this.y = lerp(this.y + random(-.3, .3), meetingPoint.y, .003);\n    }\n\n    disperse() {\n        this.x = lerp(this.x + random(-.3, .3), this.origin.x, .004);\n        this.y = lerp(this.y + random(-.3, .3), this.origin.y, .004);\n    }\n\n    show() {\n        noStroke();\n        fill(50);\n        ellipse(this.x, this.y, this.diam, this.diam);\n    }\n\n    talk() {\n        let distToMeetingPt = dist(this.x, this.y, meetingPoint.x, meetingPoint.y);\n        if (\n            distToMeetingPt < triggerDist &&\n            phrases[this.phrase_key].isPlaying() === false &&\n            convene === true\n        ) { \n            phrases[this.phrase_key].setVolume(1, 3);\n            phrases[this.phrase_key].play();\n        }\n    }\n\n    quiet() {\n        phrases[this.phrase_key].setVolume(0, 2);\n        // phrases[this.phrase_key].stop();\n    }\n}\n\n// Creates an array of talkers with x, y coordinates\nfunction createTalkers() {\n    for (let i = 0; i <= numTalkers; i++) {\n        let x = noise(i, 0) * canvasWidth;\n        let y = noise(i, 1000) * canvasHeight;\n        talker = new Talker(x, y, i);\n        Talkers.push(talker);\n    }\n}\n\n// Convene\nfunction conveneAll() {\n    for (let i = 0; i < Talkers.length; i++) {\n        Talkers[i].convene();\n    }  \n}\n\n// Disperse\nfunction disperseAll() {\n    for (let i = 0; i < Talkers.length; i++) {\n        Talkers[i].disperse();\n    }    \n}\n\n// Show\n// function showAll() {\n//     for (let i = 0; i < Talkers.length; i++) {\n//         Talkers[i].show();\n//     }  \n// }\n\n// Talk\nfunction talkAll() {\n    for (let i = 0; i < Talkers.length; i++) {\n        Talkers[i].talk();\n    }\n}\n\nfunction quietAll() {\n    for (let i = 0; i < Talkers.length; i++) {\n        Talkers[i].quiet();\n    }\n}\n\n// Controls\nfunction conveneAll() {\n    convene = true;\n    meetingPoint = {\n        x: random(50, canvasWidth - 50),\n        y: random(50, canvasHeight - 50)\n    };\n    console.log(\"convene\");\n}\n\nfunction disperseAll() {\n    convene = false;\n    quietAll();\n    console.log(\"disperse\");\n}"
  },
  {
    "_id": "ePSAWbnFSDtSz7BNN",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T05:25:10.621Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bid76xrysdpw4hansaxp",
        "version": 1551849932,
        "signature": "32c83e715229004fb921767eda99fce818ba7557",
        "width": 948,
        "height": 1426,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T05:25:32Z",
        "tags": [],
        "bytes": 502601,
        "type": "upload",
        "etag": "3ce67d5d38a3cbede82481886d367b08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551849932/avalanche2019/bid76xrysdpw4hansaxp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551849932/avalanche2019/bid76xrysdpw4hansaxp.png"
      },
      {
        "public_id": "avalanche2019/elcdm9sz0wqegk8jaiii",
        "version": 1551849939,
        "signature": "7b69c1de98896ac926d820c521e9434ddb67bd83",
        "width": 938,
        "height": 1424,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T05:25:39Z",
        "tags": [],
        "bytes": 656380,
        "type": "upload",
        "etag": "57bb4fffb6758154a31bd0e665c3a87e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551849939/avalanche2019/elcdm9sz0wqegk8jaiii.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551849939/avalanche2019/elcdm9sz0wqegk8jaiii.png"
      },
      {
        "public_id": "avalanche2019/otf2v3g1sokh8n9iksik",
        "version": 1551850320,
        "signature": "340d12412424b5471a4ac4ec2cb4b20126992711",
        "width": 936,
        "height": 1424,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T05:32:00Z",
        "tags": [],
        "bytes": 520110,
        "type": "upload",
        "etag": "e8bb82f867690c3827275d1f198758ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551850320/avalanche2019/otf2v3g1sokh8n9iksik.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551850320/avalanche2019/otf2v3g1sokh8n9iksik.png"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-06T13:34:15.689Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T15:57:58.833Z" }
      }
    ],
    "title": "",
    "description": "Giacometti, still needs something more but posting for now.",
    "inspiration_name": "Giacometti",
    "inspiration_url": "https://github.com/annagarbier/compform/blob/master/face_500_select.jpg",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Base code comes from class exercise. Thanks!\n// Starting image is Giacometti sculpture, seen here:\n// https://github.com/annagarbier/compform/blob/master/face_500_select.jpg\n\nlet img;\nconst canvasWidth = 500;\nconst canvasHeight = 900;\n\nfunction preload() {\n    img = loadImage(\"https://raw.githubusercontent.com/annagarbier/compform/master/face_500_select.jpg\");\n}\n\nfunction setup() {\n    createCanvas(530, 800);\n}\n\nfunction draw() {\n    noStroke();\n\n    translate(15, 15);\n    background(250, 250, 250);\n\n    var spacing = 500 / img.width;\n    for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n            var in_color = img.get(x, y);\n            const r = in_color[0];\n            const g = in_color[1];\n            const b = in_color[2];\n            let a = map(in_color[3], 0, 255, 0, 5);\n\n            if (in_color[0] < 200) {\n                for (let i = 0; i < 15; i++) {\n                    // Monotone\n                    fill(r, g, b, a - i);\n                    ellipse(\n                        x * spacing + spacing * .5,\n                        (y + i) * spacing + spacing * .5,\n                        5, 15\n                    );\n                }\n            }\n        }\n    }\n    background(250, 250, 250, 60);\n    noLoop();\n}"
  },
  {
    "_id": "eShL6N2iKpE3mD7eW",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T18:38:58.132Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/voxgobylufs0t5peqdnx",
        "version": 1554404226,
        "signature": "c8d12f05d4de2408cf2a7074ae74e28345521fcd",
        "width": 1200,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-04T18:57:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 1187196,
        "type": "upload",
        "etag": "0ff9a0924404ef895874b346d4868ce4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554404226/avalanche2019/voxgobylufs0t5peqdnx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554404226/avalanche2019/voxgobylufs0t5peqdnx.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "248141",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "571284",
          "dar": "5:3"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 828276,
        "duration": 11.466667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "funny",
        "created_at": { "$date": "2019-04-04T23:25:08.809Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-05T14:29:54.112Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-06T02:37:44.264Z" }
      }
    ],
    "title": "",
    "description": "Comp Form Bumper. I probably did this in the least efficient way.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n\nlet w = 1500;\nlet h = 900;\n\nlet firstLetterX;\nlet firstLetterY;\nlet speed = 1;\n\nlet cUpX = 30;\nlet cUpY = h / 3 - 50;\nlet cDownX = cUpX;\nlet cDownY = cUpY + 5;\n\nlet oDownLeftX = 400;\nlet oDownLeftY = 69;\nlet oDownRightX = oDownLeftX;\nlet oDownRightY = oDownLeftY;\n\nlet oUpLeftX = 229;\nlet oUpLeftY = 240;\nlet oUpRightX = 400;\nlet oUpRightY = 411;\n\nlet mDownLeftX = 600;\nlet mDownLeftY = 69;\n\nlet mSmallDownRightX = mDownLeftX;\nlet mSmallDownRightY = mDownLeftY;\n\nlet mSmallUpRightX = 771;\nlet mSmallUpRightY = 240;\n\nlet mDownRightX = 942;\nlet mDownRightY = 69;\n\nlet pLeftX = 1000;\nlet pLeftY = 69;\nlet pDownX = 1171;\nlet pDownY = 69;\nlet pRightX = pDownX;\nlet pRightY = 240;\n\nlet fDownX = 30;\nlet fDownY = h * (2 / 3) - 50;\n\nlet ftopRightX = 30;\nlet ftopRightY = h * (2 / 3) - 50;\n\nlet fbottomRightX = 30;\nlet fbottomRightY = h * (2 / 3) + 70;\n\nlet oOfFormDownLeftX = 400;\nlet oOfFormDownLeftY = h * (2 / 3) - 50;\n\nlet oOfFormDownRightX = 400;\n\nlet oOfFormBottomLeftX = 571;\nlet oOfFormBottomLeftY = 721;\n\nlet oOfFormBottomRightX = 400;\nlet oOfFormBottomRightY = 892;\n\nlet rBaseY = h * (2 / 3) - 50;\n\nlet rTopRightX = 700;\nlet rTopDownY = h * (2 / 3) - 50;\nlet rBottomLeftX = 922.2999999999922;\n\nlet rBottomRightX = 700;\nlet rBottomRightY = 669.7000000000078;\n\nlet mFormLeftDownY = h * (2 / 3) - 50;\n\nlet mFormSmallLeftDownX = 1000;\nlet mFormSmallLeftDownY = h * (2 / 3) - 50;\n\nlet mFormSmallLeftUpX = 1171;\nlet mFormSmallLeftUpY = 721;\n\nlet mFormRightDownY = h * (2 / 3) - 50;\n\nlet EXPORT = false;\n\nfunction setup() {\n  createCanvas(w, h);\n  background(0);\n  frameRate(2);\n}\n\nfunction draw() {\n  console.log(frameCount);\n  stroke(255);\n  strokeWeight(15);\n  cOfComp();\n  oOfComp();\n  mOfComp();\n  pOfComp();\n\n  fOfForm();\n  oOfForm();\n  rOfForm();\n  mOfForm();\n\n  if (EXPORT) {\n    saveFrame(\"EXPORT\", frameCount, \"jpg\", 171);\n  }\n  if (frameCount > 171) {\n    noLoop();\n  }\n}\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n    return;\n  }\n\n  if (!extension) {\n    extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}\n\nfunction cOfComp() {\n  line(30, h / 3 - 50, cUpX, cUpY);\n  cUpX += speed;\n  cUpY -= speed;\n  if (cUpX > 200) {\n    noLoop();\n  }\n  line(30, h / 3 + 5 - 50, cDownX, cDownY);\n  cDownX += speed;\n  cDownY += speed;\n}\n\nfunction oOfComp() {\n  line(400, 69, oDownLeftX, oDownLeftY);\n  oDownLeftX--;\n  oDownLeftY++;\n\n  line(400, 69, oDownRightX, oDownRightY);\n  oDownRightX++;\n  oDownRightY++;\n\n  line(oUpLeftX, oUpLeftY, 229, 240);\n  oUpLeftX++;\n  oUpLeftY++;\n\n  line(400, 411, oUpRightX, oUpRightY);\n  oUpRightX++;\n  oUpRightY--;\n}\n\nfunction mOfComp() {\n  line(mDownLeftX, mDownLeftY, 600, 69);\n  // mDownLeftX--;\n  mDownLeftY += 2;\n\n  line(600, 69, mSmallDownRightX, mSmallDownRightY);\n  mSmallDownRightX++;\n  mSmallDownRightY++;\n\n  line(771, 240, mSmallUpRightX, mSmallUpRightY);\n  mSmallUpRightX++;\n  mSmallUpRightY--;\n\n  line(942, 69, mDownRightX, mDownRightY);\n  mDownRightY += 2;\n}\n\nfunction pOfComp() {\n  line(1000, 69, 1000, mDownRightY);\n\n  line(1000, 69, pLeftX, pLeftY);\n  pLeftX++;\n\n  line(1171, 69, pDownX, pDownY);\n  pDownY++;\n\n  line(1171, 240, pRightX, pRightY);\n  pRightX--;\n}\n\nfunction fOfForm() {\n  line(30, h * (2 / 3) - 50, fDownX, fDownY);\n  fDownY += 2;\n\n  line(30, h * (2 / 3) - 50, ftopRightX, ftopRightY);\n  ftopRightX += 1.5;\n\n  line(30, h * (2 / 3) + 70, fbottomRightX, fbottomRightY);\n  fbottomRightX += 1.1;\n}\n\nfunction oOfForm() {\n  line(400, h * (2 / 3) - 50, oOfFormDownLeftX, oOfFormDownLeftY);\n  oOfFormDownLeftX--;\n  oOfFormDownLeftY++;\n\n  line(400, h * (2 / 3) - 50, oOfFormDownRightX, oOfFormDownLeftY);\n  oOfFormDownRightX++;\n\n  line(571, 721, oOfFormBottomLeftX, oOfFormBottomLeftY);\n  oOfFormBottomLeftX--;\n  oOfFormBottomLeftY++;\n\n  line(400, 892, oOfFormBottomRightX, oOfFormBottomRightY);\n  oOfFormBottomRightX--;\n  oOfFormBottomRightY--;\n}\n\nfunction rOfForm() {\n  line(620, h * (2 / 3) - 50, 620, rBaseY);\n  rBaseY += 2;\n\n  line(620, h * (2 / 3) - 50, rTopRightX, h * (2 / 3) - 50);\n  rTopRightX += 1.3;\n\n  line(922.2999999999922, h * (2 / 3) - 50, 922.2999999999922, rTopDownY);\n  rTopDownY += 0.7;\n\n  line(922.2999999999922, 669.7000000000078, rBottomLeftX, 669.7000000000078);\n  rBottomLeftX -= 1.3;\n\n  line(700, 669.7000000000078, rBottomRightX, rBottomRightY);\n  rBottomRightX += 1.3;\n  rBottomRightY += 1.3;\n}\n\nfunction mOfForm() {\n  line(1000, h * (2 / 3) - 50, 1000, mFormLeftDownY);\n  mFormLeftDownY += 2;\n\n  line(1000, h * (2 / 3) - 50, mFormSmallLeftDownX, mFormSmallLeftDownY);\n  mFormSmallLeftDownX++;\n  mFormSmallLeftDownY++;\n\n  line(1171, 721, mFormSmallLeftUpX, mFormSmallLeftUpY);\n  mFormSmallLeftUpX++;\n  mFormSmallLeftUpY--;\n\n  line(1342, h * (2 / 3) - 50, 1342, mFormRightDownY);\n  mFormRightDownY += 2;\n}"
  },
  {
    "_id": "eTscqB2qx7fbAKEkA",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-03-01T04:17:50.614Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gabpgisvuaisshla3jhg",
        "version": 1551414177,
        "signature": "4cd9c33ce751e27203e0409d098452b4f9dcdee3",
        "width": 1260,
        "height": 788,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T04:22:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 10663782,
        "type": "upload",
        "etag": "c6543bc3d558af50afcd636728bbed11",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551414177/avalanche2019/gabpgisvuaisshla3jhg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551414177/avalanche2019/gabpgisvuaisshla3jhg.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "6953963",
          "dar": "315:197"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6964102,
        "duration": 12.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Noise",
    "title": "",
    "description": "Subway iii",
    "code": "let yoff1 = 0.0; // 2nd dimension of perlin noise\nlet yoff = 0.0;\nlet yoff2 = 0.0;\nlet yoff3 = 0.0;\nlet yoff4 = 0.0;\n\nfunction setup() {\n  createCanvas(710, 400);\n}\n\nfunction draw() {\n  background(255);\n\n  fill(255);\n  // We are going to draw a polygon out of the wave points\n  stroke(255,0,0);\n  strokeWeight(6);\n  beginShape(POINTS);\n\n  //let xoff = 0; // Option #1: 2D Noise\n   let xoff1 = yoff1; // Option #2: 1D Noise\n\n  // Iterate over horizontal pixels\n  for (let x1 = 0; x1 <= width; x1 += 3) {\n    // Calculate a y value according to noise, map to\n\n    // Option #1: 2D Noise\n    let y1 = map(noise(xoff1, yoff1), 0, 1, 600, 500);\n\n    // Option #2: 1D Noise\n    // let y = map(noise(xoff), 0, 1, 200,300);\n\n    // Set the vertex\n    vertex(y1, x1);\n    // Increment x dimension for noise\n    xoff1 += 0.05;\n  }\n  // increment y dimension for noise\n  yoff1 += 0.01;\n  //vertex(width, height);\n  //vertex(0, height);\n  endShape();\n  \n  \n  ///////////////////////////\n  stroke(0,0,255);\n  beginShape(POINTS);\n\n  //let xoff = 0; // Option #1: 2D Noise\n   let xoff = yoff; // Option #2: 1D Noise\n\n  // Iterate over horizontal pixels\n  for (let x = 0; x <= width; x += 3) {\n    // Calculate a y value according to noise, map to\n\n    // Option #1: 2D Noise\n    let y = map(noise(xoff, yoff), 0, 1, 250, 350);\n\n    // Option #2: 1D Noise\n    // let y = map(noise(xoff), 0, 1, 200,300);\n\n    // Set the vertex\n    vertex(x, y);\n    // Increment x dimension for noise\n    xoff += 0.05;\n  }\n  // increment y dimension for noise\n  yoff += 0.01;\n  vertex(width, height);\n  vertex(0, height);\n  endShape();\n  //////////////////////////\n    stroke(30,170,50);\n  beginShape(POINTS);\n\n  //let xoff = 0; // Option #1: 2D Noise\n   let xoff2 = yoff2; // Option #2: 1D Noise\n\n  // Iterate over horizontal pixels\n  for (let x2 = 0; x2 <= width; x2 += 3) {\n    // Calculate a y value according to noise, map to\n\n    // Option #1: 2D Noise\n    let y2 = map(noise(xoff2, yoff2), 0, 1, 400, 300);\n\n    // Option #2: 1D Noise\n    // let y = map(noise(xoff), 0, 1, 200,300);\n\n    // Set the vertex\n    vertex(y2, x2);\n    // Increment x dimension for noise\n    xoff2 += 0.05;\n  }\n  // increment y dimension for noise\n  yoff2 += 0.01;\n  //vertex(width, height);\n  //vertex(0, height);\n  endShape();\n  ///////////////////////////\n  \n   stroke(125);\n  beginShape(POINTS);\n\n  //let xoff = 0; // Option #1: 2D Noise\n   let xoff3 = yoff3; // Option #2: 1D Noise\n\n  // Iterate over horizontal pixels\n  for (let x3 = 0; x3 <= width; x3 += 3) {\n    // Calculate a y value according to noise, map to\n\n    // Option #1: 2D Noise\n    let y3 = map(noise(xoff3, yoff3), 0, 1, 200, 100);\n\n    // Option #2: 1D Noise\n    // let y = map(noise(xoff), 0, 1, 200,300);\n\n    // Set the vertex\n    vertex(x3, y3);\n    // Increment x dimension for noise\n    xoff3 += 0.05;\n  }\n  // increment y dimension for noise\n  yoff3 += 0.01;\n  vertex(width, height);\n  vertex(0, height);\n  endShape();\n  //////////////////////////\n  stroke(220,200,30);\n  beginShape(POINTS);\n\n  //let xoff = 0; // Option #1: 2D Noise\n   let xoff4 = yoff4; // Option #2: 1D Noise\n\n  // Iterate over horizontal pixels\n  for (let x4 = 0; x4 <= width; x4 += 3) {\n    // Calculate a y value according to noise, map to\n\n    // Option #1: 2D Noise\n    let y4 = map(noise(xoff4, yoff4), 0, 1, 100, 200);\n\n    // Option #2: 1D Noise\n    // let y = map(noise(xoff), 0, 1, 200,300);\n\n    // Set the vertex\n    vertex(y4, x4);\n    // Increment x dimension for noise\n    xoff4 += 0.05;\n  }\n  // increment y dimension for noise\n  yoff4 += 0.01;\n  //vertex(width, height);\n  //vertex(0, height);\n  endShape();\n  \n  \n  ///////////////////////////\n}"
  },
  {
    "_id": "eY7JGCWyxceHQHxdc",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:35:58.598Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hubldntnl7kiltwd1ven",
        "version": 1552063058,
        "signature": "9f51cb873c2ecbf4a980ac4efb1c199d47769c1d",
        "width": 1456,
        "height": 574,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:37:38Z",
        "tags": [],
        "bytes": 1237384,
        "type": "upload",
        "etag": "b79e2be02548b4f442b3919e2c745a4f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063058/avalanche2019/hubldntnl7kiltwd1ven.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063058/avalanche2019/hubldntnl7kiltwd1ven.png"
      },
      {
        "public_id": "avalanche2019/p990lprfd3kzu71cap9d",
        "version": 1552063074,
        "signature": "efda1db569ee9a86a12c107f92d362e6e431fa5e",
        "width": 2382,
        "height": 822,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:37:54Z",
        "tags": [],
        "bytes": 1505267,
        "type": "upload",
        "etag": "54b6fd494568fb13cee99251388f53e1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063074/avalanche2019/p990lprfd3kzu71cap9d.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063074/avalanche2019/p990lprfd3kzu71cap9d.png"
      },
      {
        "public_id": "avalanche2019/gqpmwxjjoducnjsrhpbf",
        "version": 1552063083,
        "signature": "2e97174102e786989cd39493599b4faea6308443",
        "width": 638,
        "height": 1050,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:38:03Z",
        "tags": [],
        "bytes": 669281,
        "type": "upload",
        "etag": "f37c56207f3af19114c5aaa44466f4a4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552063083/avalanche2019/gqpmwxjjoducnjsrhpbf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552063083/avalanche2019/gqpmwxjjoducnjsrhpbf.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "TEXT \nBuilding off of the class example to try and get different text-textures \nUsing noise could get a blurred almost 3D appearing text and a Furry-esque text",
    "inspiration_name": "Class Example",
    "code": "var textImage;\n\n//setting up texture variables \nlet inc = 0.05;\nlet scl = 2;\nlet cols, rows;\nlet b = 30;\nlet xOff, yOff, zOff;\n\n\nfunction preload() {\n    textImage = loadImage(\"FURTEXT2.png\");\n    noLoop();\n}\n\nfunction setup() {\n    createCanvas(1000, 800);\n    textImage.loadPixels();\n    colorMode(HSB, 360, 100, 100, 1);\n    //texture set up \n    cols = floor(width / scl);\n    rows = floor(height / scl);\n    yOff = 0;\n    xOff = 0;\n    zOff = 0;\n}\n\nfunction draw() {\n    //think about changing the backgorund later \n    background(0);\n\n    fill(255, 0, 0);\n    noStroke();\n    // set drawing styles\n    // background(30, 87, 0, .2);\n\n\n    //setting up variables for texture \n\n    for (x = 0; x < 800; x++) {\n        for (y = 0; y < 800; y++) {\n\n            var pixelValue = getQuick(textImage, x, y)[0];\n            // pick a random value and compare it pixelRed\n            // for example:\n            // if pixelRed is 0, we'll never draw\n            // if pixelRed is 255, we'll always draw\n            // if pixelRed is 127, we'll draw 50% of the time\n            if (pixelValue == 0) {\n                fill(0);\n                // rect(x, y, 1, 1);\n                line(0, 0, scl, scl + 30);\n                drawFur(x, y);\n            }\n            // if (pixelValue == 255) {\n            //     textImage.set(x, y, 0);\n            // }\n        }\n    }\n}\n\n//get quick function by Justin Bakse\nfunction getQuick(img, x, y) {\n    var i = (y * img.width + x) * 4;\n    return [\n        textImage.pixels[i],\n        textImage.pixels[i + 1],\n        textImage.pixels[i + 2],\n        textImage.pixels[i + 3],\n    ];\n}\n\nfunction drawFur(x, y) {\n\n    push();\n    colorMode(HSB, 360, 100, 100, 1);\n    // background(30, 87, 0, .2);\n    console.log(\"draw on pixel\")\n    // ellipse(x, y, 1);\n\n    strokeWeight(1);\n    noFill();\n\n\n    // for (let y = 0; y < rows; y++) {\n\n    //     for (let x = 0; x < cols; x++) {\n    let index = (x + y * width) * 4;\n    let angle = noise(xOff, yOff) * TWO_PI;\n    let v = p5.Vector.fromAngle(angle);\n    xOff += inc;\n\n    push();\n    b = noise(xOff, yOff, zOff * millis()) * 100;\n    h = random(20, 40)\n    stroke(h, 90, b, .1);\n\n    translate(x * scl, y * scl);\n    rotate(v.heading());\n    line(0, 0, scl, scl + 30);\n    line(0, 0, scl, scl + 30);\n    pop();\n    // rect(x * scl, y * scl, scl, scl);\n    //     }\n    //     yOff += inc;\n    // }\n    zOff += inc;\n\n\n\n\n\n    pop();\n}"
  },
  {
    "_id": "eYhfvJz6Rkwtjqqj7",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T15:14:53.075Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z8nlqf0i0rhdzzgak6qt",
        "version": 1550848501,
        "signature": "8d9e0a74a05faf53174b85c533dfc3af27610ab4",
        "width": 1902,
        "height": 1056,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T15:15:01Z",
        "tags": [],
        "bytes": 495777,
        "type": "upload",
        "etag": "e547b875c3ba4fcb9fe0827fee4e24fd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550848501/avalanche2019/z8nlqf0i0rhdzzgak6qt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550848501/avalanche2019/z8nlqf0i0rhdzzgak6qt.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around deforming shape vs texture with noise script in Maya"
  },
  {
    "_id": "eaWcWnHrxnwpjEkRq",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T14:48:14.423Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/efqp3o85z2bqztogz1nh",
        "version": 1556894900,
        "signature": "bd188c25524c03bc2a2e95ec08b2050a46bb987e",
        "width": 544,
        "height": 960,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-03T14:48:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 2018194,
        "type": "upload",
        "etag": "f9804291ef85017f0ba58f84e57451b7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556894900/avalanche2019/efqp3o85z2bqztogz1nh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556894900/avalanche2019/efqp3o85z2bqztogz1nh.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "47427",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1228199"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1281393,
        "duration": 12.6,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:44:34.926Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T19:00:49.447Z" }
      }
    ],
    "title": "",
    "description": "Breathing 3D origami I (with motors inside)"
  },
  {
    "_id": "eayYEcNhcAEBAeFtK",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T04:03:08.654Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/glj7qvjyneev7rpxee04",
        "version": 1552536348,
        "signature": "48c54111a3120ad93db812ac7fdbdd7ae2cceae0",
        "width": 649,
        "height": 647,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-14T04:05:48Z",
        "tags": [],
        "bytes": 142164,
        "type": "upload",
        "etag": "6d00f43fee9a38db9aad980e3ef72eb9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552536348/avalanche2019/glj7qvjyneev7rpxee04.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552536348/avalanche2019/glj7qvjyneev7rpxee04.jpg"
      },
      {
        "public_id": "avalanche2019/ke9c6hnzyg6yo2xivgqx",
        "version": 1552536352,
        "signature": "e0a5bcfcbbc016eee98f3f73336a726499497279",
        "width": 646,
        "height": 644,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-14T04:05:52Z",
        "tags": [],
        "bytes": 109184,
        "type": "upload",
        "etag": "3520011751662365a22e84722ecaa3b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552536352/avalanche2019/ke9c6hnzyg6yo2xivgqx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552536352/avalanche2019/ke9c6hnzyg6yo2xivgqx.jpg"
      },
      {
        "public_id": "avalanche2019/a9iqbwlkqbyudsa5jlwi",
        "version": 1552536358,
        "signature": "498e22e89addef935f8f096e1ec1b95b81de5131",
        "width": 601,
        "height": 463,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-14T04:05:58Z",
        "tags": [],
        "bytes": 20565,
        "type": "upload",
        "etag": "bcd8d731c3e7e848c1f1af902420b906",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552536358/avalanche2019/a9iqbwlkqbyudsa5jlwi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552536358/avalanche2019/a9iqbwlkqbyudsa5jlwi.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created image tiles for animals using Turtle Graphics and p5.js.\nI have used the pixel array method to input black and white images. Then, I have used color detection and overlaid Turtle graphic on the respective pixel positions.\n\nI was trying to recreate the animal image entirely, but it was tiling it for some reason.",
    "inspiration_name": "Animal Image Turtle Tiles",
    "code": "// Drawing animal face using Turtle Graphics\n\n// For notes, check logic.md\n// GitHub: https://github.com/akshansh2593/CompForm/blob/master/animalImageTurtleTiles/logic.md\n\nvar referenceImage;\nvar myTurtle;\n\nfunction preload() {\n    referenceImage = loadImage(\"Reference.jpg\"); // panda\n    // referenceImage = loadImage(\"Reference2.jpg\"); // illustrator\n    // referenceImage = loadImage(\"Reference3.png\"); // bear\n    // referenceImage = loadImage(\"Reference4.jpg\"); // tiger\n    // referenceImage = loadImage(\"Reference5.jpg\"); // bee\n}\n\n\nfunction setup() {\n    createCanvas(500, 500);\n    myTurtle = new Turtle();\n\n    background(255); // white\n    stroke(0);\n    strokeWeight(1);\n\n    image(referenceImage, 0, 0); // take pixel values from the loaded image\n    pixelDensity(1);\n    referenceImage.loadPixels(); // load pixels from the reference image\n    loadPixels(); // loads the pixels from the image\n\n    for (var y = 0; y < height; y++) {\n        for (x = 0; x < width; x++) {\n\n            var index = (x + y * width) * 4; // pixel coordinate\n            // loading color values from the reference image\n            var r = referenceImage.pixels[index + 0]; // color value\n            var g = referenceImage.pixels[index + 1];\n            var b = referenceImage.pixels[index + 2];\n            var a = referenceImage.pixels[index + 3];\n\n            // putting the color values to the pixel array\n            pixels[index + 0] = r;\n            pixels[index + 1] = g;\n            pixels[index + 2] = b;\n            pixels[index + 3] = a;\n\n            if (r === 0) {\n                // console.log(\"found a black color\");\n                drawTurtleGraphic(x, y, index);\n            }\n        }\n    }\n    updatePixels();\n}\n\n\nfunction draw() {}\n\n\n// Move the turtle when the color is black. And, draw at the black pixel spot.\nfunction drawTurtleGraphic(x, y, index) {\n    console.log(\"Graphic is being drawn.\");\n    myTurtle.penUp();\n    myTurtle.moveTo(x, y);\n    myTurtle.penDown();\n    myTurtle.turnRight(-45);\n    myTurtle.moveForward(10);\n    myTurtle.penUp();\n}\n\n\n\n// TRYING THE GET AND SET FUNCTION\n\n// // get coordinates of every pixel and put that in input color\n// var input_color = referenceImage.get(x, y);\n// // get rgb values of every pixel and put in a separate variable\n// var r = red(input_color);\n// var g = green(input_color);\n// var b = blue(input_color);\n\n// var output_color;\n\n// // Draw the turtle when the pixel color is black\n// if (r === 0 && g === 0 && b === 0) {\n\n//     // Draw Turtle\n//     moveTurtle(x, y);\n\n//     // DEBUG\n\n//     console.log(\"Time to draw the Turtle.\");\n//     console.log(\"input_color x & y: \" + input_color);\n//     // check if the r, g, b coordinates are the same. Then, I can use a single variable to compare the location of color with that of drawing the animal\n//     console.log(\"red x & y: \" + r);\n//     // console.log(\"green x & y: \" + g);\n//     // console.log(\"blue x & y: \" + b);\n\n// } else {\n//     console.log(\"Turtle won't draw.\");\n//     console.log(\"prohibited red x & y: \" + r);\n// }\n\n// referenceImage.set();\n// referenceImage.updatePixels();\n// }\n\n// }\n// noSmooth();\n// image(referenceImage, 0, 0);"
  },
  {
    "_id": "ec5sL2wEdTE2yQHAE",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T19:35:01.022Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dcybqubj7d78rdj36poq",
        "version": 1556912204,
        "signature": "c117ab8e695b345ede3fb021b27e2578a73197a3",
        "width": 1100,
        "height": 1010,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:36:44Z",
        "tags": [],
        "bytes": 230819,
        "type": "upload",
        "etag": "ed41919d756ede689df790fd589e84ac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556912204/avalanche2019/dcybqubj7d78rdj36poq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556912204/avalanche2019/dcybqubj7d78rdj36poq.png"
      },
      {
        "public_id": "avalanche2019/ebapgeyeijqdf33fhfog",
        "version": 1556912471,
        "signature": "de57cd543519260ed48f81e090c7e7995dc19dee",
        "width": 367,
        "height": 345,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-03T19:41:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 1024543,
        "type": "upload",
        "etag": "9f5edf3ca7c9ca6381e8789ee0ddb830",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556912471/avalanche2019/ebapgeyeijqdf33fhfog.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556912471/avalanche2019/ebapgeyeijqdf33fhfog.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "192267",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "1037809",
          "dar": "367:345"
        },
        "is_audio": false,
        "frame_rate": 6000,
        "bit_rate": 1217158,
        "duration": 6.733991,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Model recreate to T-pose & animation drawing sword"
  },
  {
    "_id": "ecGA63kkmurWJBA8j",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T02:14:14.669Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fwf9lwjowxdc3xjyxlgk",
        "version": 1551838471,
        "signature": "e7839b63fff7bea28a270fc2b772bc6507b384e3",
        "width": 650,
        "height": 488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T02:14:31Z",
        "tags": [],
        "bytes": 66527,
        "type": "upload",
        "etag": "cc762539fe29162fe065ffb07fb42d38",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551838471/avalanche2019/fwf9lwjowxdc3xjyxlgk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551838471/avalanche2019/fwf9lwjowxdc3xjyxlgk.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Image and processing pixels.  I'm going to see what happens with HSB...",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar worldImage;\n\nfunction preload() {\n    csImage = loadImage(\"Crenshaw.png\");\n}\n\nfunction setup() {\n    createCanvas(326, 245);\n  //colorMode(HSB);\n}\n\nfunction draw() {\n    background(50);\n\n\n  \t// noprotect\n  \tfor (var y = 0; y < csImage.height; y++) {\n        for (var x = 0; x < csImage.width; x++) {\n            var in_color = csImage.get(x, y);\n\n            var r = red(in_color);\n            var g = green(in_color);\n            var b = blue(in_color);\n\n            var out_color;\n            if (b === 255) {\n                out_color = color(16, 100, 0,);\n            } else {\n                out_color = color(128, 0, 255);\n            }\n\n            csImage.set(x, y, out_color);\n            csImage.updatePixels();\n        }    \n    }\n\n    noSmooth();\n    image(csImage, 0, 0, width, height);\n\n    noLoop();\n}"
  },
  {
    "_id": "ecQu7xHhuf3vLRiWW",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T05:19:51.688Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r9df7bhfuzoapvhkbqdz",
        "version": 1554787199,
        "signature": "43153f48ab1160890841f0d4680737847d141446",
        "width": 1268,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T05:19:59Z",
        "tags": [],
        "bytes": 373395,
        "type": "upload",
        "etag": "058d98e3de39eda588f04a5e7f742a36",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554787199/avalanche2019/r9df7bhfuzoapvhkbqdz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554787199/avalanche2019/r9df7bhfuzoapvhkbqdz.png"
      },
      {
        "public_id": "avalanche2019/jkn4wm8lho3jamp3nvzk",
        "version": 1554787202,
        "signature": "753effdcba0e0f26219442c07ab86cc0a2428692",
        "width": 1282,
        "height": 700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T05:20:02Z",
        "tags": [],
        "bytes": 250257,
        "type": "upload",
        "etag": "13826bdd7c20d38f29895a8f49d92c9d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554787202/avalanche2019/jkn4wm8lho3jamp3nvzk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554787202/avalanche2019/jkn4wm8lho3jamp3nvzk.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "It was a dark and story night challenge. It's pretty bad.",
    "code": "// require /text/tracery.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n\nlet story = {\n  start: \"#[character:#hero#]story#\",\n  dark: [\n    \"dark\",\n    \"super dark\",\n    \"sooo dark\",\n    \"like really dark my dude\",\n    \"dark dark dark\",\n    \"kinda bright but mainly dark\",\n    \"dim\"\n  ],\n  verb: [\n    \"pushed\",\n    \"popped\",\n    \"swam\",\n    \"splashed\",\n    \"hobbled\",\n    \"revolutionized\",\n    \"stroked\",\n    \"licked\",\n    \"tickled\"\n  ],\n  adj: [\n    \"amiable\",\n    \"polite\",\n    \"diplomatic\",\n    \"inconsequential\",\n    \"straight-forward\",\n    \"unspecial\",\n    \"banal\",\n    \"helpful\",\n    \"efficient\",\n    \"practical\",\n    \"proactive\",\n    \"just great\"\n  ],\n  hero: [\n    \"BossMan\",\n    \"Ja-Rule\",\n    \"Slim Shady\",\n    \"Riff Raff\",\n    \"Bubbles\",\n    \"Frog from Frod and Toad\",\n    \"Garth from Wayne's World\",\n    \"Eeyore you know from Winnie-the-Pooh\",\n    \"Grand Moff Pascal Tarkin Governor of the Imperial Outland Regions and commander of the Death Star\",\n    \"Oswald Chesterfield Cobblepot aka the Penguin the villain from Batman Returns\",\n    \"Memphis Raines who Nicolas Cage plays in the critically acclaimed film Gone in 60 Seconds\",\n    \"Castor Troy who Nicolas Cage plays in the critically acclaimed film Face/Off\",\n    \"Benjamin Franklin Gates who Nicolas Cage plays in the critically acclaimed film National Treasure\"\n  ],\n  animal: [\n    \"toad\",\n    \"bum\",\n    \"poopy man\",\n    \"turducken\",\n    \"tasselled wobbegong\",\n    \"lumpsucker\",\n    \"goblin shark\",\n    \"screaming hairy armadillo\",\n    \"monkeyface prickleback\",\n    \"harbour porpoise\",\n    \"inverse panda\",\n    \"sharknado\",\n    \"house elf\",\n    \"ewok\",\n    \"hippogriff\",\n    \"laser-toothed wombat\",\n    \"horse with long toes\",\n    \"shaved centaur\"\n  ],\n  precipitation: [\n    \"rain\",\n    \"hail\",\n    \"dolla dolla bills yall\",\n    \"big big snow flakes\"\n  ],\n  milk: [\n    \"milk\",\n    \"cookies\",\n    \"gatorade\",\n    \"four-loko\",\n    \"pediasure\",\n    \"baby formula\",\n    \"skittle juice\"\n  ],\n  spilt: [\"spilt\", \"spoiled\", \"rotten\", \"thrown\", \"organic\"],\n  story: [\n    \"It was a #dark# and stormy night. #character# was in a #adj# type of mood. You know, not too #adj#, but kinda #adj#. Suddenly, #character# saw a wild #animal#, which was unhappy with its own form so it turned into a #adj# #animal#. #precipitation.capitalize# was falling from the sky, for it was a #adj# storm for sure.'What mythical beast lies thither?' yelled #character#. To which the beast, which had yet again become unhappy with its current form and morphed into a new #animal# replied, 'It is I, #hero#, you fool! Do you not remember me?' Frankly, #character# did not. 'Let us be #adj# about this,' proclaimed #character#. 'There is no need to cry over #spilt# #milk#. Shall we put this behind us, or have we #verb# too far? What say you?' At this point, the beast was once agian unsatisfied with it's current form and morphed into a #adj# #animal#. 'You are right, #character#. Nobody wants to spend tonight alone as the #precipitation# falls from the sky. Let me come inside and tell you the story of #hero# who I met the other day while I was hanging with the ever-#adj# #hero#.\"\n  ]\n};\n\nlet grammar;\n\nfunction setup() {\n  noCanvas();\n  grammar = tracery.createGrammar(story);\n\n  let result = grammar.flatten(\"#start#\");\n  console.log(result);\n\n  document.body.innerHTML = result;\n  document.body.style.font = \"20px courier\";\n  document.body.style.textAlign = \"justified\";\n  document.body.style.margin = \"30px\";\n  document.body.style.color = \"purple\";\n //document.body.style.border = \"dashed green 10px\";\n}"
  },
  {
    "_id": "ecXaNJNLbkKovSDoB",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "created_at": { "$date": "2019-02-25T02:22:06.203Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/plsbl2orini2gxqpnr8h",
        "version": 1551061340,
        "signature": "e71132015260b78d6dc07fb1cd18acf68ba5ed92",
        "width": 868,
        "height": 874,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-25T02:22:20Z",
        "tags": [],
        "bytes": 57420,
        "type": "upload",
        "etag": "74e5397716e29d0c9544551c632c59ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551061340/avalanche2019/plsbl2orini2gxqpnr8h.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551061340/avalanche2019/plsbl2orini2gxqpnr8h.png"
      },
      {
        "public_id": "avalanche2019/pemu3spby3yhuu8wnapn",
        "version": 1551061343,
        "signature": "fb433b0ba6ced822ed0005b931cb2630a945580f",
        "width": 864,
        "height": 862,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-25T02:22:23Z",
        "tags": [],
        "bytes": 58488,
        "type": "upload",
        "etag": "9490a1d0f74c99380fc9fab31d5824f7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551061343/avalanche2019/pemu3spby3yhuu8wnapn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551061343/avalanche2019/pemu3spby3yhuu8wnapn.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Dot Challenge recreation attempt. Random dot placement with middle bias, random diameter, and noise for hue variance.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\n// Dot Challenge\nlet canvas = { width: 400, height: 400 };\n\nfunction setup() {\n  createCanvas(canvas.width, canvas.height);\n  colorMode(HSB, 100);\n}\n\nfunction draw() {\n  background(20);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  var noiseFrequency = 0.02;\n\n  for (var i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    var x =\n      (random(canvas.width) + random(canvas.width) + random(canvas.width)) / 3;\n    var y =\n      (random(canvas.height) + random(canvas.height) + random(canvas.height)) /\n      3;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    var diameter = random(3, 16);\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    fill(noise(x * noiseFrequency, y * noiseFrequency) * 125, 100, 100);\n\n    ellipse(x, y, diameter);\n  }\n\n  noLoop();\n}"
  },
  {
    "_id": "efFbJj2mPwxp583Ev",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T20:08:54.466Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hnyxkj3pe37caevqikzf",
        "version": 1549051757,
        "signature": "0aef28f5ec0f75455aa98339556ca258cb96a8a0",
        "width": 1078,
        "height": 938,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T20:09:17Z",
        "tags": [],
        "bytes": 318853,
        "type": "upload",
        "etag": "aa28112da33094f6d181808f6d111384",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549051757/avalanche2019/hnyxkj3pe37caevqikzf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549051757/avalanche2019/hnyxkj3pe37caevqikzf.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T20:59:43.262Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:37:46.995Z" }
      }
    ],
    "title": "",
    "description": "Throne Tile",
    "inspiration_name": "pentagon tessellation"
  },
  {
    "_id": "efNnLn6ahTxQh5Acp",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T20:10:30.814Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/swtm8rejqopfhjajvwfe",
        "version": 1549051841,
        "signature": "0f602cd7e8d66dcb4ca4bb47f77b86f2e90638ac",
        "width": 1103,
        "height": 1151,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T20:10:41Z",
        "tags": [],
        "bytes": 266122,
        "type": "upload",
        "etag": "55d50587144ce2d22aad46b1dfea70d2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549051841/avalanche2019/swtm8rejqopfhjajvwfe.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549051841/avalanche2019/swtm8rejqopfhjajvwfe.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:59.815Z" }
      }
    ],
    "title": "",
    "description": "Violet Tile",
    "inspiration_name": "Hexagon Tessellation"
  },
  {
    "_id": "ehnK98QQXw7gzEu2m",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T07:31:28.019Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "First draft of melody using class example. Melody written by me when I was little.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// code from class example \n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 250;\n\nconst melody = [\n  ['C4', '5n.'],\n  ['D4', '5n.'],\n  ['E4', '3n.'],\n  \n  ['rest', '0.2s'],\n  ['F4', '3n'],\n  ['E4', '5n'],\n  ['D4', '7n'],\n  ['C4', '7n.'],\n  ['D4', '5n.'],\n  ['E4', '3n.'],\n  \n  ['rest', '0.2s'],\n  ['F4', '5n'],\n  ['G4', '5n'],\n  ['A4', '3n'],\n  \n  ['rest', '0.2s'],\n  \n  ['C5', '3n'],\n  ['B4', '3n'],\n  ['C5', '5n'],\n  ['B4', '7n'],\n  ['A4', '7n'],\n  ['B4', '5n'],  \n  ['G4', '3n'],\n  \n  ['rest', '0.2s'],\n  ['C4', '5n.'],\n  ['D4', '5n.'],\n  ['E4', '3n.'],\n  \n  ['rest', '0.2s'],\n  ['F4', '3n'],\n  ['E4', '5n'],\n  ['D4', '5n'],\n  ['C4', '5n.'],\n  ['D4', '5n.'],\n  ['G4', '3n.'],\n  ['F4', '3n.'],\n  ['E4', '3n.'],\n  \n  ['rest', '0.2s'],\n  ['F4', '5n'],\n  ['G4', '5n'],\n  ['A4', '3n'],\n  \n  ['rest', '0.2s'],\n  ['C5', '3n'],\n  ['B4', '5n'],\n  ['C5', '7n'],\n  ['B4', '7n'],\n  ['A4', '7n'],\n  ['B4', '5n'],  \n  ['G4', '3n'],\n  \n  ['rest', '0.2s'],\n  ['C5', '3n'],\n  ['B4', '5n'],\n  ['A4', '7n'],\n  \n  ['rest', '0.2s'],\n  ['C5', '3n'],\n  ['B4', '5n'],\n  ['C5', '7n'],\n  ['B4', '7n'],\n  ['A4', '7n'],\n  ['B4', '5n'],  \n  ['G4', '3n'],\n  \n ['rest', '0.2s'],\n  ['C5', '3n'],\n  ['B4', '5n'],\n  ['A4', '7n'],\n  \n  ['rest', '0.2s'],\n  ['C5', '3n'],\n  ['B4', '5n'],\n  ['C5', '7n'],\n  ['B4', '7n'],\n  ['A4', '7n'],\n  ['G4', '5n'],  \n  ['D5', '3n'],\n  \n  ['rest', '0.2s'],\n  ['C4', '5n.'],\n  ['D4', '5n.'],\n  ['E4', '3n.'],\n  \n  ['rest', '0.2s'],\n  ['F4', '3n'],\n  ['E4', '5n'],\n  ['D4', '5n'],\n  ['C4', '5n.'],\n  ['D4', '5n.'],\n  ['G4', '3n.'],\n  ['F4', '3n.'],\n  ['E4', '3n.'],\n  \n   ['rest', '0.2s'],\n  ['F4', '5n'],\n  ['G4', '5n'],\n  ['A4', '3n'],\n  \n  ['rest', '0.2s'],\n  ['C5', '3n'],\n  ['B4', '5n'],\n  ['A4', '5n'],\n  ['G4', '5n'],\n  ['F4', '5n'],\n  ['E4', '3n'],\n  \n  ['rest', '0.1s'],\n  ['D4', '3n'],\n  \n  ['rest', '0.1s'],\n  ['C4', '3n'],\n  \n  ['rest', '0.5s'],\n \n];\n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "ehrtxjGy9cTP3tMri",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T17:36:58.714Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yohf4f08qip4qlegi7k7",
        "version": 1555090779,
        "signature": "aee684db7d382ae2f618a5ccfc6531e738a7daa8",
        "width": 1092,
        "height": 1036,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T17:39:39Z",
        "tags": [],
        "bytes": 120434,
        "type": "upload",
        "etag": "6b6387c2d16c4b1b326ce76206d3ca8b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555090779/avalanche2019/yohf4f08qip4qlegi7k7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555090779/avalanche2019/yohf4f08qip4qlegi7k7.png"
      },
      {
        "public_id": "avalanche2019/hlluqtr1wnnsty2mtx3t",
        "version": 1555090782,
        "signature": "7dc20eeac14d867b2261eafa10f912bfc4cff7a4",
        "width": 1094,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T17:39:42Z",
        "tags": [],
        "bytes": 123042,
        "type": "upload",
        "etag": "5523127a0791dfc694968d13abdb8397",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555090782/avalanche2019/hlluqtr1wnnsty2mtx3t.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555090782/avalanche2019/hlluqtr1wnnsty2mtx3t.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T17:40:53.163Z" }
      }
    ],
    "title": "",
    "description": "Building on the template example I added a generated content paragraph and formatting",
    "inspiration_name": "Template Example",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?/text/sketches/title/title.js",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\ndocument.getElementById(\"content\").textContent = generateContent();\n\nfunction generateTitle() {\n  var name_prefixes = [\n    \"King\",\n    \"Queen\",\n    \"Professor\",\n    \"Madam\",\n    \"Mister\",\n    \"Sir\",\n    \"Lady\",\n    \"Doctor\"\n  ];\n  var primary_nouns = [\n    \"Oak\",\n    \"Cotton\",\n    \"Stone\",\n    \"Moon\",\n    \"Sun\",\n    \"Star\",\n    \"Knife\",\n    \"Clock\",\n    \"Midnight\",\n    \"Forgetful\",\n    \"Careful\",\n    \"Chestnut\",\n    \"Crab\",\n    \"Sky\",\n    \"Fox\",\n    \"Hound\",\n    \"Tree\"\n  ];\n  var adjectives = [\n    \"Lost\",\n    \"Three\",\n    \"Two\",\n    \"Forgotten\",\n    \"Fallen\",\n    \"Pack of\",\n    \"Valiant\",\n    \"Golden\",\n    \"Many\",\n    \"Merry\",\n    \"Clever\",\n    \"Wonderful\",\n    \"Sullen\",\n    \"Angry\",\n    \"Little\",\n    \"Cowardly\",\n    \"Silver\",\n    \"Last\",\n    \"Jolly\",\n    \"Festive\",\n    \"Gleeful\",\n    \"Enchanted\",\n    \"Wise\",\n    \"Wistful\",\n    \"Dark\",\n    \"Untold\"\n  ];\n  var secondary_nouns = [\n    \"Riddles\",\n    \"Parables\",\n    \"Fables\",\n    \"Predicaments\",\n    \"Trials\",\n    \"Words\",\n    \"Promises\",\n    \"Lies\",\n    \"Pests\",\n    \"Beasts\",\n    \"Trolls\",\n    \"Shades\",\n    \"Shadows\",\n    \"Woods\",\n    \"Lands\",\n    \"Forests\",\n    \"Brothers\",\n    \"Sisters\",\n    \"Children\",\n    \"Days\",\n    \"Nights\",\n    \"Years\",\n    \"Hours\"\n  ];\n\n  var name_prefix = sample(name_prefixes);\n  var primary_noun = sample(primary_nouns);\n  var adjective = sample(adjectives);\n  var secondary_noun = sample(secondary_nouns);\n\n  var title = \"\";\n  if (Math.random() < 0.5) {\n    title = `${name_prefix} ${primary_noun} and the ${adjective} ${secondary_noun}`;\n  } else {\n    title = `The ${adjective} ${secondary_noun} of ${name_prefix} ${primary_noun}`;\n  }\n\n  return title;\n}\n\nfunction generateSubtitle() {\n  var story_adjectives = [\n    \"Lost\",\n    \"Forgotten\",\n    \"Merry\",\n    \"Clever\",\n    \"Wonderful\",\n    \"Sullen\",\n    \"Little\",\n    \"Cowardly\",\n    \"Jolly\",\n    \"Festive\",\n    \"Gleeful\",\n    \"Enchanted\",\n    \"Wise\",\n    \"Wistful\",\n    \"Dark\",\n    \"Untold\",\n    \"Secret\"\n  ];\n  var story_formats = [\n    \"Tale\",\n    \"Novel\",\n    \"Book in Three Parts\",\n    \"Song\",\n    \"Short Story\",\n    \"Legend\",\n    \"Mystery\",\n    \"Comedy\",\n    \"Musical\",\n    \"Production\",\n    \"Lesson\"\n  ];\n\n  var adjective = sample(story_adjectives);\n  var format = sample(story_formats);\n  var subtitle = `A  ${adjective}  ${format}`;\n\n  return subtitle;\n}\n\nfunction generateContent() {\n  var story_adjectives = [\n    \"Lost\",\n    \"Forgotten\",\n    \"Merry\",\n    \"Clever\",\n    \"Wonderful\",\n    \"Sullen\",\n    \"Little\",\n    \"Cowardly\",\n    \"Jolly\",\n    \"Festive\",\n    \"Gleeful\",\n    \"Enchanted\",\n    \"Wise\",\n    \"Wistful\",\n    \"Dark\",\n    \"Untold\",\n    \"Secret\"\n  ];\n  var story_formats = [\n    \"Tale\",\n    \"Novel\",\n    \"Book in Three Parts\",\n    \"Song\",\n    \"Short Story\",\n    \"Legend\",\n    \"Mystery\",\n    \"Comedy\",\n    \"Musical\",\n    \"Production\",\n    \"Lesson\"\n  ];\n  var primary_nouns = [\n    \"Oak\",\n    \"Cotton\",\n    \"Stone\",\n    \"Moon\",\n    \"Sun\",\n    \"Star\",\n    \"Knife\",\n    \"Clock\",\n    \"Midnight\",\n    \"Forgetful\",\n    \"Careful\",\n    \"Chestnut\",\n    \"Crab\",\n    \"Sky\",\n    \"Fox\",\n    \"Hound\",\n    \"Tree\"\n  ];\n\n  var ing = [\n    \"jazzing\",\n    \"fuzzing\",\n    \"warping\",\n    \"jamming\",\n    \"faxing\",\n    \"returning\",\n    \"undoing\",\n    \"contemplating\",\n    \"eloping\",\n    \"hyping\",\n    \"promoting\"\n  ];\n\n  var verb = [\n    \"boogie\",\n    \"trip\",\n    \"explode\",\n    \"splatter\",\n    \"turn up\",\n    \"balance\",\n    \"cajole\",\n    \"imprison\",\n    \"schedule\",\n    \"berate\"\n  ];\n\n  var noun_sample = [\n    \"blood rage\",\n    \"fool\",\n    \"factory reset\",\n    \"corn cake\",\n    \"coffee pot\",\n    \"brethren\",\n    \"national security\",\n    \"sound barrier\",\n    \"Ford Model T\",\n    \"mad cow disease\",\n    \"newt\",\n    \"smooshed face french bulldog\"\n  ];\n\n  var adjective = sample(story_adjectives);\n  var format = sample(story_formats);\n  var names = sample(primary_nouns);\n  var verbing = sample(ing);\n  var verb = sample(verb);\n  var noun = sample(noun_sample);\n\n  var content = `Once up on a time a  ${adjective.toLowerCase()} ${names.toLowerCase()} decided to ${verb} a ${format.toLowerCase()} but ended up ${verbing} a ${noun} instead...so now this story is officially over. Goodbye.`;\n\n  return content;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n    @import url('https://fonts.googleapis.com/css?family=Playfair+Display:400,900');\n\t\tbody {\n      font-family: 'Playfair Display', serif;\n      background-color: #3d3d3d;\n      color: #fff;\n      text-align: left;\n\t\t}\n\t\t.wrap {\n      background-color: #3d3d3d;\n\t\t\tdisplay: table;\n\t\t\tpadding: 40px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: left;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n      font-weight: normal;\n      opacity: 0.75;\n    }\n    \n    #content {\n      font-size: 18px;\n      font-weight: normal;\n      margin-top: 40px;\n      opacity: 0.9;\n    }\n\n\t</style>\n\t<div class=\"wrap\">\n  <div id=\"subtitle\">Subtitle</div>\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"content\">Content</div>\n\t</div>\n`\n  );\n}"
  },
  {
    "_id": "eobwG3AvSvhsdyE8d",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-02-28T19:40:22.681Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/t0gc7sciwwoxjvfolxhb",
        "version": 1551383430,
        "signature": "9cef26f3951883c08fb0e0aa2319073aec942088",
        "width": 1052,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T19:50:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 7940897,
        "type": "upload",
        "etag": "2e6ab7ab8eb8843db441c5b8806494ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551383430/avalanche2019/t0gc7sciwwoxjvfolxhb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551383430/avalanche2019/t0gc7sciwwoxjvfolxhb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "3172203",
          "dar": "263:278"
        },
        "frame_rate": 60,
        "bit_rate": 3201732,
        "duration": 19.8415,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ucq5372jwyoyztlmpst0",
        "version": 1551383573,
        "signature": "a13003bf6a646e445c56bb0a38bab02ede9f229b",
        "width": 1036,
        "height": 1072,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T19:52:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 15839499,
        "type": "upload",
        "etag": "a6a0b09435cdb6cbf61aad4b0bd34d80",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551383573/avalanche2019/ucq5372jwyoyztlmpst0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551383573/avalanche2019/ucq5372jwyoyztlmpst0.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "3374042",
          "dar": "259:268"
        },
        "frame_rate": 60,
        "bit_rate": 3380595,
        "duration": 37.483333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "*Snake challenge*.\n\nThe movement seems right. First sketch is a later and better version of the second sketch (my first attempt). A lot happened in that one line change.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// There's slider response bug where change in slider values result\n// in change in speed of the dots. Will need to work this out.\n\n// Observations of prompt sketch\n// Dot movement\n// - For a given dot, x and y movement isn't necessarily the same\n//   (i.e. offsetX != offsetY)\n// - When freq is low and amp and speed are high, the whole line\n//   moves together\n\nlet amplitude_slider;\nlet frequency_slider;\nlet timespeed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nlet timeInput = 0;\n\nfunction setup() {\n    createCanvas(500, 300);\n    createP('Frequency');\n    frequency_slider = createSlider(0, 40, 8, .01);\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 100, 50, .01);\n    createP('Time Speed');\n    timespeed_slider = createSlider(0, .002, .001, .0001);\n}\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n    let frequency = frequency_slider.value();\n    let amplitude = amplitude_slider.value();\n    let timespeed = timespeed_slider.value();\n    noiseDetail(1, .5);\n\n    fill(255);\n    noStroke();\n\n    // for every increment of .02 between 0 and 1...\n    for (i = 0; i < 1; i += .02) {\n        let x = lerp(startX, endX, i); // move x a little closer to endX\n        let y = lerp(startY, endY, i); // move y a little closer to endY\n\n        // Close dots have a very similar timeInput;\n        // Far dots have different timeInput.\n        // How similar or different consecutive dots are\n        // depends on user input via timespeed_slider.\n        // let timeInput = (frameCount % 5000) / 100 * timespeed;\n\n        // Revision to line 54: frameCount not used at all.\n        timeInput += timespeed;\n        \n        let offsetX = noise(timeInput + (frequency * i), 0) * amplitude;\n        let offsetY = noise(timeInput + (frequency * i), 1) * amplitude;\n\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n}",
    "inspiration_name": "Coding challenge - snake",
    "inspiration_url": "http://compform.net/strategy/"
  },
  {
    "_id": "eq6A5DxRTYiReeW66",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-03-01T13:59:24.377Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nsjntjioz1rv4epfzezg",
        "version": 1551448775,
        "signature": "b14e25c94d14ed90b66c53297ac8f2ce49da6658",
        "width": 1004,
        "height": 776,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T13:59:35Z",
        "tags": [],
        "bytes": 122484,
        "type": "upload",
        "etag": "d58a6ae6dbe91e4f43d7be0f74d5c540",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551448775/avalanche2019/nsjntjioz1rv4epfzezg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551448775/avalanche2019/nsjntjioz1rv4epfzezg.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": ""
  },
  {
    "_id": "eszDkemr5SMa7RsJC",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-08T21:46:47.512Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/krn1sb9s9derjdaheptq",
        "version": 1557352179,
        "signature": "427a145c0ec97795483fbfe2f02cd5ae2be3cefc",
        "width": 664,
        "height": 672,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-08T21:49:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 409790,
        "type": "upload",
        "etag": "2f2cf122aa83eaa3e3f827b5158ffc52",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557352179/avalanche2019/krn1sb9s9derjdaheptq.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557352179/avalanche2019/krn1sb9s9derjdaheptq.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "793863",
          "dar": "83:84"
        },
        "frame_rate": 60,
        "bit_rate": 832025,
        "duration": 3.940167,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "creating animation for microgame",
    "inspiration_name": "dimsum"
  },
  {
    "_id": "evG258RiKKGAJyQnH",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T15:42:08.221Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s6nimxis5kt5jl6v6b56",
        "version": 1550245754,
        "signature": "58934c37ec4a264802897786d18da5ba528d40bf",
        "width": 1034,
        "height": 818,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:49:14Z",
        "tags": [],
        "bytes": 196923,
        "type": "upload",
        "etag": "d10a144e28f7011f851fda21db771bdf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550245754/avalanche2019/s6nimxis5kt5jl6v6b56.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550245754/avalanche2019/s6nimxis5kt5jl6v6b56.png"
      },
      {
        "public_id": "avalanche2019/izenmduq6athyv3p6vkc",
        "version": 1550245801,
        "signature": "a6a8987ce743117f9ee619dc853e8c07892d2942",
        "width": 1052,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:50:01Z",
        "tags": [],
        "bytes": 209596,
        "type": "upload",
        "etag": "3894f4a65dd730660f96b79cde1fe99b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550245801/avalanche2019/izenmduq6athyv3p6vkc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550245801/avalanche2019/izenmduq6athyv3p6vkc.png"
      },
      {
        "public_id": "avalanche2019/nyhednxkwfwkovujgktt",
        "version": 1550245808,
        "signature": "b9c69dbfec37c61ec6414eba2870dd75f8605d3c",
        "width": 1128,
        "height": 1556,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:50:08Z",
        "tags": [],
        "bytes": 457837,
        "type": "upload",
        "etag": "ffe301ab92e8d8e2ba8b45bd78921aa8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550245808/avalanche2019/nyhednxkwfwkovujgktt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550245808/avalanche2019/nyhednxkwfwkovujgktt.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Messing up the highlighting parameters and positions in my concrete poem generator to create different types of images / shadings of text",
    "inspiration_name": "Concrete Poetry"
  },
  {
    "_id": "evxiG6BmC9sR7hmTh",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Text",
    "created_at": { "$date": "2019-05-15T05:56:45.877Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kkt9hl0exakminrlrp71",
        "version": 1557899811,
        "signature": "c2dcce7173c81985054915b3239dad41c10235c1",
        "width": 888,
        "height": 632,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-15T05:56:51Z",
        "tags": [],
        "bytes": 78943,
        "type": "upload",
        "etag": "c7946575d4acfc6f0a79b7b533bad537",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557899811/avalanche2019/kkt9hl0exakminrlrp71.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557899811/avalanche2019/kkt9hl0exakminrlrp71.png"
      },
      {
        "public_id": "avalanche2019/vcicgm9vffii0vax0mwn",
        "version": 1557899813,
        "signature": "c6e5f08639190076887db16848622dafe24a3744",
        "width": 770,
        "height": 776,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-15T05:56:53Z",
        "tags": [],
        "bytes": 84491,
        "type": "upload",
        "etag": "56499c15110a80b52c9b4deb25452cc9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557899813/avalanche2019/vcicgm9vffii0vax0mwn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557899813/avalanche2019/vcicgm9vffii0vax0mwn.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Working on more shapes for the concrete poetry generator I previously made"
  },
  {
    "_id": "exi4eco6L7ZEDGnvk",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T17:09:30.3Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qydpwstluxeibpia219t",
        "version": 1556903378,
        "signature": "fb6f539be60ce5a30b23c9175ce0ab298c3f1ad0",
        "width": 286,
        "height": 456,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T17:09:38Z",
        "tags": [],
        "bytes": 31354,
        "type": "upload",
        "etag": "67784b6dfd945380a7e57ad7ff01661b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556903378/avalanche2019/qydpwstluxeibpia219t.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556903378/avalanche2019/qydpwstluxeibpia219t.png"
      },
      {
        "public_id": "avalanche2019/lbenra4bfbrz4z2gykcn",
        "version": 1556904325,
        "signature": "e702f1ba4cbede6e3c3ed8a4a49beace46099603",
        "width": 354,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T17:25:25Z",
        "tags": [],
        "bytes": 36258,
        "type": "upload",
        "etag": "4eb6116e53b73b0c56a7c98d9c1453f7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556904325/avalanche2019/lbenra4bfbrz4z2gykcn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556904325/avalanche2019/lbenra4bfbrz4z2gykcn.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "code": "color([200,0,0])\ncube(2.8,2.8,2.8);\n\ntranslate([3,1,0])\ncolor(\"black\")\nsphere(r=0.5,$fn=100);\n\ntranslate([1,3,0])\ncolor(\"black\")\nsphere(r=0.5,$fn=100);\n\ntranslate([0,0,11])\nsphere(r=5.5,$fn=100);\n\ntranslate([0,5,11])\nsphere(r=1.5,$fn=10);\n\ntranslate([5,0,11])\nsphere(r=1.5,$fn=10);\n\ntranslate([2,0,15])\ncylinder(r=0.5,h=3,$fn=100);\n\ntranslate([0,2,15])\ncylinder(r=0.5,h=3,$fn=100);\n\ntranslate([1.5,-1,17])\ncube(2,2,1);\n\ntranslate([-1,1.5,17])\ncube(2,2,1);\n\ntranslate([0,0,1])\ncylinder(r=1,h=7,$fn=100);\n\ntranslate([0,0,1])\nsphere(r=3.5,$fn=100);",
    "description": "Little duck"
  },
  {
    "_id": "f39H4f7st4TK7hyFg",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-10T21:14:45.544Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pghp6fzeeajyqlzlzjnc",
        "version": 1552252540,
        "signature": "c44116397cccefd1c9cb2dc711ccf04cea0c0337",
        "width": 988,
        "height": 988,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-10T21:15:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 11205510,
        "type": "upload",
        "etag": "ef63cb79bd356b9bf6faa018f34c9a9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552252540/avalanche2019/pghp6fzeeajyqlzlzjnc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552252540/avalanche2019/pghp6fzeeajyqlzlzjnc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "905959",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 914735,
        "duration": 98,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "**Stroboscopic effect warning**  \n_(there’s only one turtle spiral-thing in each frame)_  \nSketch for your next laser show ;)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  frameRate(120);\n}\n\nfunction draw() {\n  background(50);\n\n  noFill();\n  stroke(255, 255, 255, 180);\n  strokeWeight(2);\n\n  // move to starting position (without drawing)\n  myTurtle.penUp();\n  r = 50;\n  x = r * cos(frameCount) + 250;\n  y = r * sin(frameCount) + 250;\n  myTurtle.moveTo(x, y);\n\n  // put the pen down to draw\n  myTurtle.penDown();\n\n  // draw the triangle\n  iterations = floor((sin(frameCount * 0.0005) + 1) * 3 + 8);\n  size = (cos(frameCount * 0.005) + 1) * 30 + 1;\n\n  for (var i = 0; i < iterations; i++) {\n    myTurtle.moveForward(size);\n    myTurtle.turnLeft(frameCount * 0.01);\n  }\n\n  // noLoop();\n}"
  },
  {
    "_id": "f4sHDetgFeiu3NYgZ",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-02-26T22:30:42.312Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jd8yteenv78qembpfggw",
        "version": 1551220255,
        "signature": "66ca06010949ebfdd546683ad6bbcb64f65d7dc0",
        "width": 1258,
        "height": 728,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T22:30:55Z",
        "tags": [],
        "bytes": 117997,
        "type": "upload",
        "etag": "b8df673896af194ab885b2f1ab3624bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551220255/avalanche2019/jd8yteenv78qembpfggw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551220255/avalanche2019/jd8yteenv78qembpfggw.png"
      },
      {
        "public_id": "avalanche2019/fotm3ho1t8cgw2u9uteh",
        "version": 1551220260,
        "signature": "e2ebdd79de4878baff0624f35962edf242cb1918",
        "width": 1260,
        "height": 728,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T22:31:00Z",
        "tags": [],
        "bytes": 113123,
        "type": "upload",
        "etag": "faa181a7a305be989eef043296a79b92",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551220260/avalanche2019/fotm3ho1t8cgw2u9uteh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551220260/avalanche2019/fotm3ho1t8cgw2u9uteh.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Parameters",
    "title": "",
    "code": "var pos_x_slider;\nfunction setup() {\n\n  createCanvas(window.innerWidth, window.innerHeight * 0.5);\n  noStroke();\n\t\n\t  createP('Coffee');\n    pos_x_slider = createSlider(0, height, 0);\n\n}\n\nfunction draw() {\n    background(250);\n    var pos_x = pos_x_slider.value();\n    var pos_y = height * 0.5;\n  \n    noFill();\n  \n    strokeWeight(5);\n    drawBrownianPath1D(0, height-pos_x, 3, 5, 1000);\n  drawBrownianPath2D(0, pos_x, 3, 5, 1000);\n  \n}\nfunction drawBrownianPath1D(x, y, stepX, stepY, steps) {\n    for (var step = 0; step < steps; step++) {\n\n        var nextX, nextY;\n\n        nextX = x + stepX;\n        nextY = y + random(-0.5*stepY,0.5*stepY);\n\n        stroke(random(100),random(210),250);\n        line(x, y, nextX, nextY);\n        fill(170,210,250);\n        x = nextX;\n        y = nextY;\n\n    }\n}\nfunction drawBrownianPath2D(x, y, stepX, stepY, steps) {\n    for (var step = 0; step < steps; step++) {\n\n        var nextX, nextY;\n        nextX = x + stepX;\n        nextY = y + random(-0.5*stepY,0.5*stepY);\n        stroke(random(150),random(100),random(30));\n        line(x, y, nextX, nextY);\n        \n        x = nextX;\n        y = nextY;\n\n    }\n}",
    "description": "Coffee & Restroom iii"
  },
  {
    "_id": "f5K8L2BNmoehdtSk7",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-03-24T23:41:07.673Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/f8d1fdu8fs7jtwe5f0uo",
        "version": 1553470896,
        "signature": "c28568aec899be5813f60a6484987726c7b62007",
        "width": 994,
        "height": 940,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-24T23:41:36Z",
        "tags": [],
        "bytes": 311442,
        "type": "upload",
        "etag": "d1e66f391fd509106d81ab695cf4f561",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553470896/avalanche2019/f8d1fdu8fs7jtwe5f0uo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553470896/avalanche2019/f8d1fdu8fs7jtwe5f0uo.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Turtles",
    "title": ""
  },
  {
    "_id": "f8ScHjssKS88CwpXr",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T13:13:26.959Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nzeyttdrwsge80vs00wn",
        "version": 1555074822,
        "signature": "d8ef3b85f1e2746c9f58eb5a333e2b0a7a9763a8",
        "width": 1066,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T13:13:42Z",
        "tags": [],
        "bytes": 162201,
        "type": "upload",
        "etag": "ced7e47709bdea9ab8e5139eb07e4fcc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555074822/avalanche2019/nzeyttdrwsge80vs00wn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555074822/avalanche2019/nzeyttdrwsge80vs00wn.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "using sample from class",
    "inspiration_name": "mad story"
  },
  {
    "_id": "fArmRbdaK4wDbvhKo",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T01:46:16.432Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eq2gnpyluygrprnc7b3q",
        "version": 1554342478,
        "signature": "2f8368b4b8eb10d8f2e6a044ff40eb8044ed1fb8",
        "width": 956,
        "height": 776,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-04T01:47:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 1934600,
        "type": "upload",
        "etag": "eacd6f4f77d65d598181b7a276d1c7cc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554342478/avalanche2019/eq2gnpyluygrprnc7b3q.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554342478/avalanche2019/eq2gnpyluygrprnc7b3q.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "209273",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6322794",
          "dar": "239:194"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9123680,
        "duration": 1.696333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/pbh01arcxkbrktafioco",
        "version": 1554342546,
        "signature": "042139341b4459a7ae56e4ca12178a50cf818934",
        "width": 4029,
        "height": 1949,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-04T01:49:06Z",
        "tags": [],
        "bytes": 735751,
        "type": "upload",
        "etag": "b285754afa9e1062165e753411e3f671",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554342546/avalanche2019/pbh01arcxkbrktafioco.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554342546/avalanche2019/pbh01arcxkbrktafioco.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-04T03:17:55.074Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-06T02:37:57.189Z" }
      }
    ],
    "title": "",
    "description": "Progress towards bumper \n paper.js \n\nwas  hard to figure out the math, still need to make some changes and make it look better tomorrow",
    "code": "var c = document.getElementById(\"myCanvas\");\n\n//triangle 1 \nvar totalRadius = 90;\nvar triangle1 = {\n    center: new Point(400, 400),\n    radius: totalRadius,\n    height: totalRadius / 2,\n    // length of one side of triangle \n    // sideLength: (triangle1Radius / 2) * Math.sqrt(3),\n};\n\nvar triangle1Path = new Path.RegularPolygon(triangle1.center, 3, triangle1.radius);\n\nmoveTriangle(triangle1);\n\n\n//triangle 2\nvar triangle2 = {\n    center: new Point(triangle1.center.x, triangle1.center.y + triangle1.height / 2),\n    radius: triangle1.radius / 2,\n    height: triangle1.radius / 4,\n\n    sideLength: (triangle1.radius / 2) * Math.sqrt(3),\n};\n\nvar triangle2Path = new Path.RegularPolygon(triangle2.center, 3, triangle2.radius);\n\ntriangle2Path.rotate(180);\nmoveTriangle(triangle2);\n\n//creating all trinagles groups of 3 or more and motion \nvar thirdLevel = createChildren(triangle2);\n\nvar fourthLevel = createNextGen(thirdLevel);\nconsole.log(fourthLevel);\n\nvar fifthLevel = createNextGen(fourthLevel[0]);\nvar fifthLevel = createNextGen(fourthLevel[1]);\nvar fifthLevel = createNextGen(fourthLevel[2]);\n\nfunction createNextGen(parents) {\n    var allTriangles = [];\n    for (var i = 0; i < parents.length; i++) {\n        allTriangles[i] = createChildren(parents[i]);\n    }\n    return allTriangles;\n}\n\nfunction createChildren(parentT) {\n    var children = [];\n    children[0] = createChild(parentT, 'top');\n    children[1] = createChild(parentT, 'right');\n    children[2] = createChild(parentT, 'left');\n\n    return children;\n}\n\n\nfunction createChild(parentT, direction) {\n    var triangleInfo = [];\n    //create an array \n    //each array is position 0, triangle object \n    //position 1 desired triangle path \n    //position 2 starting trinagle path \n    if (direction == \"right\") {\n        var direction = new Point(parentT.center.x + parentT.sideLength / 2, parentT.center.y + parentT.height / 2);\n    } else if (direction == \"left\") {\n        var direction = new Point(parentT.center.x - parentT.sideLength / 2, parentT.center.y + parentT.height / 2);\n    } else if (direction == \"top\") {\n        var direction = new Point(parentT.center.x, parentT.center.y - (2.5 * parentT.height));\n    }\n    var triangle = {\n        radius: parentT.radius / 2,\n        center: direction,\n        height: parentT.radius / 4,\n        sideLength: parentT.radius / 2 * Math.sqrt(3),\n    };\n    triangleInfo[0] = triangle;\n    var trianglePath = new Path.RegularPolygon(triangle.center, 3, triangle.radius);\n    triangleInfo[1] = trianglePath;\n    // trianglePath.strokeColor = \"red\";\n    trianglePath.rotate(180);\n\n    //traveling sequence \n    //triangle 1 start\n    triangleInfo[2] = moveTriangle(triangle);\n\n    return triangle;\n\n}\n\n\n\nfunction moveTriangle(triangle) {\n\n    // var start = new Point(30, 50);\n    var start = new Point(100, 300) * Point.random();\n    var triangleMove = new Path.RegularPolygon(start, 3, triangle.radius);\n    if (triangle != triangle1) {\n        triangleMove.rotate(180);\n    }\n    // console.log(triangleMove);\n    triangleMove.strokeColor = 'purple';\n\n    var Xtravel = Math.abs(triangle.center.x - start.x);\n    var Ytravel = Math.abs(triangle.center.y - start.y);\n\n\n    var travelIncriment = 100;\n    var travelXPerFrame = Xtravel / travelIncriment;\n    // console.log(travelXPerFrame);\n    var travelYPerFrame = Ytravel / travelIncriment;\n    var travelPerFrame = new Point(travelXPerFrame, travelYPerFrame)\n\n    triangleMove.onFrame = function (event) {\n        if (event.count < travelIncriment) {\n\n            this.position += travelPerFrame;\n            // console.log(triangleMove.position);\n            triangleMove.strokeColor = 'blue';\n            this.rotate(360 / travelIncriment);\n        }\n    }\n    return triangleMove;\n\n}"
  },
  {
    "_id": "fDRqzAavPqn9sZzE5",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T23:35:15.257Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uf8xxlcuyd2adoln0jtz",
        "version": 1554852923,
        "signature": "a8ce596a97b17e7631c5bd788b715379be4a38c0",
        "width": 3676,
        "height": 4602,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-09T23:35:23Z",
        "tags": [],
        "bytes": 1709956,
        "type": "upload",
        "etag": "f3524109a408a5b2c4c12da53b947e8d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554852923/avalanche2019/uf8xxlcuyd2adoln0jtz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554852923/avalanche2019/uf8xxlcuyd2adoln0jtz.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-10T06:38:19.52Z" }
      }
    ],
    "title": "",
    "description": "A list of nonsense words, written in [IPA](https://en.wikipedia.org/wiki/International_Phonetic_Alphabet), following the rules of English [phonology](https://en.wikipedia.org/wiki/English_phonology).",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Depends on local data sheets to run\n\nvowel_datasheet = './data/vowels.txt';\nconsonant_datasheet = './data/consonants.txt';\n\nfunction readDatasheet(file) {\n    const raw_file = new XMLHttpRequest();\n    let file_contents = '';\n    raw_file.open(\"GET\", file, false);\n    raw_file.onreadystatechange = function () {\n        if(raw_file.readyState === 4) {\n            if(raw_file.status === 200 || raw_file.status == 0) {\n                file_contents = raw_file.responseText;\n            }\n        }\n    }\n    raw_file.send(null);\n    return file_contents;\n}\n\nfunction parseDatasheet(type) {\n    const data = [];\n    const datasheet = `./data/${type}.txt`;\n    const lines = readDatasheet(datasheet).split('\\n');\n\n    // Create phoneme objects\n    for (let i = 0; i < lines.length; i++) {\n        line = lines[i].split(',');\n        if (type === 'vowels') {\n            data[i] = {\n                symbol: `${line[0]}`,\n                is_monophthong: line[1],\n                is_schwa: line[2]\n            }\n        } else (\n            data[i] = {\n                symbol: `${line[0]}`,\n                manner: line[1],\n                place: line[2],\n                is_voiced: line[3]\n            }\n        )\n    }\n    \n    return data;\n}\n\nconsonants = parseDatasheet('consonants');\nvowels = parseDatasheet('vowels');\n\nlet nucleus;\nlet onset;\nlet coda;\nsyllable_types = [\n    [nucleus],\n    [onset + nucleus],\n    [onset + nucleus + coda]\n]\n\nfunction createSyllable() {\n    rand = getRand(1);\n    let onset = '';\n    let nucleus = vowels[Math.floor(getRand(vowels.length))].symbol;\n    let coda = '';\n    \n    if (rand < .3) {\n        onset = consonants[Math.floor(getRand(consonants.length))].symbol;\n    } else if (rand < .5) {\n        onset = consonants[Math.floor(getRand(consonants.length))].symbol +\n                consonants[Math.floor(getRand(consonants.length))].symbol;\n    } else {\n        onset = consonants[Math.floor(getRand(consonants.length))].symbol;\n        coda = consonants[Math.floor(getRand(consonants.length))].symbol;\n    }\n\n    return `${onset} ${nucleus} ${coda}`.trim();\n}\n\nfunction createWords() {\n    for (let i = 0; i < 50; i++) {\n        let rand = getRand(1);\n        let word = '';\n        if (rand < .25) {\n            word = createSyllable();\n        } else if (rand < .75) {\n            word = `${createSyllable()} . ${createSyllable()}`;\n        } else {\n            word = `${createSyllable()} . ${createSyllable()} . ${createSyllable()}`;\n        }\n        console.log(word);\n    }\n}\n\ncreateWords();\n\nfunction getRand(max) {\n    return Math.random() * max;\n}"
  },
  {
    "_id": "fEX7LZracwCNaLEPL",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T23:36:56.897Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rxmgyb9gc8wacycxt14e",
        "version": 1550243558,
        "signature": "81fd03d1a5757e2949f97c6f4b64bcd6604b27f4",
        "width": 804,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:12:38Z",
        "tags": [],
        "bytes": 1424560,
        "type": "upload",
        "etag": "084cac7bb3778898d220d0fe93ed2398",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550243558/avalanche2019/rxmgyb9gc8wacycxt14e.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550243558/avalanche2019/rxmgyb9gc8wacycxt14e.png"
      },
      {
        "public_id": "avalanche2019/tayjfqxfuvkdbrdhg0hp",
        "version": 1550243583,
        "signature": "0a195bf8840378e5187205fef1bf29941cd4d8d5",
        "width": 800,
        "height": 1100,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:13:03Z",
        "tags": [],
        "bytes": 842314,
        "type": "upload",
        "etag": "9458478c0798e19b4c045d0de3f0975b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550243583/avalanche2019/tayjfqxfuvkdbrdhg0hp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550243583/avalanche2019/tayjfqxfuvkdbrdhg0hp.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T05:24:30.493Z" }
      }
    ],
    "title": "",
    "description": "Line variation perspective by drawing triangles",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n  \nvar l1 = 0.4\nvar lineHue = 255\nvar lineSlider;\nvar hueSlider;\n\nfunction setup() \n{\n\t createCanvas(400,400);\n\n\tbackground(0,0,0);\n  colorMode(HSB,100);\n  angleMode(DEGREES);\n    \n  createP('Rotate Triangles');\n  lineSlider = createSlider(0,360,1);\n  \n  createP('Change Line Hue');\n  hueSlider = createSlider(0,100,1);\n}\n\nfunction draw(){ \n  \n  l1 = lineSlider.value();\n  lineHue = hueSlider.value();\n  \n  \n  stroke(lineHue,random(255),random(255));\n  noFill();\n  strokeWeight(.3);\n  translate(width/2, height/2);\n  \trotate(l1);\n  rotate(map( 0, 1, 0, height) / 25.0);\n  scale(map( 0, 1, 0, height) / 100.0);\n  // triangle(0, -150, -10, 150, 10, 150);\n  triangle(mouseX, -180, -mouseX*2, 180, mouseX*2, 50);\n\n}"
  },
  {
    "_id": "fFokRkYTHbf6FNdQR",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T03:38:16.586Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/olatjfqwtinlo99cyoti",
        "version": 1548964374,
        "signature": "75f84a870d88e80fc1ec5ef8709e371a9b385dff",
        "width": 1344,
        "height": 1398,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T19:52:54Z",
        "tags": [],
        "bytes": 70109,
        "type": "upload",
        "etag": "204dbd9b3dd61bf59734ed8dd680d20f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548964374/avalanche2019/olatjfqwtinlo99cyoti.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548964374/avalanche2019/olatjfqwtinlo99cyoti.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:56.882Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:01:12.641Z" }
      }
    ],
    "title": "",
    "description": "Changing the opacity of the stroke of a 2D matrix gives the illusion of tiles. Staring long enough, you'll start to spot patterns and sort of a labyrinth\n---\n\n`made with p5.js`",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nconst canvasX = innerWidth;\nconst canvasY = innerHeight;\nlet cols = 50;\nlet rows = 30;\n\n// make2D array function code inspired by The Coding Train Tutorial\n// https://www.youtube.com/watch?v=OTNpiLUSiB4\nfunction make2Darray(cols, rows) {\n  let arr = new Array(cols);\n  arr.forEach(el => {\n    arr[el] = new Array(rows);\n  });\n  return arr;\n}\n\nfunction setup() {\n  createCanvas(canvasX, canvasY);\n  colors = make2Darray(cols, rows);\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * 30;\n      let y = j * 30;\n\n      fill(10);\n      stroke(random(0, 255), random(0, 255), random(0, 255), random(0, 600));\n      rect(x, y, 30, 30);\n    }\n  }\n}"
  },
  {
    "_id": "fKtdkKuywrGRuHyqk",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T20:27:33.134Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zrf97nshjj4ws1fdi561",
        "version": 1550176160,
        "signature": "7ca176caa3cf0868b788299543141e8e4a5099a1",
        "width": 2606,
        "height": 1558,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T20:29:20Z",
        "tags": [],
        "bytes": 3234206,
        "type": "upload",
        "etag": "cefa679bd418fb4796e464a208aa9615",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550176160/avalanche2019/zrf97nshjj4ws1fdi561.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550176160/avalanche2019/zrf97nshjj4ws1fdi561.png"
      },
      {
        "public_id": "avalanche2019/mac0tslyyinc3rmjajkc",
        "version": 1550176165,
        "signature": "d37bb3fa81aaa7434964f04e7c9aaf119ed1e58b",
        "width": 2296,
        "height": 1334,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T20:29:25Z",
        "tags": [],
        "bytes": 2052477,
        "type": "upload",
        "etag": "7398df7b9c726016b860cdf0a5f457ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550176165/avalanche2019/mac0tslyyinc3rmjajkc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550176165/avalanche2019/mac0tslyyinc3rmjajkc.png"
      },
      {
        "public_id": "avalanche2019/r9zegdxakcvd5vdy2blq",
        "version": 1550176213,
        "signature": "48e8aa0bf35f92d157f7b403b6563fc68caa4600",
        "width": 904,
        "height": 1212,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T20:30:13Z",
        "tags": [],
        "bytes": 740652,
        "type": "upload",
        "etag": "5170d01846bf473284a7d2d6a9cf8482",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550176213/avalanche2019/r9zegdxakcvd5vdy2blq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550176213/avalanche2019/r9zegdxakcvd5vdy2blq.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "ROTHKO GENERATOR \n\nI was interested after last class to make my Rothko sketch into a template rather than a single image. \n\nTry and Create your favourite Rothko piece or a new one with these parameters\n\n**sorry the HTML isn't included so the names of bars are not there, in the online version",
    "inspiration_name": "Rothko",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\nlet colorVariability;\n\n function setup() {\n     canvas = createCanvas(600, 800);\n     canvas.position(200, 380);\n     smooth();\n\n     colorMode(RGB, 255, 255, 255, 1);\n     background(0, 0, 0, 1);\n     // fill(230, 60, 32);\n     noStroke();\n     // drawBackground();\n     setSliders();\n\n     colorVariability = 15;\n     colorVariability2 = 10;\n     colorVariability3 = 5;\n     frameRate(2);\n     draw();\n }\n\n //first four are position and height and width relative after strokeSpacing \n //function drawRectangle(strokeSpacing,y, x, columnQuantity, rowQuantity, colorFunction)\n\n\n function draw() {\n     background(0, 0, 0, 1);\n     //background rectangle \n     //  drawRectangle(10, 0, 0, 560, 400, 34, 57, 34, 75, 90, 159);\n     drawRectangle(strokeSpacing.value(), backgroundX.value(), backgroundY.value(), backgroundWidth.value(), backgroundHeight.value(), bk1R.value() - colorVariability3, bk1R.value() + colorVariability3, bk1G.value() - colorVariability2, bk1G.value() + colorVariability2, bk1B.value() - colorVariability2, bk1B.value() + colorVariability2);\n     //backdrop rectangle \n     let darkBorderR = bk1R.value() - borderShadow.value();\n     let darkBorderG = bk1G.value() - borderShadow.value();\n     let darkBorderB = bk1B.value() - borderShadow.value();\n     drawRectangle(strokeSpacing.value(), 5, 15, 520, 400, darkBorderR - colorVariability, darkBorderR + colorVariability, darkBorderG - colorVariability, darkBorderG + colorVariability, darkBorderB - colorVariability, darkBorderB + colorVariability);\n     drawRectangle(strokeSpacing.value(), sq1Y.value(), sq1X.value(), sq1Width.value(), sq1Height.value(), sq1R.value() - colorVariability2, sq1R.value() + colorVariability2, sq1G.value() - colorVariability, sq1G.value() + colorVariability, sq1B.value() - colorVariability, sq1B.value() + colorVariability);\n     // drawRectangle(strokeSpacing.value(), 0, 50, 500, 50, 58, 65, 57, 64, 92, 110);\n     drawRectangle(strokeSpacing.value(), sq2Y.value(), sq2X.value(), sq2Width.value(), sq2Height.value(), sq2R.value() - colorVariability, sq2R.value() + colorVariability, sq2G.value() - colorVariability, sq2G.value() + colorVariability, sq2B.value() - colorVariability, sq2B.value() + colorVariability);\n     //  drawRectangle(strokeSpacing.value(), 250, 30, 500, 30, 40, 64, 69, 90, 158, 188);\n     drawRectangle(strokeSpacing.value(), sq3Y.value(), sq3X.value(), sq3Width.value(), sq3Height.value(), sq3R.value() - colorVariability, sq3R.value() + colorVariability, sq3G.value() - colorVariability, sq3G.value() + colorVariability, sq3B.value() - colorVariability3, sq3B.value() + colorVariability3);\n     // drawRectangle(15, 440, 30, 500, 60, 46, 72, 15, 19, 33, 35);\n\n }\n\n function drawRectangle(strokeSpacing, y, xOffset, columnQuantity, rowQuantity, redMin, redMax, greenMin, greenMax, blueMin, blueMax) {\n     for (rows = 0; rows < rowQuantity; rows++) {\n         for (i = xOffset; i < columnQuantity; i += strokeSpacing) {\n             let width = random(strokeWidth.value() - 5, strokeWidth.value() + 10);\n             let height = random(strokeHeight.value() - 5, strokeHeight.value() + 10);\n             let startOffset = random(10, 30);\n             let endOffset = random(10, 30);\n\n             makeColor(redMin, redMax, greenMin, greenMax, blueMin, blueMax);\n             rect(i + startOffset, y + startOffset, width, height);\n         }\n         i = 0;\n         //change this \n         y += strokeSpacingY.value();\n     }\n }\n\n function setSliders() {\n     let sliderSpacing = 180;\n     let sliderX = 50;\n     let sliderY = 120;\n     let sliderHeight = 60;\n     //  brush = createP('Brush Stroke Spacing');\n     strokeSpacing = createSlider(1, 20, 9, 1);\n     strokeSpacing.position(sliderX, 120);\n     sliderX += sliderSpacing;\n     //Y stroke seperation\n     strokeSpacingY = createSlider(2, 10, 5, 1);\n     strokeSpacingY.position(sliderX, 120);\n     sliderX += sliderSpacing;\n     //  createP('Stroke Width');\n     strokeWidth = createSlider(5, 30, 20, 1);\n     strokeWidth.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  strokeWidth.position(160, 920);\n     //  createP('Stroke Height');\n     strokeHeight = createSlider(5, 35, 15, 1);\n     strokeHeight.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n\n     //***************** */BACKGROUND *******************************************\n     //  createP('Background StartX');\n     sliderX = 50;\n     sliderY += sliderHeight;\n     backgroundX = createSlider(0, 500, 0, 1);\n     backgroundX.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Background StartY');\n     backgroundY = createSlider(0, 500, 0, 1);\n     backgroundY.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Background Width');\n     backgroundWidth = createSlider(0, 700, 560, 10);\n     backgroundWidth.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Background HEIGHT');\n     backgroundHeight = createSlider(0, 300, 200, 10);\n     backgroundHeight.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Background Red');\n     bk1R = createSlider(0, 255, 45.5, 1);\n     bk1R.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n\n     //  createP('Background Green');\n     bk1G = createSlider(0, 255, 54.5, 1);\n     bk1G.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Background Blue');\n     bk1B = createSlider(0, 255, 120, 1);\n     bk1B.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n\n     //***************** */SQUARE 1 *******************************************\n     sliderX = 50;\n     sliderY += sliderHeight;\n     //Y POSITION\n     sq1Y = createSlider(0, 500, 0, 2);\n     sq1Y.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  X POSITION\n     sq1X = createSlider(0, 300, 50, 1);\n     sq1X.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  WIDTH SLIDER\n     sq1Width = createSlider(300, 600, 500, 10);\n     sq1Width.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  HEIGHT SLIDER\n     sq1Height = createSlider(0, 400, 50, 1);\n     sq1Height.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 1 Red');\n     sq1R = createSlider(0, 255, 61.5, 1);\n     sq1R.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 1 Green');\n     sq1G = createSlider(0, 255, 60.5, 1);\n     sq1G.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 1 Blue');\n     sq1B = createSlider(0, 255, 101, 1);\n     sq1B.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n\n     //***************** */SQUARE 2 *******************************************\n     // \n     sliderX = 50;\n     sliderY += sliderHeight;\n     //Y POSITION\n     sq2Y = createSlider(0, 500, 250, 2);\n     sq2Y.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  X POSITION\n     sq2X = createSlider(0, 300, 30, 1);\n     sq2X.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  WIDTH SLIDER\n     sq2Width = createSlider(300, 600, 500, 10);\n     sq2Width.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  HEIGHT SLIDER\n     sq2Height = createSlider(0, 200, 30, 1);\n     sq2Height.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 2 Red');\n     sq2R = createSlider(0, 255, 52, 1);\n     sq2R.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 2 Green');\n     sq2G = createSlider(0, 255, 79.5, 1);\n     sq2G.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 2 Blue');\n     sq2B = createSlider(0, 255, 173, 1);\n     sq2B.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n\n     //***************** */SQUARE 3 *******************************************\n     sliderX = 50;\n     sliderY += sliderHeight;\n     //Y POSITION\n     sq3Y = createSlider(0, 800, 440, 2);\n     sq3Y.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  X POSITION\n     sq3X = createSlider(0, 300, 20, 1);\n     sq3X.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  WIDTH SLIDER\n     sq3Width = createSlider(300, 600, 500, 10);\n     sq3Width.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  HEIGHT SLIDER\n     sq3Height = createSlider(0, 300, 60, 2);\n     sq3Height.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 3 Red');\n     sq3R = createSlider(0, 255, 59, 1);\n     sq3R.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 3 Green');\n     sq3G = createSlider(0, 255, 16.5, 1);\n     sq3G.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 3 Blue');\n     sq3B = createSlider(0, 255, 34, 1);\n     sq3B.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n     //  createP('Square 3 Blue');\n     sliderX = 50;\n     sliderY += sliderHeight;\n     borderShadow = createSlider(0, 50, 25, 1);\n     borderShadow.position(sliderX, sliderY);\n     sliderX += sliderSpacing;\n\n\n }\n\n function makeColor(redMin, redMax, greenMin, greenMax, blueMin, blueMax) {\n     let r = random(redMin, redMax);\n     let g = random(greenMin, greenMax);\n     let b = random(blueMin, blueMax);\n     let r2 = random(redMin, redMax);\n     let g2 = random(greenMin, greenMax);\n     let b2 = random(blueMin, blueMax);\n     let r3 = random(redMin, redMax);\n     let g3 = random(greenMin, greenMax);\n     let b3 = random(blueMin, blueMax);\n     r = (r + r2 + r3) / 3;\n     g = (g + g2 + g3) / 3;\n     b = (b + b2 + b3) / 3;\n     let opacity = (random(1) + random(1) + random(1)) / 3;\n     fill(r, g, b, opacity);\n\n }"
  },
  {
    "_id": "fM8htXzk5r5F3Q7fs",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T02:22:11.973Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xcopzdjdlktceiblw2dc",
        "version": 1549938168,
        "signature": "c3e275563f9d3a57dbbb66971982788f852279fc",
        "width": 1146,
        "height": 1656,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-12T02:22:48Z",
        "tags": [],
        "bytes": 1611851,
        "type": "upload",
        "etag": "d076df93d697737301f6875b825893b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549938168/avalanche2019/xcopzdjdlktceiblw2dc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549938168/avalanche2019/xcopzdjdlktceiblw2dc.png"
      },
      {
        "public_id": "avalanche2019/nmo2ekxjvce4bi9jjktv",
        "version": 1549938177,
        "signature": "7ad0b9db70ff120b804ce56a6391fdc275e2a94f",
        "width": 1112,
        "height": 1662,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-12T02:22:57Z",
        "tags": [],
        "bytes": 1595353,
        "type": "upload",
        "etag": "bf5a48ef9bb21f8dc20d5962ffb382db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549938177/avalanche2019/nmo2ekxjvce4bi9jjktv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549938177/avalanche2019/nmo2ekxjvce4bi9jjktv.png"
      },
      {
        "public_id": "avalanche2019/bejtibtqzqg3wgooyyeb",
        "version": 1549938927,
        "signature": "a959d1297fefa989cb690d7e5ee8164de56b64f1",
        "width": 1058,
        "height": 1738,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-12T02:35:27Z",
        "tags": [],
        "bytes": 1420632,
        "type": "upload",
        "etag": "ec8690686ff9dc56500f18f2ddf15567",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549938927/avalanche2019/bejtibtqzqg3wgooyyeb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549938927/avalanche2019/bejtibtqzqg3wgooyyeb.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T02:45:02.578Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-12T02:45:03.808Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T03:00:50.67Z" }
      }
    ],
    "title": "",
    "description": "Combined and refactored my hair textures from last week to make a wig generator. \n\nCan create custom colors, set hair thickness, and choose between the three textures\n \nThe curly one takes forever to render\n\na lot more I wanted to do with this so may do a new sketch later that allows you to change the shape of the hair",
    "inspiration_name": "Wig Generator",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\nlet redSlider, greenSlider, blueSlider;\n\nfunction setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n    smooth();\n    noFill();\n    colorMode(RGB, 255, 255, 255, 1);\n    frameRate(10);\n    createP('Red');\n    redSlider = createSlider(0, 255, 255 * 10);\n    createP('Blue');\n    blueSlider = createSlider(0, 255, 10 * 10);\n    createP('Green');\n    greenSlider = createSlider(0, 255, 10 * 10);\n    createP('Straight     Wavy      Curly');\n    textureSlider = createSlider(0, 2, 0 * 1);\n    createP('Strand Thickness');\n    strandThickness = createSlider(0, 3, 2 * 1);\n}\n\nfunction setColor() {\n    let red = redSlider.value();\n    let green = greenSlider.value();\n    let blue = blueSlider.value();\n    let opacity = Math.random() - .82;\n    let c = color(red, green, blue, opacity);\n    return c;\n}\n\nfunction setThickness() {\n    let thickness = strandThickness.value();\n    let strandWidth;\n    if (thickness == 0) {\n        strandWidth = (1 * Math.random() + .5);\n    }\n    if (thickness == 1) {\n        strandWidth = (3 * Math.random() + 1);\n    }\n    if (thickness == 2) {\n        strandWidth = (3 * Math.random() + 2);\n    }\n    if (thickness == 3) {\n        strandWidth = (3 * Math.random() + 3);\n    }\n    strokeWeight(strandWidth);\n    return strandWidth;\n}\n\nfunction draw() {\n    background(0, 0, 0, 1);\n    // hairTexture();\n    let texture = textureSlider.value();\n    if (texture == 0) {\n        drawStraightHair();\n    } else if (texture == 1) {\n        drawWavyHair();\n    }\n    if (texture == 2) {\n        drawCurly();\n    }\n}\n\nfunction drawStraightHair() {\n    for (let tuff = (-30); tuff < 40; tuff++) {\n        let origin = (tuff + 30) * 10;\n        let tuffLength = map(abs(tuff), 0, 30, 200, 70);\n        for (let strand = 0; strand < 200; strand++) {\n            strokeWeight(setThickness());\n            let horizontalLean = random(-70, 70);\n            let length = map(abs(horizontalLean), 0, 70, 400, 200) + tuffLength;\n            push();\n            let lightThickness = (2 * Math.random() + 1);\n            let lightBrightness = (Math.random() - .9);\n            strokeWeight(lightThickness);\n            stroke(0, 0, 0, lightBrightness);\n            line(origin, -100, origin + horizontalLean, length - 30)\n            pop();\n\n            stroke(setColor());\n            line(origin, -100, origin + horizontalLean, length);\n        }\n    }\n}\n\nfunction drawWavyHair() {\n    for (tuft = 1; tuft < 18; tuft++) {\n        //starting point for a tuft of hair \n        origin = {\n            x: tuft * 40,\n            y: 0,\n        };\n        //end point for a tuft of hair \n        strandEnd = {\n            x: tuft * 50,\n            y: 400,\n        };\n        //curve deviation relative to strands \n        let curveDeviation = (Math.random() * 150) + 50;\n        strokeWeight(setThickness());\n        //strands in a tuft\n        for (strand = 0; strand < 200; strand++) {\n            let opacity = Math.random() - .6;\n            stroke(setColor());\n            let originDeviationX = (Math.random() * 30) + 5;\n            curveStart = {\n                x: origin.x + originDeviationX,\n                y: origin.y,\n            };\n\n            //end point of each strand\n            let strandEndDeviationX = (Math.random() * 30) + 5;\n            //make strands that fall further from the x axis longer, and strands that end closer, shorter\n            let length = map(strandEndDeviationX, 5, 25, 0, 200);\n            curveEnd = {\n                x: strandEnd.x + strandEndDeviationX,\n                y: strandEnd.y + length,\n            };\n\n            //straight axis for start and end of strand of hair\n            let axis = dist(curveStart.x, curveStart.y, curveEnd.x, curveEnd.y);\n            //halfway point of a strand \n            let halfAxisLength = curveEnd.y / 2;\n\n            // control points \n            //the amount of curvature  of a control point is relative to its origin \n            let controlOne = {\n                //let the x axis of the control point be a random no larger than the curvedeviation\n                x: curveStart.x - (Math.floor(Math.random() * curveDeviation) + 100),\n                y: Math.floor(Math.random() * halfAxisLength),\n            };\n\n            //control Pont Two\n            let controlTwo = {\n                x: curveStart.x + (Math.floor(Math.random() * curveDeviation)),\n                y: Math.floor((Math.random() * halfAxisLength + halfAxisLength)),\n            };\n            push();\n            let lightThickness = (2 * Math.random() + 1);\n            let lightBrightness = (Math.random() - .9);\n            strokeWeight(lightThickness);\n            stroke(0, 0, 0, lightBrightness);\n            bezier(curveStart.x, curveStart.y, controlOne.x, controlOne.y, controlTwo.x, controlTwo.y, curveEnd.x, curveEnd.y);\n            pop();\n            bezier(curveStart.x, curveStart.y, controlOne.x, controlOne.y, controlTwo.x, controlTwo.y, curveEnd.x, curveEnd.y);\n        }\n    }\n}\n\nfunction setCurlyThickness() {\n    let thickness = strandThickness.value();\n    let strandWidth;\n    if (thickness == 0) {\n        strandWidth = (.5 * Math.random());\n    }\n    if (thickness == 1) {\n        strandWidth = (1 * Math.random() + .5);\n    }\n    if (thickness == 2) {\n        strandWidth = (2 * Math.random() + 1);\n    }\n    if (thickness == 3) {\n        strandWidth = (3 * Math.random() + 2);\n    }\n    strokeWeight(strandWidth);\n    return strandWidth;\n}\n\nfunction drawCurly() {\n    let time = 0;\n    let curlWidth = 10;\n    let frequency = 0.15; //frequency //how fast they rotate \n    let pointTightness = 1;\n\n    let pointDiameter = setCurlyThickness();\n    console.log(pointDiameter);\n    clear();\n    background(0, 0, 0);\n    for (tuft = 1; tuft < 15; tuft++) {\n        //starting point for a tuft of hair \n        origin = tuft * 40;\n        tuftLength = Math.floor(Math.random() * 90) + 400;\n\n        let yOffset = random(-100, -50);\n        for (strands = 0; strands < 90; strands++) {\n            //strand opacity \n            // let opacity = (Math.random() - .2)\n            length = tuftLength + (Math.random() * 90);\n            // let opacity = (map(length, 600, 730, 0, 1)) - .2;\n\n            fill(setColor());\n            noStroke();\n            // fill(red.r, red.g, red.b, opacity);\n            originDeviation = (Math.random() * 30) + 5;\n            strandOriginX = origin + originDeviation;\n            curlTightnessDeviation = random(.04, .043);\n            curlTightnessDeviation2 = random(.04, .043);\n            curlWidthDeviation = Math.floor(Math.random() * 15) + 10;\n            curlWidthDeviation2 = Math.floor(Math.random() * 15) + 10;\n            let twistDeviation = random((-1), (-.3));\n\n            //single strand of hair\n\n            for (i = 0; i < length; i += pointTightness) {\n                let curlTightness = i * curlTightnessDeviation;\n                curlTightness *= Math.floor(Math.random() * 1) + 1;\n                let curTightness2 = i * curlTightnessDeviation2;\n                curTightness2 *= Math.floor(Math.random() * 1) + 1;\n                //bigger phase, the less curcles \n                ellipse(strandOriginX + curlWidth + curlWidthDeviation * sin(frequency + curlTightness), i + yOffset, pointDiameter, pointDiameter);\n                push();\n                pointDiameter = 2;\n                fill(25, 25, 25, .1);\n                ellipse(strandOriginX + curlWidth + curlWidthDeviation * sin(frequency + curlTightness), i + yOffset, pointDiameter, pointDiameter);\n                pop();\n                ellipse(strandOriginX + curlWidth + curlWidthDeviation2 * (twistDeviation) * sin(frequency + curTightness2), i + yOffset, pointDiameter, pointDiameter);\n                push();\n                pointDiameter = 2;\n                fill(25, 25, 25, .1);\n                ellipse(strandOriginX + curlWidth + curlWidthDeviation2 * (twistDeviation) * sin(frequency + curTightness2), i + yOffset, pointDiameter, pointDiameter);\n                pop();\n            }\n\n        }\n    }\n}"
  },
  {
    "_id": "fMorQ2A3kcgbLdzNL",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T14:14:36.378Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gqulhixlinadnlmokafr",
        "version": 1553868880,
        "signature": "12a8e392f772078b1ecf410eec37724226b74899",
        "width": 494,
        "height": 493,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T14:14:40Z",
        "tags": [],
        "bytes": 51771,
        "type": "upload",
        "etag": "01a4f34d1728c078f5d371355b1a094a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553868880/avalanche2019/gqulhixlinadnlmokafr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553868880/avalanche2019/gqulhixlinadnlmokafr.png"
      },
      {
        "public_id": "avalanche2019/s4yqtbfabnythcchdq58",
        "version": 1553868984,
        "signature": "59efe3e78477d52f1dd71b2fcd7d0597a1d9e0f0",
        "width": 494,
        "height": 492,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T14:16:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 361226,
        "type": "upload",
        "etag": "7ffcd3eee396900d38f6bf21d5d867e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553868984/avalanche2019/s4yqtbfabnythcchdq58.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553868984/avalanche2019/s4yqtbfabnythcchdq58.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1220958",
          "dar": "247:246"
        },
        "frame_rate": 60,
        "bit_rate": 1398293,
        "duration": 2.066667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\nvar rectangle = new Rectangle(new Point(0, 0), new Point(1550, 1550));\nvar background = new Path.Rectangle(rectangle);\nbackground.fillColor = 'white';\n\nvar eye_radius = 250;\nvar pupil_radius = 160;\n\n\nvar max_vector_length = eye_radius - pupil_radius;\n\n\nvar eye1 = new Path.Circle({\n    center: [225,225],\n    radius: eye_radius,\n    strokeWidth: 40,\n    strokeColor: 'black',\n    //fillColor:'white',\n});\n\nvar eye2 = new Path.Circle({\n    center: [230,230],\n    radius: eye_radius,\n    strokeWidth: 20,\n    strokeColor: 'black',\n    //fillColor:'white',\n    \n});\n\nvar eye3 = new Path.Circle({\n    center: [250,280],\n    radius: eye_radius,\n    strokeWidth: 20,\n    strokeColor: 'black',\n    //fillColor:'white',\n});\n\nvar eye4 = new Path.Circle({\n    center: [300,280],\n    radius: eye_radius,\n        strokeWidth: 10,\n\n    strokeColor: 'black',\n    //fillColor:'white',\n    \n});\n\n\nvar pupil1 = new Path.Circle({\n    center: [250,300],\n    radius: pupil_radius,\n        strokeColor: 'black',\n//fillColor: 'black'\n});\n\nvar pupil2 = new Path.Circle({\n    center: [230,270],\n    radius: pupil_radius,\n        strokeColor: 'black',\n//fillColor: 'black'\n});\n\nvar pupil3 = new Path.Circle({\n    center: [240,30],\n    radius: pupil_radius,\n    strokeWidth: 20,\n    strokeColor: 'black',\n//fillColor: 'black'\n});\n\nvar pupil4 = new Path.Circle({\n    center: [300,230],\n    radius: pupil_radius,\n    strokeColor: 'black',\n//fillColor: 'black'\n});\n\n\n\nfunction onMouseMove(event) {\n\n    var vector = event.point - eye1.position;\n   \n    if (vector.length > max_vector_length) {\n        vector = vector.normalize(max_vector_length);\n    }\n\n    pupil1.position = eye1.position + vector;\n    pupil2.position = eye2.position + vector;\n    pupil3.position = eye3.position + vector;\n    pupil2.position = eye4.position + vector;\n}\n\n// var myPath;\n\n// function onMouseDown(event) {\n// \tmyPath = new Path();\n// \tmyPath.strokeColor = 'black';\n// }\n\n// function onMouseDrag(event) {\n// \tmyPath.add(event.point);\n// }"
  },
  {
    "_id": "fQHgbyRHJ7RYovFmr",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T03:17:03.528Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dp50bpp4isk4qulooshj",
        "version": 1556248631,
        "signature": "e8824a96dd1e7a93d339928bc91fba988f65e536",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T03:17:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 3987118,
        "type": "upload",
        "etag": "8b812456a8d9f296ee25a46ad0d12632",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556248631/avalanche2019/dp50bpp4isk4qulooshj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556248631/avalanche2019/dp50bpp4isk4qulooshj.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "253732",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "490911",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 750944,
        "duration": 42.475767,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I hope I can actually play the piano lol",
    "inspiration_name": "A drop in the ocean",
    "inspiration_url": "https://www.youtube.com/watch?v=lEjkQwoGvAU"
  },
  {
    "_id": "fSYaYXWBQ3dC9cdMc",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T00:56:25.474Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gdxw8rgvmkxziqhsw4qs",
        "version": 1551747401,
        "signature": "4d93db0736a175f5524505f26a4ea3d6d429c2c0",
        "width": 1000,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T00:56:41Z",
        "tags": [],
        "bytes": 2414727,
        "type": "upload",
        "etag": "96cebb0e9062f9c1509a02a1b8a789f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551747401/avalanche2019/gdxw8rgvmkxziqhsw4qs.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551747401/avalanche2019/gdxw8rgvmkxziqhsw4qs.png"
      },
      {
        "public_id": "avalanche2019/tk5gukwmleegprdb801w",
        "version": 1551747409,
        "signature": "c55bb773a10a2ff338d00d1d2e1ea32850255434",
        "width": 998,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T00:56:49Z",
        "tags": [],
        "bytes": 921828,
        "type": "upload",
        "etag": "f715c19de99f4afb5cbaeb5bebfe8eb4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551747409/avalanche2019/tk5gukwmleegprdb801w.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551747409/avalanche2019/tk5gukwmleegprdb801w.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T05:18:47.283Z" }
      }
    ],
    "title": "",
    "description": "Drawing pixel x pixel - Changing Pixel Density and Random colors.  I'll try noise later.",
    "inspiration_name": "Daniel Shiffman - video on Pixel Arrays",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n    //createCanvas(320, 240);\n    createCanvas(500, 500);\n  \t//colorMode(HSB);\n  \tpixelDensity(.07);\n}\n\nfunction draw() {\n    background(20);\n\n    //img = createImage(25, 25);\n    loadPixels();\n\n    for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n        \tvar index = (x + y * width) * 3;\n          //var c = color(y * 5, x * 5, 100,140);\n          \n          pixels[index+0] = x;\n          pixels[index+1] = random(255);\n          pixels[index+2] = y;\n          pixels[index+3] = random(255);\n          \n          \n        }\n    }\n\n  \n  \tupdatePixels();\n\t\tnoSmooth();\n  \tnoLoop();\n\n}\n\n  \t// smooth();\n\n  \t// image(img, 0, 0, width, height);"
  },
  {
    "_id": "fW53zywHj5cgHk4ZR",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T01:26:01.958Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/q7saftumujp3xntkrweu",
        "version": 1550626125,
        "signature": "9b66ddc81d31d890219457f8d11272824148f719",
        "width": 794,
        "height": 792,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-20T01:28:45Z",
        "tags": [],
        "bytes": 132812,
        "type": "upload",
        "etag": "8ee047dc711c2780908362a94d044dc9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550626125/avalanche2019/q7saftumujp3xntkrweu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550626125/avalanche2019/q7saftumujp3xntkrweu.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Cloud Generator - using Perlin 2D noise",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n//learn from https://www.openprocessing.org/sketch/549321\n\nfunction setup() {\n  \tcreateCanvas(400, 400);\n\tstroke(115,160,238);\n  colorMode(HSB, 255);\n  //stroke(135,140,238);\n  //fill(135,180,238);\n}\n\nfunction draw() {\n\tfor (var x = 0; x < width; x+=2) {\n\t\tfor (var y = 0; y < height; y+=2) {\n\t\t\tvar c = (255) * noise(0.02 * x, 0.04 * y);\n\t\t\tfill(c);\n\t\t\trect(x, y, 10, 10);\n\t\t}\t\t\n  \t}\n}",
    "inspiration_name": "Gene Kogan - Perlin noise"
  },
  {
    "_id": "fY7dAKbCgA9S2Javp",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:42:40.233Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ysdngoedztmtnvuk1sld",
        "version": 1553884980,
        "signature": "a15c68c576a33bbd21456696911206e018a8b3bd",
        "width": 1144,
        "height": 712,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:43:00Z",
        "tags": [],
        "bytes": 158392,
        "type": "upload",
        "etag": "a6c0b585b85e81685ba4a7914241e04d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553884980/avalanche2019/ysdngoedztmtnvuk1sld.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553884980/avalanche2019/ysdngoedztmtnvuk1sld.jpg"
      },
      {
        "public_id": "avalanche2019/a5x0wmqnislj2z87vwhz",
        "version": 1553884991,
        "signature": "03ad096e28a71ecbfac684d0e3e7f699dfbf840d",
        "width": 480,
        "height": 280,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-29T18:43:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 988154,
        "type": "upload",
        "etag": "be120041c7737a48ad15aef082e128b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553884991/avalanche2019/a5x0wmqnislj2z87vwhz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553884991/avalanche2019/a5x0wmqnislj2z87vwhz.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "238599",
          "dar": "12:7"
        },
        "frame_rate": 15,
        "bit_rate": 240386,
        "duration": 32.8855,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Irregular division raster; built upon the division raster example: http://paperjs.org/examples/division-raster/",
    "inspiration_url": "http://paperjs.org/examples/division-raster/",
    "inspiration_name": "Divison Raster"
  },
  {
    "_id": "fiGCdSevAnQzGQzGu",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T16:20:35.538Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hotijhmii0bbsu1u10x5",
        "version": 1554222065,
        "signature": "b7d31303ad63bbac47218509e136153830f0d54c",
        "width": 277,
        "height": 352,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-02T16:21:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 620466,
        "type": "upload",
        "etag": "f0e77854e431636eaefd613ab0616244",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554222065/avalanche2019/hotijhmii0bbsu1u10x5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554222065/avalanche2019/hotijhmii0bbsu1u10x5.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 20,
          "profile": "Main",
          "bit_rate": "1031836",
          "dar": "277:352"
        },
        "frame_rate": 24,
        "bit_rate": 1035908,
        "duration": 4.791667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/rbytzlpqocdaplmdn2un",
        "version": 1554222143,
        "signature": "64b3274fdd02e8928bb6b21df34f4ad3ce8f9420",
        "width": 277,
        "height": 352,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-02T16:22:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 628171,
        "type": "upload",
        "etag": "f3cc6f450d8142d0fe9d44e8c9d23c34",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554222143/avalanche2019/rbytzlpqocdaplmdn2un.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554222143/avalanche2019/rbytzlpqocdaplmdn2un.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 20,
          "profile": "Main",
          "bit_rate": "1044700",
          "dar": "277:352"
        },
        "frame_rate": 24,
        "bit_rate": 1048772,
        "duration": 4.791667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "funny",
        "created_at": { "$date": "2019-04-02T16:25:37.434Z" }
      }
    ],
    "title": "",
    "description": "animating / creating different  bifrost liquids in Maya and using simple cache and playback to create animation video. Going to do a more complex cache of a simulation in a future sketch",
    "inspiration_name": "bifrost"
  },
  {
    "_id": "fnknTsbqFe9B2gzSi",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T21:34:53.173Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bs6jgpxvitkhaxlcx8bf",
        "version": 1549489090,
        "signature": "c43753880f5e648060dd44eba7b6986739b2bfb8",
        "width": 3224,
        "height": 2396,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-06T21:38:10Z",
        "tags": [],
        "bytes": 1140652,
        "type": "upload",
        "etag": "b2106eaf79b5c8f2630d19480ad8d371",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549489090/avalanche2019/bs6jgpxvitkhaxlcx8bf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549489090/avalanche2019/bs6jgpxvitkhaxlcx8bf.jpg"
      },
      {
        "public_id": "avalanche2019/gjezkujkvqdnlysx2bed",
        "version": 1549489096,
        "signature": "34e52e16360e4281a2e3ea617360862e12b59e0a",
        "width": 1336,
        "height": 1002,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-06T21:38:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 1532567,
        "type": "upload",
        "etag": "842f58203d5144cf36bf5f243657c931",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549489096/avalanche2019/gjezkujkvqdnlysx2bed.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549489096/avalanche2019/gjezkujkvqdnlysx2bed.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "1432030",
          "dar": "4:3"
        },
        "frame_rate": 60,
        "bit_rate": 1436669,
        "duration": 8.533984,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T03:11:57.611Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:34:48.105Z" }
      }
    ],
    "title": "",
    "description": "Imitation of pencil traces in circulation."
  },
  {
    "_id": "fo762KxXJgNM7Ncey",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T16:06:24.83Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cry1cea8kzjphr69fymg",
        "version": 1554480399,
        "signature": "991a1a27b859e58655e69069b9ab78be43c08e26",
        "width": 400,
        "height": 400,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T16:06:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 10846625,
        "type": "upload",
        "etag": "20f2bdc6e3a4b494256cc49eaf513d58",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554480399/avalanche2019/cry1cea8kzjphr69fymg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554480399/avalanche2019/cry1cea8kzjphr69fymg.mov",
        "audio": {},
        "video": {
          "pix_format": "rgb24",
          "codec": "qtrle",
          "level": -99,
          "bit_rate": "2613105",
          "dar": "1:1"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 2892757,
        "duration": 29.996633,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "CF"
  },
  {
    "_id": "fo94qWZb65Y94yEnT",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-29T15:24:05.566Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bpg3edjytfq4rkgbjvob",
        "version": 1553874284,
        "signature": "7ed084952668b6a0f3d58065879dc349c0592206",
        "width": 994,
        "height": 812,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T15:44:44Z",
        "tags": [],
        "bytes": 92777,
        "type": "upload",
        "etag": "8684909725dbbb06ba98cb49d00860e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553874284/avalanche2019/bpg3edjytfq4rkgbjvob.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553874284/avalanche2019/bpg3edjytfq4rkgbjvob.png"
      },
      {
        "public_id": "avalanche2019/hnslchbdhhajrbzalhh8",
        "version": 1553874289,
        "signature": "85e06e2f98af4abcba954f1a592ff5f780e50d65",
        "width": 990,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T15:44:49Z",
        "tags": [],
        "bytes": 66405,
        "type": "upload",
        "etag": "be7c23b49cbe85d8e70483cbeaa28671",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553874289/avalanche2019/hnslchbdhhajrbzalhh8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553874289/avalanche2019/hnslchbdhhajrbzalhh8.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Elephant i",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n\nvar myTurtle;\nconst Y_AXIS = 1;\nconst X_AXIS = 2;\nlet b1, b2, c1, c2;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tmyTurtle = new Turtle();\n  noLoop();\n\n  //for loop creating the apples\n  \n  b1 = color(140,152,180);\n  b2 = color(222,235,249);\n  \n  noLoop();\n}\n\nfunction draw() {\n\t//background(50);\n  setGradient(0, 0, width, height, b1, b2, Y_AXIS);\n\n\tnoFill();\n\tstroke(255,255,255,125);\n\tstrokeWeight(4);\n    strokeCap(ROUND)\n\n\t// put the pen down to draw\n\t\n\n// \tmyTurtle.moveTo(random(width), random(height));\n// \tmyTurtle.turnTo(random(360));\n// \tdrawTriangle(myTurtle);\n\n// \tmyTurtle.moveTo(random(width), random(height));\n// \tmyTurtle.turnTo(random(360));\n// \tdrawTriangle(myTurtle);\n\n// \tmyTurtle.moveTo(random(width), random(height));\n// \tmyTurtle.turnTo(random(360));\n// \tdrawTriangle(myTurtle);\nmyTurtle.penUp();\n\tmyTurtle.moveTo(300, 300);\n  myTurtle.penDown();\n\tmyTurtle.turnTo(150);\n\tdrawCircle1(myTurtle);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(70, 250);\n  myTurtle.penDown();\n\tmyTurtle.turnTo(280);\n\tdrawCircle2(myTurtle);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(170, 310);\n  myTurtle.penDown();\n\tmyTurtle.turnTo(270);\n\tdrawCircle3(myTurtle);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(170, 310);\n  myTurtle.penDown();\n  myTurtle.moveTo(70, 250);\n  \n    myTurtle.penUp();\n  myTurtle.moveTo(346, 235);\n  myTurtle.penDown();\n\tmyTurtle.turnTo(0);\n\tdrawCircle3(myTurtle);\n  \n    myTurtle.penUp();\n  myTurtle.moveTo(300, 300);\n  myTurtle.penDown();\n\tmyTurtle.turnTo(340);\n\tdrawCircle3(myTurtle);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(300, 225);\n  myTurtle.penDown();\n\tmyTurtle.turnTo(0);\n\tdrawCircle4(myTurtle);\n\n\n\n\tnoLoop();\n}\n\n\n// draw a triangle using the turtle provided\n\n\nfunction drawCircle1(t) {\n\tfor (var i = 0; i < 32; i++) {\n\t\tt.moveForward(20);\n\t\tt.turnRight(10);\n\t}\n}\n\nfunction drawCircle2(t) {\n\tfor (var i = 0; i < 12; i++) {\n\t\tt.moveForward(20);\n\t\tt.turnRight(8);\n\t}\n}\n\nfunction drawCircle3(t) {\n\tfor (var i = 0; i < 8; i++) {\n\t\tt.moveForward(20);\n\t\tt.turnRight(8);\n\t}\n}\n\nfunction drawCircle4(t) {\n\tfor (var i = 0; i < 360; i++) {\n\t\tt.moveForward(1);\n\t\tt.turnRight(8);\n\t}\n}\n\nfunction setGradient(x, y, w, h, c1, c2, axis) {\n  noFill();\n\n  if (axis === Y_AXIS) {\n    // Top to bottom gradient\n    for (let i = y; i <= y + h; i++) {\n      let inter = map(i, y, y + h, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(x, i, x + w, i);\n    }\n  } else if (axis === X_AXIS) {\n    // Left to right gradient\n    for (let i = x; i <= x + w; i++) {\n      let inter = map(i, x, x + w, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(i, y, i, y + h);\n    }\n  }\n}"
  },
  {
    "_id": "fpHg4urEog5hZks4R",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-17T20:45:15.445Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/q7her7us7cgxfjku6ggm",
        "version": 1555534153,
        "signature": "ffdbd8e58e90d41df881e1130af0c937ce5a59fd",
        "width": 596,
        "height": 600,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-17T20:49:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 5332596,
        "type": "upload",
        "etag": "69bdd2eae371bbbf3367c5f42d305afc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555534153/avalanche2019/q7her7us7cgxfjku6ggm.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555534153/avalanche2019/q7her7us7cgxfjku6ggm.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "243140",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2795204",
          "dar": "149:150"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3047197,
        "duration": 14,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Simple FFT with lots of percussion.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\nvar fft, // Allow us to analyze the song\n    numBars = 1024, // The number of bars to use; power of 2 from 16 to 1024\n    song; // The p5 sound object\n\nvar button;\n\nfunction toggleSong(){\nif (song.isPlaying()){\nsong.pause();\n}\nelse{\nsong.play();\n}\n}\n\n// // Load  song\n// var loader = document.querySelector(\".loader\");\n// document.getElementById(\"audiofile\").onchange = function(event) {\n//     if(event.target.files[0]) {\n//         if(typeof song != \"undefined\") { // Catch already playing songs\n//             song.disconnect();\n//             song.stop();\n//         }\n        \n        // Load song\n        function preload(){\n          song = loadSound('chanchan.mp3')\n          //bg = loadImage('wall.jpg'); \n}\n        //loader.classList.add(\"loading\");\n\n\n\nvar canvas;\nfunction setup() { // Setup p5.js\n    canvas = createCanvas(300, 300);\n  \n}\n\nfunction draw() {\n    background(138,0,131);\n    background(184,134,11);\n    //background(bg);\n    \n    if(typeof song != \"undefined\" \n       && song.isLoaded() \n       && !song.isPlaying()) { // Do once\n\n        \n        song.play();\n        song.setVolume(1);\n\n        fft = new p5.FFT();\n        fft.waveform(numBars);\n        fft.smooth(0.85);\n    }\n    \n    if(typeof fft != \"undefined\") {\n        var spectrum = fft.analyze();\n        noStroke();\n        fill(\"rgb(255, 0, 255)\");\n        //fill(\"rgb(128, 125, 0, 280)\");\n        //fill(\"rgb(85, 107, 47,280)\");\n        for(var i = 0; i < numBars; i++) {\n            var x = map(i, 0, numBars, 0, width);\n            var h = -height + map(spectrum[i], 0, 165, height, 0);\n            rect(x, height, width / numBars, h);\n        }\n    }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}"
  },
  {
    "_id": "fr6Lskz4fL7z6yYGN",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:56:30.688Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sgcb7pb9toqp1p5x1j6z",
        "version": 1549652202,
        "signature": "a4ada87edec7c425239d617d4cea6f4be080f004",
        "width": 1680,
        "height": 1684,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T18:56:42Z",
        "tags": [],
        "bytes": 91785,
        "type": "upload",
        "etag": "344c5ac40a146776725a50833ce33309",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549652202/avalanche2019/sgcb7pb9toqp1p5x1j6z.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549652202/avalanche2019/sgcb7pb9toqp1p5x1j6z.jpg"
      },
      {
        "public_id": "avalanche2019/zm2ctegtxnregv3kldjc",
        "version": 1549652549,
        "signature": "7e08495a51080d5a921a796bd57d58e7f489cb64",
        "width": 1678,
        "height": 1682,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T19:02:29Z",
        "tags": [],
        "bytes": 67016,
        "type": "upload",
        "etag": "e43272020d294d3a4bc67bc51d4c5348",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549652549/avalanche2019/zm2ctegtxnregv3kldjc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549652549/avalanche2019/zm2ctegtxnregv3kldjc.jpg"
      },
      {
        "public_id": "avalanche2019/yztjswpuje5gwklzwgrm",
        "version": 1549652553,
        "signature": "45e8e9667b648c52e4927cc4c1a7a5c8b1c8c60a",
        "width": 1684,
        "height": 1680,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T19:02:33Z",
        "tags": [],
        "bytes": 80623,
        "type": "upload",
        "etag": "34be3f5878b207be05dd240dba9a7f9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549652553/avalanche2019/yztjswpuje5gwklzwgrm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549652553/avalanche2019/yztjswpuje5gwklzwgrm.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T19:42:12.268Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T20:37:00.476Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T21:05:04.766Z" }
      }
    ],
    "title": "",
    "description": "Bauhaus generator (first try) – need more shapes, circles or arcs would be nice",
    "inspiration_name": "Bauhaus",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nconst w = window.innerWidth;\nconst h = w;\nlet rotations = [0, 15, 30, 45, 60, 90];\nlet sizes = [50, 200, 300];\nlet shapes = [\"triangle\", \"rectangle\"];\n\nfunction setup() {\n  createCanvas(w, h);\n  // colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  // pixelDensity(1);\n\n  window.canvasColor = color(240);\n  window.black = color(25, 23, 11);\n  window.white = color(252);\n  window.red = color(200, 23, 11);\n  window.colors = [black, white, red];\n  background(canvasColor);\n\n  const iterations = floor(min(random(1, 6), random(1, 6)));\n\n  bauhaus();\n}\n\nfunction draw() {\n  frameRate(1);\n  background(canvasColor);\n  bauhaus();\n}\n\nfunction bauhaus() {\n  const iterations = floor(min(random(1, 6), random(1, 6)));\n\n  for (let i = 0; i < iterations; i++) {\n    const shapesIndex = floor(random(shapes.length));\n    drawShape(shapes[shapesIndex], i);\n  }\n}\n\nfunction drawShape(shape, i) {\n  const x = (random(w) + random(w)) / 2;\n  const y = (random(h) + random(h)) / 2;\n  const sizesIndex = floor((random(sizes.length) + random(sizes.length)) / 2);\n  const rotationsIndex = floor(random(rotations.length));\n  const colorsIndex = floor(\n    min((random(colors.length), random(colors.length), random(colors.length)))\n  );\n\n  const myColor = colors[colorsIndex];\n  const strokeOrFill = random(1) < 0.3;\n\n  let fillColor = \"none\";\n  let strokeColor = \"none\";\n  if (strokeOrFill) {\n    strokeColor = myColor;\n  } else {\n    fillColor = myColor;\n  }\n\n  // console.log(x, y, sizes[sizesIndex], rotations[rotationsIndex], shape, shape == 'rectangle');\n  if (shape == \"triangle\") {\n    drawTriangle(\n      x,\n      y,\n      sizes[sizesIndex],\n      rotations[rotationsIndex],\n      fillColor,\n      strokeColor,\n      2\n    );\n  } else if (shape == \"rectangle\") {\n    drawRectangle(\n      x,\n      y,\n      sizes[sizesIndex],\n      rotations[rotationsIndex],\n      fillColor,\n      strokeColor,\n      2\n    );\n  }\n}\n\nfunction drawTriangle(cx, cy, size, rotation, myFill, myStroke, myStrokeWidth) {\n  push();\n  const scale = size;\n  translate(cx, cy);\n\n  rotate(180);\n  rotate(rotation);\n\n  const x1 = 0 - 0.5 * scale;\n  const x2 = 1 * scale - 0.5 * scale;\n  const x3 = 0.5 * scale - 0.5 * scale;\n  const y1 = 0 - 0.433 * scale;\n  const y2 = 0 - 0.433 * scale;\n  const y3 = 0.866 * scale - 0.433 * scale;\n\n  if (myFill == \"none\") {\n    noFill();\n  } else {\n    fill(myFill);\n  }\n  strokeWeight(myStrokeWidth);\n  if (myStroke == \"none\") {\n    noStroke();\n  } else {\n    stroke(myStroke);\n  }\n\n  triangle(x1, y1, x2, y2, x3, y3);\n  // Check center\n  // strokeWeight(10);\n  // stroke(255, 0, 0);\n  // point(0, 0);\n  pop();\n}\n\nfunction drawRectangle(\n  cx,\n  cy,\n  size,\n  rotation,\n  myFill,\n  myStroke,\n  myStrokeWidth\n) {\n  push();\n  translate(cx, cy);\n  rotate(rotation);\n  let height =\n    (random(size * 0.01, size * 0.1) + random(size * 0.01, size * 0.1)) / 3;\n  let width = size / height;\n  height *= 10;\n  width *= 10;\n\n  if (myFill == \"none\") {\n    noFill();\n  } else {\n    fill(myFill);\n  }\n  strokeWeight(myStrokeWidth);\n  if (myStroke == \"none\") {\n    noStroke();\n  } else {\n    stroke(myStroke);\n  }\n\n  rect(0, 0, height, width);\n  pop();\n}"
  },
  {
    "_id": "fsPahczMCSmHRv5xo",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-03-01T01:36:57.519Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge2",
    "code": "let frequency_Slider;\nlet amplitude_Slider;\nlet timespeed_Slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\t//first slider\n\tcreateP('Frequency');\n  frequency_Slider = createSlider(0, 10, 0);\n  frequency_Slider.position(0,335);\n\t//second slider\n\tcreateP('Amplitude');\n\tamplitude_Slider = createSlider(0, 100, 50);\n  amplitude_Slider.position(0,365);\n\t//third slider\n\tcreateP('Time Speed');\n\ttimespeed_Slider = createSlider(0,10,0);\n  timespeed_Slider.position(0,395);\n}\n\nfunction draw() {\n  background(0);\n\tellipseMode(CENTER);\n\tfill(255);\n\tnoStroke();\n\tnoiseDetail(1, .5);\n  // adding value into slider function\n\tlet amplitude = amplitude_Slider.value() ;\n\tlet speed = timespeed_Slider.value() ;\n  let frequency = frequency_Slider.value();\n\t \n  for (i = 0; i < 1; i += .02) {\n  let x = lerp(startX, endX, i);\n  let y = lerp(startY, endY, i);\n  //map on top so it works for all of the sliders  \n  let m = map(frequency, 0, 10, 0.01, 0.1); //adding in the slider values in order to function\n \n\tlet n =  noise(x*m + frameCount * -speed*0.01)\n  let offsetX = n * amplitude;\n\t// y-achses\n\tlet n1 = noise(y*m + frameCount * -speed*0.01) ;\n\tlet offsetY = n1 * amplitude;\n\n  ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n\t\n}"
  },
  {
    "_id": "fvpGkn8rN5vRiiK9P",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T01:10:14.74Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ilpzbs3tcru0cjx8tj6f",
        "version": 1553821904,
        "signature": "8b0d983cd76ea965da1e51f0b199f00b74163892",
        "width": 1332,
        "height": 1332,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:11:44Z",
        "tags": [],
        "bytes": 815267,
        "type": "upload",
        "etag": "c3ec5b0b343c3dae6ebed1d9bdd819da",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553821904/avalanche2019/ilpzbs3tcru0cjx8tj6f.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553821904/avalanche2019/ilpzbs3tcru0cjx8tj6f.png"
      },
      {
        "public_id": "avalanche2019/v2tmqkcwryolx44ub3zo",
        "version": 1553821908,
        "signature": "7b2bcbad41979fc035a71135884af1633c067d1d",
        "width": 1332,
        "height": 1332,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:11:48Z",
        "tags": [],
        "bytes": 910631,
        "type": "upload",
        "etag": "d53b5934db91967ee7f7d5b283c8196d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553821908/avalanche2019/v2tmqkcwryolx44ub3zo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553821908/avalanche2019/v2tmqkcwryolx44ub3zo.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T01:28:34.31Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T03:48:57.808Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T13:52:03.407Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T16:06:22.253Z" }
      }
    ],
    "title": "",
    "description": "paper.js > illustrator",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n// code from http://paperjs.org/examples/rounded-rectangles/\n\nvar mousePoint = view.center;\nvar amount = 100;\nvar colors = ['#D6C7E2'];\n\nvar bounds = new Rectangle(new Point(0, 0), new Point(1000, 1000));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#030B16';\n\nfor (var i = 0; i < amount; i++) {\n\tvar rect = new Rectangle([0, 0], [25, 25]);\n\trect.center = mousePoint;\n\tvar path = new Path.Rectangle(rect, 12);\n\tpath.strokeColor = colors[i % 2];\n\tpath.strokeWidth = 0.5;\n\tvar scale = (1 - i / amount) * 20;\n\tpath.scale(scale);\n}"
  },
  {
    "_id": "fvyMfKyov7nYS4w8L",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T04:09:48.634Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/stzvwl2dxa2eqbeoyjxd",
        "version": 1552622998,
        "signature": "c97bc8be6f07ca4e9f017332ea0bcece39dac0ff",
        "width": 956,
        "height": 970,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T04:09:58Z",
        "tags": [],
        "bytes": 770036,
        "type": "upload",
        "etag": "5150740f03daf13ddc81c5860d12f667",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552622998/avalanche2019/stzvwl2dxa2eqbeoyjxd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552622998/avalanche2019/stzvwl2dxa2eqbeoyjxd.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T04:41:34.156Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-03-15T13:28:55.289Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T16:34:06.098Z" }
      }
    ],
    "title": "",
    "description": "Turtle circles of turtles in a circle 🐢"
  },
  {
    "_id": "fyP9BtBXGjAeNPgoY",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T04:22:01.333Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/goyesu2qleq3evliiqdz",
        "version": 1554438466,
        "signature": "65b3485ef85b81254b3481c3d52c73b8856f5386",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T04:27:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 12893362,
        "type": "upload",
        "etag": "53a9aaf602eb4fb73de5129ca5169243",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554438466/avalanche2019/goyesu2qleq3evliiqdz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554438466/avalanche2019/goyesu2qleq3evliiqdz.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "10121086",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 10397872,
        "duration": 9.866667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qe04paj6hm0cwnrcg0hi",
        "version": 1554438479,
        "signature": "f36ddf6a9e7b238a753115d47f989aa7793226db",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T04:27:59Z",
        "tags": [],
        "bytes": 688003,
        "type": "upload",
        "etag": "bf706134b57f4b91d888ea9e9d9c74a5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554438479/avalanche2019/qe04paj6hm0cwnrcg0hi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554438479/avalanche2019/qe04paj6hm0cwnrcg0hi.png"
      },
      {
        "public_id": "avalanche2019/umalawb5otvymy6tpimt",
        "version": 1554438484,
        "signature": "36afcc8aa310ce5b7b1d66d341543b61dcda021b",
        "width": 1258,
        "height": 650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-05T04:28:04Z",
        "tags": [],
        "bytes": 118192,
        "type": "upload",
        "etag": "4dda561e22889c10ffba816675eb8987",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554438484/avalanche2019/umalawb5otvymy6tpimt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554438484/avalanche2019/umalawb5otvymy6tpimt.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T16:26:41.327Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a follow animation for CompForm logo, using cloners, shaders, and MoGraph tools in Cinema 4D. \nI have used After Effects for post-processing and video sharing.",
    "inspiration_name": "CompForm Follow Animation",
    "inspiration_url": "https://youtu.be/rF0Py5ynk3I"
  },
  {
    "_id": "fykHQC2fcn4m84ypR",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-25T02:10:09.546Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uvznbgtchihkmmdkh8eu",
        "version": 1553479821,
        "signature": "e8d31aaebd0134455f92ee47f590127501520e47",
        "width": 1424,
        "height": 1384,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-25T02:10:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 1915636,
        "type": "upload",
        "etag": "2fa835ea7cc6da76675b10e6ccc2ca2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553479821/avalanche2019/uvznbgtchihkmmdkh8eu.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553479821/avalanche2019/uvznbgtchihkmmdkh8eu.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1454493",
          "dar": "178:173"
        },
        "frame_rate": 60,
        "bit_rate": 1461852,
        "duration": 10.483333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Parameters",
    "title": "",
    "description": "Based on the x and y position of the  cursor you change the size of the inner rectangle and the color of the background"
  },
  {
    "_id": "g2LH8L2KPEubesZ3c",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T05:45:01.197Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/okeahcmkmt2qhw42h7x8",
        "version": 1549952235,
        "signature": "5bb3d242f04a7e6536152be6770db5fc9650d5b6",
        "width": 1524,
        "height": 1240,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-12T06:17:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 1573969,
        "type": "upload",
        "etag": "cdc4062cb2f32c4e68901dd8a8c36ff3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549952235/avalanche2019/okeahcmkmt2qhw42h7x8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549952235/avalanche2019/okeahcmkmt2qhw42h7x8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "284002",
          "dar": "381:310"
        },
        "frame_rate": 60,
        "bit_rate": 292943,
        "duration": 42.9835,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T14:33:01.2Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2019-02-12T14:33:02.967Z" }
      }
    ],
    "title": "",
    "description": "**\"Draw a small green circle in the top right corner.\"**\n\nAsks for natural language input, and returns a corresponding drawing. Can handle: a few shape types, a few positions on canvas, a few sizes, and several colors.\n\nCode is very messy and far from perfect (time!).",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n\n// canvas specs\nconst canvasWidth = 800,\n    canvasHeight = 700;\n\n// configurable variables\nlet hue = 60, // blue\n    saturation = 80,\n    brightness = 80,\n    colorSubstring,\n    shapeSubstring,\n    shapeSize = 100,\n    shapePos = {x: canvasWidth / 2, y: canvasWidth / 2};\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    drawInputControls();\n    noFill();\n\n    // defaults\n    rectMode(CENTER);\n}\n\nfunction draw() {\n    background(255);\n\n    // if we're reading a value from setColor, then use it\n    if (setColor()) {\n        fill(setColor())\n    } else {\n        fill(255);\n    }\n\n    // if we're reading a value for size, then use it\n    if (setSize()) {\n        if (\n            setSize() === \"gigantic\" ||\n            setSize() === \"huuuge\"\n        ) {\n            shapeSize = 400;\n        } else if (\n            setSize() === \"huge\" ||\n            setSize() === \"bigger\"\n        ) {\n            shapeSize = 300;\n        } else if (\n            setSize() === \"big\"\n        ) {\n            shapeSize = 200;\n        } else if (\n            setSize() === \"medium\"\n        ) {\n            shapeSize = 100;\n        } else if (\n            setSize() === \"small\"\n        ) {\n            shapeSize = 50;\n        } else if (\n            setSize() === \"tiny\" ||\n            setSize() === \"little\"\n        ) {\n            shapeSize = 10;\n        }\n    }\n\n    // if we're reading a value from setxPos, then use it\n    if (setXPos()) {\n        if (setXPos() === \"left\") {\n            shapePos.x = shapeSize / 2;\n        } else if (setXPos() === \"right\") {\n            shapePos.x = canvasWidth - shapeSize / 2 - 2; // hacky -2\n        } else if (\n            setXPos() === \"middle\" ||\n            setXPos() === \"center\"\n        ) {\n            shapePos.x = canvasWidth / 2, canvasHeight / 2;\n        }\n    }\n\n    // if we're reading a value from setyPos, then use it\n    if (setYPos()) {\n        if (\n            setYPos() === \"top\" ||\n            setYPos() === \"up\"\n            ) {\n            shapePos.y = shapeSize / 2;\n        } else if (\n            setYPos() === \"bottom\" ||\n            setYPos() === \"down\"\n            ) {\n            shapePos.y = canvasHeight - (shapeSize / 2); // hacky -2\n        }\n    }\n\n    // if we're reading a value from setShape, then use it\n    if (setShape()) {\n        // make the shape\n        if (\n            setShape() === \"rect\" ||\n            setShape() === \"rectangle\" ||\n            setShape() === \"square\" ||\n            setShape() === \"box\"\n        ) {\n            rect(shapePos.x, shapePos.y, shapeSize, shapeSize);\n        } else if (\n            setShape() === \"circle\" ||\n            setShape() === \"ellipse\"\n        ) {\n            ellipse(shapePos.x, shapePos.y, shapeSize, shapeSize);\n        } else if (\n            setShape() === \"triangle\"\n        ) {\n            triangle(\n                shapePos.x, shapePos.y - shapeSize / 2,\n                shapePos.x - shapeSize / 2, shapePos.y + shapeSize / 2,\n                shapePos.x + shapeSize / 2, shapePos.y + shapeSize / 2,\n            );\n        }\n    }\n}\n\n\nfunction drawInputControls() {\n    text = createP(\"Try phrases like 'make a blue circle', 'draw a little purple square'...\");\n    text.position(30, canvasHeight - 85);\n\n    input = createInput();\n    input.position(30, canvasHeight - 50);\n    input.class('inputbox');\n}\n\nfunction setColor() {\n    let string = input.value().toLowerCase(); // store text input from user\n    let colorSubstring;\n    \n    colors = [ // all colors this program recognizes\n        /red/,\n        /orange/,\n        /yellow/,\n        /green/,\n        /blue/,\n        /purple/,\n        /pink/,\n        /black/,\n        /brown/,\n        /teal/,\n        /maroon/,\n        /white/,\n        /gray/, /grey/\n    ];\n\n    // check if the string contains any color keywords\n    for (i = 0; i < colors.length; i++) {\n        let regex = colors[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            colorSubstring = match[0];\n            // fill(colorSubstring);\n        };\n    }\n    return colorSubstring;\n}\n\nfunction setShape() {\n    let string = input.value().toLowerCase(); // store text input from user\n    let shapeSubstring;\n    \n    shapes = [ // all shapes this program recognizes\n        /rectangle/, /rect/, /square/, /box/,\n        /ellipse/, /circle/,\n        /triangle/\n    ];\n\n    // check if the string contains any shape keywords\n    for (i = 0; i < shapes.length; i++) {\n        let regex = shapes[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            shapeSubstring = match[0];\n        };\n    }\n    return shapeSubstring;\n}\n\nfunction setSize() {\n    let string = input.value().toLowerCase(); // store text input from user\n    let sizeSubstring;\n    \n    sizes = [ // all sizes this program recognizes\n        /gigantic/, /huuuge/,\n        /huge/, \n        /big/, /bigger/, \n        /medium/,\n        /small/, /little/,\n        /tiny/\n    ];\n\n    // check if the string contains any size keywords\n    for (i = 0; i < sizes.length; i++) {\n        let regex = sizes[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            sizeSubstring = match[0];\n        };\n    }\n    return sizeSubstring;\n}\n\nfunction setXPos() {\n    let string = input.value().toLowerCase(); // store text input from user\n    let xPosSubstring;\n    \n    xPositions = [ // all sizes this program recognizes\n        /left/,\n        /right/,\n        /middle/,\n        /center/\n    ];\n\n    // check if the string contains any xpos keywords\n    for (i = 0; i < xPositions.length; i++) {\n        let regex = xPositions[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            xPosSubstring = match[0];\n        };\n    }\n    return xPosSubstring;\n}\n\nfunction setYPos() {\n    let string = input.value().toLowerCase(); // store text input from user\n    let yPosSubstring;\n    \n    yPositions = [ // all sizes this program recognizes\n        /bottom/, /down/,\n        /top/, /up/, \n        /center/,\n        /middle/\n    ];\n\n    // check if the string contains any ypos keywords\n    for (i = 0; i < yPositions.length; i++) {\n        let regex = yPositions[i];\n\n        // if a match is found\n        if (regex.test(string) === true) {\n            match = string.match(regex);\n            yPosSubstring = match[0];\n        };\n    }\n    return yPosSubstring;\n}"
  },
  {
    "_id": "g2nYGyj5CxSFW5xW3",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T03:15:18.502Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fxc6grx7lrnaboriumb3",
        "version": 1556853461,
        "signature": "40f65fb71cf9dc4fa6ade7c675e109e4a9f55f11",
        "width": 1090,
        "height": 790,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T03:17:41Z",
        "tags": [],
        "bytes": 73617,
        "type": "upload",
        "etag": "f78d3427465ba5f9495ff9bbd52c566e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556853461/avalanche2019/fxc6grx7lrnaboriumb3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556853461/avalanche2019/fxc6grx7lrnaboriumb3.png"
      },
      {
        "public_id": "avalanche2019/cbqbhd2pgpbcp7aaap3j",
        "version": 1556853465,
        "signature": "3316ff8405d6a20de658f59aba0889e78939e527",
        "width": 996,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T03:17:45Z",
        "tags": [],
        "bytes": 70828,
        "type": "upload",
        "etag": "cf3e797733dd2bdf29eb16469ef26704",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556853465/avalanche2019/cbqbhd2pgpbcp7aaap3j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556853465/avalanche2019/cbqbhd2pgpbcp7aaap3j.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Ferris wheel",
    "code": "$fn=300;\n\ncylinder(h=80, r=1, center=true);\nrotate([0,36,0])cylinder(h=80, r=1, center=true);\nrotate([0,72,0])cylinder(h=80, r=1, center=true);\nrotate([0,108,0])cylinder(h=80, r=1, center=true);\nrotate([0,144,0])cylinder(h=80, r=1, center=true);\n\ncolor(\"pink\"){\ntranslate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightgreen\"){\nrotate([0,36,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightblue\"){\nrotate([0,72,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"pink\"){\nrotate([0,108,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightgreen\"){\nrotate([0,144,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightblue\"){\nrotate([0,180,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"pink\"){\nrotate([0,216,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightgreen\"){\nrotate([0,252,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightblue\"){\nrotate([0,288,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightgreen\"){\nrotate([0,324,0])translate([0,0,40])cube([10,5,25],true);\n}\n\ncolor(\"lightyellow\"){\nsphere(5);\n     translate([0,20,-20])  cylinder(h=50, r=10, center=true);\n     rotate([90,0,0])translate([0,0,-10])  cylinder(h=20, r=2, center=true);\n  translate([0,20,-80])   cylinder(h=50, r1=20, r2=10, center=false);\n}"
  },
  {
    "_id": "g9dWhjAHTYWApT8jm",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-04-01T14:51:16.48Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kkb1pjexih0fx43yc4pu",
        "version": 1554130293,
        "signature": "50c1169119bdeaf044db25bfca5c6c33eb401f72",
        "width": 1584,
        "height": 2448,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-01T14:51:33Z",
        "tags": [],
        "bytes": 1741371,
        "type": "upload",
        "etag": "ce00cbf2810e5f6b8b16f794c891a431",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554130293/avalanche2019/kkb1pjexih0fx43yc4pu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554130293/avalanche2019/kkb1pjexih0fx43yc4pu.jpg"
      },
      {
        "public_id": "avalanche2019/slltnxaje8umq521vlnk",
        "version": 1554130302,
        "signature": "473c741be9e3befd029e5eb4b599fbd700f0de44",
        "width": 1584,
        "height": 2448,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-01T14:51:42Z",
        "tags": [],
        "bytes": 1595605,
        "type": "upload",
        "etag": "7acd2d982db5cf47e4e3ce8f71cf9a0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554130302/avalanche2019/slltnxaje8umq521vlnk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554130302/avalanche2019/slltnxaje8umq521vlnk.jpg"
      },
      {
        "public_id": "avalanche2019/ylypxkvyf0gm2fwydgkk",
        "version": 1554130314,
        "signature": "6bd4e915aec78349101c9882801922f43cb591a9",
        "width": 6601,
        "height": 10200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-01T14:51:54Z",
        "tags": [],
        "bytes": 1855668,
        "type": "upload",
        "etag": "a1c9ee611320bcc26ac1975172ccc0b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554130314/avalanche2019/ylypxkvyf0gm2fwydgkk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554130314/avalanche2019/ylypxkvyf0gm2fwydgkk.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "I have created more versions using the computationally generated website background. \nThe idea is to reflect the impact of advertisement on the addiction of smoking and the outlook for women.",
    "inspiration_name": "Poster Design Background"
  },
  {
    "_id": "gFn8JTp7hxX7TtXQ9",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T13:04:56.358Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aywe8jnmeo2pgzktbeot",
        "version": 1553864706,
        "signature": "72afda1b4991189dbfa4110c84d9ad9362eafb5c",
        "width": 778,
        "height": 966,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T13:05:06Z",
        "tags": [],
        "bytes": 86621,
        "type": "upload",
        "etag": "5a8a46e188da72c3bc5a3f87051985e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864706/avalanche2019/aywe8jnmeo2pgzktbeot.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864706/avalanche2019/aywe8jnmeo2pgzktbeot.png"
      },
      {
        "public_id": "avalanche2019/acfrtqsmvjczjligncvp",
        "version": 1553864711,
        "signature": "d8481cb50a70ce32da436550bf11b32d5c6658a8",
        "width": 838,
        "height": 1008,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T13:05:11Z",
        "tags": [],
        "bytes": 182039,
        "type": "upload",
        "etag": "3ffdba1b8f74e0138b779b24df859c23",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864711/avalanche2019/acfrtqsmvjczjligncvp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864711/avalanche2019/acfrtqsmvjczjligncvp.png"
      },
      {
        "public_id": "avalanche2019/gkolscdo8z8tnhxgmwkl",
        "version": 1553864715,
        "signature": "578cb8e22ea94d85f72e07b78ada0efa5c3d34df",
        "width": 588,
        "height": 728,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T13:05:15Z",
        "tags": [],
        "bytes": 146533,
        "type": "upload",
        "etag": "32cc7231c51ef6d0005fb9b5f4246520",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553864715/avalanche2019/gkolscdo8z8tnhxgmwkl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553864715/avalanche2019/gkolscdo8z8tnhxgmwkl.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Blobs used for poster - IN PROGRESS screenshots",
    "inspiration_name": "Braulio Amado",
    "inspiration_url": "https://badbadbadbad.com/"
  },
  {
    "_id": "gKFRLzDnv2oGYnoko",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-30T23:49:53.587Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gx7ywb9f2obdx6o4mncg",
        "version": 1548892486,
        "signature": "a7c16c351ece9b731ac95fa66a7a571a01daacfe",
        "width": 500,
        "height": 430,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-30T23:54:46Z",
        "tags": [],
        "bytes": 66188,
        "type": "upload",
        "etag": "681783f4f639f418945a18748c6107b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548892486/avalanche2019/gx7ywb9f2obdx6o4mncg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548892486/avalanche2019/gx7ywb9f2obdx6o4mncg.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:46.521Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:00.322Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:22.558Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:21.093Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:44.244Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:17:50.482Z" }
      }
    ],
    "title": "",
    "description": "Bauhaus type - IL",
    "inspiration_name": "jon"
  },
  {
    "_id": "gLW4mG5sHbgGNZkHn",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T03:25:29.112Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dwf0ogahvtuqligtn5mf",
        "version": 1549596334,
        "signature": "d69ce4969e595aa7af0577661c03e4e447c85a18",
        "width": 994,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T03:25:34Z",
        "tags": [],
        "bytes": 37614,
        "type": "upload",
        "etag": "a54f3ef408b4baa7d0d470128232ee7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549596334/avalanche2019/dwf0ogahvtuqligtn5mf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549596334/avalanche2019/dwf0ogahvtuqligtn5mf.png"
      },
      {
        "public_id": "avalanche2019/ksw96elduapmoh18zn4a",
        "version": 1549596343,
        "signature": "b16da3a2a964f74d5e6059e1d121ab822c81e00a",
        "width": 990,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T03:25:43Z",
        "tags": [],
        "bytes": 33556,
        "type": "upload",
        "etag": "12f959aabde0f1f6b224ee59a0094e72",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549596343/avalanche2019/ksw96elduapmoh18zn4a.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549596343/avalanche2019/ksw96elduapmoh18zn4a.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T03:47:21.225Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-02-08T05:07:56.584Z" }
      }
    ],
    "title": "",
    "description": "Confettiiiiiiii",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nwindow.setup = function(){\ncreateCanvas(500, 500, WEBGL);\n}\n\nwindow.draw = function(){\nbackground(\"#131921\");\nsmooth();\nnoStroke();\nfor (let i =0; i < 30 ; i++){\n  var r = random(200);\n  var g = random (13);\n  var b = random (1000);\n  fill(r,g,b,200);\n  rotateX(frameCount * i * 0.0009);\n  rotateY(frameCount * i * -0.0009);\n  rotateZ(frameCount * i * -0.0004);\n  rect(250, 200, 40, 40);\n  }\n}"
  },
  {
    "_id": "gNMyJTLi3A9wbbdE4",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T15:44:25.6Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ions8b81ls2oezdfqzjl",
        "version": 1556811884,
        "signature": "255c06d5ca90400d8bc1be067cf8f0821c63b655",
        "width": 2874,
        "height": 1752,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-02T15:44:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 11502854,
        "type": "upload",
        "etag": "aa092e9ac501e430e787a5e502d14cb7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556811884/avalanche2019/ions8b81ls2oezdfqzjl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556811884/avalanche2019/ions8b81ls2oezdfqzjl.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "10217090",
          "dar": "479:292"
        },
        "frame_rate": 60,
        "bit_rate": 10227410,
        "duration": 8.997667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Progress update: rocky base to a castle. Parametric control + some randomness generates a new rocky base each run."
  },
  {
    "_id": "gSTJkSz4rQHDtLm6o",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T00:37:22.158Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/idleog5npoud0dylajjz",
        "version": 1556843848,
        "signature": "2f61f752431d0b219aa996e77431c5a5afb66bc0",
        "width": 1396,
        "height": 1256,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T00:37:28Z",
        "tags": [],
        "bytes": 1396901,
        "type": "upload",
        "etag": "e84095794e9aafeeeb542ff51b18ad65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556843848/avalanche2019/idleog5npoud0dylajjz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556843848/avalanche2019/idleog5npoud0dylajjz.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Render from Maya (Rabbit soft-release pen)"
  },
  {
    "_id": "gTusK2zLSLma4gNop",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T19:00:41.329Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kjkudyu07dpvhcu0wjb3",
        "version": 1553886058,
        "signature": "c5be5feff0254a8d3a17040d468612d696b3182a",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:00:58Z",
        "tags": [],
        "bytes": 1050710,
        "type": "upload",
        "etag": "bab9edfd2c57e2aa1de303a064282af4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553886058/avalanche2019/kjkudyu07dpvhcu0wjb3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553886058/avalanche2019/kjkudyu07dpvhcu0wjb3.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Class poster print out"
  },
  {
    "_id": "gZtvwKR8wP4uEemAj",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T03:47:00.071Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/duluaqycdakrvcolazjf",
        "version": 1548906748,
        "signature": "ab82205092b832064821dfed42968e8a9f1c8b46",
        "width": 2880,
        "height": 1434,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-01-31T03:52:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 6659615,
        "type": "upload",
        "etag": "3dc0c7b5eb013f41ba3ac173d2763e40",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548906748/avalanche2019/duluaqycdakrvcolazjf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548906748/avalanche2019/duluaqycdakrvcolazjf.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "77384",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "5926069",
          "dar": "480:239"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 6008674,
        "duration": 8.866667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ygmrphkdsoo6sxcyyxm2",
        "version": 1548906753,
        "signature": "a26c2ea495d853f148bb9bd468fce05bfb5222aa",
        "width": 2166,
        "height": 1444,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T03:52:33Z",
        "tags": [],
        "bytes": 137337,
        "type": "upload",
        "etag": "586df413bb967a0fc4cefb61fd6d5657",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548906753/avalanche2019/ygmrphkdsoo6sxcyyxm2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548906753/avalanche2019/ygmrphkdsoo6sxcyyxm2.png"
      },
      {
        "public_id": "avalanche2019/l8fs74jhvni32xvgj5cn",
        "version": 1548906760,
        "signature": "20471703b6f9be2988f09db6c970f9a8a730e6fd",
        "width": 2342,
        "height": 1386,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T03:52:40Z",
        "tags": [],
        "bytes": 1901810,
        "type": "upload",
        "etag": "b5b29beaf8547f92329c43c51ce05be4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548906760/avalanche2019/l8fs74jhvni32xvgj5cn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548906760/avalanche2019/l8fs74jhvni32xvgj5cn.png"
      }
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:59.518Z" }
      }
    ],
    "title": "",
    "description": "A ball breaks free from a canvas and causes chaos\n---\n\n```made with p5.js```",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nconst canvasX = innerWidth;\nconst canvasY = innerHeight;\nlet cols = 50;\nlet rows = 50;\nlet x2 = canvasX / 2 + 15;\nlet y2 = canvasY / 2 + 15;\nconst directions = [\"left\", \"right\", \"up\", \"down\"];\n\n// make2D array function code snippet from The Coding Train Tutorial\n// https://www.youtube.com/watch?v=OTNpiLUSiB4\nfunction make2Darray(cols, rows) {\n  let arr = new Array(cols);\n  arr.forEach(el => {\n    arr[el] = new Array(rows);\n  });\n  return arr;\n}\n\nfunction setup() {\n  createCanvas(canvasX, canvasY);\n  colors = make2Darray(cols, rows);\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * 30;\n      let y = j * 30;\n      fill(random(0, 125));\n      rect(x, y, 30, 30);\n    }\n  }\n}\n\nfunction draw() {\n  frameRate(10);\n  drawSelf();\n  updateSelf();\n}\n\nfunction updateSelf() {\n  // randomDirection code snippet from Chris Coyier / CSS Tricks\n  let randomDirection =\n    directions[Math.floor(Math.random() * directions.length)];\n\n  if (x2 < 0 || x2 > canvasX || y2 < 0 || y2 > canvasY) {\n    console.log(\"winner!\");\n\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        let x = i * 30;\n        let y = j * 30;\n\n        fill(random(0, 255), random(0, 255), random(0, 255), random(0, 255));\n        stroke(random(0, 255), random(0, 255), random(0, 255), random(0, 255));\n        rect(x, y, random(0, 30), random(0, 30));\n      }\n    }\n  } else {\n    if (randomDirection === \"left\") {\n      x2 = x2 - 30;\n    } else if (randomDirection === \"right\") {\n      x2 = x2 + 30;\n    } else if (randomDirection === \"up\") {\n      y2 = y2 + 30;\n    } else if (randomDirection === \"down\") {\n      y2 = y2 - 30;\n    }\n  }\n}\n\nfunction drawSelf() {\n  fill(random(100, 255), 10, 10);\n  ellipse(x2, y2, 15);\n}"
  },
  {
    "_id": "gg8z5C57A7xDf59eB",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-25T22:03:15.301Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mlizpcaiyymiohv5xsil",
        "version": 1556231472,
        "signature": "23c31b6ddcb2eb9286e8e36f30a156ad368cb630",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-25T22:31:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 15301405,
        "type": "upload",
        "etag": "06740017b9c5ace46c03191d3f9fdced",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556231472/avalanche2019/mlizpcaiyymiohv5xsil.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556231472/avalanche2019/mlizpcaiyymiohv5xsil.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "27951184",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 30572237,
        "duration": 4.004,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Slow progress towards being able to control a sequence of notes and coordinate them with the visual... original idea was more complicated than I anticipated!"
  },
  {
    "_id": "gi89v5pwxySzLqXA8",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T02:17:55.348Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dks475pua9wnoganmqvl",
        "version": 1555640285,
        "signature": "b02b89b5a31dacdc99a9cc379bf19adf3300049a",
        "width": 1590,
        "height": 804,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T02:18:05Z",
        "tags": [],
        "bytes": 57543,
        "type": "upload",
        "etag": "dd55da81e6710235d71aa48df2ed67f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555640285/avalanche2019/dks475pua9wnoganmqvl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555640285/avalanche2019/dks475pua9wnoganmqvl.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "trying to transform my sketch from processing to p5, lots of issues and realized my p5 versioning was broken, finally go tome sound to play after a few hours .. better luck in next sketch"
  },
  {
    "_id": "giRcHgnGmzwpSPaat",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T01:00:34.993Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qphjutgyh6og1bkyxqps",
        "version": 1556240451,
        "signature": "ddf2b852bd2c9f7660ddb06cc236373d996027b7",
        "width": 1086,
        "height": 1172,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-26T01:00:51Z",
        "tags": [],
        "bytes": 84946,
        "type": "upload",
        "etag": "780910079f85f0f2bde9dd6d15fd4a05",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556240451/avalanche2019/qphjutgyh6og1bkyxqps.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556240451/avalanche2019/qphjutgyh6og1bkyxqps.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T12:37:04.064Z" }
      }
    ],
    "title": "",
    "description": "check your note listening abilities ! Right arrow to hear a note and press the button you think it is",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n//require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\nconst synth = new Tone.Synth({\n    oscillator: {\n        type: 'fatsquare', // sine, square, triangle, sawtooth, fat*\n    },\n    envelope: {\n        attack: 0.1,\n        decay: 0.1,\n        sustain: 0.5,\n        release: 1,\n    },\n});\n// Connect to the speakers.\nsynth.toMaster();\nconst possibleNotes = [\"A4\", \"B4\", \"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"a4\", \"b4\", \"c4\", \"d4\", \"e4\", \"f4\", \"g4\"];\nvar currentNote;\nvar gameScore = 0;\n// window.onmousedown = () => {\n//     // Play the melody!\n//     var note = randomNote();\n//     console.log(note)\n//     play(note);\n\n// }\n\nfunction keyPressed() {\n    if (keyCode === RIGHT_ARROW) {\n        currentNote = randomNote();\n        // print(currentNote);\n        play(currentNote);\n    }\n}\n\nvar A, B, C, D, E, F, G, a, b, c, d, e, f, g;\nvar buttons = [];\nvar guess;\nconst title = document.createElement('h1');\ntitle.style = \"font-size: 30px;font-family: futura; line-height: 1.5;\";\ntitle.textContent = \"Guess The Note\";\nconst instruct1 = document.createElement('h2');\ninstruct1.style = \"font-size: 20px;font-family: futura;color: grey;  line-height: 1.5;\";\ninstruct1.textContent = \"Press Right Arrow for a Note\";\nconst instruct2 = document.createElement('h2');\ninstruct2.style = \"font-size: 20px;font-family: futura;color: grey;  line-height: 1.5;\";\ninstruct2.textContent = \"Guess the note by pressing the button\";\ndocument.body.insertAdjacentElement(\"beforeend\", title);\ndocument.body.insertAdjacentElement(\"beforeend\", instruct1);\ndocument.body.insertAdjacentElement(\"beforeend\", instruct2);\n\n\nfunction setup() {\n    var pos = {\n        x: 20,\n        y: 250\n    };\n    buttons[0] = createButton(\"A#\", \"A4\");\n    buttons[0].position(pos.x, pos.y);\n    buttons[1] = createButton(\"B#\", \"B4\");\n    buttons[1].position(pos.x + 30, pos.y);\n    buttons[2] = createButton(\"C#\", \"C4\");\n    buttons[2].position(pos.x + 60, pos.y);\n    buttons[3] = createButton(\"D#\", \"D4\");\n    buttons[3].position(pos.x + 90, pos.y);\n    buttons[4] = createButton(\"E#\", \"E4\");\n    buttons[4].position(pos.x + 120, pos.y);\n    buttons[5] = createButton(\"F#\", \"F4\");\n    buttons[5].position(pos.x + 150, pos.y);\n    buttons[6] = createButton(\"G#\", \"G4\");\n    buttons[6].position(pos.x + 180, pos.y);\n    buttons[7] = createButton(\"a\", \"a4\");\n    buttons[7].position(pos.x + 210, pos.y);\n    buttons[8] = createButton(\"b\", \"b4\");\n    buttons[8].position(pos.x + 235, pos.y);\n    buttons[9] = createButton(\"c\", \"c4\");\n    buttons[9].position(pos.x + 265, pos.y);\n    buttons[10] = createButton(\"d\", \"d4\");\n    buttons[10].position(pos.x + 290, pos.y);\n    buttons[11] = createButton(\"e\", \"e4\");\n    buttons[11].position(pos.x + 315, pos.y);\n    buttons[12] = createButton(\"f\", \"f4\");\n    buttons[12].position(pos.x + 340, pos.y);\n    buttons[13] = createButton(\"g\", \"g4\");\n    buttons[13].position(pos.x + 365, pos.y);\n\n    // button.position(19, 19);\n    for (let i = 0; i < buttons.length; i++) {\n        // guess = buttons[i].value(); \n        // buttons[i].mousePressed(buttonSelected);\n        buttons[i].mousePressed(() => {\n            // print(buttons[i].value()); \n            guess = buttons[i].value();\n            // print(\"current Note \" + currentNote);\n            // print(\"guess \" + guess);\n            if (currentNote == guess) {\n\n                gameScore++;\n                // print(gameScore);\n                let score = document.getElementById(\"score\");\n                score.innerHTML = \"Score: \" + gameScore;\n                let right = document.getElementById(\"right\");\n                right.innerHTML = \"you were right!!!!\";\n                // score.textContent = \"Score: \" + gameScore;\n            } else {\n                let right = document.getElementById(\"right\");\n                right.innerHTML = \"WRONG\";\n            }\n        });\n    }\n    const score = document.createElement('h2');\n    score.style = \"font-size: 20px;font-family: futura;color: grey;  line-height: 1.5;\";\n    score.textContent = \"Score: \" + gameScore;\n    score.setAttribute(\"id\", \"score\");\n    document.body.insertAdjacentElement(\"beforeend\", score);\n    const right = document.createElement('h3');\n    right.textContent = \"\";\n    right.setAttribute(\"id\", \"right\");\n    right.style = \"font-size: 20px;font-family: futura;color: grey;  line-height: 1.5;\";\n    document.body.insertAdjacentElement(\"beforeend\", right);\n\n}\n\n\nfunction play(melody) {\n    let t = Tone.now();\n    let length = \"1n\";\n    // for (const note of melody) {\n    //     if (note !== 'rest') {\n    // synth.triggerAttackRelease(note[0], note[1]), t);\n    synth.triggerAttackRelease(melody, Tone.Time(length));\n    // }\n    t += Tone.Time(length);\n}\n\n\nfunction randomNote() {\n    // console.log(gotNotes.length);\n    const index = Math.floor(Math.random() * possibleNotes.length);\n    var note = possibleNotes[index];\n    return note;\n}"
  },
  {
    "_id": "giYCpJW8ouXxPQumT",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-22T17:05:38.509Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qogkxgiglrebui7nee01",
        "version": 1550855160,
        "signature": "a6104ec720d9b73b73ae0629eb7ce69ee7c746e5",
        "width": 784,
        "height": 788,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T17:06:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 1990078,
        "type": "upload",
        "etag": "8d827b356016cd5237b8cb1cde803e3d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550855160/avalanche2019/qogkxgiglrebui7nee01.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550855160/avalanche2019/qogkxgiglrebui7nee01.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "308684",
          "dar": "196:197"
        },
        "frame_rate": 60,
        "bit_rate": 315155,
        "duration": 50.516667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "faces"
  },
  {
    "_id": "gjw247uRkhjddi4cC",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-30T23:04:14.185Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/o4vnmdgod1k7vbqbtogd",
        "version": 1556665462,
        "signature": "a09a24cb08cb65fe4b778bb37689588fcc54d88b",
        "width": 694,
        "height": 838,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-30T23:04:22Z",
        "tags": [],
        "bytes": 47809,
        "type": "upload",
        "etag": "b77551be9274b2a6c18b875254e35ae2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556665462/avalanche2019/o4vnmdgod1k7vbqbtogd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556665462/avalanche2019/o4vnmdgod1k7vbqbtogd.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "gkxkBbDnAbXkJK4GJ",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-03-01T05:24:57.965Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hmmyftcv2yxxahcl5gtu",
        "version": 1551423918,
        "signature": "7bcf88f911b240098f1eb3621ecf5d244b5449dd",
        "width": 996,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T07:05:18Z",
        "tags": [],
        "bytes": 56648,
        "type": "upload",
        "etag": "f7d222d1c4130fde0dd8a4a2a96341c0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551423918/avalanche2019/hmmyftcv2yxxahcl5gtu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551423918/avalanche2019/hmmyftcv2yxxahcl5gtu.png"
      },
      {
        "public_id": "avalanche2019/rpzfxkeickuldcwghytj",
        "version": 1551423923,
        "signature": "4a0b7fc657e40552d8968409ae0b0f597e19509f",
        "width": 996,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T07:05:23Z",
        "tags": [],
        "bytes": 50018,
        "type": "upload",
        "etag": "4ac48c5593d3db967f598855a6df60f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551423923/avalanche2019/rpzfxkeickuldcwghytj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551423923/avalanche2019/rpzfxkeickuldcwghytj.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "the code is from class activity (Point Placing Demo), canvas updates on click",
    "inspiration_name": "noise cull dithered",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// code from Point Placing Demo activity in class http://compform.net/strategy/\n\nvar POINT_COUNT = 500;\nvar SHAPE_SIZE = 40;\n\nfunction setup() {\n    createCanvas(500,500);\n    noStroke();\n    fill(250);\n    rectMode(CENTER);\n}\n\nfunction draw() {\n\n    background(255, 58, 58);\n    points = noiseCull(placePointsGrid(sqrt(POINT_COUNT), width, height), .4, .3, .3);\n    drawPoints(points);\n\n    noLoop();\n\n}\n\nfunction drawPoints(points) {\n    for (var i = 0; i < points.length; i++) {\n        var x = points[i].x;\n        var y = points[i].y;\n\n        rect(x, y, SHAPE_SIZE, SHAPE_SIZE);\n    }\n}\n\nfunction noiseCull(inPoints, frequency, threshold, dither) {\n    var outPoints = [];\n\n    for (var i = 0; i < inPoints.length; i++) {\n        var p = inPoints[i];\n\n        if (noise(p.x * frequency, p.y * frequency) < threshold + random() * dither) {\n            outPoints.push(p);\n        }\n    }\n\n    return outPoints;\n}\n\nfunction placePointsGrid(grid_size, w, h) {\n    var points = [];\n\n    for (var y = 0; y < grid_size; y++) {\n        for (var x = 0; x < grid_size; x++) {\n            points.push({\n                x: (x + .5) / grid_size * w,\n                y: (y + .5) / grid_size * h,\n            });\n        }\n    }\n\n    return points;\n}\n\nfunction mousePressed() {\n  redraw();\n}"
  },
  {
    "_id": "goziS3sgMihjFtevF",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T15:03:42.656Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hm3kh9xzqrsugfcjzewh",
        "version": 1550243028,
        "signature": "04f1021868246e30d1f6844be8bb6bfe61503efa",
        "width": 512,
        "height": 472,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T15:03:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 468674,
        "type": "upload",
        "etag": "1adc03b97e150330067b349a5fff28c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550243028/avalanche2019/hm3kh9xzqrsugfcjzewh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550243028/avalanche2019/hm3kh9xzqrsugfcjzewh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "122882",
          "dar": "64:59"
        },
        "frame_rate": 60,
        "bit_rate": 129587,
        "duration": 28.933333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "grHiWsbKc7CDiXnhc",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-17T23:24:47.291Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xllbmvp5zjvuofrtejq4",
        "version": 1552873119,
        "signature": "1f5e6f4abde177123d77aff3ec98f455a5f1ce52",
        "width": 2000,
        "height": 2000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-18T01:38:39Z",
        "tags": [],
        "bytes": 2188220,
        "type": "upload",
        "etag": "dcebb41b5540088bfd905a6e2c3efb30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552873119/avalanche2019/xllbmvp5zjvuofrtejq4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552873119/avalanche2019/xllbmvp5zjvuofrtejq4.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-19T09:56:50.205Z" }
      }
    ],
    "title": "",
    "description": "Vectors!",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar width = 1000;\nvar height = 1000;\nvar cluster_count = 100;\nvar cluster_radius = 120;\nvar dot_count = 60;\nvar dot_radius = 18;\n\n// var clusters = [];\n\ncreateClusters();\n\nfunction createClusters() {\n  var cluster_points = [];\n  var i;\n  for (i = 0; i < cluster_count; i++) {\n    cluster_points.push(\n      new Point(randomRange(0, width), randomRange(0, height))\n    );\n  }\n  relaxPoints(\n    cluster_points,\n    cluster_radius * 1.5,\n    false,\n    cluster_radius * 0.1,\n    10\n  );\n  for (i = 0; i < cluster_points.length; i++) {\n    var point = cluster_points[i];\n    createCluster(point);\n  }\n}\n\nfunction createCluster(cluster_point) {\n  var dot_points = [];\n  var i;\n  for (i = 0; i < dot_count; i++) {\n    // console.log(cluster_point, cluster_point + randomPoint * cluster_radius);\n    dot_points.push(randomPoint() * cluster_radius * 0.5);\n  }\n  relaxPoints(dot_points, dot_radius * 1.4, 0, dot_radius * 0.1, 100);\n  dot_points.sort(function(a, b) {\n    return a.length < b.length ? 1 : -1;\n  });\n  for (i = 0; i < dot_points.length; i++) {\n    var plant_point = dot_points[i];\n    createPlant(cluster_point, plant_point);\n  }\n}\n\nfunction createPlant(cluster_point, plant_point, tint) {\n  var path = new Path.Circle(cluster_point + plant_point, dot_radius);\n  tint = Math.min(randomRange(0, 0.05), randomRange(0, 0.05));\n  path.style = {\n    fillColor: new Color(1 - tint, 1 - tint, 1 - tint),\n    shadowColor: new Color(0, 0, 0, 0.3),\n    shadowBlur: 16,\n    shadowOffset: new Point(randomRange(-2, 2), randomRange(0.5, 2))\n  };\n}\n\nfunction randomRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction randomPoint() {\n  return new Point(randomRange(-1, 1), randomRange(-1, 1));\n}\n\nfunction relaxPoints(points, min, max, stepSize, steps) {\n  min = min * min;\n  max = max * max;\n  for (step = 0; step < steps; step++) {\n    for (i1 = 0; i1 < points.length; i1++) {\n      for (i2 = 0; i2 < points.length; i2++) {\n        if (i1 === i2) continue;\n        p1 = points[i1];\n        p2 = points[i2];\n        var n = (p1 - p2).normalize();\n        var dist = p1.getDistance(p2, true);\n        if (dist < min) {\n          p1 = p1 + n * stepSize;\n          p2 = p2 - n * stepSize;\n        }\n        if (max && dist > max) {\n          p1 = p1 - n * stepSize;\n          p2 = p2 + n * stepSize;\n        }\n        points[i1] = p1;\n        points[i2] = p2;\n      }\n    }\n  }\n}"
  },
  {
    "_id": "gvpwFQRkFxv8DEpXw",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Animation",
    "created_at": { "$date": "2019-03-31T18:08:08.152Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xvnygx05xuknmzahelsg",
        "version": 1554055701,
        "signature": "079c5ecee2e6272454048f9b87a11b85c70e5e21",
        "width": 5400,
        "height": 3600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-31T18:08:21Z",
        "tags": [],
        "bytes": 1037425,
        "type": "upload",
        "etag": "d50827e67ef2ffdbb786d0d24886c37f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554055701/avalanche2019/xvnygx05xuknmzahelsg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554055701/avalanche2019/xvnygx05xuknmzahelsg.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Step one: Just finished my background for the CompForm bumper! With 372189 steps to come."
  },
  {
    "_id": "gx3haWwST965cEH8s",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T04:54:37.35Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pp1oev5xywlmybau1fci",
        "version": 1550206658,
        "signature": "ba81191da16a268aea273177e728fb5eeabb689f",
        "width": 1096,
        "height": 1276,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-15T04:57:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 862788,
        "type": "upload",
        "etag": "3c662870f142c293f3ec579742003dd6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550206658/avalanche2019/pp1oev5xywlmybau1fci.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550206658/avalanche2019/pp1oev5xywlmybau1fci.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "454479",
          "dar": "274:319"
        },
        "frame_rate": 60,
        "bit_rate": 460644,
        "duration": 14.983984,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-16T15:07:12.678Z" }
      }
    ],
    "title": "",
    "description": "Entropy"
  },
  {
    "_id": "gxR4fLEmfBXMA5brm",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T01:30:12.637Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wtn2k4ldeg4sufsbhuc5",
        "version": 1552613420,
        "signature": "2bcc54bc9ae923a4615f9572aee5dd9fff1b608e",
        "width": 938,
        "height": 956,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T01:30:20Z",
        "tags": [],
        "bytes": 136854,
        "type": "upload",
        "etag": "d0acd9a239edaebc05c15bdc4c5044ff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552613420/avalanche2019/wtn2k4ldeg4sufsbhuc5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552613420/avalanche2019/wtn2k4ldeg4sufsbhuc5.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:04:55.453Z" }
      }
    ],
    "title": "",
    "description": "A simple dandelion ?"
  },
  {
    "_id": "gyisstxtQtdPcWPFQ",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T16:41:03.054Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bj1t6vb0glpzjnxdrhsf",
        "version": 1557506467,
        "signature": "b0d37ee2a19a138e5da4759e8032f07599d31ed1",
        "width": 836,
        "height": 984,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T16:41:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 329635,
        "type": "upload",
        "etag": "af67ec5a73bdb1e9f42f864ef7c229fd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557506467/avalanche2019/bj1t6vb0glpzjnxdrhsf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557506467/avalanche2019/bj1t6vb0glpzjnxdrhsf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "233153",
          "dar": "209:246"
        },
        "frame_rate": 60,
        "bit_rate": 260067,
        "duration": 10.14,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T17:06:21.401Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T17:06:22.617Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T17:17:50.759Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T23:04:42.732Z" }
      }
    ],
    "title": "",
    "description": "dodge em finals"
  },
  {
    "_id": "gzS2CtMJKuXk22zBk",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-03T20:44:45.176Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/best0e7eoxglics9ymcy",
        "version": 1549226742,
        "signature": "b404a7d38359da9fa6d3b578fe65b5d7b98c17a0",
        "width": 1768,
        "height": 1336,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-03T20:45:42Z",
        "tags": [],
        "bytes": 2703590,
        "type": "upload",
        "etag": "e30b9e8d4188847306f6e5c1dcf7ada2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549226742/avalanche2019/best0e7eoxglics9ymcy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549226742/avalanche2019/best0e7eoxglics9ymcy.png"
      },
      {
        "public_id": "avalanche2019/hnkpxpbfvqcacrxg0rrk",
        "version": 1549226748,
        "signature": "88913b978c34aed2f39e75bdf7915cda8fc7af91",
        "width": 1768,
        "height": 1340,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-03T20:45:48Z",
        "tags": [],
        "bytes": 2922920,
        "type": "upload",
        "etag": "4ecc35d1cf8620a7d9aff67212eba0d3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549226748/avalanche2019/hnkpxpbfvqcacrxg0rrk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549226748/avalanche2019/hnkpxpbfvqcacrxg0rrk.png"
      },
      {
        "public_id": "avalanche2019/wczs4bwkmmuisadgrbzm",
        "version": 1549226925,
        "signature": "49b9585ae309e7d26495d7d043a9f63d5dc456f0",
        "width": 1272,
        "height": 1752,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-03T20:48:45Z",
        "tags": [],
        "bytes": 450549,
        "type": "upload",
        "etag": "7751917f563931194f42c70f8ad0766a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549226925/avalanche2019/wczs4bwkmmuisadgrbzm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549226925/avalanche2019/wczs4bwkmmuisadgrbzm.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-04T17:56:40.397Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-05T01:06:50.774Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T02:39:04.333Z" }
      }
    ],
    "title": "",
    "description": "A p5 sketch created with Sol Lewitt's instructions for his 1971 piece Wall Drawing #118.  The third image is the set of instructions.",
    "inspiration_name": "Sol Lewitt Wall Drawing - Boston Museum",
    "inspiration_url": "https://nyoobserver.files.wordpress.com/2012/10/lewitt.jpg?quality=80",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nvar x, y;\nvar pointSize;\nvar points = [];\nvar distance = [];\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // maxDistance = dist(width)\n  distance = random(10, 60);\n  for (var i = 0; i < 50; i++) {\n    points[i] = new Points();\n  }\n}\n\nfunction draw() {\n\n  background(240, 234, 214);\n  for (var i = 0; i < points.length; i++) {\n    points[i].drawPoint();\n    points[i].drawLine();\n  }\n}\n\nfunction Points() {\n  this.x = random(width);\n  this.y = random(height);\n\n  this.drawPoint = function() {\n    strokeWeight(0.5);\n    stroke(142, 151, 168);\n    point(this.x, this.y);\n  }\n\n  this.drawLine = function() {\n    for (var i = 0; i < points.length; i++) {\n      var other = points[i];\n      strokeWeight(1);\n      stroke(142, 151, 168, 100);\n      line(this.x, this.y, other.x, other.y);\n    }\n  }\n}"
  },
  {
    "_id": "h7963SH2vBha5onnt",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T15:41:40.433Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fml0f2lixojqqzxp9ppr",
        "version": 1555688922,
        "signature": "efe4d3210962cdac08bb8d0b636a6a309e5675ac",
        "width": 1202,
        "height": 866,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T15:48:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 4411371,
        "type": "upload",
        "etag": "7aa3675c6a92d94c2e633aa129fe3e9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555688922/avalanche2019/fml0f2lixojqqzxp9ppr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555688922/avalanche2019/fml0f2lixojqqzxp9ppr.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "159914",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "404906",
          "dar": "601:433"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 573594,
        "duration": 61.504,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/m07hkm8m9o2idb41kwg8",
        "version": 1555688935,
        "signature": "3cb11726b76a75db7513c7e537eeb0ebe4fb12cf",
        "width": 748,
        "height": 498,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-19T15:48:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 1636832,
        "type": "upload",
        "etag": "008020af63c2fa5609fae1eb9625cccd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555688935/avalanche2019/m07hkm8m9o2idb41kwg8.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555688935/avalanche2019/m07hkm8m9o2idb41kwg8.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "290293",
          "dar": "374:249"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 293991,
        "duration": 44.533333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/kwq8vbbx3n2vcch99coo",
        "version": 1555688944,
        "signature": "cb07aa593378f6ca128dc74772a2b805edf2cbce",
        "width": 748,
        "height": 498,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-19T15:49:04Z",
        "tags": [],
        "bytes": 25909,
        "type": "upload",
        "etag": "89b5fd12252ead13ccc8fe63a7c17d33",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555688944/avalanche2019/kwq8vbbx3n2vcch99coo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555688944/avalanche2019/kwq8vbbx3n2vcch99coo.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T16:56:04.847Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T17:51:00.55Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a music visualization using traditional Chinese music. \nI have used Garage Band to create a piece of Chinese music and then used p5.js to create a series of DFT (Discrete Fourier Transform) visualizations. \nFinally, I compiled the audio and the visuals in Premiere Pro to sync sketch with music.\n\nSpecial thanks: Daniel Shiffman",
    "inspiration_name": "DFT Visualization - Traditional Chinese Music",
    "inspiration_url": "https://en.wikipedia.org/wiki/Fast_Fourier_transform",
    "code": "// The code was divided in 2 JS files. \n// View on Github:\n// https://github.com/akshansh2593/CompForm/tree/master/chineseTraditional_dftVisualization"
  },
  {
    "_id": "h8wmGBbGbWvYo5Z3p",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T15:11:30.185Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/olvgazjxqjdd9ds4qecu",
        "version": 1554822718,
        "signature": "5a88f3ca817d37417e14e71a0425c9c476e6525c",
        "width": 1090,
        "height": 154,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T15:11:58Z",
        "tags": [],
        "bytes": 34673,
        "type": "upload",
        "etag": "edc900615b8c187dec7f531e8b31a8f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554822718/avalanche2019/olvgazjxqjdd9ds4qecu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554822718/avalanche2019/olvgazjxqjdd9ds4qecu.png"
      },
      {
        "public_id": "avalanche2019/j0kcpgnihj1eqjbrgyh2",
        "version": 1555035723,
        "signature": "28d059c6e4d599f2f534c8b39e5500419f01f7ad",
        "width": 1328,
        "height": 514,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T02:22:03Z",
        "tags": [],
        "bytes": 158834,
        "type": "upload",
        "etag": "fe7b8e86039e26654df89ab5fdccfae6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555035723/avalanche2019/j0kcpgnihj1eqjbrgyh2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555035723/avalanche2019/j0kcpgnihj1eqjbrgyh2.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-10T02:57:42.575Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-04-10T06:36:15.791Z" }
      }
    ],
    "title": "",
    "description": "Mixing Jay-Z and the Bible... and changed the typeface.. using Justin's Markov Chain Example template",
    "inspiration_name": "Jay-Z lyrics",
    "code": "const genesis_bible = \"In the beginning God created the heavens and the earth. Now the earth was formless and empty, darkness was over the surface of the deep, and the Spirit of God was hovering over the waters.And God said, “Let there be light,” and there was light. God saw that the light was good, and he separated the light from the darkness. God called the light “day,” and the darkness he called “night.” And there was evening, and there was morning—the first day..\";\nconst sympathy_for_the_devil = \"Please allow me to introduce myself, I'm a man of wealth and taste. I've been around for a long, long year. Stole many a man's soul to waste. And I was 'round when Jesus Christ Had his moment of doubt and pain. Made damn sure that Pilate Washed his hands and sealed his fate. Pleased to meet you Hope you guess my name. But what's puzzling you Is the nature of my game;\"\n\nconst heart_shaped_box = \"She eyes me like a Pisces when I am weak. I've been locked inside your heart-shaped box for weeks. I've been drawn into your magnetar pit trap. I wish I could eat your cancer when you turn black Hey! Wait! I've got a new complaint Forever in debt to your priceless advice. Hey! Wait! I've got a new complaint Forever in debt to your priceless advice. Hey! Wait! I've got a new complaint Forever in debt to your priceless advice, your advice\"; \n\nconst renegade = \"Motherfuckers Say that I'm foolish. I only talk about jewels (bling bling). Do you fools listen to music or do you just skim through it? See I'm influenced by the ghetto you ruined. That same dude you gave nothing, I made something doing What I do through and through and I give you the news, with a twist. It's just his ghetto point-of-view.The renegade, you been afraid I penetrate pop culture, bring 'em a lot closer to the block where they Pop toasters, and they live with they moms\";\n\nconst boyfriend = \"If I was your boyfriend, I’d never let you go. I can take you places you ain’t never been before. Baby take a chance or you’ll never ever know I got money in my hands that I’d really like to blow. Swag, swag, swag, on you. Chillin' by the fire while we eating fondue. I don't know 'bout me but I know about you. So say hello to falsetto in three two. I’d like to be everything you want, Hey girl, let me talk to you. \";\n\nconst model = generateModel(genesis_bible + \" \" + renegade);\nconst output_text = generateText(\"God\", model);\n\ndocument.body.innerHTML = output_text;\ndocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Cinzel');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Cinzel', serif;\n            font-size: 25px;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t</style>\n`);\n\n// console.log(output_text);\ns\nfunction generateModel(input_text) {\n    const words = input_text.split(\" \");\n    const model = {};\n\n    // loop through all the words except the last one.\n    for (let i = 0; i < words.length; i++) {\n        const target_word = words[i];\n        const next_word = words[i + 1];\n\n        // if the model doesn't contain the target word, add it.\n        if (!model[target_word]) {\n            model[target_word] = [];\n        }\n\n        // add the next word to the possibilities for target_word\n        model[target_word].push(next_word);\n    }\n\n    return model;\n}\n\n\nfunction generateText(first_word, model) {\n    // start with the word passed in\n    let output_text = first_word;\n    let current_word = first_word;\n    for (let i = 0; i < 120; i++) {\n        // choose the next word by sampling from options in the model\n        current_word = sample(model[current_word]);\n\n        // append word to output\n        output_text += \" \";\n        output_text += current_word;\n\n        // if we get to a word that ends with \".\" we are done.\n        const last_character = current_word.substr(current_word.length - 1);\n        if (last_character === \".\") {\n            break;\n        }\n    }\n    return output_text;\n}\n\nfunction sample(array) {\n    const index = Math.floor(Math.random() * array.length);\n    return array[index]; \n}"
  },
  {
    "_id": "hASs8LeQySDe3Wfs3",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T00:49:28.025Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bnyej77waq3spqxqv9jq",
        "version": 1552006172,
        "signature": "4469474a419a8574c8a77f09889a873b9ec0210e",
        "width": 794,
        "height": 794,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T00:49:32Z",
        "tags": [],
        "bytes": 210427,
        "type": "upload",
        "etag": "69a0d337bb64db8b41dde53b2e4030b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552006172/avalanche2019/bnyej77waq3spqxqv9jq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552006172/avalanche2019/bnyej77waq3spqxqv9jq.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/p5.min.js\n\nfunction setup() {\n  createCanvas(600, 600); \n//noprotect\t\n  for (var i = 0; i < width; i++) {\n    for (var j = 0; j < height; j++) {\n      var r = map(i, 0, width, 0, 255);\n      var g = map(j, 0, height, 0, 255);\n      stroke(r, g, 255);\n      point(i, j);  \n    }\n  }\n}"
  },
  {
    "_id": "hBqcAiNmXt4iqAwob",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-26T20:29:48.229Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vrjsu6hwucx7fbectiyi",
        "version": 1553632279,
        "signature": "720b3a2045b0a17375f92b03cc6e6921e48a5c03",
        "width": 6000,
        "height": 6000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-26T20:31:19Z",
        "tags": [],
        "bytes": 1832480,
        "type": "upload",
        "etag": "f2bf23db830eca82ca38caf21ffbffbd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553632279/avalanche2019/vrjsu6hwucx7fbectiyi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553632279/avalanche2019/vrjsu6hwucx7fbectiyi.jpg"
      },
      {
        "public_id": "avalanche2019/lj8gcizhispku9xtlf6z",
        "version": 1553632295,
        "signature": "3a983273af0d5131c01a68070a487f0adf8b1c64",
        "width": 832,
        "height": 986,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-26T20:31:35Z",
        "tags": [],
        "bytes": 239300,
        "type": "upload",
        "etag": "2abe8fab6e815651cabff60d1d70e9d8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553632295/avalanche2019/lj8gcizhispku9xtlf6z.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553632295/avalanche2019/lj8gcizhispku9xtlf6z.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T04:21:40.341Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T02:41:06.466Z" }
      }
    ],
    "title": "",
    "description": "Poster - Revolving circles - manipulated in Illustrator"
  },
  {
    "_id": "hDNnFbwDoRPfm6iCB",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-01-28T17:15:24.374Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dqsxn7cpeth0t9tcnv77",
        "version": 1548695823,
        "signature": "1206afc4662b275dd6850d3dffd7ab42e4630e2c",
        "width": 1192,
        "height": 1682,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T17:17:03Z",
        "tags": [],
        "bytes": 186132,
        "type": "upload",
        "etag": "4e2c6d92f443672834b1d4e0b61c009f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548695823/avalanche2019/dqsxn7cpeth0t9tcnv77.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548695823/avalanche2019/dqsxn7cpeth0t9tcnv77.jpg"
      },
      {
        "public_id": "avalanche2019/n7svs8ib0ytmfzepmorb",
        "version": 1548696003,
        "signature": "257cf346f45421512a330ba5ff10be1cfe145eb7",
        "width": 1090,
        "height": 1602,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T17:20:03Z",
        "tags": [],
        "bytes": 173564,
        "type": "upload",
        "etag": "02495e51ff392acf04fcdddac3dfd1db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548696003/avalanche2019/n7svs8ib0ytmfzepmorb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548696003/avalanche2019/n7svs8ib0ytmfzepmorb.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:01:12.703Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:02:02.494Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:02:58.138Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:37.306Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:04:17.041Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "ascii tiles, practicing multi-cursor, but it’s quite tedious\n– recommended VS Code extension: “Cursor-Align”",
    "inspiration_name": "ascii",
    "code": "| || |                   / /\\ \\                            \n   | /\\ |                  / /  \\ \\                    /\\     \n  /  \\/  \\       /\\       / /    \\ \\      /\\         _/  \\_   \n /   ||   \\ _ _ /  \\ _ _ / /      \\ \\_ _ /  \\ _ ___ /      \\  \n|   /  \\                 \\ \\      / /                  /\\   | \n|   \\  /    _ _      _ _ / /      \\ \\_ _      _ ___    \\/  /  \n \\   ||   /     \\  /     \\ \\      / /    \\  /       \\     /   \n  \\  ||  /       \\/       \\ \\    / /      \\/         \\   |    \n   | /\\ |                  \\ \\  / /                  /   /    \n  ´| \\/ |                  ´\\ \\/ /                  |   /     \n    \\  /                    | || |                   \\  /     \n    /  \\          /\\        | || |        /\\         /  \\     \n  \\|    |/      _/  \\_      | || |      _/  \\_     \\|    |/   \n/-/      \\-\\__ /      \\     | || |     /      \\ _/-/      \\-\\_\n\\ \\  ++  / /      /\\   |   /  /\\  \\   |   /\\     \\ \\  ++  / / \n/ /  ++  \\ \\__    \\/  /    \\  \\/  /    \\  \\/   _ / /  ++  \\ \\_\n\\-\\      /-/   \\     /      | || |      \\    /   \\-\\      /-/ \n  /|    |\\      \\   |       | || |      |   /      /|    |\\   \n / |    | \\     /   /       | || |       \\  \\     / |    | \\  \n    \\  /        |   \\       | || |       |  \\        \\  /     \n   | || |      / /\\ \\       | || |      |   \\       | || |    \n   | /\\ |     / /  \\ \\      | /\\ |      \\   |       | /\\ |    \n  /  \\/  \\   / /    \\ \\    /  \\/  \\     |   \\      /  \\/  \\   \n /   ||   \\_/ /      \\ \\ _/   ||   \\__ /     \\    /   ||   \\_ \n|   /  \\    \\ \\      / /     /  \\         /\\  \\  |   /  \\     \n|   \\  /   _/ /      \\ \\ _   \\  /   __    \\/   | |   \\  /   _ \n \\   ||   / \\ \\      / /  \\   ||   /   \\_    _/   \\   ||   /  \n  \\  ||  /   \\ \\    / /    \\  ||  /      \\  /      \\  ||  /   \n   | /\\ |     \\ \\  / /      | /\\ |        \\/        | /\\ |    \n  ´| \\/ |     ´\\ \\/ /      ´| \\/ |                 ´| \\/ |    \n    /  |        \\  /        / /\\ \\                  |   \\     \n    |  /        /  \\       / /  \\ \\                 \\   |     \n    /  |      \\|    |/    / /    \\ \\       /\\       |   \\     \n   /    \\ _ /-/      \\-\\ / /      \\ \\ _ _ /  \\ _ _ /     \\    \n  /  /\\     \\ \\  ++  / / \\ \\      / /                 /\\  \\   \n |   \\/    _/ /  ++  \\ \\ / /  __   \\ \\_ _      _ _    \\/   |  \n  \\_    _/  \\-\\      /-/  -\\ ____ /-      \\  /     \\_    _/   \n    \\  /      /|    |\\        \\/           \\/        \\  /     \n     \\/      / |    | \\                               \\/      \n                \\  /       ´"
  },
  {
    "_id": "hDpJq2Y8ve9uyzvyt",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T02:02:54.924Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aqhcakqe8jw8ddrfhjqr",
        "version": 1553739150,
        "signature": "dc531680a6b6ec33dddece88689cc07e2a315078",
        "width": 1390,
        "height": 1390,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T02:12:30Z",
        "tags": [],
        "bytes": 177287,
        "type": "upload",
        "etag": "5e631d35aa615236143e6944d777c7fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553739150/avalanche2019/aqhcakqe8jw8ddrfhjqr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553739150/avalanche2019/aqhcakqe8jw8ddrfhjqr.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T04:18:37.514Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T17:11:57.52Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T19:00:53.31Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T16:05:54.341Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T20:08:05.134Z" }
      }
    ],
    "title": "",
    "description": "Comp Form class poster, the letters C and F were created in paper.js, then the other letters were created on illustrator",
    "inspiration_name": "Comp Form",
    "inspiration_url": "http://compform.net/2019/syllabus.html",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar startP = 80;\nvar startP2 = 110;\n\n//bg\nvar bounds = new Rectangle(new Point(0, 0), new Point(300,300));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#333';\n\n//C\nvar rectangle1 = new Rectangle(new Point(startP, startP2), new Size(20, 70));\nvar path1 = new Path.Rectangle(rectangle1);\npath1.fillColor = 'white';\n\nvar rectangle2 = new Rectangle(new Point(startP, startP2), new Size(60, 20));\nvar path2 = new Path.Rectangle(rectangle2);\npath2.fillColor = 'white';\n\nvar rectangle3 = new Rectangle(new Point(startP, startP2+50), new Size(60, 20));\nvar path3 = new Path.Rectangle(rectangle3);\npath3.fillColor = 'white';\n\n\n//F\n\nvar rectangle4 = new Rectangle(new Point(startP+80, startP2), new Size(60, 20));\nvar path4 = new Path.Rectangle(rectangle4);\npath4.fillColor= 'white';\n\nvar rectangle5 = new Rectangle(new Point(startP+80, startP2), new Size(20,70));\nvar path5 = new Path.Rectangle(rectangle5);\npath5.fillColor = 'white';\n\nvar rectangle6 = new Rectangle(new Point(startP+80, startP2+30), new Size(60, 20));\nvar path6 = new Path.Rectangle(rectangle6);\npath6.fillColor = 'white';\n\nvar comboPathC1 = path1.unite(path2);\nvar comboPathC2 = comboPathC1.unite(path3);\nvar comboPathF1 = path4.unite(path5);\nvar comboPathF2 = comboPathF1.unite(path6);"
  },
  {
    "_id": "hFvWN7Q43ecDqNWbJ",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T16:08:42.384Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wiwf9lykwwfz3nxvy0zs",
        "version": 1556899727,
        "signature": "9bb9bcf6154b11a6586bf18a2283cbe31b063f4e",
        "width": 578,
        "height": 696,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T16:08:47Z",
        "tags": [],
        "bytes": 55020,
        "type": "upload",
        "etag": "d3211807b5962c9d34dbbbcb8b838815",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899727/avalanche2019/wiwf9lykwwfz3nxvy0zs.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899727/avalanche2019/wiwf9lykwwfz3nxvy0zs.png"
      },
      {
        "public_id": "avalanche2019/sh7coqulrxeflinw1rt9",
        "version": 1556899762,
        "signature": "624ec0f431815d56cf97c458991f50236e171b6b",
        "width": 552,
        "height": 630,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T16:09:22Z",
        "tags": [],
        "bytes": 58329,
        "type": "upload",
        "etag": "a76f72c340b1f429cdd818e3ae0b5bca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556899762/avalanche2019/sh7coqulrxeflinw1rt9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556899762/avalanche2019/sh7coqulrxeflinw1rt9.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T16:10:09.949Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T16:43:11.521Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:32:54.277Z" }
      }
    ],
    "title": "",
    "description": "inspired by the battle angle movie",
    "inspiration_name": "Floating Castle"
  },
  {
    "_id": "hHsCiFB3qop5JEHhC",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T19:29:20.029Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rck3z0x8rlvuhtp1tkjz",
        "version": 1552678214,
        "signature": "ab3459a2d65b0fd7b324a74169028926e5254dea",
        "width": 1002,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T19:30:14Z",
        "tags": [],
        "bytes": 279154,
        "type": "upload",
        "etag": "891fab5ac9d6bf131759f06b10e4866c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552678214/avalanche2019/rck3z0x8rlvuhtp1tkjz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552678214/avalanche2019/rck3z0x8rlvuhtp1tkjz.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Rectangle pattern with decreasing stroke width to try to show depth",
    "inspiration_name": "Batools' triangle",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?http://sketches2019.compform.net/posts/N94Cg2CBe8AEgGjSW/code"
  },
  {
    "_id": "hLRGQaiEL8HSZXk3E",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T17:46:35.466Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qhld4ljhkuf2f3nuwyuh",
        "version": 1555696002,
        "signature": "74a71dd9bcd4471d69abd3976043d68f9205b287",
        "width": 914,
        "height": 530,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T17:46:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 92291,
        "type": "upload",
        "etag": "198999b40d084ee66f1db18435a67fc4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555696002/avalanche2019/qhld4ljhkuf2f3nuwyuh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555696002/avalanche2019/qhld4ljhkuf2f3nuwyuh.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "128334",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "75180",
          "dar": "457:265"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 219283,
        "duration": 3.342993,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Drum2"
  },
  {
    "_id": "hTXk4f8RPqpJSZhGf",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:38:11.396Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uzyenknp2bdyqphonath",
        "version": 1556303949,
        "signature": "283ad225947c7afaac2595b501ec7ad1c581cae8",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T18:39:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 6337339,
        "type": "upload",
        "etag": "08b832e19db29da555d5b52cdb4e4e94",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556303949/avalanche2019/uzyenknp2bdyqphonath.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556303949/avalanche2019/uzyenknp2bdyqphonath.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "125320",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1388006",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 1548870,
        "duration": 32.7327,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Saw Janice's smells like teen spirit cover and tried to do the same. Played around with midi drums and recorded guitars. Sorry Kurt.",
    "inspiration_name": "Janice's Sketch (Teen Spirit)",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?http://sketches2019.compform.net/posts/qFjnw6CZ3fFmMRmo8/code"
  },
  {
    "_id": "hWseQAj4SSNpu8677",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-08T22:15:06.934Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aqrn358hbnbmpouj0yki",
        "version": 1557354017,
        "signature": "d0b2a9f4d0bceec9ced01f0c0a56b8a876b61615",
        "width": 932,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-08T22:20:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 14063713,
        "type": "upload",
        "etag": "be9ab7b1931f017dbed8536e4e72a7cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557354017/avalanche2019/aqrn358hbnbmpouj0yki.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557354017/avalanche2019/aqrn358hbnbmpouj0yki.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "228187",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "10633545",
          "dar": "233:180"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10870502,
        "duration": 10.35,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2020-02-12T20:41:04.03Z" }
      }
    ],
    "title": "",
    "description": "Push the sad people out of the way",
    "code": "let face;\nlet sadFace;\nlet faces;\nlet sadFaces;\n\nfunction setup() {\n  frameRate(20);\n  createCanvas(850, 650);\n\n  face = createSprite(100, 100);\n  face.addAnimation(\"normal\", \"face-1.png\", \"face-2.png\");\n  face.setCollider(\"rectangle\", -5, -5, 60, 60);\n  face.scale = 1.3;\n  face.mass = face.scale;\n\n  sadFaces = new Group();\n\n  for (let i = 0; i < 70; i++) {\n    sadFace = createSprite(random(width), random(height));\n    sadFace.addAnimation(\"normal\", \"face-3.png\", \"face-4.png\");\n    sadFace.setCollider(\"rectangle\", -5, 5, 60, 60);\n    sadFace.setSpeed(random(-2, 2), random(0, 360));\n    sadFace.scale = random(0.3, 1);\n    sadFace.mass = sadFace.scale;\n\n    sadFaces.add(sadFace);\n  }\n}\n\nfunction draw() {\n  background(0);\n  noCursor();\n\n  //   animation(face, mouseX, mouseY);\n  sadFaces.bounce(face);\n  sadFaces.bounce(sadFaces);\n\n  // faces.bounce(faces);\n  face.bounce(sadFaces);\n\n  face.position.x = mouseX;\n  face.position.y = mouseY;\n\n  for (let i = 0; i < allSprites.length; i++) {\n    let s = allSprites[i];\n    if (s.position.x < 0) {\n      s.position.x = 1;\n      s.velocity.x = abs(s.velocity.x);\n    }\n\n    if (s.position.x > width) {\n      s.position.x = width - 1;\n      s.velocity.x = -abs(s.velocity.x);\n    }\n\n    if (s.position.y < 0) {\n      s.position.y = 1;\n      s.velocity.y = abs(s.velocity.y);\n    }\n\n    if (s.position.y > height) {\n      s.position.y = height - 1;\n      s.velocity.y = -abs(s.velocity.y);\n    }\n  }\n\n  drawSprites();\n}"
  },
  {
    "_id": "hWupMS8J8dD7zdC2W",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T17:01:58.292Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mjnlq3s7rc7s0jdqec2d",
        "version": 1555088527,
        "signature": "669ed47f680483e2f2c2487e1d66954b52cdf894",
        "width": 2612,
        "height": 1064,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T17:02:07Z",
        "tags": [],
        "bytes": 128948,
        "type": "upload",
        "etag": "27e90ec0407bdf44acf403e436eb819f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555088527/avalanche2019/mjnlq3s7rc7s0jdqec2d.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555088527/avalanche2019/mjnlq3s7rc7s0jdqec2d.jpg"
      },
      {
        "public_id": "avalanche2019/iahvkup2gxhi1xbwznjf",
        "version": 1555088529,
        "signature": "7c530ca41c3457ec38d2ef7e625f340c1a5e3d85",
        "width": 2648,
        "height": 1240,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T17:02:09Z",
        "tags": [],
        "bytes": 134731,
        "type": "upload",
        "etag": "22bdf973fbe4df3e406c4ec3dbec6281",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555088529/avalanche2019/iahvkup2gxhi1xbwznjf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555088529/avalanche2019/iahvkup2gxhi1xbwznjf.jpg"
      },
      {
        "public_id": "avalanche2019/bg0kkcfnzgzyervzkhgs",
        "version": 1555088532,
        "signature": "aaf5fc13c350523d34b9d5a0d6b72cf532375722",
        "width": 2652,
        "height": 1108,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T17:02:12Z",
        "tags": [],
        "bytes": 119103,
        "type": "upload",
        "etag": "622cd143421bc45d9b7e553514d0b7a1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555088532/avalanche2019/bg0kkcfnzgzyervzkhgs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555088532/avalanche2019/bg0kkcfnzgzyervzkhgs.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Class example. Random \"Are you\" pick up lines generator.",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\n\nfunction generateTitle() {\nvar adjectives = [\"religious\", \"French\", \"cake\", \"lost ma'am\", \"Tennessee\",\"a parking ticket\",\"a 90 degree angle\"];\n\n\n\tvar adjective = sample(adjectives);\n\n\tvar title = \"\";\n\tif (Math.random() < 0.5) {\n\t\ttitle = `Are you ${adjective}?`;\n\t}\n\telse {\n\t\ttitle = `The ${adjective} ${secondary_noun} of ${name_prefix} ${primary_noun}`;\n\t}\n\n\treturn title;\n}\n\nfunction generateSubtitle() {\n\tvar story_adjectives = [\"Eiffel for you.\",\n\t\"you’re the answer to all my prayers.\",\n\t\"I want a piece of that.\",\n\t\"heaven is a long way from here.\",\n\t\"you're the only 10 I see!\",\n\t\"you’ve got fine written all over you.\",\n\t\"you are looking right!\"];\n\n\tvar adjective = sample(story_adjectives);\n\tvar subtitle = `Because ${adjective}`;\n\n\treturn subtitle;\n}\n\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\n\n\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "hXdH9hQxp2tAQ58o9",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T15:04:32.582Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tgmhnofgvifacs32pbdu",
        "version": 1555686424,
        "signature": "a2d72be13cb0802b7cd817aa542522d5b0eb3ce9",
        "width": 1250,
        "height": 1260,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T15:07:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 1120981,
        "type": "upload",
        "etag": "78a8cad963a8b2595aa455e81a436b55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555686424/avalanche2019/tgmhnofgvifacs32pbdu.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555686424/avalanche2019/tgmhnofgvifacs32pbdu.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "87659",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "804096",
          "dar": "125:126"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 896782,
        "duration": 10.000023,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/wk0uifvfctrxnm8euvon",
        "version": 1555686426,
        "signature": "a7824ac02f9f7b1cb192a13111c8c84a7c5b6726",
        "width": 1256,
        "height": 1256,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T15:07:06Z",
        "tags": [],
        "bytes": 63551,
        "type": "upload",
        "etag": "0ce19704974758f106f8cda22a1508fd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555686426/avalanche2019/wk0uifvfctrxnm8euvon.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555686426/avalanche2019/wk0uifvfctrxnm8euvon.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Frequency of note aligns with up and down path of ball on noise generated line",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nlet canvas = { width: 600, height: 600 };\nlet inc = 0.01;\nlet start = 0;\nlet x = 0;\nlet y;\nlet osc;\nlet hue;\n\nlet freq;\n\nfunction setup() {\n  createCanvas(canvas.width, canvas.height);\n  colorMode(HSB, 100);\n  osc = new p5.Oscillator(\"triangle\");\n\n  // play\n  playButton = createButton(\"Play\");\n  playButton.position(20, 20);\n  playButton.size(60, 30);\n  playButton.style(\"background-color\", \"fff\");\n  playButton.style(\"border-radius\", \"6px\");\n  playButton.style(\"border\", \"none\");\n  playButton.style(\"font-family\", \"monospaced\");\n  playButton.style(\"text-transform\", \"uppercase\");\n  playButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  playButton.mousePressed(playNote);\n\n  // stop\n  stopButton = createButton(\"Pause\");\n  stopButton.position(100, 20);\n  stopButton.size(60, 30);\n  stopButton.style(\"background-color\", \"fff\");\n  stopButton.style(\"border-radius\", \"6px\");\n  stopButton.style(\"border\", \"none\");\n  stopButton.style(\"font-family\", \"monospaced\");\n  stopButton.style(\"text-transform\", \"uppercase\");\n  stopButton.style(\"box-shadow\", \"4px 4px 0px 0px #000\");\n  stopButton.mousePressed(stopNote);\n}\n\nfunction draw() {\n  background(hue, 50, 50);\n  stroke(100);\n  noFill();\n\n  // shape inspired by code train demo\n  // noise line\n  beginShape();\n  let xoff = 0;\n  for (i = 0; i < canvas.width; i++) {\n    stroke(100);\n    y = noise(xoff) * canvas.height;\n    vertex(i, y);\n    xoff += inc;\n  }\n  endShape();\n\n  // ball\n  fill(10, 90, 90);\n  stroke(10, 80, 50);\n  y = noise(start) * canvas.height;\n  ellipse(x, y, 12);\n  start += inc;\n\n  // frequency for sound\n  freq = y * 0.5;\n  osc.freq(freq);\n\n  hue = freq * 0.5;\n  // replay automatically\n  if (x > canvas.width) {\n    x = 0;\n    start = inc;\n  } else {\n    x++;\n  }\n}\n\nfunction playNote() {\n  osc.start();\n  osc.amp(0.3, 0.3);\n}\n\nfunction stopNote() {\n  osc.stop();\n}"
  },
  {
    "_id": "hXjR9xz8HNs9Hnc36",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-12T04:51:10.166Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/o1saqouageyd3szt2xhe",
        "version": 1552366310,
        "signature": "403c5d62d43813ccad34d2457021df4dd5b00284",
        "width": 996,
        "height": 994,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-12T04:51:50Z",
        "tags": [],
        "bytes": 99498,
        "type": "upload",
        "etag": "3f2fd56c1dbb5c0493754e14f4ee559c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552366310/avalanche2019/o1saqouageyd3szt2xhe.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552366310/avalanche2019/o1saqouageyd3szt2xhe.jpg"
      },
      {
        "public_id": "avalanche2019/pxkjv7vqqwaq2h7dzmhd",
        "version": 1552366314,
        "signature": "fe5585d0ef064f90aa1e98cf87c7e8bed5012941",
        "width": 984,
        "height": 988,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-12T04:51:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 3390256,
        "type": "upload",
        "etag": "3871f5aa391601583c8262690f15ba40",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552366314/avalanche2019/pxkjv7vqqwaq2h7dzmhd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552366314/avalanche2019/pxkjv7vqqwaq2h7dzmhd.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "452254",
          "dar": "246:247"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 464507,
        "duration": 58.388833,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-12T18:06:48.552Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T20:25:14.761Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T00:21:42.768Z" }
      }
    ],
    "title": "",
    "description": "Not really going anywhere tonight :)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  frameRate(30);\n  background(30, 0.2, 1);\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 100);\n}\n\nfunction draw() {\n\n\n  noFill();\n  stroke(0, 0, 1, 1);\n  strokeWeight(1);\n\n  myTurtle.penDown();\n  myTurtle.moveForward(5);\n  myTurtle.turnRight(\n    sin(frameCount * 0.1) * 22 +\n      cos(frameCount * 0.01) * 12 +\n      sin(frameCount * 0.001) * 32\n  );\n  if (\n    myTurtle.x > width ||\n    myTurtle.x < 0 ||\n    myTurtle.y > height ||\n    myTurtle.y < 0\n  ) {\n    myTurtle.penUp();\n    myTurtle.moveTo(random(height), random(width));\n    myTurtle.penDown();\n  }\n}"
  },
  {
    "_id": "hd7vkeGipyuvZEhnT",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T17:05:17.599Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fnzygtvgrjmkbx69ayzu",
        "version": 1552669523,
        "signature": "a07d8088dff0e87e81b6f129e2c756ddcd0b759b",
        "width": 776,
        "height": 614,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T17:05:23Z",
        "tags": [],
        "bytes": 246085,
        "type": "upload",
        "etag": "b783a703d4f122edc062bb220b617788",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552669523/avalanche2019/fnzygtvgrjmkbx69ayzu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552669523/avalanche2019/fnzygtvgrjmkbx69ayzu.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "morphic.js",
    "inspiration_url": "https://www.youtube.com/watch?v=6VNzUrt5ETQ"
  },
  {
    "_id": "hdNfZDJxBtGuAmKe9",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-04T03:34:31.079Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nqrk5rzz8ofnccff4e2w",
        "version": 1549251522,
        "signature": "58017ca41826c43cc96b266bfc74e258ba894af7",
        "width": 917,
        "height": 696,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-04T03:38:42Z",
        "tags": [],
        "bytes": 144860,
        "type": "upload",
        "etag": "f36d3f86935777c55ea6454a146630a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549251522/avalanche2019/nqrk5rzz8ofnccff4e2w.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549251522/avalanche2019/nqrk5rzz8ofnccff4e2w.jpg"
      },
      {
        "public_id": "avalanche2019/n2gysy9eztldoh9vxbmc",
        "version": 1549251534,
        "signature": "3d937da3eda488815614bf205b4bea9a495e335f",
        "width": 928,
        "height": 696,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-04T03:38:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 250466,
        "type": "upload",
        "etag": "c79ff25844efe8d9aab7fc74e6dbc3c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549251534/avalanche2019/n2gysy9eztldoh9vxbmc.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549251534/avalanche2019/n2gysy9eztldoh9vxbmc.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1377",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "241689",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 14.916666666666666,
        "bit_rate": 245299,
        "duration": 8.132562,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/bl3cwccdtwopnbemqoqv",
        "version": 1549251539,
        "signature": "7d23634aadb45c53fb7c1b13b4b91a2d7875ad03",
        "width": 936,
        "height": 702,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-04T03:38:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 112485,
        "type": "upload",
        "etag": "cf6779d3cb957e2059c8d7af6c8b354b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549251539/avalanche2019/bl3cwccdtwopnbemqoqv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549251539/avalanche2019/bl3cwccdtwopnbemqoqv.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1375",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "90818",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 29.916666666666668,
        "bit_rate": 94895,
        "duration": 9.465283,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-04T17:56:32.825Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:34:58.811Z" }
      }
    ],
    "title": "",
    "description": "Inspired by the theme of creating an organic shape, I have created a brush that replicates the art of pencil sketching using a random function in p5.\nThe brush operates on mouse press and can be used to create sketches.",
    "inspiration_name": "Digital Pencil Sketch",
    "inspiration_url": "https://youtu.be/76fiD5DvzeQ",
    "code": "// Program to create a brush\n\nfunction setup() {\n    createCanvas(800, 800);\n    background(255);\n    map(mouseX, 0, width, 0, 100);\n\n}\n\nfunction draw() {\n    fill(0, (mouseX / 4));\n    noStroke();\n    if (mouseIsPressed === true) {\n        beginShape();\n        vertex(mouseX, mouseY);\n        vertex(pmouseX + random(), pmouseY + random());\n        vertex(pmouseX + random(0, 20), pmouseY + random(0, 20));\n        vertex(pmouseX + random(0, 40), pmouseY + random(0, 40));\n        vertex(mouseX, mouseY);\n        endShape();\n    }\n}"
  },
  {
    "_id": "heyP62dzR95Z6Tfjf",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-25T02:59:11.668Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zkt2mxkwt2jc54ug4ly5",
        "version": 1553482761,
        "signature": "4e6171cb07bf12a25a18760fd0ac69844f3a520a",
        "width": 2448,
        "height": 1290,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-25T02:59:21Z",
        "tags": [],
        "bytes": 174040,
        "type": "upload",
        "etag": "50c0bbb69ad5393703e5cbb7f537d327",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553482761/avalanche2019/zkt2mxkwt2jc54ug4ly5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553482761/avalanche2019/zkt2mxkwt2jc54ug4ly5.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Vectors",
    "title": "",
    "description": "Playing around with scale. A fleet of rockets perhaps?"
  },
  {
    "_id": "hfQojrP9qR5gKJftt",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-10T20:21:07.501Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zlgzmpqowmzoyyhiddao",
        "version": 1554927883,
        "signature": "ba6572c81c505e8fb0580a2432b2ae84c82ebd69",
        "width": 1244,
        "height": 1522,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T20:24:43Z",
        "tags": [],
        "bytes": 179047,
        "type": "upload",
        "etag": "7db6c5d3a05d8467aa63902344a0e655",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554927883/avalanche2019/zlgzmpqowmzoyyhiddao.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554927883/avalanche2019/zlgzmpqowmzoyyhiddao.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Progress towards API lyric mixer\nhave two sets of lyrics properly pulling data from lyrics.ovh API, going to but these into Markov and get a user defined splitting word etc",
    "code": "//getting form data\nconst form = document.forms[0];\nconst submitSongs = document.getElementById('submitSongs');\nsubmitSongs.addEventListener('click', processSongs);\n\nvar songTitle1, songArtist1, songTitle2, songArtist2;\n\nfunction processSongs(e) {\n\n    //get the first song \n    songTitle1 = document.getElementById(\"song1Title\").value;\n    console.log(songTitle1);\n\n    songArtist1 = document.getElementById(\"song1Artist\").value;\n    console.log(songArtist1);\n\n    songTitle2 = document.getElementById(\"song2Title\").value;\n    console.log(songTitle2);\n\n    songArtist2 = document.getElementById(\"song2Artist\").value;\n    console.log(songArtist2);\n\n    keyword = document.getElementById(\"keyword\").value;\n\n    e.preventDefault();\n    console.log(keyword);\n\n    //get lyrics from API \n    var url;\n    var song1Lyrics, song2Lyrics;\n    url = \"https:/api.lyrics.ovh/v1/\" + songArtist1 + \"/\" + songTitle1;\n    console.log(url);\n    var request = new XMLHttpRequest();\n    request.open('GET', url);\n    request.onreadystatechange = function () {\n        if (this.readyState === 4) {\n            resp = JSON.parse(request.response);\n\n            //first song \n            song1Lyrics = resp.lyrics;\n            // console.log(song1Lyrics);\n            var songTwoUrl = \"https:/api.lyrics.ovh/v1/\" + songArtist2 + \"/\" + songTitle2;\n            var song2 = fetch(songTwoUrl)\n                .then((res) => {\n                    return res.json();\n                })\n                .then((data) => {\n\n                    song2Lyrics = data.lyrics;\n                    console.log(song2Lyrics);\n                    console.log(song1Lyrics);\n                    return song2Lyrics;\n                });\n\n\n        } else {\n            console.log(\"There was an error or delay in with xml request\");\n            // document.getElementById(\"Output\").innerHTML = \"There was an error\";\n        }\n    }\n    request.send();\n\n}"
  },
  {
    "_id": "hhxCZ3Hvdtg2ReAPz",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-04-05T17:13:07.785Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mfzgx6dnw7jqmasftlku",
        "version": 1554484399,
        "signature": "bc4646288b59a46ab78226486ac46009402c098b",
        "width": 878,
        "height": 912,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T17:13:19Z",
        "tags": [],
        "bytes": 615270,
        "type": "upload",
        "etag": "462dccde9ab675a0ed39a2247f9dad88",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554484399/avalanche2019/mfzgx6dnw7jqmasftlku.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554484399/avalanche2019/mfzgx6dnw7jqmasftlku.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Spring II",
    "inspiration_name": "paper garden",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n/* eslint-disable */\n\n// Paper Garden\n\n// Generates and draws a garden!\n\n// The script is configured to draw only a few plants here,\n// so it doesn't take too long to run.\n\n// If you have it draw a few hundred plants it can take several\n// seconds to finish, and really high numbers of plants may cause\n// the browser tab to crash.\n/*global project Rectangle Point Group Path Color*/\n\n////////////////////////////////////////////////\n// composition settings\nvar WIDTH = 490;\nvar HEIGHT = 490;\nvar MARGIN = 30;\n\n////////////////////////////////////////////////\n// drawing settings\nvar GAPPY = 4;\nvar SLOPPY = 3;\nvar SHADOW_BLUR = 5;\nvar ROUGH = 0.1;\nvar STROKE = Math.random()*4;\nvar DRAW_CIRCLE_FUNC = drawCircle;\n\n// sorting functions: sortTopDown, sortBottomUp, sortInnerOut, sortOuterIn\nvar PLANT_SORTING_FUNC = sortTopDown;\nvar LEAF_SORTING_FUNC = sortOuterIn;\n\n////////////////////////////////////////////////\n// plant settings\n\nvar PLANT_COUNT = 50;\nvar PLANT_SPACING = 130;\nvar PLANT_CULL = 0.85;\n\nvar LEAF_COUNT = 70;\nvar LEAF_RADIUS = 18;\nvar LEAF_SPACING = 25;\n\n////////////////////////////////////////////////\n// plant configs\n\nvar plant_configs = [];\nplant_configs.leafy = [createLeaf];\nplant_configs.flowery = [createLeaf, createFlower];\nplant_configs.viney = [createLeaf, createLeaf, createVine, createVine];\nvar plant_types = [\"leafy\", \"flowery\", \"viney\"];\n\n///////////////////////////////////////////\n// kick off\nmakeScene();\n\n///////////////////////////////////////////\n// application\n\nfunction makeScene() {\n  // clear drawing\n  project.activeLayer.removeChildren();\n\n  // draw plants\n  createPlants();\n\n  // fit drawing onto canvas\n  project.activeLayer.fitBounds(\n    new Rectangle(\n      0 + MARGIN,\n      0 + MARGIN,\n      WIDTH - MARGIN * 2,\n      HEIGHT - MARGIN * 2\n    )\n  );\n}\n\n///////////////////////////////////////////\n// composition planning\n\nfunction createPlants() {\n  // create a cluster of points\n  var points = clusterPoints(new Point(0, 0), PLANT_COUNT, PLANT_SPACING);\n\n  // remove a few random points to create some gaps\n  shuffle(points);\n  points.splice(0, points.length * PLANT_CULL);\n\n  // sort points\n  points.sort(PLANT_SORTING_FUNC);\n\n  // center cluster\n  for (var i = 0; i < points.length; i++) {\n    points[i] += new Point(WIDTH * 0.5, HEIGHT * 0.5);\n  }\n\n  // create and place plants\n  var plants = [];\n  for (i = 0; i < points.length; i++) {\n    var point = points[i];\n    var plant = createPlant();\n    plants.push(plant);\n    plant.name = \"plant_\" + i;\n    plant.position = point;\n  }\n\n  return plants;\n}\n\nfunction createPlant() {\n  // choose a random plant type\n  var plant_type = pick(plant_types);\n\n  // create a cluster of points for the leaves\n  var points = clusterPoints(new Point(0, 0), LEAF_COUNT, LEAF_SPACING);\n\n  // sort by distance from 0,0 so we draw the middle parts after the outer parts\n  points.sort(LEAF_SORTING_FUNC);\n\n  // make the parts\n  var parts = new Group();\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n    // choose a random part generator (createLeaf, createFlower, createVine) from the config for this plant type\n    var part_function = pick(plant_configs[plant_type]);\n    // make the part\n    var part = part_function(point, LEAF_RADIUS);\n    part.name = \"part_\" + i;\n    parts.addChild(part);\n  }\n\n  return parts;\n}\n\nfunction createLeaf(center, radius) {\n  return DRAW_CIRCLE_FUNC(center, radius);\n}\n\nfunction createFlower(center, radius) {\n  var position = center;\n  var offset = center / 4;\n\n  var flower_group = new Group();\n  var blocker_group = new Group();\n  for (var i = 0; i < 5; i++) {\n    var r = map(i, 0, 5, radius, radius * 0.25);\n    var circle = DRAW_CIRCLE_FUNC(position, r);\n    flower_group.addChild(circle);\n\n    var blocker = new Path.Circle(position, r * 0.8);\n    blocker.style = {\n      fillColor: \"white\",\n      shadowColor: new Color(1, 1, 1, 1),\n      shadowBlur: SHADOW_BLUR\n    };\n    blocker_group.addChild(blocker);\n\n    offset = offset + [0, radius * 0.3];\n    offset *= 0.75;\n    position += offset;\n  }\n\n  return new Group([flower_group, blocker_group]);\n}\n\nfunction createVine(center, radius) {\n  var length = pick([8, 8, 8, 9, 9, 10, 20, 30, 40]);\n  var offset_x = 0;\n\n  var vine_group = new Group();\n  for (var i = 0; i < length; i++) {\n    var offset_point = [offset_x, i * radius * 0.6];\n    offset_x += randomRange(-radius, radius) * 0.5;\n    offset_x *= 0.5;\n    var circle = DRAW_CIRCLE_FUNC(center + offset_point, radius * 0.4);\n    vine_group.addChild(circle);\n    circle.sendToBack();\n  }\n\n  vine_group.addChild(createLeaf(center, radius));\n\n  return vine_group;\n}\n\n///////////////////////////////////////////\n// point placing\n\nfunction clusterPoints(center, point_count, spacing) {\n  var points = [];\n  for (var i = 0; i < point_count; i++) {\n    points.push(center + randomPoint());\n  }\n\n  relaxPoints(points, spacing, spacing * 0.1, 30);\n\n  return points;\n}\n\nfunction relaxPoints(points, min, stepSize, steps) {\n  min = min * min;\n  for (var step = 0; step < steps; step++) {\n    for (var i1 = 0; i1 < points.length; i1++) {\n      for (var i2 = 0; i2 < points.length; i2++) {\n        if (i1 === i2) continue;\n        var p1 = points[i1];\n        var p2 = points[i2];\n        var direction = (p1 - p2).normalize();\n        var dist = p1.getDistance(p2, true);\n        if (dist < min) {\n          p1 = p1 + direction * stepSize;\n          p2 = p2 - direction * stepSize;\n        }\n        points[i1] = p1;\n        points[i2] = p2;\n      }\n    }\n  }\n}\n\nfunction sortBottomUp(a, b) {\n  return a.y > b.y ? -1 : 1;\n}\n\nfunction sortTopDown(a, b) {\n  return a.y < b.y ? -1 : 1;\n}\n\nfunction sortOuterIn(a, b) {\n  return a.length > b.length ? -1 : 1;\n}\n\nfunction sortInnerOut(a, b) {\n  return a.length < b.length ? -1 : 1;\n}\n\n//////////////////////////////////////////\n// Drawing + Style\n\nfunction drawCircle(center, radius) {\n  // create backing blocker\n  var back_path = new Path.Circle(center, radius + GAPPY);\n  back_path.name = \"back\";\n  back_path.translate(randomPoint() * SLOPPY);\n  back_path.style = {\n    fillColor: new Color(1, 1, 1, 1),\n    shadowColor: new Color(1, 1, 1, 1),\n    shadowBlur: SHADOW_BLUR,\n    shadowOffset: 0\n  };\n\n  // create stroke circle\n  var path = new Path.Circle(center, radius);\n  path.name = \"front\";\n     var pressure = randomRange(-0.5, 0.5);\n  path.style = {\n    fillColor: new Color(1, 1, 1, 1),\n    strokeColor: new Color(0.3, 0.5, 0.3), // + new Color(0.1, 0.1, 0.1) * pressure,\n    strokeWidth: STROKE\n  };\n\n  for (var s = 0; s < path.segments.length; s++) {\n    path.segments[s].point += randomPoint() * ROUGH * radius;\n  }\n\n  // add a dashed clone of the stroke to give some slight variation to weight and color\n  var dash_path = path.clone();\n  dash_path.style = {\n    dashOffset: randomRange(0, 200),\n    dashArray: [randomRange(0, 50), 200],\n    strokeColor: new Color(0.2, Math.random()*0.8, 0.3),\n    strokeWidth: STROKE * Math.random()*10,\n    strokeCap: \"round\",\n    fillColor: undefined,\n    strokeScaling: true\n  };\n  dash_path.opacity=0.5;\n\n  return new Group([back_path, path, dash_path]);\n}\n\n///////////////////////////////////////////\n// math + random utils\n\nfunction map(x, inMin, inMax, outMin, outMax) {\n  var n = (x - inMin) / (inMax - inMin);\n  return n * (outMax - outMin) + outMin;\n}\n\nfunction randomRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction randomPoint() {\n  return new Point(randomRange(-1, 1), randomRange(-1, 1));\n}\n\nfunction pick(a) {\n  var i = Math.floor(Math.random() * a.length);\n  return a[i];\n}\n\nfunction shuffle(a) {\n  // https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n  var j, x;\n  for (var i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\n///////////////////////////////////////////\n// DOWNLOAD SVG\n\n// eslint-disable-next-line\nfunction onKeyDown(event) {\n  if (event.key === \"s\") {\n    console.log(\"downloadAsSVG\");\n    downloadAsSVG();\n  }\n}\n\nfunction downloadAsSVG(fileName) {\n  // use default name if not provided\n  fileName = fileName || \"output.svg\";\n\n  // create a data url of the file\n  var svgData = project.exportSVG({ asString: true });\n  var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n  // create a link to the data, and \"click\" it\n  var link = document.createElement(\"a\");\n  link.download = fileName;\n  link.href = url;\n  link.click();\n}"
  },
  {
    "_id": "hib2t3pdRjp89cqxs",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T18:59:51.773Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sttfrjodmtyfskpb8pfw",
        "version": 1549565997,
        "signature": "0794f2f03c6a775b574887ed6c146d69eb90f2c5",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T18:59:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 1555142,
        "type": "upload",
        "etag": "37766b4b247778eb23488d69257143c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549565997/avalanche2019/sttfrjodmtyfskpb8pfw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549565997/avalanche2019/sttfrjodmtyfskpb8pfw.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "581660",
          "dar": "16:9"
        },
        "frame_rate": 23.976023976023978,
        "bit_rate": 602603,
        "duration": 20.645625,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "ellipses randomly generated to mimic bursh stroke effect"
  },
  {
    "_id": "hmoxQ4DPyNHBDsn86",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T17:55:15.192Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "hoavnqrSBfTNkQv7y",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T23:18:39.918Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zrymcevjuu6x6abvue7w",
        "version": 1549581618,
        "signature": "1d0829e263e84c81b8b755086f46fe942d614a35",
        "width": 672,
        "height": 198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T23:20:18Z",
        "tags": [],
        "bytes": 19825,
        "type": "upload",
        "etag": "3c28a02436c59513843f96db29ef4724",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549581618/avalanche2019/zrymcevjuu6x6abvue7w.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549581618/avalanche2019/zrymcevjuu6x6abvue7w.png"
      },
      {
        "public_id": "avalanche2019/xh5zdu9puzig65vtosk2",
        "version": 1549581622,
        "signature": "f20a483f95c721441ad648c59d82680726226245",
        "width": 992,
        "height": 194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T23:20:22Z",
        "tags": [],
        "bytes": 24737,
        "type": "upload",
        "etag": "5bd2b43809d2e4273c78f6d20e528171",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549581622/avalanche2019/xh5zdu9puzig65vtosk2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549581622/avalanche2019/xh5zdu9puzig65vtosk2.png"
      },
      {
        "public_id": "avalanche2019/zthk7vpgomh91r45npcn",
        "version": 1549581627,
        "signature": "e735518f15bd8d521f4b06e8cb32c7ccfb2c9ce5",
        "width": 800,
        "height": 204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T23:20:27Z",
        "tags": [],
        "bytes": 22630,
        "type": "upload",
        "etag": "b116275f04c3f779624d7cf87a5f5306",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549581627/avalanche2019/zthk7vpgomh91r45npcn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549581627/avalanche2019/zthk7vpgomh91r45npcn.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Random poem generator based on feeling. Right now it only understands Happy and Sad. Made with Javascript. Need to fix some bugs."
  },
  {
    "_id": "hvFFTzFmi552eEG6e",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-02-28T04:43:49.236Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eguhxsmyglyvjnrog72j",
        "version": 1551379891,
        "signature": "db31833f11f38ceb7302a68aa39defe88fcafc71",
        "width": 1220,
        "height": 760,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T18:51:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 2406548,
        "type": "upload",
        "etag": "ff8272147cf6bc7fb4903d83d87b9484",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551379891/avalanche2019/eguhxsmyglyvjnrog72j.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551379891/avalanche2019/eguhxsmyglyvjnrog72j.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "225660",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "311702",
          "dar": "61:38"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 551246,
        "duration": 34.925167,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-28T13:54:59.44Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:41:44.261Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T16:26:19.524Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-01T21:08:52.361Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T21:21:47.125Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T18:53:39.84Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "*Small talk*.\n\nBased on the dot challenge code. (Audio from [forvo.com](https://forvo.com/)).",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\n// currently requires local audio files.\n// will try to make useable on the site later this week.\n\nlet Points = [];\nlet phrases = [];\n\nconst canvasWidth = 600;\nconst canvasHeight = 400;\nconst numPoints = 100;\n\nlet audioOn = false;\n\nfunction preload() {\n    for (i = 0; i < 21; i++) {\n        phrases.push(loadSound(`./smallTalk/${i}.mp3`));\n    }\n}\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    ellipseMode(CENTER);\n    createAllPoints();\n\n    // controls\n    button = createButton(\"audio on / off\");\n    button.position(canvasWidth / 2, canvasHeight);\n    button.mousePressed(toggleAudio);\n}\n\nfunction draw() {\n    background(255);\n\n    // moving dot\n    let x = (noise(0, 100, frameCount * .005) * canvasWidth);\n    let y = (noise(200, 1000, frameCount * .005) * canvasHeight);\n    fill(50);\n    ellipse(x, y, 10, 10);\n\n    // points\n    displayAllPoints(x, y);\n}\n\nclass Point {\n    constructor(_x, _y, _phrase_key) {\n        this.x = _x,\n        this.y = _y,\n        this.diameter = 5,\n        this.color = 255,\n        this.phrase_key = _phrase_key;\n    }\n\n    display(wandererX, wandererY) {\n        push();\n        // noFill();\n        if (dist(wandererX, wandererY, this.x, this.y) < 30) {\n            this.color = 50;\n            stroke(50);\n            line(wandererX, wandererY, this.x, this.y);\n            console.log(this.phrase_key);\n            if (phrases[this.phrase_key].isPlaying() === false && audioOn) {\n                // play\n                phrases[this.phrase_key].play();\n            }   \n        } else {\n            this.color = 255;\n            // this.phrase.stop();\n        }\n        fill(this.color);\n        noStroke();\n        // stroke(50, 100); // debugging\n        ellipse(this.x, this.y, this.diameter, this.diameter);\n        pop();\n    }\n}\n\nfunction createAllPoints() {\n    for (let i = 0; i < numPoints; i++) {\n        point = new Point(\n            (noise(i, 0) * canvasWidth),\n            (noise(i, 1000) * canvasHeight),\n            Math.floor(map(i, 0, 100, 0, 20))\n        );\n        Points.push(point);\n    }\n}\n\nfunction displayAllPoints(_wandererX, _wandererY) {\n    for (let i = 0; i < Points.length; i++) {\n        Points[i].display(_wandererX, _wandererY);\n    }\n}\n\nfunction toggleAudio() {\n    if (audioOn) {\n        audioOn = false;\n        for (i = 0; i < 21; i++) {\n            phrases[Points[i].phrase_key].stop();\n        }\n    } else {\n        audioOn = true;\n    }\n}"
  },
  {
    "_id": "hxHBbKN5bcpExD8RD",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-23T00:25:27.19Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/howezpqirbaf2yxp1fgm",
        "version": 1556282491,
        "signature": "997700d9bbbd8566513cc9a8c938899895c47ce7",
        "width": 381,
        "height": 500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-26T12:41:31Z",
        "tags": [],
        "bytes": 105477,
        "type": "upload",
        "etag": "57877225e61adb5963f012485a5eb6f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556282491/avalanche2019/howezpqirbaf2yxp1fgm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556282491/avalanche2019/howezpqirbaf2yxp1fgm.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Iron Man by Black Sabbath. Tone.js doesn't get darker than this.",
    "code": "// Tone.js\n// Black Sabbath - Iron Man\n\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n\n// First, create the synth.\n// Synth types: PolySynth, MonoSynth, Synth, DuoSynth, AMSynth, FMSynth, PluckSynth, MetalSynth, etc.\n// const synth = new Tone.Synth().toMaster();\nconst synth = new Tone.FMSynth({\n    //   oscillator: {\n    //     type: 'triangle', // sine, square, triangle, sawtooth, fat*\n    //   },\n    envelope: {\n        attack: 0.2,\n        decay: 1,\n        sustain: 2,\n        release: 3,\n        \n    },\n});\n\n// Connect to the speakers.\nsynth.toMaster();\n\n\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n// intro\n    ['E5', '1n'],\n    ['D5', '1n'],\n    ['E5', '2n'],\n    ['D5', '2n'],\n    ['E5', '1n'],\n\n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '2n'],\n    ['D5', '2n'],\n    ['D5', '2n'],\n    ['E5', '1n'],\n    \n//verse\n    ['B5', '1n'],\n    ['D5', '1n'],\n    ['E5', '2n'],\n    ['E5', '2n'],\n    ['E5', '1n'],\n    \n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '2n'],\n    ['D5', '2n'],\n    ['D5', '2n'],\n    ['E5', '1n'],\n    \n    ['B5', '1n'],\n    ['D5', '1n'],\n    ['E5', '2n'],\n    ['E5', '2n'],\n    ['E5', '1n'],\n    \n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '2n'],\n    ['D5', '2n'],\n    ['D5', '2n'],\n    ['E5', '1n'],\n    \n    ['B5', '1n'],\n    ['D5', '1n'],\n    ['E5', '2n'],\n    ['E5', '2n'],\n    ['E5', '1n'],\n    \n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '4n'],\n    ['F#5', '4n'],\n    ['G5', '2n'],\n    ['D5', '2n'],\n    ['D5', '2n'],\n    ['E5', '1n'],\n];\n\nwindow.onmousedown = (e) => {\n    // Rock on!\n\n    let t = Tone.now();\n    console.log('Iron Man by Black Sabbath:');\n    for (const note of melody) {\n        console.log(note);\n        if (note[0] !== 'rest') {\n            //   synth.triggerAttackRelease(note[0], Tone.Time(note[1]), t);\n            synth.triggerAttackRelease(note[0], Tone.Time(note[1]) + 0.1, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n};\n\nconsole.log('Click to play music!');",
    "inspiration_name": "Iron Man by Black Sabbath",
    "inspiration_url": "https://www.youtube.com/watch?v=7-thChxjcVw"
  },
  {
    "_id": "hyoeffmLCgiy73imm",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T19:42:54.746Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/p3xeywqty8ceqjn2yz0d",
        "version": 1556912677,
        "signature": "458b0dd3c1540a3530b4055c1c3a12b8bc0d61bf",
        "width": 1526,
        "height": 1018,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:44:37Z",
        "tags": [],
        "bytes": 194134,
        "type": "upload",
        "etag": "e83da5013608776ccfc65631bbcb5234",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556912677/avalanche2019/p3xeywqty8ceqjn2yz0d.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556912677/avalanche2019/p3xeywqty8ceqjn2yz0d.png"
      },
      {
        "public_id": "avalanche2019/p8hnytrqgynf5dlncorq",
        "version": 1556912676,
        "signature": "d2002b3e43460cb18bc7d17ae2c7e92a124f9392",
        "width": 1526,
        "height": 1018,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T19:44:36Z",
        "tags": [],
        "bytes": 151697,
        "type": "upload",
        "etag": "809c31c7fad3a2bf4af75238072789a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556912676/avalanche2019/p8hnytrqgynf5dlncorq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556912676/avalanche2019/p8hnytrqgynf5dlncorq.png"
      },
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "i3pKdkXabirMog8cG",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T16:28:26.228Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wezn914n2dqdx8fxt1aq",
        "version": 1554222529,
        "signature": "a883de6bfee503b7467e35dbee8c23c032de13f6",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-02T16:28:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 4230438,
        "type": "upload",
        "etag": "5616c1cb1bd40127326a8607ca4789e8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554222529/avalanche2019/wezn914n2dqdx8fxt1aq.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554222529/avalanche2019/wezn914n2dqdx8fxt1aq.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317376",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "6380751",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 6665606,
        "duration": 5.033333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/smajixntjmhmueyy8eox",
        "version": 1554222579,
        "signature": "799fe6ec7ddc066285434825e159c0d5510bc469",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-02T16:29:39Z",
        "tags": [],
        "bytes": 299150,
        "type": "upload",
        "etag": "29daf81a9717da9fe96bdc8b58c002d5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554222579/avalanche2019/smajixntjmhmueyy8eox.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554222579/avalanche2019/smajixntjmhmueyy8eox.png"
      },
      {
        "public_id": "avalanche2019/g4yliifpfahehpnf6wxm",
        "version": 1554222587,
        "signature": "303766bc14e0c4263fe140eb1eb6351a707fa4d8",
        "width": 1258,
        "height": 650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-02T16:29:47Z",
        "tags": [],
        "bytes": 87244,
        "type": "upload",
        "etag": "8a66559b77dcc0d1cd11469e76a9820c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554222587/avalanche2019/g4yliifpfahehpnf6wxm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554222587/avalanche2019/g4yliifpfahehpnf6wxm.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a glass animation using noise in Cinema 4D and After Effects.",
    "inspiration_name": "Glass Noise Animation",
    "inspiration_url": "https://youtu.be/rF0Py5ynk3I"
  },
  {
    "_id": "i6cwDpPdmMRZdxJL5",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T14:58:07.915Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fjict2bmfeiseuwn7yvu",
        "version": 1554994762,
        "signature": "45b5cab68c033af7da3b2f40ffa48d9e537a8948",
        "width": 1754,
        "height": 1338,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T14:59:22Z",
        "tags": [],
        "bytes": 217272,
        "type": "upload",
        "etag": "5bd72728219a94f14acfe0ca5a42e320",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554994762/avalanche2019/fjict2bmfeiseuwn7yvu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554994762/avalanche2019/fjict2bmfeiseuwn7yvu.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T02:25:34.651Z" }
      }
    ],
    "title": "",
    "description": "lyric mixer using Marco chains and lyric API, user can enter two songs and splitting word for Marcov functions",
    "code": "//getting form data\nconst form = document.forms[0];\nconst submitSongs = document.getElementById('submitSongs');\nsubmitSongs.addEventListener('click', processSongs);\n\nvar songTitle1, songArtist1, songTitle2, songArtist2, keyword;\n\nfunction processSongs(e) {\n\n    //get the first song \n    songTitle1 = document.getElementById(\"song1Title\").value;\n    console.log(songTitle1);\n\n    songArtist1 = document.getElementById(\"song1Artist\").value;\n    console.log(songArtist1);\n\n    songTitle2 = document.getElementById(\"song2Title\").value;\n    console.log(songTitle2);\n\n    songArtist2 = document.getElementById(\"song2Artist\").value;\n    console.log(songArtist2);\n\n    keyword = document.getElementById(\"keyword\").value;\n\n    e.preventDefault();\n    console.log(keyword);\n\n    //get lyrics from API \n    var url;\n    var song1Lyrics, song2Lyrics;\n    url = \"https:/api.lyrics.ovh/v1/\" + songArtist1 + \"/\" + songTitle1;\n    console.log(url);\n    var request = new XMLHttpRequest();\n    request.open('GET', url);\n    request.onreadystatechange = function () {\n        if (this.readyState === 4) {\n            resp = JSON.parse(request.response);\n\n            //first song \n            song1Lyrics = resp.lyrics;\n            // console.log(song1Lyrics);\n            var songTwoUrl = \"https:/api.lyrics.ovh/v1/\" + songArtist2 + \"/\" + songTitle2;\n            var song2 = fetch(songTwoUrl)\n                .then((res) => {\n                    return res.json();\n                })\n                .then((data) => {\n\n                    song2Lyrics = data.lyrics;\n                    console.log(song2Lyrics);\n                    console.log(song1Lyrics);\n                    console.log(keyword);\n                    const model = generateModel(song1Lyrics + \" \" + song2Lyrics);\n                    const output_text = generateText(keyword, model);\n\n\n                    // document.body.innerHTML = output_text;\n                    var printbox = document.getElementById(\"Output\");\n                    printbox.innerHTML = output_text;\n\n\n\n                    return song2Lyrics;\n                });\n\n\n        } else {\n            console.log(\"There was an error or delay in with xml request\");\n            // document.getElementById(\"Output\").innerHTML = \"There was an error\";\n        }\n    }\n    request.send();\n\n}\n\nfunction generateModel(input_text) {\n    const words = input_text.split(\" \");\n    const model = {};\n\n    // loop through all the words except the last one.\n    for (let i = 0; i < words.length - 1; i++) {\n        const target_word = words[i];\n        const next_word = words[i + 1];\n\n        // if the model doesn't contain the target word, add it.\n        if (!model[target_word]) {\n            model[target_word] = [];\n        }\n\n        // add the next word to the possibilities for target_word\n        model[target_word].push(next_word);\n    }\n\n    return model;\n}\n\n\nfunction generateText(first_word, model) {\n    // start with the word passed in\n    let output_text = first_word;\n    let current_word = first_word;\n    console.log(output_text);\n    console.log(current_word);\n    console.log(model);\n    for (let i = 0; i < 120; i++) {\n        // choose the next word by sampling from options in the model\n        current_word = sample(model[current_word]);\n\n        // append word to output\n        output_text += \" \";\n        output_text += current_word;\n\n        // if we get to a word that ends with \".\" we are done.\n        const last_character = current_word.substr(current_word.length - 1);\n        if (last_character === \".\") {\n            break;\n        }\n    }\n    return output_text;\n}\n\nfunction sample(array) {\n    const index = Math.floor(Math.random() * array.length);\n    return array[index];\n}"
  },
  {
    "_id": "i9NFRNwbXkyc2qn3x",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:22:25.521Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mdbnfeotwbabyhgun86c",
        "version": 1550852569,
        "signature": "efd767842c8681c9587f457c679898bc717e5510",
        "width": 884,
        "height": 790,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T16:22:49Z",
        "tags": [],
        "bytes": 953158,
        "type": "upload",
        "etag": "ad52de537fd0701e10febc921d6403a7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550852569/avalanche2019/mdbnfeotwbabyhgun86c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550852569/avalanche2019/mdbnfeotwbabyhgun86c.png"
      },
      {
        "public_id": "avalanche2019/ibjf9xqumqi0lo2jeex1",
        "version": 1550852577,
        "signature": "6908a2202defdda66c0318b983bbc2be29697ead",
        "width": 1344,
        "height": 862,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T16:22:57Z",
        "tags": [],
        "bytes": 806227,
        "type": "upload",
        "etag": "c020c45a57f452bb29630cbbd8aaa7f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550852577/avalanche2019/ibjf9xqumqi0lo2jeex1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550852577/avalanche2019/ibjf9xqumqi0lo2jeex1.png"
      },
      {
        "public_id": "avalanche2019/pthlybodpc0gde2t9obi",
        "version": 1550852585,
        "signature": "5f219ece39ce321c592fee4c6cd87475d925512f",
        "width": 1254,
        "height": 774,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T16:23:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 5805878,
        "type": "upload",
        "etag": "479c48131377eae5ca4ab11a4d4b24b1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550852585/avalanche2019/pthlybodpc0gde2t9obi.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550852585/avalanche2019/pthlybodpc0gde2t9obi.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "2432562",
          "dar": "209:129"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 2436373,
        "duration": 19.064,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Minecraft Tutorial in Unity: code a seed for terrain",
    "inspiration_url": "https://www.youtube.com/watch?v=pVYeyHD7xW4"
  },
  {
    "_id": "iBD3incugsqjwgKRA",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T05:38:07.759Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cvg4oky0wbeebjz0icxv",
        "version": 1550209096,
        "signature": "decf9b2e731b046be094a0aadbef626c77471666",
        "width": 1680,
        "height": 1008,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-15T05:38:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 220375,
        "type": "upload",
        "etag": "99ea9d98e4f4fc53f7295fc24f7101bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550209096/avalanche2019/cvg4oky0wbeebjz0icxv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550209096/avalanche2019/cvg4oky0wbeebjz0icxv.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "113573",
          "dar": "5:3"
        },
        "frame_rate": 60,
        "bit_rate": 119793,
        "duration": 14.717,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/hvxoknylpayrb2zo2f6l",
        "version": 1550209105,
        "signature": "f008cf8b8c147d715276c5b09eee8c659b3b797f",
        "width": 3030,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T05:38:25Z",
        "tags": [],
        "bytes": 1594224,
        "type": "upload",
        "etag": "60aaa5fc6cc1a962a722a8889f441c21",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550209105/avalanche2019/hvxoknylpayrb2zo2f6l.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550209105/avalanche2019/hvxoknylpayrb2zo2f6l.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Joystick-Controlled Penguin\n- \nMade with Processing"
  },
  {
    "_id": "iGkxFon4BGjjJJpwt",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T19:05:55.466Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/awd66ekfyj3hxzh6nbze",
        "version": 1549047964,
        "signature": "01e6d897c0e545886a1995003ed2c0dc06e38b5f",
        "width": 1580,
        "height": 1140,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T19:06:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 3100213,
        "type": "upload",
        "etag": "9a84da664b5d705c19a3e7167a73603a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549047964/avalanche2019/awd66ekfyj3hxzh6nbze.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549047964/avalanche2019/awd66ekfyj3hxzh6nbze.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "3583021",
          "dar": "79:57"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3606821,
        "duration": 6.876333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T20:59:29.76Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:00.961Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "iHrsPP9zvLxoYb7CG",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T17:04:56.357Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bquxxpczeud5gicnvkha",
        "version": 1551891963,
        "signature": "23bf1fb4bb50ea58beb45f100a4d0bc0a16df1ac",
        "width": 1272,
        "height": 960,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-06T17:06:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 9258754,
        "type": "upload",
        "etag": "6b69949d9de31b2d0760c98e66fbf148",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551891963/avalanche2019/bquxxpczeud5gicnvkha.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551891963/avalanche2019/bquxxpczeud5gicnvkha.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "13572584",
          "dar": "53:40"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 13590831,
        "duration": 5.45,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/f9hvxwkudsro97ektozr",
        "version": 1551892213,
        "signature": "e50857ad7f7f722fa368a408f3cd4939a47aaaef",
        "width": 1268,
        "height": 956,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-06T17:10:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 10510932,
        "type": "upload",
        "etag": "3a41ce50fc85dbf0f4f101fc61fd9439",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551892213/avalanche2019/f9hvxwkudsro97ektozr.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551892213/avalanche2019/f9hvxwkudsro97ektozr.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "14193988",
          "dar": "317:239"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 14211963,
        "duration": 5.916667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T00:59:02.564Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T01:54:39.845Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-04-02T05:52:51.796Z" }
      }
    ],
    "title": "",
    "description": "Particle system of circles based on webcam pixel data. Try with and without the stroke (line 20) and with/without the brightness threshold (line 37/41)",
    "inspiration_name": "Coding Train",
    "inspiration_url": "https://www.youtube.com/watch?v=0V3uYA1hafk",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/addons/p5.dom.js\n\nlet cam;\nlet vScale = 16;\n\nlet particles = [];\n\nfunction setup() {\n  createCanvas(640, 480);\n  frameRate(15);\n  pixelDensity(1);\n  cam = createCapture(VIDEO);\n  cam.size(width / vScale, height / vScale);\n\n  for (let i = 0; i < 1; i++) {\n    particles[i] = new Particle();\n  }\n}\n\nfunction draw() {\n  background(0, 5);\n  noStroke();\n  // stroke(70, 102, 255);\n\n  cam.loadPixels();\n  cam.hide();\n  // loadPixels();\n  for (let y = 0; y < cam.height; y++) {\n    for (let x = 0; x < cam.width; x++) {\n      let pixelRed = getQuick(cam, x, y)[0];\n      let pixelGreen = getQuick(cam, x, y)[1];\n      let pixelBlue = getQuick(cam, x, y)[2];\n      let pixelAlpha = getQuick(cam, x, y)[3];\n\n      let bright = (pixelRed + pixelBlue + pixelGreen) / 3;\n\n      var threshold = 150;\n      for (let i = 0; i < particles.length; i++) {\n        if (bright < threshold) {\n          particles[i] = new Particle(x * vScale, y * vScale);\n          particles[i].update();\n          particles[i].show();\n        }\n      }\n    }\n  }\n}\n\nfunction getQuick(img, x, y) {\n  var i = (img.width - x + 1 + img.width * y) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3]\n  ];\n}\n\nclass Particle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.r = random(1, 20);\n\n    this.update = function() {\n      this.y += random(-10, 10);\n      this.x += random(-10, 10);\n    };\n    this.show = function() {\n      let px = floor(this.x / vScale);\n      let py = floor(this.y / vScale);\n      let col = getQuick(cam, px, py);\n      fill(col[0], col[1], col[2]);\n\n      ellipse(this.x, this.y, this.r, this.r);\n    };\n  }\n}"
  },
  {
    "_id": "iL3ccgLXTf3wxctCC",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T03:47:43.325Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "A very crappy replication of a small part of the office theme song",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// code from class example \n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 250;\n\nconst melody = [\n  ['Eb4', '3n.'],\n  \n  ['rest', '0.2s'],\n  ['Eb4', '5n'],\n  ['Gb4', '5n'],\n  ['Gb4', '7n'],\n  \n  ['rest', '0.2s'],\n  ['Gb4', '3n'],\n  ['rest', '0.4s'],\n  \n  ['Eb4', '5n'],\n  ['Gb4', '5n'],\n  ['Eb5', '5n'],\n  \n  ['rest', '0.2s'],\n  ['Eb5', '3n'],\n  ['rest', '0.5s'],\n \n];\n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "iRFRm3n3o2gP2uyfh",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-08T23:28:08.869Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gutfgz8yhmbjoqmthent",
        "version": 1557358097,
        "signature": "8349a1a094e64321c86cf2a4e21aff2113ebfc07",
        "width": 1592,
        "height": 1192,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-08T23:28:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 8265943,
        "type": "upload",
        "etag": "37aa519b932e04df5b71a61a50e837d0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557358097/avalanche2019/gutfgz8yhmbjoqmthent.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557358097/avalanche2019/gutfgz8yhmbjoqmthent.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "240775",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1023490",
          "dar": "199:149"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1290457,
        "duration": 51.2435,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tried to fix background of old game using image creation but it didn't work, tried to do some other small game mechanics testing including timer and score",
    "code": "var player, chest, treasure;\nvar playerImage, chestImage, treaureImage;\nvar score = 0;\nvar frameCount;\nvar timeLeft = 15;\nvar chestPos;\nvar won = false;\n\nfunction setup() {\n    createCanvas(800, 600);\n    playerImage = loadImage(\"adventurer2.png\");\n    chestImage = loadImage(\"Treasure Chest .png\");\n    treasureImage = loadImage(\"gold_pile_0.png\");\n    //position of adventurer at start\n    player = createSprite(10, 40, 0, 0);\n\n    //work on increasing this every round \n    var randomX = Math.floor(Math.random() * width);\n    var randomY = Math.floor(Math.random() * height);\n    chestPos = createVector(randomX, randomY);\n\n    player.maxSpeed = 6;\n    background(0, 0, 0);\n\n}\n\nfunction draw() {\n    background(100, 100, 100);\n    chest = createSprite(chestPos.x, chestPos.y, 0, 0);\n    //player interactions \n    text('Controls: Arrow Keys Up, Down, Left, and Right Arrows', width / 2, 20);\n    text('Mission: Get to the treasure in time!', width / 2, 40);\n    text('Time Left:' + timeLeft, width / 2, 70);\n    text('Score:' + score, width / 2, 90);\n\n    player.maxSpeed = 6;\n    player.friction = 0.98;\n    player.setCollider('circle', 0, 0, 20);\n    player.addImage('normal', playerImage);\n    player.scale = .08;\n    chest.setCollider(\"rectangle\", 0, 0, 20, 20);\n    chest.addImage('normal', chestImage);\n    chest.scale = .2;\n\n    keyPressed();\n\n    function keyPressed() {\n        if (keyCode === LEFT_ARROW) {\n            player.position.x -= 2;\n            player.velocity.x -= 2;\n        }\n        if (keyCode === RIGHT_ARROW) {\n            player.position.x += 2;\n            player.velocity.x += 2;\n\n        }\n        if (keyCode === UP_ARROW) {\n            player.position.y -= 2;\n            player.velocity.y -= 2;\n        }\n        if (keyCode === DOWN_ARROW) {\n            player.position.y += 2;\n            player.velocity.y += 2;\n        }\n    }\n    checkPlayerPos()\n    drawSprites();\n\n    frameCount++;\n    if (frameCount % 30 == 0) {\n        timeLeft--;\n    }\n\n    checkIfFailed();\n\n}\n\n\nfunction checkPlayerPos() {\n    if (distanceFromChest() <= 45) {\n        console.log(\"you got treasure!!!!!!!\");\n        treasure = createSprite(chestPos.x, chestPos.y, 0, 0);\n        treasure.addImage('normal', treasureImage);\n        won = true;\n        score++;\n        //bring player back to start \n        player.position.x = 10;\n        player.position.y = 40;\n        //reset time \n        timeLeft = 15;\n        //reset treasure position\n        var randomX = Math.floor(Math.random() * width);\n        var randomY = Math.floor(Math.random() * height);\n        chestPos = createVector(randomX, randomY);\n        player.velocity.x = 0;\n        player.velocity.y = 0;\n    }\n}\n\n\nfunction distanceFromChest() {\n    var distance;\n    distance = dist(player.position.x, player.position.y, chest.position.x, chest.position.y);\n    // console.log(distance);\n    return distance\n}\n\nfunction checkIfFailed() {\n    if (timeLeft <= 0) {\n        won = false;\n        console.log(\"you didnt get the treasure in time! Try again\");\n        player.position.x = 10;\n        player.position.y = 40;\n        player.velocity.x = 0;\n        player.velocity.y = 0;\n        timeLeft = 15;\n        var randomX = Math.floor(Math.random() * width);\n        var randomY = Math.floor(Math.random() * height);\n        chestPos = createVector(randomX, randomY);\n    }\n\n}"
  },
  {
    "_id": "iTuZmQti8e84im3YC",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:49:46.129Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qqdjxifvxo3hibp3wi9f",
        "version": 1549651794,
        "signature": "0690289c63f9c2abffbcc707d956f1387dbbad6e",
        "width": 1200,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:49:54Z",
        "tags": [],
        "bytes": 438031,
        "type": "upload",
        "etag": "73107e375d8970bb7836b55b5fa875c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549651794/avalanche2019/qqdjxifvxo3hibp3wi9f.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549651794/avalanche2019/qqdjxifvxo3hibp3wi9f.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Since everyone is on that Brownian Hype...",
    "inspiration_name": "Justin's In-Class Example",
    "inspiration_url": "http://compform.net/js_lab/js_lab.html?/random/sketches/brownian.js",
    "code": "let chance;\nlet attempt;\nlet windowHeight = 600,\n  windowWidth = 600;\nlet gridSize = 10;\n\nfunction setup() {\n  createCanvas(windowHeight, windowWidth);\n  noLoop();\n}\n\nfunction draw() {\n  background(40, 40, 40);\n  fill(220, 220, 220);\n  stroke(220, 220, 220);\n\n  let step = 80;\n  for (let y = step - 20; y < windowHeight - 20; y += step) {\n    for (let x = step - 20; x < windowWidth - 20; x += step) {\n      drawBrownianPath(x, y, 10, 100);\n    }\n  }\n}\n\nfunction drawBrownianPath(x, y, segmentLength, steps) {\n  for (var step = 0; step < steps; step++) {\n    var nextX, nextY;\n    nextX = x + random(-segmentLength, segmentLength);\n    nextY = y + random(-segmentLength, segmentLength);\n    line(x, y, nextX, nextY);\n    x = nextX;\n    y = nextY;\n  }\n}"
  },
  {
    "_id": "iTxoD7Tqh6iJk37Y8",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:26:10.062Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nvowl33kazw3pdjji0gd",
        "version": 1552062486,
        "signature": "f2770bd4dfdd7c89f5e7ad3f12af23f0cc26a3ce",
        "width": 2096,
        "height": 1088,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:28:06Z",
        "tags": [],
        "bytes": 426771,
        "type": "upload",
        "etag": "8467865cfcbda684d29abe74b1241954",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552062486/avalanche2019/nvowl33kazw3pdjji0gd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552062486/avalanche2019/nvowl33kazw3pdjji0gd.png"
      },
      {
        "public_id": "avalanche2019/qfubibtpeuhlnixhuxp9",
        "version": 1552062500,
        "signature": "a418af41244b53746437eb2501811583c346bbc8",
        "width": 2078,
        "height": 1082,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T16:28:20Z",
        "tags": [],
        "bytes": 3055090,
        "type": "upload",
        "etag": "fd8553cbba7528dc0cfb76e97a64fbef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552062500/avalanche2019/qfubibtpeuhlnixhuxp9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552062500/avalanche2019/qfubibtpeuhlnixhuxp9.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "HIGH RES TO LOW POLY\nwarming up with image processing\n turning a high res image of a still from a game I made into a ”low-poly”   image",
    "code": "var r, g, b;\nlet farm;\n\nfunction preload() {\n    farm = loadImage('farmInput.png');\n}\n\nfunction setup() {\n    createCanvas(1000, 1000);\n    background(255);\n    rectMode(CENTER)\n    // colorMode(HSB, 360, 100, 100, 100);\n    farm.loadPixels();\n    pixelDensity(1);\n\n}\n\n\nfunction draw() {\n    processImage();\n    noLoop();\n}\n\nfunction processImage() {\n    for (var y = 0; y < farm.height; y += 8) {\n        for (var x = 0; x < farm.width; x += 8) {\n            c = getQuick(farm, x, y);\n            // a = getQuick(farm, x, y)[3];\n            // if (c[1] > 150) {\n            console.log(c);\n            // let thisColor = color(r, g, b);\n            // light = lightness(this_pixel);\n            // console.log(light);\n            // depth = map(light, 0, 100, 0, 400);\n            // greyscale = map(light, 0, 100, 0, 255)\n\n            // console.log(greyscale)\n            fill(c);\n            noStroke();\n            rect(x, y, 8, 8);\n            // }\n            farm.updatePixels();\n\n        }\n    }\n}\n//function by Justin Bakse\nfunction getQuick(img, x, y) {\n\n    var i = (y * farm.width + x) * 4;\n    return [\n        farm.pixels[i],\n        farm.pixels[i + 1],\n        farm.pixels[i + 2],\n        farm.pixels[i + 3],\n    ];\n}"
  },
  {
    "_id": "iXgxgFX7ma4CzDxde",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-02-25T18:48:55.971Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ef5mllfe5xlszzj42ad5",
        "version": 1551120736,
        "signature": "32d0b7794ac856322f2495dac70e68f52749d44f",
        "width": 1100,
        "height": 1100,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-25T18:52:16Z",
        "tags": [],
        "bytes": 153945,
        "type": "upload",
        "etag": "55a222fffae00852c321dd5e84472989",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551120736/avalanche2019/ef5mllfe5xlszzj42ad5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551120736/avalanche2019/ef5mllfe5xlszzj42ad5.png"
      },
      {
        "public_id": "avalanche2019/zzrsxidhf8jm4jwvxqn5",
        "version": 1551120742,
        "signature": "8c5bb0a19095fbbe273b0f6530d4f27ac07170d0",
        "width": 796,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-25T18:52:22Z",
        "tags": [],
        "bytes": 68341,
        "type": "upload",
        "etag": "d8d940e92140e978a14d44cb6f43ab95",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551120742/avalanche2019/zzrsxidhf8jm4jwvxqn5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551120742/avalanche2019/zzrsxidhf8jm4jwvxqn5.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Dot challenge. First image is mine, second is the goal.",
    "inspiration_name": "Coding challenge - dots",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n/* Observations of example\n * - Canvas\n *      - square canvas\n *      - dark gray background\n * - Dot placement\n *      - bias towards center of canvas\n *      - allows overlap\n * - Dot size\n *      - varies incrementally - not continuous\n * - Dot color\n *      - hue varies incrementally - not continuous\n *      - full saturation\n *      - full brightness\n * - Dot size and color are related\n *      - red -> violet ~ smaller -> bigger\n *      - all dots of x color are y size, and vice versa\n *      - frequency bias towards green and yellow / medium size\n */\n\nfunction setup() {\n    createCanvas(400, 400);\n}\n\nfunction draw() {\n    background(50);\n    noStroke();\n    ellipseMode(CENTER);\n\n    // Strategy 1: employs noise\n    for (let i = 0; i < 100; i++) {\n        const noiseFrequency = 50;\n\n        // Noise placement.\n        let x = (noise(i * noiseFrequency, 0) * 400);\n        let y = (noise(i * noiseFrequency, 1000) * 400);\n\n        // Noise hue assignment. Bias towards middle hues.\n        // Applied at increments, not a continuously.\n        colorMode(HSB, 1);\n        let r = noise(i * noiseFrequency, 2000);\n        let h = Math.floor(r * 11) / 10; // 0 - 1 at .1 incrememnts\n        let s = 1;\n        let b = 1;\n        fill(h, s, b);\n\n        // Diameter is a function of hue.\n        diameter = map(h, 0, 1, 5, 20);\n\n        ellipse(x, y, diameter, diameter);\n    }\n\n    // Strategy 2: employs random with middle biasing\n    // for (let i = 0; i < 100; i++) {\n    //     // Random placement, with middle bias on sample of three.\n    //     let x = (random(width) + random(width) + random(width)) / 3;\n    //     let y = (random(height) + random(height) + random(height)) / 3;\n\n    //     // There are 10 colors, at even increemnts between 0 and 1.\n    //     // Bias towards green/yellow (i.e. middle bias again).\n    //     colorMode(HSB, 1);\n    //     let r = (random() + random() + random()) / 3;\n    //     let h = Math.round(r * 10) / 10; // 0 - 1 at .1 incrememnts\n    //     let s = 1;\n    //     let b = 1;\n    //     fill(h, s, b);\n\n    //     // Diameter is a function of hue.\n    //     diameter = map(h, 0, 1, 5, 18);\n\n    //     ellipse(x, y, diameter, diameter);\n    // }\n\n    noLoop();\n}"
  },
  {
    "_id": "ibCFAcu9nrfpYERkk",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:38:38.462Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Using the tone.js arpeggiator example to create a random walk on different scales",
    "inspiration_name": "Tone.js Arpeggiator",
    "inspiration_url": "https://github.com/Tonejs/Tone.js/wiki/Arpeggiator",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\n// Credit: https://github.com/Tonejs/Tone.js/wiki/Arpeggiator\n\n// First, create the synth.\n\nvar myArray = [\"C4\", \"D4\", \"E4\"]\nvar myArrays = [\n  [\"C4\", \"D4\", \"E4\"],\n  [\"C5\", \"D5\", \"E5\", \"F5\", \"G5\"],\n  [\"C4\",\"D4\",\"Eb4\",\"F4\",\"G4\",\"A4\",\"Bb4\"],\n  [\"C5\",\"Db5\",\"Eb5\",\"F5\",\"Gb5\",\"Ab5\",\"Bb5\"],\n  [\"C4\",\"Eb4\",\"F4\",\"F#4\",\"G4\",\"Bb4\"]\n]\n\nvar min=0; \nvar max=4;  \nvar random =Math.floor(Math.random() * (+max - +min)) + +min; \nconsole.log(myArrays[random]);\n\n// var reverb = new Tone.JCReverb(0.9).connect(Tone.Master);\n// var delay = new Tone.FeedbackDelay(0.8);\n//connecting the synth to reverb through delay\n\nvar synth = new Tone.PolySynth(3, Tone.Synth, {\n  \"oscillator\" : {\n    \"type\" : \"fatsawtooth\",\n    \"count\" : 3,\n    \"spread\" : 30\n  },\n  \"envelope\" : {\n    \"attack\" : 0.01,\n    \"decay\" : 0.1,\n    \"sustain\" : 0.5,\n    \"release\" : 0.4,\n    \"attackCurve\" : \"exponential\"\n  },\n}).toMaster()\n// synth.chain(delay, reverb);\n\n\nTone.Transport.bpm.value = 132;\n\nwindow.onmousedown = () => {\n  // Play the melody!\n  play();\n};\n\nvar pattern = new Tone.Pattern(function(time, note){\n  synth.triggerAttackRelease(note, 0.25);\n},  myArrays[random], \"randomWalk\");\n\npattern.start(0);\npattern.humanize = true;\npattern.interval = \"8n\"\n\nfunction play() {\n  Tone.Transport.start();\n\n}"
  },
  {
    "_id": "ifn5u6YcSgTDi7f2M",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T15:48:30.984Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s1w8lhptyhbwdcymuj8c",
        "version": 1556898909,
        "signature": "7cf44cda2a4495e3f8757b2ff50a8d1d8a781844",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T15:55:09Z",
        "tags": [],
        "bytes": 2636450,
        "type": "upload",
        "etag": "95eae4c8f07d8f797ab56e2c86bc59a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556898909/avalanche2019/s1w8lhptyhbwdcymuj8c.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556898909/avalanche2019/s1w8lhptyhbwdcymuj8c.jpg"
      },
      {
        "public_id": "avalanche2019/i6rqofumnhulswwytmjm",
        "version": 1556898918,
        "signature": "84e0097a6973aa4bb44cd1d40efa2e543c8fb056",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T15:55:18Z",
        "tags": [],
        "bytes": 3390684,
        "type": "upload",
        "etag": "dceb077db8534d6db96ec6b833bdef7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556898918/avalanche2019/i6rqofumnhulswwytmjm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556898918/avalanche2019/i6rqofumnhulswwytmjm.jpg"
      },
      {
        "public_id": "avalanche2019/ngosbe5uoadwbv3jkakf",
        "version": 1556898932,
        "signature": "43e682aa045d5b0e66dfe178faef5d9fd431019c",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-03T15:55:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 18632534,
        "type": "upload",
        "etag": "2660b3ae270598c311dcd41d0a34aa6d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556898932/avalanche2019/ngosbe5uoadwbv3jkakf.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556898932/avalanche2019/ngosbe5uoadwbv3jkakf.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "908128",
          "dar": "16:9"
        },
        "frame_rate": 30,
        "bit_rate": 911126,
        "duration": 163.6,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Following from the last sketch, I did a CNC cut on the 3D model and then painted it to encapsulate the idea of a local story trying to survive in a landscape driven by national news media organizations and technology companies.",
    "inspiration_name": "Local Stories 3D Model"
  },
  {
    "_id": "ijtFYv3qxHSyLevFT",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T18:55:27.699Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zu6etu9ggc5uigqhn94c",
        "version": 1555700350,
        "signature": "84f359680ed8656ed66e1207055407831c8baa23",
        "width": 1188,
        "height": 788,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T18:59:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 19264998,
        "type": "upload",
        "etag": "3b236e42d13b8dd9d7f2e564763463db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555700350/avalanche2019/zu6etu9ggc5uigqhn94c.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555700350/avalanche2019/zu6etu9ggc5uigqhn94c.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "309330",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "4638681",
          "dar": "297:197"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5104606,
        "duration": 30.192333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T19:48:33.188Z" }
      }
    ],
    "title": "",
    "description": "Adding on the previous sketch, making circle size dictate volume put a slider to control circle movement speed so that you could control more the sound, but the frame rate is too slow to really allow for this in real time in the browser. circles light up when activated by one another and their sounds emit",
    "code": "let mySounds = [];\nlet soundsLength = 53;\nlet circles = [];\nvar button;\nlet playing = false;\nvar slider;\n\nfunction preload() {\n    mySounds[0] = loadSound('3.mp3');\n    mySounds[1] = loadSound('4.mp3');\n    mySounds[2] = loadSound('5.mp3');\n    mySounds[3] = loadSound('6.mp3');\n    mySounds[4] = loadSound('7.mp3');\n    mySounds[5] = loadSound('9.mp3');\n    mySounds[6] = loadSound('10.mp3');\n    mySounds[7] = loadSound('11.mp3');\n    mySounds[8] = loadSound('12.mp3');\n    mySounds[9] = loadSound('13.mp3');\n    mySounds[10] = loadSound('16.mp3');\n    mySounds[11] = loadSound('17.mp3');\n    mySounds[12] = loadSound('18.mp3');\n    mySounds[13] = loadSound('19.mp3');\n    mySounds[14] = loadSound('20.mp3');\n    mySounds[15] = loadSound('21.mp3');\n    mySounds[16] = loadSound('22.mp3');\n    mySounds[17] = loadSound('23.mp3');\n    mySounds[18] = loadSound('3.mp3');\n    mySounds[19] = loadSound('4.mp3');\n    mySounds[20] = loadSound('5.mp3');\n    mySounds[21] = loadSound('6.mp3');\n    mySounds[22] = loadSound('7.mp3');\n    mySounds[23] = loadSound('9.mp3');\n    mySounds[24] = loadSound('10.mp3');\n    mySounds[25] = loadSound('11.mp3');\n    mySounds[26] = loadSound('12.mp3');\n    mySounds[27] = loadSound('13.mp3');\n    mySounds[28] = loadSound('16.mp3');\n    mySounds[29] = loadSound('17.mp3');\n    mySounds[30] = loadSound('18.mp3');\n    mySounds[31] = loadSound('19.mp3');\n    mySounds[32] = loadSound('20.mp3');\n    mySounds[33] = loadSound('21.mp3');\n    mySounds[34] = loadSound('22.mp3');\n    mySounds[35] = loadSound('23.mp3');\n    mySounds[36] = loadSound('3.mp3');\n    mySounds[37] = loadSound('4.mp3');\n    mySounds[38] = loadSound('5.mp3');\n    mySounds[39] = loadSound('6.mp3');\n    mySounds[40] = loadSound('7.mp3');\n    mySounds[41] = loadSound('9.mp3');\n    mySounds[42] = loadSound('10.mp3');\n    mySounds[43] = loadSound('11.mp3');\n    mySounds[44] = loadSound('12.mp3');\n    mySounds[45] = loadSound('13.mp3');\n    mySounds[46] = loadSound('16.mp3');\n    mySounds[47] = loadSound('17.mp3');\n    mySounds[48] = loadSound('18.mp3');\n    mySounds[49] = loadSound('19.mp3');\n    mySounds[50] = loadSound('20.mp3');\n    mySounds[51] = loadSound('21.mp3');\n    mySounds[52] = loadSound('22.mp3');\n    mySounds[53] = loadSound('23.mp3');\n\n}\n\nfunction setup() {\n    createCanvas(600, 400);\n    background(50);\n    button = createButton('play');\n    button.mousePressed(start);\n    console.log(button);\n    slider = createSlider(0, 5, 1, .5);\n    slider.position(10, 10);\n    slider.style('width', '80px');\n    circles = createCircles();\n\n    console.log(circles);\n    fill(255);\n    noStroke();\n\n\n}\n\nfunction start() {\n\n\n    playing = true;\n\n}\n\nfunction draw() {\n\n    if (playing) {\n\n        background(50);\n        for (let i = 0; i < circles.length; i++) {\n            fill(255);\n            var val = slider.value();\n            // circles[i].xSpeed = random(val);\n            // circles[i].ySpeed = val; \n\n            circles[i].x += circles[i].xSpeed;\n            circles[i].y += circles[i].ySpeed;\n            //check collisions \n\n            let volume = map(circles[i].circleSize, 2, 30, 0, 1);\n            mySounds[i].setVolume;\n\n            //check circles compared to one another \n            for (let j = 0; j < circles.length; j++) {\n                if (j != i) {\n                    let distance = dist(circles[i].x, circles[i].y, circles[j].x, circles[j].y);\n                    // console.log(distance);\n                    if (distance <= circles[j].circleSize && distance <= circles[i].circleSize) {\n             \n                        mySounds[i].play();\n                        push();\n                        fill(255, 0, 0);\n                    }\n\n                }\n            }\n            ellipse(circles[i].x, circles[i].y, circles[i].circleSize);\n            let r = circles[i].circleSize / 2;\n            if ((circles[i].x < r) || (circles[i].x > width - r)) {\n                circles[i].xSpeed = -circles[i].xSpeed;\n            }\n            if ((circles[i].y < r) || (circles[i].y > height - r)) {\n                circles[i].ySpeed = -circles[i].ySpeed;\n            }\n            pop();\n        }\n    }\n}\n\n\n\nfunction createCircles() {\n    let circlez = [];\n    var val = slider.value();\n    for (let i = 0; i < soundsLength; i++) {\n        let circle = {\n            x: Math.floor(random(width)),\n            y: Math.floor(random(height)),\n            xSpeed: random(val - 1, val + 1),\n            ySpeed: random(val - 1, val + 1),\n            circleSize: random(2, 30),\n            outterRadius: 60,\n        }\n        circlez[i] = circle;\n\n    }\n    return circlez;\n\n\n}"
  },
  {
    "_id": "ik4FyuEfzhAX8YAKd",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-30T12:47:57.707Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/viavrdms8dv1xiboywfs",
        "version": 1556628507,
        "signature": "8a720ada89c92f0657c575f7b879d2a566da29f4",
        "width": 1080,
        "height": 1920,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-30T12:48:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 10935247,
        "type": "upload",
        "etag": "38c857e4991395de9bf4f78977b5cd4d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556628507/avalanche2019/viavrdms8dv1xiboywfs.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556628507/avalanche2019/viavrdms8dv1xiboywfs.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "64561",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "15277490"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 15437994,
        "duration": 5.666667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "iqAkz6s6WtKoThtJw",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T19:20:01.606Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gv0djkpy6iuytb5w3zph",
        "version": 1555701609,
        "signature": "06543b42c9fa49dcd2a56cc2e9e29b14f6f96728",
        "width": 624,
        "height": 304,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T19:20:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 449022,
        "type": "upload",
        "etag": "81d9efc16d45fca1595c9b1f3edeb11c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555701609/avalanche2019/gv0djkpy6iuytb5w3zph.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555701609/avalanche2019/gv0djkpy6iuytb5w3zph.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "306248",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "122148",
          "dar": "39:19"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 433663,
        "duration": 8.283333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Bounce example with sound effect"
  },
  {
    "_id": "iqt9YNgEaiBttvFdp",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T01:48:35.035Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/elfqp7zbqfc0b2n4xsvh",
        "version": 1549504126,
        "signature": "0642fcbef6094d328f7e9c866a29e65b2aec3760",
        "width": 994,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T01:48:46Z",
        "tags": [],
        "bytes": 160603,
        "type": "upload",
        "etag": "cdc7ee0349c22c727f316cd5d9b800f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549504126/avalanche2019/elfqp7zbqfc0b2n4xsvh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549504126/avalanche2019/elfqp7zbqfc0b2n4xsvh.png"
      },
      {
        "public_id": "avalanche2019/dhzd9d820qxhobupvte2",
        "version": 1549504150,
        "signature": "b8ca962d5174781da6b8b695272987619929e004",
        "width": 990,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T01:49:10Z",
        "tags": [],
        "bytes": 140907,
        "type": "upload",
        "etag": "4f5c022881b8bfa470f11ba5b46b6e41",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549504150/avalanche2019/dhzd9d820qxhobupvte2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549504150/avalanche2019/dhzd9d820qxhobupvte2.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T03:14:43.13Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:34:45.075Z" }
      }
    ],
    "title": "",
    "description": "from p5.js examples https://p5js.org/examples/simulate-brownian-motion.html",
    "inspiration_name": "brownian motion",
    "inspiration_url": "https://p5js.org/examples/simulate-brownian-motion.html",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nvar length = 700;\nvar size = 80;\nvar ax = [];\nvar ay = [];\n\n\nwindow.setup = function(){\n  createCanvas(500, 500);\n  for ( var i = 0; i < length; i++ ) {\n    ax[i] = width / 2;\n    ay[i] = height / 2;\n  }\n  rectMode(CENTER);\n  frameRate(20);\n}\n\nwindow.draw = function(){\n  background(23);\n  stroke(220);\n  strokeWeight(0.5);\n  noFill();\n  rect(250,250,170,170);\n  for ( var i = 1; i < length; i++ ) {\n    ax[i-1] = ax[i];\n    ay[i-1] = ay[i];\n  }\n\n  ax[length - 3] += random(-size, size);\n  ay[length - 3] += random(-size, size);\n  ax[length - 1] = constrain(ax[length - 1], 0, width);\n  ay[length - 1] = constrain(ay[length - 1], 0, height);\n\n  for ( var j = 1; j < length; j++ ) {\n    stroke(220,220,220,70);\n    line(ax[j - 1], ay[j - 1], ax[j], ay[j]);\n  }\n}"
  },
  {
    "_id": "iwPtTJXxgHtENvcFp",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-08T21:04:30.257Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zvhhpjyb8clsd8zrq0il",
        "version": 1557349478,
        "signature": "7ce597580cecf16f5216c93df61b15762abae82e",
        "width": 1618,
        "height": 1214,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-08T21:04:38Z",
        "tags": [],
        "bytes": 476846,
        "type": "upload",
        "etag": "e117aa7e1c2b786aeb4d757060e5be16",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557349478/avalanche2019/zvhhpjyb8clsd8zrq0il.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557349478/avalanche2019/zvhhpjyb8clsd8zrq0il.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "was trying to change my old noise map to  a new kind of game, realized though because of how much information generated in each frame the frame rate is too slow to move the player well and also the map regenerates every frame, I think I am going to work on this so the background renders as an image and only updates every so often while still being able to move the player on the screen to get the treasure",
    "code": "var player, chest, treasure;\nvar playerImage, chestImage, treaureImage;\n\nfunction setup() {\n\n    createCanvas(800, 600);\n    playerImage = loadImage(\"adventurer2.png\");\n    chestImage = loadImage(\"Treasure Chest .png\");\n    treasureImage = loadImage(\"gold_pile_0.png\");\n    //position of adventurer at start\n    player = createSprite(10, 40, 0, 0);\n    player.maxSpeed = 6;\n    background(0, 0, 0);\n    cols = floor(width / scl);\n    rows = floor(height / scl);\n    colorMode(HSB);\n    noStroke();\n    // frameRate(.5);\n}\nlet inc = 0.02;\nlet scl = 2;\nlet cols, rows;\nlet zOff = 0;\nlet h;\nlet treasurePos = {\n    x: 0,\n    y: 0,\n};\nlet treasureSize = 8;\n\nfunction draw() {\n    background(0, 0, 100);\n    var yOff = 0;\n    let treasureheight = 150;\n    treasurePos = {\n        x: 0,\n        y: 0\n    };\n    for (let y = 0; y < rows; y++) {\n        var xOff = 0;\n        for (let x = 0; x < cols; x++) {\n            let index = (x + y * width) * 4;\n            let brightness = noise(xOff, yOff, zOff) * 255;\n            setColors(brightness);\n\n            //update brightness\n            if (brightness > treasureheight) {\n                treasureheight = brightness;\n                treasurePos = {\n                    x: x * scl,\n                    y: y * scl,\n                };\n            }\n            xOff += inc;\n            rect(x * scl, y * scl, scl, scl);\n        }\n        yOff += inc;\n        zOff += 0.010;\n\n    }\n    push();\n    fill(0, 90, 90);\n    textSize(12);\n    text('x', treasurePos.x, treasurePos.y);\n\n    pop();\n\n    //player interactions \n    text('Controls: Arrow Keys + X', width / 2, 20);\n    player.maxSpeed = 6;\n    player.friction = 0.98;\n    player.setCollider('circle', 0, 0, 20);\n    player.addImage('normal', playerImage);\n    player.scale = .08;\n    keyPressed();\n\n    function keyPressed() {\n        if (keyCode === LEFT_ARROW) {\n            player.position.x -= 4;\n            player.velocity.x -= 4;\n\n        }\n\n        if (keyCode === RIGHT_ARROW) {\n            player.position.x += 4;\n            player.velocity.x += 4;\n\n        }\n        if (keyCode === UP_ARROW) {\n            player.position.y -= 4;\n            player.velocity.y -= 4;\n        }\n        if (keyCode === DOWN_ARROW) {\n            player.position.y += 4;\n            player.velocity.y += 4;\n\n        }\n    }\n    drawSprites();\n\n}\n\nfunction mousePressed() {\n    if (insideTreasure()) {\n        console.log(\"you got treasure!!!!!!!\");\n        push();\n        fill(57, 90, 56);\n        ellipse(mouseX, mouseY, 18);\n        pop();\n    }\n}\n\nfunction insideTreasure() {\n    if (mouseX - treasurePos.x + mouseY - treasurePos.y < treasureSize) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction setColors(brightness) {\n    if (brightness > 150) {\n        h = 37;\n        s = map(brightness, 150, 255, 0, 30);\n        // s = 30;\n        b = map(brightness, 150, 255, 70, 0);\n    } else if (brightness > 105) {\n        //make it a grass\n        h = 109;\n        s = map(brightness, 150, 255, 100, 0);\n        // s = 100;\n        b = map(brightness, 105, 150, 0, 100);\n    } else if (brightness > 0) {\n        //make it water\n        h = 230;\n        s = 100;\n        b = map(brightness, 0, 100, 0, 100);\n    }\n    fill(h, s, b);\n}"
  },
  {
    "_id": "izWMsRZmZbkeCuhfz",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:08:50.989Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wsg5ffgesk8d5qgv7tz9",
        "version": 1552075738,
        "signature": "f3e6d4a290bc4e686d55c88a85d531b03cddb09c",
        "width": 644,
        "height": 480,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T20:08:58Z",
        "tags": [],
        "bytes": 625501,
        "type": "upload",
        "etag": "c33a8f9ebaa43aecb09a20bcbe2e735a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552075738/avalanche2019/wsg5ffgesk8d5qgv7tz9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552075738/avalanche2019/wsg5ffgesk8d5qgv7tz9.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "j4dmsA7uWtDfuEqBk",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "created_at": { "$date": "2019-03-01T01:39:08.693Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cgvnxas92smxgydp0avk",
        "version": 1551404360,
        "signature": "e086b8526748a35947cc748ef119014492758755",
        "width": 996,
        "height": 604,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T01:39:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 18090166,
        "type": "upload",
        "etag": "14bbb6cea0939a2be58c16a705b925ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551404360/avalanche2019/cgvnxas92smxgydp0avk.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551404360/avalanche2019/cgvnxas92smxgydp0avk.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3319144",
          "dar": "249:151"
        },
        "frame_rate": 60,
        "bit_rate": 3325652,
        "duration": 43.516667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 2 Part2",
    "inspiration_name": "Wind Simulation"
  },
  {
    "_id": "j7HDYTwWfqLk7gbaR",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T15:35:30.127Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gwqj7ypjxeuk7e97tku2",
        "version": 1551800141,
        "signature": "693800b5225682ef6aa8f0f2d97cf8b4e4c3f8dc",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-05T15:35:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 7820478,
        "type": "upload",
        "etag": "25b9906fad0440cd69ae7bf5d2a47aae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551800141/avalanche2019/gwqj7ypjxeuk7e97tku2.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551800141/avalanche2019/gwqj7ypjxeuk7e97tku2.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "8600757",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 8886906,
        "duration": 7,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/gaan4dswoue6i0jfgz5p",
        "version": 1551800150,
        "signature": "f3b66bc87534069ec8b391d2567ab5cc3ada0231",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T15:35:50Z",
        "tags": [],
        "bytes": 622552,
        "type": "upload",
        "etag": "7f0559134ad7c8a9d4e941f847362af6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551800150/avalanche2019/gaan4dswoue6i0jfgz5p.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551800150/avalanche2019/gaan4dswoue6i0jfgz5p.png"
      },
      {
        "public_id": "avalanche2019/gccelm662yb8qn4wzac6",
        "version": 1551800155,
        "signature": "87581b3013aa4c5271d0aea492b91f319f7b109c",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T15:35:55Z",
        "tags": [],
        "bytes": 553627,
        "type": "upload",
        "etag": "3ef625d041d1924fc702f3ed534a164b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551800155/avalanche2019/gccelm662yb8qn4wzac6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551800155/avalanche2019/gccelm662yb8qn4wzac6.png"
      }
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T16:08:17.546Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T19:39:00.039Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-05T23:56:09.688Z" }
      }
    ],
    "title": "",
    "description": "Created a pixel art by breaking down an image into 3D pixels. \nSoftware: Cinema 4D and After Effects\nImage credits: Noah, Anna.",
    "inspiration_name": "3D Pixel Art"
  },
  {
    "_id": "j7echpK6HrLEFdjfP",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "created_at": { "$date": "2019-03-01T02:49:54.209Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wvqb8azpvj8zd3louzos",
        "version": 1551408600,
        "signature": "056fbd058613160f5daa4e56ac954395ea790891",
        "width": 984,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T02:50:00Z",
        "tags": [],
        "bytes": 33719,
        "type": "upload",
        "etag": "ad4b807784a3d186751b504559c53e17",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551408600/avalanche2019/wvqb8azpvj8zd3louzos.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551408600/avalanche2019/wvqb8azpvj8zd3louzos.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 2 - line",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// draws a rectangle, where you tell it to!\n\n\nvar amplitude_slider;\nvar frequency_slider;\nvar timespeed_slider;\nvar speed = 0;\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\n\nfunction setup() {\n    createCanvas(500, 300);\n    \n    createP('Frequency');\n    frequency_slider = createSlider(0, 300, 50);\n\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 100, 50);\n  \n    createP('Time Speed');\n    timespeed_slider = createSlider(0, 10, 5);\n\n\n}\n\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n\n    var amplitude = amplitude_slider.value()/10;\n    var frequency = frequency_slider.value()/5;\n    let timespeed = timespeed_slider.value()/ 150;\n    speed = timespeed + speed;\n\n    noiseDetail(1, .5);\n\n\n\n    fill(255);\n    noStroke();\n\n    // study this loop. do you understand how the line of ellipses is created?\n       for (i = 0; i < 1; i += .02) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n        // hint: drive offsetX and offsetY with noise() instead of random()\n        var offsetX = noise(frequency*i + speed) * amplitude * 10;\n        var offsetY = noise(frequency *i + speed) * amplitude * 10;\n\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n\n\n\n}"
  },
  {
    "_id": "j8m9xJqfYu73YWPuk",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T19:19:59.998Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// melody from https://medium.com/dev-red/tutorial-lets-make-music-with-javascript-and-tone-js-f6ac39d95b8c\n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nconst melody = [\n\n['E5','6n'],\n['E5','6n'],\n['E5','6n'],\n['rest', '0.2s'],\n['C5','6n'],\n['E5','6n'],\n['G5','6n'],\n['rest', '0.5s'],\n['C5','6n'],\n['rest', '0.2s'],\n\n['C5','6n'],\n['G5','6n'],\n['E5','6n'],\n['rest', '0.2s'],\n['A5','6n'],\n['B5','6n'],\n['B5','6n'],\n['A5','6n'],\n['rest', '0.2s'],\n['G5','6n'],\n['E5','6n'],\n['G5','6n'],\n['A5','6n'],\n['rest', '0.2s'],\n['F5','6n'],\n['G5','6n'],\n['E5','6n'],\n['C5','6n'],\n['D5','6n'],\n['B5','6n'],\n['rest', '0.2s'],\n\n['C5','6n'],\n['G5','6n'],\n['E5','6n'],\n['rest', '0.2s'],\n['A5','6n'],\n['B5','6n'],\n['B5','6n'],\n['A5','6n'],\n['rest', '0.2s'],\n['G5','6n'],\n['E5','6n'],\n['G5','6n'],\n['A5','6n'],\n['rest', '0.2s'],\n['F5','6n'],\n['G5','6n'],\n['E5','6n'],\n['C5','6n'],\n['D5','6n'],\n['B5','6n'],\n['rest', '0.2s'],\n\n['G5','6n'],\n['F#5','6n'],\n['F5','6n'],\n['D5','6n'],\n['E5','6n'],\n['rest', '0.3s'],\n['G5','6n'],\n['A5','6n'],\n['C5','6n'],\n['rest', '0.3s'],\n['A5','6n'],\n['C5','6n'],\n['D5','6n'],\n['rest', '0.5s'],\n['G5','6n'],\n['F#5','6n'],\n['F5','6n'],\n['D5','6n'],\n['E5','6n'],\n['rest', '0.2s'],\n['C5','6n'],\n['rest', '0.2s'],\n['C5','6n'],\n['C5','6n'],\n\n\n\n\n\n];\n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n\n};\nconsole.log('click for music!');",
    "description": "Run, Mario!"
  },
  {
    "_id": "jCiqjKRcX6ZMBhHb3",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T02:51:49.516Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/myi7dahposyenk4xl2ml",
        "version": 1549594320,
        "signature": "ba5c818b8ba2acfda4186fd0cf688c8f1569bc2a",
        "width": 788,
        "height": 800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T02:52:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 3425528,
        "type": "upload",
        "etag": "dbda169c1b36de437afe0c4d5115236d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549594320/avalanche2019/myi7dahposyenk4xl2ml.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549594320/avalanche2019/myi7dahposyenk4xl2ml.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3033715",
          "dar": "197:200"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3050563,
        "duration": 8.983333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Portals, another attempt",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nvar x, y;\nvar squareSize;\nvar squares = [];\nvar lastSquare;\n\nfunction setup() {\n  background(0);\n  createCanvas(windowWidth, windowHeight);\n  lastSquare = millis() - 200;\n  // var listOfColors = [color('#aabf12'), color('#33ab12'), color('#165512'), color('#fe3fa2'), color('#a345cd')];\n  for (var i = 0; i < squares.length; i++) {\n    // var colorArray = [color('#FF6633'), color('#FFB399'), color('#FF33FF'), color('#FFFF99'), color('#00B3E6'),\n    //   color('#E6B333'), color('#3366E6'), color('#999966'), color('#99FF99'), color('#B34D4D'),\n    //   color('#80B300'), color('#809900'), color('#E6B3B3'), color('#6680B3'), color('#66991A'),\n    //   color('#FF99E6'), color('#CCFF1A'), color('#FF1A66'), color('#E6331A'), color('#33FFCC'),\n    //   color('#66994D'), color('#B366CC'), color('#4D8000'), color('#B33300'), color('#CC80CC'),\n    //   color('#66664D'), color('#991AFF'), color('#E666FF'), color('#4DB3FF'), color('#1AB399'),\n    //   color('#E666B3'), color('#33991A'), color('#CC9999'), color('#B3B31A'), color('#00E680'),\n    //   color('#4D8066'), color('#809980'), color('#E6FF80'), color('#1AFF33'), color('#999933'),\n    //   color('#FF3380'), color('#CCCC00'), color('#66E64D'), color('#4D80CC'), color('#9900B3'),\n    //   color('#E64D66'), color('#4DB380'), color('#FF4D4D'), color('#99E6E6'), color('#6666FF')\n    // ];\n    // fill(colorArray[int(random(0, colorArray.length))]);\n    squares[i] = new Square();\n  }\n}\n\nfunction newSquare() {\n  var timeEllapsed = millis() - lastSquare;\n  if (timeEllapsed > 200) {\n    squares.push(new Square());\n    lastSquare = millis();\n  }\n}\n\nfunction draw() {\n  rectMode(CENTER);\n  // color myColors = colorArray[int(random(colorArray.length))];\n  for (var i = 0; i < squares.length; i++) {\n    // fill(col);\n    col = color(random(255), random(255), random(255));\n\n    fill(202, 44, 146);\n    stroke(random(255), random(255), random(255));\n    squares[i].drawSquare();\n\n  }\n  newSquare();\n}\n\nfunction Square() {\n  this.x = width / 2;\n  this.y = height / 2;\n  this.squareSize = 10;\n\n  this.drawSquare = function() {\n    rect(this.x, this.y, this.squareSize, this.squareSize);\n\n    this.squareSize += 2;\n    // this.x +=random(-2,2);\n  }\n}"
  },
  {
    "_id": "jFkZXSKYTJj2PyM5j",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T20:31:59.523Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bitykwnrggmawi0he7f4",
        "version": 1549053128,
        "signature": "0d02ab0d7fd9f3647a1f8a426a25c68ac3312718",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T20:32:08Z",
        "tags": [],
        "bytes": 2401380,
        "type": "upload",
        "etag": "f535eefafbd09ddc2cf358c96c4e6430",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549053128/avalanche2019/bitykwnrggmawi0he7f4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549053128/avalanche2019/bitykwnrggmawi0he7f4.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:30.558Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "jG8k7KFnaeuztJ88s",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "created_at": { "$date": "2019-02-01T03:25:25.478Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wpxo0l88pyuqqsetdulp",
        "version": 1548991532,
        "signature": "a82482c9740c83ca9aad04f05e6b0506a541cb6d",
        "width": 600,
        "height": 600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T03:25:32Z",
        "tags": [],
        "bytes": 51935,
        "type": "upload",
        "etag": "e947e2f1a65fa1021cd259dc1a8b6a3b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548991532/avalanche2019/wpxo0l88pyuqqsetdulp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548991532/avalanche2019/wpxo0l88pyuqqsetdulp.png"
      },
      {
        "public_id": "avalanche2019/fa4gcyrcrvxlkcm4ghy1",
        "version": 1548991536,
        "signature": "c7fcd2dd7e7f2ddec09fc8530812cc5df836e09a",
        "width": 650,
        "height": 100,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T03:25:36Z",
        "tags": [],
        "bytes": 10673,
        "type": "upload",
        "etag": "3668880f05a070afab4f2c2e0f878237",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548991536/avalanche2019/fa4gcyrcrvxlkcm4ghy1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548991536/avalanche2019/fa4gcyrcrvxlkcm4ghy1.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:12:34.578Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Colorful tiles on top of small multiples pattern\n---\n\n`made with Sketch`"
  },
  {
    "_id": "jKzu5yfx7LZJu38Ni",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T21:03:34.373Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yknyjaky3hle8ixlqk1b",
        "version": 1556831029,
        "signature": "4131c0f4a050666f671d11ed0794e763c2fdc182",
        "width": 1028,
        "height": 1028,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T21:03:49Z",
        "tags": [],
        "bytes": 35154,
        "type": "upload",
        "etag": "0314e09bffb1e3018e4c15312910495e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556831029/avalanche2019/yknyjaky3hle8ixlqk1b.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556831029/avalanche2019/yknyjaky3hle8ixlqk1b.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T22:24:56.971Z" }
      }
    ],
    "title": "",
    "description": "experimenting with openSCAD"
  },
  {
    "_id": "jLXq2Zc7rQAHmi2Gk",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-11T19:23:06.748Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bagozmoib3qi9rqqmzow",
        "version": 1552332194,
        "signature": "8229a25d92d01eaf36e92bd6605590451c72df2a",
        "width": 724,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-11T19:23:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 11568084,
        "type": "upload",
        "etag": "2805e2c59b32f894742b06cc35c2964d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552332194/avalanche2019/bagozmoib3qi9rqqmzow.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552332194/avalanche2019/bagozmoib3qi9rqqmzow.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6418097",
          "dar": "181:180"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6434160,
        "duration": 14.383333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-12T03:32:53.917Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-03-13T03:01:24.883Z" }
      }
    ],
    "title": "",
    "description": "Took the tree example code from class and animated it",
    "inspiration_name": "This",
    "inspiration_url": "https://editor.p5js.org/marynotari/sketches/HkAiz5Jxf",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet h, s, b;\nlet time;\n\nfunction setup() {\n  createCanvas(800, 800);\n  // frameRate(30);\n  smooth();\n  noFill();\n  stroke(255);\n  myTurtle = new Turtle();\n  angle = 0.1;\n}\n\nfunction draw() {\n  background(255);\n  stroke(127);\n\n  myTurtle.penUp();\n  myTurtle.moveTo(width / 2, 750);\n  myTurtle.turnTo(-90);\n  myTurtle.penDown();\n  drawBranch(70);\n  angle += 0.5;\n\n  myTurtle.penUp();\n  myTurtle.moveTo(width / 2, 70);\n  myTurtle.turnTo(90);\n  myTurtle.penDown();\n  drawBranch(70);\n\n  myTurtle.penUp();\n  myTurtle.moveTo(70, height / 2);\n  myTurtle.turnTo(0);\n  myTurtle.penDown();\n  drawBranch(70);\n\n  myTurtle.penUp();\n  myTurtle.moveTo(width - 70, height / 2);\n  myTurtle.turnTo(180);\n  myTurtle.penDown();\n  drawBranch(70);\n}\n\nfunction drawBranch(length) {\n  if (length < 6) {\n    return;\n  }\n\n  // draw this branch\n  myTurtle.moveForward(length);\n\n  // left child\n  myTurtle.pushState();\n  myTurtle.turnLeft(angle);\n  myTurtle.turnLeft(35);\n  drawBranch(length * 0.75);\n\n  myTurtle.popState();\n\n  // right child\n  myTurtle.pushState();\n  myTurtle.turnRight(angle);\n  myTurtle.turnRight(35);\n  drawBranch(length * 0.75);\n  myTurtle.popState();\n}"
  },
  {
    "_id": "jPT5H3ehsBgiNwtgK",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:42:19.106Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fryywtzfxpx5uth4hpgw",
        "version": 1557517400,
        "signature": "bbe6d60a815b6aaa72042cb16b247c2b0776e88b",
        "width": 1140,
        "height": 1056,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-10T19:43:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 2761858,
        "type": "upload",
        "etag": "477e4020d410937be97be5fe28e0bc77",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557517400/avalanche2019/fryywtzfxpx5uth4hpgw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557517400/avalanche2019/fryywtzfxpx5uth4hpgw.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "193866",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "2479221",
          "dar": "95:88"
        },
        "is_audio": false,
        "frame_rate": 20,
        "bit_rate": 2678165,
        "duration": 8.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Game 1",
    "code": "// p5 link: https://editor.p5js.org/uryuu1002/sketches/BoxDCa7et\n\nvar buildings;\nvar girls;\nvar coins;\nvar score;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  buildings = new Group();\n  girls = new Group();\n  score = 0;\n\n var gif_bubbles = loadImage(\"https://media.giphy.com/media/ll5xqdq1kbh42zPbRE/giphy.gif\");\n  var gif_blossom = loadImage(\"https://media.giphy.com/media/c6XtUeeg3Kw5rsbxGa/giphy.gif\");\n  var gif_buttercup = loadImage(\"https://media.giphy.com/media/5aY2Nwzk7uXnoV3lgK/giphy.gif\");\n  \n  coins = new Group();\n  for (var i = 0; i < 10; i++) {\n    var e = createSprite(\n      random(100, width-100),\n      random(100, height/2),\n      20, 20);\n    e.shapeColor = color(255, 255, 0);\n    coins.add(e);\n  }\n  \n  \n  for (var i = 0; i < 10; i++) {\n    var c = createSprite(\n      random(width), height,\n      random(50, 150), random(50, height/2));\n      c.shapeColor = color(random(200,255));\n    buildings.add(c);\n  }\n    var z = createSprite(\n      random(width), random(height),100, 100);\n    z.addImage(gif_bubbles);\n    z.maxSpeed = random(1, 6);\n    z.scale = 0.3;\n    z.rotateToDirection = false;\n  \n    var x = createSprite(\n      random(width), random(height),100, 100);\n    x.addImage(gif_blossom);\n    x.maxSpeed = random(1, 6);\n    x.scale = 0.3;\n    x.rotateToDirection = false;\n  \n    var v = createSprite(\n      random(width), random(height),100, 100);\n    v.addImage(gif_buttercup);\n    v.maxSpeed = random(1, 6);\n    v. scale = 0.3;\n    v.rotateToDirection = false;\n    girls.add(x);\n    girls.add(v);\n    girls.add(z);\n  \n  \n}\n\nfunction draw() {\n  background(0);\n  \n  fill(255);\n  noStroke();\n  textSize(20);\n  textAlign(CENTER, CENTER);\n  if (coins.length > 0) {\n    text(\"Move mouse to collect all coins!\", 0, 0, 200,200);\n    textSize(72);\n    text(score, 0,100,200,200);\n  }\n  else {\n    textSize(72);\n    text(\"YOUWIN!\", width/2, height/2);\n  }\n  \n  for (var i = 0; i < buildings.length; i++) {\n    buildings[i].position.x += buildings[i].width * 0.01;\n    if (buildings[i].position.x > width) {\n      buildings[i].position.x = 0;\n    }\n  }\n  for (var j = 0; j < girls.length; j++) {\n    girls[j].attractionPoint(0.2, mouseX, mouseY);\n    girls[j].overlap(coins, getCoin);\n  }\n  drawSprites();\n}\n\nfunction getCoin(player, coin) {\n  coin.remove();\n  score +=1;\n}"
  },
  {
    "_id": "jPZDCCa4SzGiicPLr",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T05:49:52.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wzqetfdjg47q7szqoowa",
        "version": 1549345864,
        "signature": "ea724bf5e8a457f2caae4c9856c5e97fa3e986f4",
        "width": 1370,
        "height": 1202,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-05T05:51:04Z",
        "tags": [],
        "bytes": 81999,
        "type": "upload",
        "etag": "77fcd07590f332e63ede3c7038c43ea3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549345864/avalanche2019/wzqetfdjg47q7szqoowa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549345864/avalanche2019/wzqetfdjg47q7szqoowa.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Random Pixel Art",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nfunction setup() {\n\n  createCanvas(windowWidth, windowHeight);\n  stroke(0);\n}\n\nfunction draw() {\n  frameRate(2);\n  background(255);\n\tstrokeWeight(random(2));\n  for (var i = 0; i < width-30 ; i += 30) {\n    for (var j = 0; j < width-30 ; j += 30) {\n      var listOfColors = [color('#000'), color('#000'), color('#6730E4'), color('#000'),color('#000'),color('#FF56ED'),color('#C27CFE'),color('#000'),color('#6CEEF4')];\n\t\t\tfill(listOfColors[int(random(0, listOfColors.length))]);\n      rect(i, j, 30, 30);\n          }\n  }\n}"
  },
  {
    "_id": "jWzcrjmkLCE9fyueD",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:32:11.641Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/obju94yorlp9ypmhacp6",
        "version": 1550853140,
        "signature": "c50a7f03309ec7e55c04550bda8477ce2a9bf635",
        "width": 788,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T16:32:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 4200632,
        "type": "upload",
        "etag": "c7a008f67beb9988a348f595f91dc07b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550853140/avalanche2019/obju94yorlp9ypmhacp6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550853140/avalanche2019/obju94yorlp9ypmhacp6.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7016765",
          "dar": "197:199"
        },
        "frame_rate": 60,
        "bit_rate": 7025447,
        "duration": 4.783333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "je8WuWsXvuD8R8KCc",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T03:26:42.337Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kbdfrxemezusqzcyche8",
        "version": 1550719965,
        "signature": "c6e7b87da1ea1a5df8d513ddd5a7b726d216d15c",
        "width": 1106,
        "height": 1394,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T03:32:45Z",
        "tags": [],
        "bytes": 728725,
        "type": "upload",
        "etag": "0f7c395db066bb70e97d74cd6cc9b984",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550719965/avalanche2019/kbdfrxemezusqzcyche8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550719965/avalanche2019/kbdfrxemezusqzcyche8.png"
      },
      {
        "public_id": "avalanche2019/gtn7hxfb41g7ipqbjcbt",
        "version": 1550723798,
        "signature": "66ccbad5273e433de615a83c7a0cfdd35387beef",
        "width": 1072,
        "height": 1370,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T04:36:38Z",
        "tags": [],
        "bytes": 537890,
        "type": "upload",
        "etag": "fb0b799f84f0f13f92e8963a2f901d2b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550723798/avalanche2019/gtn7hxfb41g7ipqbjcbt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550723798/avalanche2019/gtn7hxfb41g7ipqbjcbt.png"
      },
      {
        "public_id": "avalanche2019/ulyunmmcgevuccgypk9x",
        "version": 1550723809,
        "signature": "fc79bfce21d9af6e28c0b9d08d56d6d92fbf6e68",
        "width": 7209,
        "height": 2582,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T04:36:49Z",
        "tags": [],
        "bytes": 3706150,
        "type": "upload",
        "etag": "2caaefdb3b3b40726804b77c22eecd4b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550723809/avalanche2019/ulyunmmcgevuccgypk9x.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550723809/avalanche2019/ulyunmmcgevuccgypk9x.png"
      }
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-21T05:59:43.826Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:18:18.501Z" }
      }
    ],
    "title": "",
    "description": "Quick iteration on today's earlier sketch...even noisier concentric circles.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\n// Code needs cleaning and parameterizing, but it functions.\n\nconst canvas = {\n    w: 800,\n    h: 800\n};\n\nfunction setup() {\n    createCanvas(canvas.w, canvas.h);\n    strokeWeight(.2);\n    colorMode(HSB, 1);\n    stroke(.7, 0, 1);\n    noFill();\n    angleMode(DEGREES);\n}\n\nfunction draw() {\n    background(255);\n    background(.7, .2, .4, .5);\n    makeShape(Math.floor(canvas.w * .4));\n}\n\nfunction makeRing(radius) {\n    beginShape();\n    let numPoints = 200;\n    for(let i=0; i < numPoints; i++) {\n        let raw = {\n            x: (canvas.w / 2) + radius * Math.cos(i * (2 * Math.PI) / numPoints),\n            y: (canvas.h / 2) + radius * Math.sin(i * (2 * Math.PI) / numPoints)\n        };\n        let noisyRadius = radius * noise(raw.x * .01, raw.y * .01, millis() * .0005);\n        let noisy = {\n            x: (canvas.w / 2) + noisyRadius * Math.cos(i * (2 * Math.PI) / numPoints),\n            y: (canvas.h / 2) + noisyRadius * Math.sin(i * (2 * Math.PI) / numPoints)\n        };\n        vertex(noisy.x, noisy.y);\n    }\n    endShape(CLOSE);\n}\n\nfunction makeShape(numRings) {\n    for (let i = 0; i < numRings; i += 1) {\n        makeRing(i);\n    }\n}"
  },
  {
    "_id": "jfS9ghZXhc5nkk7vb",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-18T21:24:03.433Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rhvr5g8h5v7tjkbzzcsc",
        "version": 1550525071,
        "signature": "28f91d80659a9305ccd27991d1a675ccbf02ca44",
        "width": 1280,
        "height": 584,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-18T21:24:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 9250122,
        "type": "upload",
        "etag": "79ad2043a21491db6610eebc970ec0b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550525071/avalanche2019/rhvr5g8h5v7tjkbzzcsc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550525071/avalanche2019/rhvr5g8h5v7tjkbzzcsc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11514959",
          "dar": "160:73"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11532619,
        "duration": 6.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T01:35:59.424Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T03:41:18.583Z" }
      }
    ],
    "title": "",
    "description": "Red mountains with color mapping that allows the peaks to be redder and the valleys to be darker.",
    "inspiration_name": "Coding Train helped me out a bit",
    "inspiration_url": "https://www.youtube.com/watch?v=IKB1hWWedMk",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet cols, rows;\nlet scale = 30;\nlet w;\nlet h;\nlet xOffset, yOffset;\nlet terrain = [];\nlet flying = 0;\nlet r;\nlet z;\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n  w = width;\n  h = height;\n  cols = w / scale;\n  rows = h / scale;\n\n  for (let x = 0; x < cols; x++) {\n    terrain[x] = [];\n    for (let y = 0; y < rows; y++) {\n      terrain[x][y] = 0;\n    }\n  }\n}\n\nfunction draw() {\n  background(0);\n\n  flying -= 0.02;\n  yOffset = flying;\n  for (let y = 0; y < rows - 1; y++) {\n    xOffset = 0;\n    for (let x = 0; x < cols; x++) {\n      terrain[x][y] = map(noise(xOffset, yOffset), 0, 1, -100, 100);\n      xOffset += 0.3;\n    }\n    yOffset += 0.3;\n  }\n\n  translate(0, 50);\n  rotateX(PI / 3);\n  translate(-width / 2, -height / 6);\n  // fill(255, 0, 0, 70);\n\n  for (let y = 0; y < rows; y++) {\n    beginShape(TRIANGLE_STRIP);\n    for (let x = 0; x < cols; x++) {\n      z = terrain[x][y];\n      z1 = terrain[x][y + 1];\n\n      r = map(z, -100, 100, 0, 255);\n      r1 = map(z1, -100, 100, 0, 255);\n\n      fill(r, 40, 40);\n      vertex(x * scale, y * scale, z);\n      vertex(x * scale, (y + 1) * scale, z1);\n    }\n    endShape();\n  }\n}"
  },
  {
    "_id": "jfgh3zvtBrnrFdCAT",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "created_at": { "$date": "2019-02-28T00:10:31.843Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ozslhwiimkzyl0psjqms",
        "version": 1551312638,
        "signature": "46b33fb0316b96a79a383652beb65d2ddfd46a7e",
        "width": 496,
        "height": 530,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T00:10:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 3821699,
        "type": "upload",
        "etag": "4aed098c6957aa1a8e1b043752befe5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551312638/avalanche2019/ozslhwiimkzyl0psjqms.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551312638/avalanche2019/ozslhwiimkzyl0psjqms.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "974971",
          "dar": "248:265"
        },
        "frame_rate": 60,
        "bit_rate": 1007367,
        "duration": 30.35,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/bkplairf0rp7n40rxk0x",
        "version": 1551312639,
        "signature": "0c621d5f14d470c873a54c57a1a12a5e6a0626af",
        "width": 496,
        "height": 531,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T00:10:39Z",
        "tags": [],
        "bytes": 22216,
        "type": "upload",
        "etag": "cea2753ba394a3750442a300dc3faca6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551312639/avalanche2019/bkplairf0rp7n40rxk0x.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551312639/avalanche2019/bkplairf0rp7n40rxk0x.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Couldn't figure out how to get the sketch to load with the correct settings so every time it runs I need to monkey around with the settings to get them to look decent.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n\nlet amplitude_slider, frequency_slider, speed_slider;\nvar noiseFrequency = .02;\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\nfunction setup() {\n    createCanvas(500, 300);\n\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 200, 120);\n  \n    createP('Frequency');\n    frequency_slider = createSlider(0, .07, .2, .01);\n    \n    createP('Time Speed');\n    speed_slider = createSlider(0, 3, .45);\n}\n\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n    noiseDetail(1, .5);\n    fill(255);\n    noStroke();\n\n    let w;\n    for (i = 0; i < 1; i += noiseFrequency) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n        w = noise(x * frequency_slider.value() + millis() * speed_slider.value() * noiseFrequency / 10);\n        var offsetX = w * amplitude_slider.value();\n        var offsetY = noise(x) * noiseFrequency;\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n}"
  },
  {
    "_id": "jjZKu6ksyA4KmxqLz",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T15:23:00.367Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/khm1u0q5ccx3bdf7qdqd",
        "version": 1550848987,
        "signature": "12d65e570d920259aecd52d8a5b4df29fcea0059",
        "width": 724,
        "height": 684,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T15:23:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 482582,
        "type": "upload",
        "etag": "de112a8b1b2bdf0792cdcc412483f7d9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550848987/avalanche2019/khm1u0q5ccx3bdf7qdqd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550848987/avalanche2019/khm1u0q5ccx3bdf7qdqd.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "322264",
          "dar": "181:171"
        },
        "frame_rate": 60,
        "bit_rate": 329501,
        "duration": 11.716667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "coding train code ref: https://www.youtube.com/watch?v=O_0fRV4MTZo&index=10&list=PLRqwX-V7Uu6bgPNQAdxQZpJuJCjeOr7VD"
  },
  {
    "_id": "jjk9YjzDnSADGCtqW",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T05:55:24.024Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ar3ujqj21q43iza0gmys",
        "version": 1550814976,
        "signature": "415ed9c675827ca430174300000bc09c00cfbf46",
        "width": 1194,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T05:56:16Z",
        "tags": [],
        "bytes": 338258,
        "type": "upload",
        "etag": "105944810d5f2d1e00af017213b2628f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550814976/avalanche2019/ar3ujqj21q43iza0gmys.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550814976/avalanche2019/ar3ujqj21q43iza0gmys.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "purple",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nvar nx = 0;\nvar ny = 0;\nvar nz = 0;\n\nfunction setup () {\n createCanvas (600, 600);\n\n}\n\n\nfunction draw () {\n  background('#9707D3');\n  stroke('#D594F7'); \n  drawStream ();\n}\n\nfunction drawStream () {\n  nx = 0;\n  for (var i=200; i<400; i += 9) {\n    ny = 0;\n    for (var j=200; j<400; j += 9) {\n      var angle = map (noise (nx, ny, nz), 0, 1.0, 0, 4*PI);\n      var x = 50 * cos (angle);\n      var y = 50 * sin (angle);\n      line (i, j, i+x, j+y);\n      ny += 0.003;\n    }\n    nx += 0.002;\n  }\n  nz +=0.001;\n}"
  },
  {
    "_id": "jpaJqWK8WsQbEdknJ",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T01:50:18.979Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/x5regvikwhndcjpresqs",
        "version": 1551923588,
        "signature": "a37b8954f4c772cd2f81ad51521330648957861e",
        "width": 676,
        "height": 492,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-07T01:53:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 2727137,
        "type": "upload",
        "etag": "b83a7c092584ed7766c1181e3924fa1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551923588/avalanche2019/x5regvikwhndcjpresqs.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551923588/avalanche2019/x5regvikwhndcjpresqs.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3229353",
          "dar": "169:123"
        },
        "frame_rate": 60,
        "bit_rate": 3289009,
        "duration": 6.633333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/jbhnsu4ewdl07ru9oeyr",
        "version": 1551923594,
        "signature": "e52c4116f09bde59cdebed956f9c06e9eab2af32",
        "width": 677,
        "height": 493,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T01:53:14Z",
        "tags": [],
        "bytes": 29029,
        "type": "upload",
        "etag": "e396cd5be153aa9c1d4b4b06f3816717",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551923594/avalanche2019/jbhnsu4ewdl07ru9oeyr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551923594/avalanche2019/jbhnsu4ewdl07ru9oeyr.png"
      },
      {
        "public_id": "avalanche2019/knxghoh0fb9tttkhirbz",
        "version": 1551926760,
        "signature": "4fc52b81b4a8919d537143d2edeb4d2f4060d6f2",
        "width": 676,
        "height": 492,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-07T02:46:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 1148793,
        "type": "upload",
        "etag": "d803fec43cb69726a822d56c4bc02846",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551926760/avalanche2019/knxghoh0fb9tttkhirbz.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551926760/avalanche2019/knxghoh0fb9tttkhirbz.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1596400",
          "dar": "169:123"
        },
        "frame_rate": 60,
        "bit_rate": 1655917,
        "duration": 5.55,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Pixel inception. Christopher Nolan eat your WebGL heart out.",
    "code": "/*\n * @name Multiple Lights\n * @description All types of lights could be used in one sketch.\n */\nfunction setup() {\n  createCanvas(700, 500, WEBGL);\n}\n\nfunction draw() {\n  background(0);\n\n  let locX = mouseX - height / 1;\n  let locY = mouseY - width / 4;\n\n  ambientLight(50);\n  directionalLight(255, 0, 20, 1, 0.25, 0);\n  pointLight(200, 0, 200, locX, locY, 255);\n\n  push();\n  translate(-120, 0, 0);\n  rotateZ(frameCount * 0.03);\n  rotateX(frameCount * 0.02);\n  specularMaterial(250);\n  noStroke();\n  box(300, 100, 100);\n  pop();\n\n  push();\n  translate(-80, 40, 40);\n  rotateZ(frameCount * 0.02);\n  rotateX(frameCount * 0.004);\n  specularMaterial(250);\n  noStroke();\n  box(100, 100, 200);\n  pop();\n\n\n  push();\n  translate(80, 40, 40);\n  rotateZ(frameCount * 0.008);\n  rotateX(frameCount * 0.02);\n  specularMaterial(250);\n  noStroke();\n  box(100, 250, 100);\n  pop();\n\n  push();\n  translate(120, 0, 0);\n  rotateZ(frameCount * 0.01);\n  rotateX(frameCount * 0.02);\n  specularMaterial(250);\n  noStroke();\n  box(100, 150, 300);\n  pop();\n\n  push();\n  translate(-width / 400, 0, 0);\n  rotateZ(frameCount * 0.0002);\n  rotateX(frameCount * 0.02);\n  specularMaterial(250);\n  noStroke();\n  box(250, 250, 160);\n  pop();\n\n  // translate(width / 4, 0, 0);\n  //ambientMaterial(250);\n  // sphere(120, 64);\n}"
  },
  {
    "_id": "jtgH7YEevsm7Rrr6M",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T03:29:09.772Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ld0eq7ifaa64rtrnjuhs",
        "version": 1550546962,
        "signature": "50e471c691d3ece396b68b03fdebcc1a1a66656b",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T03:29:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 15952543,
        "type": "upload",
        "etag": "332bbe1a7602848c86871de8e36530dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550546962/avalanche2019/ld0eq7ifaa64rtrnjuhs.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550546962/avalanche2019/ld0eq7ifaa64rtrnjuhs.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5555977",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 5601478,
        "duration": 22.783333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I was looking into doing some equalizers riffing off the noise/skyline from the samples and that led me down a moire rabbit hole. While this isn't truly noise, it's what I have after playing for 90 minutes.",
    "code": "let offset = 15;\nlet x = 600;\nfunction setup() {\n  createCanvas(800, 600);\n}\n\nfunction draw() {\n  background(220);\n  \n  push();\n    translate(width/3, height/3);\n    rotate( radians( frameCount * 0.15) );\nstroke(255);\n  for(let i = 0; i < height * 3; i += offset){\n      line(i-x, -x, i-x, x);\n    }\n  pop();\n  \n  push();\n    translate(width/3, height/3);\n    rotate( radians( frameCount * -0.15) );\n\n    for(let i = 0; i < height * 5; i += offset){\n      line(i-x, -x, i-x, x);\n    }\n  pop();\n  \n  \n}"
  },
  {
    "_id": "jvAhvxZJFEsTrP9LF",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T18:36:40.934Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k367zviir4gohzucotta",
        "version": 1555612645,
        "signature": "05eb1b1a4ee212012c597456aeed5e0583821ece",
        "width": 1268,
        "height": 1252,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T18:37:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 16439891,
        "type": "upload",
        "etag": "04f676f4522239eebd2cdc0920e3a491",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555612645/avalanche2019/k367zviir4gohzucotta.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555612645/avalanche2019/k367zviir4gohzucotta.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "243769",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "17640917",
          "dar": "317:313"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 17893758,
        "duration": 7.35,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Generative Sound - this was original code from p5 code (see url) that generated a Kandinsky painting with sound",
    "inspiration_url": "https://github.com/therewasaguy/p5-music-viz",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\nvar soundFile;\nvar amplitude;\nvar fft, low, midLo, midHi, high, lastHigh;\nvar volume = 0;\nvar lastVol;\n\nvar ang;//an angle to spiral the graphics\nvar radius = 1;\nvar angle = 0;\nvar speed = .5;\nvar theta;\nvar ii = 0;\n\nvar size= 100;\n\n// different shape arrays\nvar michelles = [];\nvar improvs = [];\n\nvar colors = [];\nvar shapes = [];\nvar shifter = 1;\n\nfunction preload() {\n  soundFile = loadSound('drum.mp3');\n}\n\nfunction setup() {\n  amplitude = new p5.Amplitude();\n  fft = new p5.FFT();\n\n  // create the canvas\n  createCanvas(windowWidth, windowHeight);\n  background(249,243,207);\n  rectMode(CENTER);\n  ellipseMode(CENTER);\n  textAlign(CENTER);\n  textSize(16);\n }\n\nfunction draw() {\n  colorMode(RGB);\n  background(100);\n  colorMode(HSB, 100);\n  noStroke();\n\n  // calculate angles / spiral position\n  var deltaAngle = speed/radius;\n  angle += deltaAngle;\n  radius += 60/TWO_PI*deltaAngle;\n\n  //update & draw the shapes.\n  if (soundFile.isPlaying()) {\n    // get volume from the amplitude process\n    volume = amplitude.getLevel();\n\n    // get frequencies\n    fft.analyze();\n    low = fft.getEnergy('bass')/255;\n    midLo = fft.getEnergy('lowMid')/255;\n    midHi = fft.getEnergy('mid')/255;\n    high = fft.getEnergy('highMid')/255;\n\n    // make a shape if there is a big change in volume or treble\n    if (volume - lastVol > 0.02) {\n      shape(width/2+radius*cos(angle),height/2+radius*sin(angle),7,7);\n    } else if (high - lastHigh > 0.05){\n      shape(width/2+radius*cos(angle),height/2+radius*sin(angle),7,7);\n    }\n\n    if (volume - lastVol < -0.02 ) {\n      // rotate opposite direction\n      shifter *= -1;\n    }\n\n    // update the size variable based on volume\n    size = map(volume,0,1,5,30);\n\n    updateAllShapes();\n  } else {\n    // is paused\n    background(0,0,0,10);\n    text('C L I C K', width/2, height/2);\n    return;\n  }\n\n  lastVol = volume;\n  lastHigh = high;\n}\n\nfunction mouseClicked() {\n  if (soundFile.isPlaying()) {\n    soundFile.pause();\n  } else {\n    soundFile.play();\n  }\n}\n\n///////////////// SHAPES //////////////////////////\n\n// called by draw loop\nfunction updateAllShapes() {\n\n  for (var i in michelles) { \n    michelles[i].update();\n  }\n\n  for (var i in improvs) { \n    improvs[i].update();\n  }\n}\n\n// function to draw a shape.\nfunction shape(x,y){\n  colorMode(HSB, 100);\n  var sat = 76; // 76\n  var bri = 82; // 82\n\n  //probability\n  shapetype = random(10);\n\n\nif(shapetype < 1) {\n    var c = [volume*100, sat, bri];\n    michelles.push( new Michelle(x, y) );\n   }\n  \n    else {\n  var c = [low*100, sat, 100];\n  improvs.push(new Improv(c, x, y));\n  }\n}\n\nfunction Michelle(_x, _y) {\n  this.x = _x + 25;\n  this.y = _y + 25;\n  //this.scaler = random(1,100);\n  this.r = 0;\n}\n\nMichelle.prototype.update = function() {\n  angleMode(DEGREES);\n  push();\n  translate(2*this.x, 2*this.y);\n  this.r = (this.r + this.scaler*2*volume*shifter);\n  rotate(this.r);\n  stroke(volume*300);\n  strokeWeight(midHi);\n  beginShape();\n  vertex(0, 0);\n  vertex(this.scaler, this.scaler);\n  vertex(2*this.scaler, 2*this.scaler);\n  vertex(3*this.scaler, this.scaler);\n  vertex(4*this.scaler, 2*this.scaler);\n  vertex(5*this.scaler, this.scaler);\n  vertex(6*this.scaler, 2*this.scaler);\n  vertex(this.scaler, this.scaler);\n  endShape();\n  noStroke();\n  pop();\n  angleMode(RADIANS);\n}\n\nfunction Improv(_c, _x, _y) {\n  this.x = _x;\n  this.y = _y;\n  this.scaler = random(20,200);\n  this.r = random(30,180);\n  this.pointOne = random(30,80);\n  this.pointTwo = random(10,20);\n  this.c = _c;\n}\n\nImprov.prototype.update = function() {\n  push();\n  angleMode(RADIANS);\n  fill(this.c[0], this.c[1], low*this.c[2], low*100);\n  translate(this.x, this.y);\n  this.r = (this.r -this.scaler*4*volume*shifter);\n  rotate(this.r);\n  beginShape();\n  vertex(this.pointOne, this.pointOne);\n  vertex(this.pointTwo, this.pointTwo);\n  vertex(this.pointOne + this.pointTwo, this.pointTwo);\n  vertex(this.pointTwo, this.pointTwo*2);\n  \n  endShape(CLOSE);\n  pop();\n  noStroke();\n  angleMode(RADIANS);\n}"
  },
  {
    "_id": "kPeQ5vwZAGhDyZ8NR",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T16:39:42.346Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sqqvfzxcbwetboenb1zi",
        "version": 1550248833,
        "signature": "a7f5b7dd4782466d95c198444e9a4d4da0ab3dc0",
        "width": 578,
        "height": 578,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T16:40:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 1947376,
        "type": "upload",
        "etag": "07bc69fd343692d20120ee55daa7c6b6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550248833/avalanche2019/sqqvfzxcbwetboenb1zi.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550248833/avalanche2019/sqqvfzxcbwetboenb1zi.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "4422515",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 4429629,
        "duration": 3.516992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Bezier Square"
  },
  {
    "_id": "kWxecXxkx4vWWB285",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-26T12:17:09.887Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u3nypklkhc4ie53tdlg0",
        "version": 1553602645,
        "signature": "5ac243063fe63e1332a7db2601da219c9604a4de",
        "width": 988,
        "height": 988,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-26T12:17:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 14456466,
        "type": "upload",
        "etag": "9c9e6596be11eb728fb223c135564259",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553602645/avalanche2019/u3nypklkhc4ie53tdlg0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553602645/avalanche2019/u3nypklkhc4ie53tdlg0.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "10554398",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 10561801,
        "duration": 10.95,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "playing with star shape"
  },
  {
    "_id": "kX4JwXXrHta69bSMZ",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T04:20:44.917Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e8afwp9ttsgrdiiu0hzk",
        "version": 1549858986,
        "signature": "b5f86f81caabb2c08e7e1d63aba09348d175e82b",
        "width": 1644,
        "height": 1224,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T04:23:06Z",
        "tags": [],
        "bytes": 984455,
        "type": "upload",
        "etag": "2490f0d1a89085c534d8c61ec2189c24",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549858986/avalanche2019/e8afwp9ttsgrdiiu0hzk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549858986/avalanche2019/e8afwp9ttsgrdiiu0hzk.jpg"
      },
      {
        "public_id": "avalanche2019/uyczazdej0szo5x10tdy",
        "version": 1549858993,
        "signature": "924d90e4ddd82bf3547ce53faecaa44fa9b5020a",
        "width": 1682,
        "height": 1694,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T04:23:13Z",
        "tags": [],
        "bytes": 392997,
        "type": "upload",
        "etag": "3399960731ff3e914e0fb101fe32fe68",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549858993/avalanche2019/uyczazdej0szo5x10tdy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549858993/avalanche2019/uyczazdej0szo5x10tdy.jpg"
      },
      {
        "public_id": "avalanche2019/urm5b2ypnnz1fpxdwzzp",
        "version": 1549859009,
        "signature": "cce11e55106b3099b94368d283542d9876568c4d",
        "width": 1656,
        "height": 1238,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T04:23:29Z",
        "tags": [],
        "bytes": 148237,
        "type": "upload",
        "etag": "14dcd16dabd4242e0d20e9ab11163758",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549859009/avalanche2019/urm5b2ypnnz1fpxdwzzp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549859009/avalanche2019/urm5b2ypnnz1fpxdwzzp.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "My original idea was a flower bouquet generator, would have loved to make a “store shape” button (class-instances saved in an array), so the user could create overlapping shapes – hopefully flowers ; )\n\nCode is messy, no time to clean up tonight…",
    "inspiration_name": "Fractal trees / Daniel Shiffman",
    "inspiration_url": "https://www.youtube.com/watch?v=0jjeOYMjmDU",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\nconst w = window.innerWidth-20;\nconst h = window.innerHeight * 0.65;  \nlet myFR = 60;\nlet slowestSpeed = 4; // in seconds\nlet myStartSpeed = 0.2; // TODO, make this work!\nlet play = true;\n\nfunction setModes() {\n  // colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  // pixelDensity(1);\n}\n\nfunction setColors() {\n  // colors\n  createP(\"Choose background / stroke color:\");\n  window.colorPickerBG = createInput(\"#ffffee\", \"color\");\n  window.colorPicker1 = createInput(\"#df5555\", \"color\");\n}\n\nfunction setSpeed() {\n  // Speed\n  createP(\"Speed\");\n  window.modulusSpeedSlider = createSlider(1, 239, 239);\n  // Play / Pause\n  window.button = createButton(\"Pause / Play\");\n  // button.position(19, 19);\n  button.mousePressed(pausePlay);\n}\n\nfunction setStroke() {\n  // stroke\n  createP(\"Choose strokeWidth:\");\n  window.strokeWidthSlider = createSlider(1, 7, 2);\n}\n\nfunction setLengthAndRotation() {\n  let div0 = createDiv('');\n  div0.child(createP(\"Choose angle:\"));\n  div0.child(window.angleSlider = createSlider(0, 360, 110, 0.0001));\n  let div1 = createDiv('');\n  div1.child(createP(\"Choose spiraling:\"));\n  div1.child(window.spiralSlider = createSlider(0, 0.997, 0.989, 0.0001));\n  let div2 = createDiv('');\n  div2.child(createP(\"Choose smallest size:\"));\n  div2.child(window.smallestSizeSlider = createSlider(2, w, 4, 0.0001));\n  let div3 = createDiv('');\n  div3.child(createP(\"Choose scale:\"));\n  div3.child(window.scaleSlider = createSlider(0, h, h / 2, 0.001));\n  let div4 = createDiv('');\n  div4.child(createP(\"Choose x:\"));\n  div4.child(window.xPosSlider = createSlider(0, w, w / 3, 0.001));\n  let div5 = createDiv('');\n  div5.child(createP(\"Choose y:\"));\n  div5.child(window.yPosSlider = createSlider(0, 2 * h, h*0.7, 0.001));\n  let div6 = createDiv('');\n  div6.child(createP(\"Choose colors:\"));\n  div6.child(window.colorPickerBG = createInput(\"#ffffee\", \"color\"));\n  div6.child(window.colorPicker1 = createInput(\"#df5555\", \"color\"));\n  let div7 = createDiv('');\n  div7.child(createP(\"Choose strokeWidth:\"));\n  div7.child(window.strokeWidthSlider = createSlider(1, 7, 1));\n\n  let div00 = createDiv(''); \n  div00.child(div0.style('padding', `3px`));\n  div00.child(div1.style('padding', `3px`));\n  div00.child(div2.style('padding', `3px`));\n  div00.child(div3.style('padding', `3px`));\n  div00.child(div4.style('padding', `3px`));\n  div00.child(div5.style('padding', `3px`));\n  div00.child(div6.style('padding', `3px`));\n  div00.child(div7.style('padding', `3px`));\n\n  div00.style('display', 'flex');\n  div00.style('flex-flow', 'row wrap');\n  div00.style('border', `1px solid grey`);\n  div00.style('padding', `20px`);\n  div00.style('margin-top', `10px`);\n  div00.style('width', `${w-40}px`);\n\n}\n\nfunction setup() {\n  createCanvas(w, h);\n  setLengthAndRotation();\n  setModes();\n  // setSpeed();\n  // setColors();\n  // setStroke();\n  // Say hi\n  textAlign(CENTER);\n  text(\"Starting…\", w / 2, h / 2);\n}\n\nfunction draw() {\n  frameRate(60);\n  // speedRegulator();\n  drawContainer();\n}\n\nfunction drawContainer() {\n  updateColors();\n  if (play == true) {\n    doWhilePlay();\n  } else {\n    doWhilePauseOnly();\n  }\n  doWhilePause();\n}\n\nfunction doWhilePlay() {\n  // noStroke();\n  // fill(colorPicker1.value());\n  // circle(w / 2, w / 2, 10, 10)\n  stroke(colorPicker1.value());\n  strokeWeight(strokeWidthSlider.value())\n  translate(xPosSlider.value(), yPosSlider.value())\n  branch(scaleSlider.value());\n}\nfunction doWhilePauseOnly() {\n  // console.log('I’m in else');\n}\n\nfunction doWhilePause() {\n  // console.log('I’m outside');\n}\n\nfunction speedRegulator() {\n  if (frameCount % (240 - floor(modulusSpeedSlider.value())) == 0) {\n    drawContainer();\n  }\n}\n\nfunction pausePlay() {\n  if (play == true) {\n    document.getElementsByTagName(\"button\").innerHTML = \"Play\";\n    play = false;\n  } else {\n    document.getElementsByTagName(\"button\").innerHTML = \"Pause\";\n    play = true;\n  }\n}\n\nfunction updateColors() {\n  background(colorPickerBG.value());\n}\n\nlet myScale = 0.994; // global?\n\nfunction branch(length) {\n  line(0, 0, 0, -length);\n  translate(0, -length);\n  rotate(angleSlider.value());\n  if (length > smallestSizeSlider.value()) {\n    branch(length*spiralSlider.value());\n  }\n}"
  },
  {
    "_id": "kZvmMcmRFaXR2nCry",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-12T17:36:00.52Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pok4uyj66gqchbp4st1z",
        "version": 1552412372,
        "signature": "6c727304760c302b0548781386c92b4fbf24c2e8",
        "width": 720,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-12T17:39:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 17434160,
        "type": "upload",
        "etag": "bce74bfb6e1a7ae26d38fb28499d5478",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552412372/avalanche2019/pok4uyj66gqchbp4st1z.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552412372/avalanche2019/pok4uyj66gqchbp4st1z.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5965836",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5981442,
        "duration": 23.317667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "pattern and color play with turtles using sin, cos, and tan",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet x = 560;\nlet distance;\n\nlet r, g, b;\n\nfunction setup() {\n  createCanvas(600, 600);\n  background(50);\n  myTurtle = new Turtle();\n\n  r = 255;\n  g = 201;\n  b = 34;\n  time = millis();\n}\n\nfunction draw() {\n  // background(0);\n  time = millis();\n  distance = dist(width, height, width / 2, height / 2);\n  r = map(frameCount, 0, 300, 255, 99);\n\n  if (g > 255) {\n    g = map(time, 0, 50000, 255, 0);\n  } else {\n    g = map(time, 0, 50000, 0, 255);\n  }\n  if (b > 255) {\n    b = map(time, 0, 4000, 255, 0);\n  } else {\n    b = map(time, 0, 4000, 0, 255);\n  }\n\n  stroke(r, g, b, 150);\n  myTurtle.penUp();\n  myTurtle.moveTo(width / 2, height / 2);\n  myTurtle.penDown();\n  for (let i = 0; i < 360; i++) {\n    myTurtle.moveForward(2);\n    myTurtle.turnLeft(cos(x));\n    myTurtle.moveForward(2);\n    myTurtle.turnLeft(sin(x));\n    myTurtle.moveForward(2);\n    myTurtle.turnLeft(tan(x));\n  }\n}"
  },
  {
    "_id": "kbSxe9qZQ89CSQ9Eh",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T07:32:50.413Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ewtmucznblg2nfakezxt",
        "version": 1556264610,
        "signature": "be8e037167aa73cccf30e115e42123935c206a12",
        "width": 854,
        "height": 480,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T07:43:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 6490471,
        "type": "upload",
        "etag": "492f7d2fd2fa36e634411ac331e18a9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556264610/avalanche2019/ewtmucznblg2nfakezxt.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556264610/avalanche2019/ewtmucznblg2nfakezxt.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "128698",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Constrained Baseline",
          "bit_rate": "1179720",
          "dar": "427:240"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1314858,
        "duration": 39.466992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "music visualizer. bgm from previous sketch, made with processing sound & minim library"
  },
  {
    "_id": "kc9L4Y4fHz43PL6dG",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Animation",
    "created_at": { "$date": "2019-03-31T21:40:31.63Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xlxz8nc0i5xqcaapkltm",
        "version": 1554068646,
        "signature": "b070e43b56c704bf50da6a8bf5f6e462f51cd392",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-31T21:44:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 12221204,
        "type": "upload",
        "etag": "436925c7008dfe6cf52a871bdfd0e874",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554068646/avalanche2019/xlxz8nc0i5xqcaapkltm.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554068646/avalanche2019/xlxz8nc0i5xqcaapkltm.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2250",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6768136",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6781708,
        "duration": 14.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-31T22:27:33.338Z" }
      },
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-01T00:45:07.36Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-02T17:44:23.663Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T20:04:11.629Z" }
      }
    ],
    "title": "",
    "description": "N animation edited in photoshop",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n\nlet circ;\nlet x, y;\nlet w = 1280;\nlet h = 720;\n\nlet xDir = 0;\nlet yDir = 2;\n\nlet xRand, yRand;\nlet ydiag = false;\n\nlet EXPORT = false;\n\nfunction setup() {\n  pixelDensity(1);\n  createCanvas(w, h);\n  frameRate(2);\n  background(0);\n  ellipseMode(CENTER);\n  x = w / 3;\n  y = h - 50;\n}\n\nfunction draw() {\n  console.log(frameCount);\n  blendMode(ADD);\n  y = y - yDir;\n  x = x + xDir;\n  if (y < 100) {\n    yDir *= -1;\n    xDir = 1;\n  }\n  if (y > h - 50) {\n    yDir *= -1;\n    xDir = 0;\n  }\n  if (x == 396 && y == 60) {\n    x *= 0;\n    y *= 0;\n  }\n\n  for (let i = 0; i < 600; i++) {\n    fill(255, random(0, 2));\n    let xRand = x + map(noise(i * 0.5, frameCount * 0.01, 0), 0, 0.5, -50, 40);\n    // let xRand = x + random(-40, 40);\n    // let yRand = y + random(-150, -50);\n    let yRand = y + map(noise(i * 0.5, frameCount * 0.01, 5), 0, 0.5, -50, 40);\n\n    ellipse(xRand, yRand, random(3, 20), random(3, 20));\n  }\n\n  if (EXPORT) {\n    saveFrame(\"EXPORT\", frameCount, \"jpg\", 865);\n  }\n  if (frameCount > 865) {\n    noLoop();\n  }\n}\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n    return;\n  }\n\n  if (!extension) {\n    extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "keedFPFJgHQWcYkBb",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T04:23:08.851Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/quzcz5ssbkviviscmvjh",
        "version": 1549945416,
        "signature": "969bc997946fe3adc6801c75f1c3289ae384badf",
        "width": 1296,
        "height": 1252,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-12T04:23:36Z",
        "tags": [],
        "bytes": 160390,
        "type": "upload",
        "etag": "cd5d5e02c247f1d71e0b0615b8c9f0d5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549945416/avalanche2019/quzcz5ssbkviviscmvjh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549945416/avalanche2019/quzcz5ssbkviviscmvjh.jpg"
      },
      {
        "public_id": "avalanche2019/omb7udu6zmnwvrn6q4ux",
        "version": 1549945430,
        "signature": "829864289d059e4793c2c6bf9a8fe71d451799ad",
        "width": 1140,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-12T04:23:50Z",
        "tags": [],
        "bytes": 218576,
        "type": "upload",
        "etag": "dad1e9ffbcd0ba21b59899c393d1add2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549945430/avalanche2019/omb7udu6zmnwvrn6q4ux.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549945430/avalanche2019/omb7udu6zmnwvrn6q4ux.jpg"
      },
      {
        "public_id": "avalanche2019/qj3hlkit966kozh6gpwx",
        "version": 1549946326,
        "signature": "a856fb321fdef8869ea896931b70306551a620fa",
        "width": 614,
        "height": 598,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-12T04:38:46Z",
        "tags": [],
        "bytes": 52109,
        "type": "upload",
        "etag": "70c3c0d6e9b7013352e58ca78750f6e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549946326/avalanche2019/qj3hlkit966kozh6gpwx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549946326/avalanche2019/qj3hlkit966kozh6gpwx.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-13T12:56:32.882Z" }
      }
    ],
    "title": "",
    "description": "Started to think about an animal face generator, might be more difficult than I thought because of positioning and especially masking. Still trying to figure it out and preparing parts in photoshop.  \n\nSource material: Amazing! – [_Atlas de zoologie : ou collection de 100 planches_ ](https://www.biodiversitylibrary.org/item/124538#page/5/mode/1up)",
    "inspiration_name": "Krogufant",
    "inspiration_url": "https://www.abebooks.co.uk/servlet/BookDetailsPL?bi=30152594904"
  },
  {
    "_id": "ker4ASC4qXqMiFPfC",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T17:42:12.633Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cxifchy5cypytks6aztr",
        "version": 1553881343,
        "signature": "8627c25652aef030774e84a8d9deb49e2e1d6d7c",
        "width": 1584,
        "height": 1196,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T17:42:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 3677220,
        "type": "upload",
        "etag": "794d0f2010e33704646f34c373a39030",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553881343/avalanche2019/cxifchy5cypytks6aztr.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553881343/avalanche2019/cxifchy5cypytks6aztr.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "312569",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1860124",
          "dar": "396:299"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2233044,
        "duration": 13.173833,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/q6lukqshy4b6t5enfjre",
        "version": 1553881463,
        "signature": "8af25d25808905d591355e9f91fbe13a4dbea1ec",
        "width": 1578,
        "height": 1208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T17:44:23Z",
        "tags": [],
        "bytes": 687296,
        "type": "upload",
        "etag": "4916df34a0ab054f3e645a25b0eeabf1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553881463/avalanche2019/q6lukqshy4b6t5enfjre.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553881463/avalanche2019/q6lukqshy4b6t5enfjre.png"
      },
      {
        "public_id": "avalanche2019/stlgiykurd1cziyyheko",
        "version": 1553882315,
        "signature": "b057909d024b1d9adec34fdbf20432bd157eb3be",
        "width": 1608,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T17:58:35Z",
        "tags": [],
        "bytes": 240611,
        "type": "upload",
        "etag": "a401be8af3f9bca294315c314b9344ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553882315/avalanche2019/stlgiykurd1cziyyheko.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553882315/avalanche2019/stlgiykurd1cziyyheko.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Blobs move around and when they come in contact with one another, the larger area cell combines the smaller cells that intersect it, making meta cells \n\nthis is a lot of processing and takes a long time to run on internet",
    "inspiration_name": "Meta cells",
    "code": "var amebas = [];\nvar amebaStartX;\nvar amebaStartY;\n// var amebaSize = 60;\nvar amebaSize = 60;\nvar c = document.getElementById(\"myCanvas\");\n//for grid appraoch with text you can just keep a vairable that increases the randomness \n\n//draw amebas and fill array with amebas \nfor (var i = 0; i < amebaSize; i++) {\n    var randomPoint = new Point(800, 600) * Point.random();\n    amebaLocation = new Point(randomPoint);\n    console.log(c.height);\n    console.log(c.height);\n    //random size\n    var randomSides = Math.floor(Math.random() * 7) + 4\n    var randomSize = Math.floor(Math.random() * 10) + 25;\n    var ameba = new Path.RegularPolygon(amebaLocation, randomSides, randomSize);\n    var randomRotation = Math.floor(Math.random() * 360);\n    ameba.rotate(randomRotation);\n    // var randomSegment = \n    ameba.removeSegment(0);\n    //delete one point \n    ameba.smooth('catmull-rom');\n    // console.log(ameba);\n    ameba.style = {\n        strokeColor: 'green',\n    }\n\n    ameba.fillColor = {\n        hue: 70,\n        saturation: (Math.random() * 20) + 50,\n        brightness: 50,\n    };\n    ameba.opacity = .5;\n    ameba.strokeColor = 'green';\n    amebas.push(ameba);\n}\n\n\n\nfunction onFrame() {\n    //add a new vector to the balls \n    for (var i = 0; i < amebas.length; i++) {\n        var vector = new Point({\n            angle: 360 * Math.random(),\n            length: Math.random() * 10\n        });\n        amebas[i].position += vector;\n    }\n    createMergedAmebas();\n}\n\nfunction createMergedAmebas() {\n    for (var i = 0; i < amebas.length; i++) {\n        for (var j = 0; j < amebas.length; j++) {\n            //dint comapre an ameba with itself\n            if (i != j) {\n                var intersections = amebas[i].getCrossings(amebas[j]);\n                if (intersections.length > 0) {\n                    amebas[i].strokeColor = 'null';\n                    amebas[j].strokeColor = null;\n                    var mergedAmebia = amebas[i].unite(amebas[j])\n\n                    // mergedAmebia.blendMode = 'multiply';\n                    amebas[i].remove();\n                    // amebas[j].remove();\n                    amebas[i] = mergedAmebia;\n                    amebas[i].fillColor = 150;\n                    amebas[i].style = {\n                        strokeColor: new Color(0, 255, 0),\n                        blendMode: 'multiply',\n                        shadowColor: new Color(0, 255, 0),\n                        // Set the shadow blur radius to 12:\n                        shadowBlur: 10,\n                        // Offset the shadow by { x: 5, y: 5 }\n                        shadowOffset: new Point(5, 5)\n                    };\n                    amebas[i].opacity = .5;\n                }\n            }\n        }\n    }\n}\n\nfunction checkBorders() {\n    var size = view.size;\n    if (this.point.x < -this.radius)\n        this.point.x = size.width + this.radius;\n    if (this.point.x > size.width + this.radius)\n        this.point.x = -this.radius;\n    if (this.point.y < -this.radius)\n        this.point.y = size.height + this.radius;\n    if (this.point.y > size.height + this.radius)\n        this.point.y = -this.radius;\n}"
  },
  {
    "_id": "kgYNhEvWnjHjLZr8j",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T13:46:35.175Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z4qla6fq0c8gy77hcmfk",
        "version": 1552052815,
        "signature": "3e7192f191645fc4b364a424fe063f9de7d34809",
        "width": 1564,
        "height": 978,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T13:46:55Z",
        "tags": [],
        "bytes": 2655307,
        "type": "upload",
        "etag": "7b47a23ea636805121abb200a04503c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552052815/avalanche2019/z4qla6fq0c8gy77hcmfk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552052815/avalanche2019/z4qla6fq0c8gy77hcmfk.png"
      },
      {
        "public_id": "avalanche2019/zf9ptximvgqljvypbhyq",
        "version": 1552052818,
        "signature": "1d988e77c27f470208c98f5d84b4cfbc7ed4275c",
        "width": 1336,
        "height": 886,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T13:46:58Z",
        "tags": [],
        "bytes": 76305,
        "type": "upload",
        "etag": "f8b510c82fd919fe6698f171c71fea5b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552052818/avalanche2019/zf9ptximvgqljvypbhyq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552052818/avalanche2019/zf9ptximvgqljvypbhyq.png"
      },
      {
        "public_id": "avalanche2019/b4flaj1sguaaxwrkbtkh",
        "version": 1552052821,
        "signature": "f3c965bd883985a7f04b5a21c5fbf99cbe780ea1",
        "width": 1340,
        "height": 872,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T13:47:01Z",
        "tags": [],
        "bytes": 148054,
        "type": "upload",
        "etag": "898290ca6d4337f52c3abe08e2068047",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552052821/avalanche2019/b4flaj1sguaaxwrkbtkh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552052821/avalanche2019/b4flaj1sguaaxwrkbtkh.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T16:00:54.788Z" }
      }
    ],
    "title": "",
    "description": "Playing around with pixel processing. \nImage: Kate Balli - Palm Springs infrared",
    "inspiration_name": "This pixel sketch",
    "inspiration_url": "https://www.openprocessing.org/sketch/639394"
  },
  {
    "_id": "khKGNqTtNtzmEQrkE",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T21:26:47.923Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kf7fzldzxkqwup1ibx33",
        "version": 1551994016,
        "signature": "b6d64f44c35b6c5e234ab078573a2b0c7e6b6d0c",
        "width": 940,
        "height": 1420,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T21:26:56Z",
        "tags": [],
        "bytes": 353448,
        "type": "upload",
        "etag": "15af086f810c7ec441ac32d1c9026c10",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551994016/avalanche2019/kf7fzldzxkqwup1ibx33.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551994016/avalanche2019/kf7fzldzxkqwup1ibx33.png"
      },
      {
        "public_id": "avalanche2019/yur2hwqla02yx9n6walc",
        "version": 1552013442,
        "signature": "f7cca25e66785884186cca98ab8d26d7bae56fc7",
        "width": 5863,
        "height": 5926,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T02:50:42Z",
        "tags": [],
        "bytes": 4026752,
        "type": "upload",
        "etag": "79889bcb7139175c5ac58c79aa236b54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552013442/avalanche2019/yur2hwqla02yx9n6walc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552013442/avalanche2019/yur2hwqla02yx9n6walc.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T21:42:58.195Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T20:12:19.274Z" }
      }
    ],
    "title": "",
    "description": "A different use of the same Giacometti image earlier this week. Using pixels as line anchors.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// USER CONFIG: Change the threshold btwn 0 and 255 for different\n// line densities\nconst threshold = 100;\n\n\nlet img;\nconst canvasWidth = 500;\nconst canvasHeight = 900;\nlet anchors = [];\n\nfunction preload() {\n    img = loadImage(\"https://raw.githubusercontent.com/annagarbier/compform/master/face_500_select.jpg\");\n}\n\nfunction setup() {\n    createCanvas(530, 800);\n}\n\nfunction draw() {\n    noStroke();\n    translate(15, 15);\n    background(250, 250, 250);\n    // background(50);\n\n    var spacing = 500 / img.width;\n    for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n            var in_color = img.get(x, y);\n            const r = in_color[0];\n            const g = in_color[1];\n            const b = in_color[2] + 10;\n            let a = map(in_color[3], 0, 255, 0, 15);\n\n            if (in_color[0] < threshold) {\n                fill(r, g, b, a);\n                ellipse(\n                    x * spacing + spacing * .5,\n                    y * spacing + spacing * .5,\n                    2, 2\n                );\n                anchors.push([x, y]);\n            }\n        }\n    }\n    // background(250, 250, 250, 60);\n    drawLines();\n    noLoop();\n}\n\nfunction drawLines() {\n    for (let a = 0; a < anchors.length; a++) {\n        let randAnchorIndex = Math.floor(random(anchors.length));\n        let start = {\n            x: anchors[a][0], \n            y: anchors[a][1]\n        };\n        let end = {\n            x: anchors[randAnchorIndex][0],\n            y: anchors[randAnchorIndex][1]\n        }\n        push();\n        stroke(50);\n        strokeWeight(.03);\n        line(start.x, start.y, end.x, end.y);\n        pop();\n    }\n}"
  },
  {
    "_id": "kj223oPCeAMoFxgSo",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-03-01T17:48:21.216Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gnpevuljvtm9a9nivxzv",
        "version": 1551462518,
        "signature": "93210414c940265d7d9b4a65a73e8189cef21d9f",
        "width": 1192,
        "height": 900,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T17:48:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 1177159,
        "type": "upload",
        "etag": "62852a9d07ca278d4b07dc6032e2a5eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551462518/avalanche2019/gnpevuljvtm9a9nivxzv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551462518/avalanche2019/gnpevuljvtm9a9nivxzv.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "578810",
          "dar": "298:225"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 588579,
        "duration": 16,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "challenge ii",
    "code": "let yoff1 = 0.0; // 2nd dimension of perlin noise\nvar ts_slider;\nvar amplitude_slider;\nvar f_slider;\n\nfunction setup() {\n  createCanvas(600, 400);\n  createP('Time Speed');\n    ts_slider = createSlider(0, 100, 50);\n  createP('Amplitude');\n    amplitude_slider = createSlider(200, 300, 250);\n  createP('Frequency');\n    f_slider = createSlider(1, 10, 5);\n}\n\nfunction draw() {\n  background(50);\n  var ts = ts_slider.value() / 2000;\n  var amplitude = amplitude_slider.value() ;\n  var f = f_slider.value() ;\n\n  fill(255);\n  // We are going to draw a polygon out of the wave points\n  stroke(255);\n  strokeWeight(6);\n  beginShape(POINTS);\n\n  //let xoff = 0; // Option #1: 2D Noise\n   let xoff1 = yoff1; // Option #2: 1D Noise\n\n  // Iterate over horizontal pixels\n  for (let x1 = 50; x1 <= 550; x1 += f) {\n    // Calculate a y value according to noise, map to\n\n    // Option #1: 2D Noise\n    let y1 = map(noise(xoff1, yoff1), 0, 1, 200, amplitude);\n\n    // Option #2: 1D Noise\n    // let y = map(noise(xoff), 0, 1, 200,300);\n\n    // Set the vertex\n    vertex(x1, y1);\n    // Increment x dimension for noise\n    xoff1 += 0.05;\n  }\n  // increment y dimension for noise\n  yoff1 += ts;\n  //vertex(width, height);\n  //vertex(0, height);\n  endShape();\n  \n  \n  \n}"
  },
  {
    "_id": "kneLeNc8JxzC48Bd9",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T01:05:08.25Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dki8egdlfblynyaoozpz",
        "version": 1554167276,
        "signature": "f8c656452aa6bf04fe553ffd093b1ce7c0b15a79",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-02T01:07:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 4260006,
        "type": "upload",
        "etag": "47332dfd174e8de63a9101de03ac9370",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554167276/avalanche2019/dki8egdlfblynyaoozpz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554167276/avalanche2019/dki8egdlfblynyaoozpz.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "259535",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "3991184",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 4364872,
        "duration": 7.8078,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-02T01:36:36.119Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-04T03:18:42.881Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T19:22:01.547Z" }
      }
    ],
    "title": "",
    "description": "My Comp Form bumper."
  },
  {
    "_id": "ksk24Xq6oNJpAcQEc",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T06:55:47.467Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fejjn3xvwivl6amasbcb",
        "version": 1549437177,
        "signature": "28dbba315814c0ddf088acfc136a7a5dbd85251f",
        "width": 1191,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T07:12:57Z",
        "tags": [],
        "bytes": 45476,
        "type": "upload",
        "etag": "fd6baffdca813149f7080d34a9b58db0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549437177/avalanche2019/fejjn3xvwivl6amasbcb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549437177/avalanche2019/fejjn3xvwivl6amasbcb.png"
      },
      {
        "public_id": "avalanche2019/glksjclycx3odsbmg1wb",
        "version": 1549437182,
        "signature": "6aeefe93e5aa4b934d50d0a5e7d9c8ee17f4fb4e",
        "width": 1199,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-06T07:13:02Z",
        "tags": [],
        "bytes": 71915,
        "type": "upload",
        "etag": "19bd7746317a77a76be512cb8f0808d4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549437182/avalanche2019/glksjclycx3odsbmg1wb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549437182/avalanche2019/glksjclycx3odsbmg1wb.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Random Rectangle",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nvar x;\nvar y;\nvar w;\nvar c;\n\nfunction setup(){\n  createCanvas(600,600);\n  background('#D6CDBD'); \n}\n\nfunction draw(){\n\n  x = random(-100,windowWidth);\n  y = random(-100,windowHeight);\n  w = random(10,70);\n\th = min(random(10,100),random(10,100));\n  \n  noFill();\n  stroke(255,255,0);\n     var listOfColors = [color('#CD7C32'), color('#215E8F'), color('#D7B932'), color('#C7332D')];\n  fill(listOfColors[int(random(0, listOfColors.length))]);\n  noStroke();\n  rect(x, y, w, h);\n  }"
  },
  {
    "_id": "ky5NZcnko8NmdMiJT",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "created_at": { "$date": "2019-03-01T04:42:48.297Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yv9tssy3gkjtph7vjfon",
        "version": 1551420495,
        "signature": "e0d20a64d68f5ab4859089df79e47908267caf81",
        "width": 2481,
        "height": 2692,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T06:08:15Z",
        "tags": [],
        "bytes": 280547,
        "type": "upload",
        "etag": "88210b2e1a2919cc62c843d449eb6e58",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551420495/avalanche2019/yv9tssy3gkjtph7vjfon.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551420495/avalanche2019/yv9tssy3gkjtph7vjfon.png"
      },
      {
        "public_id": "avalanche2019/fvfdjre9rjimac9rbgkm",
        "version": 1551420503,
        "signature": "4d357311ebd300e5c57cc48917993822de45357e",
        "width": 1050,
        "height": 576,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T06:08:23Z",
        "tags": [],
        "bytes": 53852,
        "type": "upload",
        "etag": "2f06baedade5ad58bfd9fa346ef6962a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551420503/avalanche2019/fvfdjre9rjimac9rbgkm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551420503/avalanche2019/fvfdjre9rjimac9rbgkm.png"
      },
      {
        "public_id": "avalanche2019/iy92rrqlxkodjzkpeeyf",
        "version": 1551420530,
        "signature": "d4c7de52fcd4fa53101c74b84bef66582c7491e0",
        "width": 1036,
        "height": 596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T06:08:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 19741126,
        "type": "upload",
        "etag": "e761bf450d846f82307495444743ca37",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551420530/avalanche2019/iy92rrqlxkodjzkpeeyf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551420530/avalanche2019/iy92rrqlxkodjzkpeeyf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6884686",
          "dar": "259:149"
        },
        "frame_rate": 60,
        "bit_rate": 6891447,
        "duration": 22.916667,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:41:49.417Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "A couple short spins on the second (snake-like) code challenge this week.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// There's slider response bug where change in slider values result\n// in change in speed of the dots. Will need to work this out.\n\n// Observations of prompt sketch\n// Dot movement\n// - For a given dot, x and y movement isn't necessarily the same\n//   (i.e. offsetX != offsetY)\n// - When freq is low and amp and speed are high, the whole line\n//   moves together\n\nlet amplitude_slider;\nlet frequency_slider;\nlet timespeed_slider;\n\nlet startX = 50;\nlet startY = 75;\nlet endX = 450;\nlet endY = 75;\n\nlet timeInput = 0;\n\nfunction setup() {\n    createCanvas(500, 300);\n    createP('Frequency');\n    frequency_slider = createSlider(0, 40, 8, .01);\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 100, 50, .01);\n    createP('Time Speed');\n    timespeed_slider = createSlider(0, .002, .001, .0001);\n}\n\nfunction draw() {\n    background(255, 5);\n    ellipseMode(CENTER);\n    let frequency = frequency_slider.value();\n    let amplitude = amplitude_slider.value();\n    let timespeed = timespeed_slider.value();\n    noiseDetail(1, .5);\n\n    fill(50, 200);\n    noStroke();\n\n    // for every increment of .02 between 0 and 1...\n    for (i = 0; i < 1; i += .01) {\n\n        let x = lerp(startX, endX, i); // move x a little closer to endX\n        let y = lerp(startY, endY, i); // move y a little closer to endY\n\n        timeInput += timespeed;\n        \n        let offsetX = noise(timeInput + (frequency * i), 0) * amplitude;\n        let offsetY = noise(timeInput + (frequency * i), 1) * 4 * amplitude;\n\n        ellipse(x + offsetX, y + offsetY, 4, 4);\n    }\n\n    translate(0, 40);\n    // for every increment of .02 between 0 and 1...\n    for (i = 0; i < 1; i += .01) {\n\n        let x = lerp(startX, endX, i); // move x a little closer to endX\n        let y = lerp(startY, endY, i); // move y a little closer to endY\n\n        timeInput += timespeed;\n        \n        let offsetX = noise(timeInput + (frequency * i), 1) * amplitude;\n        let offsetY = noise(timeInput + (frequency * i), 2) * 4 * amplitude;\n\n        ellipse(x + offsetX, y + offsetY, 6, 6);\n    }\n    translate(0, 40);\n    // for every increment of .02 between 0 and 1...\n    for (i = 0; i < 1; i += .008) {\n\n        let x = lerp(startX, endX, i); // move x a little closer to endX\n        let y = lerp(startY, endY, i); // move y a little closer to endY\n\n        timeInput += timespeed;\n        \n        let offsetX = noise(timeInput + (frequency * i), 3) * amplitude;\n        let offsetY = noise(timeInput + (frequency * i), 4) * 4 * amplitude;\n\n        ellipse(x + offsetX, y + offsetY, 5, 5);\n    }\n}"
  },
  {
    "_id": "kyvbKmB9A88Htsdgp",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T18:58:15.148Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kv4pzr2o0imkndbgngyb",
        "version": 1549565905,
        "signature": "b04ca35676af4555d3937f2d2fdd98a0d7a0d587",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T18:58:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 4346071,
        "type": "upload",
        "etag": "e6dfbbd237319dd0af48e32be8d215cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549565905/avalanche2019/kv4pzr2o0imkndbgngyb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549565905/avalanche2019/kv4pzr2o0imkndbgngyb.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1174032",
          "dar": "16:9"
        },
        "frame_rate": 23.976023976023978,
        "bit_rate": 1204641,
        "duration": 28.862167,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "generating ellipses in random color responding to cursor position, without overlap"
  },
  {
    "_id": "m2H2cJDiDKTNHdYWH",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T01:32:11.81Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n7h8txggad7ul5ue1fvc",
        "version": 1553824018,
        "signature": "6fe7f6acae438cc47cb3e3fb11045b057b789da0",
        "width": 1974,
        "height": 1488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:46:58Z",
        "tags": [],
        "bytes": 280476,
        "type": "upload",
        "etag": "15c61c7a110b49c0c29e06ecf7f6555f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553824018/avalanche2019/n7h8txggad7ul5ue1fvc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553824018/avalanche2019/n7h8txggad7ul5ue1fvc.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T03:04:09.778Z" }
      }
    ],
    "title": "",
    "description": "Virus Typeface \n\nOne of the more challenging things I have done: instead of just using text as an image, I found a way to use the paths of the text, (uploading a SVG) and recreate the text path passed on how it intersected other elements around it. I could think of tons of different type face styles I could use changing my code and the shapes/ paths that intersect with it. The result: program that generates Type",
    "inspiration_name": "The Plague",
    "code": "/////////SETTING UP WORDS/ TEXT OBJECTS/////////////////\nproject.clear()\n\nvar words = project.importSVG(document.getElementById('svg'));\nconsole.log(words);\nwords.visible = true; // Turn off the effect of display:none;\n// words.fillColor = \"black\";\nwords.strokeColor = 'blue';\nwords.style = {\n    strokeWidth: .8,\n};\n\nwords.fitBounds(view.bounds);\n// words.scale(0.5);\n\n/////////SETTING AMEBA BACKGROUND/////////////////\nvar amebas = [];\nvar amebaStartX;\nvar amebaStartY;\nvar amebaSize = 220;\nvar c = document.getElementById(\"myCanvas\");\nconsole.log(c.width);\nconsole.log(c.height);\n\n\n//draw amebas and fill array with amebas \nfor (var i = 0; i < amebaSize; i++) {\n    var randomPoint = new Point(c.width / 2, c.height / 2) * Point.random();\n    amebaLocation = new Point(randomPoint);\n    var randomSides = Math.floor(Math.random() * 7) + 4\n    var randomSize = Math.floor(Math.random() * 20) + 35;\n    var ameba = new Path.RegularPolygon(amebaLocation, randomSides, randomSize);\n    var randomRotation = Math.floor(Math.random() * 360);\n    ameba.rotate(randomRotation);\n\n    // var randomSegment = \n    ameba.removeSegment(0);\n    //translate them \n    //delete one point \n    ameba.smooth('catmull-rom');\n    ameba.strokeColor = 'blue';\n    amebas.push(ameba);\n}\n\n//get all circles intersection\nfor (var i = 0; i < amebas.length; i++) {\n    for (var j = 0; j < amebas.length; j++) {\n        //dint comapre an ameba with itself\n        if (i != j) {\n            var intersections = amebas[i].getIntersections(amebas[j]);\n            if (intersections.length > 0) {\n                console.log(intersections);\n                // var mergedAmeba = amebas[i].unite(amebas[j])\n                // amebas[i] = mergedAmeba;\n                // amebas[i].fillColor = \"red\";\n            }\n        }\n    }\n}\nconsole.log(words.children[1]);\n\n\n\n//create an array of all the paths in the object \nvar paths = [];\npaths[0] = words.children[1];\ncounter = 1;\nfor (var i = 0; i < amebas.length; i++) {\n    amebas[i].fillColor = \"pink\";\n    /////////////code for adding amebia to text //////////////////\n    ///////////////delete any amebas inside of the text path //////////////////\n    if (words.children[1].intersects(amebas[i])) {\n        paths[counter] = amebas[i];\n        counter++\n        // var newWord = words.children[1].unite(amebas[i]);\n        console.log(paths);\n        // words.children[1] = newWord;\n    } else {\n        amebas[i].strokeColor = '#999';\n        // amebas.splice(amebas[i], 1);\n        amebas[i].remove();\n    }\n\n    words.children[1].style = {\n        strokeColor: 'black',\n        strokeWidth: 1,\n\n    };\n}\nvar finalPath = unite(paths);\n\n//function by Justin Bakse\nfunction unite(a) {\n    console.log(a);\n    var merged_paths = a[0];\n    merged_paths.remove();\n    var i;\n    for (i = 1; i < a.length; i++) {\n        a[i].remove();\n        console.log(i, a.length);\n        merged_paths = merged_paths.unite(a[i]);\n    }\n    project.activeLayer.removeChildren();\n    project.activeLayer.addChild(merged_paths);\n\n    return merged_paths;\n}"
  },
  {
    "_id": "m2mAHgdSzfJZcGhaS",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-25T01:41:08.325Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dzczbhuktrmhxixmdaah",
        "version": 1553478091,
        "signature": "3eb0a49b85341313eb71b162b37a1ca82d6acbcc",
        "width": 2560,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-25T01:41:31Z",
        "tags": [],
        "bytes": 114817,
        "type": "upload",
        "etag": "f2ac410c7e4cbc2808b700b864969c91",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553478091/avalanche2019/dzczbhuktrmhxixmdaah.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553478091/avalanche2019/dzczbhuktrmhxixmdaah.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Color tiles with p5"
  },
  {
    "_id": "m6Csj4wm2M28HgJTL",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T15:48:48.049Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jkzy6mfbzkih1ch2byme",
        "version": 1549900142,
        "signature": "39b1a2129a90131d9a020fbeba6bf476660a8535",
        "width": 345,
        "height": 259,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-11T15:49:02Z",
        "tags": [],
        "bytes": 153662,
        "type": "upload",
        "etag": "3e34e1da6eab9f47cecc27d0f2347abf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549900142/avalanche2019/jkzy6mfbzkih1ch2byme.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549900142/avalanche2019/jkzy6mfbzkih1ch2byme.jpg"
      },
      {
        "public_id": "avalanche2019/qxjafqfl8tijiu75llrh",
        "version": 1549900339,
        "signature": "c52c387f997eebc2cc7499ba8ed165c5f1d893b0",
        "width": 640,
        "height": 400,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-11T15:52:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 10503153,
        "type": "upload",
        "etag": "49df9414cd7b907ebd38a9dd3f02b98a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549900339/avalanche2019/qxjafqfl8tijiu75llrh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549900339/avalanche2019/qxjafqfl8tijiu75llrh.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "247190",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "3369823",
          "dar": "8:5"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3621776,
        "duration": 23.2,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-11T17:09:29.725Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T22:58:37.531Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-11T22:58:38.306Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T20:59:01.451Z" }
      }
    ],
    "title": "",
    "description": "dance.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar size_slider;\nvar simpson = [];\nfunction setup() {\n  createCanvas(720, 400);\n  smooth();\nsimpson[0] = loadImage(\"simpson0.jpg\");\nsimpson[1] = loadImage(\"simpson1.jpg\");\nsimpson[2] = loadImage(\"simpson2.jpg\");\nsimpson[3] = loadImage(\"simpson3.jpg\");\nsimpson[4] = loadImage(\"simpson4.jpg\");\nsimpson[5] = loadImage(\"simpson5.jpg\");\nsimpson[6] = loadImage(\"simpson6.jpg\");\nsimpson[7] = loadImage(\"simpson7.jpg\");\nsimpson[8] = loadImage(\"simpson8.jpg\");\nsimpson[9] = loadImage(\"simpson9.jpg\");\n\ncreateP('Craziness');\nsize_slider = createSlider(5, 50, 10);\n}\n\nfunction draw() {\n  var size = size_slider.value();\n  frameRate(size);\n  image(simpson[frameCount%5], 10, 150);\n}"
  },
  {
    "_id": "m6NNPndSTveeZb3fe",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-18T20:41:52.279Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tbpnllrvwvnylc7icg3q",
        "version": 1550522533,
        "signature": "b816241f5adb0ccbe9f29ab20def297c4bcf7a27",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-18T20:42:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 16048428,
        "type": "upload",
        "etag": "14f0bdee4544e1db646a86d5ea696601",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550522533/avalanche2019/tbpnllrvwvnylc7icg3q.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550522533/avalanche2019/tbpnllrvwvnylc7icg3q.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5450928",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 5506251,
        "duration": 23.316667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/f0jz2j8uzns7oysyjnmv",
        "version": 1550522925,
        "signature": "ab001b2f533d3328187fc1e4fbf6b20c843efecd",
        "width": 796,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-18T20:48:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 13969380,
        "type": "upload",
        "etag": "e789701ca565ff6e53da31646b6abc2b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550522925/avalanche2019/f0jz2j8uzns7oysyjnmv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550522925/avalanche2019/f0jz2j8uzns7oysyjnmv.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5485614",
          "dar": "398:299"
        },
        "frame_rate": 60,
        "bit_rate": 5541572,
        "duration": 20.166667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/vdhben9mvydhgrvcfvix",
        "version": 1550525251,
        "signature": "fa0d7b45202006dd3bed58d9345ca1385228e86f",
        "width": 644,
        "height": 598,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-18T21:27:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 14008033,
        "type": "upload",
        "etag": "f984c9dee6e1e5df0a176b9525cbdf21",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550525251/avalanche2019/vdhben9mvydhgrvcfvix.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550525251/avalanche2019/vdhben9mvydhgrvcfvix.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4446602",
          "dar": "14:13"
        },
        "frame_rate": 60,
        "bit_rate": 4494556,
        "duration": 24.933333,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T01:35:15.583Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-19T01:35:16.55Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-19T15:36:28.441Z" }
      }
    ],
    "title": "",
    "description": "Playing around with one of the in-class examples and adding a camera feed. Next step: make it respond to audio. Or maybe it has an AI component that recognizes patterns in the parties on a video call? The pattern could change based on level of irritation, excitement, etc from the person you're speaking with.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n    createCanvas(800, 600);\n  capture = createCapture(VIDEO);\n  capture.size(320, 240);\n    ellipseMode(CENTER);\n    noFill(255);\n  stroke(255);\n    //noStroke();\n}\n\n\nfunction draw() {\n    background(255);\n  image(capture, 0, 0, 800, 600);\n  //filter('INVERT');\n    let n;\n\n    for (let y = 15; y < height; y += 30) {\n        for (let x = 15; x < width; x += 30) {\n\n            // vary over x\n            n = noise(x);\n\n            // vary over y\n            // n = noise(y);\n\n            // vary over x + y\n            n = noise(x + y);\n\n            // vary over x and y\n            // n = noise(x, y);\n            // n = noise(x*.01, y*.01);\n            // n = noise(x*.01, y*.05);\n            // n = noise(x*.05, y*.01);\n\n            // vary over x + time;\n            // n = noise(x + millis() * .001);\n            // n = noise(x * .002 + millis() * .001);\n\n            // vary x and time, y\n            n = noise(x * .001 + millis() * .001, y);\n            n = noise(x * .001 + millis() * .001, y * .004);\n\n            // vary over x and time\n            // n = noise(x, millis() * .001);\n\n            // vary over y and time\n            // n = noise(y, millis() * .001);\n\n            // vary over x and y and time\n            // n = noise(x, y, millis() * .001);\n            // n = noise(x*.003, y*.003, millis() * .001);\n\n            // vary over distance from center\n            // n = noise(dist(300, 300, x, y) * .03);\n            // n = noise(dist(300, 300, x, y) * .03, millis() * .001);\n            // n = noise(dist(300, 300, x, y) * .03 +  millis() * .001);\n\n            let diameter = n * 40;\n\n            ellipse(x, y, diameter, diameter);\n        }\n    }\n\n\n\n}"
  },
  {
    "_id": "m6PNsmjwfwWuvisP6",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:12:05.106Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nc0tiwqeziv2l1eg60hf",
        "version": 1552075930,
        "signature": "c86c3015e2fd6b6994b48c01d0e9cece49847fc6",
        "width": 644,
        "height": 488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T20:12:10Z",
        "tags": [],
        "bytes": 35044,
        "type": "upload",
        "etag": "29a510201fa89ea17ac798a80129fd45",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552075930/avalanche2019/nc0tiwqeziv2l1eg60hf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552075930/avalanche2019/nc0tiwqeziv2l1eg60hf.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "stardust"
  },
  {
    "_id": "mBsjjJ7kHCryJ6yfc",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-30T16:27:03.282Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jmzo4jcfzirlin7oirvn",
        "version": 1556641633,
        "signature": "50f89e8901d37629f8641f8e3f9106850cfdd3ba",
        "width": 2040,
        "height": 1676,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-30T16:27:13Z",
        "tags": [],
        "bytes": 147896,
        "type": "upload",
        "etag": "84f716288a462379ddfe59ff40bd8837",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556641633/avalanche2019/jmzo4jcfzirlin7oirvn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556641633/avalanche2019/jmzo4jcfzirlin7oirvn.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-30T19:24:00.293Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T00:38:25.699Z" }
      }
    ],
    "title": "",
    "description": "Hot Air Balloon in class work."
  },
  {
    "_id": "mCupjSxmg2B6JcLh3",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T19:02:19.4Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zezfw7ypmh08tza2jh35",
        "version": 1552071745,
        "signature": "e6fbdb43a6d6c43347cb1a61ee5936c845d394cf",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:02:25Z",
        "tags": [],
        "bytes": 402991,
        "type": "upload",
        "etag": "d993404052029c41dc9f149bcc4919c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552071745/avalanche2019/zezfw7ypmh08tza2jh35.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552071745/avalanche2019/zezfw7ypmh08tza2jh35.png"
      },
      {
        "public_id": "avalanche2019/fmkajr6yvqkfiflkwvh1",
        "version": 1552071753,
        "signature": "d658b3f833fd09a03ea239cf00f98d658f2bd6e8",
        "width": 1000,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:02:33Z",
        "tags": [],
        "bytes": 527743,
        "type": "upload",
        "etag": "81ede3f6b9d76601b080642c759fc49d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552071753/avalanche2019/fmkajr6yvqkfiflkwvh1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552071753/avalanche2019/fmkajr6yvqkfiflkwvh1.png"
      },
      {
        "public_id": "avalanche2019/o9l8b6edxpnzfyulv6dm",
        "version": 1552072092,
        "signature": "887ca048d7c5bdb812e34dcfb316c87fac955bb1",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T19:08:12Z",
        "tags": [],
        "bytes": 499871,
        "type": "upload",
        "etag": "2a8d8755e4647a144116eea61c98f0f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552072092/avalanche2019/o9l8b6edxpnzfyulv6dm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552072092/avalanche2019/o9l8b6edxpnzfyulv6dm.png"
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T19:17:43.699Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T19:30:53.664Z" }
      }
    ],
    "title": "",
    "description": "Modified my own Lung X-ray photo. (1-st edition: color reversed)",
    "code": "var lungImage;\n\n\nfunction preload() {\n  lungImage = loadImage(\"lung_5.png\");\n  // noprotect\n  \n\n}\n\nfunction setup() {\n    createCanvas(500, 500);\n}\n\nfunction draw() {\n    background(0);\n\n\n\n    for (var y = 0; y < lungImage.height; y++) {\n        for (var x = 0; x < lungImage.width; x++) {\n            var in_color = lungImage.get(x, y);\n\n            var r = red(in_color);\n            var g = green(in_color);\n            var b = blue(in_color);\n\n            var out_color;\n          out_color = color(255-r);\n\n            lungImage.set(x, y, out_color);\n            lungImage.updatePixels();\n        }\n    }\n\n    noSmooth();\n    image(lungImage, 0, 0, width, height);\n\n    noLoop();\n}"
  },
  {
    "_id": "mFXFeRmPPwNbZpJ6d",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "created_at": { "$date": "2019-02-28T04:10:31.941Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tfofdbhfh3anstfoladn",
        "version": 1551327043,
        "signature": "e6b119e7bd2653210165a01dab46de554c45c3c1",
        "width": 996,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T04:10:43Z",
        "tags": [],
        "bytes": 63585,
        "type": "upload",
        "etag": "0e28b5dd3852999cc8fe6ee38dcdeb28",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551327043/avalanche2019/tfofdbhfh3anstfoladn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551327043/avalanche2019/tfofdbhfh3anstfoladn.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Basic Random Placement Variation --",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(500, 500);\n  noLoop();\n}\n\nfunction draw() {\n  background(176,224,255);\n  \n  noStroke();\n  for (let i = 0; i < 5; i++) {\n    const x = random(500);\n    const y = random(500);\n\n    \t\tfill(150,40);\n    \t\tellipse(x+1, y - 50, 40, 40);\n        ellipse(x+1, y+7, 80, 80);\n    \t\t\n    \t\tfill(255);\n    \t\tellipse(x, y - 55, 40, 40);\n        ellipse(x, y, 80, 80);    \n    \n        //eyes\n    \t\t\n    \t\tfill(00);\n  \t\t\tnoStroke();\n    \t\tellipse(x-8, y - 60, 6, 6);\n        ellipse(x+8, y - 60, 6, 6);\n    \t\trect(x-12,y-95,20,19);\n    \t\trect(x-18,y-80,30,5);\n    \n    \n        //nose\n\t\t\t\tfill(255,145,0);\n  \t\t\tnoStroke();\n    \t\ttriangle(x, y-56, x+8, y-52, x, y-50);\n    \t\t\n  }\n}"
  },
  {
    "_id": "mFwk2KkPk52PYACoe",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T16:09:54.288Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/shhrcyc6rwkiitmcmcru",
        "version": 1551802256,
        "signature": "d5eb9b614914918dabfce8ae0b58b57f2394254a",
        "width": 2784,
        "height": 1430,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T16:10:56Z",
        "tags": [],
        "bytes": 4298288,
        "type": "upload",
        "etag": "385749ed672e8215b121fb6cba82aeaf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551802256/avalanche2019/shhrcyc6rwkiitmcmcru.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551802256/avalanche2019/shhrcyc6rwkiitmcmcru.png"
      },
      {
        "public_id": "avalanche2019/kmgljdu0bjko999s2n2j",
        "version": 1551802264,
        "signature": "c894b58417525ab59809726a7a1329cf9c6a5b48",
        "width": 2784,
        "height": 1418,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T16:11:04Z",
        "tags": [],
        "bytes": 4036347,
        "type": "upload",
        "etag": "ae0d7d1c003ff4623d22113701f65595",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551802264/avalanche2019/kmgljdu0bjko999s2n2j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551802264/avalanche2019/kmgljdu0bjko999s2n2j.png"
      },
      {
        "public_id": "avalanche2019/u2d8i2egihtnpv0xp0bb",
        "version": 1551802340,
        "signature": "93ea8bf0cc9243a8bb202510f22a32ebfe0e91ba",
        "width": 2796,
        "height": 1430,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-05T16:12:20Z",
        "tags": [],
        "bytes": 4322335,
        "type": "upload",
        "etag": "7c84b98a88e007fe6123fc4c68e32f42",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551802340/avalanche2019/u2d8i2egihtnpv0xp0bb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551802340/avalanche2019/u2d8i2egihtnpv0xp0bb.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-03-07T15:57:28.178Z" }
      }
    ],
    "title": "",
    "description": "The Last Supper pixel manipulation",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet lastSupper;\nlet rotation;\nlet rectSubtractor = 1;\n\nfunction preload() {\n  lastSupper = loadImage(\"last_supper.jpg\");\n  noLoop();\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  lastSupper.loadPixels();\n}\n\nfunction draw() {\n  background(0, 50, 127);\n  // image(lastSupper, 0, 0, width, height);\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let pixelRed = getQuick(lastSupper, x, y)[0];\n      // let pixelGreen = getQuick(lastSupper, x, y)[1];\n      // let pixelBlue = getQuick(lastSupper, x, y)[2];\n      // let pixelAlpha = getQuick(lastSupper, x, y)[3];\n\n      if (pixelRed > random(255)) {\n        drawCircles(255, x, y);\n      } else {\n        drawCircles(0, x, y);\n      }\n    }\n  }\n  updatePixels();\n}\n\nfunction drawCircles(col, x, y) {\n  fill(random(255), col, random(255));\n  noStroke();\n  // push();\n  // translate(x, y);\n  // rotate(rotation);\n  ellipse(x, y, 1, 1);\n  // pop();\n  // rotation += 0.05;\n  // rectSubtractor += 0.1;\n}\n\nfunction getQuick(img, x, y) {\n  var i = (y * img.width + x) * 4;\n  return [\n    lastSupper.pixels[i]\n    // lastSupper.pixels[i + 1],\n    // lastSupper.pixels[i + 2],\n    // lastSupper.pixels[i + 3]\n  ];\n}"
  },
  {
    "_id": "mLcreLKdf2Px6yboY",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T18:35:00.007Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e2gsxjc9zcejxmv1kqmz",
        "version": 1556737711,
        "signature": "75910ecc1003559aed2a07d7cfb6c528cf4ca06e",
        "width": 2876,
        "height": 1748,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-01T19:08:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 16877129,
        "type": "upload",
        "etag": "72d947e3cfa2879632db4a99486a9dc6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556737711/avalanche2019/e2gsxjc9zcejxmv1kqmz.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556737711/avalanche2019/e2gsxjc9zcejxmv1kqmz.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "10665981",
          "dar": "719:437"
        },
        "frame_rate": 60,
        "bit_rate": 10673283,
        "duration": 12.65,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/n6cr0qogcqeli5di3bha",
        "version": 1556737718,
        "signature": "4cdb479db413e0c8f9b94b36cae637cd58e2dcf5",
        "width": 2868,
        "height": 1752,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-01T19:08:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 4614983,
        "type": "upload",
        "etag": "4a92ff9ac1878be6c194630c6ee044f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556737718/avalanche2019/n6cr0qogcqeli5di3bha.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556737718/avalanche2019/n6cr0qogcqeli5di3bha.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "4072181",
          "dar": "239:146"
        },
        "frame_rate": 60,
        "bit_rate": 4266301,
        "duration": 8.653833,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T16:38:55.447Z" }
      }
    ],
    "title": "",
    "description": "Quick followup to the previous sketch. Similar code, but uses difference() where union() was before. Also adds some intentional details to it for a future function.",
    "code": "$fn = 10;\npad = 2;\n\nmodule body_noise(length, width, height) {\n    for (x=[0:length])\n    for (y=[0:width])\n    for (z=[0:height])\n    \n    translate([x*pad,y*pad,z*pad])\n        union() {\n            sphere(rands(0,2,1)[0]);\n    }\n}\n\nmodule entry(trans_x) {\n    translate([trans_x, 0,-10]) {\n        cylinder(10, .5);\n    }\n}\n\nmodule all() {\n    difference() {\n    sphere(5, center = false); // main body\n    sphere(2, center = false); // central cavity\n    entry(-1.5);\n    entry(1.5);\n    body_noise(3, 3, 3);\n    }\n}\n\nall();"
  },
  {
    "_id": "mRDMM9ssxyM5M9TPy",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:19:11.037Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wjyw0jlf7kmgnwl96wkr",
        "version": 1552666761,
        "signature": "3e2ac892dce01bcbd05e0c2408d58ee60140cf2a",
        "width": 1200,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T16:19:21Z",
        "tags": [],
        "bytes": 106090,
        "type": "upload",
        "etag": "2d7789427e554427b49903fd6dbcdefd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552666761/avalanche2019/wjyw0jlf7kmgnwl96wkr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552666761/avalanche2019/wjyw0jlf7kmgnwl96wkr.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tree network"
  },
  {
    "_id": "mRDfkNdCZMxxtPJGB",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-12T21:13:20.225Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lgau70vkmop8mcihctcy",
        "version": 1552425234,
        "signature": "72a471265813eff3efa94e6848df8c7dba65e0dd",
        "width": 990,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-12T21:13:54Z",
        "tags": [],
        "bytes": 88115,
        "type": "upload",
        "etag": "556a39528d88f409d68a82058a0f4664",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552425234/avalanche2019/lgau70vkmop8mcihctcy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552425234/avalanche2019/lgau70vkmop8mcihctcy.png"
      },
      {
        "public_id": "avalanche2019/qtgwvwvl9vaxz3bksggi",
        "version": 1552425241,
        "signature": "d3b5e5004530da6ca9342ca3342e19a137a555bc",
        "width": 988,
        "height": 986,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-12T21:14:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 6893232,
        "type": "upload",
        "etag": "4ec324ff30681a1161721b9e292d99ff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552425241/avalanche2019/qtgwvwvl9vaxz3bksggi.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552425241/avalanche2019/qtgwvwvl9vaxz3bksggi.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "3674315",
          "dar": "494:493"
        },
        "frame_rate": 15,
        "bit_rate": 3676390,
        "duration": 15,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/b7nobjtgk5pycrcclvez",
        "version": 1552425285,
        "signature": "864729247b1c0c40341926eb4cbff2e130bd1c34",
        "width": 994,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-12T21:14:45Z",
        "tags": [],
        "bytes": 431283,
        "type": "upload",
        "etag": "84f2a51617298eaff7189195f8fc1b70",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552425285/avalanche2019/b7nobjtgk5pycrcclvez.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552425285/avalanche2019/b7nobjtgk5pycrcclvez.png"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-13T03:23:44.304Z" }
      }
    ],
    "title": "",
    "description": "Pushing my orb sketch further. Flower sphere thing that builds up over time like a ball of yarn"
  },
  {
    "_id": "mRFM9id3KbXozhkXY",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T13:34:16.902Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dok4lhhjgjwt59vrzkhu",
        "version": 1555680897,
        "signature": "0cc317d190d9c92c09c441db6428da9ebfb008e3",
        "width": 2018,
        "height": 920,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-19T13:34:57Z",
        "tags": [],
        "bytes": 58865,
        "type": "upload",
        "etag": "3ea928054c5324fdc92cc6fba2c1bab4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555680897/avalanche2019/dok4lhhjgjwt59vrzkhu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555680897/avalanche2019/dok4lhhjgjwt59vrzkhu.png"
      },
      {
        "public_id": "avalanche2019/ce12u1pvuboqdijkdl1z",
        "version": 1555680901,
        "signature": "49f7c053410ebd37387c5ebc84d56aac166fcd43",
        "width": 1280,
        "height": 592,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T13:35:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 6484732,
        "type": "upload",
        "etag": "d0e94ad4c63ceddfec58c41f290eccbc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555680901/avalanche2019/ce12u1pvuboqdijkdl1z.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555680901/avalanche2019/ce12u1pvuboqdijkdl1z.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5021204",
          "dar": "80:37"
        },
        "frame_rate": 60,
        "bit_rate": 5028548,
        "duration": 10.316667,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T19:00:51.01Z" }
      }
    ],
    "title": "",
    "description": "Initial sketch for a synth wave"
  },
  {
    "_id": "mTP8mRnysBphLgfMK",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-03T22:05:58.032Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jiamylnsitjdojmsz7sy",
        "version": 1554329170,
        "signature": "ba5ff0ed67272d7a3bf53f643567b132feab4034",
        "width": 496,
        "height": 498,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-03T22:06:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 1029570,
        "type": "upload",
        "etag": "bceb0b772c38139e1c863ab2c7e532e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554329170/avalanche2019/jiamylnsitjdojmsz7sy.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554329170/avalanche2019/jiamylnsitjdojmsz7sy.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1337116",
          "dar": "248:249"
        },
        "frame_rate": 60,
        "bit_rate": 1511295,
        "duration": 5.45,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Started working on a metronome with music but my brain is like fudge today. Didn't get as far as I wanted. I'll pick this up again later.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n\nfunction setup() {\n  createCanvas(500, 500);\n\n  frameRate(60);\n}\n\nfunction draw() {\n  clear();\n  background(0);\n\n  const theta = map(frameCount, 0, 15, 0, 2 * PI);\n  const pendulumAngle = sin(theta) * .7;\n  metronome(250, 250, 2, pendulumAngle);\n}\n\nfunction metronome(x, y, size, pendulumAngle) {\n  push();\n  noStroke();\n  translate(x, y);\n  scale(size);\n\n  // // body\n  // fill(220, 200, 200);\n  // quad(-10, -100, 10, -100, 40, 0, -40, 0);\n\n\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 75, 75, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 100, 100, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 125, 125, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 150, 150, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 175, 175, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 200, 200, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 225, 225, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 250, 250, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 275, 275, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 300, 300, PI, 0);\n  //pop();\n\n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 325, 325, PI, 0);\n  //pop();\n  \n  // bottom\n  noFill();\n  strokeWeight(1);\n  stroke(51);\n  arc(0, 0, 350, 350, PI, 0);\n  //pop();\n  \n  // pendulum\n  push();\n  rotate(pendulumAngle);\n  noStroke();\n  fill(255);\n  rect(0, -100, 1, 200);\n  //ellipse(0, -70, 20, 20);\n  pop();\n  \npush();\n  ellipse(0, 0, 50, 50);\n  //noStroke();\n  fill(255);\n  pop();\n\n}"
  },
  {
    "_id": "mWSXuBrxkFM2i7Rkz",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T02:44:53.085Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wwkrlxja5wu8lggjdmow",
        "version": 1552618071,
        "signature": "5d6bdeca0976d0cd65c0e8d98cb9250979385d42",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T02:47:51Z",
        "tags": [],
        "bytes": 265201,
        "type": "upload",
        "etag": "67f4cbad5177a21e70c5f0cfb6f72bdf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552618071/avalanche2019/wwkrlxja5wu8lggjdmow.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552618071/avalanche2019/wwkrlxja5wu8lggjdmow.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T04:36:28.538Z" }
      }
    ],
    "title": "",
    "inspiration_name": "hangers",
    "inspiration_url": "https://www.dreamstime.com/royalty-free-stock-photos-clothes-hangers-tangle-image21022748",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n// code from Turtle Multiple Triangles Example http://compform.net/turtles/\n\n\nvar myTurtle;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tcolorMode(HSB,100);\n\tmyTurtle = new Turtle();\n}\n\nfunction draw() {\n\tbackground(0);\n\n\tnoFill();\n\n\n\n\tmyTurtle.penDown();\n\t for (var i = 1; i < 80 ; i++){\n\t\t myTurtle.moveTo(random(100,400), random(100,400));\n\t\t myTurtle.turnTo(random(360));\n\t\t strokeWeight(0.3);\n\t\t stroke(15,random(100),random(20,100));\n\t\t drawTriangle(myTurtle);\n\t }\n\tnoLoop();\n\n}\nfunction drawTriangle(t) {\n\tfor (var i = 0; i < 4; i++) {\n\t\tt.moveForward(10);\n\t\tt.turnRight(60);\n\t}\n}"
  },
  {
    "_id": "me26WcXhWjA2Asvfk",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "created_at": { "$date": "2019-02-26T21:45:38.873Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pi7exh2nwp6i8fmabczb",
        "version": 1551217565,
        "signature": "e4d75526622b83dfab852bde2d0346f0c701908f",
        "width": 802,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T21:46:05Z",
        "tags": [],
        "bytes": 59324,
        "type": "upload",
        "etag": "b117fd5585f494bb16ed03e907f60ea0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551217565/avalanche2019/pi7exh2nwp6i8fmabczb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551217565/avalanche2019/pi7exh2nwp6i8fmabczb.png"
      },
      {
        "public_id": "avalanche2019/mksdk3hau3wvedfnvftm",
        "version": 1551217578,
        "signature": "7bfee2082305aca408633561b90aa4c8b13f379b",
        "width": 800,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T21:46:18Z",
        "tags": [],
        "bytes": 59948,
        "type": "upload",
        "etag": "b4eae36bfd71554c9577014009cd6219",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551217578/avalanche2019/mksdk3hau3wvedfnvftm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551217578/avalanche2019/mksdk3hau3wvedfnvftm.png"
      },
      {
        "public_id": "avalanche2019/dnquslld9gjqest1tuwr",
        "version": 1551217588,
        "signature": "e89119c2ab3b6cdff217a47c516dda9beec032a3",
        "width": 804,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T21:46:28Z",
        "tags": [],
        "bytes": 100939,
        "type": "upload",
        "etag": "395d17858f206c1ebc6703d4d18c2421",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551217588/avalanche2019/dnquslld9gjqest1tuwr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551217588/avalanche2019/dnquslld9gjqest1tuwr.png"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "inspiration_name": "Coding Challenge One"
  },
  {
    "_id": "mhquNH4yN4g7wAv6q",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-01-27T00:06:30.774Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yoe7waqrgc6viuqygdsr",
        "version": 1548548087,
        "signature": "2c3f36e7add2c6d9b2e29545535cacd97bfa2869",
        "width": 1440,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-01-27T00:14:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 8497567,
        "type": "upload",
        "etag": "b69e4b1d6e66f6fc9ba2509f830af45b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548548087/avalanche2019/yoe7waqrgc6viuqygdsr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548548087/avalanche2019/yoe7waqrgc6viuqygdsr.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "2094",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1884032",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1891816,
        "duration": 35.934,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ktglynpcqv9cc2xpirkn",
        "version": 1548548107,
        "signature": "4d38947437d43ca3d507d671bce31c8737007c0d",
        "width": 1920,
        "height": 1080,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-27T00:15:07Z",
        "tags": [],
        "bytes": 279284,
        "type": "upload",
        "etag": "a5201eee0f2bbc81b4ffa1490a497480",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548548107/avalanche2019/ktglynpcqv9cc2xpirkn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548548107/avalanche2019/ktglynpcqv9cc2xpirkn.jpg"
      },
      {
        "public_id": "avalanche2019/ufshohl1tc3oisk89fia",
        "version": 1548548117,
        "signature": "3556afd62b92df9ee93339d92b2648c0a3c46b69",
        "width": 3369,
        "height": 2380,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-27T00:15:17Z",
        "tags": [],
        "bytes": 1695911,
        "type": "upload",
        "etag": "842313dfe0b2246150a0c4939814407d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548548117/avalanche2019/ufshohl1tc3oisk89fia.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548548117/avalanche2019/ufshohl1tc3oisk89fia.jpg"
      }
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "These set of images have been created using a set of tiles which were made using a brush. I created the brush using Adobe Capture, using a picture of a print developed from the Printmaking technique.\nI have created my initials (AC) using the tile arrangement.",
    "inspiration_name": "Printmaking Brush Tiles"
  },
  {
    "_id": "mhwryKmJhTZ7bpAQs",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:10:48.11Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ebae6pwkrbvnh5q0gjmu",
        "version": 1549649469,
        "signature": "3380bb02d314475c2a14aeaa2c5b1010c072dfc2",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:11:09Z",
        "tags": [],
        "bytes": 608315,
        "type": "upload",
        "etag": "b2f954086753300f414658c529e09183",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549649469/avalanche2019/ebae6pwkrbvnh5q0gjmu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549649469/avalanche2019/ebae6pwkrbvnh5q0gjmu.png"
      },
      {
        "public_id": "avalanche2019/htcca1gmf5wlcffnfbag",
        "version": 1549649488,
        "signature": "4afd731d3884ace313afad1565228324076e8756",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:11:28Z",
        "tags": [],
        "bytes": 2145804,
        "type": "upload",
        "etag": "8aec347ced5fb3b4a85e60753fb18657",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549649488/avalanche2019/htcca1gmf5wlcffnfbag.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549649488/avalanche2019/htcca1gmf5wlcffnfbag.png"
      },
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "mrQfLHwh29XQquzLK",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T01:27:24.719Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/recg2tszdoamtsbokrci",
        "version": 1552009108,
        "signature": "82595b6635a5e49bd8e2f8f10914553b87cce775",
        "width": 798,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T01:38:28Z",
        "tags": [],
        "bytes": 260932,
        "type": "upload",
        "etag": "c6312d001a56341c4c83e89327818288",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552009108/avalanche2019/recg2tszdoamtsbokrci.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552009108/avalanche2019/recg2tszdoamtsbokrci.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T17:57:38.629Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:56:03.198Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T20:08:16.545Z" }
      }
    ],
    "title": "",
    "description": "I used gradient and image as input examples code from class",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// code from class http://compform.net/pixels/ – gradient example X Image as Input Example\nvar ballImg;\n\nfunction preload() {\n    ballImg = loadImage(\"https://i.ibb.co/M1dFG21/ball.png\");\n}\n\nfunction setup() {\n    createCanvas(400, 400);\n}\n\nfunction draw() {\n    img = createImage(10, 10);\n    img.loadPixels();\n\n for (var y = 0; y < img.height; y++) {\n     for (var x = 0; x < img.width; x++) {\n         var c = color(y * 20, x *14, 120);\n         img.set(x, y, c);\n     }\n }\n\n img.updatePixels();\n // noSmooth();\n image(img, 0, 0, width, height);\n    fill(120, 150, 50);\n    noStroke();\n    var spacing = 400 / ballImg.width;\n    for (var y = 0; y < ballImg.height; y++) {\n        for (var x = 0; x < ballImg.width; x++) {\n            var in_color = ballImg.get(x, y);\n            var sqr_size = lightness(in_color) / 250 * 3 ;\n            rect(x * spacing + spacing * .5, y * spacing + spacing * .5, sqr_size, sqr_size);\n        }\n    }\n    noLoop();\n}"
  },
  {
    "_id": "mrajdHYEfsp2DmQAg",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T01:16:55.824Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cpkasilr0r0zxnpmfsrm",
        "version": 1549588619,
        "signature": "f8f810644088be3904dc62db12dfd3f1a5305ad9",
        "width": 988,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T01:16:59Z",
        "tags": [],
        "bytes": 55498,
        "type": "upload",
        "etag": "b55c73141ad0365dd5b3bd2f782554e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549588619/avalanche2019/cpkasilr0r0zxnpmfsrm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549588619/avalanche2019/cpkasilr0r0zxnpmfsrm.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T03:40:03.386Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T18:22:41.516Z" }
      }
    ],
    "title": "",
    "description": "3 boxes rotating \"randomly\" but not really, with random colors.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// from https://p5js.org/reference/#/p5/box\n\nwindow.setup = function(){\ncreateCanvas(500, 500, WEBGL);\n}\n\nwindow.draw = function(){\n  var r = random(244);\n  var g = random(66);\n  var b = random(122);\nbackground(\"#131921\");\nsmooth();\nrotateX(frameCount *0.02);\nrotateY(frameCount * -0.03);\nnoFill();\nstroke(r,g,b);\nstrokeWeight(0.4);\nbox(175);\n\nstroke(b,g,r);\nrotateX(frameCount *0.02);\nrotateY(frameCount * -0.03);\nbox(175);\n\nstroke(b,r,r);\nrotateX(frameCount * -0.03);\nrotateY(frameCount * 0.04);\nbox(175);\n}"
  },
  {
    "_id": "msBsBP4h62DJMm3rG",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T18:38:39.736Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cwqgvbsugsva07lonsyq",
        "version": 1552675123,
        "signature": "b0768ab7ad5e71fa87f9aa24a48c7137b53ec5e8",
        "width": 1012,
        "height": 954,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T18:38:43Z",
        "tags": [],
        "bytes": 116961,
        "type": "upload",
        "etag": "cc1eb3496bc73647aa70160f8738b904",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552675123/avalanche2019/cwqgvbsugsva07lonsyq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552675123/avalanche2019/cwqgvbsugsva07lonsyq.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_url": "https://casual-effects.com/codeheart/turtle/#commands"
  },
  {
    "_id": "mujqe4XvCKEuDm53u",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T03:00:50.562Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tpribasifox7ooihti6a",
        "version": 1553742064,
        "signature": "ee562441a95530837b2c0f3d241a8b8877c2847e",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-28T03:01:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 10667786,
        "type": "upload",
        "etag": "6a471f7bb39869c1c132f117176c64eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553742064/avalanche2019/tpribasifox7ooihti6a.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553742064/avalanche2019/tpribasifox7ooihti6a.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "10277901",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 24,
        "bit_rate": 10555197,
        "duration": 8.041667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/g41asv3mjsbgr3krvrk0",
        "version": 1553742081,
        "signature": "e9fd1353d9589ae6824c26deff379c4e754f698b",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T03:01:21Z",
        "tags": [],
        "bytes": 1046463,
        "type": "upload",
        "etag": "f8333ea1c6e70c8e3b2b84d6e6a7160e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553742081/avalanche2019/g41asv3mjsbgr3krvrk0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553742081/avalanche2019/g41asv3mjsbgr3krvrk0.png"
      },
      {
        "public_id": "avalanche2019/mscfxpiprqjpcjf6sdao",
        "version": 1553742087,
        "signature": "7a9eef0420e075235ceb2f111357eea6727d5bb5",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-28T03:01:27Z",
        "tags": [],
        "bytes": 599999,
        "type": "upload",
        "etag": "00233a9931ba6cb8338153ce5b797449",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553742087/avalanche2019/mscfxpiprqjpcjf6sdao.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553742087/avalanche2019/mscfxpiprqjpcjf6sdao.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a honeycomb pop visualization using paper.js, Illustrator, and Cinema 4D.\nFirst, I created a pattern in paper.js. Then, I exported it as SVG and manipulated it in Illustrator to make it uniform. \nFinally, I created a scene in cinema4D and used the saved texture for the moving balls.",
    "inspiration_name": "Honeycomb Pop Game",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// Logic\n// 1. Create a pattern of different shapes in Paper.js\n// (Try a wood texture)\n// 2. Export the pattern as SVG\n// 3. Organize the file in Illustrator and export as PNG\n// 4. Create a 3D model in Cinema 4D\n// 5. Add MoGraph effect to create a \"Timeless\" piece\n// 6. Add the texture to the moving material\n\n\n// Idea: Create a shape. Repeat it. Do it for all shapes\n\n\nvar scaleChange = 0;\nvar xPos = 80;\nvar yPos = 50;\nvar point_pos = new Point(xPos, yPos);\nvar s = 1; // for concentric ellipses\n\n// Make a concentric ellipse\nfunction repeatEllipse(x, y) {\n    s = 1; // reset scale to original after reducing it\n    for (var i = 0; i < 16; i++) {\n        var ellipse1 = new Shape.Ellipse({\n            point: [x, y],\n            size: [250, 100],\n            strokeColor: 'black',\n            fillColor: new Color('hsl(28deg, 71%, 22%)')\n        });\n        ellipse1.scale(s);\n        s -= 0.08;\n        ellipse1.fillColor.brightness = i * 0.18;\n    }\n}\n\n// Repeat ellipses\nfor (var i = 0; i < 20; i++) {\n\n    repeatEllipse(xPos, yPos);\n    xPos += 100 * Math.random();\n    yPos += 100 * Math.random();\n    // console.log(xPos, yPos);\n}\n\n\n\n//////////////////////////\n// Export the file as SVG\n//////////////////////////\n// Since this code is not in paperscript, it may be put in the HTML file\n// Didn't work when I tried.\n\nfunction onKeyDown(event) {\n    if (event.key === 's') {\n        downloadAsSVG();\n    }\n}\n\nfunction downloadAsSVG(fileName) {\n    // use default name if not provided\n    fileName = fileName || \"output.svg\"\n        // create a data url of the file\n    var svgData = project.exportSVG({ asString: true });\n    var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n    // create a link to the data, and \"click\" it\n    var link = document.createElement(\"a\");\n    link.download = fileName;\n    link.href = url;\n    link.click();\n}"
  },
  {
    "_id": "mwNBPuPvKFMbswWti",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T01:47:18.106Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ussvzdzqjjitkgakfnzf",
        "version": 1553824298,
        "signature": "106c553339423b2d1a951df7f5ee15caf918654e",
        "width": 1114,
        "height": 1490,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:51:38Z",
        "tags": [],
        "bytes": 310026,
        "type": "upload",
        "etag": "e743bb4ebc653061ad7edd3aa3986cc0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553824298/avalanche2019/ussvzdzqjjitkgakfnzf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553824298/avalanche2019/ussvzdzqjjitkgakfnzf.png"
      },
      {
        "public_id": "avalanche2019/l8i7m3twitspm9bljbwi",
        "version": 1553824311,
        "signature": "c2186b36ef3eee81e47a4253192245b839be11dc",
        "width": 1230,
        "height": 1622,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:51:51Z",
        "tags": [],
        "bytes": 266001,
        "type": "upload",
        "etag": "0d896d70f9c520e9a794e34d46d491dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553824311/avalanche2019/l8i7m3twitspm9bljbwi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553824311/avalanche2019/l8i7m3twitspm9bljbwi.png"
      },
      {
        "public_id": "avalanche2019/fglfepurvnqgdtde9uj0",
        "version": 1553824317,
        "signature": "c046fab24a76966a09f9c095007ca44484bc0e33",
        "width": 1572,
        "height": 956,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T01:51:57Z",
        "tags": [],
        "bytes": 228723,
        "type": "upload",
        "etag": "725cb3ea31e3cd147235274994fd6ac9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553824317/avalanche2019/fglfepurvnqgdtde9uj0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553824317/avalanche2019/fglfepurvnqgdtde9uj0.png"
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T02:51:45.124Z" }
      }
    ],
    "title": "",
    "description": "Additional Work to make a alphabet and get it ready for the printers \n\n1.created vector files of text from whole alphabet in separate svgs's in illustrator and uploaded them to code project \n2. added function to download single letters as svgs's (randomness lets you generate the letter over and  over until you get a variation that you like) \n2. pulled all the svgs's in my computer generated type face \n3. deleted areas that would get cut out of laser cutter and added supports for closed interior portions of letters (will make more sense when I post my laser cut) \n--last photo shows the beginning SVG files"
  },
  {
    "_id": "mxFMkwY8ALpEY4wjW",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-08T12:55:06.661Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qay2gb3zzk9kypskmgdl",
        "version": 1554728122,
        "signature": "f00b33ac9ba06a64d5f9b589c0439d98f41aebff",
        "width": 898,
        "height": 780,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-08T12:55:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 1750731,
        "type": "upload",
        "etag": "5e4890f5fac2469fbe95ab403696d9c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554728122/avalanche2019/qay2gb3zzk9kypskmgdl.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554728122/avalanche2019/qay2gb3zzk9kypskmgdl.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "410915",
          "dar": "449:390"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 414273,
        "duration": 33.808231,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/o0ak6tq1klmxf50ztfvd",
        "version": 1554728166,
        "signature": "6142ca67478678ca03a5176623fa5bcebad6c7d4",
        "width": 898,
        "height": 780,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-08T12:56:06Z",
        "tags": [],
        "bytes": 267027,
        "type": "upload",
        "etag": "178c957d5659a516e1add6b80baecc86",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554728166/avalanche2019/o0ak6tq1klmxf50ztfvd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554728166/avalanche2019/o0ak6tq1klmxf50ztfvd.jpg"
      },
      {
        "public_id": "avalanche2019/aiqxwizll1v1lkxrzax2",
        "version": 1554728196,
        "signature": "4c9e0159425042803eee01e9b5fe0b8751083009",
        "width": 903,
        "height": 475,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-08T12:56:36Z",
        "tags": [],
        "bytes": 236692,
        "type": "upload",
        "etag": "8f23f329b494f33cd9b3a206769b0122",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554728196/avalanche2019/aiqxwizll1v1lkxrzax2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554728196/avalanche2019/aiqxwizll1v1lkxrzax2.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I am asking a series of questions on social issues, and how should people think about them. \nI have used Tracery for text generation.",
    "inspiration_name": "Social Issue Question Generator",
    "inspiration_url": "http://compform.net/text/",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    'top': ['#div#'],\n    'div': ['<div style=\"border: #borderSize# #borderType# #borderColor#;  color: #borderColor#; text-align: center; text-transform: capitalize; font-family: serif; margin: 10px;\">#content# #content#</div>'],\n    'content': ['#div#', '#div#', '#word#', '#word#'],\n    'borderSize': ['1px', '4px', '10px'],\n    'borderType': ['solid', 'dashed', 'dotted', 'groove', 'ridge'],\n    'borderColor': ['firebrick', 'mediumseagreen', 'dodgerblue', 'chocolate'],\n    'word': ['<span style=\"font-size: 30px\">#question# #person# #verb# #issues##char#</span>'],\n    'question': ['can', 'should', 'will'],\n    'person': ['trump', 'government', 'corporations', 'people'],\n    'verb': ['prevent', 'sustain', 'ignore', 'avoid', 'ridicule', 'fear', 'solve'],\n    'issues': ['fake news', 'climate change', 'data privacy', 'poverty', 'terrorism', 'unemployment', 'pollution'],\n    'char': ['?']\n}\n\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten('#top#');\n\n    const storyDiv = document.createElement('div');\n    storyDiv.innerHTML = story;\n\n    document.body.insertAdjacentElement('beforeend', storyDiv);\n}\n\n\nsetTimeout(main, 10);"
  },
  {
    "_id": "myezRwWfasGxfXKQj",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-06T20:56:34.755Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bn0z44siugzpmobciwy4",
        "version": 1549486625,
        "signature": "55aaa7783d641fdec158b8deb4a5cdc7147804b0",
        "width": 994,
        "height": 994,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-06T20:57:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 841416,
        "type": "upload",
        "etag": "075e4ae66af027d976a0d3040c3e6fc5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549486625/avalanche2019/bn0z44siugzpmobciwy4.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549486625/avalanche2019/bn0z44siugzpmobciwy4.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "4632099",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 4642295,
        "duration": 1.45,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Classwork. Circles."
  },
  {
    "_id": "mywrvwtDjsDJXBSuq",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T18:08:18.149Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u3jyqtt8p0bqkdcvwjys",
        "version": 1554487710,
        "signature": "331c5b24248402dcf749011b19cea589b5b6ebf7",
        "width": 636,
        "height": 640,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T18:08:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 2952530,
        "type": "upload",
        "etag": "78caedb1c7cc9b414599e39d3db11b17",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554487710/avalanche2019/u3jyqtt8p0bqkdcvwjys.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554487710/avalanche2019/u3jyqtt8p0bqkdcvwjys.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "648037",
          "dar": "159:160"
        },
        "frame_rate": 60,
        "bit_rate": 654602,
        "duration": 36.083333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/p6kv3ldctjagbnnxjmtj",
        "version": 1554487720,
        "signature": "cb4f68305bb2114df15d3415ad2907a1daa829d7",
        "width": 622,
        "height": 612,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T18:08:40Z",
        "tags": [],
        "bytes": 161352,
        "type": "upload",
        "etag": "e59de8ec71634c77bd831d009c85e829",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554487720/avalanche2019/p6kv3ldctjagbnnxjmtj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554487720/avalanche2019/p6kv3ldctjagbnnxjmtj.png"
      },
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "mze5QbHu7rTkrEjzt",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-21T16:42:46.874Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-22T02:34:17.465Z" }
      }
    ],
    "title": "",
    "description": "Playing around with class example and adding bass.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nconst synth = new Tone.FMSynth().toMaster();\nconst synthBass = new Tone.Synth().toMaster();\n\nTone.Transport.bpm.value = 200;\n\nconst cmajor = [\"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\"];\n\nconst bassC = [\"C2\", \"D2\", \"E2\", \"F2\", \"G2\", \"A2\", \"B2\"];\nconst notes = cmajor;\nconst bassNotes = bassC;\n\nlet degree = 0;\n\nsynth.modulation = window.onmousedown = () => {\n  const melody = generateSong();\n  const bassLine = generateBassMeasure();\n  play(melody);\n  play(bassLine);\n};\n\nfunction generateSong() {\n  degree = randomInt(0, 20);\n\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  return [].concat(a, a, b, a, c, a, b, a, c);\n}\n\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n    const change = sample([-1, -2, -2, 1, -5, 2, 3, 5, -3]);\n    degree = constrain(degree + change, 0, 6);\n    const note = notes[degree];\n\n    let length = Tone.Time(\"4n\");\n    if (Math.random() < 0.5) {\n      length = Tone.Time(\"8n\");\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n    timeLeft = Tone.Time(timeLeft - length);\n\n    m.push([note, length]);\n  }\n  return m;\n}\n\nfunction generateBassMeasure() {\n  const mBass = [];\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n    const change = sample([-1, -2, -2, 1, -5, 2, 3, 5, -3]);\n    degree = constrain(degree + change, 0, 6);\n    const bass = bassNotes[degree];\n\n    let length = Tone.Time(\"4n\");\n    if (Math.random() < 0.5) {\n      length = Tone.Time(\"2n\");\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n    timeLeft = Tone.Time(timeLeft - length);\n    mBass.push([bass, length]);\n  }\n  return mBass;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  let b = Tone.now();\n\n  for (const note of melody) {\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n  for (const bass of melody) {\n    if (bass[0] !== \"rest\") {\n      synthBass.triggerAttackRelease(bass[0], Tone.Time(bass[1]) - 0.1, b);\n    }\n    b += Tone.Time(bass[1]);\n  }\n}\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}"
  },
  {
    "_id": "n85o89JKLZfsi2rQX",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-02-27T19:44:12.649Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/si5wbxm7zcyufl9b4vco",
        "version": 1551296737,
        "signature": "33ea5a088be40cfc8075cd1ea95aef4f8546924b",
        "width": 820,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-27T19:45:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 3541220,
        "type": "upload",
        "etag": "771e5b31e388855450ca0f7364b9466c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551296737/avalanche2019/si5wbxm7zcyufl9b4vco.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551296737/avalanche2019/si5wbxm7zcyufl9b4vco.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2247129",
          "dar": "41:36"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2263362,
        "duration": 12.516667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "I couldn't get the time speed exactly right, but it's pretty close I think!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nlet amplitude_slider;\nlet frequency_slider;\nlet timeSpeed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nlet timeChange = 3;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 200, 10);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 200, 50);\n\n  createP(\"Time Speed\");\n  timeSpeed_slider = createSlider(0, 50, 40);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let freq = frequency_slider.value() / 1000;\n\n  let amplitude = amplitude_slider.value() / 50;\n\n  let time = timeSpeed_slider.value() / 100;\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // let offsetX = noise(x, y) * amplitude * 20;\n    // let offsetY = noise(x, y) * amplitude * 20;\n\n    // let offsetX_freq = offsetX * freq;\n    // let offsetY_freq = offsetY * freq;'\n    let noiseTime = (noise(0.5) * frameCount * time) / 2;\n\n    let offsetX =\n      noise(x * freq + noiseTime, x * freq + noiseTime) * 20 * amplitude;\n    let offsetY =\n      noise(y * freq + noiseTime, y * freq + noiseTime) * 40 * amplitude;\n\n    // let offsetX = (random() - 0.5) * amplitude * 10;\n    // let offsetY = (random() - 0.5) * amplitude * 10;\n    // let offsetX_freq = noise(offsetX) * freq;\n    // let offsetY_freq = noise(offSetY) * freq;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n    noiseTime *= 0.5;\n  }\n}"
  },
  {
    "_id": "n8qEyHw2SQo7WwM4o",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T18:04:28.352Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r7qghlp305uocilxrkb6",
        "version": 1552673619,
        "signature": "13db4501708d5d9720036e2388fddea7cecbd3c8",
        "width": 597,
        "height": 446,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T18:13:39Z",
        "tags": [],
        "bytes": 12354,
        "type": "upload",
        "etag": "2376c17f0e4da3bc6d5d5624e5a68cfb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552673619/avalanche2019/r7qghlp305uocilxrkb6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552673619/avalanche2019/r7qghlp305uocilxrkb6.png"
      },
      {
        "public_id": "avalanche2019/cyvpo3wnhdb2fxfls9ft",
        "version": 1552673648,
        "signature": "5eaaca2b397e4ec2305d785f265321a06b706bb2",
        "width": 1200,
        "height": 900,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T18:14:08Z",
        "tags": [],
        "bytes": 20245,
        "type": "upload",
        "etag": "b469f26f9971756371cf76f8da98e205",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552673648/avalanche2019/cyvpo3wnhdb2fxfls9ft.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552673648/avalanche2019/cyvpo3wnhdb2fxfls9ft.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T19:21:07.431Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:50:26.752Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T19:50:29.457Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:50:37.49Z" }
      }
    ],
    "title": "",
    "description": "A near perfect representation of Pablo Picasso's 1-line weiner dog."
  },
  {
    "_id": "nAk2PRmTZbW6Xvs8q",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T23:30:01.984Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dedlyuhizqn5ku5lehnb",
        "version": 1548977535,
        "signature": "8bad5f21455f565871a1e12d82fafa7a5ff0ee25",
        "width": 1120,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-01-31T23:32:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 20544316,
        "type": "upload",
        "etag": "4272396c0f3195aa82cfc0243faeb0e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548977535/avalanche2019/dedlyuhizqn5ku5lehnb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548977535/avalanche2019/dedlyuhizqn5ku5lehnb.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11654025",
          "dar": "14:9"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11670144,
        "duration": 14.083333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:02:49.714Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:25:30.941Z" }
      }
    ],
    "title": "",
    "description": "Tile move diagonally across the the screen until it leaves the canvas and frightens the others. Took way longer than it should have. Made in Processing",
    "inspiration_name": "Scared Tiles",
    "code": "int scale = 60;\nint w, h;\nint r, g, b;\nfloat rotation;\nfloat rectSize = 60;\nint xMultiplier, yMultiplier;\nint ellapsedTime;\n\nvoid setup() {\n  size(900, 780);\n  frameRate(40);\n  w = width;\n  h = height;\n  rectMode(CENTER);\n  r = 50;\n  g = 100;\n  b = 100;\n\n  xMultiplier = 0;\n  yMultiplier = 0;\n  ellapsedTime = millis() + 780;\n}\n\nvoid draw() {\n  background(0);\n\n  for (int x = 0; x<w; x+=scale) {\n    for (int y = 0; y<h; y+=scale) {\n\n      if ( x == scale*xMultiplier && y == scale*yMultiplier) {\n        fill(r+100, g, b);\n      } else {\n        fill(r, g, b);\n      }\n\n\n      if (millis() > ellapsedTime) {\n        ellapsedTime = millis() + 780;\n        xMultiplier+=1;\n        yMultiplier+=1;\n      }\n\n      if (yMultiplier >= 13) {\n        y+=random(1, 4);\n        //yMultiplier+=1;\n        //xMultiplier = 0;\n      } else if (yMultiplier >=13) {\n        yMultiplier = 0;\n      }\n\n      pushMatrix();\n      translate(x+30, y+30);\n      rotate(rotation);\n      rect(0, 0, rectSize, rectSize);\n      popMatrix();\n    }\n  }\n  rotation +=0.05;\n}"
  },
  {
    "_id": "nEvQcY47y5sEYYZLF",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T21:30:03.996Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rhckuswjlj37dczf7uv2",
        "version": 1555623043,
        "signature": "a115a20085303c9d6e3324692e0feb5152acd510",
        "width": 1588,
        "height": 1596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T21:30:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 12726812,
        "type": "upload",
        "etag": "9d6a4f4b2ce64094b41e4ba46ec0a6fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555623043/avalanche2019/rhckuswjlj37dczf7uv2.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555623043/avalanche2019/rhckuswjlj37dczf7uv2.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "230877",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "9320835",
          "dar": "397:399"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9578634,
        "duration": 10.629333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T00:29:32.6Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:52:05.191Z" }
      }
    ],
    "title": "",
    "description": "Metaballs with sound interaction when they blob together. Made in processing because if you try this in p5 it will crash",
    "inspiration_name": "Metaball Tutorial",
    "inspiration_url": "https://www.youtube.com/watch?v=ccYLb7cLB1I&t"
  },
  {
    "_id": "nFiH9khEiWDg9XFWn",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T15:10:33.95Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kzbwm0959wjgxklbhc5e",
        "version": 1549638641,
        "signature": "5f0a11f979d295fe82cc332a4aac5b71a8f5a94e",
        "width": 798,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T15:10:41Z",
        "tags": [],
        "bytes": 72457,
        "type": "upload",
        "etag": "41e407b4d08c5a3e5a50db82051308a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549638641/avalanche2019/kzbwm0959wjgxklbhc5e.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549638641/avalanche2019/kzbwm0959wjgxklbhc5e.png"
      },
      {
        "public_id": "avalanche2019/v5ir4zfhi8ioi5zwj1ml",
        "version": 1549638647,
        "signature": "c1e78e6a3106af05986eaed5b1a70cb165648f75",
        "width": 796,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T15:10:47Z",
        "tags": [],
        "bytes": 54620,
        "type": "upload",
        "etag": "1e3ddca34ff9306e76156dfcec444bf5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549638647/avalanche2019/v5ir4zfhi8ioi5zwj1ml.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549638647/avalanche2019/v5ir4zfhi8ioi5zwj1ml.png"
      },
      {
        "public_id": "avalanche2019/yt6fzranyyh4nhtxhqhm",
        "version": 1549638655,
        "signature": "aa8a999c4e85775d3c390a014e24801758ec8bbb",
        "width": 794,
        "height": 792,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T15:10:55Z",
        "tags": [],
        "bytes": 50178,
        "type": "upload",
        "etag": "55a8a976cb340329554204a9ce9c1b3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549638655/avalanche2019/yt6fzranyyh4nhtxhqhm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549638655/avalanche2019/yt6fzranyyh4nhtxhqhm.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Inspiration by Kazimir Malevich",
    "inspiration_name": "Kazimir Malevich",
    "inspiration_url": "https://www.tate.org.uk/art/artists/kazimir-malevich-1561"
  },
  {
    "_id": "nGCu4HdM6xYfc4yMq",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-30T14:53:35.017Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tevv5nvmde3e2nxrdixa",
        "version": 1556636029,
        "signature": "d0d956edc6f52387e8a17c5ce96edcfbd74e601d",
        "width": 1118,
        "height": 1058,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-30T14:53:49Z",
        "tags": [],
        "bytes": 49859,
        "type": "upload",
        "etag": "c97570702d0f684780a0e49aac8a0667",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556636029/avalanche2019/tevv5nvmde3e2nxrdixa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556636029/avalanche2019/tevv5nvmde3e2nxrdixa.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-30T19:32:40.228Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-01T17:50:13.058Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-05-01T21:40:03.391Z" }
      }
    ],
    "title": "",
    "description": "'off' cube."
  },
  {
    "_id": "nGDWThdnAKTPvz9EK",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T07:53:35.151Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/exteuuuz0ifl3hwpiyfh",
        "version": 1555055634,
        "signature": "90038bdd942c6ade4d23cd1d2e39051aa3cfd5ad",
        "width": 1178,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T07:53:54Z",
        "tags": [],
        "bytes": 68968,
        "type": "upload",
        "etag": "efba7ce6c12128b3972994a38e1314c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555055634/avalanche2019/exteuuuz0ifl3hwpiyfh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555055634/avalanche2019/exteuuuz0ifl3hwpiyfh.png"
      },
      {
        "public_id": "avalanche2019/crechhqhz7knviq0mlwg",
        "version": 1555055690,
        "signature": "9e4254b6ae67bdc4b6612677de977d5bd956334b",
        "width": 1512,
        "height": 806,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T07:54:50Z",
        "tags": [],
        "bytes": 73504,
        "type": "upload",
        "etag": "3434143b8cc33e0cf983fbfedfc362c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555055690/avalanche2019/crechhqhz7knviq0mlwg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555055690/avalanche2019/crechhqhz7knviq0mlwg.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-04-12T13:06:52.575Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T14:41:33.184Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T17:21:00.379Z" }
      }
    ],
    "title": "",
    "description": "What Does Your Birth Month \nSay About Your Personality?",
    "code": "//code from class: Make an Amendment and Template Example http://compform.net/text/\n\ninjectInterface();\nconst submitButton = document.getElementById(\"submit\");\nsubmitButton.addEventListener('click', buildTemplate);\nconst resetButton = document.getElementById(\"reset\");\nresetButton.addEventListener('click', reset);\n\n\nfunction buildTemplate() {\n    const yourname = document.getElementById(\"yourname\").value || \"you\";\n    const birthmonth = document.getElementById(\"birthmonth\").value || \"month\";\n\n    var adjectives1= [\"serious\",\"funny\",\"motivated\",\"attentive\",\"sociable\",\"stubborn\"]\n    var adjectives2= [\"realistic\",\"intelligent\",\"sexy\",\"attractive\",\"temperamental\",\"shy\",\"secretive\"]\n    var adjectives3= [\"humble\",\"quiet\",\"honest\",\"loyal\",\"smart\",\"sensitive\",\"generous\",\"understanding\"]\n    var nouns1=[\"ice cream\",\"traveling\",\"surfing\",\"dogs\",\"cats\",\"dancing\",\"painting\",\"tacos\",\"sleeping\"]\n    var nouns2 =[\"exercising\",\"pizza\",\"politics\",\"fashion\",\"cheesecakes\",\"cooking\",\"dogs\"]\n\n    var adjective1 = sample(adjectives1);\n    var adjective2 = sample(adjectives2);\n    var adjective3 = sample(adjectives3);\n    var noun1 = sample(nouns1);\n    var noun2 = sample(nouns2);\n\n\n    var discription=\"\";\n    if (Math.random() < 1) {\n      discription =  `${yourname}... people who are born in ${birthmonth} are usually ${adjective1} and ${adjective2}, and they are NOT ${adjective3}. They like ${noun1} and hate ${noun2}.\n\n\n\n\n\n\n      *this is random*`\n  \t}\n\n\n    const outputDiv = document.getElementById('output');\n    const inputDiv = document.getElementById('input');\n\n    inputDiv.classList.add(\"hidden\");\n    outputDiv.classList.remove(\"hidden\");\n\n    const messageDiv = document.getElementById('message');\n    messageDiv.innerText = discription;\n}\n\nfunction reset() {\n    const outputDiv = document.getElementById('output');\n    const inputDiv = document.getElementById('input');\n\n    inputDiv.classList.remove(\"hidden\");\n    outputDiv.classList.add(\"hidden\");\n}\n\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\nfunction injectInterface() {\n\n    document.body.insertAdjacentHTML('beforeend', `\n<style>\nbody {\n    padding: 100 100;\n    font-family: sans-serif;\n    display: flex;\n    flex-direction: column;\n\n}\n\n#input,\n#output\n{\n    font-size: 22px;\n}\n\n#output\n{\n    width: 600px;\n}\n\n#message {\n    margin-bottom: 30px;\n}\n#input input {\n    border: 1px solid black;\n    padding: 5px;\n    font-size: 18px;\n    margin-bottom: 10px;\n    width: 150px;\n}\n\n#input label {\n    padding-top: 100px;\n    left-padding: 100px;\n    font-size: 12px;\n    width: 150px;\n    display: inline-block;\n}\n\nbutton {\n    font-family: \"Overpass Mono\", sans-serif;\n    font-size: 12px;\n    background: white;\n}\n\n.hidden {\n   display: none;\n}\n\n</style>\n`);\n\n    document.body.insertAdjacentHTML('beforeend', `\n\n<div id=\"input\">\n  <h2>What Does Your Birth Month <br>Say About Your Personality?</h2>\n    <div><label>Your Name</label>\n    <br><input autocomplete=\"off\" id=\"yourname\"></div>\n    <br>\n    <div class=\"custom-select\" style=\"width:200px;\">\n  <select id=\"birthmonth\">\n    <option value=\"0\">Your Birth Month</option>\n    <option value=\"January\">January</option>\n    <option value=\"February\">February</option>\n    <option value=\"March\">March</option>\n    <option value=\"April\">April</option>\n    <option value=\"May\">May</option>\n    <option value=\"June\">June</option>\n    <option value=\"July\">July</option>\n    <option value=\"August\">August</option>\n    <option value=\"September\">September</option>\n    <option value=\"October\">October</option>\n    <option value=\"November\">November</option>\n    <option value=\"December\">December</option>\n  </select>\n</div>\n<br>\n<br>\n    <div><button id=\"submit\">submit</button></div>\n</div>\n<div id=\"output\" class=\"hidden\">\n    <div id=\"message\"></div>\n    <button id=\"reset\">reset</button>\n</div>\n\n`);\n}"
  },
  {
    "_id": "nH9FboBpJZN5zDD4X",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-23T20:19:35.022Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kkvyufwk3jpzgagv7mow",
        "version": 1556051155,
        "signature": "b965ca49217a16ffbf842c327cda8ac77fce5b5d",
        "width": 964,
        "height": 968,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-23T20:25:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 737884,
        "type": "upload",
        "etag": "a740958f97f1c202686dd71ffb894f9c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556051155/avalanche2019/kkvyufwk3jpzgagv7mow.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556051155/avalanche2019/kkvyufwk3jpzgagv7mow.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "241464",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "282641",
          "dar": "241:242"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 532608,
        "duration": 11.083333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-26T18:15:25.604Z" }
      }
    ],
    "title": "",
    "description": "Using my sound code to attach a note on click",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n\n\nvar circles = [];\nvar lastTouchX;\nvar lastTouchY;\n\n//function preload() {\n  //sound = loadSound ('herecomesthesun.mp3');\n//}\n\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  setupTone();\n  \n amplitude = new p5.Amplitude();\n //sound.play();\n  \n  lastTouchX = width / 2;\n  lastTouchY = height / 2;\n  \n}\n\n// First, create the synth.\nlet synth;\n\n// Array of synth objects.\nlet tones = [];\n\nfunction setupTone(){\nsynth = new Tone.Synth().toMaster();\n\n// Create new tone synth object.\n  tones.push(new Tone.Synth().toMaster());\n}\n\nfunction draw() {\nfill(98,18);\n\n  rect(0, 0, 400, 400);\n  \n  for (var i = 0; i < circles.length;i++) {\n    circles [i].display();\n  }\n}\n\nfunction mousePressed() {\n  lastTouchX = mouseX;\n  lastTouchY = mouseY;\n  circles.push(new Circle());\n\n}\n\nfunction Circle(){\nthis.x = lastTouchX;\nthis.y = lastTouchY;\n\n // Create tone.\n    //play a middle 'C' for the duration of an 4th note\nsynth.triggerAttackRelease(Math.random()*340 + 55, \"4n\");\n\nthis.display = function() {\n  var level = amplitude.getLevel();\n  var size = map(level, 0, 1, 100, 280);\n  noStroke();\n  \n  fill(118,166,206,20);\n  //fill(255,215,0,20);\n  noStroke();\n  \n\n  ellipse(this.x, this.y, size, size);\n}\n}"
  },
  {
    "_id": "nHgW8QyMXqjmJD7G7",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T19:02:17.389Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zxyrqw1eslmij3havo3u",
        "version": 1549566150,
        "signature": "ddd00ddc8d17fbbac862d583209c36675f903a4a",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T19:02:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 3864590,
        "type": "upload",
        "etag": "fc1cc049ad9bd32dc4852d57cd41419a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549566150/avalanche2019/zxyrqw1eslmij3havo3u.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549566150/avalanche2019/zxyrqw1eslmij3havo3u.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2023948",
          "dar": "16:9"
        },
        "frame_rate": 23.976023976023978,
        "bit_rate": 2064791,
        "duration": 14.973292,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/zzkwg8i3vphv5cho3qxj",
        "version": 1549566153,
        "signature": "315ef0ca9f1db3c490bdd97a4a9a24f05b1e5655",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T19:02:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 3424334,
        "type": "upload",
        "etag": "8cda2e99f2f407ac64e7f4df9447cd66",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549566153/avalanche2019/zzkwg8i3vphv5cho3qxj.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549566153/avalanche2019/zzkwg8i3vphv5cho3qxj.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "3865500",
          "dar": "16:9"
        },
        "frame_rate": 23.976023976023978,
        "bit_rate": 3956718,
        "duration": 6.923583,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T18:07:53.963Z" }
      }
    ],
    "title": "",
    "description": "Shooting game with enemies that also shoot randomly"
  },
  {
    "_id": "nP3vBNP8APDmkiQX6",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-26T18:30:20.17Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z9gijiz3ywbghvibenq4",
        "version": 1553625060,
        "signature": "dfd54d156a85f13fe40df11a16a924fcdea5c624",
        "width": 642,
        "height": 1240,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-26T18:31:00Z",
        "tags": [],
        "bytes": 65268,
        "type": "upload",
        "etag": "717ad6fef6e9ec1891165c3b397ee5bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553625060/avalanche2019/z9gijiz3ywbghvibenq4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553625060/avalanche2019/z9gijiz3ywbghvibenq4.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Stole Akshansh's idea and am going to am going to laser-cut a bookmark out of this pattern.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar rightBorder = 290;\nvar leftBorder = 10;\nvar topBorder = 10;\nvar bottomBorder = 590;\nvar indent = 20;\nindentSmall = 10;\n\nvar rectSize = 100;\n\nvar bottomRight = new Point(rightBorder, bottomBorder);\nvar topRight = new Point(rightBorder, topBorder);\nvar topLeft = new Point(leftBorder, topBorder);\nvar bottomLeft = new Point(leftBorder, bottomBorder);\n\nvar path = new Path();\nvar diamond = new Rectangle(\n  new Point(\n    rightBorder / 2 - rectSize / 2 + 5,\n    bottomBorder / 2 - rectSize / 2 + 5\n  ),\n  new Size(rectSize, rectSize)\n);\n\nvar path2 = new Path.Rectangle(diamond);\n// path2.fillColor = \"blue\";\npath2.strokeColor = \"blue\";\npath2.rotate(45);\n\npath.strokeColor = \"red\";\npath.strokeWidth = 2;\npath.moveTo(bottomRight);\n\n// path.lineTo(bottomRight + [0, -580]);\npath.lineTo(topRight);\npath.lineTo(topLeft);\npath.lineTo(bottomLeft);\npath.lineTo(bottomRight - [indent, 0]);\nfor (var i = 0; i < 14; i++) {\n  path.lineTo(topRight - [indent, -indent]);\n  path.lineTo(topLeft - [-indent, -indent]);\n  path.lineTo(bottomLeft - [-indent, indent]);\n  path.lineTo(bottomRight - [20 + indent, indent]);\n  indent += 20;\n}\n\nvar path3 = new Path();\npath3.strokeColor = \"red\";\n\npath3.moveTo(bottomRight - [indentSmall, 0]);\n\n// path.lineTo(bottomRight + [0, -580]);\npath3.lineTo(topRight - [indentSmall, -indentSmall]);\npath3.lineTo(topLeft - [-indentSmall, -indentSmall]);\npath3.lineTo(bottomLeft - [-indentSmall, indentSmall]);\npath3.lineTo(bottomRight - [indentSmall * 3, indentSmall]);\n\npath3.lineTo(topRight - [indentSmall + 20, indentSmall - 40]);\npath3.lineTo(topLeft - [-indentSmall - 20, -indentSmall - 20]);\npath3.lineTo(bottomLeft - [-indentSmall - 20, indentSmall + 20]);\npath3.lineTo(bottomRight - [20 + indentSmall + 20, indentSmall + 20]);\n\nvar borderRect = new Rectangle(\n  new Point(leftBorder - 10, topBorder - 10),\n  new Size(rightBorder + 10, bottomBorder + 10)\n);\n\nvar border = new Path.Rectangle(borderRect);\nborder.strokeColor = \"blue\";\n\nfunction onKeyDown(event) {\n  if (event.key === \"s\") {\n    downloadAsSVG();\n  }\n}\n\nfunction downloadAsSVG(fileName) {\n  // use default name if not provided\n  fileName = fileName || \"output.svg\";\n\n  // create a data url of the file\n  var svgData = project.exportSVG({ asString: true });\n  var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n  // create a link to the data, and \"click\" it\n  var link = document.createElement(\"a\");\n  link.download = fileName;\n  link.href = url;\n  link.click();\n}"
  },
  {
    "_id": "nRiL8BsAuaN83LM3h",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:09:34.444Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tophs9utlfawuzkbrbvf",
        "version": 1549649401,
        "signature": "9c889fa51e33694a08afe0e5fc0ef34aed00969a",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:10:01Z",
        "tags": [],
        "bytes": 170153,
        "type": "upload",
        "etag": "74094338587b0158ef24754597dfccb5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549649401/avalanche2019/tophs9utlfawuzkbrbvf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549649401/avalanche2019/tophs9utlfawuzkbrbvf.png"
      },
      {
        "public_id": "avalanche2019/er73l6griofs8h024imk",
        "version": 1549649410,
        "signature": "475485009437e52ab43925d3727df4dcf020c152",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:10:10Z",
        "tags": [],
        "bytes": 258751,
        "type": "upload",
        "etag": "4d2b2109e496b79b3a5251201415a9fa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549649410/avalanche2019/er73l6griofs8h024imk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549649410/avalanche2019/er73l6griofs8h024imk.png"
      },
      {
        "public_id": "avalanche2019/axs1vjcmj9qojditoizp",
        "version": 1549649417,
        "signature": "321ec9d1c6aa1a50d64779cbd63327a527eb3e33",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T18:10:17Z",
        "tags": [],
        "bytes": 352322,
        "type": "upload",
        "etag": "67c7245cb1c4978f7f902e9a66f0c1e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549649417/avalanche2019/axs1vjcmj9qojditoizp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549649417/avalanche2019/axs1vjcmj9qojditoizp.png"
      }
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "nbRFNmvhYA5tWM5tC",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T22:20:31.066Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j8ydtefsr8exayhwf2i6",
        "version": 1555627067,
        "signature": "4bea273b39c9ef680702e760228f373a71a4ba91",
        "width": 640,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T22:37:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 19958549,
        "type": "upload",
        "etag": "1d0d3a6061c4716959b9fd0e4d7d7117",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555627067/avalanche2019/j8ydtefsr8exayhwf2i6.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555627067/avalanche2019/j8ydtefsr8exayhwf2i6.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "128385",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "2576364",
          "dar": "4:3"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2742932,
        "duration": 58.210833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T22:46:31.889Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T03:51:07.578Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T12:41:01.977Z" }
      }
    ],
    "title": "",
    "code": "using processing, Kinect skeleton tracking, mapping interactions to sound , sound is triggered by activation of different skeleton points , developing for another project but working on developing the sound"
  },
  {
    "_id": "ne4YFncbWqxgcFFJc",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T17:13:20.871Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eibd0v6b2mvfzlb5sk9t",
        "version": 1557508416,
        "signature": "bb868ee9fdee6e288e5160528319e288558777dc",
        "width": 2536,
        "height": 1368,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T17:13:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 8251273,
        "type": "upload",
        "etag": "bc44db9f67f1a631bff03d934b906ded",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557508416/avalanche2019/eibd0v6b2mvfzlb5sk9t.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557508416/avalanche2019/eibd0v6b2mvfzlb5sk9t.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "289002",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "3041523",
          "dar": "317:171"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3328244,
        "duration": 19.833333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "jQuery(function() {\n  const game_start = new Audio('audio/start-round.mp3');\n  game_start.play();\n\n  const body = $('body');\n\n  function createDuck() {\n    let duck = $('<div class=\"duck\"></div>');\n    body.append(duck);\n\n    setInterval(function() {\n      duck.toggleClass('flap');\n    }, 250);\n\n    duck.css('top', Math.random() * window.innerHeight);\n    duck.css('left', Math.random() * window.innerWidth);\n\n    setInterval(function() {\n      duck.css('top', Math.random() * window.innerHeight);\n      duck.css('left', Math.random() * window.innerWidth);\n    }, 2000);\n\n    duck.on('click', function() {\n      duck.addClass('shot');\n\n      setTimeout(function() {\n        duck.remove();\n        checkForWinner();\n      }, 1000);\n    });\n\n    return duck;\n  }\n\n\n  for (let i = 0; i < 5; i++) {\n    createDuck();\n  }\n});",
    "description": "Challenged myself to make a game using other tools. Makes you appreciate more what libraries like p5 can do for you..."
  },
  {
    "_id": "nfAfhZ7mi4Drvejzn",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:34:25.618Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/skbgds4akx4nhspydzpa",
        "version": 1552077273,
        "signature": "d33648a5d008d317bf20a69fefaefc4bdc108197",
        "width": 1022,
        "height": 1044,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T20:34:33Z",
        "tags": [],
        "bytes": 22746,
        "type": "upload",
        "etag": "982a4bc988d64520119892b885640933",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552077273/avalanche2019/skbgds4akx4nhspydzpa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552077273/avalanche2019/skbgds4akx4nhspydzpa.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A little low res city on the beach with pixels"
  },
  {
    "_id": "nh6f33LgtocJxqguX",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T04:53:06.019Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hgnx1talcnd9e7g5ly5x",
        "version": 1554440044,
        "signature": "6806883a70ddd9fcf34a2a848ee05922386072d8",
        "width": 1158,
        "height": 1132,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T04:54:04Z",
        "tags": [],
        "bytes": 1248128,
        "type": "upload",
        "etag": "7cd8fe9a689d4c016326d18ddba90a33",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554440044/avalanche2019/hgnx1talcnd9e7g5ly5x.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554440044/avalanche2019/hgnx1talcnd9e7g5ly5x.png"
      },
      {
        "public_id": "avalanche2019/y0jiwtjmurafb5mihru2",
        "version": 1554440050,
        "signature": "664283eb3a68b34be629ff14a31010870f83da31",
        "width": 1182,
        "height": 1172,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T04:54:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 1471394,
        "type": "upload",
        "etag": "133de8aa0478a03dece35651f6e2fccd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554440050/avalanche2019/y0jiwtjmurafb5mihru2.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554440050/avalanche2019/y0jiwtjmurafb5mihru2.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "986668",
          "dar": "591:586"
        },
        "frame_rate": 20,
        "bit_rate": 989172,
        "duration": 11.9,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T17:13:24.896Z" }
      }
    ],
    "title": "",
    "description": "Vinyl Galaxy"
  },
  {
    "_id": "nhqLMjbnTLmjrkz9F",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T20:43:14.41Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yvwoa2ulaji0vdigov1c",
        "version": 1549917951,
        "signature": "e7814e11aa990b2ee8156f63823049e2491bb527",
        "width": 1242,
        "height": 950,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-11T20:45:51Z",
        "tags": [],
        "bytes": 678527,
        "type": "upload",
        "etag": "628508d96c71eabb1a0fc4c151e2e479",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549917951/avalanche2019/yvwoa2ulaji0vdigov1c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549917951/avalanche2019/yvwoa2ulaji0vdigov1c.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T22:58:10.511Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-11T22:58:11.163Z" }
      }
    ],
    "title": "",
    "description": "More fried chicken?\n\n(figured out the 'bounce')",
    "inspiration_name": "Qianqian Ye-  donuts",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5js\n\nvar balls = [];       \nvar gravity = 0.04;\nvar counter;\nvar button;\nvar slider;\nvar sliderVal;\nvar images = [];\n\nfunction preload(){\nimages.push(loadImage(\"chickenleg.png\"));\n//images.push(loadImage(\"realleg.png\"));\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight-150);\n  counter = createP(\"\");\n  \n  button = createButton(\"I want more fried chicken\");\n  button.mousePressed(newBallRand);\n  button.position(20,20);\n\n  slider = createSlider(100,400,200);\n  sliderVal = createDiv(\"\");\n\n  // Initialize ball index 0\n  balls.push(new Ball(10,0,150,0));\n\n}\n\nfunction draw() {\n  // background(0);\n  background(119,136,153);\n\n  for (var i = 0; i < balls.length; i ++ ) { \n    balls[i].gravity();\n    balls[i].move();\n    balls[i].display();\n  }\n\n  sliderVal.html(\"Choose how many legs: \" + slider.value());\n}\n\n// function newBall(inX,inY) {\n//   var type = int(random(images.length));\n//   var b = new Ball(inX,inY,slider.value(),type); \n//   balls.push(b);\n// }\n\nfunction newBallRand() {\n  var type = int(random(images.length));\n  var b = new Ball(random(width),random(height),slider.value(),type); \n  balls.push(b);\n}\n\nfunction Ball(tempX, tempY, tempW, tempType) {\n  this.x = tempX;\n  this.y = tempY;\n  this.w = tempW;\n  this.speed = 0;\n  this.type = tempType;\n\n  this.gravity = function() {\n    this.speed = this.speed + gravity;    \n  }\n\n  this.move = function() {\n    this.y = this.y + this.speed;\n    if (this.y > height) {\n      this.speed = this.speed * -0.25;\n      this.y = height;\n    }    \n  }\n\n  this.display = function() {\n    image(images[this.type],this.x,this.y,this.w,this.w); \n  }\n}"
  },
  {
    "_id": "njLm94jyhJGe36GK5",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T22:53:18.897Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g1rjcgwkxxm10fnnbvuk",
        "version": 1550184858,
        "signature": "dc6d1b6059c80658fdd0c59fd87ff435e7786a67",
        "width": 1568,
        "height": 1480,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T22:54:18Z",
        "tags": [],
        "bytes": 81614,
        "type": "upload",
        "etag": "7802a8c74e4e67fb33cc24cea6b26d92",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550184858/avalanche2019/g1rjcgwkxxm10fnnbvuk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550184858/avalanche2019/g1rjcgwkxxm10fnnbvuk.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Folding planes. I tried to get them to fold into a cube (or something resembling a cube) but I couldn't figure out how to do it.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nvar rotationX_1, rotationY, rotationY_1;\n\nvar rotX;\nvar rotY;\nvar rotY_1;\nvar rotX_1;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n\n  createP('Rotate Top Box');\n  rotX = createSlider(0, 30, 0);\n  \n  createP('Rotate Left Box');\n  rotY = createSlider(0, 30, 0);\n  \n  createP('Rotate Right Box');\n  rotY_1= createSlider(0,30,0);\n  \n  createP('Rotate Bottom Box');\n  rotX_1 = createSlider(0,30,0);\n}\n\nfunction draw() {\n  background(0);\n\n  var rot_x = rotX.value();\n  var rot_y = rotY.value();\n  var rot_y1 = rotY_1.value();\n  var rot_x1 = rotX_1.value();\n\n\n  push();\n  fill(147, 255, 58);\n  rotateX(rot_x);\n  translate(0, 50);\n  plane(100);\n  pop();\n  // resetMatrix();\n\n  push();\n  fill(166, 58, 255);\n  translate(0, 150);\n  rotateY(rot_y);\n  translate(-100, 0);\n  plane(100);\n  pop();\n  // resetMatrix();\n\n  push();\n  fill(255, 58, 147);\n  translate(0, 50);\n  rotateY(rot_y1);\n  // rotate(rotationX);\n  translate(100, 100);\n  plane(100);\n  pop();\n  // resetMatrix();\n\n  push();\n  fill(58, 255, 166);\n  translate(50, 100);\n  rotateX(rot_x1);\n  translate(-50, 150);\n  plane(100);\n  pop();\n\n}"
  },
  {
    "_id": "nm55K428PEboX3sL3",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T23:23:20.912Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gbwbg5j7usj2qpa372p5",
        "version": 1556753017,
        "signature": "76708bdf2e13eeca1943dfc6cf989be2743323a5",
        "width": 1480,
        "height": 958,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-01T23:23:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 18477067,
        "type": "upload",
        "etag": "55350deb1ae19f3ca454fa8d9a77aeda",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556753017/avalanche2019/gbwbg5j7usj2qpa372p5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556753017/avalanche2019/gbwbg5j7usj2qpa372p5.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "8654489",
          "dar": "740:479"
        },
        "frame_rate": 60,
        "bit_rate": 8729323,
        "duration": 16.933333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/nzgqng5v5r4n3kqdq5dh",
        "version": 1556753667,
        "signature": "33831a8bcd724d240487e1840f85d887ca4c4c95",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T23:34:27Z",
        "tags": [],
        "bytes": 552934,
        "type": "upload",
        "etag": "b770f2bdeec285e7b3452dc99882af46",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556753667/avalanche2019/nzgqng5v5r4n3kqdq5dh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556753667/avalanche2019/nzgqng5v5r4n3kqdq5dh.jpg"
      },
      {
        "public_id": "avalanche2019/zb1zimgwrmfcnjuylqnb",
        "version": 1556753682,
        "signature": "af92dd8f55b82a8fbfead1614c51d4a4c9f48a41",
        "width": 1177,
        "height": 868,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-01T23:34:42Z",
        "tags": [],
        "bytes": 583138,
        "type": "upload",
        "etag": "cfccb3bebc7b0cb5258deadb46206f57",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556753682/avalanche2019/zb1zimgwrmfcnjuylqnb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556753682/avalanche2019/zb1zimgwrmfcnjuylqnb.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T16:38:46.157Z" }
      }
    ],
    "title": "",
    "description": "Ghost architecture. A series of perspectives of a structure modeled in OpenSCAD and comprised of several hundred very thin, tall, three-sided columns."
  },
  {
    "_id": "nmJcCdbFMdSr6JnAv",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T03:38:22.22Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hsuliio1qmzcmt0asowu",
        "version": 1552448397,
        "signature": "5b1bd5b2cd1cfab8a26b7d8616565fba1e6ad0c8",
        "width": 2144,
        "height": 1176,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T03:39:57Z",
        "tags": [],
        "bytes": 1296589,
        "type": "upload",
        "etag": "84a6daf4ed3444da441b286a9ff2ddf5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552448397/avalanche2019/hsuliio1qmzcmt0asowu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552448397/avalanche2019/hsuliio1qmzcmt0asowu.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\nvar myTurtle;\n\nfunction setup() {\n    createCanvas(800, 500);\n    noFill();\n    stroke(255);\n    strokeWeight(.2);\n    background(50);\n    noLoop();\n    myTurtle = new Turtle();\n}\n\nfunction draw() {\n    colorMode(RGB, 255, 255, 255, 1);\n    stroke(255, 255, 255, .4);\n    drawFirstCircle();\n    drawCircleTwo();\n    drawCircleThree();\n    noLoop();\n\n\n}\n\nfunction drawFirstCircle() {\n    myTurtle.penUp();\n    myTurtle.moveTo(500, 450);\n    let divisions = 12;\n    let section = 360 / divisions;\n    let diagnalLength = 500;\n    let sectionLength = 200;\n    let lengthDec = 12;\n    let currentLength, outterLength, sectionRad;\n    myTurtle.penDown();\n    // myTurtle.moveTo(100, 100);\n    sectionRad = degrees_to_radians(section);\n    // outerLength = (tan(sectionRad / 2) * sectionLength) * 2;\n    outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n    outerAngle = (180 - section) / 2;\n    currentLength = diagnalLength;\n    //draw spiral inside \n\n    //section length minus decrement \n    sectionLength = currentLength - sectionLength;\n    spiralIn = lengthDec / divisions;\n    outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n\n    for (let i = 0; i < 520; i++) {\n        //sectionRad always 15 always the same\n        outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n        outerAngle2 = (Math.pow(sin(((sin(30) * sectionLength) / outerLength)), -1));\n        console.log(sectionLength);\n        console.log(outerLength);\n        console.log(outerAngle2);\n        innerAngle = 180 - section - outerAngle2;\n        console.log(innerAngle);\n        myTurtle.turnRight(90 - innerAngle);\n        myTurtle.moveForward(outerLength);\n        sectionLength -= spiralIn;\n        if (i % divisions == 0) {\n            spiralIn *= random(.9, .98);\n        }\n    }\n    myTurtle.penUp();\n}\n\nfunction drawCircleTwo() {\n    myTurtle.moveTo(300, 200);\n    let divisions = 12;\n    let section = 360 / divisions;\n    let diagnalLength = 700;\n    let sectionLength = 200;\n    let lengthDec = 32;\n    let currentLength, outterLength, sectionRad;\n    myTurtle.penDown();\n    sectionRad = degrees_to_radians(section);\n    // outerLength = (tan(sectionRad / 2) * sectionLength) * 2;\n    outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n    outerAngle = (180 - section) / 2;\n    // myTurtle.moveForward(sectionLength);\n    myTurtle.turnRight(180 - outerAngle);\n    currentLength = diagnalLength - lengthDec;\n    //draw spiral inside \n\n    //section length minus decrement \n    sectionLength = currentLength - sectionLength;\n    spiralIn = lengthDec / divisions;\n    outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n    myTurtle.turnRight(180 - outerAngle);\n    myTurtle.moveForward(outerLength);\n    for (let i = 0; i < 220; i++) {\n        //sectionRad always 15 always the same\n        outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n        outerAngle2 = (Math.pow(sin(((sin(30) * sectionLength) / outerLength)), -1));\n        console.log(sectionLength);\n        console.log(outerLength);\n        console.log(outerAngle2);\n        innerAngle = (180 - outerAngle2) / 2;\n        console.log(\"inner angle\", innerAngle);\n        myTurtle.turnRight(180 - innerAngle);\n        myTurtle.moveForward(outerLength);\n        sectionLength -= spiralIn;\n        if (i % divisions == 0) {\n            spiralIn *= random(.9, .98);\n        }\n    }\n    myTurtle.penUp();\n}\n\nfunction drawCircleThree() {\n    let divisions = 20;\n    let section = 360 / divisions;\n    let diagnalLength = 600;\n    let sectionLength = 800;\n    let lengthDec = 25;\n    let currentLength, outterLength, sectionRad;\n    myTurtle.moveTo(600, 200);\n    myTurtle.penDown();\n    sectionRad = degrees_to_radians(section);\n    // outerLength = (tan(sectionRad / 2) * sectionLength) * 2;\n    outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n    outerAngle = (180 - section) / 2;\n    //draw Supports \n    currentLength = diagnalLength - lengthDec;\n    //draw spiral inside \n\n    sectionLength = currentLength - sectionLength;\n    spiralIn = lengthDec / divisions;\n    outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n    myTurtle.turnRight(180 - outerAngle);\n    myTurtle.moveForward(outerLength);\n    for (let i = 0; i < 620; i++) {\n        //sectionRad always 15 always the same\n        outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n        solve = (sin(sectionRad) * sectionLength) / outerLength;\n        outerAngle2 = Math.pow(sin(solve), -1);\n        outerAngle2 = radians_to_degrees(outerAngle2);\n        console.log(sectionLength);\n        console.log(outerLength);\n        console.log(\"outer angle 2\", outerAngle2);\n        innerAngle = (180 - section - outerAngle2);\n        console.log(\"inner angle\", innerAngle);\n        myTurtle.turnRight(180 - innerAngle);\n        myTurtle.moveForward(outerLength);\n        sectionLength -= spiralIn;\n        if (i % divisions == 0) {\n            spiralIn *= random(.9, .98);\n\n        }\n    }\n    noLoop();\n}\n\n\n\n\nfunction radians_to_degrees(radians) {\n    var degrees = radians * (180 / Math.PI);\n    return degrees;\n}\n\nfunction degrees_to_radians(degrees) {\n    const radians = degrees * (Math.PI / 180);\n    return radians;\n}",
    "description": "Spiral Variations"
  },
  {
    "_id": "nofrZJe7HzXkzTYXs",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T05:42:31.017Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "npzdeuK8f8jmvHi5i",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T18:21:41.031Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lrgjtgffottjsfidglyt",
        "version": 1554229759,
        "signature": "fdf669257da4017b7f8c5fe55b48b89edd06ceb0",
        "width": 960,
        "height": 540,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-02T18:29:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 1429808,
        "type": "upload",
        "etag": "bb6cc80f76e2b43c6bc59231b7718269",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554229759/avalanche2019/lrgjtgffottjsfidglyt.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554229759/avalanche2019/lrgjtgffottjsfidglyt.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4551259",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 4570814,
        "duration": 2.5025,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/s4appgcd05oyskl4ussr",
        "version": 1554229945,
        "signature": "e0a10b0aed095801b3341b4d15f6ddd7df6790db",
        "width": 1362,
        "height": 762,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-02T18:32:25Z",
        "tags": [],
        "bytes": 1492690,
        "type": "upload",
        "etag": "a3b6d1107b2073c7906e548dbd2b84e0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554229945/avalanche2019/s4appgcd05oyskl4ussr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554229945/avalanche2019/s4appgcd05oyskl4ussr.png"
      },
      {
        "public_id": "avalanche2019/cw9x3tm6ciqtc4fodgv3",
        "version": 1554229952,
        "signature": "1eef015f061326f0e3aa2a41a62981ab323e9479",
        "width": 1364,
        "height": 764,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-02T18:32:32Z",
        "tags": [],
        "bytes": 1444407,
        "type": "upload",
        "etag": "939e2328433d289bef4f67f8169ea3a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554229952/avalanche2019/cw9x3tm6ciqtc4fodgv3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554229952/avalanche2019/cw9x3tm6ciqtc4fodgv3.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Trying to use photoshop timeline to make moving holographic"
  },
  {
    "_id": "nqJgWQzEW2xJCugX3",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T16:26:44.401Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j8t2vzdnruj71ulahous",
        "version": 1550852814,
        "signature": "ff1c381974e745632c262ecf2f91781df67d11d8",
        "width": 796,
        "height": 800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T16:26:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 4886394,
        "type": "upload",
        "etag": "396636734e8a61e3499bd874fe373463",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550852814/avalanche2019/j8t2vzdnruj71ulahous.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550852814/avalanche2019/j8t2vzdnruj71ulahous.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "5239366",
          "dar": "199:200"
        },
        "frame_rate": 60,
        "bit_rate": 5247134,
        "duration": 7.45,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "var cols, rows;\nvar scl = 20;\nvar w = 600;\nvar h = 600;\n  \nfunction setup () {\n createCanvas(400, 400);\n\n  cols = w /scl;\n  rows = h /scl;\n\n  \n}\nfunction draw () {\n  background (0);\n  stroke(255);\n   noFill();\n   \n      translate(width/2, height/2);\n      rotate(PI/3);\n      \n      \n      translate(-w/2, -h/2);\n      \n   for (var y = 0; y < rows; y++){\n     beginShape(TRIANGLE_STRIP);\n  for (var x = 0; x < cols; x++) {\n    vertex(x*scl, y*scl);\n       vertex(x*scl, (y+1)*scl);\n      //rect(x*scl, y*scl, scl, scl);\n      \n    }\n    endShape();\n    xoff = 0.01;\n\t\tfill(255 * noise(x, y, frameCount /10));\n    let n = noise(xoff) * width;  \n   }\n  \n}"
  },
  {
    "_id": "nwQDgtWbcgwecn4Gy",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-28T19:01:04.144Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lg9dbgcrxyhezmtnjr9h",
        "version": 1556479213,
        "signature": "9e253dac6e2d439f5ed79c878fcf5128c44b8306",
        "width": 1668,
        "height": 1080,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-28T19:20:13Z",
        "tags": [],
        "bytes": 630898,
        "type": "upload",
        "etag": "974a00f1d21b3b765603a63206e38afa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556479213/avalanche2019/lg9dbgcrxyhezmtnjr9h.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556479213/avalanche2019/lg9dbgcrxyhezmtnjr9h.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-29T05:58:30.844Z" }
      },
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-04-30T01:55:49.781Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-30T03:04:31.911Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-04-30T19:10:08.934Z" }
      }
    ],
    "title": "",
    "description": "My castle in a setting. Mountains are a found image of China's Guilin region. Added grit and additional processing in Photoshop."
  },
  {
    "_id": "nyc7fnmYNEStoFkqq",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T03:43:24.569Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/titydiqpuo8lh6bvvsbw",
        "version": 1552448794,
        "signature": "9b7152046faf331bf6555bdd100483e2b3ac6992",
        "width": 1502,
        "height": 1496,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-13T03:46:34Z",
        "tags": [],
        "bytes": 727397,
        "type": "upload",
        "etag": "bf3fcd2ebf5ebecdcf1eeae7f79d747a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552448794/avalanche2019/titydiqpuo8lh6bvvsbw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552448794/avalanche2019/titydiqpuo8lh6bvvsbw.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-13T03:57:45.449Z" }
      }
    ],
    "title": "",
    "description": "Spiders \n(Turtles + Trig )\n\nFollowed how spiders weave there webs, starting with the supports and then going from outside to inside in one continuous line (not ever picking up the pen)",
    "code": "//spiderweb \nvar myTurtle;\nlet divisions = 12;\nlet section = 360 / divisions;\nlet diagnalLength = 500;\nlet sectionLength = 250;\nlet lengthDec = 15;\nlet currentLength, outterLength, sectionRad;\n\nfunction setup() {\n    createCanvas(500, 500);\n    noFill();\n    stroke(255);\n    strokeWeight(.2);\n    background(50);\n    noLoop();\n    myTurtle = new Turtle();\n}\n\nfunction draw() {\n    stroke(155);\n    myTurtle.penDown();\n    sectionRad = degrees_to_radians(section);\n    // outerLength = (tan(sectionRad / 2) * sectionLength) * 2;\n    outerLength = (sin(sectionRad / 2) * sectionLength) * 2;\n    outerAngle = (180 - section) / 2;\n    console.log(outerLength);\n    console.log(\"outerAngle\", outerAngle);\n    myTurtle.moveForward(sectionLength);\n    myTurtle.turnRight(180 - outerAngle);\n    //draw Supports \n    for (let i = 0; i < divisions; i++) {\n\n        myTurtle.moveForward(outerLength);\n        myTurtle.turnRight(180 - outerAngle);\n        if (i != divisions - 1) {\n            myTurtle.moveForward(diagnalLength);\n            myTurtle.turnRight(180 - outerAngle);\n        } else {\n            currentLength = diagnalLength - lengthDec;\n            // console.log(\"currentLength\", currentLength);\n            myTurtle.moveForward(currentLength);\n        }\n    }\n    //draw spiral inside\n    //section length minus decrement \n    side1Length = sectionLength - lengthDec;\n    spiralIn = lengthDec / divisions;\n    for (let i = 0; i < 650; i++) {\n        stroke(255);\n        myTurtle.penDown();\n        //side 1 length  is current length going out from the center axis \n        //side 2 length is the side you will be drawing towards coming away from the middle\n        side2Length = side1Length - spiralIn;\n        //outter length is the new length you will draw in the spiral depending on how much you decrease teh next side \n        //inner angle in radians \n        innerRad = degrees_to_radians(section);\n        innerCos = cos(innerRad);\n        innerSin = sin(innerRad);\n        let outerLength = Math.sqrt(Math.pow(side1Length, 2) + Math.pow(side2Length, 2) - (2 * side1Length * side2Length * innerCos));\n        //calculate the interior angles of the triangels \n        innerAngle1PART1 = degrees_to_radians((side2Length * innerSin) / outerLength);\n        console.log(\"inner angle pt 1\", innerAngle1PART1);\n        innerAngle1 = Math.pow(sin(innerAngle1PART1), -1);\n\n        innerAngle2 = 180 - 30 - innerAngle1;\n        console.log(\"inner angle 2\", innerAngle2);\n        outterAngle2 = (180 - innerAngle2);\n        outterAngle1 = (180 - innerAngle1);\n        outterAngle2 = (180 - innerAngle1 - innerAngle2);\n        // console.log(rotate);\n        // myTurtle.turnRight(outterAngle2);\n        console.log(\"outerLength\", outerLength);\n        if (i == 0) {\n            myTurtle.turnRight(180 - innerAngle1 - 15);\n        } else {\n            myTurtle.turnRight(outterAngle2);\n        }\n        drawLine();\n\n        myTurtle.moveForward(outerLength);\n        if (i % divisions == 0) {\n            spiralIn *= random(.96, .98);\n        }\n        spirlIn = random(0.1, 1);\n        if (side1Length - spiralIn > 0) {\n            side1Length -= (spiralIn - random(.05, .1));\n            console.log(\"spiralIN\", spiralIn)\n        }\n        // innerAngle1 = radians_to_degrees(innerAngle1);\n        // console.log(\"inner angle 1\", innerAngle1);\n    }\n}\n\nfunction drawLine() {\n\n    waterPos = random(outerLength);\n    // myTurtle.moveForward(waterPos);\n    fill(255);\n    //figre our how to draw an ellipse where the turtle is \n    // myTurtle.moveForward(outerLength);\n}\n\nfunction radians_to_degrees(radians) {\n    var degrees = radians * (180 / Math.PI);\n    return degrees;\n}\n\nfunction degrees_to_radians(degrees) {\n    const radians = degrees * (Math.PI / 180);\n    return radians;\n}"
  },
  {
    "_id": "nz6sfdme4nkm3FE4d",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-03T15:01:27.491Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eliienci90w20cfwkzjj",
        "version": 1549206319,
        "signature": "22e548fe0eb4e68e305f62d4adcaac0a0df132e1",
        "width": 928,
        "height": 878,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-03T15:05:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 20492239,
        "type": "upload",
        "etag": "4e46c63c60a60713d0e26af56eddca67",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549206319/avalanche2019/eliienci90w20cfwkzjj.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549206319/avalanche2019/eliienci90w20cfwkzjj.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1411",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "13380968",
          "dar": "464:439"
        },
        "is_audio": false,
        "frame_rate": 29.416666666666668,
        "bit_rate": 13295856,
        "duration": 12.306009,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/qv3koj4zzleer8pi3wid",
        "version": 1549206334,
        "signature": "1f1e730c5fab96e35a82de558313ed72d915a8bb",
        "width": 928,
        "height": 878,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-03T15:05:34Z",
        "tags": [],
        "bytes": 1219706,
        "type": "upload",
        "etag": "149a602abe2977e55c34b7bf78ada968",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549206334/avalanche2019/qv3koj4zzleer8pi3wid.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549206334/avalanche2019/qv3koj4zzleer8pi3wid.jpg"
      },
      {
        "public_id": "avalanche2019/fto022rez7f37zxs8row",
        "version": 1549206339,
        "signature": "f760d683ad3e88156db07b364464c98de7bf6ce4",
        "width": 926,
        "height": 878,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-03T15:05:39Z",
        "tags": [],
        "bytes": 469535,
        "type": "upload",
        "etag": "92d6eaeaaf9c873ef239e525bb6e806c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549206339/avalanche2019/fto022rez7f37zxs8row.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549206339/avalanche2019/fto022rez7f37zxs8row.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Generated random pixels to replicate the effect of old television screens.\n\nI was able to work with the pixels, but, when I starting taking the data from my webcam, my computer froze and was unable to process the video (or the code did not work). \nPlease check the file pixelVideo.js here: https://github.com/akshansh2593/CompForm/tree/master/randomPixels",
    "inspiration_name": "randomPixels",
    "inspiration_url": "https://youtu.be/nMUMZ5YRxHI",
    "code": "// Learning from Pixel array and brightness mirror videos by The Coding Train, YouTube\n// loadPixels = using pixels array.\n// A linear array of coordinates of a canvas\n// Each pixel info is separated by 4 values (r,g,b,a)\n\nvar canvasWidth = 800; // for mapping\nvar canvasHeight = 800; // for mapping\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    pixelDensity(1);\n    map(canvasWidth, 0, canvasWidth, 0, 255);\n    map(canvasHeight, 0, canvasHeight, 0, 255);\n}\n\nfunction draw() {\n    background(0);\n\n    loadPixels();\n\n    for (var y = 0; y < height; y++) {\n        for (var x = 0; x < width; x++) {\n            var index = (x + y * width) * 4;\n            // Create a function to navigate through the length of the board\n\n            pixels[index + 0] = 0; //red\n            pixels[index + 1] = 0; //green\n            pixels[index + 2] = 0; //blue\n            pixels[index + 3] = random(255); //alpha\n\n        }\n    }\n\n    updatePixels();\n}"
  },
  {
    "_id": "o3oTbkdTHYhbRH9Lq",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T23:40:05.345Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zokgbe2hznencrczxrzx",
        "version": 1550706198,
        "signature": "29d915e7e5c66a88eb12970c706e9849341d917f",
        "width": 796,
        "height": 784,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-20T23:43:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 2949147,
        "type": "upload",
        "etag": "e27ee19e47d42ace291f84c625f14aa8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550706198/avalanche2019/zokgbe2hznencrczxrzx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550706198/avalanche2019/zokgbe2hznencrczxrzx.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2121414",
          "dar": "199:196"
        },
        "frame_rate": 60,
        "bit_rate": 2132074,
        "duration": 11.065833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "first version (code by: Kevin Workman, https://stackoverflow.com/ QandA)",
    "code": "function setup() {\n  createCanvas(400, 400);\n  background(0);\n  noFill();\n  n = 0;\n}\n\nfunction draw() {\n  var r = 255 * noise(n+10);\n  var g = 255 * noise(n+15);\n  var b = 255 * noise(n+20);\n  stroke(r,g,b, 18);\n  strokeWeight(2);\n  fill(r,g,b,5);\n  var x1 = width * noise(n);\n  var x2 = width * noise(n+7);\n  var x3 = width * noise(n+6);\n  var x4 = width * noise(n+5);\n  var y1 = height * noise(n+4);\n  var y2 = height * noise(n+3);\n  var y3 = height * noise(n+2);\n  var y4 = height * noise(n+7);\n\n  ellipse(x1,y1,x2,y2,x3,y3,x4,y4);\n  n += 0.01;\n}"
  },
  {
    "_id": "o4u7uSWq33XcXLjFA",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T00:29:46.055Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z8x6socawcbmngzh8eo3",
        "version": 1549499397,
        "signature": "31aad4a0dc08f85ef9d6bd2060f6ccf931119f61",
        "width": 794,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T00:29:57Z",
        "tags": [],
        "bytes": 135748,
        "type": "upload",
        "etag": "17840cf1feb729446199bed31fd9e897",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549499397/avalanche2019/z8x6socawcbmngzh8eo3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549499397/avalanche2019/z8x6socawcbmngzh8eo3.png"
      },
      {
        "public_id": "avalanche2019/ouda0vqqwtfqbpltvgl3",
        "version": 1549499404,
        "signature": "b80892340c49d5e8ac384c3ac4f6716f85ca1cef",
        "width": 716,
        "height": 555,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T00:30:04Z",
        "tags": [],
        "bytes": 170426,
        "type": "upload",
        "etag": "06a819aa53af05412a8a47cd7cd995e0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549499404/avalanche2019/ouda0vqqwtfqbpltvgl3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549499404/avalanche2019/ouda0vqqwtfqbpltvgl3.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T17:25:40.26Z" }
      }
    ],
    "title": "",
    "description": "Using curve vertex function (thanks to Archit's help), inspired by Cy Twombly. (Second pic is the original painting.)",
    "code": "var x1,x2; \nvar y1,y2;\nfunction setup() {\n  createCanvas(400, 400);\n\t  background(220);\n\tx1=84;\n\ty1=91;\n\t\n\tx2=32;\n\ty2=100;\n\t\n\t\tnoFill();\n\t\n\tfor(var x = 0; x< 40; x++ ){\n\t\tstroke(random(170,255));\nCurve(x1,y1);\nx1=x1+52;\ny1= y1+8;\t\t\n\t\t\n\t\tif(x1> width){\n\t\t\tx1 =random(20);\n\t\t\ty1 =y1+random(10);\n\t\t\t }\n\t\n}\n\t\n}\n\n\nfunction Curve(a,b){\n\t\t\tbeginShape();\n    curveVertex(a,  b);\n    curveVertex(a,  b);\n    curveVertex(a+random(16),  b-70);\n    curveVertex(a+random(60),  b-60);\n    curveVertex(a+52, b+9);\n    curveVertex(a-52, b);\n\t  endShape();\n}"
  },
  {
    "_id": "o6fbSoaeznDkhyuzE",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T15:25:54.098Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xwzynxll1wn8t5bqpi2j",
        "version": 1556897227,
        "signature": "2bf43f2a6cfdf5f0e557522f09ed72f919adeedb",
        "width": 826,
        "height": 342,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T15:27:07Z",
        "tags": [],
        "bytes": 75039,
        "type": "upload",
        "etag": "eabb62edafa6835138a78cd089f40945",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556897227/avalanche2019/xwzynxll1wn8t5bqpi2j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556897227/avalanche2019/xwzynxll1wn8t5bqpi2j.png"
      },
      {
        "public_id": "avalanche2019/uj36jd4pn8toif0ealdk",
        "version": 1556897235,
        "signature": "63327994155b14ff67ba79477ae4c9cc2b124fe1",
        "width": 800,
        "height": 694,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T15:27:15Z",
        "tags": [],
        "bytes": 165526,
        "type": "upload",
        "etag": "76afda16884e3bbc6e43efd2fe79fad9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556897235/avalanche2019/uj36jd4pn8toif0ealdk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556897235/avalanche2019/uj36jd4pn8toif0ealdk.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Easter egg carton  - inspired by sin/cos color - but couldn't get the cutout for eggs -- still trying...",
    "inspiration_name": "Dozen eggs",
    "code": "for(i=[0:86]) {\n    for(j=[0:86]) {\n      color( [0.7+cos(5*i)/4, 0.7+cos(10*j)/4, 0.5+cos(10*(i+j))/4] )\n      translate( [i, j, 0] )\n      cube( size = [8, 8, 1+20*sin(20*i)*cos(20*j)] );\n       \n    }\n  }"
  },
  {
    "_id": "o7WfuqNEx6bvyuhKb",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-24T19:08:44.838Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Playing around with Tone Synth.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth({\n  oscillator: {\n    type: 'fatsine', // sine, square, triangle, sawtooth, fat*\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.1,\n    sustain: 0.8,\n    release: 1,\n  },\n});\n\n// Connect to the speakers.\nsynth.toMaster();\n\nwindow.onmousedown = (e) => {\n  // Play a sound when the mouse is pressed\n    const freq = map(e.clientX, 0, window.innerWidth, 110, 1760);\n  console.log(`click -> ${Math.floor(freq)}hz`);\n  synth.triggerAttackRelease(freq, '8n');\n \n}\n\nconst gotNotes = ['c4', 'c5', 'g4', 'd4', 'e4'];\n\n\nfunction map(value, min1, max1, min2, max2) {\n  const n = (value - min1) / (max1 - min1);\n  return n * (max2 - min2) + min2;\n}\n\nconsole.log('click for music!');"
  },
  {
    "_id": "oDEPiHSDyrrtuHfrY",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "created_at": { "$date": "2019-02-26T23:52:29.277Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ucdffjoyry7dhziqrd9l",
        "version": 1551225175,
        "signature": "b360fc691e7b348c1c0100962c3a3e043fc3ccf6",
        "width": 666,
        "height": 652,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T23:52:55Z",
        "tags": [],
        "bytes": 56596,
        "type": "upload",
        "etag": "e70b8584d700e92ff54a554e115428be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551225175/avalanche2019/ucdffjoyry7dhziqrd9l.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551225175/avalanche2019/ucdffjoyry7dhziqrd9l.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 1",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n\n}\n\n\nfunction draw() {\n  background(20);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let m = map(mouseX, 0, width, 0.01, 100);\n  var noiseFrequency = .02;\n\n  for (var i = 0; i < 70; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    var x = random(width / 2 - 150, width / 2 + 50);\n    var y = random(height / 2 - 100, height / 2 + 100);\n\n   let r = random();\n    if (r > 0.4) {\n      dia = random(6, 8);\n    } else\n    if (r < 0.4) {\n      dia = random(7, 12);\n    }\n    colorMode(HSB);\n\n    let col = map(dia, 5, 12, 50, 300);\n    fill(col, 255, 255)\n\n    ellipse(x, y, dia, dia);\n  }\n\n\n  noLoop();\n\n\n}\n\nfunction mousePressed() {\n  draw();\n}"
  },
  {
    "_id": "oFi9KmdZ8jLvqm7wS",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Music",
    "created_at": { "$date": "2019-05-03T01:43:18.032Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/aodqpir1pj2utcvtnlji",
        "version": 1556847815,
        "signature": "adf1cae849c27fb611082752c57c020c020d5dc3",
        "width": 0,
        "height": 0,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-03T01:43:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 191308,
        "type": "upload",
        "etag": "c965396ac428f6230c96bba8b92f1042",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556847815/avalanche2019/aodqpir1pj2utcvtnlji.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556847815/avalanche2019/aodqpir1pj2utcvtnlji.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "97699",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {},
        "is_audio": true,
        "bit_rate": 100039,
        "duration": 15.298604
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "diamonds"
  },
  {
    "_id": "oJCaanMTvQJ2TWPKu",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T04:19:56.343Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kxlussqi9qzch4kymlyl",
        "version": 1554783839,
        "signature": "41610e29db622edbea1183ae5f946550ae029cb1",
        "width": 1442,
        "height": 840,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-09T04:23:59Z",
        "tags": [],
        "bytes": 111710,
        "type": "upload",
        "etag": "9f15eebf12394db80779a828cdda8b0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554783839/avalanche2019/kxlussqi9qzch4kymlyl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554783839/avalanche2019/kxlussqi9qzch4kymlyl.jpg"
      },
      {
        "public_id": "avalanche2019/inrsbcxwlem6gnhpvrzs",
        "version": 1554783858,
        "signature": "d6bb6588bcdb54486b995166fd9bc2dc17a1bfc8",
        "width": 1442,
        "height": 932,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-09T04:24:18Z",
        "tags": [],
        "bytes": 132829,
        "type": "upload",
        "etag": "669db866c9f84df707fdf0395b67dee8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554783858/avalanche2019/inrsbcxwlem6gnhpvrzs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554783858/avalanche2019/inrsbcxwlem6gnhpvrzs.jpg"
      },
      {
        "public_id": "avalanche2019/e2pn9e3m22mr3q9ot6mw",
        "version": 1554783867,
        "signature": "4cda66107ae67232cd16970cc7159e7f21e4ca05",
        "width": 1444,
        "height": 604,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-09T04:24:27Z",
        "tags": [],
        "bytes": 52119,
        "type": "upload",
        "etag": "a04ab20ae2df4a302b051e9c6cf2a66a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554783867/avalanche2019/e2pn9e3m22mr3q9ot6mw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554783867/avalanche2019/e2pn9e3m22mr3q9ot6mw.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Starting with the title example from class, I’m mixing two quote API’s:  \n[Quotes on design](https://quotesondesign.com/api-v4-0/)  \nand [Fav Quotes](https://favqs.com/api)  \nSimple approach, but the results are funny sometimes.  \n_… bit to late to make the everyday challenge, damn_",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// https://quotesondesign.com/api-v4-0/\n// https://favqs.com/api\ninjectInterface();\nfetch(`http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1&callback=`)\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      // console.log(data[0].content.replace(\"<p>\", \"\").replace(\"</p>\", \"\"));\n      title = data[0].content.replace(\"<p>\", \"\").replace(\"</p>\", \"\")\n      document.getElementById(\"title\").innerHTML = title;\n    })\n    .catch(err => {\n      console.log(\"Error happened during fetching!\", err);\n    });\n\nfetch(`https://favqs.com/api/qotd`)\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      // console.log(data.quote.author);\n      subtitle = data.quote.author\n      document.getElementById(\"subtitle\").textContent = generateSubtitle(subtitle);\n    })\n    .catch(err => {\n      console.log(\"Error happened during fetching!\", err);\n    });\n\nfunction generateTitle(title) {\n\treturn title;\n}\n\nfunction generateSubtitle(subtitle) {\n\treturn subtitle;\n}\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Loading …</div>\n\t\t<div id=\"subtitle\"></div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "oRQQvb4u6wKEmdd9K",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T19:32:02.319Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/d7myr2yhaqveuiiaxzhw",
        "version": 1549395261,
        "signature": "937c38dddde6d77a0ab7ed735221f879ffa50a7f",
        "width": 1088,
        "height": 1166,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-05T19:34:21Z",
        "tags": [],
        "bytes": 2039290,
        "type": "upload",
        "etag": "f6de4ec46c246d210aafbd4880446ee2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549395261/avalanche2019/d7myr2yhaqveuiiaxzhw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549395261/avalanche2019/d7myr2yhaqveuiiaxzhw.png"
      },
      {
        "public_id": "avalanche2019/pwwul5ac0gryfvt5ev5p",
        "version": 1549395427,
        "signature": "0ec571d16d21a630123ebe893c6a1253acae3113",
        "width": 1198,
        "height": 1108,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-05T19:37:07Z",
        "tags": [],
        "bytes": 2236113,
        "type": "upload",
        "etag": "8e1f98df8954b1438418a23eb80e9f02",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549395427/avalanche2019/pwwul5ac0gryfvt5ev5p.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549395427/avalanche2019/pwwul5ac0gryfvt5ev5p.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T15:03:56.112Z" }
      }
    ],
    "title": "",
    "description": "Straight Hair Texture \n--  tufts and strands with various controlled randomizations",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nfunction setup() {\n    createCanvas(600, 600);\n    background(0, 0, 0);\n    smooth();\n    // colorMode(HSB);\n    colorMode(RGB, 255, 255, 255, 1);\n\n    //individual tuffs \n    for (let tuff = (-30); tuff < 40; tuff++) {\n        let origin = (tuff + 30) * 10;\n        let tuffLength = map(abs(tuff), 0, 30, 200, 70);\n        for (let strand = 0; strand < 200; strand++) {\n\n            //random opacity \n            let red = Math.floor(100 * Math.random() + 155);\n            let green = Math.floor(20 * Math.random() + 50);\n            let opacity = Math.random() - .82;\n\n            //random stroke weight \n            let strandWidth = (3 * Math.random() + 1);\n            strokeWeight(strandWidth);\n            let horizontalLean = random(-70, 70);\n\n            let length = map(abs(horizontalLean), 0, 70, 400, 200) + tuffLength;\n\n            push();\n            let lightThickness = (2 * Math.random() + 1);\n            let lightBrightness = (Math.random() - .9);\n            strokeWeight(lightThickness);\n            stroke(0, 0, 0, lightBrightness);\n            line(origin, -100, origin + horizontalLean, length - 30)\n            pop();\n\n\n            stroke(red, green, 10, opacity);\n            line(origin, -100, origin + horizontalLean, length);\n\n        }\n\n    }\n\n}"
  },
  {
    "_id": "oS6qiM2uD2oBjEGdw",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T18:25:50.301Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tjayc1xvkmx0frfx9kv1",
        "version": 1550255912,
        "signature": "1d602b45019fbb79f8945d83f94107e7b6c74321",
        "width": 980,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T18:38:32Z",
        "tags": [],
        "bytes": 40491,
        "type": "upload",
        "etag": "c4263a82e10d3e492e486b90955c20f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550255912/avalanche2019/tjayc1xvkmx0frfx9kv1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550255912/avalanche2019/tjayc1xvkmx0frfx9kv1.png"
      },
      {
        "public_id": "avalanche2019/hgzhiygnrdpnzhy8yvfn",
        "version": 1550255914,
        "signature": "26eb0bdc74613e41f9a03fe8c0a1b2dad5d3c43a",
        "width": 986,
        "height": 999,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T18:38:34Z",
        "tags": [],
        "bytes": 41900,
        "type": "upload",
        "etag": "0adb3fbbc37749d335a76ec96267c00a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550255914/avalanche2019/hgzhiygnrdpnzhy8yvfn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550255914/avalanche2019/hgzhiygnrdpnzhy8yvfn.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Vday is over! – I wanted to make a goal–oriented sketch where users don't have control of the procedure. I made the angle the parameter that controls the form in a 3D space.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// from coding train https://youtu.be/6TPVoB4uQCU\n\nvar angle = 1;\n\nfunction setup() {\n  createCanvas(500, 500, WEBGL);\n}\n\nfunction draw() {\n  background(25);\n  noFill();\n  stroke(\"#e20b37\");\n  // fill(255);\n  strokeWeight(0.5);\n  smooth();\n  rotate(-80);\n  for ( let i =1; i < 120; i++){\n    ellipse(-0.5 * i , -0.4 * i, 1, 1);\n    rotateX(angle);\n    rotateY(-angle * 0.09);\n    rotateZ(angle *i* -0.059);\n  }\n  stroke(80);\n  strokeWeight(0.2);\n  box(130);\n\n  angle += 0.0004\n}"
  },
  {
    "_id": "oZnQQ7F55pn3G2zGP",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T04:57:07.692Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pcqmysi9vq989ifdsaxm",
        "version": 1549602029,
        "signature": "75b8e2a5073042a2e2907f44b2f35cd6a2fa3460",
        "width": 1254,
        "height": 1112,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T05:00:29Z",
        "tags": [],
        "bytes": 83114,
        "type": "upload",
        "etag": "9c1fdbf140a1c2a7a8866b0583054f2c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549602029/avalanche2019/pcqmysi9vq989ifdsaxm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549602029/avalanche2019/pcqmysi9vq989ifdsaxm.png"
      },
      {
        "public_id": "avalanche2019/rgc6qpthh4v6rlorp800",
        "version": 1549602162,
        "signature": "77cfaedd1e31fda517b4bc811f5ade0a9bec6a41",
        "width": 600,
        "height": 414,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-08T05:02:42Z",
        "tags": [],
        "bytes": 47094,
        "type": "upload",
        "etag": "25a2fffff0f6fc590308623c5c9f43f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549602162/avalanche2019/rgc6qpthh4v6rlorp800.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549602162/avalanche2019/rgc6qpthh4v6rlorp800.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Inspired by Milton Avery. Using the Brownian motion code.",
    "code": "function setup() {\n    createCanvas(windowWidth, windowHeight);\n    noLoop();\n\n    noStroke();\n    fill(255, 255, 255);\n}\n\nfunction draw() {\n    background(random(160,200));\n\n    fill(220, 220, 220);\n\n\n\n    // stroke(220, 220, 220);\n    // drawBrownianPath(width * 0.5, height * 0.5, 10, 1000);\n\n    stroke(random(150,250), random(150,250), random(200,250));\n    strokeWeight(random(50,150));\n    drawBrownianPath1D(0, height * 0.3, 3, 5, 1000);\n    stroke(random(150,250), random(150,250), random(200,250));\n    strokeWeight(random(50,150));\n    drawBrownianPath1D(0, height * 0.4, 3, 5, 1000);\n    stroke(random(150,250), random(150,250), random(200,250));\n    strokeWeight(random(50,150));\n    drawBrownianPath1D(0, height * 0.5, 3, 5, 1000);\n  stroke(random(150,250), random(150,250), random(200,250));\n    strokeWeight(random(50,150));\n    drawBrownianPath1D(0, height * 0.6, 3, 5, 1000);\n  stroke(random(150,250), random(150,250), random(200,250));\n    strokeWeight(random(50,150));\n    drawBrownianPath1D(0, height * 0.7, 3, 5, 1000);\n  stroke(random(150,250), random(150,250), random(200,250));\n    strokeWeight(random(50,150));\n    drawBrownianPath1D(0, height * 0.8, 3, 5, 1000);\n  stroke(random(150,250), random(150,250), random(200,250));\n    strokeWeight(random(50,150));\n    drawBrownianPath1D(0, height * 0.9, 3, 5, 1000);\n}\n\n\n\n\nfunction drawBrownianPath1D(x, y, stepX, stepY, steps) {\n    for (var step = 0; step < steps; step++) {\n\n        var nextX, nextY;\n\n        ////////////////////////////////////////////////////////////////////\n        // even distribution\n\n        nextX = x + stepX;\n        nextY = y + random(-3*stepY, 3*stepY);\n\n\n        ////////////////////////////////////////////////////////////////////\n        // grid\n        // nextX = x + stepX;\n        // nextY = y + floor(random(-1,2)) * stepY;\n\n        line(x, y, nextX, nextY);\n\n        x = nextX;\n        y = nextY;\n\n    }\n}"
  },
  {
    "_id": "oduH9TYeX45xtKPzS",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T19:07:57.718Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/im8itoryew8qcneifqpn",
        "version": 1552676886,
        "signature": "4d677b2b7eca2c392545d8d8bf39c9c84aac2573",
        "width": 796,
        "height": 796,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T19:08:06Z",
        "tags": [],
        "bytes": 46633,
        "type": "upload",
        "etag": "e5e242ea1a25d9c0bc9637aa724e7827",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552676886/avalanche2019/im8itoryew8qcneifqpn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552676886/avalanche2019/im8itoryew8qcneifqpn.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:31:35.339Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:50:39.355Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:59:37.921Z" }
      }
    ],
    "title": "",
    "description": "Making a mandala, was more interesting to try out building own callback nests than the visual result :)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n  createCanvas(400, 400);\n  noLoop();\n  // frameRate(1);\n  colorMode(HSB, 1, 1, 1, 1);\n  background(0, 0, 0.9);\n  strokeWeight(1);\n  stroke(0, 0, 0, 0.5);\n  noFill();\n\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  myTurtle.penUp();\n  // myTurtle.penDown();\n  myTurtle.moveTo(height / 2, width / 2);\n  myTurtle.moveForward(10);\n  myTurtle.moveBackward(10);\n  moveCircular(10, 20, drawGrowingCircles);\n  myTurtle.turnRight(360 / 10 / 2);\n  moveCircular(10, 40, circleOfCircles);\n  moveCircular(40, 52, function(i) {\n    push();\n    fill(0, 1, 0.8);\n    noStroke();\n    gaps(i);\n    noFill();\n    pop();\n  });\n  moveCircular(80, 58, gaps);\n  moveCircular(60, 74, gaps);\n  moveCircular(10, 66, circleOfCircles2);\n  finalPositionMarker();\n}\n\nfunction gaps(i) {\n  if (i % 2 == 0) {\n    circle(myX(), myY(), 2, 2);\n  }\n}\n\nfunction circleOfCircles() {\n  myTurtle.pushState();\n  // myTurtle.penDown();\n  moveCircular(10, 5, drawCircle);\n  myTurtle.popState();\n}\nfunction circleOfCircles2() {\n  myTurtle.pushState();\n  // myTurtle.penDown();\n  moveCircular(6, 4, function() {\n    fill(0, 1, 0.8);\n    noStroke();\n    circle(myX(), myY(), 1, 1);\n    noFill();\n  });\n  myTurtle.popState();\n}\n\nfunction drawCircle() {\n  circle(myX(), myY(), 2, 2);\n}\n\nfunction drawGrowingCircles() {\n  myTurtle.pushState();\n  // myTurtle.turnLeft(20);\n  for (let i = 0; i < 5; i++) {\n    circle(myX(), myY(), i, i);\n    myTurtle.moveForward(10 + i);\n  }\n  myTurtle.popState();\n}\n\nfunction moveCircular(n, s, callback) {\n  myTurtle.pushState();\n  for (let i = 0; i < n; i++) {\n    myTurtle.turnRight(360 / n);\n    myTurtle.moveForward(s);\n    callback(i);\n    myTurtle.moveBackward(s);\n  }\n  myTurtle.popState();\n}\n\nfunction finalPositionMarker() {\n  fill(0, 1, 0.8);\n  noStroke();\n  circle(myX(), myY(), 2, 2);\n}\n\nfunction myX() {\n  return myTurtle.x;\n}\nfunction myY() {\n  return myTurtle.y;\n}"
  },
  {
    "_id": "orPWv4vjo66crpAPp",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T18:02:47.666Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sm8rm63jqms41yrkz66k",
        "version": 1552068175,
        "signature": "acd68e69f30b8834904a229561cb97ac57a0f187",
        "width": 446,
        "height": 444,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T18:02:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 1888740,
        "type": "upload",
        "etag": "ff662ef2a435db07425c00b04cd1a41f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552068175/avalanche2019/sm8rm63jqms41yrkz66k.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552068175/avalanche2019/sm8rm63jqms41yrkz66k.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "1699559",
          "dar": "223:222"
        },
        "frame_rate": 60,
        "bit_rate": 1756967,
        "duration": 8.6,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/jqtwehhdqotvx9vpqexa",
        "version": 1552068375,
        "signature": "6ffb35e6ff80db8854fd861a195ff0df307f2d29",
        "width": 446,
        "height": 444,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T18:06:15Z",
        "tags": [],
        "bytes": 8909,
        "type": "upload",
        "etag": "785f21ed47d801be5c0ccb6406e3b4c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552068375/avalanche2019/jqtwehhdqotvx9vpqexa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552068375/avalanche2019/jqtwehhdqotvx9vpqexa.png"
      },
      {
        "public_id": "avalanche2019/lihwi2igeona1fdccxfy",
        "version": 1552068379,
        "signature": "deff1f497b76c06832642864dbad84fd5983e21e",
        "width": 446,
        "height": 444,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T18:06:19Z",
        "tags": [],
        "bytes": 8937,
        "type": "upload",
        "etag": "8460b72366642931414579a1477f5e32",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552068379/avalanche2019/lihwi2igeona1fdccxfy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552068379/avalanche2019/lihwi2igeona1fdccxfy.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T18:03:21.129Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T18:03:21.973Z" }
      }
    ],
    "title": "",
    "description": "Sparkle skull. It's coming to get you. Its interesting how the colors are set to HSB and show pretty brightly as static images but, when refreshing at a high rate, they soften and become less saturated. I didn't expect that.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nvar x = 5;\nvar y = 5;\n\nvar pixelSize = 30; // Size of the pixels.\nvar canvasWidth = 20; // Width in pixels.\nvar canvasHeight = 20; // Height in pixels.\nvar pixels = [];\n\nfunction setup() {\n  createCanvas(450, 450);\n  // how to change the bkg color?\n  background(0);\n   colorMode(HSB);\n  frameRate(100);\n  for (var x = 0; x < canvasWidth; x++) {\n    pixels.push([]);\n    for (var y = 0; y < canvasHeight; y++) {\n      pixels[x].push(0);\n\n    }\n  }\n}\n\nfunction refresh() {\n  noStroke();\n  for (var x = 0; x < canvasWidth; x++) {\n    for (var y = 0; y < canvasHeight; y++) {\n      fill(pixels[x][y]);\n      rect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n    }\n  }\n}\n\nfunction pixel(x, y, color) {\n  pixels[x][y] = color;\n\n}\nvar paint;\n\nfunction draw() {\n\n  refresh();\n  \n  //by rows top to bottom\n\n  pixel(5, 2, [random(255), random(255), random(255)]);\n  pixel(6, 2, [random(255), random(255), random(255)]);\n  pixel(7, 2, [random(255), random(255), random(255)]);\n  pixel(8, 2, [random(255), random(255), random(255)]);\n  pixel(9, 2, [random(255), random(255), random(255)]);\n\n  pixel(4, 3, [random(255), random(255), random(255)]);\n  pixel(5, 3, [random(255), random(255), random(255)]);\n  pixel(6, 3, [random(255), random(255), random(255)]);\n  pixel(7, 3, [random(255), random(255), random(255)]);\n  pixel(8, 3, [random(255), random(255), random(255)]);\n  pixel(9, 3, [random(255), random(255), random(255)]);\n  pixel(10, 3, [random(255), random(255), random(255)]);\n\n  pixel(4, 4, [random(255), random(255), random(255)]);\n  pixel(5, 4, [random(255), random(255), random(255)]);\n  pixel(6, 4, [random(255), random(255), random(255)]);\n  pixel(7, 4, [random(255), random(255), random(255)]);\n  pixel(8, 4, [random(255), random(255), random(255)]);\n  pixel(9, 4, [random(255), random(255), random(255)]);\n  pixel(10, 4, [random(255), random(255), random(255)]);\n\n  pixel(4, 5, [random(255), random(255), random(255)]);\n  pixel(5, 5, [(0)]);\n  pixel(6, 5, [(0)]);\n  pixel(7, 5, [random(255), random(255), random(255)]);\n  pixel(8, 5, [(0)]);\n  pixel(9, 5, [(0)]);\n  pixel(10, 5, [random(255), random(255), random(255)]);\n\n  pixel(4, 6, [random(255), random(255), random(255)]);\n  pixel(5, 6, [(0)]);\n  pixel(6, 6, [(0)]);\n  pixel(7, 6, [random(255), random(255), random(255)]);\n  pixel(8, 6, [(0)]);\n  pixel(9, 6, [(0)]);\n  pixel(10, 6, [random(255), random(255), random(255)]);\n\n  pixel(5, 7, [random(255), random(255), random(255)]);\n  pixel(6, 7, [random(255), random(255), random(255)]);\n  pixel(7, 7, [random(255), random(255), random(255)]);\n  pixel(8, 7, [random(255), random(255), random(255)]);\n  pixel(9, 7, [random(255), random(255), random(255)]);\n\n  pixel(5, 8, [random(255), random(255), random(255)]);\n  pixel(6, 8, [random(255), random(255), random(255)]);\n  pixel(7, 8, [(0)]);\n  pixel(8, 8, [random(255), random(255), random(255)]);\n  pixel(9, 8, [random(255), random(255), random(255)]);\n\n  pixel(6, 9, [random(255), random(255), random(255)]);\n  pixel(7, 9, [random(255), random(255), random(255)]);\n  pixel(8, 9, [random(255), random(255), random(255)]);\n\n  pixel(5, 10, [random(255), random(255), random(255)]);\n  pixel(6, 10, [(0)]);\n  pixel(7, 10, [random(255), random(255), random(255)]);\n  pixel(8, 10, [(0)]);\n  pixel(9, 10, [random(255), random(255), random(255)]);\n\n  pixel(6, 11, [random(255), random(255), random(255)]);\n  pixel(7, 11, [random(255), random(255), random(255)]);\n  pixel(8, 11, [random(255), random(255), random(255)]);\n\n}"
  },
  {
    "_id": "osLCHx8ZEXwnnnYtF",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-03-01T19:03:43.779Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tlgzvg952y1jpqrcrqvf",
        "version": 1551467032,
        "signature": "d0b90154738b954234d2f3261c76c74f8a8fb64f",
        "width": 788,
        "height": 892,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T19:03:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 8239493,
        "type": "upload",
        "etag": "a018c1cd0322699f058a443bc96a3bc0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551467032/avalanche2019/tlgzvg952y1jpqrcrqvf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551467032/avalanche2019/tlgzvg952y1jpqrcrqvf.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "9658345",
          "dar": "197:223"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9669820,
        "duration": 6.816667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "challenge i+",
    "code": "var color_slider;\nfunction setup() {\n    createCanvas(400, 400);\n    colorMode(HSB, 255);\n    createP('colorfulness');\n    color_slider = createSlider(0, 255, 0);\n  \n}\n\n\nfunction draw() {\n    \n    var color = color_slider.value() ;\n  background(255-color);\n    noStroke();\n    ellipseMode(CENTER);\n\n\n    var noiseFrequency = color;\n\n    for (var i = 0; i < 100; i++) {\n        // these points are not scattered in the same way\n        // how can you make the arrangement match the challenge?\n        // var x = random(width);\n        // var y = random(height);\n    let x = noise(i * noiseFrequency, 0) * width;\n    let y = noise(i * noiseFrequency, 1000) * height;\n        // the diameter shouldn't always be 10, it needs to vary\n        var diameter = random(5,color/10);\n\n        // the colors also need to change\n        // what colorMode would be easiest to work with?\n        //fill(255, 255, 255)\n        stroke(random(100,255), 255-color, color);\n        strokeWeight(diameter);\n        //ellipse(x, y, diameter, diameter);\n        line(y,x,width-x,height);\n    }\n\n\n    //noLoop();\n\n\n}"
  },
  {
    "_id": "ovXvhfCMbqQHkgayj",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T17:35:37.747Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xk5qngt31t1ly7gbuz31",
        "version": 1556300143,
        "signature": "47b5f706922134f0c9688e04139997945ac72367",
        "width": 592,
        "height": 728,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T17:35:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 337178,
        "type": "upload",
        "etag": "cfedc75ff0d44adbca8f413f0ef959dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556300143/avalanche2019/xk5qngt31t1ly7gbuz31.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556300143/avalanche2019/xk5qngt31t1ly7gbuz31.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "336101",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "15301",
          "dar": "74:91"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 365578,
        "duration": 7.3785,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "ozaY5hAWqaoMeJzfs",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T07:32:12.03Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nov0t5djwld0eemuufac",
        "version": 1556263938,
        "signature": "dc50fe5a52b82a9a01eb1aa19961b89bcbcc9b76",
        "width": 0,
        "height": 0,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T07:32:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 645409,
        "type": "upload",
        "etag": "177181260824f43cba1ddb9062cc901d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556263938/avalanche2019/nov0t5djwld0eemuufac.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556263938/avalanche2019/nov0t5djwld0eemuufac.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "128773",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {},
        "is_audio": true,
        "bit_rate": 130303,
        "duration": 39.600998
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Based on Tone.js sketch. Melody is recreated using Vocaloid 5 Amy & Chris voice bank"
  },
  {
    "_id": "pC4i3QFXBRdnBRSog",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T16:53:48.229Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kcugli1njmbosey2dkyr",
        "version": 1555088047,
        "signature": "3940ae5343cddbdbff585f4d6b3e942cde169d1d",
        "width": 1208,
        "height": 946,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T16:54:07Z",
        "tags": [],
        "bytes": 118922,
        "type": "upload",
        "etag": "3acd4b6e5291d9a0b2e30f130414bfbd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555088047/avalanche2019/kcugli1njmbosey2dkyr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555088047/avalanche2019/kcugli1njmbosey2dkyr.png"
      },
      {
        "public_id": "avalanche2019/wbfvwnb3lgox9okqr9lv",
        "version": 1555088050,
        "signature": "2321636279109f5c46935d8699c1cadf30589999",
        "width": 1194,
        "height": 932,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T16:54:10Z",
        "tags": [],
        "bytes": 90086,
        "type": "upload",
        "etag": "593a72412c0a12f4355a50c1e3961af5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555088050/avalanche2019/wbfvwnb3lgox9okqr9lv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555088050/avalanche2019/wbfvwnb3lgox9okqr9lv.png"
      },
      {
        "public_id": "avalanche2019/fr3piepuxwgb4cre5b2c",
        "version": 1555088056,
        "signature": "90a0bc62455c0b0b5a27d2a3f48c78b2db57f5cc",
        "width": 1182,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T16:54:16Z",
        "tags": [],
        "bytes": 92373,
        "type": "upload",
        "etag": "54ae0d59d6a2c1b35985e57ad2776a2c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555088056/avalanche2019/fr3piepuxwgb4cre5b2c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555088056/avalanche2019/fr3piepuxwgb4cre5b2c.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Using the class example to create a fortune generator",
    "code": "injectInterface();\n    document.getElementById(\"title\").textContent = generateTitle();\n    document.getElementById(\"subtitle\").textContent = generateSubtitle();\n    \n    function generateTitle() {\n        var dates_fortune = [\"Today\", \"Tomorrow\", \"This Month\", \"This Year\"];\n    \tvar nouns_fortune = [\"Good Luck\", \"Happiness\", \"Romance\", \"Money\", \"Anger\", \"Confrontations\", \"Nightmares\", \"Dreams\"];\n        var persons = [\"Dreamers\", \"Believers\", \"Dancers\", \"Players\", \"Jesters\", \"Runners\", \"Fighters\"];\n        var secondary_nouns = [\"Clouds\", \"Space\", \"Earth\", \"Waves\", \"Words\", \"Promises\", \"Lies\", \"Light\", \"Dance\"];\n    \n    \n    \tvar date_fortune = sample(dates_fortune);\n    \tvar noun_fortune = sample(nouns_fortune);\n    \tvar person = sample(persons);\n      var secondary_noun = sample(secondary_nouns);\n    \n    \tvar title = \"\";\n    \tif (Math.random() < 0.5) {\n    \t    title = `${date_fortune} will bring ${noun_fortune} to the ${person} of ${secondary_noun}`;\n    \t}\n    \telse {\n    \t\ttitle = `${person} will receive ${noun_fortune} ${date_fortune} as long as they care for the ${secondary_noun}`;\n    \t}\n    \n    \treturn title;\n    }\n    \n    function generateSubtitle() {\n    \tvar story_nouns = [\"Dream\", \"Race\", \"Celebration\", \"Party\", \"Nightmare\"];\n    \tvar horoscopes = [\"Virgo\", \"Gemini\", \"Pisces\", \"Cancer\", \"Leo\", \"Taurus\", \"Aries\", \"Libra\", \"Scorpio\", \"Aquarius\", \"Capricorn\", \"Sagittarius\"];\n    \t\n    \tvar story_noun = sample(story_nouns);\n    \tvar horoscope = sample(horoscopes);\n    \tvar subtitle = `A  ${story_noun} for ${horoscope}`;\n    \n    \treturn subtitle;\n    }\n    \n    \n    function sample(array) {\n    \tconst index = Math.floor(Math.random() * array.length);\n    \treturn array[index];\n    }\n    \n    \n    \n    \n    function injectInterface() {\n    \n    \tdocument.body.insertAdjacentHTML('beforeend', `\n    <style type=\"text/css\">\n    \t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n    \t\tbody {\n    \t\t\ttext-align: center;\n    \t\t\tfont-family: 'Roboto', sans-serif;\n    \t\t}\n    \t\t.wrap {\n    \t\t\tdisplay: table;\n    \t\t\tpadding: 50px;\n    \t\t\tmargin: 50px auto;\n    \t\t\ttext-align: center;\n    \t\t}\n    \t\t#title {\n    \t\t\tfont-size: 50px;\n    \t\t\tfont-weight: bold;\n    \t\t\ttext-transform: uppercase;\n    \t\t\tline-height: .9em;\n    \n    \t\t}\n    \t\t#subtitle {\n    \t\t\tmargin-top: .75em;\n    \t\t\tfont-weight: 300;\n    \t\t\tfont-size: 25px;\n    \t\t\tfont-weight: normal;\n    \t\t}\n    \t</style>\n    \t<div class=\"wrap\">\n    \t\t<div id=\"title\">Title</div>\n    \t\t<div id=\"subtitle\">Subtitle</div>\n    \t</div>\n    `);\n    }"
  },
  {
    "_id": "pCEdea2ej958oCtZ2",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T04:41:53.89Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k4joqsnezc6lj8zd4hgl",
        "version": 1550205734,
        "signature": "17466b0ed32b23cb4e09509a650c349929f1c93d",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T04:42:14Z",
        "tags": [],
        "bytes": 101221,
        "type": "upload",
        "etag": "9863a23ad377974101991121e07184f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550205734/avalanche2019/k4joqsnezc6lj8zd4hgl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550205734/avalanche2019/k4joqsnezc6lj8zd4hgl.png"
      },
      {
        "public_id": "avalanche2019/nmdo241nt9eydupbvizl",
        "version": 1550205739,
        "signature": "c85f3316919834eeece7e5f210054462f227ec18",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T04:42:19Z",
        "tags": [],
        "bytes": 109069,
        "type": "upload",
        "etag": "f338ab895b578ab667253fc673be3957",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550205739/avalanche2019/nmdo241nt9eydupbvizl.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550205739/avalanche2019/nmdo241nt9eydupbvizl.png"
      },
      {
        "public_id": "avalanche2019/oq8btobnac0sojo545sb",
        "version": 1550205743,
        "signature": "b7c8527fd55f8067d46193635bc61f5343272d9a",
        "width": 1084,
        "height": 1376,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T04:42:23Z",
        "tags": [],
        "bytes": 156558,
        "type": "upload",
        "etag": "c7b1b65137043d805d6e3e8d68d61068",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550205743/avalanche2019/oq8btobnac0sojo545sb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550205743/avalanche2019/oq8btobnac0sojo545sb.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Slider-Controlled Bezier Curve"
  },
  {
    "_id": "pCaXnGF679amTeEcj",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T19:16:35.154Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yfjdwdu4eewkodhklxra",
        "version": 1553800607,
        "signature": "bf1dbc714397c27989c4ada58d8684706a48d391",
        "width": 1612,
        "height": 1430,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T19:16:47Z",
        "tags": [],
        "bytes": 368397,
        "type": "upload",
        "etag": "89d353b380b14caa8781782e3f8680be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553800607/avalanche2019/yfjdwdu4eewkodhklxra.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553800607/avalanche2019/yfjdwdu4eewkodhklxra.png"
      },
      {
        "public_id": "avalanche2019/fopbyex3nvhwindxgfor",
        "version": 1553800610,
        "signature": "7538dca79968af3c206eb67bab3073fc7e127959",
        "width": 1380,
        "height": 1336,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-28T19:16:50Z",
        "tags": [],
        "bytes": 274091,
        "type": "upload",
        "etag": "7eef9b989044fe1f970f32fcc2053a6b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553800610/avalanche2019/fopbyex3nvhwindxgfor.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553800610/avalanche2019/fopbyex3nvhwindxgfor.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T19:28:18.113Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T19:33:39.35Z" }
      }
    ],
    "title": "",
    "description": "Playing around with blobs and layering them by transparency as well as radius size",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar values = {\n  paths: 30,\n  radius: 370,\n  points: 17\n};\n\n// function onFrame(event) {\n//   var radius = values.radius - 20 * Math.random();\n//   createPaths(radius);\n// }\n\n// function onFrame(event) {\n//   radius = radius + Math.random() * 10;\n// }\n\ncreatePaths();\n\nfunction createPaths() {\n  for (var i = 0; i < values.paths; i++) {\n    var radius = values.radius - i * 30;\n    var points = values.points;\n    var path = createBlob(view.size / 2, radius, points);\n    var lightness = (Math.random() - 0.5) * 0.4 + 0.4;\n    var hue = Math.random() * 230 + i;\n    path.fillColor = {\n      hue: hue,\n      saturation: 1,\n      lightness: lightness,\n      alpha: 1 - i * 0.06\n    };\n  }\n}\nfunction createBlob(center, radius, points) {\n  var path = new Path();\n  path.closed = true;\n  for (var i = 0; i < points; i++) {\n    var delta = new Point({\n      length: radius * 0.6 + Math.random() * radius * 0.6,\n      angle: (360 / points) * i\n    });\n    path.add(center + delta);\n  }\n  path.smooth();\n  return path;\n}"
  },
  {
    "_id": "pCc7fdGX96KpsA5Lc",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T13:26:28.368Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nyyberoti7fltyptcjq7",
        "version": 1552051592,
        "signature": "874df54f556e4e7dd65071141ceb59635f8f9d0c",
        "width": 1110,
        "height": 1448,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T13:26:32Z",
        "tags": [],
        "bytes": 54276,
        "type": "upload",
        "etag": "25fe4ef1059272e33be81c20be9fd180",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552051592/avalanche2019/nyyberoti7fltyptcjq7.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552051592/avalanche2019/nyyberoti7fltyptcjq7.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Simple pixel drawing based on a Minecraft rose. Next step is to make the hues random for the reds and greens.",
    "inspiration_name": "Minecraft Rose",
    "inspiration_url": "https://gamepedia.cursecdn.com/minecraft_gamepedia/3/37/Poppy.png?version=a0e03daa0938524d6404969f2186969f"
  },
  {
    "_id": "pDnQyophJdMdsRvvS",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-06T04:12:04.106Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/crvto3awnjouigcjnrnb",
        "version": 1551845728,
        "signature": "3cdd88b9922e171e4b4d86405bda479ce4f73377",
        "width": 616,
        "height": 700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T04:15:28Z",
        "tags": [],
        "bytes": 233279,
        "type": "upload",
        "etag": "ba6de37f51485ebc17254cc3f2c816a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551845728/avalanche2019/crvto3awnjouigcjnrnb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551845728/avalanche2019/crvto3awnjouigcjnrnb.png"
      },
      {
        "public_id": "avalanche2019/v7gfs33xchto5ke7xzvx",
        "version": 1551845736,
        "signature": "cd8a3e83c0d9f93dab101442d59ef58225a9efb0",
        "width": 628,
        "height": 698,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T04:15:36Z",
        "tags": [],
        "bytes": 45211,
        "type": "upload",
        "etag": "554edc709745558e0cbaaeed7e130abd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551845736/avalanche2019/v7gfs33xchto5ke7xzvx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551845736/avalanche2019/v7gfs33xchto5ke7xzvx.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Image & pixel play --",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar worldImage;\n\nfunction preload() {\n    csImage = loadImage(\"man.sheet.png\");\n}\n\nfunction setup() {\n    createCanvas(316, 350);\n  colorMode(HSB);\n\n}\n\nfunction draw() {\n    background(0);\n  \n//    \t// noprotect\n//   \tfor (var y = 0; y < csImage.height; y++) {\n//         for (var x = 0; x < csImage.width; x++) {\n//             var in_color = csImage.get(x, y);\n\n//             var r = red(in_color);\n//             var g = green(in_color);\n//             var b = blue(in_color);\n\n//             var out_color;\n//             if (b === 0) {\n//                 out_color = color(128, 0, 228);\n//             } else {\n//                 out_color = color(58, 150, 55);\n          \n\n//             csImage.set(x, y, out_color);\n//             csImage.updatePixels();\n            \n\n  \t// noprotect\n  \tfor (var y = 0; y < csImage.height; y++) {\n        for (var x = 0; x < csImage.width; x++) {\n            var this_color = csImage.get(x, y);\n          var below_color = csImage.get(x,y+4);\n\n      if (lightness(this_color) < lightness(below_color)) {\n        var out_color = color(5);\n        csImage.set(x, y, out_color);\n        csImage.updatePixels();\n      }\n    }\n  }\n\n  smooth();\n  image(csImage, 0, 0, width, height);\n\n  noLoop();\n}"
  },
  {
    "_id": "pNKLaqFxADejaSeb6",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-02-01T05:26:03.983Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eipmi17qnjucvywpzigi",
        "version": 1548998771,
        "signature": "95801a7a68b56ab0e846fdc82dc92e67e81160a5",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T05:26:11Z",
        "tags": [],
        "bytes": 371644,
        "type": "upload",
        "etag": "b4de7301b6ff06164338c89c0197145d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548998771/avalanche2019/eipmi17qnjucvywpzigi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548998771/avalanche2019/eipmi17qnjucvywpzigi.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "inspiration_name": "Initial using Kathrin’s tiles."
  },
  {
    "_id": "pQ6fFenRSpYCxLRHD",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-21T17:44:25.037Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/arl7ticy8ko4xf5p0guk",
        "version": 1553190361,
        "signature": "bec1db9aacc9db1344efcbb4ca0985e152cc8c45",
        "width": 796,
        "height": 816,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-21T17:46:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 7284956,
        "type": "upload",
        "etag": "ec2f15d94a31e6a58c95c919232295e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553190361/avalanche2019/arl7ticy8ko4xf5p0guk.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553190361/avalanche2019/arl7ticy8ko4xf5p0guk.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7770667",
          "dar": "199:204"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7787926,
        "duration": 7.483333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aiyemXiLJGxbpa2Qa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-21T20:08:59.36Z" }
      }
    ],
    "title": "",
    "description": "Playing around with animations in paper.js",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar pathLeft = new Path();\nvar pathRight = new Path();\nvar radius = 30;\n\nvar pathCirc = new Path.Circle([200, 270], radius);\n\nvar startY = 40;\n\nvar startPoint = new Point(0, 10);\nvar center = new Point(200, 200);\nvar bottomLeft = new Point(200, 400);\nvar bottomRight = new Point(200, 400);\nvar topCenter = new Point(200, 0);\n\npathLeft.strokeColor = \"blue\";\nfor (var i = 0; i < 20; i++) {\n  pathLeft.add(startPoint);\n  pathLeft.add(center);\n\n  pathLeft.add(topCenter);\n  pathLeft.add(bottomLeft);\n  startPoint.y += 20;\n  bottomLeft.x += 10;\n  //   center.y += 20;\n}\n\nvar startPointRight = new Point(400, 10);\n\npathRight.strokeColor = \"red\";\nfor (var i = 0; i < 20; i++) {\n  pathRight.add(startPointRight);\n  pathRight.add(center);\n  pathRight.add(topCenter);\n  pathRight.add(bottomRight);\n  startPointRight.y += 20;\n  bottomRight.x -= 10;\n}\n\nvar pathCutout = pathCirc.subtract(pathRight);\n\npathCirc.style = {\n  strokeColor: \"Orange\",\n  strokeWidth: 4,\n  dashArray: [2, 2],\n  shadowColor: new Color(0, 0, 0, 0.5),\n  shadowBlur: 12,\n  shadowOffset: new Point(5, 5)\n};\n\nfunction onFrame(event) {\n  pathRight.strokeColor.hue += 1;\n  pathLeft.strokeColor.hue += 1;\n  pathCirc.strokeColor.hue -= 1;\n  topCenter.x += 1;\n  pathCirc.rotate(10);\n\n  //   pathRight.rotate(1);\n  //   pathLeft.rotate(-1);\n}"
  },
  {
    "_id": "pRAPChMxhBYRhnWea",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T03:59:29.67Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/b5s5coyilsfoirmgp9oy",
        "version": 1555041921,
        "signature": "0b5999b715b1f6318432363b73d29249549d1f21",
        "width": 996,
        "height": 482,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-12T04:05:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 444699,
        "type": "upload",
        "etag": "cc6fa4ff7e136789f6d4e56b05d76297",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555041921/avalanche2019/b5s5coyilsfoirmgp9oy.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555041921/avalanche2019/b5s5coyilsfoirmgp9oy.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "73260",
          "dar": "498:241"
        },
        "frame_rate": 20,
        "bit_rate": 75292,
        "duration": 47.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Scary stormy night challenge. Combined tracery & p5, creating a typewriter effect. There is still bug in the code (word will be cut off in the end of the each line, will try to fix) Passage original from The Girl Who Loved Tom Gordon by Stephen King.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /text/tracery.min.js\n\nfunction setup() { \n  createCanvas(windowWidth, windowHeight);\n  background(255);\n  textFont('Helvetica');\n  textAlign(LEFT, TOP);\n  textSize(24);\n\n  var grammar = tracery.createGrammar(grammarSource);\n  grammar.addModifiers(tracery.baseEngModifiers);\n  var output = grammar.flatten(\"#story#\");\n  background(255);\n  typeWriter(output, 0, 20, 30, 100);\n} \n\nvar grammarSource = {\n\n  \"story\": \"It was a dark stormy night. As she reached the #profession#'s door of the #object#, which hung open with #organ# twisting in and out of its socket of a window, lightening flashed again, painting the whole world #result#. In its glare #name# saw something with #description.a# standing on the far side of the place, something with #description.a# and #description.a#. It wasn't human; nor did she think it was animal. It was a god. It was her god, the wasp-god, standing there in this dark stormy night. \",\n  \"object\":[\"safe box\", \"cab\", \"wardrobe\", \"jukebox\", \"apartment\", \"fridge\",\"oven\"],\n  \"organ\":[\"vines\", \"intestines\", \"brains\"],\n  \"condition\":[\"lightening flashed\", \"thunderstruck sounded\", \"the dog barked\"],\n  \"result\":[\"bloody red\", \"full of darkness\",\"to a void\", \"to its ending\", \"full of evil\"],\n  \"name\": [\"Lina\",\"Luna\",\"Trisha\",\"Monica\",\"Riley\",\"Kate\",\"Rae\",\"Anne\"],\n  \"description\":[\"slumped shoulders\", \"big feet\", \"humped back\", \"detached arms\", \"broken neck\", \"black eyes\", \"great cocked ears like horns\", \"crooked teeth\",],\n  \"profession\": [\n        \"actor\",\"butcher\",\"carpenter\",\"detective\",\"economist\",\"flight attendant\",\n        \"hydrologist\",\"locksmith\",\"mathematician\",\"nutritionist\",\"priest\",\"reporter\",\n        \"sculptor\",\"surgeon\",\"tailor\",\"taxi driver\",\"veterinarian\",\"web developer\",\n        \"zoologist\"\n  ]\n};\n\nfunction typeWriter(sentence, n, x, y, speed) {\n  if (n < (sentence.length)) {\n    text(sentence.substring(0, n+1), x, y,windowWidth-50,windowHeight);\n    n++;\n    setTimeout(function() {\n      typeWriter(sentence, n, x, y, speed)\n    }, speed);\n  }\n}"
  },
  {
    "_id": "pXwp9sPdkakM8rs28",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-21T20:24:53.088Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lyepqm8m4ekgsznz1zpd",
        "version": 1548102308,
        "signature": "0f2c8fffeb9aa96eba7b3bab9d7682ce2928a624",
        "width": 1998,
        "height": 1392,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-21T20:25:08Z",
        "tags": [],
        "bytes": 271182,
        "type": "upload",
        "etag": "42ee6868d5f3956bb44ae59d5a79ff8b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548102308/avalanche2019/lyepqm8m4ekgsznz1zpd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548102308/avalanche2019/lyepqm8m4ekgsznz1zpd.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:42:39.881Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "pabRXCY4jpsmYcq3y",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T17:34:05.323Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xyx6razjpi24dp7iygrj",
        "version": 1555695251,
        "signature": "6a4375915f87d4c8d52c6826bc74bfbe019b7863",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T17:34:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 3303687,
        "type": "upload",
        "etag": "cfb556052a4625ee9c95960493b03b70",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555695251/avalanche2019/xyx6razjpi24dp7iygrj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555695251/avalanche2019/xyx6razjpi24dp7iygrj.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "3801519",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 6140254,
        "duration": 4.3043,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Part 2 of a similar sketch from earlier this week."
  },
  {
    "_id": "pbCHGbebNkRzCJqLk",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T22:05:35.931Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ygy7tt0wv4xemv1h7bg4",
        "version": 1549577253,
        "signature": "37687dd9618c892caeb4ca3893a8ac16d9c58af8",
        "width": 1799,
        "height": 1306,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T22:07:33Z",
        "tags": [],
        "bytes": 300762,
        "type": "upload",
        "etag": "e4c17b09ac80663a99afaee5398d1650",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549577253/avalanche2019/ygy7tt0wv4xemv1h7bg4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549577253/avalanche2019/ygy7tt0wv4xemv1h7bg4.jpg"
      },
      {
        "public_id": "avalanche2019/gcrtmq2epom6qx0j3uh6",
        "version": 1549577302,
        "signature": "e68b1edb9d174dad03c599297d2a9a90a12ce10d",
        "width": 796,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T22:08:22Z",
        "tags": [],
        "bytes": 1176289,
        "type": "upload",
        "etag": "fa87dc140db083ff1e1511154c2f20a4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549577302/avalanche2019/gcrtmq2epom6qx0j3uh6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549577302/avalanche2019/gcrtmq2epom6qx0j3uh6.png"
      },
      {
        "public_id": "avalanche2019/hcixkxpowbcqbvqmqkaj",
        "version": 1549577705,
        "signature": "05a4ff71f822f2b461d51c8d86dd4d1c434bce80",
        "width": 798,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T22:15:05Z",
        "tags": [],
        "bytes": 1274765,
        "type": "upload",
        "etag": "3538cf7524badcf30bf010f3ee76b6c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549577705/avalanche2019/hcixkxpowbcqbvqmqkaj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549577705/avalanche2019/hcixkxpowbcqbvqmqkaj.png"
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T23:08:43.666Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T15:01:48.285Z" }
      }
    ],
    "title": "",
    "description": "Was trying to mimic Stanton Mcdonald-Wright with lines... (Of Course the first is an original painting.)",
    "code": "var Y_AXIS = 1;\nvar X_AXIS = 2;\nvar b1, b2, c1, c2;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(246,230,211);\n  // Define colors\n  //b1 = color(255);\n  //b2 = color(0);\n  c1 = color(random(255),random(255),random(255));\n  lc = color(random(200,255));\n  c2 = color(random(255),random(255),random(255));\n  c3 = color(random(255),random(255),random(255));\n  c4 = color(random(255),random(255),random(255));\n  c5 = color(random(255),random(255),random(255));\n  c6 = color(random(255),random(255),random(255));\n\n\n  noLoop();\n}\n\nfunction draw() {\n  \n  //setGradient(0, 0, width/2, height, b1, b2, X_AXIS);\n  //setGradient(width/2, 0, width/2, height, b2, b1, X_AXIS);\n  // Foreground\n  setGradient(random(50), random(90), random(100,150), random(100,200), c1, lc, Y_AXIS);\n  setGradient(random(50,100), random(90,180), random(100,150), random(200,250), lc, c2, Y_AXIS);\n  setGradient(random(100,200), random(200,250), random(300,400), random(80,160), c3, lc, Y_AXIS);\n  setGradient(random(100), random(90), random(100,150), random(200,250), c4, lc, X_AXIS);\n  setGradient(random(100,200), random(90,80), random(100,150), random(100,200), lc, c5, X_AXIS);\n  setGradient(300, random(90), 200, random(200,300), lc, c6, X_AXIS);\n\n\n  //setGradient(50, 190, 540, 80, c2, c1, X_AXIS);\n}\n\nfunction setGradient(x, y, w, h, c1, c2, axis) {\n\n  noFill();\n\n  if (axis == Y_AXIS) {  // Top to bottom gradient\n    for (var i = y; i <= y+h; i++) {\n      var inter = map(i, y, y+h, 0, 1);\n      var c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(random(x), i, random(x)+w, i+50);\n    }\n  }  \n  else if (axis == X_AXIS) {  // Left to right gradient\n    for (var i = x; i <= x+w; i++) {\n      var inter = map(i, x, x+w, 0, 1);\n      var c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(i, random(y), i-70, random(y)+h);\n    }\n  }\n}"
  },
  {
    "_id": "pcNMucFty7HEESYXG",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T04:05:20.891Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eg4vjentl1d3va4zbjci",
        "version": 1552017954,
        "signature": "576274a991ffbdf3b46c25203ba0dbf8cb041bfd",
        "width": 1038,
        "height": 1040,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T04:05:54Z",
        "tags": [],
        "bytes": 619314,
        "type": "upload",
        "etag": "d8ad006d5d1cfb2e8ed8c5cf4955a741",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552017954/avalanche2019/eg4vjentl1d3va4zbjci.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552017954/avalanche2019/eg4vjentl1d3va4zbjci.png"
      },
      {
        "public_id": "avalanche2019/e4fwdwag3qoajwgqqfva",
        "version": 1552018047,
        "signature": "e0053e04f168b73318a0338957cc6f4a993b7f70",
        "width": 420,
        "height": 316,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T04:07:27Z",
        "tags": [],
        "bytes": 146547,
        "type": "upload",
        "etag": "384e6782f845d6a2b3f2fa3ede81c3de",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552018047/avalanche2019/e4fwdwag3qoajwgqqfva.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552018047/avalanche2019/e4fwdwag3qoajwgqqfva.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T04:34:51.506Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T05:08:50.09Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T15:35:17.318Z" }
      }
    ],
    "title": "",
    "description": "Times Square Elmo. I regret this."
  },
  {
    "_id": "pdvAStd2JFGukpyii",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T04:20:44.787Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/g4fgrg7jpdjb0iddnorm",
        "version": 1556252710,
        "signature": "3adc68920740c246e06a94ed835d75148c7bf050",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T04:25:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 16662455,
        "type": "upload",
        "etag": "a3171f2fa8100e043613320d8cba833a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556252710/avalanche2019/g4fgrg7jpdjb0iddnorm.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556252710/avalanche2019/g4fgrg7jpdjb0iddnorm.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "251347",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "10744426",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 11005493,
        "duration": 12.1121,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "the song of Friday after work",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// code from class example \n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 250;\n\nconst melody = [\n  ['C4', '2n'],\n  ['A4', '2n'],\n  ['C4', '2n'],\n    ['A4', '2n'],\n    ['G4', '2n'],\n\n ['rest', '0.2s'],\n    ['C4', '2n'],\n  ['A4', '2n'],\n  ['C4', '2n'],\n    ['A4', '2n'],\n    ['B4', '2n'],\n  \n  ['rest', '0.2s'],\n      ['B4', '4n'],\n          ['C5', '2n'],\n              ['B4', '2n'],\n                  ['a4', '2n'],\n                      ['B4', '2n'],\n                          ['G4', '2n'],\n['rest', '0.2s'],\n    ['G4', '4n'],\n        ['A4', '2n'],\n            ['G4', '2n'],\n                ['F4', '2n'],\n                    ['G4', '2n'],\n                        ['E4', '2n'],\n \n];\n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "pk7R9Pm9K9PP5swiu",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-25T14:36:14.424Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/t52rp7gbkdfjctwty0nh",
        "version": 1556202995,
        "signature": "9e23d4042aab70bda1c267e35f12defc60a53163",
        "width": 2220,
        "height": 1176,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-25T14:36:35Z",
        "tags": [],
        "bytes": 287881,
        "type": "upload",
        "etag": "e5339a0cfd416591296bed14453c7daf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556202995/avalanche2019/t52rp7gbkdfjctwty0nh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556202995/avalanche2019/t52rp7gbkdfjctwty0nh.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-25T16:34:20.902Z" }
      }
    ],
    "title": "",
    "description": "Progress towards a note guessing game !"
  },
  {
    "_id": "ps9sZnmZ2HqMgvXXD",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T17:45:48.775Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xwwk7klv0f94cvi9pgpd",
        "version": 1556819156,
        "signature": "ee1acd57d27aed51130dbd72fa7c6eaf8ae93d2d",
        "width": 2880,
        "height": 1800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T17:45:56Z",
        "tags": [],
        "bytes": 588927,
        "type": "upload",
        "etag": "9252bbb0e06d7b93faa8922860c3d736",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556819156/avalanche2019/xwwk7klv0f94cvi9pgpd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556819156/avalanche2019/xwwk7klv0f94cvi9pgpd.png"
      },
      {
        "public_id": "avalanche2019/c2dsgcpyurgtxnfssqio",
        "version": 1556819167,
        "signature": "688596de2e96a54dfa503d4f662dc2769c5d8378",
        "width": 2880,
        "height": 1800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T17:46:07Z",
        "tags": [],
        "bytes": 608134,
        "type": "upload",
        "etag": "01baf8baa4421226550fb2754aae0f1b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556819167/avalanche2019/c2dsgcpyurgtxnfssqio.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556819167/avalanche2019/c2dsgcpyurgtxnfssqio.png"
      },
      {
        "public_id": "avalanche2019/u7lcveyopthdantk3ssn",
        "version": 1556819180,
        "signature": "bde3730cd46de66ec8b36c278abf60f1e25dcdf6",
        "width": 2880,
        "height": 1800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-02T17:46:20Z",
        "tags": [],
        "bytes": 699901,
        "type": "upload",
        "etag": "ae14146d101177d1cd268cc83476022e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556819180/avalanche2019/u7lcveyopthdantk3ssn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556819180/avalanche2019/u7lcveyopthdantk3ssn.png"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T19:10:28.098Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T04:15:01.514Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T14:31:33.874Z" }
      }
    ],
    "title": "",
    "description": "Progress towards a procedurally generated castle that sits on a rock...starting to take a long time to compile/preview/build..."
  },
  {
    "_id": "psnHsXQm7L7EiXemc",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "created_at": { "$date": "2019-03-01T20:19:25.03Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fltgsrew7wuni1e04dkf",
        "version": 1551471647,
        "signature": "06632060067c2bf17cf54afd448b2175249d5543",
        "width": 760,
        "height": 764,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-01T20:20:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 13919271,
        "type": "upload",
        "etag": "12582a903141970722e066932cd27ec3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551471647/avalanche2019/fltgsrew7wuni1e04dkf.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551471647/avalanche2019/fltgsrew7wuni1e04dkf.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "3637230",
          "dar": "190:191"
        },
        "frame_rate": 15,
        "bit_rate": 3639025,
        "duration": 30.6,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Fluid Simulation\nImplement the double density algorithm for fluid simulation. Not quite convincingly looking as the reference yet",
    "inspiration_name": "Fluid Simulation",
    "inspiration_url": "https://peeke.nl/simulating-blobs-of-fluid"
  },
  {
    "_id": "ptbjswP3YrLqnQ9gz",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T06:21:53.872Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ulicynvb3l8hcgu73gic",
        "version": 1550125484,
        "signature": "1151e5e19d4a43c62fe7dd44d90c10fd553109f8",
        "width": 900,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-14T06:24:44Z",
        "tags": [],
        "bytes": 68161,
        "type": "upload",
        "etag": "60b98a1f95746150994e059a222fc9fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550125484/avalanche2019/ulicynvb3l8hcgu73gic.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550125484/avalanche2019/ulicynvb3l8hcgu73gic.jpg"
      },
      {
        "public_id": "avalanche2019/ksmoz6likn31u7e9gwx0",
        "version": 1550125501,
        "signature": "5da08e2eb92680222eda53295179b8c71e124847",
        "width": 937,
        "height": 885,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-14T06:25:01Z",
        "tags": [],
        "bytes": 72647,
        "type": "upload",
        "etag": "1aaf7bbf59cda8ec7bc16fa865706b98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550125501/avalanche2019/ksmoz6likn31u7e9gwx0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550125501/avalanche2019/ksmoz6likn31u7e9gwx0.jpg"
      },
      {
        "public_id": "avalanche2019/dj7gi4wxrujqbxaowkjt",
        "version": 1550125507,
        "signature": "cf8dd8e9d55e52e200224868dce36ef7138d2a33",
        "width": 938,
        "height": 888,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-14T06:25:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 498644,
        "type": "upload",
        "etag": "c68c9f274eddbe150b9235121d757323",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550125507/avalanche2019/dj7gi4wxrujqbxaowkjt.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550125507/avalanche2019/dj7gi4wxrujqbxaowkjt.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "161839",
          "dar": "469:444"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 166471,
        "duration": 23.962971,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T06:33:22.44Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T17:11:29.815Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have simulated the motion of a double pendulum and have given custom controls of gravity, drag, cord length, and tracing color. \nI did this project in Processing and p5.js. \nI was inspired by The Coding Train channel on YouTube. \n\nComplete code: \nhttps://github.com/akshansh2593/CompForm/tree/master/doublePendulum",
    "inspiration_name": "Double Pendulum",
    "inspiration_url": "https://www.myphysicslab.com/pendulum/double-pendulum-en.html",
    "code": "// Creating a customizable double pendulum\n// Taking inspiration from Daniel Shiffman's YouTube channel, The Coding Train\n// Video reference: https://youtu.be/uWzPe_S-RVE\n\n// creating variables\nlet r1 = 125; // radius for ball 1's path\nlet r2 = 125; // radius for ball 2's path\nlet m1 = 10; // mass of ball 1\nlet m2 = 10; // mass of ball 2\nlet a1 = 0; // angle of ball 1\nlet a2 = 0; // angle of ball 2\nlet a1_v = 0; // angular velocity of ball 1\nlet a2_v = 0; // angular velocity of ball 2\nlet g = 1; // acceleration of gravity\n\nlet px2 = -1; // previous value of x2 (to draw a line)\nlet py2 = -1; // previous value of y2\nlet cx, cy; // for moving the pendulum on canvas\n\nlet buffer; // used to tell p5 what to draw and what to leave\n\n\n// creating sliders and buttons (variables)\nvar lineColor_button; // color of the pendulum tracing\nvar traceRedVal = 0; // trace red value to change based on button press\nvar traceGreenVal = 0; // trace green value to change based on button press\nvar traceBlueVal = 0; // trace blue value to change based on button press\n\nvar gravity_slider; // value of acceleration of gravity\nvar radius1_slider; // value of radius of pendulum 1\nvar radius2_slider; // value of radius of pendulum 2\nvar drag_slider; // value of resistance force\n\n\nfunction setup() {\n    createCanvas(window.innerWidth, 450);\n    pixelDensity(1);\n    a1 = PI / 2; // 90 degree starting angle\n    a2 = PI / 2; // 90 degree starting angle (combined with a1)\n    cx = width / 2;\n    cy = 150;\n    buffer = createGraphics(width, height); // similar to PGraphincs in Processing\n    buffer.background(220);\n    buffer.translate(cx, cy);\n\n\n    // Create buttons and sliders\n    lineColor_button = createButton('Randomize Tracing Color');\n    createP('Gravity');\n    gravity_slider = createSlider(1, 4, 1);\n    createP('Radius of Pendulum 1 and 2');\n    radius1_slider = createSlider(20, 200, 100, 10);\n    radius2_slider = createSlider(20, 200, 100, 10);\n    createP('Air Drag');\n    drag_slider = createSlider(0.950, 1.000, 0.999, 0.001);\n\n}\n\n\nfunction draw() {\n    // create the first background as base which would then be traced by the pendulum\n    background(200);\n    imageMode(CORNER);\n    image(buffer, 0, 0, width, height);\n\n    g = gravity_slider.value();\n    r1 = radius1_slider.value();\n    r2 = radius2_slider.value();\n\n    // writing formula for angular acceleration\n    // for angle 1: a1_a (angular acc for angle 1)\n    let num1 = -g * (2 * m1 + m2) * sin(a1);\n    let num2 = -m2 * g * sin(a1 - 2 * a2);\n    let num3 = -2 * sin(a1 - a2) * m2;\n    let num4 = a2_v * a2_v * r2 + a1_v * a1_v * r1 * cos(a1 - a2);\n    let den = r1 * (2 * m1 + m2 - m2 * cos(2 * a1 - 2 * a2));\n    let a1_a = (num1 + num2 + num3 * num4) / den;\n\n    // for angle 2: a2_a (angular acc for angle 2)\n    num1 = 2 * sin(a1 - a2);\n    num2 = (a1_v * a1_v * r1 * (m1 + m2));\n    num3 = g * (m1 + m2) * cos(a1);\n    num4 = a2_v * a2_v * r2 * m2 * cos(a1 - a2);\n    den = r2 * (2 * m1 + m2 - m2 * cos(2 * a1 - 2 * a2));\n    let a2_a = (num1 * (num2 + num3 + num4)) / den;\n\n    translate(cx, cy);\n    // trace color: adjust using sliders\n    lineColor_button.mousePressed(lineColorChange);\n    //stroke(traceRedVal, traceGreenVal, traceBlueVal);\n    strokeWeight(2);\n\n    // coordinates of ball 1\n    let x1 = r1 * sin(a1);\n    let y1 = r1 * cos(a1);\n\n    // coordinates of ball 2\n    let x2 = x1 + r2 * sin(a2);\n    let y2 = y1 + r2 * cos(a2);\n\n    // render ball 1\n    line(0, 0, x1, y1);\n    fill(0);\n    ellipse(x1, y1, m1, m1);\n\n    // render ball 2\n    line(x1, y1, x2, y2);\n    fill(traceRedVal, traceGreenVal, traceBlueVal);\n    ellipse(x2, y2, m2, m2);\n\n    // Physics of angular motion\n    a1_v += a1_a;\n    a2_v += a2_a;\n    a1 += a1_v;\n    a2 += a2_v;\n\n    // drag force: adjust using sliders\n    a1_v *= drag_slider.value();\n    a2_v *= drag_slider.value();\n\n    // Tracing\n    buffer.stroke(traceRedVal, traceGreenVal, traceBlueVal); // change color of stroke\n    if (frameCount > 1) {\n        buffer.line(px2, py2, x2, y2);\n    }\n\n    px2 = x2;\n    py2 = y2;\n}\n\n// Change the tracing color\nfunction lineColorChange() {\n    console.log('Color has changed.');\n    traceRedVal = random(255);\n    traceGreenVal = random(255);\n    traceBlueVal = random(255);\n}"
  },
  {
    "_id": "q23xDJqcEBhcLWqHd",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T23:25:35.325Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/duqxowrom3vle8sjke0e",
        "version": 1549582051,
        "signature": "f172b0f9175081f912bb5db77b56bd74b5b54b74",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T23:27:31Z",
        "tags": [],
        "bytes": 124576,
        "type": "upload",
        "etag": "e3d67e0ca92735562515eb88beca792f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549582051/avalanche2019/duqxowrom3vle8sjke0e.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549582051/avalanche2019/duqxowrom3vle8sjke0e.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T20:52:37.891Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T23:01:35.354Z" }
      }
    ],
    "title": "",
    "description": "path of a bouncing ball",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nvar x, y, speedX , speedY;\nwindow.setup = function(){\n  createCanvas(500,500);\n  x= random(500);\n  y= random(400);\n  speedX = 4;\n  speedY = -2;\n}\n\nwindow.draw = function(){\n  noStroke();\nsmooth();\n  ellipse(x,y,2,2);\n  x = x + speedX;\n  y = y + speedY;\n  if (x >= 499) { speedX *= -1; fill(\"#ff4739\") }\n  if (x <= 1) { speedX *= -1; fill(random(100)) }\n  if (y <= 1) { speedY *= -1.4; fill(random(150)) }\n  if (y >=499) { speedY *= -1; fill(random(80))}\n}"
  },
  {
    "_id": "q2gDPdwE8KkLRo8Fk",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T23:21:22.849Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yjufuo9vcyn5ndnyoyzc",
        "version": 1552000889,
        "signature": "a8df3b9744de4199feed2eb889270121c36a9c8a",
        "width": 1466,
        "height": 744,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T23:21:29Z",
        "tags": [],
        "bytes": 455835,
        "type": "upload",
        "etag": "0217a5d03dbb54d44fe9791a286b8a05",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552000889/avalanche2019/yjufuo9vcyn5ndnyoyzc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552000889/avalanche2019/yjufuo9vcyn5ndnyoyzc.png"
      },
      {
        "public_id": "avalanche2019/un2iqsq60vkafxnnszlp",
        "version": 1552000894,
        "signature": "5ab54b5ad4048220d9ef13b0e021b30b1e43bfb8",
        "width": 1424,
        "height": 794,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T23:21:34Z",
        "tags": [],
        "bytes": 722957,
        "type": "upload",
        "etag": "8a7ca655f7168fc5827df8eba8a794c8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552000894/avalanche2019/un2iqsq60vkafxnnszlp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552000894/avalanche2019/un2iqsq60vkafxnnszlp.png"
      },
      {
        "public_id": "avalanche2019/axhysw9l23uzagabn64c",
        "version": 1552002012,
        "signature": "c035965322c3d099bd2ea684f6c67f57d3dd1c10",
        "width": 1781,
        "height": 1917,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-07T23:40:12Z",
        "tags": [],
        "bytes": 1036952,
        "type": "upload",
        "etag": "e5e2f540d2afd32fd04893dc45acd18a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552002012/avalanche2019/axhysw9l23uzagabn64c.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552002012/avalanche2019/axhysw9l23uzagabn64c.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-07T23:42:25.35Z" }
      }
    ],
    "title": "",
    "description": "Primary browsing. Pulls out pixels that are \"strongly\" red, green, or blue and exaggerates them.",
    "inspiration_name": "Abstract Browsing",
    "inspiration_url": "https://chrome.google.com/webstore/detail/abstract-browsing/nmkbjeagaobhphiipgigbjhligebkfcg?hl=en",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet img;\nconst canvasWidth = 800;\nconst canvasHeight = 600;\n\nlet reds = [];\nlet greens = [];\nlet blues = [];\n\nfunction preload() {\n    img = loadImage(\"https://raw.githubusercontent.com/annagarbier/compform/master/blog_800_01.png\");\n    // img = loadImage(\"https://raw.githubusercontent.com/annagarbier/compform/master/blog_800_02.png\");\n}\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    pixelDensity(1);\n    rectMode(CENTER);\n}\n\nfunction draw() {\n    noStroke();\n\n    var spacing = canvasWidth / img.width;\n    for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n            var in_color = img.get(x, y);\n            const r = in_color[0];\n            const g = in_color[1];\n            const b = in_color[2];\n\n            let a = map(in_color[3], 0, 255, 0, 1);\n            if (a > .5) {\n                fill(r, g, b, 50);\n                ellipse(\n                    x * spacing + spacing * .5,\n                    y * spacing + spacing * .5,\n                    1, 1\n                );\n            }\n\n            if (r > g + 25 && r > b + 25) {\n                reds.push([x, y]);\n            } else if (g > r + 25 && g > b + 25) {\n                greens.push([x, y]);\n            } else if (b > r + 25 && b > g + 25) {\n                blues.push([x, y]);\n            }\n\n        }\n    }\n\n    fillByPrimaryColor(reds);\n    fillByPrimaryColor(greens);\n    fillByPrimaryColor(blues);\n    noLoop();\n}\n\nfunction fillByPrimaryColor(_c) {\n    push();\n    let thisColorArray = _c;\n    if (thisColorArray === reds) {\n        fill(244, 65, 65);\n        stroke(244, 65, 65);\n    } else if (thisColorArray === greens) {\n        fill(52, 155, 5);\n        stroke(52, 155, 5);\n    } else if (thisColorArray === blues) {\n        fill(66, 134, 244);\n        stroke(66, 134, 244);\n    }\n\n    for (let i = 0; i < thisColorArray.length; i++) {\n        rect(\n            thisColorArray[i][0],\n            thisColorArray[i][1],\n            2, 2\n        )\n    }\n    pop();\n}"
  },
  {
    "_id": "q6eRDofjR4em4c9Dv",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T15:59:30.288Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/swtzlozqwawloxfdeva0",
        "version": 1555689588,
        "signature": "64664422d096fa7573084e4ffe1f1e7744a3c7ad",
        "width": 1696,
        "height": 828,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T15:59:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 11819122,
        "type": "upload",
        "etag": "a1ec93e5f415fbf6491985db4fa3119d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555689588/avalanche2019/swtzlozqwawloxfdeva0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555689588/avalanche2019/swtzlozqwawloxfdeva0.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "313367",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2790486",
          "dar": "424:207"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3112001,
        "duration": 30.383333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T16:45:06.723Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T18:55:53.692Z" }
      }
    ],
    "title": "",
    "description": "finally got p5 up and running with sound and the sounds to not shake like in the processing sketch, going to develop this in next sketch",
    "code": "let mySounds = [];\nlet soundsLength = 17;\nlet circles = [];\nvar button;\nlet playing = false;\n\nfunction preload() {\n    // mySounds[0] = loadSound('0.mp3');\n    // mySounds[1] = loadSound('1.mp3');\n    // mySounds[2] = loadSound('2.mp3');\n    mySounds[0] = loadSound('3.mp3');\n    mySounds[1] = loadSound('4.mp3');\n    mySounds[2] = loadSound('5.mp3');\n    mySounds[3] = loadSound('6.mp3');\n    mySounds[4] = loadSound('7.mp3');\n    // mySounds[8] = loadSound('5.mp3');\n    mySounds[5] = loadSound('9.mp3');\n    mySounds[6] = loadSound('10.mp3');\n    mySounds[7] = loadSound('11.mp3');\n    mySounds[8] = loadSound('12.mp3');\n    mySounds[9] = loadSound('13.mp3');\n    // mySounds[14] = loadSound('14.mp3');\n    // mySounds[15] = loadSound('15.mp3');\n    mySounds[10] = loadSound('16.mp3');\n    mySounds[11] = loadSound('17.mp3');\n    mySounds[12] = loadSound('18.mp3');\n    mySounds[13] = loadSound('19.mp3');\n    mySounds[14] = loadSound('20.mp3');\n    mySounds[15] = loadSound('21.mp3');\n    mySounds[16] = loadSound('22.mp3');\n    mySounds[17] = loadSound('23.mp3');\n    // mySounds[18] = loadSound('24.mp3');\n\n\n\n}\n\nfunction setup() {\n    createCanvas(800, 400);\n    background(50);\n    button = createButton('play');\n    button.mousePressed(start);\n    console.log(button);\n    circles = createCircles();\n    console.log(circles);\n    fill(255);\n\n}\n\nfunction start() {\n    // console.log('pressed');\n    // for (let i = 0; i < soundsLength; i++) {\n    //     mySounds[i].play();\n    // }\n\n    playing = true;\n\n}\n\nfunction draw() {\n    if (playing) {\n        background(50);\n        for (let i = 0; i < circles.length; i++) {\n            fill(255);\n            ellipse(circles[i].x, circles[i].y, circles[i].circleSize);\n\n            circles[i].x += circles[i].xSpeed;\n            circles[i].y += circles[i].ySpeed;\n            //check collisions \n            let r = circles[i].circleSize / 2;\n            if ((circles[i].x < r) || (circles[i].x > width - r)) {\n                circles[i].xSpeed = -circles[i].xSpeed;\n            }\n            if ((circles[i].y < r) || (circles[i].y > height - r)) {\n                circles[i].ySpeed = -circles[i].ySpeed;\n            }\n            //check circles compared to one another \n            for (let j = 0; j < circles.length; j++) {\n                if (j != i) {\n                    let distance = dist(circles[i].x, circles[i].y, circles[j].x, circles[j].y);\n                    // console.log(distance);\n                    if (distance <= circles[i].circleSize) {\n                        console.log(\"play sound\");\n                        mySounds[i].play();\n                    }\n\n                }\n            }\n        }\n    }\n}\n\n\n\nfunction createCircles() {\n    let circlez = [];\n    for (let i = 0; i < soundsLength; i++) {\n        let circle = {\n            x: Math.floor(random(width)),\n            y: Math.floor(random(height)),\n            xSpeed: random(-1, 1),\n            ySpeed: random(-1, 1),\n            circleSize: 20,\n            outterRadius: 60,\n        }\n        circlez[i] = circle;\n\n    }\n    return circlez;\n\n\n}"
  },
  {
    "_id": "q7aBNgYaE6BG3MQ7W",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-02-01T00:29:14.084Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ipaz7ywlhwt7ibawe9bn",
        "version": 1548980962,
        "signature": "c26464f662496a9def53f238c15749290b43be9c",
        "width": 758,
        "height": 758,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T00:29:22Z",
        "tags": [],
        "bytes": 127439,
        "type": "upload",
        "etag": "aca49359ba08f927c4e3e7f8dfd2e1ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548980962/avalanche2019/ipaz7ywlhwt7ibawe9bn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548980962/avalanche2019/ipaz7ywlhwt7ibawe9bn.jpg"
      },
      {
        "public_id": "avalanche2019/dotluwl16ib98no87q8x",
        "version": 1548980979,
        "signature": "48d2467f1eadbbe2b590d55a63d2baeca508f329",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T00:29:39Z",
        "tags": [],
        "bytes": 1788317,
        "type": "upload",
        "etag": "7a554e2d5ef270bbde53765bd69d66c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548980979/avalanche2019/dotluwl16ib98no87q8x.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548980979/avalanche2019/dotluwl16ib98no87q8x.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:04:39.265Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Invisible Sound Path Tilemap. (It's just a concept by far, what I want is to make sound travel through the map, being recorded and amplified multiple times, to create some weird experience.)",
    "inspiration_name": "Bruce Nauman Sound Pieces"
  },
  {
    "_id": "qANGXfvFsKNKn8bqk",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-13T23:30:45.03Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vclgatuxakliaroqydjc",
        "version": 1552520019,
        "signature": "5825a86705193d191bcb0a82e3de50aa459075c3",
        "width": 720,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-13T23:33:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 18446588,
        "type": "upload",
        "etag": "f7919bc75d0c80fcaf7d92a438348356",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552520019/avalanche2019/vclgatuxakliaroqydjc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552520019/avalanche2019/vclgatuxakliaroqydjc.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11010443",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11026603,
        "duration": 13.383333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Creepy Claws",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet n;\n\nlet x;\nlet r, g, b;\n\nfunction setup() {\n  createCanvas(700, 700);\n  myTurtle = new Turtle();\n  // noLoop();\n  x = 80;\n}\n\nfunction draw() {\n  background(0);\n\n  n = 10 + noise(frameCount * 0.006, frameCount * 0.006) * -2;\n\n  for (let i = 0; i < 30; i++) {\n    r = map(i, 19, 0, 255, 10);\n    g = map(i, 0, 19, 30, 150);\n    b = map(i, 19, 0, 70, 200);\n\n    stroke(r, g, b);\n    myTurtle.penUp();\n    myTurtle.moveTo(x + i * 20, height - 50);\n    myTurtle.turnTo(-135 * n);\n    myTurtle.penDown();\n\n    drawFeather(100);\n  }\n}\n\nfunction drawFeather(length) {\n  if (length < 2) {\n    return;\n  }\n  strokeWeight(length / 10);\n\n  myTurtle.moveForward(length * 0.5);\n\n  myTurtle.turnRight(n);\n  myTurtle.moveForward(length * 0.5);\n\n  myTurtle.pushState();\n  myTurtle.turnRight(n * -length);\n  drawFeather(length * 0.9);\n  myTurtle.popState();\n}\n\nfunction drawLeft() {\n  // myTurtle.pushState();\n  myTurtle.penDown();\n  strokeWeight(length / 10);\n  myTurtle.moveForward(length * 0.1);\n  myTurtle.turnLeft(random(10, 70));\n  myTurtle.moveForward(length / 4);\n  // myTurtle.popState();\n}\n\nfunction drawRight() {\n  // myTurtle.pushState();\n  myTurtle.penDown();\n  strokeWeight(length / 10);\n  myTurtle.moveForward(length * 0.1);\n  myTurtle.turnLeft(random(10, 70));\n  myTurtle.moveForward(length / 4);\n  // myTurtle.popState();\n}"
  },
  {
    "_id": "qFjnw6CZ3fFmMRmo8",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T15:54:51.353Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Odd scrambling of notation from 'smells like teen spirit' - I thought I'd get a song, but nooooo....",
    "inspiration_name": "Smells like Teen Spirit",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// Smells like Teen Spirit\n\n\n// Create the synth.\nvar synth = new Tone.Synth({\n  oscillator : {\n  \ttype : 'fmsquare',\n        modulationType : 'sawtooth',\n        modulationIndex : 12,\n        harmonicity: 11.4\n  },\n  envelope : {\n  \tattack : 0.001,\n        decay : 0.1,\n        sustain: 0.1,\n        release: 0.1\n  }\n}).toMaster() \n\n\nsynth.triggerAttackRelease('C4', '8n')\n\nTone.Transport.bpm.value = 200; // how fast the beat would play\n\nwindow.onmousedown = () => {\n    // Play the melody!\n\n    const melody = generate();\n    play(melody);\n};\n\nconst fmajor = ['A5', 'C5', 'D5', 'F5', 'D4', 'C5', 'Bb4', 'A4','A4','A4','G4','A4','G4','F4','E4'];\nconst fminor = ['F3', 'E3', 'F3', 'E3', 'F3', 'E3', 'F3','E3','E3','D3'];\nconst notes = fmajor;\n\nlet degree = 0;\n\nfunction generate() {\n    // choose a starting place\n    degree = randomInt(0, 15);\n\n    // generate some measures\n    const a = generateMeasure();\n    const b = generateMeasure();\n    const c = generateMeasure();\n\n    // last note should be the tonic\n    c[c.length - 1][0] = notes[0];\n\n    // arrange the measures and return\n    return [].concat(a, b, a, b, c);\n}\n\nfunction generateMeasure() {\n    const m = [];\n\n    let timeLeft = Tone.Time('1m');\n\n    while (timeLeft.toSeconds() > 0) {\n        // choose note\n        const change = sample([-1, 1, -1, 1, 2, -2, 3, -3]);\n        degree = constrain(degree + change, 0, 7);\n        const note = notes[degree];\n\n        // choose length\n        let length = Tone.Time('4n');\n        if (Math.random() < 0.5) {\n            length = Tone.Time('2n');\n        }\n        if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n            length = timeLeft;\n        }\n\n        // keep track of time\n        timeLeft = Tone.Time(timeLeft - length);\n\n        // add the note to the melody\n        m.push([note, length]);\n    }\n\n    return m;\n}\n\nfunction play(melody) {\n    let t = Tone.now();\n    for (const note of melody) {\n        console.log(note[0], note[1].toNotation());\n        if (note[0] !== 'rest') {\n            // synth.triggerAttackRelease(note[0], note[1]), t);\n            synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.05, t);\n        }\n        t += Tone.Time(note[1]);\n    }\n}\n\nconsole.log('click for music!');\n\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max + min));\n}\n\nfunction sample(data) {\n    const index = Math.floor(Math.random(data.length));\n    return data[index];\n}\n\nfunction constrain(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n}"
  },
  {
    "_id": "qFpaahMWqfm3HmpQg",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T19:36:49.939Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e3zmjkgfbio5e3shhvkk",
        "version": 1554406625,
        "signature": "ad70f3e6c2a3acb1bfa51e68a77ba349ce08c338",
        "width": 1516,
        "height": 1382,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-04T19:37:05Z",
        "tags": [],
        "bytes": 2816490,
        "type": "upload",
        "etag": "774655b610422f094fc0f7b98af35a8c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554406625/avalanche2019/e3zmjkgfbio5e3shhvkk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554406625/avalanche2019/e3zmjkgfbio5e3shhvkk.png"
      },
      {
        "public_id": "avalanche2019/emtvo59bx3rjnh93dack",
        "version": 1554406644,
        "signature": "61bcff5f17c60ffaf85f6300b7f1e39ec82e2afd",
        "width": 1480,
        "height": 1292,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-04T19:37:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 15699859,
        "type": "upload",
        "etag": "f94c9c5d89e855a11b2fb1b133bae382",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554406644/avalanche2019/emtvo59bx3rjnh93dack.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554406644/avalanche2019/emtvo59bx3rjnh93dack.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "13570579",
          "dar": "370:323"
        },
        "frame_rate": 60,
        "bit_rate": 13578256,
        "duration": 9.25,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Sea Anemone -",
    "inspiration_name": "Justin's Starter Code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nvar EXPORT = false;\n\nfunction setup() {\n    pixelDensity(1)\n    createCanvas(1280, 720);\n    frameRate(60);\n    ellipseMode(CENTER);\n    noiseDetail(1);\n}\n\n\n\nfunction draw() {\n    blendMode(MULTIPLY);\n    background(216,191,216);\n\n    blendMode(ADD);\n    fill(75,0,130);\n    var x = width * .5;\n    var y = height * .5;\n\n    for (i = 0; i < 5000; i++) {\n        var s = sin(frameCount / 90 * PI) * 50;\n\n        var offsetX = map(noise(i * .1, frameCount * .01, 0), 0, .5, -640, 640);\n        var offsetY = map(noise(i * .1, frameCount * .01, 1), 0, .5, -640, 640);\n\n        ellipse(x + offsetX, y + offsetY, s, s);\n    }\n\n\n    if (EXPORT) {\n        saveFrame(\"EXPORT\", frameCount, \"jpg\", 90);\n    }\n    if (frameCount > 90) {\n        noLoop();\n    }\n}\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n    // don't save frames once we reach the max\n    if (maxFrame && frameNumber > maxFrame) {\n        return;\n    }\n\n    if (!extension) {\n        extension = \"png\";\n    }\n    // remove the decimal part (just in case)\n    frameNumber = floor(frameNumber);\n    // zero-pad the number (e.g. 13 -> 0013);\n    var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n    save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "qKLmepsKt5Rv4vPT5",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:34:12.643Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rdpejeuxswngfnrbi2bm",
        "version": 1548459257,
        "signature": "fc9b29c8f9e535028399d6063de6ab7064731693",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:34:17Z",
        "tags": [],
        "bytes": 1457957,
        "type": "upload",
        "etag": "68e4da4b3190aa3c0a109b6732894714",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459257/avalanche2019/rdpejeuxswngfnrbi2bm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459257/avalanche2019/rdpejeuxswngfnrbi2bm.jpg"
      },
      {
        "public_id": "avalanche2019/mxn3qf5dv5u6zdspj6ou",
        "version": 1548459261,
        "signature": "2a41fd2661502dafccaf6f3e98b7394c0e073990",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:34:21Z",
        "tags": [],
        "bytes": 1372745,
        "type": "upload",
        "etag": "f81c61a21afebc2ae06eb466c9176a98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459261/avalanche2019/mxn3qf5dv5u6zdspj6ou.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459261/avalanche2019/mxn3qf5dv5u6zdspj6ou.jpg"
      },
      {
        "public_id": "avalanche2019/kdnhjkur0clvhxhueaqu",
        "version": 1548459293,
        "signature": "7292f4df67e0b52d24f0603c33759ad1c1d78369",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:34:53Z",
        "tags": [],
        "bytes": 1523447,
        "type": "upload",
        "etag": "556c15f1916c0df0930fbc832cea2ade",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548459293/avalanche2019/kdnhjkur0clvhxhueaqu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548459293/avalanche2019/kdnhjkur0clvhxhueaqu.jpg"
      }
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "qKbEKJ4dK9Y62bg5h",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T21:51:53.966Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/osamhaac5deibxuzj6xz",
        "version": 1551995549,
        "signature": "7a752f9b6b84f407ffe602d638d4a9b902ac1994",
        "width": 1268,
        "height": 952,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-07T21:52:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 10942493,
        "type": "upload",
        "etag": "7f9af977c5520e149e0d4cd67f76d81a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551995549/avalanche2019/osamhaac5deibxuzj6xz.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551995549/avalanche2019/osamhaac5deibxuzj6xz.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "14612550",
          "dar": "317:238"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 14630632,
        "duration": 5.983333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T21:57:54.332Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T23:01:13.968Z" }
      }
    ],
    "title": "",
    "description": "Mapping z space to brightness values taken from the webcam. I couldn't figure out why the rows of vertices aren't connected to each other. If anyone figures it out let me know!\n\nAlso this takes a little while to load, but once it does load it runs pretty smoothly.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/addons/p5.dom.js\n\nlet cam;\nlet cols, rows;\nlet w, h;\nlet scale = 2;\nlet terrain = [];\nlet z;\n\nfunction setup() {\n  createCanvas(640, 480, WEBGL);\n  pixelDensity(1);\n  w = width;\n  h = height;\n  cols = w / scale;\n  rows = h / scale;\n\n  cam = createCapture(VIDEO);\n  cam.size(cols, rows);\n\n  for (let x = 0; x < cam.width; x++) {\n    terrain[x] = [];\n    for (let y = 0; y < cam.height; y++) {\n      terrain[x][y] = 0;\n    }\n  }\n}\n\nfunction draw() {\n  background(0);\n  cam.loadPixels();\n  cam.hide();\n\n  // translate(0, 50);\n  translate(-width / 2, -height / 2, 0);\n  // rotateX(PI / 8);\n  // translate(-width / 2, -height / 8);\n\n  for (let y = 0; y < cam.height; y++) {\n    beginShape(TRIANGLE_STRIP);\n    for (let x = 0; x < cam.width; x++) {\n      let pixelRed = getQuick(cam, x, y)[0];\n      let pixelGreen = getQuick(cam, x, y)[1];\n      let pixelBlue = getQuick(cam, x, y)[2];\n      let pixelAlpha = getQuick(cam, x, y)[3];\n      let bright = (pixelRed + pixelBlue + pixelGreen) / 3;\n\n      // z = terrain[x][y];\n      z = map(bright, 0, 255, 0, 200);\n      // z1 = terrain[x][y + 1];\n      z1 = map(bright, 0, 255, 0, 200);\n      fill(pixelRed, pixelGreen, pixelBlue);\n      noStroke();\n      vertex(x * scale, y * scale, z);\n      vertex(x * scale, (y + 1) * scale, z1);\n    }\n    endShape();\n  }\n}\n\nfunction getQuick(img, x, y) {\n  var i = (img.width - x + 1 + img.width * y) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3]\n  ];\n}"
  },
  {
    "_id": "qN36RJszLwMsk3oof",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-25T01:55:57.403Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ab7tniy5oszzibqlfuh0",
        "version": 1553478998,
        "signature": "7610a46ffa56977a8f943523dba5f7cccba8532a",
        "width": 2560,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-25T01:56:38Z",
        "tags": [],
        "bytes": 257166,
        "type": "upload",
        "etag": "d4dd5f3a999b32b95501388fb84a0fc0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553478998/avalanche2019/ab7tniy5oszzibqlfuh0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553478998/avalanche2019/ab7tniy5oszzibqlfuh0.png"
      },
      {
        "public_id": "avalanche2019/pbv6wqjofd9qhl5oiec2",
        "version": 1553479006,
        "signature": "cb3f4b3f5b283f70b8e6c9ab1ea2fef575db7c45",
        "width": 2560,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-25T01:56:46Z",
        "tags": [],
        "bytes": 652955,
        "type": "upload",
        "etag": "177007e3758496078e9ec3e7cd5dcfbc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553479006/avalanche2019/pbv6wqjofd9qhl5oiec2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553479006/avalanche2019/pbv6wqjofd9qhl5oiec2.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Random",
    "title": "",
    "description": "A more controlled version of the random walker. Left and right arrow keys determine the direction of the agent."
  },
  {
    "_id": "qQxjB33LsHAcFoJah",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T16:39:53.094Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ps16neguun9l7whz5v47",
        "version": 1550162405,
        "signature": "8e8de5df6690fb82b98779f1b92caa6cf21604ef",
        "width": 1406,
        "height": 1144,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T16:40:05Z",
        "tags": [],
        "bytes": 3512866,
        "type": "upload",
        "etag": "034c98e91b4bcf2b5e5d22a93f470de8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550162405/avalanche2019/ps16neguun9l7whz5v47.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550162405/avalanche2019/ps16neguun9l7whz5v47.png"
      },
      {
        "public_id": "avalanche2019/j1hlvw9ox3rkclkht9fy",
        "version": 1550244431,
        "signature": "eff75df8dfadbb901fd4181ed842625e997bc535",
        "width": 1382,
        "height": 1148,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T15:27:11Z",
        "tags": [],
        "bytes": 3740868,
        "type": "upload",
        "etag": "f59aac6ed20feca1c1f519ca2ee4f20f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550244431/avalanche2019/j1hlvw9ox3rkclkht9fy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550244431/avalanche2019/j1hlvw9ox3rkclkht9fy.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Valentines Day - but yesterday was called 'Growing Mold'...",
    "inspiration_name": "Based on a 'Noise' tutorial",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nvar t;\nvar color_picker;\nvar preColor;\n\nfunction setup() {\n  createCanvas(700,700);\n  background(128, 128, 0);\n  strokeWeight(.1);\n  stroke(255, 0, 255);\n  noFill();\n  t = 100;\n  //noLoop()\n    \n  //color of quad\n  createP('Color');\n  color_picker = createInput(\"#FF00FF\", \"color\");\n}\n\nfunction draw() {  \n  translate(width/2, height/1);\n  \n  stroke(color_picker.value());\n  \n  for (var i=0; i < 90; i++) {\n   \n    rotate(i / 5.0);\n \n  var x1 = width * noise(t + 80);\n  var x2 = width * noise(t + 70);\n  var x3 = width * noise(t + 60);\n  var x4 = width * noise(t + 50);\n  var y1 = height * noise(t + 40);\n  var y2 = height * noise(t + 30);\n  var y3 = height * noise(t + 20);\n  var y4 = height * noise(t + 10);\n\n  quad(x1, y1, x2, y2, x3, y3, x4, y4);\n\n  t += 1;\n\n  if (frameCount % 800 == 0) {\n  background(128, 128, 0);  \n \n}\n}\n}"
  },
  {
    "_id": "qTAkJt2t6t3iaPmmg",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T14:44:57.472Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hcity3cvi6ifrpmkzrpw",
        "version": 1552056303,
        "signature": "26125de5760d8fe2bccb28aafab15772fc371131",
        "width": 640,
        "height": 360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T14:45:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 197096,
        "type": "upload",
        "etag": "c4e2b23fdda66ecdbd1647b1606f469c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552056303/avalanche2019/hcity3cvi6ifrpmkzrpw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552056303/avalanche2019/hcity3cvi6ifrpmkzrpw.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "1252832",
          "dar": "16:9"
        },
        "frame_rate": 24,
        "bit_rate": 1261414,
        "duration": 1.25,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/zlbyookx7vem7dzfm4qx",
        "version": 1552056307,
        "signature": "2afeb1e8727f7a3d24930832062dbdfff2e51f7d",
        "width": 640,
        "height": 360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T14:45:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 293589,
        "type": "upload",
        "etag": "8aef3f8850ba200763c43d9b34f13bbf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552056307/avalanche2019/zlbyookx7vem7dzfm4qx.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552056307/avalanche2019/zlbyookx7vem7dzfm4qx.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "1870387",
          "dar": "16:9"
        },
        "frame_rate": 24,
        "bit_rate": 1878969,
        "duration": 1.25,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-08T16:06:18.885Z" }
      }
    ],
    "title": "",
    "description": "Connecting pixels in letter MASH Network animation. I need to make the connections better throughout the length of the word and within the letter shapes.",
    "inspiration_name": "Tutorial",
    "inspiration_url": "https://knowledge.autodesk.com/support/maya/learn-explore/caas/video/youtube/watch-v-rnbY5RXMiuk.html"
  },
  {
    "_id": "qTwgjJPxfsp2o3N7C",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T17:48:22.53Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wnszkmktgmuoecwoe3vo",
        "version": 1549561711,
        "signature": "66c7761fa975abe4c0dde6d791f3446045367114",
        "width": 1170,
        "height": 936,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T17:48:31Z",
        "tags": [],
        "bytes": 439646,
        "type": "upload",
        "etag": "c71d5f9792d1a6fe787bdccc2d80f2c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549561711/avalanche2019/wnszkmktgmuoecwoe3vo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549561711/avalanche2019/wnszkmktgmuoecwoe3vo.png"
      },
      {
        "public_id": "avalanche2019/tcbru4wjk4ghgah8n8wa",
        "version": 1549561714,
        "signature": "c706b951e88c835d18acf744f0d8b0f2f3ce0010",
        "width": 1132,
        "height": 884,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T17:48:34Z",
        "tags": [],
        "bytes": 366699,
        "type": "upload",
        "etag": "48e1b75d7ee825a47a752bc1c9d7a149",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549561714/avalanche2019/tcbru4wjk4ghgah8n8wa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549561714/avalanche2019/tcbru4wjk4ghgah8n8wa.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T18:21:44.23Z" }
      },
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T23:10:16.332Z" }
      }
    ],
    "title": "",
    "description": "Experimenting with random in stroke, position of line and color palette. Made with Processing.",
    "inspiration_name": "String Art",
    "inspiration_url": "https://i.pinimg.com/736x/2d/4f/3a/2d4f3a46a8a6a5b6be256512e08411c6--string-installation-art-installations.jpg"
  },
  {
    "_id": "qXoC2HKJvpvHDcozD",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T19:46:08.148Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sgk0wvaiicgm8gv8nkef",
        "version": 1550864798,
        "signature": "9ed3fa38f581ff3eefebdcbb7769cf8b04893f7e",
        "width": 1740,
        "height": 1736,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T19:46:38Z",
        "tags": [],
        "bytes": 471808,
        "type": "upload",
        "etag": "621000ad557782a270a0a5cb7ce2049d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550864798/avalanche2019/sgk0wvaiicgm8gv8nkef.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550864798/avalanche2019/sgk0wvaiicgm8gv8nkef.jpg"
      },
      {
        "public_id": "avalanche2019/zkmokvgqpqfxktrqjawc",
        "version": 1550864824,
        "signature": "a26c2f1d94d7c0b0dfb6663fded59cc0d9de12d6",
        "width": 984,
        "height": 984,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T19:47:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 2036488,
        "type": "upload",
        "etag": "02921c86cd5cb408e77d3b7189392385",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550864824/avalanche2019/zkmokvgqpqfxktrqjawc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550864824/avalanche2019/zkmokvgqpqfxktrqjawc.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "3047994",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 3054350,
        "duration": 5.333984,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Boxes"
  },
  {
    "_id": "qduZKY623ybxP4hzP",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T19:30:57.934Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "qgZWdHoatq8Kw5wdq",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-29T17:29:32.956Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/czscf299mqseiipfdpk5",
        "version": 1553880578,
        "signature": "97fd423b69fd93db508883a380a8dc758c0c7aeb",
        "width": 994,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T17:29:38Z",
        "tags": [],
        "bytes": 386453,
        "type": "upload",
        "etag": "f3e5b8b5723d0f5f48e4c0ebea87c507",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553880578/avalanche2019/czscf299mqseiipfdpk5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553880578/avalanche2019/czscf299mqseiipfdpk5.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Elephant iii",
    "code": "https://www.dropbox.com/s/j07087jddr949hq/Screenshot%202019-03-29%2013.29.05.png?dl=0"
  },
  {
    "_id": "qj6rg3GTvocsoG6SR",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T18:24:46.816Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qtxo8cjqj8z8wwcbnpt0",
        "version": 1554402456,
        "signature": "acd5e00d313707b3d55a6f95ad768d6ce0d9b637",
        "width": 540,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-04T18:27:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 137424,
        "type": "upload",
        "etag": "3c0bf2dca13b4f81c34037794e551b39",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554402456/avalanche2019/qtxo8cjqj8z8wwcbnpt0.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554402456/avalanche2019/qtxo8cjqj8z8wwcbnpt0.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2250",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6161741",
          "dar": "3:4"
        },
        "is_audio": false,
        "frame_rate": 100,
        "bit_rate": 6467011,
        "duration": 0.17,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-04T23:18:01.2Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T03:29:07.058Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-05T05:20:51.356Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "funny",
        "created_at": { "$date": "2019-04-05T20:17:36.83Z" }
      }
    ],
    "title": "",
    "description": "Plug Faces -- having trouble changing frame rate in the translation from PS to Quicktime."
  },
  {
    "_id": "qkiazutpL6XSw9j4H",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-10T16:39:33.738Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s0qyub7mwwqttozlgivi",
        "version": 1554914391,
        "signature": "dee9f108ae456284a94183a757af489f52e67154",
        "width": 1260,
        "height": 680,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T16:39:51Z",
        "tags": [],
        "bytes": 53090,
        "type": "upload",
        "etag": "0aa20e893d365f6d3c9d7dfdae8a552d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554914391/avalanche2019/s0qyub7mwwqttozlgivi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554914391/avalanche2019/s0qyub7mwwqttozlgivi.png"
      },
      {
        "public_id": "avalanche2019/us7ufw6vovw4airprxl2",
        "version": 1554914402,
        "signature": "d8883b8041e3b8920c76b154aa30916a3d80f3eb",
        "width": 1520,
        "height": 1756,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T16:40:02Z",
        "tags": [],
        "bytes": 213560,
        "type": "upload",
        "etag": "5ce45d1e92cb386759b6a1012decf03c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554914402/avalanche2019/us7ufw6vovw4airprxl2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554914402/avalanche2019/us7ufw6vovw4airprxl2.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-10T17:14:51.126Z" }
      }
    ],
    "title": "",
    "description": "Fun with Dick and Jane - with emoticons, but want to try Markov Chains(with foreign language)? and input of emoticons -- (still in progress)",
    "code": "injectInterface();\nconst submitButton = document.getElementById(\"submit\");\nsubmitButton.addEventListener('click', buildTemplate);\nconst resetButton = document.getElementById(\"reset\");\nresetButton.addEventListener('click', reset);\n\n//various emoticons\n//(·.·) (>_<)\n//(^-^) (˚Δ˚)\n//\\(o_o)/ ┌(˘⌣˘)ʃ\n//ᕙ༼*◕_◕*༽ᕤ ╭∩╮(-_-)╭∩╮\n//(*･▽･*) (✖╭╮✖)\n\nfunction buildTemplate() {\n    const emoticon1 = document.getElementById(\"emoticon1\").value || \"(·.·)\";\n    const emoticon2 = document.getElementById(\"emoticon2\").value || \"(·.·)\";\n    const emoticon3 = document.getElementById(\"emoticon3\").value || \"(·.·)\";\n    const emoticon4 = document.getElementById(\"emoticon4\").value || \"(·.·)\";\n    const emoticon5 = document.getElementById(\"emoticon5\").value || \"(·.·)\";\n    const emoticon6 = document.getElementById(\"emoticon6\").value || \"(·.·)\";\n\n    const amendment = `“Look, Look, look. \n    Oh, oh, oh. \n    Oh, oh. \n    Oh, look.” \n    ${emoticon1}\n    \n\n    “See It Go” Jane said, \n    “Look, look. \n    I see a big yellow car.  \n    See the yellow car go.”\n    \n    Sally said, “I see it.  \n    I see the big yellow car.  \n    I want to go away in it.  \n    I want to go away, away.” \n    ${emoticon2} \n    \n\n    Dick said, “Look up, Sally.  \n    You can see something.  \n    It is red and yellow.  \n    It can go up, up, up.  \n    It can go away.”\n    \n\n    Sally said, “I want to go up.  \n    I want to go up in it.  \n    I want to go up, up, up.  I want to go up and away.” \n    ${emoticon3} \n    \n\n    “Look, Sally,” said Dick. \n    “Here is Father in a boat.  \n    You can go away in it.” \n    \n    “Jump in, jump in,” said Father.  \n    “Jump in the big blue boat.” \n    \n    “We can go,” said Sally. \n    “We can go away in a boat.  \n    Away in a big blue boat.” \n    ${emoticon4} \n    \n\n    “One, two, three,” said Jane. \n    “Three news dolls for my birthday! \n    Three baby dolls that talk!  \n    All for my birthday! \n    Now I have a big doll family.  \n    Thank you, thank you, thank you.  \n    This is a happy birthday.  \n    A happy, happy birthday for me.” \n    ${emoticon6}`\n\n\n    const outputDiv = document.getElementById('output');\n    const inputDiv = document.getElementById('input');\n\n    inputDiv.classList.add(\"hidden\");\n    outputDiv.classList.remove(\"hidden\");\n\n    const messageDiv = document.getElementById('message');\n    messageDiv.innerText = amendment;\n}\n\nfunction reset() {\n    const outputDiv = document.getElementById('output');\n    const inputDiv = document.getElementById('input');\n\n    inputDiv.classList.remove(\"hidden\");\n    outputDiv.classList.add(\"hidden\");\n}\n\n\nfunction injectInterface() {\n\n    document.body.insertAdjacentHTML('beforeend', `\n<style>\nbody {\n    font-family: \"Overpass Mono\", sans;-serif;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#input,\n#output\n{\n    font-size: 18px;\n}\n\n#output\n{\n    width: 600px;\n}\n\n#message {\n    margin-bottom: 30px;\n}\n#input input {\n    border: 1px solid black;\n    padding: 5px;\n    font-size: 18px;\n    margin-bottom: 10px;\n    width: 250px;\n}\n\n#input label {\n    font-family: \"Overpass Mono\", sans-serif;\n    font-size: 12px;\n    width: 150px;\n    display: inline-block;\n}\n\nbutton {\n    font-family: \"Overpass Mono\", sans-serif;\n    font-size: 12px;\n    background: white;\n}\n\n.hidden {\n   display: none;\n}\n</style>\n`);\n\n    document.body.insertAdjacentHTML('beforeend', `\nFun with Dick and Jane\n<div id=\"input\">\n    <div><label>emoticon1</label><input id=\"emoticon1\"></div>\n    <div><label>emoticon2</label><input id=\"emoticon2\"></div>\n    <div><label>emoticon3</label><input id=\"emoticon3\"></div>\n    <div><label>emoticon4</label><input id=\"emoticon4\"></div>\n    <div><label>emoticon5</label><input id=\"emoticon5\"></div>\n    <div><label>emoticon6</label><input id=\"emoticon6\"></div>\n    <div><label></label><button id=\"submit\">submit</button></div>\n</div>\n<div id=\"output\" class=\"hidden\">\n    <div id=\"message\"></div>\n    <button id=\"reset\">reset</button>\n</div>\n`);\n}",
    "inspiration_name": "Justin's template starter code"
  },
  {
    "_id": "qkizEfH2prvcbsC3Q",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-25T16:32:23.138Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hsetx9xqs8ywjzvlcf6y",
        "version": 1556209953,
        "signature": "2d45bfaa2431adc496794c367d05e74647c3728c",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-25T16:32:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 11179742,
        "type": "upload",
        "etag": "4ef3bd437f860608e59922133433daa8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556209953/avalanche2019/hsetx9xqs8ywjzvlcf6y.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556209953/avalanche2019/hsetx9xqs8ywjzvlcf6y.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "8497118",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 10852054,
        "duration": 8.241567,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Will add some structure to make this more recognizably *music*. But the basic components are in place."
  },
  {
    "_id": "qsKJKZBsk22CHSKBb",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T16:51:21.934Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u8rkj6qo9lssbjsypmqt",
        "version": 1552064051,
        "signature": "b7992286f7c4b6f34fb9ecabda36bfa0c22d29ad",
        "width": 990,
        "height": 988,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-08T16:54:11Z",
        "tags": [],
        "bytes": 31709,
        "type": "upload",
        "etag": "ed51793559bbf7366f67916b151db7f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552064051/avalanche2019/u8rkj6qo9lssbjsypmqt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552064051/avalanche2019/u8rkj6qo9lssbjsypmqt.jpg"
      },
      {
        "public_id": "avalanche2019/pxs0awubhwvwnt9upxon",
        "version": 1552064067,
        "signature": "1217a44fd42246029d9122e712fc7db507bfffa6",
        "width": 988,
        "height": 984,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T16:54:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 2931221,
        "type": "upload",
        "etag": "b7fd26df07a8bb096c480bac006af0e8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552064067/avalanche2019/pxs0awubhwvwnt9upxon.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552064067/avalanche2019/pxs0awubhwvwnt9upxon.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "652992",
          "dar": "247:246"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 662111,
        "duration": 35.416667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "It’s a rainbow!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\nfunction setup() {\n  createCanvas(500, 500);\n  colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  // createP(\"x\");\n  // xSlider = createSlider(0, 100, 10, 0.001);\n  // createP(\"y\");\n  // ySlider = createSlider(0, 200, 10, 0.001);\n}\n\nfunction draw() {\n  frameRate(10);\n  background(255);\n\n  img = createImage(20, 20);\n  img.loadPixels();\n\n  for (var y = 0; y < img.height; y++) {\n    for (var x = 0; x < img.width; x++) {\n      var oscB = (sin(frameCount * 0.05) + 1) * 2 + 0.1;\n      var oscC = sin(frameCount * 1);\n      var oscD = cos(frameCount * 0.5);\n      var oscE = sin(frameCount) * 0.05;\n      var oscA = sin(\n        x * oscC + y * oscD * 0.3 + frameCount * oscB + x * y * oscE\n      );\n      var hue = (oscA + 1) / 2;\n      var c = color(hue, 1, 0.9);\n      img.set(x, y, c);\n    }\n  }\n\n  img.updatePixels();\n\n  noSmooth();\n  image(img, 0, 0, width, height);\n}"
  },
  {
    "_id": "qsSdwbeyH7pLjwyAF",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T13:34:05.155Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jjktd9rsqfh2xpywcce4",
        "version": 1549546904,
        "signature": "c3da2917db0ccd36a7a247caea7070a47f9e9f97",
        "width": 480,
        "height": 300,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T13:41:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 2772833,
        "type": "upload",
        "etag": "2e40f2fee5a77a601d450419c8a17ee2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549546904/avalanche2019/jjktd9rsqfh2xpywcce4.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549546904/avalanche2019/jjktd9rsqfh2xpywcce4.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "716863",
          "dar": "8:5"
        },
        "frame_rate": 15,
        "bit_rate": 718660,
        "duration": 30.866667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ei8uwa0qhgedox9kn6gx",
        "version": 1549546964,
        "signature": "0a76283c5a070d954db93b756a411168161dcade",
        "width": 1052,
        "height": 598,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T13:42:44Z",
        "tags": [],
        "bytes": 128318,
        "type": "upload",
        "etag": "67a4fa7c5a181c827a644f221a87a4a2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549546964/avalanche2019/ei8uwa0qhgedox9kn6gx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549546964/avalanche2019/ei8uwa0qhgedox9kn6gx.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-02-05T19:59:07.795Z" }
      },
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-05T22:26:41.814Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-06T15:13:14.366Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-08T02:38:59.016Z" }
      }
    ],
    "title": "",
    "description": "Dancing Bars",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\n//**refresh to get a different result**\nvar bars = [];\nvar total = 26;\nvar indexList = [];\nvar slider;\n\nfunction randomIndexList(count) {\n  var tempIndexList = [];\n  var randomIndexList = [];\n  for (var i = 0; i < count; i++) {\n    tempIndexList.push(i);\n  }\n  for (var i = 0; i < count; i++) {\n    var j = floor(random(tempIndexList.length));\n\n    randomIndexList.push((tempIndexList.splice(j, 1))[0]);\n  }\n  return randomIndexList;\n}\n\nfunction setup() {\n  createCanvas(1920, 1280);\n  background(0);\n  colorMode(HSB, 100);\n  angleMode(DEGREES)\n  //bar1 = new Bar(300, 300, 0, 30, 400);\n  //bar2 = new Bar(300, 300, -90, 30, 400); // negative = conterclockwise\n\n  indexList = randomIndexList(total);\n\n  var rotspeed = random(0.0, 0.2);\n  slider = createSlider(0, 2, 0, 0);\n  slider.position(100, 10);\n  slider.style('width', '80px');\n\n  //var rot = random(0, 60);\n  for (var i = 0; i < 10; i++) {\n    var spacing = 130;\n    var bar = new Bar(200 + i * spacing, 150, 0, 30, 400, rotspeed);\n    bars.push(bar);\n  }\n\n  //var rotspeed = 0.05\n  //var rot = random(-90, -160);\n  for (var i = 0; i < 8; i++) {\n    var spacing = 130;\n    var bar = new Bar(300, i * spacing + 200, -120, 30, 700, rotspeed);\n    bars.push(bar);\n  }\n\n  for (var i = 0; i < 8; i++) {\n    var spacing = 130;\n    var bar = new Bar(900, i * spacing + 200, 120, 30, 700, rotspeed);\n    bars.push(bar);\n  }\n\n}\n\nfunction draw() {\n\n  // for (let bar of bars) {\n  //   bar.show();\n  // }\n  //colorMode(RGB, 255);\n  background(80, 77, 28);\n  //colorMode(HSB, 100);\n  for (var i = 0; i < indexList.length; i++) {\n    bars[indexList[i]].show();\n  }\n}\n\nclass Bar {\n  constructor(x, y, rot, size, length, rotspeed) {\n    this.x = x;\n    this.y = y;\n    this.speedY = 10;\n    this.size = size;\n    this.offset = random(360);\n    this.length = length;\n    this.loffset = random(360);\n    this.rotspeed = rotspeed;\n    this.col1 = color(random(100), 65, 80);\n    this.col2 = color((hue(this.col1) + 33) % 100, 65, 80);\n    this.col3 = color((hue(this.col2) + 33) % 100, 65, 80);\n    this.rot = rot;\n  }\n\n  show() {\n    stroke(255);\n    noStroke(); //strokeWeight(4);\n    push();\n    translate(this.x, this.y);\n    rotate(this.rot + millis() * slider.value() * 0.1);\n    //rotate(this.rot + millis() * this.rotspeed);\n    var yoffset = sin(millis() * 0.2 + this.offset) * 100;\n    var point1 = {\n      x: 0,\n      y: 0 + yoffset,\n    };\n    var point2 = {\n      x: -sin(60) * this.size,\n      y: cos(60) * this.size + yoffset,\n    };\n    var point3 = {\n      x: 0,\n      y: this.size + yoffset,\n    };\n    var point4 = {\n      x: sin(60) * this.size,\n      y: cos(60) * this.size + yoffset,\n    }\n    //quad(0, 0, -sin(PI / 3) * this.size, -cos(PI / 3) * this.size, 0, -this.size, sin(PI / 3) * this.size, -cos(PI / 3) * this.size);\n    var newlength = this.length + sin(millis() * 0.2 + this.loffset) * 300;\n    fill(this.col1);\n    quad(point1.x, point1.y, point2.x, point2.y, point3.x, point3.y, point4.x, point4.y);\n    fill(this.col2);\n    quad(point2.x, point2.y, point2.x, point2.y + newlength, point3.x, point3.y + newlength, point3.x, point3.y);\n    fill(this.col3);\n    quad(point3.x, point3.y, point3.x, point3.y + newlength, point4.x, point4.y + newlength, point4.x, point4.y);\n    pop();\n  }\n}"
  },
  {
    "_id": "qsfLpQWq5E46jqyzJ",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T00:19:39.722Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/njekr9furnvbx0zulb6k",
        "version": 1554943567,
        "signature": "31e2adc13291e48bb6dd8e5a21703b6e61057861",
        "width": 3766,
        "height": 5386,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T00:46:07Z",
        "tags": [],
        "bytes": 500600,
        "type": "upload",
        "etag": "6521fec984b74ff1a379565b24b722e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554943567/avalanche2019/njekr9furnvbx0zulb6k.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554943567/avalanche2019/njekr9furnvbx0zulb6k.png"
      },
      {
        "public_id": "avalanche2019/swm0yc3vxak4r6bvhpxg",
        "version": 1555095687,
        "signature": "e29dbfe8de85eb8affefc1f46c9b1fed7602434a",
        "width": 1474,
        "height": 1640,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:01:27Z",
        "tags": [],
        "bytes": 711084,
        "type": "upload",
        "etag": "923efdc1fcddd1af04e9762312289801",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555095687/avalanche2019/swm0yc3vxak4r6bvhpxg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555095687/avalanche2019/swm0yc3vxak4r6bvhpxg.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-11T04:37:12.453Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T16:32:49.54Z" }
      }
    ],
    "title": "",
    "description": "A Markov chain writes first lines of novels (based on 100 well-known opening lines).\n\nSecond image is some of the base text used as input to the Markov chain.",
    "code": "const infile = './data/first_lines.txt';\n\n// PARSE INPUT DATA /////////////////////////////////////////////////////\nfunction readDatasheet(file) {\n    const raw_file = new XMLHttpRequest();\n    let file_contents = '';\n    raw_file.open(\"GET\", file, false);\n    raw_file.onreadystatechange = function () {\n        if(raw_file.readyState === 4) {\n            if(raw_file.status === 200 || raw_file.status == 0) {\n                file_contents = raw_file.responseText;\n            }\n        }\n    }\n    raw_file.send(null);\n    return file_contents;\n}\n\nfunction parseDatasheet() {\n    const data = [];\n    const datasheet = infile;\n    const lines = readDatasheet(datasheet).split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        data.push(lines[i]);\n    }\n    \n    return data;\n}\n\n\n// MARKOV LOGIC /////////////////////////////////////////////////////\nfunction main() {\n    const model = generateModel(getModelInput());;\n    const output_text = generateText(getRandSeed(), model);\n    document.body.innerHTML = output_text;\n    \n    function getRandSeed() {\n        const words = getModelInput().split(' ');\n        let rand_word = sample(words);\n        if (Math.random() < 1) {\n            rand_word = 'which'\n        }\n        return rand_word;\n    }\n\n    function getModelInput() {\n        data = parseDatasheet();\n        model_input = '';\n        for (let i = 0; i < data.length; i++) {\n            model_input = model_input + `${data[i]} `;\n        }\n    \n        return model_input;\n    }\n    \n    function generateModel(input_text) {\n        const words = input_text.split(\" \");\n        const model = {};\n    \n        // loop through all the words except the last one.\n        for (let i = 0; i < words.length - 1; i++) {\n            const target_word = words[i];\n            const next_word = words[i + 1];\n    \n            // if the model doesn't contain the target word, add it.\n            if (!model[target_word]) {\n                model[target_word] = [];\n            }\n    \n            // // add the next word to the possibilities for target_word\n            model[target_word].push(next_word);\n        }\n    \n        return model;\n    }\n    \n    function generateText(first_word, model) {\n        // start with the word passed in\n        let output_text = first_word;\n        let current_word = first_word;\n        for (let i = 0; i < 120; i++) {\n            // choose the next word by sampling from options in the model\n            current_word = sample(model[current_word]);\n    \n            // append word to output\n            output_text += \" \";\n            output_text += current_word;\n    \n            // if we get to a word that ends with \".\" we are done.\n            const last_character = current_word.substr(current_word.length - 1);\n            if (last_character === \".\") {\n                break;\n            }\n        }\n        return output_text;\n    }\n    \n    function sample(array) {\n        const index = Math.floor(Math.random() * array.length);\n        return array[index];\n    }\n}\n\nfunction refresh() {\n    location.reload();\n}\n\nmain()"
  },
  {
    "_id": "qveRQZu7egaMESPbY",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T19:33:02.609Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bmr5p3lxmgelx5gyarnc",
        "version": 1549049650,
        "signature": "f457d37b17c618e192113ff615e86d83521e2eb8",
        "width": 7200,
        "height": 5400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T19:34:10Z",
        "tags": [],
        "bytes": 5651948,
        "type": "upload",
        "etag": "3bf615072e5954a04047a4fdbcc1ed81",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549049650/avalanche2019/bmr5p3lxmgelx5gyarnc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549049650/avalanche2019/bmr5p3lxmgelx5gyarnc.jpg"
      },
      {
        "public_id": "avalanche2019/bnsgqjd55unjhvq6rs2q",
        "version": 1549049661,
        "signature": "b9fe2c6ac2298bfcdba658859fa50e822c3ca831",
        "width": 7200,
        "height": 5400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T19:34:21Z",
        "tags": [],
        "bytes": 3399490,
        "type": "upload",
        "etag": "469bf6f44c27aa774ac77b09220c2733",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549049661/avalanche2019/bnsgqjd55unjhvq6rs2q.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549049661/avalanche2019/bnsgqjd55unjhvq6rs2q.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:19:31.065Z" }
      }
    ],
    "title": "",
    "description": "Shapes and Lines."
  },
  {
    "_id": "qwNYAoRW9xgbGHAGz",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T16:16:05.194Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bkpesarb8ntrqiuxnqee",
        "version": 1557418650,
        "signature": "72a61b29ecf4845e510199836f151a0aed5d2aaa",
        "width": 956,
        "height": 472,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-09T16:17:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 86258,
        "type": "upload",
        "etag": "a11ea46a19f93bbbde9f9d5a593138b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557418650/avalanche2019/bkpesarb8ntrqiuxnqee.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557418650/avalanche2019/bkpesarb8ntrqiuxnqee.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "52541",
          "dar": "239:118"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 56873,
        "duration": 12.133267,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/y4n2l718tyoscubwxili",
        "version": 1557418655,
        "signature": "459b1abc549c8d4d79db1046e34a124b2a99b5ea",
        "width": 956,
        "height": 472,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-09T16:17:35Z",
        "tags": [],
        "bytes": 27457,
        "type": "upload",
        "etag": "8ce4538afa5db7ab20a02dd2340c215a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557418655/avalanche2019/y4n2l718tyoscubwxili.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557418655/avalanche2019/y4n2l718tyoscubwxili.jpg"
      },
      {
        "public_id": "avalanche2019/cfwluou5wiflbeqpbij7",
        "version": 1557418657,
        "signature": "6537a1bbf9d5300cb0d12031af7040350fc7187e",
        "width": 956,
        "height": 472,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-09T16:17:37Z",
        "tags": [],
        "bytes": 26854,
        "type": "upload",
        "etag": "21a6310373381e4b4a62deabc6420429",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557418657/avalanche2019/cfwluou5wiflbeqpbij7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557418657/avalanche2019/cfwluou5wiflbeqpbij7.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this microgame, I have created a coin pickup interaction using a mouse. \nUse arrow keys to move around the platform. As you collect your coin, the color changes to gray. Avoid going outside the platform boundary; else you will fall.\nI have created the elements in Illustrator and used p5.play.js to develop the microgame.",
    "inspiration_name": "Coin Pickup Basic",
    "inspiration_url": "http://molleindustria.github.io/p5.play/examples/index.html?fileName=collisions5.js#",
    "code": "// Program to move a ball and pickup a coin. \n// In the basic version, only the ball will move around and collect the coin. \n// In the advanced, ball will jump and pick coins.\n\n// Reference: http://molleindustria.github.io/p5.play/examples/index.html?fileName=collisions5.js#\n\n// Github link:\n// https://github.com/akshansh2593/CompForm/tree/master/coinPickup_basic\n\n\nvar ball;\nvar coin;\nvar platform;\nvar GRAVITY = 1;\n\nfunction setup() {\n    createCanvas(800, 400);\n\n    ball = createSprite(300, 150);\n    ball.addImage('main', loadImage('sketches/ball.png'));\n    // ball.debug = true;\n\n    coin = createSprite(500, 200);\n    coin.addImage('main', loadImage('sketches/coin.png'));\n    coin.addImage('transformed', loadImage('sketches/coinTaken.png'));\n    coin.setCollider('circle', 0, 0, 50);\n    // coin.debug = true;\n\n    platform = createSprite(400, 300);\n    platform.addImage(loadImage('sketches/platform.png'));\n\n    ball.depth = 10;\n}\n\nfunction draw() {\n    background(255, 255, 255);\n\n    //if no arrow input set velocity to 0\n    ball.velocity.x = 0;\n\n    if (keyIsDown(LEFT_ARROW))\n        ball.velocity.x = -5;\n    if (keyIsDown(RIGHT_ARROW))\n        ball.velocity.x = 5;\n\n    //instead of checking the colliders or bounding box overlaps\n    //I can just check a point against a collider\n    if (coin.overlapPoint(ball.position.x, ball.position.y))\n        coin.changeImage('transformed');\n\n    //Or check a point against the pixels of a sprite animation or image\n    //if the bottom of the ball is not overlapping with the non transparent pixels\n    //of the platform make it fall\n    if (platform.overlapPixel(ball.position.x, ball.position.y + 30) == false)\n        ball.velocity.y += GRAVITY;\n\n    //if the bottom of the ball is overlapping the non transparent pixels\n    //of the platform move it up one pixel until it doesn't overlap anymore\n    while (platform.overlapPixel(ball.position.x, ball.position.y + 30)) {\n        ball.position.y--;\n        ball.velocity.y = 0;\n    }\n\n    drawSprites();\n}"
  },
  {
    "_id": "r6WhjmwoAkZ875Kaj",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T19:24:49.661Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hqsxgihslcaechk5gxpt",
        "version": 1549654097,
        "signature": "a74f508d4d36af363eb6744a630c11ebaf9cfa40",
        "width": 1252,
        "height": 1234,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T19:28:17Z",
        "tags": [],
        "bytes": 793295,
        "type": "upload",
        "etag": "26e4aa69192533af666ab72df9479015",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549654097/avalanche2019/hqsxgihslcaechk5gxpt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549654097/avalanche2019/hqsxgihslcaechk5gxpt.png"
      },
      {
        "public_id": "avalanche2019/qs3jxktsnbpknsayworv",
        "version": 1549654101,
        "signature": "c13c391e30548d69c76c4a81a1c8f500170a0239",
        "width": 1248,
        "height": 1252,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T19:28:21Z",
        "tags": [],
        "bytes": 996134,
        "type": "upload",
        "etag": "5b3cb6e1ab8e937ae03e6c1c2ac474e7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549654101/avalanche2019/qs3jxktsnbpknsayworv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549654101/avalanche2019/qs3jxktsnbpknsayworv.png"
      },
      {
        "public_id": "avalanche2019/a0dtahhdvcrgikgeergo",
        "version": 1549654103,
        "signature": "bcba6f51c9453c0324a23b87d4b9f93db30654f4",
        "width": 1280,
        "height": 1272,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T19:28:23Z",
        "tags": [],
        "bytes": 1086841,
        "type": "upload",
        "etag": "bc1827b1d8320aa2a417c1bd93344751",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549654103/avalanche2019/a0dtahhdvcrgikgeergo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549654103/avalanche2019/a0dtahhdvcrgikgeergo.png"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2020-09-17T21:55:46.09Z" }
      }
    ],
    "title": "",
    "description": "Applying a random image from the [Unsplash API](https://source.unsplash.com/) to the texture of randomly drawn shapes on a random color background with a random color frame 🙃",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nlet image;\nfunction preload() {\n  // load random image from Unsplash API\n  image = loadImage(\"https://source.unsplash.com/random/300x300\");\n}\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  colorMode(HSB, 100);\n  noStroke();\n\n  let s = 50;\n  let b = 90;\n  colorOptions = [\n    color(10, s, b),\n    color(30, s, b),\n    color(50, s, b),\n    color(70, s, b),\n    color(90, s, b)\n  ];\n  background(colorOptions[floor(random(colorOptions.length))]);\n\n  // center\n  push();\n  // translate(300, 300);\n\n  for (i = 0; i < 15; i++) {\n    rotate(i);\n    texture(image);\n    rect(random(-300, 300), random(-300, 300), random(15, 60), random(20, 400));\n    ellipse(random(-300, 300), random(-300, 300), random(10, 80));\n  }\n  pop();\n  translate(-300, -300);\n\n  strokeWeight(4);\n  stroke(colorOptions[floor(random(colorOptions.length))]);\n  noFill();\n  rect(0, 0, 600, 600);\n}"
  },
  {
    "_id": "r6q7GsSmhA7y3byMp",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T16:47:38.081Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/doxxjms3gsjm8ajgzm3y",
        "version": 1557420462,
        "signature": "07bd42d985e46b4c7fa094d635bc1508c48b9232",
        "width": 800,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-09T16:47:42Z",
        "tags": [],
        "bytes": 17478,
        "type": "upload",
        "etag": "1f03afc2193e7f101e5e0d938e364f2f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557420462/avalanche2019/doxxjms3gsjm8ajgzm3y.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557420462/avalanche2019/doxxjms3gsjm8ajgzm3y.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Another idea needing code."
  },
  {
    "_id": "r7CkvGscPrNpfC9BH",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T07:52:32.034Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "r8CCbKH8wHyopTYjJ",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T18:25:53.07Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/a9wpxidnloqnrvnp4clh",
        "version": 1550255162,
        "signature": "1e06d33bd3cdcd4bf3f87fe58e554ce1f0111ad9",
        "width": 1206,
        "height": 680,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T18:26:02Z",
        "tags": [],
        "bytes": 37220,
        "type": "upload",
        "etag": "45d14a0a90536642537efec89c95c71b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550255162/avalanche2019/a9wpxidnloqnrvnp4clh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550255162/avalanche2019/a9wpxidnloqnrvnp4clh.png"
      },
      {
        "public_id": "avalanche2019/mnk2ru7yw4klnvzybt59",
        "version": 1550255168,
        "signature": "ecc4db7d4ad794298704b7dc05ed2561dfe384ed",
        "width": 1162,
        "height": 662,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T18:26:08Z",
        "tags": [],
        "bytes": 35979,
        "type": "upload",
        "etag": "be6673e8c83cffe1e79e581092deefa6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550255168/avalanche2019/mnk2ru7yw4klnvzybt59.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550255168/avalanche2019/mnk2ru7yw4klnvzybt59.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Coffee & Restroom II",
    "code": "var pos_x_slider, pos_y_slider, size_slider, color_picker;\nfunction setup() {\n\n  // Sets the screen to be 720 pixels wide and 400 pixels high\n  createCanvas(window.innerWidth, window.innerHeight * .5);\n\t//createCanvas(400, 400);\n  //background(0);\n  noStroke();\n\n\t  //createP('Horizontal Position');\n    //pos_x_slider = createSlider(0, width, width * .5);\n\t\n\t  createP('Coffee');\n    pos_x_slider = createSlider(10, height-12, 10);\n\n    //createP('Size');\n   //size_slider = createSlider(10, 10, 10);\n\n\n\n}\n\nfunction draw() {\n    background(250);\n    fill(150,100,50);\n    var pos_x = pos_x_slider.value();\n    var pos_y = height * .5;\n    \n\t  quad(100, pos_x, 250, pos_x, 210, 250, 140, 250);\n\t  fill(170,210,250);\n\t  quad(300, height-pos_x-2.5, 450, height-pos_x-2.5, 410, 250, 340, 250);\n\n}"
  },
  {
    "_id": "r9gzt3gMgqnwC7k9b",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "created_at": { "$date": "2019-02-26T21:53:46.384Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ztqv5odais3kx1twlr1p",
        "version": 1551218039,
        "signature": "a90f1043cb1d80638bdb1042cea958be569e2bb5",
        "width": 1188,
        "height": 1186,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T21:53:59Z",
        "tags": [],
        "bytes": 59929,
        "type": "upload",
        "etag": "ca9c49de7630a674460a7949cdb8eee7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551218039/avalanche2019/ztqv5odais3kx1twlr1p.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551218039/avalanche2019/ztqv5odais3kx1twlr1p.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "dot challenge 2.0 (mouse follow)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nxpos = [];\nypos = [];\n\nfunction setup(){\n  createCanvas(600,600);\n  smooth();\n//set up the position\n  for(var i = 0; i < 50; i++){\n    xpos[i] = 0; \n    ypos[i] = 0; \n  }\n  \n  frameRate(50);\n}\n\nfunction draw(){\n  background(50);\n  for(var i = 0; i < 49; i++){\n    xpos[i] = xpos[i+1]; \n    ypos[i] = ypos[i+1];\n  }\n    var frequency = 0.5;\n  xpos[xpos.length-1] = mouseX;\n  ypos[ypos.length-1] = mouseY;\n\n  for(var i = 0; i < 40; i++){\n    var x = noise(i * frequency, 0) * width;\n    var y = noise(i * frequency, 1000) * height;\n    noStroke();\n    if(i>30){\n        fill(frameCount*0.5% 250,0,100);\n        }else if(i>20 && i <30){\n            fill(frameCount*0.5% 250, 50, 200);\n        }else  {\n            fill(frameCount*0.5% 250, 100, 300);\n        }\n    ellipse(xpos[i]-x/2, ypos[i]-y/2, i, i);\n  }\n}"
  },
  {
    "_id": "rD9aKmMtxr4vKaAEw",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T01:11:00.905Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zkhmzst5ar3ouogcdrmd",
        "version": 1549501866,
        "signature": "de8b431107860e31d127a0f0fc38a28fdcb3bf35",
        "width": 798,
        "height": 592,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-07T01:11:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 867022,
        "type": "upload",
        "etag": "a7cc219f1ca67afe0fdae84370c04bd3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549501866/avalanche2019/zkhmzst5ar3ouogcdrmd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549501866/avalanche2019/zkhmzst5ar3ouogcdrmd.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6471070",
          "dar": "399:296"
        },
        "frame_rate": 60,
        "bit_rate": 6936176,
        "duration": 1,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "More Perlin noise exploration courtesy of Mr. Dan Shiffman.",
    "code": "// var xoff1 = 0;\n// var xoff2 = 10000;\n\nvar inc = 0.1;\nvar scl = 10;\nvar cols, rows;\nvar fr;\n\nfunction setup() {\n  createCanvas(800, 600);\n  cols = floor(width / scl);\n  rows = floor(height / scl);\n  fr = createP('');\n}\n\nfunction draw() {\n  background(200, 50, 50, 50);\n  var yoff = 0;\n  for (var y = 0; y < rows; y++) {\n  \tfor (var x = 0; x < cols; x++) {\n    var xoff = 0;\n      var index = (x + y * width) * 4;\n      var r = noise(xoff, yoff) * 255;\n      var v = p5.Vector.fromAngle(random(TWO_PI));\n   \n    xoff += inc;\n    stroke(0);\n      \n      push();\n      translate(x * scl, y * scl);\n      rotate(v.heading());\n      line(0, 0, scl, 0);\n      pop();\n  }\n    \nyoff += 0.01;\n    \n}\n\n\tfr.html(floor(frameRate()));\n\n\n\n}"
  },
  {
    "_id": "rFDo5fi43MRuk9NrD",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T18:48:15.536Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/psvhce9mzjbxjjzfb7v5",
        "version": 1556822904,
        "signature": "1af8a6570e402cc25d5ead9b2e07e960f73ea040",
        "width": 604,
        "height": 436,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-02T18:48:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 155097,
        "type": "upload",
        "etag": "e685595dcfc0a9868131a861ceb73a58",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556822904/avalanche2019/psvhce9mzjbxjjzfb7v5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556822904/avalanche2019/psvhce9mzjbxjjzfb7v5.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "363129",
          "dar": "151:109"
        },
        "frame_rate": 60,
        "bit_rate": 445787,
        "duration": 2.783333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Realistic Bitten Slice of Cheese on Plate. Inspired by Anna's Sketch.",
    "inspiration_name": "Anna's sketch"
  },
  {
    "_id": "rLN2ZtCResQccN775",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:40:28.522Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ao0apf4f2ipabbcdznen",
        "version": 1555095433,
        "signature": "fb99f42d4c939c530996f51b79425d2d59c41873",
        "width": 854,
        "height": 480,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-12T18:57:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 185974,
        "type": "upload",
        "etag": "01aaab6a59b71d8ef13a63c1467f9fff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555095433/avalanche2019/ao0apf4f2ipabbcdznen.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555095433/avalanche2019/ao0apf4f2ipabbcdznen.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "127707",
          "dar": "427:240"
        },
        "frame_rate": 23.976023976023978,
        "bit_rate": 130657,
        "duration": 11.387,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Somehow it seems that tracery js and paper js has a conflict and can't be displayed together in one canvas (or just i couldn't figure it out yet), but this is the intended look of my fortune cookie sketch",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n//require /text/tracery.min.js\n\nvar center = new Point(250, 250);\nvar topLeft = view.center - [80, 80];\nvar bottomRight = view.center + [80, 80];\n\nvar path1 = new Path.Circle(new Point(250, 80), 50);\n\nvar path2 = new Path.RegularPolygon(new Point(250,150), 3, 80);\n\n\n\nvar cookie = path1.subtract(path2);\ncookie.style = {\n    strokeColor: 'white',\n    fillColor: 'red',\n    strokeWidth: 5,\n    strokeCap:'round',\n    dashArray :[10, 12],\n    shadowColor: new Color(0, 0, 0, .5),\n    shadowBlur: 20,\n    shadowOffset: new Point(5, 5),\n}\n\n// var maintitle = {\n//     \"title\": [\"#sayings#\"],\n//     \"sayings\":[\"The early bird gets the worm, but the second mouse gets the cheese.\",\n//               \"Be on the alert to recognize your prime at whatever time of your life it may occur.\",\n//               \"Your road to glory will be rocky, but fulfilling.\",\"Courage is not simply one of the virtues, but the form of every virtue at the testing point.\",\n//               \"Patience is your alley at the moment. Don’t worry!\",\"Nothing is impossible to a willing heart.\",\n//               \"Don’t worry about money. The best things in life are free.\",\n//               \"Don’t pursue happiness – create it.\",\"Courage is not the absence of fear; it is the conquest of it.\",\n//               \"Nothing is so much to be feared as fear.\",\"All things are difficult before they are easy.\",\n//               \"The real kindness comes from within you.\",\"A ship in harbor is safe, but that’s not why ships are built.\",\n//               \"You don’t need strength to let go of something. What you really need is understanding.\"]\n// }\n\n// var sub={\n//     \"subtitle\":[\"Your lucky number is #numbers#, #numbers#, and #numbers#\"],\n//     \"numbers\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\n//               \"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\n//               \"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\n//               \"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\n//               \"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"]\n// }\n\n//   var title = tracery.createGrammar(maintitle);\n//   title.addModifiers(tracery.baseEngModifiers);\n//   var output = title.flatten(\"#title#\");\n\n//   var subtitle = tracery.createGrammar(sub);\n//   subtitle.addModifiers(tracery.baseEngModifiers);\n//   var output2 = subtitle.flatten(\"#subtitle#\");\n  \n//   var text = new PointText(new Point(100, 200));\n//     text.fillColor = 'black';\n//     text.fontSize = 24;\n//     text.content = output;\n\n//   var text = new PointText(new Point(100, 280));\n//     text.fillColor = 'black';\n//     text.fontSize = 15;\n//     text.content = output2;\n\nfunction onFrame(event) {\n    cookie.rotate(0.5);\n\tcookie.fillColor.hue += 0.3;\n}"
  },
  {
    "_id": "rP7mheZGiTNJBSGXX",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-16T02:20:48.169Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fsfbhq42abzmzcjsm5pj",
        "version": 1557973253,
        "signature": "6311843b9f5aefab9184ede9d35643d5f562b0f3",
        "width": 640,
        "height": 328,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-16T02:20:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 1096308,
        "type": "upload",
        "etag": "cab134df8252509bec2107ca88df7e76",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557973253/avalanche2019/fsfbhq42abzmzcjsm5pj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557973253/avalanche2019/fsfbhq42abzmzcjsm5pj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1775233",
          "dar": "80:41"
        },
        "frame_rate": 60,
        "bit_rate": 1783823,
        "duration": 4.916667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/trlrdzbv0d4ptfc4cn8q",
        "version": 1557973353,
        "signature": "666d862461cdcc664ae07afbfc6b0e017d9e7735",
        "width": 640,
        "height": 344,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-16T02:22:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 8002295,
        "type": "upload",
        "etag": "1082e9ce83d37e3ab4dbd8d04eb4edba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557973353/avalanche2019/trlrdzbv0d4ptfc4cn8q.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557973353/avalanche2019/trlrdzbv0d4ptfc4cn8q.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4224143",
          "dar": "80:43"
        },
        "frame_rate": 60,
        "bit_rate": 4231173,
        "duration": 15.130167,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with OpenSCAD to make \"wrong\" shapes (with the normals twisted etc)"
  },
  {
    "_id": "rTg33FBRY5BzwYTmt",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T18:48:55.573Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rizev6umqyuopdcdloup",
        "version": 1549046952,
        "signature": "6fa1e570d36f52dab6b33e62ded9c25ba125eb4b",
        "width": 864,
        "height": 1008,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T18:49:12Z",
        "tags": [],
        "bytes": 132663,
        "type": "upload",
        "etag": "ec62534cda4a33d69fe057498278a544",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549046952/avalanche2019/rizev6umqyuopdcdloup.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549046952/avalanche2019/rizev6umqyuopdcdloup.jpg"
      },
      {
        "public_id": "avalanche2019/a5chnyh7ecyrlzwcy2mv",
        "version": 1549046955,
        "signature": "72756449c4535e74c540e21a502b440b5364d6ae",
        "width": 864,
        "height": 1008,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T18:49:15Z",
        "tags": [],
        "bytes": 118813,
        "type": "upload",
        "etag": "83b865c9c8bbdccd6a713e8e99f0ea6b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549046955/avalanche2019/a5chnyh7ecyrlzwcy2mv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549046955/avalanche2019/a5chnyh7ecyrlzwcy2mv.jpg"
      },
      {
        "public_id": "avalanche2019/mcl6jzsj0yz6tjs8ctpw",
        "version": 1549046959,
        "signature": "8e343d4f29c3c5ca144df7a1a5d320977854cd6d",
        "width": 864,
        "height": 1008,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T18:49:19Z",
        "tags": [],
        "bytes": 117576,
        "type": "upload",
        "etag": "e37851e3f741bb454d5457011d6367c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549046959/avalanche2019/mcl6jzsj0yz6tjs8ctpw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549046959/avalanche2019/mcl6jzsj0yz6tjs8ctpw.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T20:59:32.955Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:45.916Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:07.049Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:00:09.306Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:00:46.286Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:00.528Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:03:06.05Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-25T01:42:15.293Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T20:01:07.249Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2019-03-29T20:01:07.76Z" }
      }
    ],
    "title": "",
    "description": "Randomized slices of faces from the posters at the 65th Street, R station subway stop. Assigned numbers to faces and horizontal slices then rolled the dice.",
    "inspiration_name": "Subway Faces"
  },
  {
    "_id": "ragR8qPN5nDgZwPrk",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T19:14:12.957Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kxkvjgthfchqd9cknvyz",
        "version": 1553886914,
        "signature": "3a3d6d4077c71139e38372053098d2c1d069d477",
        "width": 2132,
        "height": 3008,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T19:15:14Z",
        "tags": [],
        "bytes": 2860082,
        "type": "upload",
        "etag": "04c2b59cc1a6d2729a10a91a86092206",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553886914/avalanche2019/kxkvjgthfchqd9cknvyz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553886914/avalanche2019/kxkvjgthfchqd9cknvyz.png"
      },
      {
        "public_id": "avalanche2019/nadnyyv7qrwfvhyjfjso",
        "version": 1553887294,
        "signature": "c74f30227c5c03c504fb246fdc00d03cdbdca4f4",
        "width": 1122,
        "height": 944,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-29T19:21:34Z",
        "tags": [],
        "bytes": 799112,
        "type": "upload",
        "etag": "c8ce2294a68245cf5885a05f887eca7d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553887294/avalanche2019/nadnyyv7qrwfvhyjfjso.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553887294/avalanche2019/nadnyyv7qrwfvhyjfjso.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Started off drawing base shapes on canvas, smoothing the paths, then looping, and finally using Sketch App to scale and rotate",
    "inspiration_name": "Path smoothing paper js",
    "inspiration_url": "http://paperjs.org/tutorials/paths/smoothing-simplifying-flattening/"
  },
  {
    "_id": "rfAZG756hQDTRuzj4",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-29T23:18:37.426Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nnzkv8helzc4kgjp9yhl",
        "version": 1548896938,
        "signature": "0cf951680cb651cf11de1d260d7f63b9a8b532d0",
        "width": 977,
        "height": 1476,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T01:08:58Z",
        "tags": [],
        "bytes": 823176,
        "type": "upload",
        "etag": "2c38753a12b2e83bc0c3fa3439d56e03",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548896938/avalanche2019/nnzkv8helzc4kgjp9yhl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548896938/avalanche2019/nnzkv8helzc4kgjp9yhl.jpg"
      },
      {
        "public_id": "avalanche2019/cwxvw9in7hqo97ngt0lu",
        "version": 1548896948,
        "signature": "a1bcf1f7c6e5421f9d82efde7ac35d312a32e9d7",
        "width": 3024,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T01:09:08Z",
        "tags": [],
        "bytes": 1457886,
        "type": "upload",
        "etag": "0152e9f7b578cb9dea663713d55c2caf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548896948/avalanche2019/cwxvw9in7hqo97ngt0lu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548896948/avalanche2019/cwxvw9in7hqo97ngt0lu.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:25.77Z" }
      },
      {
        "voter_id": "xrbYhgTEuXQagpop8",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:59.802Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:41:50.843Z" }
      }
    ],
    "title": "",
    "description": "Block printed ink on paper",
    "inspiration_name": "Subculture: Microbial Metrics and the Multi-Species City",
    "inspiration_url": "http://storefrontnews.org/archive/exhibition/2010s/2018/subculture-microbial-metrics-and-the-multi-species-city/"
  },
  {
    "_id": "rn9RbkaYTWSvy2TxC",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-01T21:56:56.426Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hsymligdkf9ovef1irgb",
        "version": 1554155823,
        "signature": "3882bdd7328106dcfc97d66479dfe21d08a0abeb",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-01T21:57:03Z",
        "tags": [],
        "bytes": 3143763,
        "type": "upload",
        "etag": "23720b66a5ab27f7c3628298feb9c9c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554155823/avalanche2019/hsymligdkf9ovef1irgb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554155823/avalanche2019/hsymligdkf9ovef1irgb.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "As far as I could get today. Tomorrow I'll try to add some motion! Export failed in Chrome, worked in Firefox!"
  },
  {
    "_id": "rpkPAeS8w2WaNot4m",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T07:15:18.554Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fnwk7ldkohh37nocyjcp",
        "version": 1550215058,
        "signature": "f8f3049e0e634b0fd070cb0ede4e99042f36ce23",
        "width": 1022,
        "height": 1022,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T07:17:38Z",
        "tags": [],
        "bytes": 165460,
        "type": "upload",
        "etag": "b77f485b2abebac5fc5aab32c0bb6537",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550215058/avalanche2019/fnwk7ldkohh37nocyjcp.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550215058/avalanche2019/fnwk7ldkohh37nocyjcp.png"
      },
      {
        "public_id": "avalanche2019/nsvuqyppxkah5llw4qgg",
        "version": 1550215755,
        "signature": "ff6cbba19478cc3cecf5411750321a6717e52f5b",
        "width": 1214,
        "height": 1214,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T07:29:15Z",
        "tags": [],
        "bytes": 644734,
        "type": "upload",
        "etag": "16742e28f25671227491e79374f45c7e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550215755/avalanche2019/nsvuqyppxkah5llw4qgg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550215755/avalanche2019/nsvuqyppxkah5llw4qgg.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-15T20:39:39.219Z" }
      }
    ],
    "title": "",
    "description": "I definitely spent more time on drawing than coding– it's a basic painting page, the parameters here are (colors, brush size and position), the multiply blending mode gives the \"markers texture\".",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar paint_color, brush_size;\nfunction setup() {\n  createCanvas(500,500);\n  blendMode(MULTIPLY);\n  background(240);\n\n  createP('Paint Color');\n  paint_color = createInput(\"#555555\", \"color\");\n  createP('Brush Size');\n  brush_size = createSlider(5,20,8);\n}\n\nfunction mouseDragged(){\n  smooth();\n  strokeWeight(brush_size.value());\n  stroke(paint_color.value());\n\tline(mouseX, mouseY, pmouseX, pmouseY);\n}"
  },
  {
    "_id": "rrn4cCZykcj9RWQmh",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T19:00:58.65Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tl8buk2qfds7drgavxdt",
        "version": 1549566070,
        "signature": "cf754945ea5a0e1297f0f3899af82d793bdc43cf",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-07T19:01:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 6677939,
        "type": "upload",
        "etag": "8e79377de283059458b4f447f7d37cde",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549566070/avalanche2019/tl8buk2qfds7drgavxdt.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549566070/avalanche2019/tl8buk2qfds7drgavxdt.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "4860348",
          "dar": "16:9"
        },
        "frame_rate": 23.976023976023978,
        "bit_rate": 4870278,
        "duration": 10.969292,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T13:37:18.087Z" }
      }
    ],
    "title": "",
    "description": "pixel color / random rect/ Piet Mondrian"
  },
  {
    "_id": "rsaudP3HZeNsgGbxi",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T23:26:28.117Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/obsyprqeok9jsb3hhgqj",
        "version": 1555630015,
        "signature": "12fca4b2ab58a6ba3527e108b583fd35e42989b5",
        "width": 988,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-18T23:26:55Z",
        "tags": [],
        "bytes": 68543,
        "type": "upload",
        "etag": "d8d9f8c2a4f65e0300de9a8db4627160",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555630015/avalanche2019/obsyprqeok9jsb3hhgqj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555630015/avalanche2019/obsyprqeok9jsb3hhgqj.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:51:43.878Z" }
      }
    ],
    "title": "",
    "description": "a very bad mix",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n// code from FFT class example\n\nlet fft;\nlet fft2;\nlet fft3;\n\nlet hat;\nlet kick;\nlet snare;\nlet clap;\n\nlet playing = false;\n\nfunction preload() {\n  hat = loadSound('/sound/sketches/hat.wav');\n  kick = loadSound('/sound/sketches/kick.wav');\n  snare = loadSound('/sound/sketches/snare.wav');\n  clap = loadSound('/sound/sketches/clap.wav');\n}\n\n\nfunction setup() {\n    createCanvas(500, 500);\n\n    fft = new p5.FFT(0, 128);\n    fft.setInput(kick);\n    \n    fft2 = new p5.FFT(0, 128);\n    fft2.setInput(hat);\n    \n    fft3 = new p5.FFT(0, 128);\n    fft3.setInput(clap);\n\n    startButton = createButton('start');\n    startButton.mousePressed(start);\n\n    stopButton = createButton('stop');\n    stopButton.mousePressed(stop);\n}\n\nfunction start() {\n    kick.loop(1, 0.8, 3, 0, 2);\n    hat.loop(0, 0.8, 5, 0, 2);\n    clap.loop(4, 0.6, 2, 0, 5);\n}\n\nfunction stop() {\n    kick.stop();\n    hat.stop();\n    clap.stop();\n}\n\nfunction draw() {\n    background(50);\n    fill(255);\n    noStroke();\n\n    const data = fft.waveform();\n    const data2 = fft2.waveform();\n    const data3 = fft3.waveform();\n\n    for (let i = 0; i < 128; i++) {\n        const x = map(i, 0, 128, 0, 500);\n        const y = map(data2[i], -1, 1, 200, 10);\n        fill(255, 255, 56);\n        ellipse(x, y, 5, 5);\n    }\n    for (let i = 0; i < 128; i++) {\n        const x = map(i, 0, 128, 0, 500);\n        const y = map(data[i], -1, 1, 480, 10);\n        fill(255, 56, 212);\n        ellipse(x, y, 5, 5);\n    }\n    for (let i = 0; i < 128; i++) {\n        const x = map(i, 0, 128, 0, 500);\n        const y = map(data3[i], -1, 1, 760, 10);\n        fill(56, 255, 225);\n        ellipse(x, y, 5, 5);\n    }\n}"
  },
  {
    "_id": "rw8RMpR8WhYuz3Nkx",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:16:43.963Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yildnjllv2m4iapfswmy",
        "version": 1552076213,
        "signature": "2831d36f6e202b23cc194aee390bed49ef5d0ef7",
        "width": 2540,
        "height": 1372,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T20:16:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 2881575,
        "type": "upload",
        "etag": "17bea4977ad0aaea08b40313da375b04",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552076213/avalanche2019/yildnjllv2m4iapfswmy.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552076213/avalanche2019/yildnjllv2m4iapfswmy.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "4037852",
          "dar": "635:343"
        },
        "frame_rate": 60,
        "bit_rate": 4044315,
        "duration": 5.7,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/aywqgw3hcqkhhbirsp3z",
        "version": 1552076225,
        "signature": "045c4a3f3b53668305ed3b0a00e678c9bd7c1fad",
        "width": 2536,
        "height": 1388,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-08T20:17:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 5282143,
        "type": "upload",
        "etag": "bac55670d824a85415fd7ece8e88a29b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552076225/avalanche2019/aywqgw3hcqkhhbirsp3z.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552076225/avalanche2019/aywqgw3hcqkhhbirsp3z.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "38993176",
          "dar": "634:347"
        },
        "frame_rate": 60,
        "bit_rate": 39006606,
        "duration": 1.083333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Updating the pixels with noise and random"
  },
  {
    "_id": "s2zfeecyWg2Hfy7pn",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-05T13:21:33.386Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/htcoqwyz1mxfwkzjt1bp",
        "version": 1551792106,
        "signature": "18259aa60383ee51eebcc7b405bd8c0c88586cef",
        "width": 530,
        "height": 530,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-05T13:21:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 2584591,
        "type": "upload",
        "etag": "9d656e49e2e8c84dd6fbfd95098ca99d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551792106/avalanche2019/htcoqwyz1mxfwkzjt1bp.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551792106/avalanche2019/htcoqwyz1mxfwkzjt1bp.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1376",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "1701576",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 14.916666666666666,
        "bit_rate": 1703366,
        "duration": 12.119258,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/y7bbpokb9cblseoyokk7",
        "version": 1551792113,
        "signature": "4945d784c5780b5f6aad3748d431fb28884b67fc",
        "width": 528,
        "height": 530,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-03-05T13:21:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 933611,
        "type": "upload",
        "etag": "2b67b09e1d1e5aa5596503655d6c2fa3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551792113/avalanche2019/y7bbpokb9cblseoyokk7.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551792113/avalanche2019/y7bbpokb9cblseoyokk7.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "Main",
          "bit_rate": "1022293",
          "dar": "264:265"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1014697,
        "duration": 7.360703,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/raxdkzt4azij9tgv08s6",
        "version": 1551792188,
        "signature": "f94feb8792058cc5b30d2523f45bfcaaed297c8b",
        "width": 50,
        "height": 50,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-05T13:23:08Z",
        "tags": [],
        "bytes": 830,
        "type": "upload",
        "etag": "5e0bf0be9f8bd753695db3b05f977ee2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551792188/avalanche2019/raxdkzt4azij9tgv08s6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551792188/avalanche2019/raxdkzt4azij9tgv08s6.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Following from the last work, I have added a particle system to the project. \nIt takes in pixel values and draws random particles, creating parts of the reference image.\n(Image taken from Google Images)\n\nI was initially trying to take webcam input, and using that instead of a reference image. But, the page kept crashing because of the render size. \nPS. Get and Set are actually too slow for image rendering. I will use QuickSet or Pixel Array next time.",
    "inspiration_name": "Image Particles",
    "inspiration_url": "http://compform.net/pixels/",
    "code": "// The code has 2 files associated with it. \n// Link: https://github.com/akshansh2593/CompForm/tree/master/imageParticles"
  },
  {
    "_id": "s32oDuYT6oHux7WTm",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T00:25:57.136Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dd9bj4e3axbkd0v9dxn1",
        "version": 1555633573,
        "signature": "9c7b7e8eec1aaf429c71d0ca5712c785981bfecd",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T00:26:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 2295559,
        "type": "upload",
        "etag": "6bfd0c3ce47393d3e478ede9e4a53c26",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555633573/avalanche2019/dd9bj4e3axbkd0v9dxn1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555633573/avalanche2019/dd9bj4e3axbkd0v9dxn1.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2304000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv422p10le",
          "codec": "prores",
          "level": -99,
          "bit_rate": "3566312",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 5918105,
        "duration": 3.1031,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:51:41.831Z" }
      }
    ],
    "title": "",
    "description": "Part 1 of a couple...posting progress for today.\n\n(very messy code!)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nconst line_points = [[]];\nlet pt1_connected = false;\nlet pt2_connected = false;\nlet completed = false;\nlet ready_for_text = false;\nlet impact_played = false;\n\nlet frame_counter = 0;\n\nfunction preload() {\n    hand = loadImage(\"./images/bumper_hand_03.png\");\n    impact = loadSound('./sounds/wood_solid_impact_soft3.wav');\n}\n\nconst points = [\n    [\n        {x: 100, y: 500, completed: false},\n        {x: 600, y: 500, completed: false}\n    ]\n];\n\nfunction setup() {\n    createCanvas(windowWidth, windowHeight);\n    H = new Hand(points[0][0].x - .5, points[0][0].y - 73, hand);\n    textSize(25);\n    console.log(points);\n    C = new Circle(350, 50, 20);\n}\n\nfunction drawLine(_ptgroup, _pt, _condition, _penDown) {\n    for (let i = 0; i < 1; i++) {\n        if (\n            points[_ptgroup][_pt].completed === false &&\n            _condition\n        ) {\n            let distance_to_pt = dist(H.tip.x, H.tip.y, points[_ptgroup][_pt].x, points[_ptgroup][_pt].y);\n            if (distance_to_pt > 5) {\n                H.lerpTo(points[_ptgroup][_pt].x, points[_ptgroup][_pt].y, .35, _penDown, _ptgroup);\n            } else {\n                points[_ptgroup][_pt].completed = true;\n            }\n        }\n    }\n}\n\nfunction draw() {\n    background(245);\n    translate(350, 0);\n\n    drawLine(0, 0, true);\n    drawLine(0, 1, points[0][0].completed, true);\n\n    if (points[0][1].completed) {\n        noStroke();\n        H.lerpTo(420, 470, .6, false);\n        C.fall();\n        C.display();\n    }\n\n    frame_counter++\n}\n\nclass Hand {\n    constructor(_x, _y, _img) {\n        this.pos = {\n            x: _x,\n            y: _y,\n        },\n        this.img = _img,\n        this.tip = {\n            x: _x - .5,\n            y: _y + 73\n        },\n        this.h = 800,\n        this.w = .574 * this.h\n    }\n\n    lerpTo(_x, _y, _rand_mag, _penDown, _ptgroup) {\n        this.penDown(_penDown, _ptgroup);\n\n        let rand = {\n            x: random(_rand_mag),\n            y: random(- _rand_mag, _rand_mag)\n        };\n\n        const end_point_fixed = {\n            x: _x + .5,\n            y: _y - 73\n        }\n\n        this.pos.x = lerp(this.pos.x, end_point_fixed.x, 0.05) + rand.x;\n        this.pos.y = lerp(this.pos.y, end_point_fixed.y, 0.05) + rand.y;\n        \n        this.tip = {\n            x: this.pos.x - .5,\n            y: this.pos.y + 73\n        };\n    }\n\n    penDown(_isDown, _ptgroup) {\n        // Points in line\n        if (_isDown) {\n            line_points[_ptgroup].push({x: this.tip.x, y: this.tip.y});\n        }\n\n        // Connect points\n        strokeWeight(2.5);\n        stroke(50);\n        for (let i = 0; i < line_points.length; i++) {\n            for (let p = 1; p < line_points[i].length; p++) {\n                stroke(50);\n                line(\n                    line_points[i][p - 1].x, line_points[i][p - 1].y,\n                    line_points[i][p].x, line_points[i][p].y,\n                )\n            }\n        }\n    }\n}\n\nclass Circle {\n  constructor(_x, _y, _diam) {\n    this.x = _x,\n    this.y = _y,\n    this.diam = _diam\n  }\n\n  fall() {\n    if (this.y < 500 - 10) {\n      this.y += 8;\n    } else if (this.y < 492) {\n      this.y += 1;\n      for (let i = 0; i < line_points.length; i++) {\n        for (let p = 1; p < line_points[i].length; p++) {\n          if (abs(line_points[i][p].x - C.x) < 10) {\n            line_points[i][p].y += 1;\n          }\n        }\n      }\n    }\n    if (this.y === 500 - 10) {\n      if (!impact_played) {\n        impact.play();\n        impact_played = true;\n      }\n    }\n  }\n\n  display() {\n    push();\n    noStroke();\n    fill(50);\n    ellipse(this.x, this.y, this.diam, this.diam);\n    pop();\n  }\n}"
  },
  {
    "_id": "sC6ze2fdnPPGeMSd6",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T19:49:37.542Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gdaxxyx3gmiinhotx5u8",
        "version": 1549050607,
        "signature": "1418afb95d61b657d96b7382192427e54b58b94c",
        "width": 2880,
        "height": 1800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-01T19:50:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 9941502,
        "type": "upload",
        "etag": "176a134126ab2ec84c072c75f161b622",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549050607/avalanche2019/gdaxxyx3gmiinhotx5u8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549050607/avalanche2019/gdaxxyx3gmiinhotx5u8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "41483486",
          "dar": "8:5"
        },
        "frame_rate": 60,
        "bit_rate": 59866026,
        "duration": 1.3285,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:28.65Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:38:02.405Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Processing Sketch",
    "inspiration_url": "https://www.openprocessing.org/sketch/384448"
  },
  {
    "_id": "sHkP4QHFeWwZKoKGs",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T18:18:03.13Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hanxzsvhcgxtcusnny2q",
        "version": 1552673895,
        "signature": "b1ee81983f98572d206d7ad6b357e6a7a7c91da8",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T18:18:15Z",
        "tags": [],
        "bytes": 20981,
        "type": "upload",
        "etag": "226feca571adc2be67041f317c64c627",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552673895/avalanche2019/hanxzsvhcgxtcusnny2q.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552673895/avalanche2019/hanxzsvhcgxtcusnny2q.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A minimalist space scene"
  },
  {
    "_id": "sR8tCosQLyM2Psban",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-03-01T19:37:50.712Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/oh2rnhjbwhtsmwmm2rjx",
        "version": 1551469145,
        "signature": "c245afdb62673cf9117965358663ef6acac79f79",
        "width": 990,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T19:39:05Z",
        "tags": [],
        "bytes": 107907,
        "type": "upload",
        "etag": "ce51afaaaf96341e3a974e46985e2513",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551469145/avalanche2019/oh2rnhjbwhtsmwmm2rjx.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551469145/avalanche2019/oh2rnhjbwhtsmwmm2rjx.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Dot Challenge– part 2",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// dot challenge–part 2\nvar radius = 200;\nvar center = 250;\nvar lastX, lastY, x_offset, y_offset;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n\n}\n\nfunction draw() {\n    background(20);\n    ellipseMode(CENTER);\n    noStroke();\n    // fill(50);\n    // ellipse(width/2,height/2,220);\n\n    for (var i = 1; i < 7000; i++) {\n        x = noise(i) * width;\n        y = noise(i ,100) * height;\n        x_offset = random(x)\n        y_offset = random(y)\n\n        if  (Math.sqrt((x-center)*(x-center) + (y-center)*(y-center)) < radius/1.5){\n          fill(250, 250,250,random(250));\n          ellipse(x , y, 1);\n          // lastX = mouseX;\n        //   lastY = mouseY;\n        // } else {\n        //   ellipse(lastX - x_offset, lastY - y_offset, 1);\n        // }\n      }\n    }\n}"
  },
  {
    "_id": "sXQCGyJdSpXbGdq8q",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "created_at": { "$date": "2019-02-27T04:31:40.386Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/esjjqtxty3wfijh4syp2",
        "version": 1551241921,
        "signature": "944c5c3552aebeb8ef1977973af63232b0c5bb82",
        "width": 1000,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-27T04:32:01Z",
        "tags": [],
        "bytes": 736263,
        "type": "upload",
        "etag": "3fa8aba3b39f372ad2914c70cfa38426",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551241921/avalanche2019/esjjqtxty3wfijh4syp2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551241921/avalanche2019/esjjqtxty3wfijh4syp2.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-27T23:25:04.689Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T06:14:04.089Z" }
      },
      {
        "voter_id": "9jwhKiHeLcKtMmd7i",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T15:46:45.37Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "'Scratches' on Grid Placement Exercise using noise and varying the Grid.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(500, 500);\n  noLoop();\n\n}\n\nfunction draw() {\n  background(0);\n  fill(200);\n  noStroke();\n  for (let y = 0; y<100; y++) {\n  \tfor (let x = 0; x<100; x++) {\n      drawIt(x,y);\n}\n  }\n  \n}\n    \n    function drawIt(x,y){\n      \tpush();\n      \ttranslate (x * 40 + random(-30,30), y * 20 + random(-10,10));\n      \tfill (35,30,50);\n      \trect (-5, 0, 10, 10);\n      \n      fill (0,0,0,50)\n     \trect(-22,0,-65, 22);\n      rect(-25,0,-70,25);\n      \n      fill (0,20,0);\n      rect(-20,0,-60,28);\n      \n      pop();\n      \n    //larger rects/noise/scratch effect\n  \n  \tpush();\n      for (var i = 0; i < 0.01; i++) {\n        // these points are not scattered in the same way\n  \n  \tthis.t = random(50);\n\t\tthis.x = width * noise(this.t+115);\n\t\tthis.y = height * noise(this.t+110);\n\t\tthis.diameter = random(5, 100);\n\n      \tnoFill();\n      \tstrokeWeight(.015);\n      \tstroke(255,100,);\n      \trect(this.x, this.y, this.diameter, this.diameter);\n        pop();\n    \n    }\n      \n    }"
  },
  {
    "_id": "saiQ8NPsSgCe9tycM",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T03:44:19.238Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xnwta2cjxbd1zx9xglfu",
        "version": 1550115922,
        "signature": "5f5bbcd9f1c2b8345f89a9454e275cd83c2a1ccb",
        "width": 2544,
        "height": 1372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T03:45:22Z",
        "tags": [],
        "bytes": 164327,
        "type": "upload",
        "etag": "dd252530c4bbac9ca904c06934822df6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550115922/avalanche2019/xnwta2cjxbd1zx9xglfu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550115922/avalanche2019/xnwta2cjxbd1zx9xglfu.png"
      },
      {
        "public_id": "avalanche2019/qul2gcj4qmdviqq1zsgb",
        "version": 1550115924,
        "signature": "f7cc6009489f2e22d5c7f44de762707551df6468",
        "width": 2544,
        "height": 1372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T03:45:24Z",
        "tags": [],
        "bytes": 166008,
        "type": "upload",
        "etag": "a4ac8296cdb186078cdf0d101e89113c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550115924/avalanche2019/qul2gcj4qmdviqq1zsgb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550115924/avalanche2019/qul2gcj4qmdviqq1zsgb.png"
      },
      {
        "public_id": "avalanche2019/vxz41s9yfbwcbr4qj6dh",
        "version": 1550115927,
        "signature": "21527693107281149a0d59b1f3981400e0880a8b",
        "width": 2536,
        "height": 1358,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T03:45:27Z",
        "tags": [],
        "bytes": 111469,
        "type": "upload",
        "etag": "395f290c5e88e628553a459d400fcb88",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550115927/avalanche2019/vxz41s9yfbwcbr4qj6dh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550115927/avalanche2019/vxz41s9yfbwcbr4qj6dh.png"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T05:21:44.922Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-14T05:46:26.849Z" }
      }
    ],
    "title": "",
    "description": "Lines change color depending on curve",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nlet curveHorz, curveVert;\nlet curveStart, curveStop, curveY;\n\nlet r,g,b;\nlet backCol;\n\nfunction setup(){\ncreateCanvas(windowWidth, windowHeight);\nbackCol = 0;\n\ncurveStart = 20;\ncurveStop = width - 20;\ncurveY = height/2;\n\ncreateP('Y Point');\ncurveVert = createSlider(10, height-10, height/2);\n\ncreateP('X Point');\ncurveHorz = createSlider(curveStart + 20, curveStop, curveStop/2);\n\n}\n\nfunction draw()\n{\n    background(backCol);\n    \n    let curvePtX = curveHorz.value();\n    let curvePtY = curveVert.value();\n    noFill();\n\n    r = map(curvePtY, 10, height-10, 50, 200);\n    g = map(curvePtX, curveStart + 20, curveStop, 50, 200);\n    b = map(curvePtY, 10, height-10, 255, 20);\n    backCol = map(curvePtX, 10, height-10, 255, 0);\n\n    strokeWeight(3);\n    stroke(r,255,b);\n    stroke(map())\n    beginShape();\n    curveVertex(curveStart, curveY);\n    curveVertex(curveStart, curveY);\n    curveVertex(curvePtX, curvePtY);\n    curveVertex(curveStop, curveY);\n    curveVertex(curveStop, curveY);\n    endShape();\n\n    stroke(r,g,238);\n    beginShape();\n    curveVertex(curveStart, curveY +10);\n    curveVertex(curveStart, curveY +10);\n    curveVertex(curvePtX, curvePtY +10);\n    curveVertex(curveStop, curveY +10);\n    curveVertex(curveStop, curveY +10);\n    endShape();\n\n    stroke(r,g,126);\n    beginShape();\n    curveVertex(curveStart, curveY +20);\n    curveVertex(curveStart, curveY +20);\n    curveVertex(curvePtX, curvePtY +20);\n    curveVertex(curveStop, curveY +20);\n    curveVertex(curveStop, curveY +20);\n    endShape();\n\n    stroke(238,g,126);\n    beginShape();\n    curveVertex(curveStart, curveY +30);\n    curveVertex(curveStart, curveY +30);\n    curveVertex(curvePtX, curvePtY +30);\n    curveVertex(curveStop, curveY +30);\n    curveVertex(curveStop, curveY +30);\n    endShape();\n\n}"
  },
  {
    "_id": "sbkYqPg73ktYYhspX",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "created_at": { "$date": "2019-02-28T18:11:26.268Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/svwhkjcesudjbwkcvsd5",
        "version": 1551377502,
        "signature": "ca68281b62531702c09730844703371cd58b7808",
        "width": 928,
        "height": 708,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T18:11:42Z",
        "tags": [],
        "bytes": 59047,
        "type": "upload",
        "etag": "3913bf3810ebad2e24a629634b79c1f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551377502/avalanche2019/svwhkjcesudjbwkcvsd5.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551377502/avalanche2019/svwhkjcesudjbwkcvsd5.png"
      },
      {
        "public_id": "avalanche2019/nothch5somceu0uykawd",
        "version": 1551377508,
        "signature": "c99201a9f59cd2beafc20475cc6fc0c929617940",
        "width": 808,
        "height": 714,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T18:11:48Z",
        "tags": [],
        "bytes": 62975,
        "type": "upload",
        "etag": "8a535d2bc54cc5c433483dba3cb08c16",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551377508/avalanche2019/nothch5somceu0uykawd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551377508/avalanche2019/nothch5somceu0uykawd.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Parameters",
    "title": "",
    "description": "coffee drinking iv (Edited based on the previous version.)",
    "code": "var pos_x_slider, pos_y_slider, size_slider, color_picker;\nfunction setup() {\n\n  // Sets the screen to be 720 pixels wide and 400 pixels high\n  createCanvas(window.innerWidth, window.innerHeight * 0.5);\n\t//createCanvas(400, 400);\n  //background(0);\n  noStroke();\n\n\t  //createP('Horizontal Position');\n    //pos_x_slider = createSlider(0, width, width * .5);\n\t\n\t  createP('Coffee');\n    pos_x_slider = createSlider(0, height, 0);\n\n    //createP('Size');\n   //size_slider = createSlider(10, 10, 10);\n}\n\nfunction draw() {\n    background(250);\n    //fill(150,100,50);\n    var pos_x = pos_x_slider.value();\n    var pos_y = height * 0.5;\n  \n    noFill();\n\t  //quad(100, pos_x, 250, pos_x, 210, 250, 140, 250);\n\t  fill(170,210,250);\n\t  //quad(300, height-pos_x-2.5, 450, height-pos_x-2.5, 410, 250, 340, 250);\n// beginShape();\n// curveVertex(200,  pos_x);\n// curveVertex(300,  height);\n// curveVertex(68,  19);\n// curveVertex(21,  pos_x);\n// curveVertex(32, height);\n// curveVertex(32, height);\n// endShape();\n  \n  \n    strokeWeight(5);\n    drawBrownianPath1D(0, height-pos_x, 3, 5, 1000);\n  drawBrownianPath2D(0, pos_x, 3, 5, 1000);\n  fill(170,210,250);\n  //ellipse(0,0,50);\n}\nfunction drawBrownianPath1D(x, y, stepX, stepY, steps) {\n    for (var step = 0; step < steps; step++) {\n\n        var nextX, nextY;\n\n        ////////////////////////////////////////////////////////////////////\n        // even distribution\n\n        nextX = x + stepX;\n        nextY = y + random(-0.5*stepY,0.5*stepY);\n\n\n        ////////////////////////////////////////////////////////////////////\n        // grid\n        // nextX = x + stepX;\n        // nextY = y + floor(random(-1,2)) * stepY;\n        fill(random(100),random(210),250,125);\n        //line(x, y, nextX, nextY);\n        quad(x,y,x,height,nextX,height,nextX,nextY);\n        fill(170,210,250);\n        x = nextX;\n        y = nextY;\n\n    }\n}\nfunction drawBrownianPath2D(x, y, stepX, stepY, steps) {\n    for (var step = 0; step < steps; step++) {\n\n        var nextX, nextY;\n\n        ////////////////////////////////////////////////////////////////////\n        // even distribution\n\n        nextX = x + stepX;\n        nextY = y + random(-0.5*stepY,0.5*stepY);\n\n\n        ////////////////////////////////////////////////////////////////////\n        // grid\n        // nextX = x + stepX;\n        // nextY = y + floor(random(-1,2)) * stepY;\n        fill(random(150),random(100),random(30),125);\n        //line(x, y, nextX, nextY);\n        quad(x,y,x,height,nextX,height,nextX,nextY);\n        //fill(,210,250);\n        x = nextX;\n        y = nextY;\n\n    }\n}"
  },
  {
    "_id": "sg8Z2kkHERuioeJmo",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T00:25:26.325Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ex1ke7tywtr1rfklsogd",
        "version": 1554423935,
        "signature": "d96bbc19e5487f2f121ed470a3fc97ba5d7bdf9b",
        "width": 988,
        "height": 992,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T00:25:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 6873982,
        "type": "upload",
        "etag": "a20a0ce5c68050a45829e6d4b6d75e16",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554423935/avalanche2019/ex1ke7tywtr1rfklsogd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554423935/avalanche2019/ex1ke7tywtr1rfklsogd.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "11733174",
          "dar": "247:248"
        },
        "frame_rate": 60,
        "bit_rate": 11742034,
        "duration": 4.683333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T14:11:29.835Z" }
      }
    ],
    "title": "",
    "description": "Galloping Grid -- with lerp color",
    "code": "var phase, speed, maxRectSize, numRows, numCols, numStrands, colorA, colorB;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noStroke();\n  \n  phase = 0;\n  speed = 0.075;\n  maxRectSize = 10;\n  numRows = 15;\n  numCols = 26;\n  numStrands = 2;\n  \n  colorA = color(253, 174, 120);\n  colorB = color(226, 129, 161);\n}\n\nfunction draw() {\n  background(189, 183, 107)\n  phase = frameCount * speed;\n  \n  for(var strand = 0; strand < numStrands; strand += 1) {\n    var strandPhase = phase + map(strand, 0, numStrands, 0, PI);\n    \n    for(var col = 0; col < numCols; col += 1) {\n      var colOffset = map(col, 0, numCols, 0, PI);\n      var x = map(col, 0, numCols, 50, width - 50);\n      \n      for(var row = 0; row < numRows; row += 1) {\n        var y = height/2.75 + row * 10 + sin(strandPhase + colOffset) * 50;\n        var sizeOffset = (cos(strandPhase - (row / numRows) + colOffset) + 1) * 0.5;\n        var rectSize = sizeOffset * maxRectSize;\n        \n        fill(lerpColor(colorA, colorB, row / numRows));\n        rect(x, y, rectSize, rectSize);\n      }\n    }\n  }\n}"
  },
  {
    "_id": "sjTongLwc6jhZnA8j",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T20:11:25.588Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gleiyybektt95l18cyaq",
        "version": 1557432694,
        "signature": "7048b5ebc4739d6564674d32b84c976564d42a4f",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T20:11:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 14020653,
        "type": "upload",
        "etag": "efac816d67ae525a485c440781fff111",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557432694/avalanche2019/gleiyybektt95l18cyaq.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557432694/avalanche2019/gleiyybektt95l18cyaq.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3040529",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 3044923,
        "duration": 36.8368,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Spin the wheel"
  },
  {
    "_id": "sjvjHLymx2Hxr4cRg",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-16T00:53:25.911Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/siwc2hmo0ehtqrv7rahj",
        "version": 1555376663,
        "signature": "4231638cb3492f64a040e4e8740662b4f3db5980",
        "width": 499,
        "height": 299,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-16T01:04:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 1231582,
        "type": "upload",
        "etag": "4648b9c86a0d1b428404f4919826bf48",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555376663/avalanche2019/siwc2hmo0ehtqrv7rahj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555376663/avalanche2019/siwc2hmo0ehtqrv7rahj.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "250110",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "765966",
          "dar": "499:299"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1201543,
        "duration": 8.2,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/mfubzk7ejhwpappeou2b",
        "version": 1555376667,
        "signature": "16024b57305133d22b7210cb6df6502ee13afaa9",
        "width": 499,
        "height": 299,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-16T01:04:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 1349979,
        "type": "upload",
        "etag": "023805ec459ae3c766f64810a73c1ad7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555376667/avalanche2019/mfubzk7ejhwpappeou2b.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555376667/avalanche2019/mfubzk7ejhwpappeou2b.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "248683",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "948171",
          "dar": "499:299"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1424153,
        "duration": 7.583333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/d3vh4dxighr2bstkoisv",
        "version": 1555376671,
        "signature": "ad9701d957bee08d6e706f4737f10f91e6c779b0",
        "width": 499,
        "height": 299,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-16T01:04:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 2961010,
        "type": "upload",
        "etag": "3107a84d01e9757a2f81914f6060f82d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555376671/avalanche2019/d3vh4dxighr2bstkoisv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555376671/avalanche2019/d3vh4dxighr2bstkoisv.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "246989",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "1724064",
          "dar": "499:299"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2252432,
        "duration": 10.516667,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Playing with some loops, timing and draw adjustments based on sample code from class. It's interesting to see how the form changes based on playback speed.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\nlet mySound;\nlet fft;\n\nfunction preload() {\n    mySound = loadSound('/01_full_mix.wav');\n\n}\n\nfunction setup() {\n    createCanvas(500, 300);\n\n    fft = new p5.FFT(0, 128);\n    fft.setInput(mySound);\n\n\n    startButton = createButton('start');\n    startButton.mousePressed(start);\n\n    stopButton = createButton('stop');\n    stopButton.mousePressed(stop);\n}\n\nfunction start() {\n    mySound.loop(0, 8, 1, 0, 8);\n}\n\nfunction stop() {\n    mySound.pause();\n}\n\nfunction draw() {\n    background(30, 162, 158);\n    fill(255, 186, 53);\n    noStroke();\n\n    const data = fft.waveform();\n\n    for (let i = 0; i < 128; i++) {\n        const x = map(i, 0, 128, 0, 500);\n        const y = map(data[i], -1, 1, 280, 0);\n        ellipse(x, y, 100, 3);\n    }\n}"
  },
  {
    "_id": "srK3pYmkpbbfsnyz3",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T15:33:16.891Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/egdi9tll1qvilshb7gfo",
        "version": 1557502402,
        "signature": "16e538dfbd0c33b6e073b250f6f1af9a76330b56",
        "width": 576,
        "height": 580,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T15:33:22Z",
        "tags": [],
        "bytes": 76033,
        "type": "upload",
        "etag": "1a7b7a6f54b11f865085832ef57d9e9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557502402/avalanche2019/egdi9tll1qvilshb7gfo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557502402/avalanche2019/egdi9tll1qvilshb7gfo.png"
      },
      {
        "public_id": "avalanche2019/aknq9gwpnjuvyvkkwtr0",
        "version": 1557502405,
        "signature": "fe989d354ab3b169a335147514f5a6aa63f3936d",
        "width": 584,
        "height": 584,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T15:33:25Z",
        "tags": [],
        "bytes": 82405,
        "type": "upload",
        "etag": "f6990df8fa3227d34e5391a5e7e4e043",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557502405/avalanche2019/aknq9gwpnjuvyvkkwtr0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557502405/avalanche2019/aknq9gwpnjuvyvkkwtr0.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A little progress on the graphics and screens for the shrine game"
  },
  {
    "_id": "srv8D9pvGRYKycpQA",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-28T21:08:19.668Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gvryrq68wjjowvpq1ih5",
        "version": 1553807315,
        "signature": "11ddfce7809cab1c3253377385de23d2b9e1dd15",
        "width": 1220,
        "height": 1032,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-28T21:08:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 14777165,
        "type": "upload",
        "etag": "db48ef2ba7e992b3f5a8754d3f879f44",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553807315/avalanche2019/gvryrq68wjjowvpq1ih5.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553807315/avalanche2019/gvryrq68wjjowvpq1ih5.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "13633101",
          "dar": "305:258"
        },
        "frame_rate": 60,
        "bit_rate": 13640459,
        "duration": 8.666667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "playing with speed"
  },
  {
    "_id": "stfBaywwvG3oZBNAQ",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T15:04:40.288Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yjvpfgyi8yqjg3tdfawc",
        "version": 1550847888,
        "signature": "077345a7c0f54a65fe7cfe8dbe5939eb119262f1",
        "width": 1072,
        "height": 1472,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T15:04:48Z",
        "tags": [],
        "bytes": 712502,
        "type": "upload",
        "etag": "bab5b4b2c0a89d3096c88c86cd6855d1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550847888/avalanche2019/yjvpfgyi8yqjg3tdfawc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550847888/avalanche2019/yjvpfgyi8yqjg3tdfawc.png"
      },
      {
        "public_id": "avalanche2019/rtpbi5uayiriixcnivkh",
        "version": 1550847894,
        "signature": "69275c798db8c8d144dba8572558cfdb9c6c36f1",
        "width": 1607,
        "height": 736,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T15:04:54Z",
        "tags": [],
        "bytes": 1497080,
        "type": "upload",
        "etag": "681a7b9cee2f41b585c619a00dbce3e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550847894/avalanche2019/rtpbi5uayiriixcnivkh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550847894/avalanche2019/rtpbi5uayiriixcnivkh.jpg"
      },
      {
        "public_id": "avalanche2019/jzvcmisasmhhkbyo18rv",
        "version": 1550860265,
        "signature": "5b12cc07d289908717cf4e8aa504b85e6e4671ec",
        "width": 1070,
        "height": 1448,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T18:31:05Z",
        "tags": [],
        "bytes": 882269,
        "type": "upload",
        "etag": "d761911ac6bcd4bd9947c1693647a35c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550860265/avalanche2019/jzvcmisasmhhkbyo18rv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550860265/avalanche2019/jzvcmisasmhhkbyo18rv.png"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-07T18:53:43.515Z" }
      }
    ],
    "title": "",
    "description": "Perlin noise and fill brightness, and a step towards a flexible, hexagonal grid.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nconst canvasAndBorder = {\n    w: 540,\n    h: 740\n}\nconst canvas = {\n    w: 505, // 501\n    h: 701 // 701\n}\nconst numCols = 15;\nconst numRows = 25;\n// const numCols = 5;\n// const numRows = 8;\nlet rowHeight;\nlet colWidth;\nlet hexWidth;\nlet hexHeight;\n\nlet Points = [];\n\nfunction setup () {\n    createCanvas(canvasAndBorder.w, canvasAndBorder.h);\n    rowHeight = Math.floor(canvas.h / numRows);\n    colWidth = Math.floor(canvas.w / numCols);\n\n    background(50, 50, 100, 50);\n    stroke(50, 50, 100, 100);\n\n    strokeWeight(1);\n\n    translate(19, 19);\n    setPoints();\n    fillCircles();\n    // drawPoints(); // debugging\n    connectPointsHorizontal();\n    connectPointsVerticalRight();\n    connectPointsVerticalLeft();\n}\n\nclass Point {\n    constructor(_x, _y) {\n        this.pos = {\n            x: _x,\n            y: _y\n        }\n    }\n\n    displayAsEllipse() {\n        ellipse(this.pos.x, this.pos.y, 3, 3);\n    }\n}\n\nfunction setPoints() {\n    push();\n    for (let y = 0; y < canvas.h; y += rowHeight) {\n        let newPoint;\n        let n = 0;\n        // console.log(canvas.w / 2, canvas.h / 2);\n        if (y % (2 * rowHeight) === 0) {\n            for (let x = 0; x < canvas.w - colWidth; x += colWidth) {\n                n = noise(x + colWidth / 2 * .01, y * .01);\n                // n = 0\n                newPoint = new Point(x + colWidth / 2 + 15 * n, y + 15 * n);\n                Points.push(newPoint);\n            }\n        } else {\n            for (let x = 0; x < canvas.w; x += colWidth) {\n                n = noise(x * .01, y * .01);\n                // n = 0;\n                newPoint = new Point(x + 15 * n, y + 15 * n);\n                Points.push(newPoint);\n            }\n        }\n    }\n    pop();\n}\n\nfunction drawPoints() {\n    for (let i = 0; i < Points.length; i++) {\n        Points[i].displayAsEllipse();\n    }\n}\n\nfunction connectPointsHorizontal() {\n    for (let i = 0; i < Points.length - 1; i++) {\n        if (Points[i].pos.x < canvas.w - colWidth) {\n            line(\n                Points[i].pos.x, Points[i].pos.y,\n                Points[i + 1].pos.x, Points[i + 1].pos.y\n            )\n        }\n    }\n}\n\nfunction connectPointsVerticalRight() {\n    for (let i = 0; i < Points.length - numCols - 1; i++) {\n        if (\n            Points[i].pos.x < canvas.w - colWidth / 4 &&\n            Points[i].pos.y < canvas.h - rowHeight / 2\n        ) {\n            line(\n                Points[i].pos.x, Points[i].pos.y,\n                Points[i + numCols + 1].pos.x, Points[i + numCols + 1].pos.y\n            )\n        }\n    }\n}\n\nfunction connectPointsVerticalLeft() {\n    for (let i = 0; i < Points.length - numCols; i++) {\n        if (\n            Points[i].pos.x >= colWidth / 2 &&\n            Points[i].pos.y < canvas.h - rowHeight / 2\n        ) {\n            line(\n                Points[i].pos.x, Points[i].pos.y,\n                Points[i + numCols].pos.x, Points[i + numCols].pos.y\n            )\n        }\n    }\n}\n\nfunction fillCircles() {\n    push();\n    let diam = colWidth;\n    for (i = 0; i < Points.length - numCols - 1; i++) {\n        if (\n            Points[i].pos.x > noise(Points[i].pos.x, Points[i].pos.y, 1) * 50 &&\n            Points[i].pos.y > noise(Points[i].pos.x, Points[i].pos.y, 2) * 50 &&\n            Points[i].pos.x < canvas.w - noise(Points[i].pos.x, Points[i].pos.y, 2) * 50 &&\n            Points[i].pos.y < canvas.h - noise(Points[i].pos.x, Points[i].pos.y, 2) * 50\n        ) {\n            noStroke();\n            // console.log(Points[i]);\n            let n = noise(Points[i].pos.x * .01, Points[i].pos.y * .01, frameCount * .005);\n            if (n > .3) {\n                fill(50, 50, 60, n * 255);\n                ellipse(Points[i].pos.x, Points[i].pos.y, diam, diam);\n            } \n        }\n    }\n    pop();\n}"
  },
  {
    "_id": "sv4abc79J2CkY2sE4",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:20:02.655Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wl8gylyvqisyqpinpuh4",
        "version": 1548458567,
        "signature": "39bb14342610a0ac1b8784e5f8a7aef1da5b8eb8",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:22:47Z",
        "tags": [],
        "bytes": 1511087,
        "type": "upload",
        "etag": "9c603b712b9c67e7734cd74c030b7f59",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458567/avalanche2019/wl8gylyvqisyqpinpuh4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458567/avalanche2019/wl8gylyvqisyqpinpuh4.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "sztM8zfux9aRKYCoF",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T17:56:41.606Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xxso8pnb3uku8kfrrj5d",
        "version": 1552586277,
        "signature": "3464b7fc929e355f6798569cce23fee87705c34e",
        "width": 1574,
        "height": 938,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T17:57:57Z",
        "tags": [],
        "bytes": 2561310,
        "type": "upload",
        "etag": "993ad324bba01d453705cc774bfd4a8d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552586277/avalanche2019/xxso8pnb3uku8kfrrj5d.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552586277/avalanche2019/xxso8pnb3uku8kfrrj5d.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T20:01:32.73Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-14T20:52:30.299Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:04:25.861Z" }
      }
    ],
    "title": "",
    "description": "Failed attempt to try and make foamy waves \nif anyone knows how to change the color of only a specific part of the turtle branch please let me know, that has been driving me crazy",
    "code": "var myTurtle;\n\nfunction setup() {\n    createCanvas(800, 400);\n    noFill();\n    stroke(255);\n    background(50);\n    colorMode(RGB, 255, 255, 255, 1);\n    noLoop();\n    myTurtle = new Turtle();\n}\n\nfunction draw() {\n    myTurtle.penUp();\n\n    stroke(random(220, 250), random(220, 250), random(220, 250), .2);\n    let startX = random(-50, 0);\n    let startY = random(200, 250);\n    for (let i = 0; i < 10; i++) {\n        drawWave(startX, startY);\n        drawBranch(100);\n\n        startX += random(50, 150);\n        startY += random(-10, 50);\n        myTurtle.penUp();\n    }\n\n    stroke(255, 255, 255, .3);\n    startX = -200;\n    startY = random(300, 340);\n    for (let i = 0; i < 20; i++) {\n        drawWave(startX, startY);\n\n        //inncriment range \n        startX += random(30, 50);\n        startY += random(-10, 20);\n        myTurtle.penUp();\n    }\n    //draw blue backgorund strip \n    stroke(255, 255, 255, .3);\n    startX = -200;\n    startY = random(320, 350);\n    for (let i = 0; i < 20; i++) {\n        drawWave(startX, startY);\n\n        //inncriment range \n        startX += random(30, 50);\n        startY += random(-5, 15);\n        myTurtle.penUp();\n    }\n\n    //draw wave row two \n    stroke(255, 255, 255, .3);\n    startX = random(-100, -50);\n    startY = random(350, 450);\n    for (let i = 0; i < 10; i++) {\n        drawWave(startX, startY);\n        drawBranch(100);\n        startX += random(50, 150);\n        startY += random(-10, 50);\n        myTurtle.penUp();\n    }\n\n}\n\nfunction drawWave(startX, startY) {\n    for (let i = 0; i < 16; i++) {\n        startX += random(-10, 10);\n        myTurtle.moveTo(startX, startY);\n        myTurtle.turnTo(random(-3, 3));\n        myTurtle.penDown();\n        drawBlueWater(100);\n        myTurtle.penUp();\n    }\n    myTurtle.turnTo(0);\n    myTurtle.penDown();\n    myTurtle.moveTo(startX, startY);\n\n}\n\n\n\nfunction drawBlueWater(length) {\n    push();\n    strokeWeight(10);\n    stroke(0, int(random(100)), int(random(150, 250)), .1);\n    if (length < 35) {\n        return;\n    }\n    // draw this branch\n    strokeWeight(length * .3);\n\n    stroke(0, random(100), random(150, 250), .1);\n    myTurtle.moveForward(length * random(.4, .5));\n    //curve of main wave \n    pop();\n    myTurtle.turnLeft(random(2, 10));\n    // myTurtle.turnLeft();\n    myTurtle.moveForward(length * random(.4, .5));\n    // left child\n    myTurtle.pushState();\n    // stroke(255, 255, 255, .5);\n    myTurtle.turnLeft(20);\n    drawBlueWater(length * 0.75);\n    drawBlueWater(length * .6);\n    myTurtle.popState();\n    // right child\n    myTurtle.pushState();\n    myTurtle.turnRight(random(2, 5));\n    //this one effects how much fluff there is \n    drawBlueWater(length * .7);\n    // drawBlueWater(length * random(.5));\n    myTurtle.popState();\n\n}\n\n\n\nfunction drawBranch(length) {\n    if (length < 1.5) {\n        return;\n    }\n    // draw this branch\n    strokeWeight(1);\n    stroke(255, 255, 255, .5);\n    myTurtle.moveForward(length * .45);\n    //curve of main wave \n    myTurtle.turnLeft(8);\n    stroke(255, 255, 255, .5);\n    myTurtle.moveForward(length * .45);\n    // left child\n    myTurtle.pushState();\n    stroke(255, 255, 255, .5);\n    myTurtle.turnLeft(random(20, 40));\n    stroke(255, 255, 255, .5);\n    drawBranch(length * 0.75);\n    //drawBranch(length * random(.5, .9));\n    myTurtle.popState();\n    // right child\n    myTurtle.pushState();\n    myTurtle.turnRight(random(2, 5));\n    //this one effects how much fluff there is \n    drawBranch(length * 0.7);\n    //drawBranch(length * random(.5, .9));\n    myTurtle.popState();\n}"
  },
  {
    "_id": "t2YnWyiJcyiWSDd5i",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T05:49:40.112Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vvtmbiybxg2nsg9zyoej",
        "version": 1550209792,
        "signature": "91b99746095deecb8fd496d3e85400c2e9454cee",
        "width": 824,
        "height": 678,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T05:49:52Z",
        "tags": [],
        "bytes": 78195,
        "type": "upload",
        "etag": "07d26caf0fe4c20f27e665f0a10d6260",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550209792/avalanche2019/vvtmbiybxg2nsg9zyoej.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550209792/avalanche2019/vvtmbiybxg2nsg9zyoej.jpg"
      },
      {
        "public_id": "avalanche2019/lbldigjvn6yt8kxjp9im",
        "version": 1550209799,
        "signature": "3176b4d1b8623d61a6d756ce2970d502357766a3",
        "width": 824,
        "height": 678,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-15T05:49:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 2623241,
        "type": "upload",
        "etag": "e5052c3c50d623dbafa9e604c9f69401",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550209799/avalanche2019/lbldigjvn6yt8kxjp9im.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550209799/avalanche2019/lbldigjvn6yt8kxjp9im.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "979829",
          "dar": "412:339"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 977524,
        "duration": 21.455238,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/p7jkneop8om4f5udkspv",
        "version": 1550209803,
        "signature": "2b68bd1b79162408389615f6798a34716f260180",
        "width": 824,
        "height": 678,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T05:50:03Z",
        "tags": [],
        "bytes": 78486,
        "type": "upload",
        "etag": "4779b4df7128c2901d18e0be3d870a70",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550209803/avalanche2019/p7jkneop8om4f5udkspv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550209803/avalanche2019/p7jkneop8om4f5udkspv.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T06:05:14.589Z" }
      }
    ],
    "title": "",
    "description": "In this project, I have created a custom eyeglasses program. \nIt uses webcam input with ml5.js and p5.js to detect face and put glasses on the eyes. The user can change the color of the eyeglasses and see what they like.",
    "inspiration_name": "Custom Eyeglasses",
    "inspiration_url": "https://youtu.be/EA3-k9mnLHs",
    "code": "// Custom Eyeglasses\n\n// TOOLS\n// Realtime human pose estimation in a browser\n// Using ml5, PoseNet and Tensor Flow\n// Inspired by ml5 tutorial by The Coding Train: https://youtu.be/EA3-k9mnLHs\n// using lerp: linear interpolation: used to smooth the value\n\n// Idea: detect parts of the body and overlay shapes on that position\n// Give a color picker for users to change the color of eyeglasses\n\nlet video;\nlet specColor_button; // color-picker to change color of eyeglasses\n\n// Pose Net variables\nlet poseNet;\nlet noseX = 0; // x position of the nose on the camera\nlet noseY = 0;\nlet eyeLeftX = 0;\nlet eyeLeftY = 0;\nlet eyeRightX = 0;\nlet eyeRightY = 0;\n\n\nfunction setup() {\n    createCanvas(640, 480);\n    video = createCapture(VIDEO);\n    video.hide();\n    console.log(ml5); // check if ml5 is loadded\n\n    poseNet = ml5.poseNet(video, modelReady); // load poseNet model and connect to a video\n    poseNet.on('pose', gotPoses); // detect pose and put the info in the 'pose' array\n\n    specColor_button = createButton('Change Eyeglass Color');\n}\n\n\n// create a function to detect poses\nfunction gotPoses(poses) {\n    //console.log(poses); // See the list of all poses and their locations\n\n    // assign the position of detection from console to noseX and noseY\n    if (poses.length > 0) { // making sure that there is at least one pose\n        let nX = poses[0].pose.keypoints[0].position.x; // current noseX position\n        let nY = poses[0].pose.keypoints[0].position.y; // current noseY position\n        let eLX = poses[0].pose.keypoints[1].position.x; // current left eye's X position\n        let eLY = poses[0].pose.keypoints[1].position.y; // current left eye's Y position\n        let eRX = poses[0].pose.keypoints[2].position.x; // current right eye's X position\n        let eRY = poses[0].pose.keypoints[2].position.y; // current right eye's Y position\n\n\n        // smoothen the movement using lerp (averaging the position)\n        noseX = lerp(noseX, nX, 0.5);\n        noseY = lerp(noseY, nY, 0.5);\n        eyeLeftX = lerp(eyeLeftX, eLX, 0.5);\n        eyeLeftY = lerp(eyeLeftY, eLY, 0.5);\n        eyeRightX = lerp(eyeRightX, eRX, 0.5);\n        eyeRightY = lerp(eyeRightY, eRY, 0.5);\n    }\n}\n\n\n\nfunction modelReady() {\n    console.log('Model is ready');\n}\n\n\nfunction draw() {\n    background(220);\n    // function to draw image on canvas\n    image(video, 0, 0);\n\n    // find distance between the two eyes\n    let d = dist(eyeLeftX, eyeLeftY, eyeRightX, eyeRightY);\n\n    // fill(255, 0, 0);\n    // ellipse(noseX, noseY, 50); // draw nose\n\n    specColor_button.mousePressed(specColor);\n\n    //stroke(specColor_button.value()); // color change with color picker\n    strokeWeight(5);\n    noFill();\n    ellipse(eyeLeftX, eyeLeftY, d - 10); // draw left eyeglass\n    ellipse(eyeRightX, eyeRightY, d - 10); // draw right eyeglass\n    line(eyeLeftX, eyeLeftY - (d - 45), eyeRightX, eyeRightY - (d - 45)); // connect the two\n\n}\n\nfunction specColor() {\n    console.log('Color has changed.');\n    stroke(random(255), random(255), random(255));\n}"
  },
  {
    "_id": "t4HWLTvr6HrmBGm2d",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T19:19:02.934Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/oeqonmxmqg5zdnqsl6dl",
        "version": 1553887151,
        "signature": "dbfa989fe0cfe95467bc6e7c947e9a9e7bece02a",
        "width": 2160,
        "height": 3840,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T19:19:11Z",
        "tags": [],
        "bytes": 1632845,
        "type": "upload",
        "etag": "5dd7c76456593d36236fafbaae7cbae6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553887151/avalanche2019/oeqonmxmqg5zdnqsl6dl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553887151/avalanche2019/oeqonmxmqg5zdnqsl6dl.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "The poster"
  },
  {
    "_id": "t4jHPRA8KCQfLtfD8",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "created_at": { "$date": "2019-03-01T17:47:38.736Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sswf3sdfk0q9mxmdzug8",
        "version": 1551462472,
        "signature": "609d68ab69bfaf04bfc0c449a91395f63a13fbb0",
        "width": 1060,
        "height": 862,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T17:47:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 6541410,
        "type": "upload",
        "etag": "a71143190ba2e54672500766be41552f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551462472/avalanche2019/sswf3sdfk0q9mxmdzug8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551462472/avalanche2019/sswf3sdfk0q9mxmdzug8.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "4670180",
          "dar": "530:431"
        },
        "frame_rate": 15,
        "bit_rate": 4672435,
        "duration": 11.2,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/lwbtx35elaglgbh9ffd8",
        "version": 1551462474,
        "signature": "67175c64c40ccb6bdfaaba334decc5330eb1b4f3",
        "width": 1074,
        "height": 868,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T17:47:54Z",
        "tags": [],
        "bytes": 169960,
        "type": "upload",
        "etag": "cea9d47efcd77a0069e03a51cb0e1101",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551462474/avalanche2019/lwbtx35elaglgbh9ffd8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551462474/avalanche2019/lwbtx35elaglgbh9ffd8.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 2 remix: added hue determined by noise, introduced new shapes and some wiggle with mouse position",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n// code inspo: Justin; in class example\n\nlet canvas = { width: 500, height: 300 };\n\nlet amplitude_slider, freq_slider, speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nlet speedMultiplier = 0;\n\nfunction setup() {\n  createCanvas(canvas.width, canvas.height);\n  colorMode(HSB, 100);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  freq_slider = createSlider(0, 100, 50);\n\n  createP(\"Time Speed\");\n  speed_slider = createSlider(0, 200, 100);\n}\n\nfunction draw() {\n  background(\"#fcf5ed\");\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = freq_slider.value() / 1000;\n  let speed = speed_slider.value() / 1000;\n\n  noiseDetail(1, 0.5);\n\n  // fill(100);\n  // noStroke();\n  stroke(100);\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    var x = lerp(startX, endX, i);\n    var y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    var offsetX = noise(frequency * x + speedMultiplier, 10) * amplitude * 85;\n\n    var offsetY =\n      noise(frequency * y + speedMultiplier, 50 + frameCount * 0.05) *\n      amplitude *\n      85;\n\n    let hue = noise(10, frameCount * 0.03) * 200;\n    fill(hue, 80, 60);\n\n    let wiggleX = mouseX * 0.05;\n    let wiggleY = mouseY * 0.05;\n    rect(x + offsetX - 50 + wiggleX, y + offsetY - 125 + wiggleY, 30, 30);\n    ellipse(x + offsetX - 25 + wiggleX, y + offsetY - 50 + wiggleY, 30, 30);\n    rect(x + offsetX - 10 + wiggleX, y + offsetY - 25 + wiggleY, 30, 30);\n    ellipse(x + offsetX + 10 + wiggleX, y + offsetY + 50 + wiggleY, 30, 30);\n  }\n  speedMultiplier += speed * 0.6;\n}"
  },
  {
    "_id": "t6HTbq3FxFceg2zjZ",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T19:06:33.102Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mvhstciuwdjhzqvdq6zg",
        "version": 1554491201,
        "signature": "bef5ca5ad5a8a9961fe8a088915ca2412b641032",
        "width": 782,
        "height": 772,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T19:06:41Z",
        "tags": [],
        "bytes": 57632,
        "type": "upload",
        "etag": "10e4a93fd5ba154933190e5fff1f1e30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554491201/avalanche2019/mvhstciuwdjhzqvdq6zg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554491201/avalanche2019/mvhstciuwdjhzqvdq6zg.png"
      },
      {
        "public_id": "avalanche2019/abaepc2uuxijeggklfeb",
        "version": 1554491421,
        "signature": "8c8783f6aa1f0f043081c68edbef5ef8db813ace",
        "width": 792,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T19:10:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 621245,
        "type": "upload",
        "etag": "bbdfac08d41ef71ba5da5f3e68c15d9c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554491421/avalanche2019/abaepc2uuxijeggklfeb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554491421/avalanche2019/abaepc2uuxijeggklfeb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "238208",
          "dar": "198:199"
        },
        "frame_rate": 60,
        "bit_rate": 245026,
        "duration": 20.283333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/drhwnqzqfjmlxlmqsoxw",
        "version": 1554491556,
        "signature": "791d27614d917778247c7b8928bd064a57ab2aae",
        "width": 796,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T19:12:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 121218,
        "type": "upload",
        "etag": "627d277fe35ba3ca97489ed1863b0974",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554491556/avalanche2019/drhwnqzqfjmlxlmqsoxw.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554491556/avalanche2019/drhwnqzqfjmlxlmqsoxw.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "45498",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 52371,
        "duration": 18.516667,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "t7D4ZcmjwbTBLsgoM",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T14:42:51.53Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n3y9nkveo1rgiypapewb",
        "version": 1557499426,
        "signature": "15c94d110648c18141f0c4bc0f8913472ea28c77",
        "width": 628,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T14:43:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 9615273,
        "type": "upload",
        "etag": "22ef3a31d6187886c525b284da087194",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557499426/avalanche2019/n3y9nkveo1rgiypapewb.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557499426/avalanche2019/n3y9nkveo1rgiypapewb.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4805707",
          "dar": "157:120"
        },
        "frame_rate": 60,
        "bit_rate": 4812649,
        "duration": 15.983333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Wasp and Spiders -- I kept playing with my 'moving squares' code"
  },
  {
    "_id": "tB6jCjeXQ9exA5zQQ",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T07:37:56.13Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mhpwqo5xjxjybiftdiuy",
        "version": 1557473894,
        "signature": "6a7a850ca3be443088ba2b1962d8b30fa5a6fedb",
        "width": 786,
        "height": 782,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-10T07:38:14Z",
        "tags": [],
        "bytes": 49671,
        "type": "upload",
        "etag": "baf7901c1964c06a0be8e9a5b62c71ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557473894/avalanche2019/mhpwqo5xjxjybiftdiuy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557473894/avalanche2019/mhpwqo5xjxjybiftdiuy.png"
      },
      {
        "public_id": "avalanche2019/wm529piuv79tsnrw0uzj",
        "version": 1557473899,
        "signature": "060234ee66dab9e5aeaffc2e4d49ed77ba60cb07",
        "width": 788,
        "height": 788,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T07:38:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 1284707,
        "type": "upload",
        "etag": "c445672203e62860d07e7f8ebbab3ee6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557473899/avalanche2019/wm529piuv79tsnrw0uzj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557473899/avalanche2019/wm529piuv79tsnrw0uzj.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "324341",
          "frequency": 44100,
          "channels": 3,
          "channel_layout": "3.0"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "632954",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 965038,
        "duration": 10.65,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-05-10T14:45:31.139Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T15:31:01.401Z" }
      }
    ],
    "title": "",
    "description": "bouncing tennis ball using velocity and add speed properties",
    "code": "var ball;\nvar racket;\n\n\nfunction setup() {\n  createCanvas(400, 400);\n  var tball = loadImage(\"ball.gif\");\n  ball = createSprite(width/2, height/2, 0, 0);\n  ball.addImage(\"main\", tball);\n  ball.scale = 0.6;\n  ball.velocity.y = 0;\n\n  var tracket = loadImage(\"racket.gif\");\n  racket = createSprite(width/2, height/2, 0, 0);\n  racket.addImage(\"main\", tracket);\n  racket.scale = 1.5;\n}\nfunction draw() {\n  background(82, 134, 255);\n  fill(255);\n  textAlign(CENTER, CENTER);\n  noStroke();\n  textSize(30);\n\n  racket.position.x = mouseX;\n  racket.position.y = mouseY;\n\n  if (ball.position.y >= mouseY) {\n    ball.velocity.y *= -0.7;\n    ball.position.y = mouseX;\n    ball.addSpeed(0.1, 80);\n  }\n\n  if (ball.position.y >= 400 &&  ball.position.x >= 400){\n    text(\"OUT!\", width/2, height/2);\n  }\n\n  ball.addSpeed(0.1, 90);\n  drawSprites();\n\n}"
  },
  {
    "_id": "tBMfFjtqg5is9XHbf",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-14T20:21:04.482Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nhsy1hdq6s6lfrumhnhr",
        "version": 1550175928,
        "signature": "3f3f88aef986e2d8ae685c7c5a36b96d1505bee9",
        "width": 1112,
        "height": 1162,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T20:25:28Z",
        "tags": [],
        "bytes": 245597,
        "type": "upload",
        "etag": "3e4c9b06aa422cf943883d93ad28d20b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550175928/avalanche2019/nhsy1hdq6s6lfrumhnhr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550175928/avalanche2019/nhsy1hdq6s6lfrumhnhr.png"
      },
      {
        "public_id": "avalanche2019/xrv3zhnbvomptlxmja1z",
        "version": 1550175943,
        "signature": "b0415b9c8c5373f6cffa42176a06604bc6e4c92b",
        "width": 1200,
        "height": 1652,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T20:25:43Z",
        "tags": [],
        "bytes": 212543,
        "type": "upload",
        "etag": "ebcffae2d43b466a4c0d23addca4176f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550175943/avalanche2019/xrv3zhnbvomptlxmja1z.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550175943/avalanche2019/xrv3zhnbvomptlxmja1z.png"
      },
      {
        "public_id": "avalanche2019/syjjuvopbx9ipkrdf1wg",
        "version": 1550175968,
        "signature": "94b73bc0f92609e3d433e804a44da6b40290b627",
        "width": 1174,
        "height": 1264,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-14T20:26:08Z",
        "tags": [],
        "bytes": 130723,
        "type": "upload",
        "etag": "26adb32199070fe89396bc5f8a2711bc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550175968/avalanche2019/syjjuvopbx9ipkrdf1wg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550175968/avalanche2019/syjjuvopbx9ipkrdf1wg.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Experimenting with bezier curves and color gradient. \n\ncan change gradient values \nnot really what i wanted",
    "inspiration_name": "Bezier & variable color gradient",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet startX;\nlet startY;\nlet endX;\nlet endY;\nlet control1;\nlet control2;\nlet numLines;\nlet curveDeviation;\n\nlet startColor;\nlet endColor;\nlet colors = [];\nlet curves = [];\n\nfunction setup() {\n\n    createCanvas(800, 800);\n    smooth();\n    colorMode(RGB, 255, 255, 255, 1);\n    stroke(255, 0, 0, .7);\n    strokeWeight(.8);\n    fill(255, 0, 0, .1);\n    frameRate(5);\n    //set color 1 \n    createP('Color 1 Red');\n    color1SliderR = createSlider(0, 255, 255, 2);\n    color1R = color1SliderR.value();\n    createP('Color 1 Green');\n    color1SliderG = createSlider(0, 255, 0, 2);\n    color1G = color1SliderG.value();\n    createP('Color 1 Blue');\n    color1SliderB = createSlider(0, 255, 0, 2);\n    color1B = color1SliderB.value();\n    //set color2\n    createP('Color 2 Red');\n    color2SliderR = createSlider(0, 255, 0, 2);\n    color2R = color2SliderR.value();\n    createP('Color 2 Green');\n    color2SliderG = createSlider(0, 255, 0, 2);\n    color2G = color2SliderG.value();\n    createP('Color 2 Bllue');\n    color2SliderB = createSlider(0, 255, 255, 2);\n    color2B = color2SliderB.value();\n\n    createP('Seperation');\n    seperationSlider = createSlider(-90, 90, 0, 5);\n    seperation = seperationSlider.value();\n    createP('Density');\n    densitySlider = createSlider(0, 90, 16, 2);\n    density = densitySlider.value();\n\n    createP('Begin PosX');\n    startXSlider = createSlider(0, 800, 400, 10);\n    startX = startXSlider.value();\n    createP('Begin Height');\n    startYSlider = createSlider(0, 800, 100, 10);\n    startY = startYSlider.value();\n\n    createP('End PosX');\n    endXSlider = createSlider(0, 800, 400, 10);\n    endX = endXSlider.value();\n    createP('End Height');\n    endYSlider = createSlider(0, 800, 700, 10);\n    endY = endYSlider.value();\n    createP('Curves');\n    curveSlider = createSlider(0, 1600, 700, 10);\n    curve = curveSlider.value();\n    createP('Center Point');\n    centerSlider = createSlider(50, 750, 400, 10);\n    center = centerSlider.value();\n}\n\nfunction draw() {\n    background(0, 0, 0, 1);\n    let startColor = color(color1SliderR.value(), color1SliderG.value(), color1SliderB.value(), .2);\n    let endColor = color(color2SliderR.value(), color2SliderG.value(), color2SliderB.value(), .2);\n    //fill array with colors\n    let c = 0;\n    for (c = 0; c < densitySlider.value(); c++) {\n        colors[c] = lerpColor(startColor, endColor, (c / densitySlider.value()));\n\n    }\n    let seperation = 0;\n    for (i = 0; i < densitySlider.value(); i++) {\n\n        controls = setControlPoints();\n        stroke(colors[i]);\n        fill(colors[i], .2);\n        beginShape();\n\n        b = bezier(startXSlider.value() + seperation, startYSlider.value(), controls[0], controls[1], controls[2], controls[3], endXSlider.value() + seperation, endYSlider.value());\n        curves[i] = b;\n        if (i < 0) {\n            beginShape();\n            point(curves[i - 1].x, curves[i - 1].y);\n            curves[i];\n            endshape();\n        }\n        ellipse(controls[0], controls[1], 5);\n        ellipse(controls[2], controls[3], 5);\n        seperation += seperationSlider.value();\n    }\n\n}\n\nfunction setControlPoints() {\n    // let curveDeviation = (Math.random() * 150) + 50;\n    curveSlider.value();\n    let r = Math.floor((Math.random() * 2)) + 1;\n    let rand;\n    if (r == 1) {\n        rand = -1;\n    } else {\n        rand = 1;\n    }\n\n\n    let controlOne = {\n        //let the x axis of the control point be a random no larger than the curvedeviation\n        x: startXSlider.value() + (rand * (Math.floor(Math.random() * curveSlider.value()) + 100)),\n        y: Math.floor(Math.random() * centerSlider.value()),\n    };\n    //control Pont Two\n    let controlTwo = {\n        x: startYSlider.value() + ((-1) * rand * (Math.floor(Math.random() * curveSlider.value()))),\n        y: Math.floor((Math.random() * centerSlider.value() + centerSlider.value())),\n    };\n\n    return [controlOne.x, controlOne.y, controlTwo.x, controlTwo.y];\n}"
  },
  {
    "_id": "tQQKHgGg4bSXYaoDc",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T15:29:02.81Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uhletsse6kuftxsil0ga",
        "version": 1550244547,
        "signature": "8a5698133bb4e72b618655cc4c4bc6171ff6d04c",
        "width": 1028,
        "height": 1028,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T15:29:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 321348,
        "type": "upload",
        "etag": "8466c8d2414ed1a4ea0326d43caf9352",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550244547/avalanche2019/uhletsse6kuftxsil0ga.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550244547/avalanche2019/uhletsse6kuftxsil0ga.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "566150",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 573323,
        "duration": 4.483984,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "tRM9TcdjPTwBr5itb",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-11T00:26:21.349Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ys7z8ftwqtvlrvay5ahd",
        "version": 1554942416,
        "signature": "1b925f44afce06ed3e7a95d811942fad1626ed75",
        "width": 1068,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T00:26:56Z",
        "tags": [],
        "bytes": 77748,
        "type": "upload",
        "etag": "a38916a1016fcc7e364a25da95d734b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554942416/avalanche2019/ys7z8ftwqtvlrvay5ahd.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554942416/avalanche2019/ys7z8ftwqtvlrvay5ahd.png"
      },
      {
        "public_id": "avalanche2019/d8uqfeqeqdpsq5l8eidc",
        "version": 1554942451,
        "signature": "d3c579022f08873588cba23ecf50b4a1a67c8795",
        "width": 1012,
        "height": 656,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T00:27:31Z",
        "tags": [],
        "bytes": 86525,
        "type": "upload",
        "etag": "538a95190d3ada9ccedadfe4ac9ae5f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554942451/avalanche2019/d8uqfeqeqdpsq5l8eidc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554942451/avalanche2019/d8uqfeqeqdpsq5l8eidc.png"
      },
      {
        "public_id": "avalanche2019/vh86gaqonktfq0ckucdr",
        "version": 1554942478,
        "signature": "4e8614db934123c9b61c496ba96fe0fb3202f29f",
        "width": 1086,
        "height": 742,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-11T00:27:58Z",
        "tags": [],
        "bytes": 104511,
        "type": "upload",
        "etag": "a042e9ff9f5add765590e8a49bc00454",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554942478/avalanche2019/vh86gaqonktfq0ckucdr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554942478/avalanche2019/vh86gaqonktfq0ckucdr.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "example from class (Justin)",
    "inspiration_name": "Game of Thrones"
  },
  {
    "_id": "tnAmzy54YKBQYpM6j",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-02-27T01:34:36.654Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/chkhpt7qg9gvxdbjxtcz",
        "version": 1551231370,
        "signature": "d287b8c2534da359a451bec9abea774d9b098013",
        "width": 623,
        "height": 623,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-27T01:36:10Z",
        "tags": [],
        "bytes": 75377,
        "type": "upload",
        "etag": "57d8b725f4091980b78ab1df05e46bc1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551231370/avalanche2019/chkhpt7qg9gvxdbjxtcz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551231370/avalanche2019/chkhpt7qg9gvxdbjxtcz.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Part 1 of 3: In-Class Challenge; \nPine Tree Grid Placement",
    "inspiration_name": "Pine Tree Placement",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// In-Class Coding Challenge\n// Part 1 of 3\n// Draw a 'pine tree' at each point: a green triangle with a brown square\n\n\nvar grid_rows, grid_cols;\n\n\nfunction setup() {\n    createCanvas(500, 500);\n    noLoop();\n\n    grid_cols = width / 50;\n    grid_rows = height / 50;\n\n}\n\nfunction draw() {\n    background(50);\n    noStroke();\n\n    for (let y = 0; y < grid_rows; y++) {\n        for (let x = 0; x < grid_cols; x++) {\n\n            // Coordinates \n            var xPos1 = x * 50 + 20 + random(20);\n            var xPos2 = xPos1 + 20;\n            var xPos3 = (xPos1 + xPos2) / 2;\n            var yPos1 = y * 50 + 30 + random(20);\n            var yPos2 = yPos1 - 20;\n\n\n            fill(160, 82, 45); // brown\n            rect(xPos1, yPos1, 10, 10);\n\n            fill(0, 128, 0); // green\n            triangle(xPos1 - 15, yPos1, xPos1 + 25, yPos1, xPos3 - 5, yPos2);\n        }\n    }\n}"
  },
  {
    "_id": "tqCLz3rCMvxTLRHLb",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-25T22:21:09.341Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T12:50:41.093Z" }
      }
    ],
    "title": "",
    "description": "chord progression with key events. press 1 - 6 to cycle through each triad of the cmajor scale.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nlet synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\nsynth.set(\"detune\", -600);\n\nlet chords = [cTriad(), dTriad(), eTriad(), fTriad(), gTriad()];\nlet degree = 0;\n\nwindow.onkeypress = function(event) {\n  let x = event.which || event.keyCode;\n\n  if (x == 49) {\n    cTriad();\n  } else if (x == 50) {\n    dTriad();\n  } else if (x == 51) {\n    eTriad();\n  } else if (x == 52) {\n    fTriad();\n  } else if (x == 53) {\n    gTriad();\n  } else if (x == 54) {\n    bTriad();\n  }\n};\n\nfunction cTriad() {\n  let c = synth.triggerAttackRelease([\"C5\", \"E5\", \"G5\"], \"4n\");\n  return c;\n  //   chords.push(c);\n}\n\nfunction dTriad() {\n  let d = synth.triggerAttackRelease([\"D5\", \"F5\", \"A5\"], \"4n\");\n  return d;\n  //   chords.push(d);\n}\n\nfunction eTriad() {\n  let e = synth.triggerAttackRelease([\"E5\", \"G5\", \"B5\"], \"4n\");\n  return e;\n  //   chords.push(e);\n}\n\nfunction fTriad() {\n  let f = synth.triggerAttackRelease([\"F5\", \"A5\", \"C6\"], \"4n\");\n  return f;\n  //   chords.push(f);\n}\n\nfunction gTriad() {\n  let g = synth.triggerAttackRelease([\"G5\", \"B5\", \"D6\"], \"4n\");\n  return g;\n  //   chords.push(g);\n}\n\nfunction bTriad() {\n  let b = synth.triggerAttackRelease([\"B5\", \"D6\", \"F6\"], \"4n\");\n  return b;\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}"
  },
  {
    "_id": "tukySWaSRhHER45d3",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T20:53:35.391Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ed2xplh8awppvvsclhvj",
        "version": 1550868834,
        "signature": "f3073374a3805adebdc94a4ca14946baa9af31f6",
        "width": 1144,
        "height": 894,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T20:53:54Z",
        "tags": [],
        "bytes": 394746,
        "type": "upload",
        "etag": "a80ba95d43386435818a226ffbdddea6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550868834/avalanche2019/ed2xplh8awppvvsclhvj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550868834/avalanche2019/ed2xplh8awppvvsclhvj.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Exploring how noise vs random changes an old sketch"
  },
  {
    "_id": "twhqQwsKxPq5sFRHh",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T15:18:58.648Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pwobapheym815euvtxbg",
        "version": 1549639152,
        "signature": "647a168093f39b29de611292c4e31b6a7fb36591",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T15:19:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 6163347,
        "type": "upload",
        "etag": "c3eb0353638e64f3f521fb484f592fff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549639152/avalanche2019/pwobapheym815euvtxbg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549639152/avalanche2019/pwobapheym815euvtxbg.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "93422",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "hevc",
          "level": 120,
          "profile": "Main",
          "bit_rate": "7719000"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 7826472,
        "duration": 6.3,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "moving balls"
  },
  {
    "_id": "u2YvwiFN3Mtvvnjhy",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:11:53.224Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/c1hkhaqbftb9bg34vh4v",
        "version": 1552666318,
        "signature": "68a69f40a8cc9f26bcbd36c5d2c13ea5164c3678",
        "width": 974,
        "height": 976,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:11:58Z",
        "tags": [],
        "bytes": 145883,
        "type": "upload",
        "etag": "45931995f8748507161b605afa502505",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552666318/avalanche2019/c1hkhaqbftb9bg34vh4v.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552666318/avalanche2019/c1hkhaqbftb9bg34vh4v.png"
      },
      {
        "public_id": "avalanche2019/d3cdmavr4icfsimjjmsf",
        "version": 1552666323,
        "signature": "dd051cf3bb20d042f14f6f8897367b8dfdbfcc5f",
        "width": 982,
        "height": 974,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T16:12:03Z",
        "tags": [],
        "bytes": 182465,
        "type": "upload",
        "etag": "903f5296bb507393afa981eca4da8e5c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552666323/avalanche2019/d3cdmavr4icfsimjjmsf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552666323/avalanche2019/d3cdmavr4icfsimjjmsf.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Supposed to be a rose. Working on it."
  },
  {
    "_id": "u2wkYnRt5M4qLPZxy",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T08:07:03.571Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ryzsdxgf6avkbiqn3jzg",
        "version": 1552637228,
        "signature": "bd2f9461bd2cb9304758433d217de8c602b21003",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T08:07:08Z",
        "tags": [],
        "bytes": 1234067,
        "type": "upload",
        "etag": "0d2b64a25f8bf445a3d096661a85ca9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552637228/avalanche2019/ryzsdxgf6avkbiqn3jzg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552637228/avalanche2019/ryzsdxgf6avkbiqn3jzg.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Turtle Push + Pop",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tnoFill();\n\tstroke(255,50);\n\tbackground(0);\n\tnoLoop();\n    strokeWeight(1);\n\n\tmyTurtle = new Turtle();\n}\n\n\n\nfunction draw() {\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(250, 250);\n\tmyTurtle.penDown();\n\n\tfor (var i = 0; i < 500; i++) {\n   \n\t\tmyTurtle.moveForward(i*0.1-25);\n\t\tmyTurtle.turnLeft(5);\n        myTurtle.moveForward(i*0.1+25);\n        myTurtle.turnLeft(20);   \n     \n\t\tdrawBranch();\n        \n\t}\n}\n\nfunction drawBranch() {\n\tmyTurtle.pushState();\n\n\tfor (i = 0; i < 50; i++) {\n\t\tmyTurtle.moveForward(tan(i+20));\n\t\tmyTurtle.turnLeft(random(20,22));\n        myTurtle.moveForward(tan(i+50));\n\t\tmyTurtle.turnLeft(random(30,32));\n             myTurtle.moveForward(tan(i+80));\n\t\tmyTurtle.turnLeft(random(40,42));\n\t}\n\n\tmyTurtle.popState();\n}"
  },
  {
    "_id": "u3bubDjYBdfFnZafy",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T07:28:29.91Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z8hivxi2my4owtjifxrv",
        "version": 1550736709,
        "signature": "7e7855d66aab23b3a3f05f63b73443e827df5a55",
        "width": 978,
        "height": 982,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-21T08:11:49Z",
        "tags": [],
        "bytes": 344706,
        "type": "upload",
        "etag": "64d76a0e0f11114aaa72ad15adf1987e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550736709/avalanche2019/z8hivxi2my4owtjifxrv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550736709/avalanche2019/z8hivxi2my4owtjifxrv.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:41:22.73Z" }
      }
    ],
    "title": "",
    "description": "wave",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nvar ranges = 100;\n\nfunction setup() {\n  createCanvas(600,600);\n    colorMode (HSB);\n}\n\nfunction draw() {\n  background(frameCount*0.3% 360, 10, 255);\n  noFill();\n  strokeWeight(1);\n\n  for (var i = 0; i < ranges; i++) {\n    // var paint = map(i, 0, ranges, 0, 150);\n    stroke(frameCount*0.3% 360, 255, 255); \n    beginShape();\n    \n    for (var x = -10; x < width + 11; x += 20) {\n      var n = noise(x * 0.005, i * 0.01, frameCount * 0.02);\n      var y = map(n, 0, 1, 0, height);\n    vertex(x, y);\n    }\n    endShape();\n    \n  }\n}"
  },
  {
    "_id": "u6FTeXQCTnBGzo4Xj",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T04:09:36.525Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ogkvpumew9nv3dh7idwb",
        "version": 1556683806,
        "signature": "c1e811da0f6e7a737031be812563eae87416590b",
        "width": 836,
        "height": 822,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T04:10:06Z",
        "tags": [],
        "bytes": 19582,
        "type": "upload",
        "etag": "33c53a3e906bf2910e1e65b44fe88cfa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556683806/avalanche2019/ogkvpumew9nv3dh7idwb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556683806/avalanche2019/ogkvpumew9nv3dh7idwb.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Kind of an interesting shape. Can maybe use as part of a castle"
  },
  {
    "_id": "u7Rjismqie9abYBaK",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T02:47:07.34Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h5uk7zbsuijs7ee6xf32",
        "version": 1552618031,
        "signature": "0d3b924685815e3deefd9cf05b499d1d76f34461",
        "width": 970,
        "height": 984,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T02:47:11Z",
        "tags": [],
        "bytes": 1794755,
        "type": "upload",
        "etag": "e2cf9a4b77260c1092a5b1195cf5f37b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552618031/avalanche2019/h5uk7zbsuijs7ee6xf32.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552618031/avalanche2019/h5uk7zbsuijs7ee6xf32.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T19:50:53.884Z" }
      }
    ],
    "title": "",
    "description": "A blood vessel cluster.\nBased on the Turtle Recursive Tree class sketch."
  },
  {
    "_id": "u9t5SjJmcuKMbo25G",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T04:27:06.606Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bypzpuafqc49pzggvudg",
        "version": 1555561632,
        "signature": "0f2fb4e9e6fd8cfc3e842d6b9e937530441f99ff",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T04:27:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 6844254,
        "type": "upload",
        "etag": "4d559edb54df997b9a75a266db9aa0f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555561632/avalanche2019/bypzpuafqc49pzggvudg.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555561632/avalanche2019/bypzpuafqc49pzggvudg.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "245614",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "5123711",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 5380262,
        "duration": 10.176833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:53:09.575Z" }
      }
    ],
    "title": "",
    "description": "Heartbeat",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/addons/p5.sound.js\n\nlet sound;\nlet fft;\n\nfunction preload() {\n    mySound = loadSound('heartbeat.mp3');\n}\n\nfunction setup() {\n    createCanvas(700, 500);\n    colorMode(HSB, 255);\n    fft = new p5.FFT(0.1, 256);\n    fft.setInput(sound);\n    \n    \n    startButton = createButton('start');\n    startButton.mousePressed(start);\n\n    stopButton = createButton('stop');\n    stopButton.mousePressed(stop);\n}\n\nfunction start() {\n    mySound.loop(0, 1, 1, 0, 2);\n}\n\nfunction stop() {\n    mySound.pause();\n}\n\nfunction draw() {\n    blendMode(BLEND);\n    background(250,201,299);\n    let spectrum = fft.analyze();\n    noStroke();\n    blendMode(ADD);\n    for (i = 0; i < spectrum.length; i++) {\n        let x = map(i, 0, spectrum.length - 1, width / 2, width);\n        let w = width / spectrum.length;\n        let hue = map(i, 0, spectrum.length - 1, 0, 255);\n        let sat = 200;\n        let diameter = map(spectrum[i], 0, 255, 0, height );\n        let br = spectrum[i];\n        fill(hue, sat, 31);\n        ellipse(x, height / 2, diameter, diameter);\n        x = map(i, 0, spectrum.length, width / 2, 0);\n        ellipse(x, height / 2, diameter, diameter);\n\n    }\n}"
  },
  {
    "_id": "uA3Rnp5XKhSg74hKF",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-09T23:05:14.305Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vhs8lhbajivgxmip3las",
        "version": 1554851119,
        "signature": "3b607d023db0928d4c1046f4ca14ff0950119f39",
        "width": 555,
        "height": 513,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T23:05:19Z",
        "tags": [],
        "bytes": 32647,
        "type": "upload",
        "etag": "5958cb8475a89f084e324d1de4e5828c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554851119/avalanche2019/vhs8lhbajivgxmip3las.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554851119/avalanche2019/vhs8lhbajivgxmip3las.png"
      },
      {
        "public_id": "avalanche2019/mfllcsbu2sn8w0ukur3k",
        "version": 1554851122,
        "signature": "eb3a77e50edd84353114b73a5e27413e0157a628",
        "width": 555,
        "height": 513,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T23:05:22Z",
        "tags": [],
        "bytes": 33083,
        "type": "upload",
        "etag": "82de7a734592489c3f2c6808c4cc90b7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554851122/avalanche2019/mfllcsbu2sn8w0ukur3k.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554851122/avalanche2019/mfllcsbu2sn8w0ukur3k.png"
      },
      {
        "public_id": "avalanche2019/hu1ulfcrfb1crgke3x9s",
        "version": 1554851192,
        "signature": "e62b6b1df8d4171d028a522f54b74875fd268c9e",
        "width": 555,
        "height": 513,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-09T23:06:32Z",
        "tags": [],
        "bytes": 26699,
        "type": "upload",
        "etag": "698ba1bc306201f4abc014d3dcc249be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554851192/avalanche2019/hu1ulfcrfb1crgke3x9s.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554851192/avalanche2019/hu1ulfcrfb1crgke3x9s.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "A first pass at a title generator.",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\n\nfunction generateTitle() {\n  var name_prefixes = [\"Master\", \"Mr.\", \"Professor\", \"Mrs.\", \"Princess\", \"Prince\", \"The Pauper's\", \"The\", \"Betsy\", \"Billy\", \"Johnny\"];\n  var primary_nouns = [\"Crystal\", \"Bugle\", \"Dreamer\", \"Dream\", \"Castle\", \"Moss\", \"Mountain\", \"Pit\", \"Bigfoot\", \"Dream maker\", \"Oathbreaker\", \"Bard\", \"X'arahan'tu\", \"Magic\", \"Acorn\", \"Sun\", \"Son\", \"Stump\", \"Arm\"];\n  var adjectives = [\"Lost\", \"Five\", \"Faded\", \"Ancient\", \"Blackened\", \"Den of\", \"Despairing\", \"Golden\", \"Many\", \"Merry\", \"Clever\", \"Wonderful\", \"Sullen\", \"Angry\", \"Little\", \"Cowardly\", \"Silver\", \"Lasting\", \"Heavy\", \"Festive\", \"Gleeful\", \"Enchanted\", \"Wise\", \"Wistful\", \"Dark\", \"Untold\"];\n  var secondary_nouns = [\"Hearts\", \"Stones\", \"Diamond Dogs\", \"Painted Toes\", \"Songs\", \"Tales\", \"Lords\", \"Promise\", \"Screams\", \"Plagues\", \"Dreams\", \"Roads\", \"Curses\", \"Spells\", \"Gloam\", \"Lands\", \"Marsh\", \"Hearts\", \"Rules\", \"Swamp\", \"Tale\", \"Apex\", \"Beggar\"];\n\n  var name_prefix = sample(name_prefixes);\n  var primary_noun = sample(primary_nouns);\n  var adjective = sample(adjectives);\n  var secondary_noun = sample(secondary_nouns);\n\n  var title = \"\";\n  if (Math.random() < 0.5) {\n    title = `${name_prefix} ${primary_noun} and the ${adjective} ${secondary_noun}`;\n  } else {\n    title = `The ${adjective} ${secondary_noun} of ${name_prefix} ${primary_noun}`;\n  }\n\n  return title;\n}\n\nfunction generateSubtitle() {\n  var story_adjectives = [\"Forgotten\", \"Merry\", \"Clever\", \"Baleful\", \"Deep Space\", \"Whimsical\", \"Trivial\", \"Forlorn\", \"Dank and Faded\", \"Once in a Lifetime\", \"Cyborg's\", \"Hot Mess\", \"Dark\", \"Precog's\", \"Bed Full of\", \"Tattooed\"];\n  var story_formats = [\"Quest\", \"Novel\", \"Dream of Ages\", \"Song\", \"Crystalized Puzzle\", \"Legend\", \"Quest\", \"Curse\", \"Tale\", \"Diaspora\", \"Whisper of the Heart\", \"Monster\"];\n\n  var adjective = sample(story_adjectives);\n  var format = sample(story_formats);\n  var subtitle = `A  ${adjective}  ${format}`;\n\n  return subtitle;\n}\n\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\n\n\n\nfunction injectInterface() {\n\n  document.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "uBEkoWGnF56Hax8H3",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-11T23:34:55.883Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uecplnbnvmytl5pm1vo4",
        "version": 1549928108,
        "signature": "153aeddab796022cb7bb573faa907357428c27ea",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-11T23:35:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 14636705,
        "type": "upload",
        "etag": "0cbffd82267420f102e8f86442986661",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549928108/avalanche2019/uecplnbnvmytl5pm1vo4.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549928108/avalanche2019/uecplnbnvmytl5pm1vo4.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "4667781",
          "dar": "16:9"
        },
        "frame_rate": 30,
        "bit_rate": 4708859,
        "duration": 24.866667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-02-12T00:50:27.168Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T02:44:52.363Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-02-12T04:35:16.85Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T06:29:25.435Z" }
      },
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "funny",
        "created_at": { "$date": "2019-02-15T21:02:48.892Z" }
      }
    ],
    "title": "",
    "description": "Analog GPS (AKA Asking Directions)\n\nThe video upload is acting crazy here. There's no audio and the playback is jumpy. For a better viewing experience watch the video at...\n\nhttps://youtu.be/QSA712cGVQQ\n\nA time lapse video of my walk from Lilles on 17th Street to Grand Central. Parameters? The destination and at every corner I asked a random person whether I should take a left, right or go straight to get to Grand Central."
  },
  {
    "_id": "uGa9jBTnQ8uP3sTF9",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-08T19:01:50.295Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/udzjqpxhoxkufec6qfjr",
        "version": 1557342121,
        "signature": "892c65ec128438679feee8f42cdddbba2f6b392b",
        "width": 750,
        "height": 750,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-08T19:02:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 384471,
        "type": "upload",
        "etag": "ebf0c4bcc9044de9a520755553f69c50",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557342121/avalanche2019/udzjqpxhoxkufec6qfjr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557342121/avalanche2019/udzjqpxhoxkufec6qfjr.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "170655",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 174282,
        "duration": 17.618209,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/n7aqs6ct2e2i5yg82s9e",
        "version": 1557342127,
        "signature": "034df4836a932e693ac40cf3eb26cdb9422a0d3e",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-08T19:02:07Z",
        "tags": [],
        "bytes": 52147,
        "type": "upload",
        "etag": "0ae333264965b89a16e8a3007454047e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557342127/avalanche2019/n7aqs6ct2e2i5yg82s9e.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557342127/avalanche2019/n7aqs6ct2e2i5yg82s9e.jpg"
      },
      {
        "public_id": "avalanche2019/pcl7poj9ugjbbd4rnwek",
        "version": 1557342130,
        "signature": "a59b360abee5df2b795eb68752b1b05e1d10522f",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-08T19:02:10Z",
        "tags": [],
        "bytes": 51996,
        "type": "upload",
        "etag": "5566a78f5a766fa06e649f5a31549f69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557342130/avalanche2019/pcl7poj9ugjbbd4rnwek.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557342130/avalanche2019/pcl7poj9ugjbbd4rnwek.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this microgame, I have created a simple ball drag game, in which the smiley is dragging the ball from the start to the end. \nI will be extending on this to create a maze and adding levels. \n\nI created the vectors in Illustrator and used p5.play.js to design the microgame.",
    "inspiration_name": "Maze Microgame - Basic",
    "inspiration_url": "http://molleindustria.github.io/p5.play/examples/index.html?fileName=collisions.js#",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.js\n// require /microgames/sketches/p5.play.js\n// art from opengameart.org\n// https://opengameart.org/content/a-platformer-in-the-forest\n\n\n//////////////////////////////////////////\n// Maze Microgame - Basic\n//////////////////////////////////////////\n\n/////////////////////////////////////////\n// Github Link:\n// https://github.com/akshansh2593/CompForm/tree/master/maze_microGame_basic\n///////////////////////////////////////\n\n// Reference:\n// http://molleindustria.github.io/p5.play/examples/index.html?fileName=collisions.js#\n\n\n\n// Character variables\nvar joe_sprite, ball_sprite;\n// Wall variables\nvar wall1_sprite, wall2_sprite, wall3_sprite, wall4_sprite, wall5_sprite, wall6_sprite;\n\n\n\nfunction setup() {\n    createCanvas(600, 600);\n\n    // PLACING CHARACTERS\n    var joe_image = loadImage(\"sketches/joe.png\");\n    var ball_image = loadImage(\"sketches/ball.png\");\n\n    joe_sprite = createSprite(300, 80);\n    joe_sprite.addImage(\"main\", joe_image);\n    // joe_sprite.scale = 0.75;\n    ball_sprite = createSprite(300, 175);\n    ball_sprite.addImage(\"main\", ball_image);\n    ball_sprite.scale = 0.5;\n\n    // CREATING A WALL\n    var wallImage = loadImage(\"sketches/wall2.png\");\n\n    wall1_sprite = createSprite(150, 490);\n    wall1_sprite.addImage(\"main\", wallImage);\n    wall2_sprite = createSprite(450, 490);\n    wall2_sprite.addImage(\"main\", wallImage);\n    wall3_sprite = createSprite(150, 300);\n    wall3_sprite.addImage(\"main\", wallImage);\n    wall4_sprite = createSprite(450, 300);\n    wall4_sprite.addImage(\"main\", wallImage);\n    wall5_sprite = createSprite(150, 110);\n    wall5_sprite.addImage(\"main\", wallImage);\n    wall6_sprite = createSprite(450, 110);\n    wall6_sprite.addImage(\"main\", wallImage);\n\n    noSmooth();\n}\n\n\nfunction draw() {\n    background(250, 250, 150);\n\n    textSize(30);\n    textAlign(CENTER, CENTER);\n    text('Start', width / 2, height / 12);\n    text('End', width / 2, height / 1.1);\n\n    // Move Joe\n    joe_sprite.position.x = mouseX;\n    joe_sprite.position.y = mouseY;\n\n    // Move Ball\n    joe_sprite.displace(ball_sprite);\n\n    // Adding Wall Collision Properties\n    joe_sprite.collide(wall1_sprite);\n    joe_sprite.collide(wall2_sprite);\n    joe_sprite.collide(wall3_sprite);\n    joe_sprite.collide(wall4_sprite);\n    joe_sprite.collide(wall5_sprite);\n    joe_sprite.collide(wall6_sprite);\n    ball_sprite.collide(wall1_sprite);\n    ball_sprite.collide(wall2_sprite);\n    ball_sprite.collide(wall3_sprite);\n    ball_sprite.collide(wall4_sprite);\n    ball_sprite.collide(wall5_sprite);\n    ball_sprite.collide(wall6_sprite);\n\n    drawSprites();\n}"
  },
  {
    "_id": "uLqC3oAcZ7Htec4SD",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T06:41:38.316Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ourawjljsndnmud9mrwa",
        "version": 1550817786,
        "signature": "6aa5a0fdf01eb95df96d5758130a0378c2c90ac3",
        "width": 1194,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T06:43:06Z",
        "tags": [],
        "bytes": 206240,
        "type": "upload",
        "etag": "319a9e0d63eabe4ea46b1ea59e5f0207",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550817786/avalanche2019/ourawjljsndnmud9mrwa.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550817786/avalanche2019/ourawjljsndnmud9mrwa.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "noisy",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nfunction setup() {\n    createCanvas(600, 600);\n   // colorMode (HSB);\n    ellipseMode(CENTER);\n  // '#CD83FC'\n    noStroke();\n   \n}\n\n\nfunction draw() {\n    background(0);\n    // fill(frameCount*1% 255, 50, 255); \n  fill('#F7D581');\n    let n;\n    for (let y = 0; y < height; y += 10) {\n        for (let x = 0; x < width; x += 10) {\n \n            n = noise(x, y, millis() * .001);\n            n = noise(x*.003, y*.003, millis() * .001);\n\n            let diameter = n * 15;\n\n            rect(x, y, diameter, diameter);\n        }\n    }\n\n\n\n}"
  },
  {
    "_id": "uLsajxx9hhLb6zZyX",
    "author_id": "aiyemXiLJGxbpa2Qa",
    "author": "Justin Bakse",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-22T02:03:19.996Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xmgpw2xsbm1lzjfio2mp",
        "version": 1553220210,
        "signature": "c0d3fb9cac9e94bc0b1730000dfc7e08ff76582a",
        "width": 2004,
        "height": 2004,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-22T02:03:30Z",
        "tags": [],
        "bytes": 351272,
        "type": "upload",
        "etag": "85297523365b0b6bd544c55b10d6e986",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553220210/avalanche2019/xmgpw2xsbm1lzjfio2mp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553220210/avalanche2019/xmgpw2xsbm1lzjfio2mp.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "uMSvXS8qAZXeeXniA",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-08T20:40:04.676Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/k2lf02lbkh8ppo8cgntv",
        "version": 1557348217,
        "signature": "6de742e700c5066ded4dba20a028ce329f4b7726",
        "width": 750,
        "height": 750,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-08T20:43:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 185474,
        "type": "upload",
        "etag": "9c3b51e8eba8d8d0269f36b1b050e0f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557348217/avalanche2019/k2lf02lbkh8ppo8cgntv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557348217/avalanche2019/k2lf02lbkh8ppo8cgntv.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "119438",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 15.018,
        "bit_rate": 123296,
        "duration": 12.027937,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/p3ptoceg6hc8gyniycgw",
        "version": 1557348394,
        "signature": "d36afee237e1bfdf4bee650739c348e17de95627",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-08T20:46:34Z",
        "tags": [],
        "bytes": 66649,
        "type": "upload",
        "etag": "13a96dede07af5be2dfd522c8745d6b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557348394/avalanche2019/p3ptoceg6hc8gyniycgw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557348394/avalanche2019/p3ptoceg6hc8gyniycgw.jpg"
      },
      {
        "public_id": "avalanche2019/u6pknqvvxphwrqgsjkiu",
        "version": 1557348397,
        "signature": "025997ca72f7d8e0f299ebd3a2d67a3155d6b48a",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-08T20:46:37Z",
        "tags": [],
        "bytes": 66823,
        "type": "upload",
        "etag": "92caa2d320e4d8461121f52c6f05e35e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557348397/avalanche2019/u6pknqvvxphwrqgsjkiu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557348397/avalanche2019/u6pknqvvxphwrqgsjkiu.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Extending on the last interaction, I have created an advanced maze microgame. Move your mouse to drag the ball from the start to the end position. \nAvoid the corners as the ball will get lost. \n\nI have used Illustrator and p5.js with p5.play.js to create the interaction.",
    "inspiration_name": "Maze Microgame - Advanced",
    "inspiration_url": "https://opengameart.org/content/a-platformer-in-the-forest",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.js\n// require /microgames/sketches/p5.play.js\n// art from opengameart.org\n// https://opengameart.org/content/a-platformer-in-the-forest\n\n\n//////////////////////////////////////////\n// Maze Microgame - Advanced\n//////////////////////////////////////////\n\n\n// Github Link: \n// https://github.com/akshansh2593/CompForm/tree/master/maze_microGame_adv\n\n// Reference:\n// http://molleindustria.github.io/p5.play/examples/index.html?fileName=collisions.js#\n\n\n\n// Character variables\nvar joe_sprite, ball_sprite;\n// Wall variables\nvar wall1_sprite, wall2_sprite, wall3_sprite, wall4_sprite, wall5_sprite, wall6_sprite, wall7_sprite, wall8_sprite, wall9_sprite, wall10_sprite, wall11_sprite, wall12_sprite;\n\n\n\nfunction setup() {\n    createCanvas(600, 600);\n\n    // PLACING CHARACTERS\n    var joe_image = loadImage(\"sketches/joe.png\");\n    var ball_image = loadImage(\"sketches/ball.png\");\n\n    joe_sprite = createSprite(300, 50);\n    joe_sprite.addImage(\"main\", joe_image);\n    joe_sprite.scale = 0.5;\n    ball_sprite = createSprite(150, 50);\n    ball_sprite.addImage(\"main\", ball_image);\n    ball_sprite.scale = 0.5;\n\n    // CREATING A WALL\n    var wallImage_hor = loadImage(\"sketches/wall3.png\");\n    var wallImage_vert = loadImage(\"sketches/wall2.png\");\n\n    wall1_sprite = createSprite(200, 110);\n    wall1_sprite.addImage(\"main\", wallImage_hor);\n    wall1_sprite.scale = 0.75;\n    wall2_sprite = createSprite(350, 110);\n    wall2_sprite.addImage(\"main\", wallImage_hor);\n    wall2_sprite.scale = 0.75;\n    wall3_sprite = createSprite(550, 110);\n    wall3_sprite.addImage(\"main\", wallImage_hor);\n    wall3_sprite.scale = 0.75;\n    wall4_sprite = createSprite(50, 230);\n    wall4_sprite.addImage(\"main\", wallImage_hor);\n    wall4_sprite.scale = 1;\n    wall5_sprite = createSprite(250, 260);\n    wall5_sprite.addImage(\"main\", wallImage_vert);\n    wall5_sprite.scale = 0.75;\n    wall6_sprite = createSprite(350, 260);\n    wall6_sprite.addImage(\"main\", wallImage_vert);\n    wall6_sprite.scale = 0.75;\n    wall7_sprite = createSprite(450, 260);\n    wall7_sprite.addImage(\"main\", wallImage_vert);\n    wall7_sprite.scale = 0.75;\n    wall8_sprite = createSprite(600, 260);\n    wall8_sprite.addImage(\"main\", wallImage_hor);\n    wall8_sprite.scale = 0.75;\n    wall9_sprite = createSprite(150, 410);\n    wall9_sprite.addImage(\"main\", wallImage_hor);\n    wall9_sprite.scale = 0.75;\n    wall10_sprite = createSprite(350, 410);\n    wall10_sprite.addImage(\"main\", wallImage_hor);\n    wall10_sprite.scale = 0.75;\n    wall11_sprite = createSprite(500, 440);\n    wall11_sprite.addImage(\"main\", wallImage_vert);\n    wall11_sprite.scale = 0.75;\n    wall12_sprite = createSprite(50, 400);\n    wall12_sprite.addImage(\"main\", wallImage_vert);\n    wall12_sprite.scale = 1;\n\n    noSmooth();\n}\n\n\nfunction draw() {\n    background(250, 200, 100);\n\n    textSize(30);\n    textAlign(CENTER, CENTER);\n    text('Start', width / 2, height / 12);\n    text('End', width / 2, height / 1.1);\n\n    // Move Joe\n    joe_sprite.position.x = mouseX;\n    joe_sprite.position.y = mouseY;\n\n    // Move Ball\n    joe_sprite.displace(ball_sprite);\n\n    // Adding Wall Collision Properties\n    joe_sprite.collide(wall1_sprite);\n    joe_sprite.collide(wall2_sprite);\n    joe_sprite.collide(wall3_sprite);\n    joe_sprite.collide(wall4_sprite);\n    joe_sprite.collide(wall5_sprite);\n    joe_sprite.collide(wall6_sprite);\n    joe_sprite.collide(wall7_sprite);\n    joe_sprite.collide(wall8_sprite);\n    joe_sprite.collide(wall9_sprite);\n    joe_sprite.collide(wall10_sprite);\n    joe_sprite.collide(wall11_sprite);\n    joe_sprite.collide(wall12_sprite);\n    ball_sprite.collide(wall1_sprite);\n    ball_sprite.collide(wall2_sprite);\n    ball_sprite.collide(wall3_sprite);\n    ball_sprite.collide(wall4_sprite);\n    ball_sprite.collide(wall5_sprite);\n    ball_sprite.collide(wall6_sprite);\n    ball_sprite.collide(wall7_sprite);\n    ball_sprite.collide(wall8_sprite);\n    ball_sprite.collide(wall9_sprite);\n    ball_sprite.collide(wall10_sprite);\n    ball_sprite.collide(wall11_sprite);\n    ball_sprite.collide(wall12_sprite);\n\n    drawSprites();\n}"
  },
  {
    "_id": "uQJZjE3WsbuNvqwnh",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:07:01.458Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dakffd84fgjkkj8ftfop",
        "version": 1553882843,
        "signature": "293768c765a98ae1e3a18d1245296b846cb6075d",
        "width": 2400,
        "height": 3600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:07:23Z",
        "tags": [],
        "bytes": 353610,
        "type": "upload",
        "etag": "e1909e0c435aab08016ce1becd42f0c7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553882843/avalanche2019/dakffd84fgjkkj8ftfop.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553882843/avalanche2019/dakffd84fgjkkj8ftfop.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:09:33.87Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T19:05:40.671Z" }
      }
    ],
    "title": "",
    "description": "Hokusai poster!"
  },
  {
    "_id": "uQjXyZBz5zj7dHB8L",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:22:46.869Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/mi8wtxwogcv0uoxgnr1z",
        "version": 1548458770,
        "signature": "bc77e9d655463ed03e02e04ce989e8c559b78a8d",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:26:10Z",
        "tags": [],
        "bytes": 1302992,
        "type": "upload",
        "etag": "116445b944f298c693592745d807efeb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458770/avalanche2019/mi8wtxwogcv0uoxgnr1z.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458770/avalanche2019/mi8wtxwogcv0uoxgnr1z.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:04:00.975Z" }
      }
    ],
    "title": ""
  },
  {
    "_id": "uWgTtmfErYtBu6xcF",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T16:30:55.506Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/e0qdoxqfza4bqeida6gf",
        "version": 1550594447,
        "signature": "548350df17fc5413fce82ee0dd8a2d35488e98e5",
        "width": 488,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T16:40:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 11760205,
        "type": "upload",
        "etag": "79d45920418517967f3a226cab116123",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550594447/avalanche2019/e0qdoxqfza4bqeida6gf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550594447/avalanche2019/e0qdoxqfza4bqeida6gf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4872093",
          "dar": "61:60"
        },
        "frame_rate": 60,
        "bit_rate": 4878909,
        "duration": 19.283333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Started with Particles, then added Justin's low frequency noise and smaller time.",
    "inspiration_url": "P5 Library",
    "code": "let t = 0; // time variable\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  fill(40, 40, 180);\n}\n\nfunction draw() {\n  background(105, 10, 15,23); // translucent background (creates trails)\n \tlet n;\n  \n  // make a x and y grid of ellipses\n  for (let x = 0; x <= width; x = x + 30) {\n    for (let y = 0; y <= height; y = y + 30) {\n      // starting point of each circle depends on mouse position\n      let xAngle = map(mouseX, 0, width, -4 * PI, 4 * PI, true);\n      let yAngle = map(mouseY, 0, height, -4 * PI, 4 * PI, true);\n      // and also varies based on the particle's location\n      let angle = xAngle * (x / width) + yAngle * (y / height);\n\n      // each particle moves in a circle\n      let myX = x + 40 * cos(2 * PI * t + angle);\n      let myY = y + 80 * sin(2 * PI * t + angle);\n      \n         // wind( low frequency, timed)\n        n = noise(x * .01 + millis() * -.00);\n        myX += n * 120;\n      \n\n      ellipse(myX, myY, 3); // draw particle\n    }\n  }\n\n  t = t + 0.001; // update time\n}"
  },
  {
    "_id": "uWrnfGkvM2SHBkxgH",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T19:13:35.388Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/lqzfhq7zthpkyn1aqbtb",
        "version": 1550604406,
        "signature": "1c84df513dc22128d6ba96018bb8dc5d60a414bd",
        "width": 1044,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-19T19:26:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 14579231,
        "type": "upload",
        "etag": "de6610aad4dd28c1bd92beba17aed201",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550604406/avalanche2019/lqzfhq7zthpkyn1aqbtb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550604406/avalanche2019/lqzfhq7zthpkyn1aqbtb.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "128041",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "4450269",
          "dar": "29:20"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4587188,
        "duration": 25.4,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/gknnqnkre7de61lij1tw",
        "version": 1550604421,
        "signature": "e9ce90cf6ac0a577bb8de53888ebd8d8c540c8e0",
        "width": 1482,
        "height": 1218,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-19T19:27:01Z",
        "tags": [],
        "bytes": 768942,
        "type": "upload",
        "etag": "a98db72122887d015b8a87ca06e32877",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550604421/avalanche2019/gknnqnkre7de61lij1tw.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550604421/avalanche2019/gknnqnkre7de61lij1tw.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T20:23:17.059Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-19T21:55:53.954Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-20T13:12:22.73Z" }
      }
    ],
    "title": "",
    "description": "Inspired by  this tutorial great tutorial about procedural terrain (look at url)\n\ncreated scene using procedural terrain with Perlin Noise",
    "inspiration_name": "Terrain Perlin Nosie",
    "inspiration_url": "http://www.bing.com/videos/search?q=perlin+noise+terrain+generator+tutorial+&view=detail&mid=DC1CA2CD2EE234991FF4DC1CA2CD2EE234991FF4&FORM=VIRE"
  },
  {
    "_id": "ubMMGfDKAKmmqRAPT",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T16:23:25.655Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/csqenc2dq52tjeavbgmo",
        "version": 1555086224,
        "signature": "380781a07f1858875c949982cf5f087866e76038",
        "width": 2158,
        "height": 344,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T16:23:44Z",
        "tags": [],
        "bytes": 61643,
        "type": "upload",
        "etag": "de475a5d6de93b6ec559d94cb8c3cf72",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555086224/avalanche2019/csqenc2dq52tjeavbgmo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555086224/avalanche2019/csqenc2dq52tjeavbgmo.png"
      },
      {
        "public_id": "avalanche2019/a5fggx2mfu7wskpgyaox",
        "version": 1555086242,
        "signature": "25b513adb19210818594785b8b9d6a9110647a6b",
        "width": 732,
        "height": 204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T16:24:02Z",
        "tags": [],
        "bytes": 27419,
        "type": "upload",
        "etag": "145ae5f916cec7a3adc28438bce0ad77",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555086242/avalanche2019/a5fggx2mfu7wskpgyaox.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555086242/avalanche2019/a5fggx2mfu7wskpgyaox.png"
      },
      {
        "public_id": "avalanche2019/surqffk8hlo3tvkwm9zo",
        "version": 1555086248,
        "signature": "8891df96aa0556cfea534abd33adb1a768d730fd",
        "width": 1672,
        "height": 264,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T16:24:08Z",
        "tags": [],
        "bytes": 38359,
        "type": "upload",
        "etag": "cc8c630a152339d52357a4a0ce9ebe3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555086248/avalanche2019/surqffk8hlo3tvkwm9zo.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555086248/avalanche2019/surqffk8hlo3tvkwm9zo.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T19:03:33.854Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-04-12T19:05:25.941Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Seinfeld",
    "inspiration_url": "https://www.youtube.com/watch?v=1kgpVUE9RpQ",
    "description": "Movie reviews"
  },
  {
    "_id": "udszpB6LgEvmKurwj",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-05-09T22:19:31.411Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gsoyc4gaps6a8wl8atxh",
        "version": 1557440380,
        "signature": "64439e35c7faf787a291fb63017d3f36ded0110f",
        "width": 576,
        "height": 340,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T22:19:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 463760,
        "type": "upload",
        "etag": "67de5bc38b7195d11108d459a5ec9d76",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557440380/avalanche2019/gsoyc4gaps6a8wl8atxh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557440380/avalanche2019/gsoyc4gaps6a8wl8atxh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "1890436",
          "dar": "144:85"
        },
        "frame_rate": 60,
        "bit_rate": 1902605,
        "duration": 1.95,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "SIMBA app where i created a mobile app prototype for this project"
  },
  {
    "_id": "ueLE5FTXEmeTiHwwG",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T14:05:57.309Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fheca0fuxhtz3gwmah4c",
        "version": 1550239568,
        "signature": "2e69344fe56cb3a5b4e544b00d7547b3471e57d5",
        "width": 1094,
        "height": 1436,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T14:06:08Z",
        "tags": [],
        "bytes": 561044,
        "type": "upload",
        "etag": "3047d6d914f6b63bbd2a58687b2aa5f3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550239568/avalanche2019/fheca0fuxhtz3gwmah4c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550239568/avalanche2019/fheca0fuxhtz3gwmah4c.png"
      },
      {
        "public_id": "avalanche2019/tgf7vofhceebqlkd1hoy",
        "version": 1550239571,
        "signature": "cb414549fb3bf6297632b500481a1898e38616e6",
        "width": 1136,
        "height": 1422,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T14:06:11Z",
        "tags": [],
        "bytes": 302684,
        "type": "upload",
        "etag": "28223a99baf549d06c6b967f57b3c7f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550239571/avalanche2019/tgf7vofhceebqlkd1hoy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550239571/avalanche2019/tgf7vofhceebqlkd1hoy.png"
      },
      {
        "public_id": "avalanche2019/k8xeif4qimz0watggtzi",
        "version": 1550239805,
        "signature": "946349231aaf0b5796c7a41c30f215e3bdf421eb",
        "width": 372,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T14:10:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 1427396,
        "type": "upload",
        "etag": "7eb9af261a73f322ef7eb3b55357cc61",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550239805/avalanche2019/k8xeif4qimz0watggtzi.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550239805/avalanche2019/k8xeif4qimz0watggtzi.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "459086",
          "dar": "31:40"
        },
        "frame_rate": 60,
        "bit_rate": 465771,
        "duration": 24.516667,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Creepy faces. Focusing more on how different features/sizes affect the \"look\" the face gives."
  },
  {
    "_id": "uf8kNvTv6r3CQ5Fix",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-01-28T02:53:52.571Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jbb50jmqgsr4flezwrfu",
        "version": 1548644414,
        "signature": "867f67f123778fbcf8f696e1de5c07223123398e",
        "width": 1206,
        "height": 1502,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T03:00:14Z",
        "tags": [],
        "bytes": 174411,
        "type": "upload",
        "etag": "7a4a5d5c650253d2c69c2ea77becf942",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548644414/avalanche2019/jbb50jmqgsr4flezwrfu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548644414/avalanche2019/jbb50jmqgsr4flezwrfu.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:19:19.642Z" }
      }
    ],
    "lesson": "Tiles",
    "title": "",
    "description": "Tried to create a labyrinth but the next tile only knows about its forerunner at the moment. I just realized that it’s similar to the background animation of this site :)",
    "inspiration_name": "Labyrinth / compform background",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\nconst tileSize = 30;\nconst gridW = 20;\nconst gridH = 30;\nconst w = gridW * tileSize;\nconst h = gridH * tileSize;\nlet tiles = [];\nlet currentPos = { x: 0, y: 0 };\nlet index = 0;\n\nconst connectFactor = 0.3;\nlet circleFactor = connectFactor + 0.3;\nconst offsetCorrection = (tileSize * connectFactor) / 2;\n\nfunction setup() {\n  window.cBack = color(255, 180, 255);\n  window.cFront = color(255);\n  window.cGrid = color(255);\n  createCanvas(w, h);\n  background(250);\n  grid();\n  startLabyrinth();\n  drawLabyrinth();\n}\n\nfunction draw() {\n  frameRate(20);\n  updateLabyrinth();\n}\n\nclass Tile {\n  constructor(x, y, connected) {\n    this.x = x * tileSize;\n    this.y = y * tileSize;\n    this.connected = connected;\n    this.draw = function() {\n      push();\n      angleMode(DEGREES);\n      translate(this.x, this.y);\n      // translate(tileSize / 2, tileSize / 2);\n      // rotate(90 * connects);\n      // translate(-tileSize / 2, -tileSize / 2);\n      fill(cBack);\n      rect(0, 0, tileSize, tileSize);\n      fill(cFront);\n      // console.log(this.connected.reduce(getSum));\n      if (this.connected.reduce(getSum) > 0) {\n        ellipse(\n          tileSize / 2,\n          tileSize / 2,\n          tileSize * circleFactor,\n          tileSize * circleFactor\n        );\n      }\n      for (let index = 0; index < this.connected.length; index++) {\n        if (this.connected[index] == 1) {\n          push();\n          translate(tileSize / 2, tileSize / 2);\n          rotate(90 * index);\n          translate(-tileSize / 2, -tileSize / 2);\n          rect(\n            tileSize / 2 - offsetCorrection,\n            0,\n            tileSize * connectFactor,\n            tileSize / 2\n          );\n          pop();\n        }\n      }\n\n      pop();\n    };\n  }\n}\n\nfunction startLabyrinth() {\n  noStroke();\n  // first tile\n  let initial = [];\n  for (let index = 0; index < 4; index++) {\n    initial.push(floor(random(2)));\n  }\n  tiles.push(new Tile(currentPos.x, currentPos.y, initial));\n  for (let index = 0; index < 100; index++) {}\n}\n\nfunction updateLabyrinth() {\n  let next = [];\n  if (floor(random(2)) == 0) {\n    // console.log(currentPos);\n    let plusOrMinus;\n    if (currentPos.x < 1) {\n      plusOrMinus = 1;\n    } else if (currentPos.x == gridW-1) {\n      plusOrMinus = -1;\n    } else {\n      plusOrMinus = Math.random() < 0.5 ? -1 : 1;\n    }\n    currentPos.x += plusOrMinus;\n    if (plusOrMinus == 1) {\n      next[0] = floor(random(2));\n      next[1] = floor(random(2));\n      next[2] = floor(random(2));\n      next[3] = tiles[index].connected[1];\n    } else {\n      next[0] = floor(random(2));\n      next[1] = tiles[index].connected[3];\n      next[2] = floor(random(2));\n      next[3] = floor(random(2));\n    }\n  } else {\n    let plusOrMinus;\n    if (currentPos.y < 1) {\n      plusOrMinus = 1;\n    } else if (currentPos.y == gridH-1) {\n      plusOrMinus = -1;\n    } else {\n      plusOrMinus = Math.random() < 0.5 ? -1 : 1;\n    }\n    currentPos.y += plusOrMinus;\n    if (plusOrMinus == 1) {\n      next[0] = tiles[0].connected[2];\n      next[1] = floor(random(2));\n      next[2] = floor(random(2));\n      next[3] = floor(random(2));\n      // circleFactor += 0.01;\n    } else {\n      next[0] = floor(random(2));\n      next[1] = floor(random(2));\n      next[2] = tiles[0].connected[0];\n      next[3] = floor(random(2));\n      // circleFactor -= 0.01;\n    }\n  }\n  tiles.push(new Tile(currentPos.x, currentPos.y, next));\n  tiles[1].draw();\n  tiles.splice(0, 1);\n}\n\nfunction drawLabyrinth() {\n  for (const tile of tiles) {\n    tile.draw();\n  }\n}\n\nfunction grid() {\n  // grid\n  for (let index = 0; index < gridW; index++) {\n    stroke(cGrid);\n    line(index * tileSize, 0, index * tileSize, h);\n  }\n  for (let index = 0; index < gridH; index++) {\n    stroke(cGrid);\n    line(0, index * tileSize, w, index * tileSize);\n  }\n}\n\n// https://www.w3schools.com/jsref/jsref_reduce.asp\nfunction getSum(total, num) {\n  return total + num;\n}",
    "inspiration_url": "http://compform.net/"
  },
  {
    "_id": "ugSHu9WmdF7EsoKQC",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-04-05T16:22:43.757Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pzefap4yig6bte2mlh2v",
        "version": 1554481403,
        "signature": "3fc21eb2897e84edd2528439ebb26e7d0c6ea88c",
        "width": 1122,
        "height": 1038,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T16:23:23Z",
        "tags": [],
        "bytes": 271791,
        "type": "upload",
        "etag": "db8f7b8110589352b327149c55c37505",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554481403/avalanche2019/pzefap4yig6bte2mlh2v.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554481403/avalanche2019/pzefap4yig6bte2mlh2v.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Spring I",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\nvar center = new Point(250, 250);\nvar i=0;\n\n\n\nvar circlePath = new Path.Circle(new Point(380, 360), 100);\ncirclePath.strokeColor = 'black';\ncirclePath.fillColor = 'white';\n\ncirclePath.style = {\n    strokeColor: '#f9cddf',\n    \n\n    fillColor: '#f9cddf',\n    \n    strokeWidth: 20,\n    strokeCap : 'round',\n    dashArray: [10, 50],\n    \n\n    shadowColor: new Color(0, 0, 0, .5),\n    shadowBlur: 12,\n    shadowOffset: new Point(5, 5),\n}\ncirclePath.opacity = 0.2;\n\nvar clones = 15;\nvar angle = 360 / clones;\n\nfor(var i = 0; i < clones; i++) {\n\tvar clonedPath = circlePath.clone();\n\tclonedPath.rotate(angle * i, circlePath.bounds.topLeft);\n};"
  },
  {
    "_id": "ugx4MikEQzeHKo9ue",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-10T03:22:36.528Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/iznsymz45z8p6iptfb3q",
        "version": 1549768967,
        "signature": "94aedaa402615012710be6a063e0155c37b8b22d",
        "width": 1268,
        "height": 1268,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-10T03:22:47Z",
        "tags": [],
        "bytes": 458425,
        "type": "upload",
        "etag": "f529180448ccc0752aad93a05c5509ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549768967/avalanche2019/iznsymz45z8p6iptfb3q.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549768967/avalanche2019/iznsymz45z8p6iptfb3q.png"
      },
      {
        "public_id": "avalanche2019/lf7ham34hk5vihelyp0u",
        "version": 1549768976,
        "signature": "09fe571f9eac60e0e75ecedac9a9aa4bf5408aa9",
        "width": 1262,
        "height": 1264,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-10T03:22:56Z",
        "tags": [],
        "bytes": 63789,
        "type": "upload",
        "etag": "ff7c8f32156c0c5c95711d3c4ad25bbc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549768976/avalanche2019/lf7ham34hk5vihelyp0u.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549768976/avalanche2019/lf7ham34hk5vihelyp0u.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-10T22:36:48.914Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-10T23:03:17.891Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T16:08:59.205Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-12T04:36:06.442Z" }
      }
    ],
    "title": "",
    "description": "Sketch provides two interactive parameters: square size, and square density. See code to play.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// Exposed parameters\n// direct - squareSize\n// indirect - squareDensity\n\n// canvas specs\nconst canvasWidth = 800,\n    canvasHeight = 800;\n\n// dynamic drawing specs\nlet numMarks = 15000, // number of marks (ie 'Mark' objects) on canvas\n    spokeWeight = .2, // weight of mark's spoke\n    maxCenterSize = 8, // center of mark\n    metaSquareWidth = 400, // overall square size\n    maxSpokeLength = 5, // length of spoke\n    metaSquareDensity = numMarks / metaSquareWidth;\n\nfunction setup() {\n    createCanvas(canvasWidth, canvasHeight);\n    stroke(45, 45, 45);\n    strokeWeight(spokeWeight);\n    fill(45, 45, 45);\n    // frameRate(2);\n    createSliders();\n}\n\nfunction createSliders() {\n    createP('Square size');\n    sizeSlider = createSlider(50, 600, 400);\n\n    createP('Square density');\n    densitySlider = createSlider(1, 50, 37);\n}\n\nclass Mark {\n    constructor() {\n        this.pts = []; // array of 4 x, y points\n\n        let canvasCntr = {x: canvasWidth * .5, y: canvasHeight * .5};\n        let metaSquareWidthHalved = sizeSlider.value() / 2;\n\n        this.pts[0] = {\n            x: canvasCntr.x + random(-metaSquareWidthHalved, metaSquareWidthHalved),\n            y: canvasCntr.y + random(-metaSquareWidthHalved, metaSquareWidthHalved)\n        }\n        this.pts[1] = {\n            x: this.pts[0].x + random(3, maxCenterSize),\n            y: this.pts[0].y + random(1, maxCenterSize / 3)\n        }\n        this.pts[2] = {\n            x: this.pts[0].x + random(3, maxCenterSize),\n            y: this.pts[0].y + random(3, maxCenterSize)\n        }\n        this.pts[3] = {\n            x: this.pts[0].x + random(1, maxCenterSize / 3),\n            y: this.pts[0].y + random(3, maxCenterSize)\n        }\n    }\n\n    drawCenter() {\n        quad(\n            this.pts[0].x, this.pts[0].y,\n            this.pts[1].x, this.pts[1].y,\n            this.pts[2].x, this.pts[2].y,\n            this.pts[3].x, this.pts[3].y\n        );\n    }\n\n    drawSpoke(iStart, iEnd) {\n        let steps = random(1, maxSpokeLength);\n        let riseMultiplier = this.pts[iStart].y - this.pts[iEnd].y;\n        let runMultiplier = this.pts[iStart].x - this.pts[iEnd].x;\n\n        let rise = steps * riseMultiplier;\n        let run = steps * runMultiplier;\n\n        let startPt = {x: this.pts[iStart].x, y: this.pts[iStart].y};\n        let endPt = {x: startPt.x + run, y: startPt.y + rise};\n\n        line(startPt.x, startPt.y, endPt.x, endPt.y);\n    }\n\n    drawSelf() {\n        this.drawCenter();\n        this.drawSpoke(0, 1);\n        this.drawSpoke(1, 2);\n        this.drawSpoke(2, 3);\n        this.drawSpoke(3, 0);\n        this.drawSpoke(1, 0);\n        this.drawSpoke(2, 1);\n        this.drawSpoke(3, 2);\n        this.drawSpoke(0, 3);\n    }\n}\n\nfunction draw() {\n    background(255);\n    // noFill();\n    // rect(1, 1, 798, 798);\n    // fill(45, 45, 45);\n    let marks = [];\n    let numMarks = sizeSlider.value() * densitySlider.value();\n    for (let i = 0; i < numMarks; i++) {\n        marks[i] = new Mark();\n        marks[i].drawSelf();\n    }\n}"
  },
  {
    "_id": "unKwsBmm3DAhjsgq7",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-02T15:33:46.729Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vdulzgldtyzliaapjqof",
        "version": 1556811245,
        "signature": "ccb9057aad51d30b34d98e862f750059a04aa9b8",
        "width": 698,
        "height": 708,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-02T15:34:05Z",
        "tags": [],
        "bytes": 139395,
        "type": "upload",
        "etag": "30e69d07640cb3ba858327b1eaa21d43",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556811245/avalanche2019/vdulzgldtyzliaapjqof.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556811245/avalanche2019/vdulzgldtyzliaapjqof.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Escher spiral staircase .  Found this in examples:  \t\n'Generating cylindical shape using linear_extrude or other command' and I adjusted the extrusion and simplified the shape.",
    "inspiration_name": "Escher"
  },
  {
    "_id": "unbLAsFSX3zsRTBda",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-19T03:23:54.675Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l6g6yzvmstfiylmciina",
        "version": 1552965862,
        "signature": "2947e4eef994e615efbee2e5e128fe43150b4551",
        "width": 2400,
        "height": 3600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-19T03:24:22Z",
        "tags": [],
        "bytes": 1981362,
        "type": "upload",
        "etag": "82742df34088f76e88c13a4ded0954dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552965862/avalanche2019/l6g6yzvmstfiylmciina.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552965862/avalanche2019/l6g6yzvmstfiylmciina.jpg"
      },
      {
        "public_id": "avalanche2019/djhrkwhmejgv6gcoe3px",
        "version": 1552965880,
        "signature": "8392c0d44cec334cb132d20e27b8b52c90ada05a",
        "width": 2400,
        "height": 3600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-19T03:24:40Z",
        "tags": [],
        "bytes": 2519196,
        "type": "upload",
        "etag": "6661fc422cb499f809b83abd41dca060",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552965880/avalanche2019/djhrkwhmejgv6gcoe3px.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552965880/avalanche2019/djhrkwhmejgv6gcoe3px.jpg"
      },
      {
        "public_id": "avalanche2019/ur5g9xa6ozhsaqu2b2ht",
        "version": 1552966008,
        "signature": "5b8b95d7d1691f605e35db2e07e02d1797404b67",
        "width": 1000,
        "height": 1528,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-19T03:26:48Z",
        "tags": [],
        "bytes": 246522,
        "type": "upload",
        "etag": "15618f9a3c99b9f093712afd19539ab2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552966008/avalanche2019/ur5g9xa6ozhsaqu2b2ht.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552966008/avalanche2019/ur5g9xa6ozhsaqu2b2ht.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-27T02:26:12.691Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-28T02:18:00.177Z" }
      }
    ],
    "title": "",
    "description": "Sierpinski Triangle in Maya vector->Photoshop+Illustrator->Class posters!"
  },
  {
    "_id": "uvMFjXmBNERApPHfp",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T16:27:24.677Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cgnq8h5zrzhfa6rz9zz3",
        "version": 1550248068,
        "signature": "c86a07ff0bdca58d4f7c27435eb717be27cf5591",
        "width": 864,
        "height": 1296,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T16:27:48Z",
        "tags": [],
        "bytes": 809425,
        "type": "upload",
        "etag": "70323418ff42473971d79dc3db328343",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550248068/avalanche2019/cgnq8h5zrzhfa6rz9zz3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550248068/avalanche2019/cgnq8h5zrzhfa6rz9zz3.jpg"
      },
      {
        "public_id": "avalanche2019/g2xhf1uq3rf6rexxyfmx",
        "version": 1550248078,
        "signature": "0e23bbffb7cb65352eceba87a2a936235eb3623d",
        "width": 864,
        "height": 1296,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T16:27:58Z",
        "tags": [],
        "bytes": 89074,
        "type": "upload",
        "etag": "ad54eb2177ca697d43314294c5900044",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550248078/avalanche2019/g2xhf1uq3rf6rexxyfmx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550248078/avalanche2019/g2xhf1uq3rf6rexxyfmx.jpg"
      },
      {
        "public_id": "avalanche2019/lqdl23tuvqw6ug3wmzls",
        "version": 1550248086,
        "signature": "23fa58f5b50fc96452d8f35a50b5fecf7d6286f8",
        "width": 864,
        "height": 1296,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-15T16:28:06Z",
        "tags": [],
        "bytes": 911087,
        "type": "upload",
        "etag": "097c85772794d06cfbb97403412a38be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550248086/avalanche2019/lqdl23tuvqw6ug3wmzls.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550248086/avalanche2019/lqdl23tuvqw6ug3wmzls.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Face"
  },
  {
    "_id": "uyP6rzk5kYEPsLogG",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "created_at": { "$date": "2019-03-01T19:54:56.612Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/u81od3xvi5oxdh4tnhel",
        "version": 1551470283,
        "signature": "70cd68568fb359c47f042ef6554b8bfe77c3e94a",
        "width": 980,
        "height": 980,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T19:58:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 3829891,
        "type": "upload",
        "etag": "f59d1e553276295a2052da3418f04dac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551470283/avalanche2019/u81od3xvi5oxdh4tnhel.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551470283/avalanche2019/u81od3xvi5oxdh4tnhel.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "5597717",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 5604376,
        "duration": 5.466992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Work in Progress. Trying to get sound.",
    "inspiration_name": "Sound Colour Cubes",
    "inspiration_url": "https://www.openprocessing.org/sketch/569409"
  },
  {
    "_id": "v56vaqony5e8KKZSB",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-02-24T02:46:30.23Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/frme9zmnlzak7rbnpxj3",
        "version": 1550976994,
        "signature": "67c2540fd047a760931c2d5940cc02f27070dd24",
        "width": 1028,
        "height": 1156,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-24T02:56:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 7467887,
        "type": "upload",
        "etag": "7344b00cdf3591e4750a47726171e86d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550976994/avalanche2019/frme9zmnlzak7rbnpxj3.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550976994/avalanche2019/frme9zmnlzak7rbnpxj3.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2639935",
          "dar": "257:289"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2649361,
        "duration": 22.55,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-24T18:17:28.943Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Now I have the feeling I finally understood noise :)",
    "inspiration_name": "Required Challenge 2",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\nvar noisePosition = 0;\n\nfunction setup() {\n  angleMode(DEGREES);\n  createCanvas(500, 300);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 40, 8, 0.01);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 10, 5, 1);\n  createP(\"Time Speed\");\n  speed_slider = createSlider(0, 0.1, 0.05, 0.01);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  var amplitude = amplitude_slider.value();\n  var frequency = frequency_slider.value();\n  var speed = speed_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  noisePosition += speed;\n\n  for (i = 0; i < 1; i += 0.02) {\n    var x = lerp(startX, endX, i);\n    var y = lerp(startY, endY, i);\n\n    // hint: the plus sign was crucial\n    var offsetX = noise(frequency * i + noisePosition, 0) * amplitude * 10;\n    var offsetY = noise(frequency * i + noisePosition, 1000) * amplitude * 10;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}"
  },
  {
    "_id": "v7oL9ZmotGAqcgdtX",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T15:57:27.674Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pj1kbwv1vgjku1owkxxu",
        "version": 1549555063,
        "signature": "1eda37cd17e01e26b588f22b73cfd53fb0199285",
        "width": 800,
        "height": 806,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T15:57:43Z",
        "tags": [],
        "bytes": 34074,
        "type": "upload",
        "etag": "27f58843cdde3bbc56d757279e580ad3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549555063/avalanche2019/pj1kbwv1vgjku1owkxxu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549555063/avalanche2019/pj1kbwv1vgjku1owkxxu.png"
      },
      {
        "public_id": "avalanche2019/a7omkf4wxm19uydw6tku",
        "version": 1549555071,
        "signature": "aac574ef60c430948f8d9d090769a94b2fec229c",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T15:57:51Z",
        "tags": [],
        "bytes": 33605,
        "type": "upload",
        "etag": "ed73e368eb50f818f8dbfd2dd288d2e1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549555071/avalanche2019/a7omkf4wxm19uydw6tku.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549555071/avalanche2019/a7omkf4wxm19uydw6tku.png"
      },
      {
        "public_id": "avalanche2019/dvr9d8uuetex4knwj6dt",
        "version": 1549555122,
        "signature": "dee87366a227f42d79528dad7163df6c4b4024ce",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T15:58:42Z",
        "tags": [],
        "bytes": 34236,
        "type": "upload",
        "etag": "795c1cd2ab9b6771f9ec60b71100f12e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549555122/avalanche2019/dvr9d8uuetex4knwj6dt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549555122/avalanche2019/dvr9d8uuetex4knwj6dt.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "P5 code would have made V. Vasarely's life alot easier.The start of simple Op-Art with Justins circle code - first sketch from last weekend.",
    "inspiration_name": "Vasarely",
    "code": "function setup() {\n  createCanvas(400, 400);\n  noLoop()\n}\n\nfunction draw() {\n  background(200, 0, 200);\n\n  //rect(200, 50, 75, 75);\n  noStroke(0);\n  fill(255, 30, 50);\n  \n      var rows = height / 50;\n    var cols = width / 50;\n\n    for (row = 0; row < rows; row++) {\n        for (col = 0; col < rows; col++) {\n            drawThing(col * 50 + 25, row * 50 + 25);\n        }\n    }\n\n\n\n\n}\n\n//var brownianRadius = 25;\n\nfunction drawThing(x, y) {\n    var radius;\n\n    //from Justin's class code\n  \t\n  // even\n    radius = random(0, 50);\n  \n  // very strong low bias\n    // radius = min(random(0, 50), random(0, 50), random(0, 50), random(0, 50), random(0, 50));\n\n    // very strong high bias\n    // radius = max(random(0, 50), random(0, 50), random(0, 50), random(0, 50), random(0, 50));\n\n    // very strong middle bias\n    // radius = (random(0, 50) + random(0, 50) + random(0, 50) + random(0, 50) + random(0, 50)) * 0.2;\n  \n  rect(x, y, radius, radius);\n}"
  },
  {
    "_id": "v9jzpSKZQtPGqneFb",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "3D",
    "created_at": { "$date": "2019-04-29T05:58:38.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qyqxmyopo0badeu521v2",
        "version": 1556517531,
        "signature": "686992eb009498f66fd9510d311e39da66efae8f",
        "width": 1266,
        "height": 1078,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-29T05:58:51Z",
        "tags": [],
        "bytes": 112784,
        "type": "upload",
        "etag": "1caf25042e3392af516b7f76b0c4d1f3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556517531/avalanche2019/qyqxmyopo0badeu521v2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556517531/avalanche2019/qyqxmyopo0badeu521v2.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A tower for the castle?",
    "inspiration_name": "OpenSCAD cheatsheet offset example",
    "inspiration_url": "https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#offset",
    "code": "// Floor\ncolor (\"DarkOliveGreen\")\nsquare([200000,200000],true);\n\n// Define brick\nbrick_length = 20;\nbrick_height = 5;\nbrick_depth = 8;\n// Define ring\nbricks_per_ring = 90;\ncircumference_ring = brick_length*bricks_per_ring;\nradius_ring = circumference_ring/(2*PI);\nradius_ring_plus_space = radius_ring+10;\n// Define wall\nnumber_of_rings = 80;\n\nmodule wall_ring () {\n    for (r = [0:bricks_per_ring]) {\n        rotate([0,0,360/bricks_per_ring*r]) translate([0,radius_ring_plus_space,0]) cube([  brick_length,brick_depth,brick_height],false);\n    }\n}\nmodule wall() {\n    for (l = [0:number_of_rings]) {\n        rotate([0,0,180/bricks_per_ring*l]) translate([0,0,(brick_height)*l]) wall_ring();\n    }\n}\n\ncolor(\"Sienna\") {\n    wall();\n}\n\n\n// A tree\ntree_height = 30;\n\nmodule tree () {\n    color(\"BurlyWood\")  {\n        cylinder(h=tree_height, r1=4, r2=3, center=false, $fn = 5);\n    }\n    color(\"ForestGreen\")  {\n        translate([0,0,tree_height]) sphere(d = 30, $fn = 5);\n    }\n    \n}\n\n// A group of trees\nmodule tree_group () {\n    random_number_of_trees = rands(2,5,1)[0];\n    for (r = [0:random_number_of_trees]) {\n        translate([rands(-40,40,1)[0],rands(-40,40,1)[0],0]) tree();\n    }\n}\n\n// A small garden of trees\n\nmodule tree_group_scatter () {\n    random_number_of_tree_groups = rands(8,10,1)[0];\n    for (r = [0:random_number_of_tree_groups]) {\n        random_rotation=rands(0,360,1)[0];\n        rotate([0,0,random_rotation]) translate([radius_ring+rands(50,400,1)[0],radius_ring+rands(50,400,1)[0],0]) tree_group();\n    }\n}\n\n// translate([0,radius_ring+100,0]) \ntree_group_scatter();\n\n// A tower\ntower_height=600;\ncolor(\"Gold\", 0.9) {\n    linear_extrude(height = tower_height, twist = 270, slices = 6) {\n       difference() {\n         offset(r = 2) {\n          square(200, center = true);\n         }\n         offset(r = 0) {\n           square(200, center = true);\n         }\n       }\n     }\n     translate([0,0,tower_height]) rotate([0,0,45]) cylinder(h=100, r1=145, r2=250, center=false, $fn = 4);\n     translate([0,0,tower_height+300]) sphere(d = 500, $fn = 20);\n }\n \n\n\n// Experiment with this later:\n//hull() {\n//    translate([15,10,100]) sphere(10);\n//    sphere(10);\n//}\n\n//single_rand = rands(0,10,1)[0];\n//echo(single_rand);"
  },
  {
    "_id": "vBSvj2dMyqtTquT34",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-25T15:40:45.027Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "' the Twilight Zone'  with membrane tone",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n\n// create a synth\nconst synth = new Tone.MembraneSynth().toMaster();\n// create an array of Twilight Zone notes to be played\nconst notes = [\"G#5\", \"A5\", \"G#5\", \"E5\"];\n// create a new sequence with the synth and notes\nconst synthPart = new Tone.Sequence(\n  function(time, note) {\n    synth.triggerAttackRelease(note, \"8hz\", time);\n  },\n  notes,\n  \"7n\"\n);\n// Setup the synth to be ready to play on beat 1\nsynthPart.start();\n// Note that if you pass a time into the start method \n// you can specify when the synth part starts \n// e.g. .start('8n') will start after 1 eighth note\n// start the transport which controls the main timeline\nTone.Transport.start();"
  },
  {
    "_id": "vBowXNCPh5vdeoedx",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T15:15:10.305Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kau9nqsccvvudzr9hqzx",
        "version": 1552662990,
        "signature": "8d7bea3e1a11688f0967becfca7e13076df37771",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T15:16:30Z",
        "tags": [],
        "bytes": 121294,
        "type": "upload",
        "etag": "74de5fe0286db94fea0e6c77b402a847",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552662990/avalanche2019/kau9nqsccvvudzr9hqzx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552662990/avalanche2019/kau9nqsccvvudzr9hqzx.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T15:34:34.634Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-26T02:50:31.404Z" }
      }
    ],
    "title": "",
    "description": "Trying to make a flock of birds"
  },
  {
    "_id": "vFNy7FJPRtwPvw837",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:59:09.695Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cxo8mfzwxg10kgx4uklr",
        "version": 1552669162,
        "signature": "d0a6e0fd77d8f106c53a34de6801b3174d522de1",
        "width": 620,
        "height": 616,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T16:59:22Z",
        "tags": [],
        "bytes": 17016,
        "type": "upload",
        "etag": "1617b3acc3ebac2761bce085a228ef46",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552669162/avalanche2019/cxo8mfzwxg10kgx4uklr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552669162/avalanche2019/cxo8mfzwxg10kgx4uklr.jpg"
      },
      {
        "public_id": "avalanche2019/iirbwctamj0frhhlgjy4",
        "version": 1552669170,
        "signature": "a2e17cdd25c502ab494c1bc860c955690fcc6866",
        "width": 368,
        "height": 354,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T16:59:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 6611,
        "type": "upload",
        "etag": "8710225e9feb206f6243c303d28d57c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552669170/avalanche2019/iirbwctamj0frhhlgjy4.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552669170/avalanche2019/iirbwctamj0frhhlgjy4.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "21571",
          "dar": "184:177"
        },
        "frame_rate": 60,
        "bit_rate": 31110,
        "duration": 1.7,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T17:05:15.765Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-03-15T17:18:28.261Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T17:26:06.595Z" }
      }
    ],
    "title": "",
    "description": "Happy accident. That mid-finger."
  },
  {
    "_id": "vHGs6GHaxvqj3TTGX",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T18:57:16.024Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ew9pxarqctq2fesqcg9b",
        "version": 1557514666,
        "signature": "7d312e0c32a3ecd449c00f989c95921d754131aa",
        "width": 984,
        "height": 986,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-10T18:57:46Z",
        "tags": [],
        "bytes": 30384,
        "type": "upload",
        "etag": "5298a884256520c2682bf72d67eeb875",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557514666/avalanche2019/ew9pxarqctq2fesqcg9b.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557514666/avalanche2019/ew9pxarqctq2fesqcg9b.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T19:54:04.32Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-05-10T23:04:29.233Z" }
      }
    ],
    "title": "",
    "description": "I vaguely remember a whole game like this – it was horrible",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require /microgames/sketches/p5.play.js\n\n// Credit: P5 play example\n// http://molleindustria.github.io/p5.play/examples/index.html?fileName=breakout.js#\n//breakout close (core mechanics)\n//mouse to control the paddle, click to start\n\nvar task;\nvar options = [];\nvar timer = 7;\nvar isRunning = false;\nvar lost = false;\nvar won = false;\nvar start = true;\nvar clickOnlyOnce = true;\n// var isRunning = true;\n\n\nfunction setup() {\n  frameRate(60);\n  createCanvas(500, 500);\n  rectMode(CENTER)\n  falseRectangle = createSprite(width/3*2, height/2, 140, 80);\n  falseRectangle.shapeColor = color(0,0,255);\n  falseRectangle.mouseActive = true;\n  rightSquare = createSprite(width/3, height/2, 80, 80);\n  rightSquare.shapeColor = color(0,200,0);\n  rightSquare.mouseActive = true;\n}\n\nfunction draw() {\n    noStroke();\n    background(240)\n    textAlign(CENTER)\n    textSize(50)\n    textStyle(BOLD)\n    fill(\"black\")\n    text(\"CLICK THE\", width/2, height/5)\n    fill(\"blue\")\n    text(\"SQUARE!\", width/2, height/5+50)\n    \n    fill(\"red\")\n    text(timer.toFixed(1), width/2, height/5*4)\n    if (isRunning) {\n      timer -=0.1;\n    }\n    if (timer <= 0 && isRunning) {\n      isRunning = false;\n      falseRectangle.remove()\n      rightSquare.remove()\n      if (!won) {\n        lost = true\n      }\n    }\n    \n    falseRectangle.onMouseReleased = function() {\n      lost = true\n      isRunning = false;\n      falseRectangle.remove()\n      rightSquare.remove()\n    }\n\n    rightSquare.onMouseReleased = function() {\n      won = true\n      isRunning = false;\n      falseRectangle.remove()\n      rightSquare.remove()\n    }\n\n    if (!isRunning) {\n      background(30);\n      if (start) {\n        fill(\"white\")\n        text(\"READY?\", width/2, height/2)\n        textSize(16)\n        text(\"– click here!\", width/2, height/2+120)\n      }\n      if (lost) {\n        fill(\"red\")\n        text(\"YOU DIED\", width/2, height/2)\n      }\n      if (won) {\n        fill(0,200,0)\n        text(\"YOU WON\", width/2, height/2)\n      }\n    }\n\n    if (isRunning) {\n      drawSprites();\n    }\n}\n\nfunction mousePressed() {\n    if (clickOnlyOnce) {\n      start = false;\n      isRunning = true;\n      clickOnlyOnce = false;\n    }\n}"
  },
  {
    "_id": "vMqA73c37DptcJSfx",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-04T20:11:18.84Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cjikl7wyoafws926uhlv",
        "version": 1554408738,
        "signature": "489646c163e55642da839c32aecafd062c2b0787",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-04T20:12:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 3416146,
        "type": "upload",
        "etag": "3438269e877bd23a92defff24cbcdead",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554408738/avalanche2019/cjikl7wyoafws926uhlv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554408738/avalanche2019/cjikl7wyoafws926uhlv.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "253376",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "8821576",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 9109722,
        "duration": 3,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Some kinda linked rings thing in p5 and then PS"
  },
  {
    "_id": "vSHwMyJ3WyRpXTWkp",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T17:41:14.483Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jfj7um6ugqbkpykj7huq",
        "version": 1550252759,
        "signature": "23e0b38091e81468fda5bb09c46b90bff3f03e88",
        "width": 854,
        "height": 1400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T17:45:59Z",
        "tags": [],
        "bytes": 216988,
        "type": "upload",
        "etag": "e5c9832e9f5216aae55abbef581410ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550252759/avalanche2019/jfj7um6ugqbkpykj7huq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550252759/avalanche2019/jfj7um6ugqbkpykj7huq.png"
      },
      {
        "public_id": "avalanche2019/tagneve26kue5twktggh",
        "version": 1550252770,
        "signature": "a2667f70f1466571ed19afb5125810373e5b3103",
        "width": 838,
        "height": 1392,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T17:46:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 12071919,
        "type": "upload",
        "etag": "e3b09095983ce2767a9decfd0139797d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550252770/avalanche2019/tagneve26kue5twktggh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550252770/avalanche2019/tagneve26kue5twktggh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "5910736",
          "dar": "419:696"
        },
        "frame_rate": 15,
        "bit_rate": 5912776,
        "duration": 16.333333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Create a snowstorm!\n---\nAdded parameters to the classic p5 snowflakes example.",
    "inspiration_name": "P5 snowflakes",
    "inspiration_url": "https://p5js.org/examples/simulate-snowflakes.html"
  },
  {
    "_id": "vXk2gqWPazQHzRhXd",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T19:32:22.045Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qfuroa8ir7jld71kxajf",
        "version": 1550259154,
        "signature": "42b8a10bc5e1840daf942232d6e709c9a299e04e",
        "width": 1228,
        "height": 860,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T19:32:34Z",
        "tags": [],
        "bytes": 58794,
        "type": "upload",
        "etag": "68158bfeedecbc9c72c1d09a13527512",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550259154/avalanche2019/qfuroa8ir7jld71kxajf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550259154/avalanche2019/qfuroa8ir7jld71kxajf.png"
      },
      {
        "public_id": "avalanche2019/ssg3mzlcurq7dgag6h4t",
        "version": 1550259164,
        "signature": "03120b4aaebc607be8ac25622bc315888ffb5865",
        "width": 1232,
        "height": 832,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T19:32:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 368275,
        "type": "upload",
        "etag": "52d0ace37aeb7b8194c3f863f745c0be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550259164/avalanche2019/ssg3mzlcurq7dgag6h4t.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550259164/avalanche2019/ssg3mzlcurq7dgag6h4t.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "259246",
          "dar": "77:52"
        },
        "frame_rate": 15,
        "bit_rate": 261729,
        "duration": 11.256667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/i7ujdklooagnrnnuxnkt",
        "version": 1550259166,
        "signature": "dec61054870b3fb1e2b94cefdfe128488863d5c9",
        "width": 1232,
        "height": 832,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T19:32:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 197164,
        "type": "upload",
        "etag": "5f30b0959d573ffb6b8af75eeb077279",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550259166/avalanche2019/i7ujdklooagnrnnuxnkt.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550259166/avalanche2019/i7ujdklooagnrnnuxnkt.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "325546",
          "dar": "77:52"
        },
        "frame_rate": 15,
        "bit_rate": 369826,
        "duration": 4.265,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Translate any text to sound like Yoda, a pirate, and more!\n---\nUsed p5 and the fun translations api",
    "inspiration_name": "Fun translations API",
    "inspiration_url": "https://funtranslations.com/api",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\n// used https://funtranslations.com/api for translations\n\nlet input, button, selector;\n\nfunction setup() {\n  // create canvas\n  colorMode(HSB, 100);\n  createCanvas(600, 400);\n  background(90, 10, 99);\n\n  input = createInput().attribute(\"placeholder\", \" Enter text to translate\");\n  input.position(40, 51);\n\n  // createP(\"Text Transform\");\n  selector = createSelect();\n  selector.option(\"Yoda\", \"yoda\");\n  selector.option(\"Pirate\", \"pirate\");\n  selector.option(\"Valley Speak\", \"valspeak\");\n  selector.option(\"Minion\", \"minion\");\n  selector.option(\"Shakespeare\", \"shakespeare\");\n  selector.option(\"Emoji\", \"emoji\");\n  selector.position(input.width + 50, 51);\n\n  button = createButton(\"Translate!\");\n  button.position(input.x + input.width + selector.width + 80, 51);\n  button.mousePressed(gen);\n}\n\nfunction gen() {\n  let query = input.value();\n  let type = selector.value();\n  input.value(\"\");\n\n  // string replacement from appendTo.com\n  for (i = 0; i < query.length; i++) {\n    query = query.replace(\" \", \"%20\");\n  }\n\n  fetch(`https://api.funtranslations.com/translate/${type}.json?text=${query}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      console.log(data);\n      text(`${type} translation: ${data.contents.translated}`, 10, 150);\n      text(`Original text: ${data.contents.text}`, 10, 220);\n    })\n    .catch(err => {\n      console.log(\"Error happened during fetching!\", err);\n    });\n}"
  },
  {
    "_id": "vaS9BkK9JkSWYWQwA",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Akbar",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-25T23:19:32.677Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bf8j8jznzddd1siwzmws",
        "version": 1548458560,
        "signature": "b225d8edcf98bf827c8baf157d87528c3aac86bb",
        "width": 1948,
        "height": 1414,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-25T23:22:40Z",
        "tags": [],
        "bytes": 1314580,
        "type": "upload",
        "etag": "be351536de0d8a8a52069c1f87397be7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548458560/avalanche2019/bf8j8jznzddd1siwzmws.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548458560/avalanche2019/bf8j8jznzddd1siwzmws.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Squidward?"
  },
  {
    "_id": "vaepZNfErcyu89xXu",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T18:19:27.553Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/uerfje2qsmiasqx2ccff",
        "version": 1549650025,
        "signature": "16ad73ceb5f92cdca2364b25fa3654397cf038c2",
        "width": 798,
        "height": 592,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T18:20:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 2758207,
        "type": "upload",
        "etag": "64b96df1f801c80b7b2a0eaccffb441f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549650025/avalanche2019/uerfje2qsmiasqx2ccff.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549650025/avalanche2019/uerfje2qsmiasqx2ccff.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3167201",
          "dar": "399:296"
        },
        "frame_rate": 60,
        "bit_rate": 3237015,
        "duration": 6.816667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Riffing off Noah's jitter sketch."
  },
  {
    "_id": "vakSa66t7mJhaeZAY",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T19:04:40.33Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dfzcya6nzixwhnrmujje",
        "version": 1556305491,
        "signature": "bc550efdf30ec1b5a31d06e7baeb6b172aab8db2",
        "width": 980,
        "height": 388,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T19:04:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 5482035,
        "type": "upload",
        "etag": "01092ffba4af029447176f4475c9d547",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556305491/avalanche2019/dfzcya6nzixwhnrmujje.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556305491/avalanche2019/dfzcya6nzixwhnrmujje.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "311633",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "5241303",
          "dar": "245:97"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6297570,
        "duration": 6.964,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "visualizer"
  },
  {
    "_id": "vd6h2aBiyhjXzxyWL",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T02:17:20.709Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/un3du4g0vfaqthmsx3y6",
        "version": 1549592251,
        "signature": "97486f1f806902b4efa24536facb37e600849858",
        "width": 470,
        "height": 456,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T02:17:31Z",
        "tags": [],
        "bytes": 5755,
        "type": "upload",
        "etag": "64cba85fb94005d841016bc03ff95632",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549592251/avalanche2019/un3du4g0vfaqthmsx3y6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549592251/avalanche2019/un3du4g0vfaqthmsx3y6.png"
      },
      {
        "public_id": "avalanche2019/c6oukxgmb6xpi5h9hcon",
        "version": 1549592255,
        "signature": "2aec8907b2c26fd7c5589089864015a78196c126",
        "width": 476,
        "height": 456,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T02:17:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 35503,
        "type": "upload",
        "etag": "5f3e5f0d76793b720d5a9dea38457dd3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549592255/avalanche2019/c6oukxgmb6xpi5h9hcon.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549592255/avalanche2019/c6oukxgmb6xpi5h9hcon.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "34168",
          "dar": "119:114"
        },
        "frame_rate": 15,
        "bit_rate": 36727,
        "duration": 7.733333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Mondrian style, boxes fill randomly from array of color values at 2 frames per second, with a bias towards white to better match the originals",
    "inspiration_name": "Piet Mondrian",
    "inspiration_url": "https://en.wikipedia.org/wiki/File:Piet_Mondriaan,_1930_-_Mondrian_Composition_II_in_Red,_Blue,_and_Yellow.jpg",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n\n\nfunction setup() {\n  createCanvas(200, 200);\n  background(\"#fff\");\n  noStroke();\n\n  // color values with all colors represented 1 time but white 4 times to increase the probability of being selected.\n  colorOptions = [\n    \"#D01619\", // red\n    \"#050404\", // black\n    \"#FED308\", // yellow\n    \"#344D90\", // blue\n    \"#F9F9F9\", // white\n    \"#F9F9F9\", // white\n    \"#F9F9F9\", // white\n    \"#F9F9F9\" // white\n  ];\n}\n\nfunction draw() {\n  frameRate(2);\n  // spacing of Mondrian style boxes inspired by https://editor.p5js.org/CarlieZ/sketches/BkYuHVX2\n  fill(colorOptions[floor(random(0, colorOptions.length))]);\n  rect(0, 0, 50, 200);\n\n  fill(colorOptions[floor(random(0, colorOptions.length))]);\n  rect(50, 0, 150, 200);\n\n  fill(colorOptions[floor(random(0, colorOptions.length))]);\n  rect(50, 135, 200, 200);\n\n  fill(colorOptions[floor(random(0, colorOptions.length))]);\n  rect(0, 135, 50, 70);\n\n  fill(colorOptions[floor(random(0, colorOptions.length))]);\n  rect(180, 170, 180, 70);\n\n  fill(colorOptions[floor(random(0, colorOptions.length))]);\n  rect(180, 165, 50, 10);\n\n  // fixed black borders\n  fill(\"#000\");\n  rect(43, 0, 8, 200);\n  rect(0, 135, 200, 8);\n  rect(0, 65, 50, 12);\n  rect(177, 135, 7, 90);\n}"
  },
  {
    "_id": "veJxrLJFuii6NTJhq",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-10T19:41:06.503Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/rjourac2zvxcon70j8jd",
        "version": 1557517320,
        "signature": "bbd4a1e2d7a258a174f19105e5402c4d5ac06d2e",
        "width": 1046,
        "height": 1044,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-10T19:42:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 4772551,
        "type": "upload",
        "etag": "db0fede5ccf5f76aef22a94850fd72d0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557517320/avalanche2019/rjourac2zvxcon70j8jd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557517320/avalanche2019/rjourac2zvxcon70j8jd.mov",
        "audio": {
          "codec": "pcm_s24le",
          "bit_rate": "2116800",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuvj420p",
          "codec": "mjpeg",
          "level": -99,
          "profile": "192",
          "bit_rate": "5415257",
          "dar": "523:522"
        },
        "is_audio": false,
        "frame_rate": 20,
        "bit_rate": 7898578,
        "duration": 4.833833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "transition scene for microgames",
    "code": "// p5 sketch link: https://editor.p5js.org/uryuu1002/sketches/Hd4zs-P_n\n\nvar girl;\n\n//it's advisable (but not necessary) to load the images in the preload function\n//of your sketch otherwise they may appear with a little delay\nfunction preload() {\n\n  //create an animation from a sequence of numbered images\n  //pass the first and the last file name and it will try to find the ones in between\n  girl = loadAnimation('frames/frame_001.png','frames/frame_002.png','frames/frame_003.png','frames/frame_004.png','frames/frame_005.png','frames/frame_006.png','frames/frame_007.png','frames/frame_008.png','frames/frame_009.png','frames/frame_010.png','frames/frame_011.png','frames/frame_012.png','frames/frame_013.png','frames/frame_014.png','frames/frame_015.png');\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n}\n\nfunction draw() {\n  background(0);\n  animation(girl, width/2, height/2-50);\n  fill(255);\n  noStroke();\n  textSize(72);\n  textAlign(CENTER, CENTER);\n  text(\"Loading...\", width/2, height-150);\n\n}"
  },
  {
    "_id": "veL9NPgwTyzwkMrdM",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T18:57:11.131Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yipbokwdkifw8az8bgbp",
        "version": 1554490642,
        "signature": "18dce8cd8cf502efe84998429057141bd85f6013",
        "width": 1200,
        "height": 1200,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T18:57:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 1472436,
        "type": "upload",
        "etag": "0539bb1a746efaae3d3352a526607590",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554490642/avalanche2019/yipbokwdkifw8az8bgbp.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554490642/avalanche2019/yipbokwdkifw8az8bgbp.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "253375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "910699",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1177948,
        "duration": 10,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T19:13:05.39Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-06T02:31:48.393Z" }
      }
    ],
    "title": "",
    "description": "Comp form bumper",
    "inspiration_name": "Justin's sierpinski triangle"
  },
  {
    "_id": "vfEiSxHAJt7cYnDNo",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T23:44:20.248Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ooqbbblgxf6tliukezgv",
        "version": 1556754418,
        "signature": "4b615e60293e9172e92e08cc958cb49a2b498ce1",
        "width": 1290,
        "height": 1366,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T23:46:58Z",
        "tags": [],
        "bytes": 171241,
        "type": "upload",
        "etag": "5800c96726b3e85fa3e55300b8c35f89",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556754418/avalanche2019/ooqbbblgxf6tliukezgv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556754418/avalanche2019/ooqbbblgxf6tliukezgv.png"
      },
      {
        "public_id": "avalanche2019/tslq4akqzliz0uambdx6",
        "version": 1556754423,
        "signature": "26cfac0ebb907a38c582ab5e924019f11dd3c2fe",
        "width": 2274,
        "height": 1364,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T23:47:03Z",
        "tags": [],
        "bytes": 373383,
        "type": "upload",
        "etag": "98bb0dbf45b511e999f387a4e6b81e36",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556754423/avalanche2019/tslq4akqzliz0uambdx6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556754423/avalanche2019/tslq4akqzliz0uambdx6.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "New York castle remembering how to build buildings in Maya"
  },
  {
    "_id": "vk62tRs4g3kdg5dmS",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-07T06:35:08.444Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/gfurxzr4znehyeswlzuj",
        "version": 1551940513,
        "signature": "4d1e3adefb1ced1ec061b94d65ded5fd6cb7a286",
        "width": 1004,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-07T06:35:13Z",
        "tags": [],
        "bytes": 1768398,
        "type": "upload",
        "etag": "91131c5bca8b8be708e36aa9b9839a46",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551940513/avalanche2019/gfurxzr4znehyeswlzuj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551940513/avalanche2019/gfurxzr4znehyeswlzuj.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Noisy Simpson",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nvar worldImage;\n\nfunction preload() {\n    worldImage = loadImage(\"simpson.png\");\n  \n}\n\nfunction setup() {\n    createCanvas(500, 500);\n}\n\n\nfunction draw() {\n    background(0);\n    back();\n    noStroke();\n\n    var spacing = 500 / worldImage.width;\n    for (var y = 0; y < worldImage.height; y++) {\n        for (var x = 0; x < worldImage.width; x++) {\n                 fill(random(235),random(230),random(10));\n            var in_color = worldImage.get(x, y);\n            var dot_size = lightness(in_color) / 255 * 1000;\n            ellipse(x * spacing + spacing * .5, y * spacing + spacing * 0.5, dot_size, dot_size);\n        }\n    }\n    noLoop();\n}\n\nfunction back(){\n  img = createImage(500, 500);\n    img.loadPixels();\n\n    for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n            var c = color(random(207),random(10),random(200));\n            img.set(x, y, c);\n        }\n    }\n\n    img.updatePixels();\n\n    noSmooth();\n    image(img, 0, 0, width, height);\n    noLoop();\n}"
  },
  {
    "_id": "vmmWoPcFjszaASmXg",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T14:53:43.362Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h1nfi7oqdtcgt7mkovkj",
        "version": 1550242578,
        "signature": "c3623fd89274e6220061d9ba95d05375dfa9503a",
        "width": 488,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T14:56:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 5587371,
        "type": "upload",
        "etag": "b921cdb7f3da98c237b0dbf6fe6265f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550242578/avalanche2019/h1nfi7oqdtcgt7mkovkj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550242578/avalanche2019/h1nfi7oqdtcgt7mkovkj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4242978",
          "dar": "61:60"
        },
        "frame_rate": 60,
        "bit_rate": 4250297,
        "duration": 10.516667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/mj1nft7mjpxjv4amuohg",
        "version": 1550242584,
        "signature": "83db4ed74e6e202b193e5d289b4e8ad11b4ccc49",
        "width": 1304,
        "height": 1192,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T14:56:24Z",
        "tags": [],
        "bytes": 477744,
        "type": "upload",
        "etag": "0a24d21ce59a913b07c15cc51ccc7458",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550242584/avalanche2019/mj1nft7mjpxjv4amuohg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550242584/avalanche2019/mj1nft7mjpxjv4amuohg.png"
      },
      {
        "public_id": "avalanche2019/fzhfha4mzeetta6rhj2j",
        "version": 1550242626,
        "signature": "e1938ae9fb5ef5aa4b26ef946ab0117e199db975",
        "width": 1220,
        "height": 1116,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-15T14:57:06Z",
        "tags": [],
        "bytes": 683290,
        "type": "upload",
        "etag": "b730b3504016a7d0e748ed3767e95dd6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550242626/avalanche2019/fzhfha4mzeetta6rhj2j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550242626/avalanche2019/fzhfha4mzeetta6rhj2j.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with mouse position and slider value parameters. Messing up starry skies"
  },
  {
    "_id": "vmu5ZFBLd2Km5aXjv",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "created_at": { "$date": "2019-02-28T01:04:26.367Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qzhcjxquwsmlmplw1ofz",
        "version": 1551315945,
        "signature": "a75587684aea939e15f306166b3e3aecec3b2722",
        "width": 990,
        "height": 594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T01:05:45Z",
        "tags": [],
        "bytes": 34966,
        "type": "upload",
        "etag": "373b5cdc07ebdcef9ca6feea8847df98",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551315945/avalanche2019/qzhcjxquwsmlmplw1ofz.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551315945/avalanche2019/qzhcjxquwsmlmplw1ofz.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Line challenge",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nvar amplitude_slider, speed_slider, frequency_slider;\nvar active = 0;\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\n\nfunction setup() {\n    createCanvas(500, 300);\n\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 100, 50);\n    createP('time speed');\n    speed_slider = createSlider(0, 100, 50);\n    createP('frequency');\n    frequency_slider = createSlider(0, 300, 50);\n\n}\n\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n\n    var amplitude = amplitude_slider.value() / 100;\n    var speed = speed_slider.value() / 1500;\n    var frequency = frequency_slider.value() / 5;\n    active = speed + active;\n    noiseDetail(1, .5);\n\n    fill(255);\n    noStroke();\n\n    // study this loop. do you understand how the line of ellipses is created?\n    for (i = 0; i < 1; i += .02) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n\n        // hint: drive offsetX and offsetY with noise() instead of random()\n        var offsetX = noise(frequency*i + active) * amplitude * 80;\n        var offsetY = noise(frequency *i + active) * amplitude * 80;\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n}"
  },
  {
    "_id": "voPwQ5Q7XRDftTENe",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T18:10:14.078Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/clyhdqhlwuit1rc5x0bv",
        "version": 1549047741,
        "signature": "4fc206d419fe6498a5a53be935e2bb8ec8beb397",
        "width": 1080,
        "height": 1920,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T19:02:21Z",
        "tags": [],
        "bytes": 920009,
        "type": "upload",
        "etag": "a0cf24a2c424d12deb2bf98b10364a8c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549047741/avalanche2019/clyhdqhlwuit1rc5x0bv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549047741/avalanche2019/clyhdqhlwuit1rc5x0bv.jpg"
      },
      {
        "public_id": "avalanche2019/q4h2vzowybinbxgfftap",
        "version": 1549048720,
        "signature": "427237a5b62c8df4aa38b86ce5f7a4dcad302586",
        "width": 1920,
        "height": 1080,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T19:18:40Z",
        "tags": [],
        "bytes": 695027,
        "type": "upload",
        "etag": "890c93c0cc9ff1baa9b08444cbfba1c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549048720/avalanche2019/q4h2vzowybinbxgfftap.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549048720/avalanche2019/q4h2vzowybinbxgfftap.jpg"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:24.505Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:52.649Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:00:26.778Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:00.984Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:51.65Z" }
      },
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:11:18.494Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:16:43.782Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:19:22.618Z" }
      }
    ],
    "title": "",
    "description": "Four-tile alphabet experiments"
  },
  {
    "_id": "vsQbdFHMPc8C9jxDb",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T16:42:38.247Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vpvwoo9xk4buqme0r94e",
        "version": 1554482577,
        "signature": "370d09eabb43a27217e8821dc7ea07920787d331",
        "width": 300,
        "height": 300,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T16:42:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 8177404,
        "type": "upload",
        "etag": "b8860a1df2e72e1cf0ca3ce581138fd0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554482577/avalanche2019/vpvwoo9xk4buqme0r94e.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554482577/avalanche2019/vpvwoo9xk4buqme0r94e.mov",
        "audio": {
          "codec": "pcm_s16le",
          "bit_rate": "1536000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "rgb24",
          "codec": "qtrle",
          "level": -99,
          "bit_rate": "17668594",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 22029399,
        "duration": 2.969633,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "bubbles"
  },
  {
    "_id": "vt2ySedEi7j8Z2QF6",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T05:37:36.334Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/npdwynnxvnmhyszu0hei",
        "version": 1557380297,
        "signature": "5aeca66096c364c027fb2fc8d0616638d78fd7d9",
        "width": 1256,
        "height": 1496,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-05-09T05:38:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 1726289,
        "type": "upload",
        "etag": "94ee06bf045d804b5348ace2492e5472",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1557380297/avalanche2019/npdwynnxvnmhyszu0hei.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1557380297/avalanche2019/npdwynnxvnmhyszu0hei.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "868010",
          "dar": "157:187"
        },
        "frame_rate": 60,
        "bit_rate": 874993,
        "duration": 15.783333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ykqhwnsaauqr54dpgwtn",
        "version": 1557382385,
        "signature": "b9f279906e57f31b9c7f6c8a9053e3574dc7c836",
        "width": 997,
        "height": 346,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-09T06:13:05Z",
        "tags": [],
        "bytes": 67517,
        "type": "upload",
        "etag": "1e60874842c743be74680fcd11340f5b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1557382385/avalanche2019/ykqhwnsaauqr54dpgwtn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1557382385/avalanche2019/ykqhwnsaauqr54dpgwtn.jpg"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Connected to p5.play, created some assets, and made a simple sprite interaction to get started. Micrograme(s) still to come!",
    "code": "var sprite;\nvar img;\nvar txt;\nvar move_sprite = false;\nvar direction = 0;\nvar speed = 0;\nvar angle = 90;\nvar dir = -1;\n\nfunction preload() {\n    img_float = loadImage('./assets/spaceman/spaceman_5.png');\n    img = loadImage('./assets/spaceman/spaceman_0.png');\n    txt = loadImage('./assets/spacebar.png');\n}\n\nfunction setup() {\n    const width = window.innerWidth;\n    const height = 850;\n    createCanvas(width, height);\n\n    txt_sprite = createSprite(width / 2, height / 2 + 200);\n    txt_sprite.addImage(txt);\n    txt_sprite.scale = 10;\n\n    sprite = createSprite(width / 2 - 48, height / 2 - 48);\n    sprite.addImage(img);\n    sprite.scale = 4;\n\n}\n\nfunction draw() {\n    background(50, 50, 80);\n    if (move_sprite) {\n        if (dir === -1) {\n            sprite.rotation += 1;\n            sprite.scale -= sprite.scale / 200;\n        } else if (dir === 1) {\n            sprite.rotation -= 1;\n            sprite.scale += sprite.scale / 200;\n        }\n    }\n    noSmooth();\n    drawSprites();\n}\n\nfunction keyPressed() {\n    if (key == ' ') {\n        move_sprite = true;\n    }\n    return false;\n}"
  },
  {
    "_id": "vv8s7YrxTCAgN2zXe",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T14:43:28.578Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/m90heblhjh03rvymwtll",
        "version": 1556894620,
        "signature": "3d1b8aa014daa942959af68413a98f9e2f981ff4",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T14:43:40Z",
        "tags": [],
        "bytes": 2284396,
        "type": "upload",
        "etag": "3b41d51fa212f80258175f38954aef70",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556894620/avalanche2019/m90heblhjh03rvymwtll.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556894620/avalanche2019/m90heblhjh03rvymwtll.jpg"
      },
      {
        "public_id": "avalanche2019/ubgxb9psycsywyh6whaf",
        "version": 1556894628,
        "signature": "fbefe035f8a8f721bbac90328f8ce3ed341537c8",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T14:43:48Z",
        "tags": [],
        "bytes": 2731114,
        "type": "upload",
        "etag": "479152e2a448d3397453bae1a10e08a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556894628/avalanche2019/ubgxb9psycsywyh6whaf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556894628/avalanche2019/ubgxb9psycsywyh6whaf.jpg"
      },
      {
        "public_id": "avalanche2019/ow6vilbrt3kwaxkrfnyb",
        "version": 1556894635,
        "signature": "f7a9bdd43f38f0f331ee71dea3791d24655bbb8b",
        "width": 544,
        "height": 960,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-05-03T14:43:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 798799,
        "type": "upload",
        "etag": "5d56b2e0c81519273bd62377d7283c76",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556894635/avalanche2019/ow6vilbrt3kwaxkrfnyb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556894635/avalanche2019/ow6vilbrt3kwaxkrfnyb.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "47676",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1223033"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1278078,
        "duration": 5,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:24:59.951Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T15:31:44.995Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T19:01:00.387Z" }
      }
    ],
    "title": "",
    "description": "2D -> 3D (tessellation origami piece, it's pattern has an interesting ruleset)"
  },
  {
    "_id": "vyFTPp2tYQKYgMpoQ",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T14:14:49.416Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tudhn69bocexly9jwzcf",
        "version": 1554473695,
        "signature": "07b80f2bc341bdb574b5f334496522c016456d16",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T14:14:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 3987117,
        "type": "upload",
        "etag": "dba9bee94a4cc2453f3aaf1e2a701f27",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554473695/avalanche2019/tudhn69bocexly9jwzcf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554473695/avalanche2019/tudhn69bocexly9jwzcf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3379774",
          "dar": "16:9"
        },
        "frame_rate": 24,
        "bit_rate": 3387285,
        "duration": 9.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Trying out After Effects and getting used to key framing and groups."
  },
  {
    "_id": "w9YYQn55gRSm34vaP",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-10T06:16:53.751Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/iw50fueckdozrgiuqbxs",
        "version": 1554877031,
        "signature": "daf58301ca9a7e9892d035a04160684f3a58afa3",
        "width": 2554,
        "height": 656,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T06:17:11Z",
        "tags": [],
        "bytes": 319786,
        "type": "upload",
        "etag": "4a0d4ac192ea51fddcb8d582949bbc97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554877031/avalanche2019/iw50fueckdozrgiuqbxs.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554877031/avalanche2019/iw50fueckdozrgiuqbxs.png"
      },
      {
        "public_id": "avalanche2019/gysjtdgi9ugpejwlnhdi",
        "version": 1554877044,
        "signature": "3a8847b52610e7a369ff6fc79a7421c22e568cbb",
        "width": 450,
        "height": 300,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-10T06:17:24Z",
        "tags": [],
        "bytes": 55517,
        "type": "upload",
        "etag": "fff9a2a449518408ecb7d8b6788edf9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554877044/avalanche2019/gysjtdgi9ugpejwlnhdi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554877044/avalanche2019/gysjtdgi9ugpejwlnhdi.jpg"
      },
      {
        "public_id": "avalanche2019/rvvqqyve9fefowbqro0j",
        "version": 1554916816,
        "signature": "ae09f09ff54c9ea3c481df1fc29a7c8941a89deb",
        "width": 1618,
        "height": 1098,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-10T17:20:16Z",
        "tags": [],
        "bytes": 324804,
        "type": "upload",
        "etag": "37fc04a4180c4ad3ebc944f51b987663",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554916816/avalanche2019/rvvqqyve9fefowbqro0j.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554916816/avalanche2019/rvvqqyve9fefowbqro0j.png"
      }
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-11T03:05:25.263Z" }
      }
    ],
    "title": "",
    "description": "I've been working with Python the past few weeks. I was looking forward to working with text and I knew one of the best resources out there is the amazing work by Allison Parrish. She has an incredible tutorial on how to work with text using the command line and I've always been very intrigued by the terminal. For this sketch I decided to make a new Dragon Energy \"speech\" based on Trump's announcement as an official candidate for the Presidency and whatever you want to call Kanye's rambling when he visited Trump at the White House. Based on Allison's code I ran two Python functions that shuffled the texts, created a new txt file (one for each), and then I printed to the console the result.\n\nP.S. it's extremely easy to create glitched images ! Just save a jpg as a txt file, open it with text edit (mac) mess around the structure, save the file as jpg and see the results !\n\nhttps://docpop.org/2014/01/a-glitch-primer-editing-image-files-with-text-editors/",
    "inspiration_name": "Allison Parrish",
    "inspiration_url": "http://rwet.decontextualize.com/book/unix/"
  },
  {
    "_id": "wBACcEgpfix5zSF29",
    "author_id": "rhv9NAgZaa2qp6A6v",
    "author": "Jungu Guo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T15:29:26.625Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/f4whf1wlk0k886z3586j",
        "version": 1550849384,
        "signature": "23e375ce897ccfc2ba6596be5f07325c5207898e",
        "width": 1200,
        "height": 1244,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-22T15:29:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 15031321,
        "type": "upload",
        "etag": "99475bc93b750095cb66ab64539444a7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550849384/avalanche2019/f4whf1wlk0k886z3586j.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550849384/avalanche2019/f4whf1wlk0k886z3586j.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "3877261",
          "dar": "300:311"
        },
        "frame_rate": 15,
        "bit_rate": 3880824,
        "duration": 30.985833,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Noise Portrait"
  },
  {
    "_id": "wCn9Sdy5u2abLanYP",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T20:03:56.088Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/m0alshodfpwbutky8s03",
        "version": 1550261055,
        "signature": "cafe007f41a0ae6a48988c73398bd899ff13245d",
        "width": 2504,
        "height": 1316,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T20:04:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 10801565,
        "type": "upload",
        "etag": "514073b56795ccc8b293c77d3e8e6846",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550261055/avalanche2019/m0alshodfpwbutky8s03.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550261055/avalanche2019/m0alshodfpwbutky8s03.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "14198648",
          "dar": "626:329"
        },
        "frame_rate": 60,
        "bit_rate": 14204798,
        "duration": 6.083333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/ge2pkmrwjpgmqfryeagl",
        "version": 1550261085,
        "signature": "4d02f21b9b219463f9d03a2796d14a6f7f5b0ab6",
        "width": 2520,
        "height": 1368,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T20:04:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 19922802,
        "type": "upload",
        "etag": "efe68e3a8955e8411c1ddaf2da963edd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550261085/avalanche2019/ge2pkmrwjpgmqfryeagl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550261085/avalanche2019/ge2pkmrwjpgmqfryeagl.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "11948383",
          "dar": "35:19"
        },
        "frame_rate": 60,
        "bit_rate": 11953681,
        "duration": 13.333333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/friuwd1ha5ie0zb1jgsc",
        "version": 1550261098,
        "signature": "3f1849bb5943005b5d9093c3a3950ffa67955755",
        "width": 2520,
        "height": 1360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T20:04:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 5729868,
        "type": "upload",
        "etag": "4300c8842b910552cf0695a00d493af5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550261098/avalanche2019/friuwd1ha5ie0zb1jgsc.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550261098/avalanche2019/friuwd1ha5ie0zb1jgsc.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "2306356",
          "dar": "63:34"
        },
        "frame_rate": 60,
        "bit_rate": 2311207,
        "duration": 19.833333,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with density mouse events and sliders"
  },
  {
    "_id": "wDRZ2pBxdasnDDn9v",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-20T22:44:00.728Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/n0s8gvygi3nmoxymnwhf",
        "version": 1550702648,
        "signature": "f701c56fcc63d98c91a3b3e77e4a1148fffae704",
        "width": 1202,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-20T22:44:08Z",
        "tags": [],
        "bytes": 2836941,
        "type": "upload",
        "etag": "6151d5d9ecbf5c3de5c7e7d56084c16f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550702648/avalanche2019/n0s8gvygi3nmoxymnwhf.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550702648/avalanche2019/n0s8gvygi3nmoxymnwhf.png"
      },
      {
        "public_id": "avalanche2019/aewg0osc3uspeiyuouks",
        "version": 1550702656,
        "signature": "c894a13d96831039507176fc3d2e852588bbc836",
        "width": 1200,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-20T22:44:16Z",
        "tags": [],
        "bytes": 2440502,
        "type": "upload",
        "etag": "8421fad4e31079f526088c1123439035",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550702656/avalanche2019/aewg0osc3uspeiyuouks.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550702656/avalanche2019/aewg0osc3uspeiyuouks.png"
      },
      {
        "public_id": "avalanche2019/qnon7qexblcrjb9rdcx9",
        "version": 1550702662,
        "signature": "07b1b2fff4c3f26af35e28ca8a57125f7fe083ad",
        "width": 1202,
        "height": 1204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-20T22:44:22Z",
        "tags": [],
        "bytes": 2730497,
        "type": "upload",
        "etag": "970d69f124cb5c419adf82ed55df225e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550702662/avalanche2019/qnon7qexblcrjb9rdcx9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550702662/avalanche2019/qnon7qexblcrjb9rdcx9.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "New approach to hair texture using noise field\n\ninspiration code train video on Perlin noise",
    "inspiration_url": "https://www.youtube.com/watch?v=BjoM9oKOAKY"
  },
  {
    "_id": "wFzmwTN5emEEBAoLT",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-10T05:05:50.581Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pxf4tn500mvzlvzo3keh",
        "version": 1549775158,
        "signature": "5ea6ba06f05099e39d5f5bd2dd2b5aa212f90fe8",
        "width": 920,
        "height": 1668,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-10T05:05:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 2637999,
        "type": "upload",
        "etag": "177852144e549afd47697b62ad1eb7bd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549775158/avalanche2019/pxf4tn500mvzlvzo3keh.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549775158/avalanche2019/pxf4tn500mvzlvzo3keh.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "848275",
          "dar": "230:417"
        },
        "frame_rate": 60,
        "bit_rate": 854989,
        "duration": 24.683333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-11T03:12:24.197Z" }
      }
    ],
    "title": "",
    "description": "Bauhaus generator (second try), \nstill would love to implement more shapes, make the sizes relative to screen size, checkboxes for shapes/sizes. Would love to make the speed slider a module for other animations.",
    "inspiration_name": "Bauhaus generator (first try)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\nconst w = window.innerWidth;\nconst h = w;\nlet rotations = [0, 15, 30, 45, 60, 90];\nlet sizes = [50, 200, 300];\nlet types = [\"triangle\", \"rectangle\"];\nlet shapes = [];\nlet minShapes = 1;\nlet defaultShapes = 5;\nlet maxShapes = 12;\nlet play = true;\nlet myFR = 60;\nlet slowestSpeed = 4; // in seconds\n\nfunction setup() {\n  createCanvas(w, h);\n  // colorMode(HSB, 1, 1, 1, 1);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  // pixelDensity(1);\n\n  // Speed\n  createP(\"Speed\");\n  window.modulusSpeedSlider = createSlider(1, 239, 180);\n  // Play / Pause\n  window.button = createButton(\"Pause / Play\");\n  // button.position(19, 19);\n  button.mousePressed(pausePlay);\n  // amount of shapes\n  createP(\"Choose amount of shapes:\");\n  createSpan(\"min\");\n  window.minAmountSlider = createSlider(1, 12, 5);\n  createSpan(\"max\");\n  window.maxAmountSlider = createSlider(1, 12, 5);\n  // colors\n  createP(\"Choose a background color:\");\n  window.colorPickerBG = createInput(\"#f1f1f1\", \"color\");\n  createP(\"Choose the three shape colors:\");\n  window.colorPicker1 = createInput(\"#252525\", \"color\");\n  window.colorPicker2 = createInput(\"#df0000\", \"color\");\n  window.colorPicker3 = createInput(\"#fdfdfd\", \"color\");\n  window.colors = [\n    colorPicker1.value(),\n    colorPicker2.value(),\n    colorPicker3.value()\n  ];\n  // stroke\n  createP(\"Choose strokeWidth:\");\n  window.strokeWidthSlider = createSlider(1, 7, 2);\n  // fill shapes array\n  for (let i = 0; i < maxShapes; i++) {\n    shapes.push(new RandomShape());\n  }\n  textAlign(CENTER);\n  text(\"Starting…\", w / 2, h / 2);\n}\n\nfunction draw() {\n  frameRate(60);\n  speedRegulator();\n}\n\nfunction speedRegulator() {\n  if (frameCount % (240 - floor(modulusSpeedSlider.value())) == 0) {\n    drawContainer();\n  }\n}\n\nfunction drawContainer() {\n  updateColors();\n  if (play == true) {\n    randomizeAllShapes();\n  }\n  const amount = floor(\n    random(minAmountSlider.value(), maxAmountSlider.value())\n  );\n  drawXAmountOfShapes(amount);\n}\n\nfunction pausePlay() {\n  if (play == true) {\n    document.getElementsByTagName(\"button\").innerHTML = \"Play\";\n    play = false;\n  } else {\n    document.getElementsByTagName(\"button\").innerHTML = \"Pause\";\n    play = true;\n  }\n}\n\nfunction updateColors() {\n  background(colorPickerBG.value());\n  colors = [colorPicker1.value(), colorPicker2.value(), colorPicker3.value()];\n}\n\nfunction drawXAmountOfShapes(amount) {\n  for (let i = 0; i < amount; i++) {\n    shapes[i].draw();\n  }\n}\n\nfunction randomizeAllShapes() {\n  for (let i = 0; i < shapes.length; i++) {\n    shapes[i].randomize();\n  }\n}\n\nclass Shape {\n  constructor(\n    type = \"triangle\",\n    cx = w / 2,\n    cy = h / 2,\n    width = 100,\n    height = 100,\n    rotation = 0,\n    myFill = \"#000000\",\n    myStroke = \"none\",\n    myStrokeWidth = 2\n  ) {\n    this.type = type;\n    this.cx = cx;\n    this.cy = cy;\n    this.width = width;\n    this.height = height;\n    this.rotation = rotation;\n    this.myFill = myFill;\n    this.myStroke = myStroke;\n    this.myStrokeWidth = myStrokeWidth;\n  }\n  randomize() {\n    // type\n    const typesIndex = floor(random(types.length));\n    this.type = types[typesIndex];\n    // coordinates\n    const x = (random(w) + random(w)) / 2;\n    const y = (random(h) + random(h)) / 2;\n    this.cx = x;\n    this.cy = y;\n    // size\n    const sizesIndex = floor((random(sizes.length) + random(sizes.length)) / 2);\n    const size = sizes[sizesIndex];\n    let myHeight =\n      (random(size * 0.01, size * 0.1) + random(size * 0.01, size * 0.1)) / 2;\n    let myWidth = (size / height) * 150;\n    this.width = myWidth;\n    this.height = sizes[sizesIndex];\n    // rotation\n    const rotationsIndex = floor(random(rotations.length));\n    this.rotation = rotations[rotationsIndex];\n    // colors\n    const colorsIndex = floor(\n      min((random(colors.length), random(colors.length), random(colors.length)))\n    );\n    const myColor = colors[colorsIndex];\n    const strokeOrFill = random(1) < 0.3;\n\n    let fillColor = \"none\";\n    let strokeColor = \"none\";\n    if (strokeOrFill) {\n      strokeColor = myColor;\n    } else {\n      fillColor = myColor;\n    }\n    this.myFill = fillColor;\n    this.myStroke = strokeColor;\n    this.myStrokeWidth = strokeWidthSlider.value();\n  }\n  draw() {\n    if (this.type == \"triangle\") {\n      drawTriangle(\n        this.cx,\n        this.cy,\n        this.width,\n        this.height,\n        this.rotation,\n        this.myFill,\n        this.myStroke,\n        this.myStrokeWidth\n      );\n    } else if (this.type == \"rectangle\") {\n      drawRectangle(\n        this.cx,\n        this.cy,\n        this.width,\n        this.height,\n        this.rotation,\n        this.myFill,\n        this.myStroke,\n        this.myStrokeWidth\n      );\n    }\n  }\n}\n\nclass RandomShape extends Shape {\n  constructor() {\n    super();\n    this.randomize();\n  }\n}\n\nfunction drawTriangle(\n  cx,\n  cy,\n  width,\n  height,\n  rotation,\n  myFill,\n  myStroke,\n  myStrokeWidth\n) {\n  push();\n  const size = height;\n  const scale = size;\n  translate(cx, cy);\n\n  rotate(180);\n  rotate(rotation);\n\n  const x1 = 0 - 0.5 * scale;\n  const x2 = 1 * scale - 0.5 * scale;\n  const x3 = 0.5 * scale - 0.5 * scale;\n  const y1 = 0 - 0.433 * scale;\n  const y2 = 0 - 0.433 * scale;\n  const y3 = 0.866 * scale - 0.433 * scale;\n\n  if (myFill == \"none\") {\n    // console.log(\"yes\");\n    noFill();\n  } else {\n    fill(myFill);\n  }\n  strokeWeight(myStrokeWidth);\n  if (myStroke == \"none\") {\n    noStroke();\n  } else {\n    stroke(myStroke);\n  }\n\n  triangle(x1, y1, x2, y2, x3, y3);\n  // Check center\n  // strokeWeight(10);\n  // stroke(255, 0, 0);\n  // point(0, 0);\n  pop();\n}\n\nfunction drawRectangle(\n  cx,\n  cy,\n  width,\n  height,\n  rotation,\n  myFill,\n  myStroke,\n  myStrokeWidth\n) {\n  push();\n  translate(cx, cy);\n  rotate(rotation);\n\n  if (myFill == \"none\") {\n    noFill();\n  } else {\n    fill(myFill);\n  }\n  strokeWeight(myStrokeWidth);\n  if (myStroke == \"none\") {\n    noStroke();\n  } else {\n    stroke(myStroke);\n  }\n\n  rect(0, 0, height, width);\n  pop();\n}"
  },
  {
    "_id": "wGr6z7c6myjLJ2L67",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T01:26:15.052Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/f8ma4vtnpepfbuk9fyto",
        "version": 1548897981,
        "signature": "dbcd84c9b15d366290d28a717a30acc0255073fe",
        "width": 1606,
        "height": 1072,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-01-31T01:26:21Z",
        "tags": [],
        "bytes": 483308,
        "type": "upload",
        "etag": "24bc7a8360940a0e6136a3a6cee52044",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548897981/avalanche2019/f8ma4vtnpepfbuk9fyto.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548897981/avalanche2019/f8ma4vtnpepfbuk9fyto.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "falling and climbing game inspiration.",
    "inspiration_name": "board game"
  },
  {
    "_id": "wJQ4pBqCaaWgtA8ps",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "created_at": { "$date": "2019-02-28T22:31:28.431Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cyhx44skqsodjevdw5xl",
        "version": 1551393092,
        "signature": "821d35c94ca03f0ddc4a1aaf4cacf9536b089300",
        "width": 888,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-28T22:31:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 1976151,
        "type": "upload",
        "etag": "598e71bcad722b9824d8ab7efcc2b4d3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551393092/avalanche2019/cyhx44skqsodjevdw5xl.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551393092/avalanche2019/cyhx44skqsodjevdw5xl.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "965005",
          "dar": "37:30"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 980922,
        "duration": 16.116667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T06:13:14.613Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "Noisy Circles that lerp to the mouse position. Bigger circles move slower than smaller ones and color is mapped to x, y position.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n//require http://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\nlet amplitude_slider;\nlet frequency_slider;\nlet timeSpeed_slider;\n\nlet x = 0;\nlet y = 0;\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nlet hue;\nlet saturation;\n\nlet size;\nlet strokeHue;\n\nlet timeChange = 3;\n\nlet lerpSpeed;\n\nlet circles = [];\n\nfunction setup() {\n  createCanvas(500, 500);\n  colorMode(HSB, 100);\n  hue = 0;\n  saturation = 0;\n\n  size = 10;\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 200, 10);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 200, 50);\n\n  createP(\"Time Speed\");\n  timeSpeed_slider = createSlider(0, 50, 40);\n\n  for (let i = 0; i < 20; i++) {\n    circles.push(new Circle());\n  }\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let freq = frequency_slider.value() / 1000;\n\n  let amplitude = amplitude_slider.value() / 50;\n\n  let time = timeSpeed_slider.value() / 100;\n\n  noiseDetail(1, 0.5);\n\n  noStroke();\n\n  for (let i = 0; i < circles.length; i++) {\n    // let x = lerp(startX, endX, i);\n    // let y = lerp(startY, endY, i);\n\n    size = map(i, 0, circles.length - 1, 10, 40);\n    let lerpSpeed = map(size, 10, 40, 0.1, 0.03);\n\n    // let lerpX = mouseX * lerpSpeed;\n    // let lerpY = mouseY * lerpSpeed;\n\n    circles[i].x += (mouseX - circles[i].x) * lerpSpeed;\n    circles[i].y += (mouseY - circles[i].y) * lerpSpeed;\n\n    // circles[i].x = lerp(circles[i].x, mouseX, 0.05) * lerpSpeed;\n    // circles[i].y = lerp(circles[i].y, mouseY, 0.05) * lerpSpeed;\n\n    hue = map(circles[i].x, 0, width, 0, 100);\n    saturation = map(circles[i].y, 0, height, 0, 100);\n\n    strokeHue = map(x, width, 0, 10, 100);\n\n    fill(hue, 100, 100);\n    // stroke(strokeHue, 100, 100);\n\n    let noiseTime = (noise(0.5) * frameCount * time) / 2;\n\n    let offsetX =\n      noise(circles[i].x * freq + noiseTime, circles[i].x * freq + noiseTime) *\n      20 *\n      amplitude;\n    let offsetY =\n      noise(circles[i].y * freq + noiseTime, circles[i].y * freq + noiseTime) *\n      40 *\n      amplitude;\n\n    ellipse(circles[i].x + offsetX, circles[i].y + offsetY, size, size);\n\n    noiseTime *= 0.5;\n  }\n}\n\nclass Circle {\n  constructor() {\n    this.x = random(width);\n    this.y = random(height);\n  }\n}"
  },
  {
    "_id": "wQ5Su9nq7PtmqeMBx",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T22:43:35.708Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xmwqhvwufxpybyn4fyss",
        "version": 1555627421,
        "signature": "dd3b51f3a253a7917f2334a4a84c6d722cbd85f4",
        "width": 580,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T22:43:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 1836198,
        "type": "upload",
        "etag": "028ad2c703863f95884a30fd43b7f0c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555627421/avalanche2019/xmwqhvwufxpybyn4fyss.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555627421/avalanche2019/xmwqhvwufxpybyn4fyss.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "247848",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "335546",
          "dar": "29:24"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 592931,
        "duration": 24.7745,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "WYacRHNkqf6GiFHDS",
        "category": "pretty",
        "created_at": { "$date": "2019-04-18T22:46:33.496Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T03:00:02.352Z" }
      }
    ],
    "title": "",
    "description": "Expanding on previous pd sketch, based on the pentatonic scale."
  },
  {
    "_id": "wR98iJyTNpMbyhzcm",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T06:59:41.893Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kymln2fugrwcd4wmesr6",
        "version": 1548917995,
        "signature": "9f7a28ac2dc3101839193c97963862847f9dd5e7",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T06:59:55Z",
        "tags": [],
        "bytes": 2083022,
        "type": "upload",
        "etag": "7e64e5c24056997b63b5c7e4fc73ebae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548917995/avalanche2019/kymln2fugrwcd4wmesr6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548917995/avalanche2019/kymln2fugrwcd4wmesr6.jpg"
      },
      {
        "public_id": "avalanche2019/hounu8ofhtrgawxgl44l",
        "version": 1548918002,
        "signature": "14f4db3b145ea549200385e215aafa0fac974a5e",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T07:00:02Z",
        "tags": [],
        "bytes": 2783614,
        "type": "upload",
        "etag": "3a5b7b2ae94685396c87f4f3e6091d32",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548918002/avalanche2019/hounu8ofhtrgawxgl44l.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548918002/avalanche2019/hounu8ofhtrgawxgl44l.jpg"
      },
      {
        "public_id": "avalanche2019/kmuyq93iddlbjowy8bqd",
        "version": 1548918011,
        "signature": "cc7ca997828ac2e99afb289ad7d6834b1b6e316c",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T07:00:11Z",
        "tags": [],
        "bytes": 2826328,
        "type": "upload",
        "etag": "78036c22be11231926a7fffa7f728d6b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548918011/avalanche2019/kmuyq93iddlbjowy8bqd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548918011/avalanche2019/kmuyq93iddlbjowy8bqd.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:00:51.007Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T21:01:11.679Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "funny",
        "created_at": { "$date": "2019-02-01T21:01:15.91Z" }
      },
      {
        "voter_id": "iDDWcdkC2BWXZMSyw",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:02:37.377Z" }
      },
      {
        "voter_id": "rhv9NAgZaa2qp6A6v",
        "category": "pretty",
        "created_at": { "$date": "2019-02-02T00:07:50.878Z" }
      }
    ],
    "title": "",
    "description": "Cause  pliers are cool！"
  },
  {
    "_id": "wYNmo7H2eNwpBJaKk",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T16:17:19.34Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kl1yv6gfewjq5ysoacgc",
        "version": 1552666656,
        "signature": "bf953d712c939c540a9f34638b7890530689a1a9",
        "width": 990,
        "height": 990,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T16:17:36Z",
        "tags": [],
        "bytes": 141986,
        "type": "upload",
        "etag": "4a1541d05e9c6151adf2a39d8d274f00",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552666656/avalanche2019/kl1yv6gfewjq5ysoacgc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552666656/avalanche2019/kl1yv6gfewjq5ysoacgc.jpg"
      },
      {
        "public_id": "avalanche2019/g1lj3tlapwvcgsj2u9hy",
        "version": 1552666801,
        "signature": "ede35cd21931383f6f0d745c4c3b51db0231a81a",
        "width": 980,
        "height": 980,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T16:20:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 11829702,
        "type": "upload",
        "etag": "a335008fa60a323b0cdd58844aff0768",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552666801/avalanche2019/g1lj3tlapwvcgsj2u9hy.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552666801/avalanche2019/g1lj3tlapwvcgsj2u9hy.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "9695869",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9706422,
        "duration": 9.75,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T18:37:44.297Z" }
      }
    ],
    "title": "",
    "description": "Tribute to Batool’s sketch!  \nLove the moirée effect on this one :)  \nLooks nicer without the video compression",
    "inspiration_name": "Tribute to Batool’s sketch March 15th, 10:44 am",
    "inspiration_url": "http://sketches2019.compform.net/users/24sPdz2SRLiiWezdC",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\n// Tribute to Batool’s sketch March 15th, 10:44 am\n// http://sketches2019.compform.net/users/24sPdz2SRLiiWezdC\n// code (Turtle Push + Pop) from class\n\nvar myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noFill();\n  // frameRate(1);\n  colorMode(HSB, 1, 1, 1, 1);\n  // noLoop();\n  strokeWeight(0.5);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  background(0, 0, 0.1);\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 250);\n  myTurtle.penDown();\n  myTurtle.pushState();\n  myTurtle.turnRight(frameCount * 0.1);\n  for (var i = 0; i < 150; i++) {\n    stroke(0, 0, 1, 0.5);\n    myTurtle.moveForward(i * 2.5);\n    myTurtle.turnLeft(cos(frameCount * 0.05) / 8 + 120);\n  }\n  myTurtle.popState();\n}"
  },
  {
    "_id": "wdFcxDkQdYh5uQBLv",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "created_at": { "$date": "2019-02-28T22:49:20.313Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/s3jph1crc0d9ia40nvdy",
        "version": 1551394179,
        "signature": "f129cb8eae817b428b17438ad92f6e010498e28c",
        "width": 968,
        "height": 968,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T22:49:39Z",
        "tags": [],
        "bytes": 395425,
        "type": "upload",
        "etag": "c01457699d1bb5523222e840a08303f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551394179/avalanche2019/s3jph1crc0d9ia40nvdy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551394179/avalanche2019/s3jph1crc0d9ia40nvdy.png"
      },
      {
        "public_id": "avalanche2019/pcedmepon9l46fsigkt6",
        "version": 1551394184,
        "signature": "9e258b7aacc0b9f16da5e18a8beb55153db45392",
        "width": 986,
        "height": 974,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T22:49:44Z",
        "tags": [],
        "bytes": 272088,
        "type": "upload",
        "etag": "090ddc2171f53012e640b4a95bb3df2b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551394184/avalanche2019/pcedmepon9l46fsigkt6.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551394184/avalanche2019/pcedmepon9l46fsigkt6.png"
      },
      {
        "public_id": "avalanche2019/twycfs94d26m4fkhotte",
        "version": 1551394368,
        "signature": "24ff4610df7323cce2bbe0759ff2c5ecce576762",
        "width": 994,
        "height": 954,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-28T22:52:48Z",
        "tags": [],
        "bytes": 898925,
        "type": "upload",
        "etag": "3ebb7fff4b16a886aeea078e2a468217",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551394368/avalanche2019/twycfs94d26m4fkhotte.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551394368/avalanche2019/twycfs94d26m4fkhotte.png"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "failed attempt at noise culling\n\nchanging circle placement code challenge 1",
    "code": "let points = [];\nlet rows, cols, spacing;\nlet Xoffset = 0;\nlet Yoffset = 0;\nlet x;\nlet distance;\nlet frequency = 10;\nlet amount = 20;\n\nfunction setup() {\n    createCanvas(400, 400);\n    colorMode(HSB, 255, 100, 100, 1);\n    hue = 70;\n    rows = 100;\n    cols = 100;\n    total = 1000;\n    spacing = 4;\n    diameter = 40;\n    noiseStrength = 40;\n\n    for (let y = 0; y < cols; y++) {\n        for (let x = 0; x < rows; x++) {\n\n            // console.log(\"Hue: \", hue);\n            points.push({\n                x: x * spacing + random(spacing),\n                y: y * spacing + random(spacing),\n\n            });\n        }\n    }\n\n    background(20);\n    // noStroke();\n    ellipseMode(CENTER);\n    var noiseFrequency = .02;\n    // beginShape();\n    for (let i = 0; i < points.length; i++) {\n        const p = points[i];\n        Xoffset = noise(p.x, 0) * noiseStrength;\n        Yoffset = noise(p.y * noiseFrequency, 1000) * noiseStrength;\n        p.h = map(Xoffset, 0, 40, 255, 300);\n\n        p.x += Xoffset;\n        p.y += Yoffset;\n        //checking if the point is too close to the other ones around it \n        //if the point is not the first point \n        if (i > 0) {\n            //check the point to the bottom of it \n            distance = dist(points[i - 1].x, points[i - 1].y, p.x, p.y);\n            console.log(distance);\n            //increase this point until it is away from the diameter\n            if (distance < diameter + 4) {\n                //maybe get a random number and apply \n                points.splice(1, 1);\n                // p.x++;\n                // p.y++;\n                console.log(\" to close to left distance: \", distance);\n            }\n            if (i < cols - 10) {\n                distanceT = dist(p.x, p.y, points[i + cols].x, points[i + cols].y);\n                if (distanceT < diameter + 4) {\n                    //maybe get a random number and apply \n                    // p.x++;\n                    // p.y++;\n                    points.splice(1, 1);\n                    console.log(distanceT);\n                }\n            }\n            if (i > cols) {\n                distanceB = dist(p.x, p.y, points[i - cols].x, points[i - cols].y);\n                if (distanceB < diameter + 4) {\n                    //maybe get a random number and apply \n                    // p.x++;\n                    // p.y++;\n                    points.splice(1, 1);\n                    console.log(distanceB);\n                }\n            }\n        }\n        hue += 5;\n        if (hue >= 100) {\n            hue = random(70, 110);\n        }\n        fill(hue, 70, 70, .3);\n        stroke(hue, 100, 50, .2);\n        // ellipse(p.x, p.y, diameter, diameter);\n        line(p.x, p.y, p.x, p.y + diameter)\n        console.log(\"x: \", p.x, \"x: \", p.y, \"xOffset: \", Xoffset, \"yOffset: \", Yoffset);\n    }\n}\n\n// function draw() {\n\n//     // endShape();\n//     // noiseFrequency += .01;\n\n\n\n//     // noLoop();\n// }"
  },
  {
    "_id": "wgFyZrJPSawT42KkL",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T16:34:31.426Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jhwmlfjeb6edqfu8hkwn",
        "version": 1554482544,
        "signature": "95b190e9ae1894b8533b10caf28b093451420165",
        "width": 1600,
        "height": 1600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-05T16:42:24Z",
        "tags": [],
        "bytes": 76928,
        "type": "upload",
        "etag": "4c43f6797c26b903b11055e2510de536",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554482544/avalanche2019/jhwmlfjeb6edqfu8hkwn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554482544/avalanche2019/jhwmlfjeb6edqfu8hkwn.jpg"
      },
      {
        "public_id": "avalanche2019/uad7gkfnchfs6qqst6xx",
        "version": 1554482560,
        "signature": "a2f994a3ef2ab44fd98402cd49d73d1a08e13948",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T16:42:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 1847483,
        "type": "upload",
        "etag": "5ef88dd1805b4610cd51bcc182967aff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554482560/avalanche2019/uad7gkfnchfs6qqst6xx.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554482560/avalanche2019/uad7gkfnchfs6qqst6xx.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "1231757",
          "dar": "1:1"
        },
        "frame_rate": 30,
        "bit_rate": 1235051,
        "duration": 11.966992,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "First attempt of a 2 step process: create a video and use it as a texture on a Sphere",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar EXPORT = false;\nvar maxNumberOfFrames = 360;\nlet img;\nlet vid;\nlet theta = 2;\n\nfunction setup() {\n  createCanvas(800, 800, WEBGL);\n  vid = createVideo(['jpg2/test.mp4']);\n  vid.elt.muted = true;\n  vid.loop();\n  vid.hide();\n  angleMode(DEGREES)\n}\n\nfunction draw() {\n  frameRate(2)\n  background(255);\n  push();\n  x = cos(frameCount/60*360)*60\n  y = cos(frameCount/90*180)*60\n  z = cos(frameCount/60*90)*60\n  rx = sin(frameCount/60*90)*90\n  ry = sin(frameCount/60*180)*180\n  rz = sin(frameCount/60*90)*30\n  rotateX(rx);\n  rotateY(ry);\n  rotateZ(rz);\n  translate(x, y, z);\n \n  //pass image as texture\n  texture(vid);\n  sphere(150, 50, 50);\n  pop()\n  \n\n  if (EXPORT) {\n      saveFrame(\"EXPORT\", frameCount, \"jpg\", maxNumberOfFrames);\n\n  }\n  if (frameCount > maxNumberOfFrames) {\n      noLoop();\n  }\n\n}\n\n// saveFrame - a utility function to save the current frame out with a nicely formatted name\n// format: name_####.extension\n// name: prefix for file name\n// frameNumber: number for the frame, will be zero padded\n// extension: jpg or png, controls file name and image format\n// maxFrame: checked against frameNumber, frames beyond maxFrame are not saved\nfunction saveFrame(name, frameNumber, extension, maxFrame) {\n  // don't save frames once we reach the max\n  if (maxFrame && frameNumber > maxFrame) {\n      return;\n  }\n\n  if (!extension) {\n      extension = \"png\";\n  }\n  // remove the decimal part (just in case)\n  frameNumber = floor(frameNumber);\n  // zero-pad the number (e.g. 13 -> 0013);\n  var paddedNumber = (\"0000\" + frameNumber).substr(-4, 4);\n\n  save(name + \"_\" + paddedNumber + \".\" + extension);\n}"
  },
  {
    "_id": "wn86pFQ55n8JEyDzy",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T14:19:19.35Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/j25kt2d9xjpjz09ele77",
        "version": 1556893174,
        "signature": "1f07c83c226722002d864336b0d4eaacd718440a",
        "width": 516,
        "height": 438,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T14:19:34Z",
        "tags": [],
        "bytes": 14402,
        "type": "upload",
        "etag": "007d43f4598f277854c4dc3b188ceb19",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556893174/avalanche2019/j25kt2d9xjpjz09ele77.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556893174/avalanche2019/j25kt2d9xjpjz09ele77.png"
      },
      {
        "public_id": "avalanche2019/c9bruenzlxsgv5olyahv",
        "version": 1556893180,
        "signature": "334d4baff742456d689281509a046b5a8b3adc27",
        "width": 476,
        "height": 410,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-03T14:19:40Z",
        "tags": [],
        "bytes": 17126,
        "type": "upload",
        "etag": "3023862e70679d05b52383abe59a79de",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556893180/avalanche2019/c9bruenzlxsgv5olyahv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556893180/avalanche2019/c9bruenzlxsgv5olyahv.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "code": "difference() {\n   //cuerpo del dado\n  intersection(){ \n      cube(20,center=true);\n      sphere(15,$fn=100);\n  }\n  //cara del 1\n  translate([10,0,0])\n  sphere(2,$fn=20);\n  //cara del 3\n  translate([0,10,0])\n  sphere(2,$fn=20);\n  translate([5,10,5]) \n  sphere(2,$fn=20);\n  translate([-5,10,-5])\n  sphere(2,$fn=20);\n  //cara del 2\n  translate([-5,-10,5])\n  sphere(2,$fn=20);\n  translate([5,-10,-5])\n  sphere(2,$fn=20);\n  //cara del 4\n  translate([-10,5,5])\n  sphere(2,$fn=20);\n  translate([-10,-5,5])\n  sphere(2,$fn=20);\n  translate([-10,-5,5])\n  sphere(2,$fn=20);\n  translate([-10,5,-5])\n  sphere(2,$fn=20);\n  translate([-10,-5,-5])\n  sphere(2,$fn=20);\n  //cara del 5\n  translate([0,0,10])\n  sphere(2,$fn=20);\n  translate([-5,-5,10])\n  sphere(2,$fn=20);\n  translate([-5,5,10])\n  sphere(2,$fn=20);\n  translate([5,5,10])\n  sphere(2,$fn=20);\n  translate([5,-5,10])\n  sphere(2,$fn=20);\n  //cara del 6\n  translate([5,-5,-10])\n  sphere(2,$fn=20);\n  translate([5,5,-10])\n  sphere(2,$fn=20);\n  translate([5,-5,-10])\n  sphere(2,$fn=20);\n  translate([0,-5,-10])\n  sphere(2,$fn=20);\n  translate([-5,-5,-10])\n  sphere(2,$fn=20);\n  translate([-5, 5,-10])\n  sphere(2,$fn=20);\n  translate([0, 5,-10])\n  sphere(2,$fn=20);\n}"
  },
  {
    "_id": "wuvdX8KsETy8whhcZ",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-21T15:42:36.777Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tznvtcx2wqiu0kka8bvm",
        "version": 1550763845,
        "signature": "c74c2a039a055bde88a12f3e4bf7f4c6fff5f9d2",
        "width": 792,
        "height": 792,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-21T15:44:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 9227275,
        "type": "upload",
        "etag": "44df2175c46011315865b50c0c2b9886",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550763845/avalanche2019/tznvtcx2wqiu0kka8bvm.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550763845/avalanche2019/tznvtcx2wqiu0kka8bvm.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "4833528",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 4840537,
        "duration": 15.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:39:31.397Z" }
      }
    ],
    "title": "",
    "description": "Watching White space created by using Perlin noise to generate face shapes",
    "code": "var t;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(255);\n  colorMode(RGB, 30);\n  stroke(0, 25,89,15);\n  strokeWeight(.75);\n  t = 10;\n\n}\nfunction draw() {\n  \n  \n  translate(width/2, height/2);\n  beginShape();\n  for (var i = 0; i < 200; i++) {\n    var ang = map(i, 0, 100, 0, TWO_PI);\n    var rad = 200 * noise(i * 0.04, t * 0.005);\n    var x = rad * cos(ang);\n    var y = rad * sin(ang);\n    curveVertex(x, y);\n  \n  }\n  endShape(CLOSE);\n\n  t += 2;\n\n\tpush(); // Start a new drawing state\n  strokeWeight(10);\n\tfill(204, 13, 0);\n\ttranslate(-20, -80);\n\tellipse(0, 50, 33, 33); // Middle circle\n  pop(); // Restore original state\n  \n  push(); // Start a new drawing state\n  strokeWeight(10);\n\tfill(204, 13, 0);\n\ttranslate(60, -80);\n\tellipse(0, 50, 33, 33); // Middle circle\n  pop(); // Restore original state\n  \n  push(); // Start a new drawing state\n  stroke (23);\n  strokeWeight(2);\n\t//fill(204, 13, 0);\n  noFill(0);\n\ttranslate(15, -0);\n\t//ellipse(0, 50, 33, 33); // Middle circle\n  line(19, 20, -20, 27);\n  pop(); // Restore original state\n\n\n  // clear the background every 600 frames using mod (%) operator\n  if (frameCount % 900 == 0) {\n\tbackground(255);\n  }\n\n  \n}"
  },
  {
    "_id": "ww7y4P7XRmYg2cESc",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Strategies",
    "created_at": { "$date": "2019-02-23T22:32:14.849Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nhate8w1b459flitkrsj",
        "version": 1550961257,
        "signature": "8cfa6ad8c8ccfd525665dca2be65fb371bd837ce",
        "width": 796,
        "height": 788,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-23T22:34:17Z",
        "tags": [],
        "bytes": 64192,
        "type": "upload",
        "etag": "237c3f86022548e72ea37e8d997c9af2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550961257/avalanche2019/nhate8w1b459flitkrsj.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550961257/avalanche2019/nhate8w1b459flitkrsj.png"
      },
      {
        "public_id": "avalanche2019/shrsdjhhsp0aomdgypjk",
        "version": 1550961260,
        "signature": "18a9e1a34dcea8416bb15dc3892afed71c2f2e32",
        "width": 796,
        "height": 794,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-23T22:34:20Z",
        "tags": [],
        "bytes": 60877,
        "type": "upload",
        "etag": "52a2614df124c39ba024f72946dd0cc8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550961260/avalanche2019/shrsdjhhsp0aomdgypjk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550961260/avalanche2019/shrsdjhhsp0aomdgypjk.png"
      },
      {
        "public_id": "avalanche2019/qkrjj9iocug7gz3czq8z",
        "version": 1550961263,
        "signature": "748dfcdf7e849c3e659635a84fd69c0ba96908e9",
        "width": 804,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-23T22:34:23Z",
        "tags": [],
        "bytes": 65584,
        "type": "upload",
        "etag": "2bf438085830ee03fc4a269a88151e3a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550961263/avalanche2019/qkrjj9iocug7gz3czq8z.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550961263/avalanche2019/qkrjj9iocug7gz3czq8z.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Recreating Colored Circles",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet h, s, b;\nb = 100;\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 100);\n}\n\nfunction draw() {\n  background(20);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 1;\n\n  for (let i = 0; i < 100; i++) {\n    let x = noise(i * noiseFrequency, 0) * width;\n    let y = noise(i * noiseFrequency, 1000) * height;\n\n    let diameter = min(random(5, 20), random(5, 20));\n    let h = map(diameter, 5, 20, 0, 100);\n\n    fill(h, 100, b);\n\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}"
  },
  {
    "_id": "x5bNW6oXoLsBmZ3CT",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-19T03:58:13.159Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dimw5mgnmnqotyvzbnys",
        "version": 1555646339,
        "signature": "0364a3bc78be547139a752269b902c57882fec79",
        "width": 984,
        "height": 986,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-19T03:58:59Z",
        "tags": [],
        "bytes": 75157,
        "type": "upload",
        "etag": "4d0bad0281f1739b79e98091801850ee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555646339/avalanche2019/dimw5mgnmnqotyvzbnys.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555646339/avalanche2019/dimw5mgnmnqotyvzbnys.jpg"
      },
      {
        "public_id": "avalanche2019/pzlxlnjt1rbvy8atkcuj",
        "version": 1555646346,
        "signature": "ef55de86189f2eafa6c44dd56c831d303809501c",
        "width": 1016,
        "height": 1852,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-19T03:59:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 3795717,
        "type": "upload",
        "etag": "03416304817d75a7072edf4ff544c990",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555646346/avalanche2019/pzlxlnjt1rbvy8atkcuj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555646346/avalanche2019/pzlxlnjt1rbvy8atkcuj.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "229274",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "684317",
          "dar": "254:463"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 921570,
        "duration": 32.95,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T04:41:01.698Z" }
      }
    ],
    "title": "",
    "description": "Updated a turtle sketch to use frequency modulation. Almost forget how helpful sliders can be.",
    "inspiration_name": "FM p5 example",
    "inspiration_url": "https://p5js.org/examples/sound-frequency-modulation.html",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n// require /turtles/turtle/turtle.js\n\n\nvar myTurtle;\nlet carrier; // this is the oscillator we will hear\nlet modulator; // this oscillator will modulate the frequency of the carrier\nlet modMinFreq = 0;\n// let modMaxFreq = 112;\nlet modMaxDepth = 15;\nlet modMinDepth = -15;\n\nfunction setup() {\n  colorMode(HSB, 1, 1, 1, 1);\n  let cnv = createCanvas(500, 500);\n  window.button = createButton('start');\n  button.mousePressed(togglePlay);\n  createP('Carrier Base Frequency');\n  window.carrierBaseFreq = createSlider(0, 3500, 10);\n  createP('Modulator Max Frequency');\n  window.modMaxFreqSlider = createSlider(0, 1000, 10);\n  createP('Modulator Depth Range');\n  window.modDepthRange = createSlider(0, 100, 5);\n  createP('OSC component A');\n  window.oscA = createSlider(0, 10, 0.1, 0.001);\n  createP('OSC component B');\n  window.oscB = createSlider(0, 10, 1, 0.001);\n  createP('OSC component C');\n  window.oscC = createSlider(0, 10, 1, 0.001);\n  myTurtle = new Turtle();\n  frameRate(30);\n  background(0, 0, 0.2);\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 100);\n\n  carrier = new p5.Oscillator('sine');\n  carrier.amp(0); // set amplitude\n  carrier.freq(carrierBaseFreq.value()); // set frequency\n  carrier.start(); // start oscillating\n\n  // try changing the type to 'square', 'sine' or 'triangle'\n  modulator = new p5.Oscillator('sine');\n  modulator.start();\n\n  // add the modulator's output to modulate the carrier's frequency\n  modulator.disconnect();\n  carrier.freq(modulator);\n\n}\n\nfunction draw() {\n  if (play) {\n    myUpdate()\n  }\n}\n\nfunction myUpdate() {\n  // background(30, 0.2, 1);\n\n  noFill();\n  stroke(0, 0.2, 1, 0.5);\n  strokeWeight(0.5);\n\n  let x = sin(frameCount * 0.1) * 21 * oscA.value() +\n  cos(frameCount * 0.01) * 12* oscB.value() +\n  sin(frameCount * 0.001) * 32* oscC.value();\n\n  let y = sin(frameCount * 0.001) * 21 * oscA.value() +\n  cos(frameCount * 0.01) * 12* oscB.value() +\n  sin(frameCount * 0.1) * 32* oscC.value();\n\n  myTurtle.penDown();\n  myTurtle.moveForward(5);\n  myTurtle.turnRight(\n    x\n  );\n  if (\n    myTurtle.x > width ||\n    myTurtle.x < 0 ||\n    myTurtle.y > height ||\n    myTurtle.y < 0\n  ) {\n    myTurtle.penUp();\n    myTurtle.moveTo(random(height), random(width));\n    myTurtle.penDown();\n  }\n\n\n  carrier.freq(carrierBaseFreq.value()); // set frequency\n  var modMaxFreq = modMaxFreqSlider.value()\n\n  let modFreq = map(x, -1, 1, modMinFreq, modMaxFreq);\n  modulator.freq(modFreq);\n\n  // change the amplitude of the modulator\n  // negative amp reverses the sawtooth waveform, and sounds percussive\n  //\n  modMaxDepth = modDepthRange.value()\n  modMinDepth = -modDepthRange.value()\n\n  let modDepth = map(y, -1, 1, modMinDepth, modMaxDepth);\n  modulator.amp(modDepth);\n}\n\nvar play = false;\nfunction togglePlay() {\n  if (play) {\n    play = false;\n    carrier.amp(0.0, .5);\n    button.elt.innerHTML = \"start\"\n  } else {\n    play = true;\n    carrier.amp(1.0, 0.01);\n    button.elt.innerHTML = \"stop\"\n  }\n}"
  },
  {
    "_id": "x9aeG6xrCR9qa7seK",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T20:36:03.299Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/pz21o6dov1toglm7yt4d",
        "version": 1550262973,
        "signature": "a63147575be3df10532c865efdbd784c30a2ece1",
        "width": 820,
        "height": 1236,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T20:36:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 1847809,
        "type": "upload",
        "etag": "b4ce568fa08ca47ae31b07d3f9d63d5c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550262973/avalanche2019/pz21o6dov1toglm7yt4d.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550262973/avalanche2019/pz21o6dov1toglm7yt4d.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "956023",
          "dar": "205:309"
        },
        "frame_rate": 60,
        "bit_rate": 963027,
        "duration": 15.35,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing with opacity. Hover over to reveal the whole poem again"
  },
  {
    "_id": "xBDdmovtrvX7kAWLN",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T23:24:11.887Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zl7kajzkev3ve5fks6a4",
        "version": 1550100274,
        "signature": "96d486c642a1b3df34993514ffc465c4d5342fa3",
        "width": 898,
        "height": 900,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-13T23:24:34Z",
        "tags": [],
        "bytes": 53802,
        "type": "upload",
        "etag": "635282e925a5356c7e011cc7cea425cb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550100274/avalanche2019/zl7kajzkev3ve5fks6a4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550100274/avalanche2019/zl7kajzkev3ve5fks6a4.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\nfunction setup(){\ncreateCanvas(600,600);\nbackground(0);\n}\n\nfunction draw(){\n\nstrokeWeight(5);\nstroke(map(mouseX,0,width,0,255),map(mouseX,0,height,0,255),map(mouseX,0,width,0,255));\n\nvar x = 0;\nwhile( x< width){\n  line(0,x,width,x);\n  x= x+30;  \n  }\n\nvar y = 0;\nwhile( y<height){\n  line(y,0,y,height);\n  y=y+30;\n  }\nfor(var h = 0; h < height; h = h+30){\n  for(var z = 0; z < width; z = z+30){\n    fill(h,z,z);\n    rect(h,z,30,30);\n  }\n}\n}"
  },
  {
    "_id": "xDmjoLRAtExLdX29q",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T15:17:54.64Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/q11g0qc2vjnem0ywseik",
        "version": 1555082287,
        "signature": "72e4399ffb292e44f0da987c0ca61ff86aee32da",
        "width": 2408,
        "height": 414,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T15:18:07Z",
        "tags": [],
        "bytes": 204881,
        "type": "upload",
        "etag": "b742222cb99e92743fbbb4dfb0e6ee03",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555082287/avalanche2019/q11g0qc2vjnem0ywseik.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555082287/avalanche2019/q11g0qc2vjnem0ywseik.png"
      },
      {
        "public_id": "avalanche2019/elqe4nfmlfixoyku0zyk",
        "version": 1555082386,
        "signature": "d2b65f93720d174396fdb0a4344a1f3937506f7e",
        "width": 2404,
        "height": 416,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T15:19:46Z",
        "tags": [],
        "bytes": 183428,
        "type": "upload",
        "etag": "568330ae3b0c90006d801b4568067bcd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555082386/avalanche2019/elqe4nfmlfixoyku0zyk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555082386/avalanche2019/elqe4nfmlfixoyku0zyk.png"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Jean-Ralphio",
    "inspiration_url": "https://www.youtube.com/watch?v=hNkSHC7JTlE"
  },
  {
    "_id": "xHfJNzFAyaEYN4yoJ",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-05T21:29:20.904Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ihfztwu5ryzehdkmz7pv",
        "version": 1549402181,
        "signature": "80f13106cdf4f8eb8fac9d11e46bcbedf210312f",
        "width": 862,
        "height": 1212,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-05T21:29:41Z",
        "tags": [],
        "bytes": 2217945,
        "type": "upload",
        "etag": "23c3e384b4316e688ebeb7caf05d457f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549402181/avalanche2019/ihfztwu5ryzehdkmz7pv.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549402181/avalanche2019/ihfztwu5ryzehdkmz7pv.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-06T15:13:18.702Z" }
      },
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T15:34:54.207Z" }
      }
    ],
    "title": "",
    "description": "Fallout - started with p5 snowflakes, then turned into latenight tv snow",
    "inspiration_name": "Fallout",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n\nlet snowflakes = []; // array to hold snowflake objects\nvar r,g,b,a;\n\n//declare randomColor\nvar randomColor;\n\nfunction setup() {\n  createCanvas(400, 600);\n  fill(119, 128, 124);\n  noStroke();\n}\n\nfunction draw() {\n  background(0, 25, 51, .05);\n  let t = frameCount / 1300; // update time\n  \n  // create a random number of snowflakes each frame\n  for (var i = 0; i < random(3); i++) {\n    snowflakes.push(new snowflake()); // append snowflake object\n  }\n\n  // loop through snowflakes with a for..of loop\n  for (let flake of snowflakes) {\n    \n    var nextX, nextY;\n    \n    flake.update(t); // update snowflake position\n    flake.display(); // draw snowflake\n  }\n}\n\n// snowflake class\nfunction snowflake() {\n  // initialize coordinates\n  this.posX = 0;\n  this.posY = random(-100, 0);\n  this.initialangle = random(0, 2 * PI);\n  this.size = random(2, 2);\n\n  // radius of snowflake spiral\n  // chosen so the snowflakes are uniformly spread out in area\n  this.radius = sqrt(random(pow(width / 2, 2)));\n\n  this.update = function(time) {\n    // x position follows a circle\n    let w = 0.6; // angular speed\n    let angle = w * time + this.initialangle;\n    this.posX = width / 2 + this.radius * sin(angle);\n\n    // different size snowflakes fall at slightly different y speeds\n    this.posY += pow(this.size, 0.5);\n\n    // delete snowflake if past end of screen\n    if (this.posY > height) {\n      let index = snowflakes.indexOf(this);\n      snowflakes.splice(index, 1);\n    }\n  };\n\n//   //random gray\n      randomColor = color(random(255),random(255),random(255));\n      \n      fill(randomColor);\n  \n  this.display = function() {\n    ellipse(this.posX, this.posY, this.size);\n  };\n}"
  },
  {
    "_id": "xPL3rzFoY4QS8tfg2",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "created_at": { "$date": "2019-03-01T20:21:32.973Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zlwbxikjtafwyu7kaegt",
        "version": 1551471743,
        "signature": "9749c88c115cbdc874676018723517658ed07430",
        "width": 830,
        "height": 840,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T20:22:23Z",
        "tags": [],
        "bytes": 513635,
        "type": "upload",
        "etag": "f97737ca14229d94decf706d5119b1c4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551471743/avalanche2019/zlwbxikjtafwyu7kaegt.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551471743/avalanche2019/zlwbxikjtafwyu7kaegt.png"
      },
      {
        "public_id": "avalanche2019/yygsncowldj0ybsv8gwr",
        "version": 1551471746,
        "signature": "cecdd87c158f558bb130b84ab36da8422ccb2a52",
        "width": 826,
        "height": 826,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T20:22:26Z",
        "tags": [],
        "bytes": 505989,
        "type": "upload",
        "etag": "c9e47249675d84d07ebd87b249e5eed6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551471746/avalanche2019/yygsncowldj0ybsv8gwr.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551471746/avalanche2019/yygsncowldj0ybsv8gwr.png"
      },
      {
        "public_id": "avalanche2019/qs04hvzcic7by9cmiyi1",
        "version": 1551471749,
        "signature": "cf2bb6e1598b90730ea55d9dd893fc98ae112ae0",
        "width": 844,
        "height": 842,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T20:22:29Z",
        "tags": [],
        "bytes": 713286,
        "type": "upload",
        "etag": "ae83aed75c4253b0c837416dbf5f5778",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551471749/avalanche2019/qs04hvzcic7by9cmiyi1.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551471749/avalanche2019/qs04hvzcic7by9cmiyi1.png"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Using a combination of noise and random to experiment with painting textures"
  },
  {
    "_id": "xQhcSENKztgYq2oqe",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-13T23:29:08.411Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/teirbvwoe5liusjfbquj",
        "version": 1550100709,
        "signature": "704009ebcd92f41ae750d429f4ffa0d3a9b00a4e",
        "width": 1270,
        "height": 922,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-02-13T23:31:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 82452,
        "type": "upload",
        "etag": "fb6ea59309c3b342ce812a720ff24831",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550100709/avalanche2019/teirbvwoe5liusjfbquj.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550100709/avalanche2019/teirbvwoe5liusjfbquj.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "39501",
          "dar": "635:461"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 44281,
        "duration": 14.896,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "xYb56YFdyqNRxSZmA",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "created_at": { "$date": "2019-03-01T17:31:00.645Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/kr24qp37uil7o8yeqhvb",
        "version": 1551461474,
        "signature": "e6600c3011b14f3351aa211346ec5092112a00ef",
        "width": 1004,
        "height": 1002,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-01T17:31:14Z",
        "tags": [],
        "bytes": 89362,
        "type": "upload",
        "etag": "e8ff42db482d2e58ca04aa05ed7bd566",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551461474/avalanche2019/kr24qp37uil7o8yeqhvb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551461474/avalanche2019/kr24qp37uil7o8yeqhvb.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "nerdy",
        "created_at": { "$date": "2019-03-01T17:51:54.414Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-01T19:35:28.027Z" }
      }
    ],
    "lesson": "Strategies",
    "title": "",
    "description": "My version of the in-class challenges, modified the snowmen movement so only one snowman moves at a time.",
    "inspiration_name": "In class challenges",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\n\n// Snowmans\n\n// Modify the Basic Random Placement Example\n// Change the code to place only 10 points.Try placing 1000 points.\n// Use middle biasing when placing points to make them more likely to appear near the center.\n// Draw a little “snowman” at each point: three white circles, stacked.\n// Remove the noLoop().Does this introduce any problems ?\n\n// function setup() {\n//   createCanvas(500, 500);\n//   noLoop();\n// }\n\n// function draw() {\n//   background(50);\n//   fill(240);\n//   noStroke();\n//   for (let i = 0; i < 1000; i++) {\n//     const x = (random(500) + random(500)) / 2;\n//     const y = (random(500) + random(500)) / 2;\n//     translate(x, y);\n//     ellipse(0, -14, 4, 4);\n//     ellipse(0, -8, 8, 8);\n//     ellipse(0, 0, 10, 10);\n//   }\n// }\n\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Modify the Stored Grid Placement Example\n// Add a little random offset to each circle.\n// Change the setup to use random placement and place 100 points.\n// This example doesn’t need noLoop().Why ?\n\nlet points = [];\nlet onlySnowmen = [];\n\nfunction setup() {\n  createCanvas(500, 500);\n  colorMode(HSB, 1, 1, 1, 1);\n  rectMode(CENTER);\n\n  for (let y = 0; y < 10; y++) {\n    for (let x = 0; x < 10; x++) {\n      points.push({\n        x: random(500),\n        y: random(500),\n        type: random() < 0.75 ? \"tree\" : \"snowman\",\n        size: (random(15) + random(15) + random(15)) / 3\n      });\n    }\n  }\n  onlySnowmen = points.map((x, i) => {\n    if (x.type == \"snowman\") return i;\n  });\n  onlySnowmen = onlySnowmen.filter(x => x != undefined);\n}\n// The example doesn’t need noLoop() because\n// the random placement loop is only called once\n// and pushed to an array which is then used in the draw function\n\nfunction draw() {\n  background(0, 0, 0.2);\n  noStroke();\n\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    if (points[i].type == \"snowman\") {\n      push();\n      fill(0, 0, 1);\n      translate(p.x, p.y);\n      sizeL = points[i].size;\n      sizeM = points[i].size * 0.8;\n      sizeS = points[i].size * 0.5;\n\n      ellipse(0, 0 - sizeL / 2 - sizeM - sizeS / 2 + 2, sizeS, sizeS);\n      ellipse(0, 0 - sizeL / 2 - sizeM / 2 + 1, sizeM, sizeM);\n      ellipse(0, 0, sizeL, sizeL);\n      pop();\n    }\n    if (points[i].type == \"tree\") {\n      push();\n      fill(0.1, 0.5, 0.5);\n      translate(p.x, p.y);\n      rect(0, 0, 10, 8);\n      fill(0.2, 0.5, 0.5);\n      triangle(-15, -4, 0, -30, 15, -4);\n      pop();\n    }\n  }\n  // Move only one at a time\n  const onlySnowmanIndex = floor(random(onlySnowmen.length));\n  randomSnowman = onlySnowmen[onlySnowmanIndex];\n  points[randomSnowman];\n  direction = floor(random(4));\n  if (direction == 0) {\n    points[randomSnowman].x += 1;\n  } else if (direction == 1) {\n    points[randomSnowman].y += 1;\n  } else if (direction == 2) {\n    points[randomSnowman].x -= 1;\n  } else if (direction == 3) {\n    points[randomSnowman].y -= 1;\n  }\n  // Move all\n  // points.map(e => {\n  //   if (e.type == \"snowman\") {\n  //     direction = floor(random(4));\n  //     if (direction == 0) {\n  //       e.x += 1;\n  //     } else if (direction == 1) {\n  //       e.y += 1;\n  //     } else if (direction == 2) {\n  //       e.x -= 1;\n  //     } else if (direction == 3) {\n  //       e.y -= 1;\n  //     }\n  //   }\n  // });\n}"
  },
  {
    "_id": "xkxuJcKzjXPhk7CCF",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T00:27:03.316Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wgclrrkhepouobotgo8k",
        "version": 1549585630,
        "signature": "740d6e5e6b29803e3c9fcc6dff976cbcc721869c",
        "width": 1170,
        "height": 684,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-08T00:27:10Z",
        "tags": [],
        "bytes": 76565,
        "type": "upload",
        "etag": "69d5385b9833416ed496c88971530a47",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549585630/avalanche2019/wgclrrkhepouobotgo8k.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549585630/avalanche2019/wgclrrkhepouobotgo8k.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T03:40:02.365Z" }
      }
    ],
    "title": "",
    "description": "Random Lines",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nfunction setup() {\n  createCanvas(windowWidth,windowHeight);\n  space =80;\n  strokeWeight(2);\n    frameRate(2);\n}\n\nfunction draw(){\n  background(0);\n  for (var y = space-20; y < height-20; y += space) {\n    for (var x = space-20; x < width-20; x += space) {\n  \n      stroke(20,30,210);\n      line(x, y, x + random(0,space/3), y + random(0,space/3));\n\t\t\tstroke(220,40,10);\n\t\t\tline(x, y, x - random(0,space/3), y - random(0,space/3));\n\t\t\tstroke(20,130,102);\n\t\t\tline(x, y, x + random(0,space/3), y + random(0,space/3));\n      \n    }\n  }\n\n}"
  },
  {
    "_id": "xo4Jc8KGG54PtZHPv",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-02T01:04:35.642Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "xoHAo8JKdrrJZMe4i",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T04:32:05.309Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/sn7djkdveqhirzwaaorh",
        "version": 1550809965,
        "signature": "fa5a29aa0a97a7dfdffd25c1e706ae02220e4574",
        "width": 1268,
        "height": 1258,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T04:32:45Z",
        "tags": [],
        "bytes": 59262,
        "type": "upload",
        "etag": "633bff56be6921695b978742498bbfee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550809965/avalanche2019/sn7djkdveqhirzwaaorh.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550809965/avalanche2019/sn7djkdveqhirzwaaorh.png"
      },
      {
        "public_id": "avalanche2019/kbg0qxzttk4gd5mcrbwy",
        "version": 1550809970,
        "signature": "e413d5775177153f2ccca42aabdde8631d01e13f",
        "width": 1294,
        "height": 1284,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T04:32:50Z",
        "tags": [],
        "bytes": 62311,
        "type": "upload",
        "etag": "1e7b6ab4ad65d22ad1a93de99ed95fb6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550809970/avalanche2019/kbg0qxzttk4gd5mcrbwy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550809970/avalanche2019/kbg0qxzttk4gd5mcrbwy.png"
      },
      {
        "public_id": "avalanche2019/hpq61u6yadz74yukng1m",
        "version": 1550809973,
        "signature": "4c415a3f4ebcfd4fc6452f96cb42f4232f79d5a4",
        "width": 1248,
        "height": 1250,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T04:32:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 199565,
        "type": "upload",
        "etag": "7dceb40c5a5eb45b3aba72ce26669100",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550809973/avalanche2019/hpq61u6yadz74yukng1m.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550809973/avalanche2019/hpq61u6yadz74yukng1m.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "174984",
          "dar": "624:625"
        },
        "frame_rate": 15,
        "bit_rate": 177391,
        "duration": 9,
        "rotation": 0
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:41:31.672Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T04:47:31.47Z" }
      },
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T05:01:11.465Z" }
      }
    ],
    "title": "",
    "description": "Ball follows a noise \"wave\". Refresh for a new track.",
    "inspiration_name": "Coding Train Noise Demos",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nlet canvas = { width: 600, height: 600 };\nlet inc = 0.01;\nlet start = 0;\nlet x = 0;\n\nfunction setup() {\n  createCanvas(canvas.width, canvas.height);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(20);\n  stroke(100);\n  noFill();\n\n  // shape inspired by code train demo\n  // noise line\n  beginShape();\n  let xoff = 0;\n  for (i = 0; i < canvas.width; i++) {\n    stroke(100);\n    let y = noise(xoff) * canvas.height;\n    vertex(i, y);\n    xoff += inc;\n  }\n  endShape();\n\n  // ball\n  fill(10, 80, 90);\n  stroke(10, 80, 50);\n  let y = noise(start) * canvas.height;\n  ellipse(x, y, 12);\n  start += inc;\n\n  // replay automatically\n  if (x > canvas.width) {\n    x = 0;\n    start = inc;\n  } else {\n    x++;\n  }\n}"
  },
  {
    "_id": "xrdMMptcpzN2DhRDe",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T18:42:53.123Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/krtmm06cfostnj0pxbq9",
        "version": 1552675392,
        "signature": "09537eb42db7a7ebc4177cb5725977243137f033",
        "width": 864,
        "height": 864,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-15T18:43:12Z",
        "tags": [],
        "bytes": 89678,
        "type": "upload",
        "etag": "d3dda22168729839e955513b055c284c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552675392/avalanche2019/krtmm06cfostnj0pxbq9.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552675392/avalanche2019/krtmm06cfostnj0pxbq9.jpg"
      },
      {
        "public_id": "avalanche2019/ydostxk94y2jnwhfcoc1",
        "version": 1552675434,
        "signature": "3aec68d57c93a21c84951d62c7149e38b2a4998e",
        "width": 502,
        "height": 502,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-15T18:43:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 40802,
        "type": "upload",
        "etag": "a39d50023ed869209aa58ff62941ee11",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1552675434/avalanche2019/ydostxk94y2jnwhfcoc1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1552675434/avalanche2019/ydostxk94y2jnwhfcoc1.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "81889",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 89429,
        "duration": 3.65,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "xrncK83bnEApbqdtP",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "created_at": { "$date": "2019-01-28T03:13:46.588Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tliolm2pc1n6ivfy0etk",
        "version": 1548645251,
        "signature": "d7932244882b1fbda5120e1f8bc57205d3fdb860",
        "width": 3614,
        "height": 2712,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-28T03:14:11Z",
        "tags": [],
        "bytes": 1850519,
        "type": "upload",
        "etag": "6cc82af3c7322bfa5fbd391d51f8a975",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548645251/avalanche2019/tliolm2pc1n6ivfy0etk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548645251/avalanche2019/tliolm2pc1n6ivfy0etk.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Playing with Archit's tiles"
  },
  {
    "_id": "xruSfsqTBcBGeBGjc",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Vectors",
    "created_at": { "$date": "2019-03-29T18:13:11.921Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tlovxxn0jyvg6wmxezwr",
        "version": 1553883203,
        "signature": "8c584aaaa136c2371b5f7edb9d5f0794781f28fd",
        "width": 1160,
        "height": 1652,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T18:13:23Z",
        "tags": [],
        "bytes": 41597,
        "type": "upload",
        "etag": "dbda1299e9a1cef1bd86b581433d0631",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553883203/avalanche2019/tlovxxn0jyvg6wmxezwr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553883203/avalanche2019/tlovxxn0jyvg6wmxezwr.jpg"
      },
      {
        "public_id": "avalanche2019/ujc3fklqkrp5z07hqrl8",
        "version": 1553883210,
        "signature": "c4ab78730e20cb887b55d298a295718ee2bbbaac",
        "width": 1148,
        "height": 1632,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-29T18:13:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 1343859,
        "type": "upload",
        "etag": "8ca9334688ac6b3d408adb105965c682",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1553883210/avalanche2019/ujc3fklqkrp5z07hqrl8.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1553883210/avalanche2019/ujc3fklqkrp5z07hqrl8.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "2067",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1246620",
          "dar": "287:408"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1257411,
        "duration": 8.55,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:14:54.986Z" }
      },
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:29:47.361Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T18:40:43.943Z" }
      },
      {
        "voter_id": "ydnDMAe5iAgeJa5pp",
        "category": "pretty",
        "created_at": { "$date": "2019-03-29T19:41:21.115Z" }
      }
    ],
    "title": "",
    "description": "They’ll never land",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n// width=\"583px\" height=\"827px\"\nvar width = 583;\nvar height = 827;\nvar bounds = new Rectangle(new Point(0, 0), new Point(width, height));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#f1f1f1'\n\nvar flyerSize = 80;\n\nvar flyer1 = new Path.RegularPolygon(new Point(width/2, height/2), 3, flyerSize)\nflyer1.scale(0.7, 1)\n\nvar flyer2 = new Path.RegularPolygon(new Point(width/2, height/2+flyerSize*0.8), 3, flyerSize)\nflyer2.rotation = 180;\nflyer2.scale(0.15, 0.08)\n\nvar flyer3 = flyer2.unite(flyer1);\nflyer3.fillColor = '#fff';\nflyer3.shadowColor = new Color(0, 0, 0, .1);\nflyer3.shadowBlur = 3;\nflyer3.shadowOffset = new Point(0, 12);\n\nvar fold1 = new Path.RegularPolygon(new Point(width/2, height/2), 3, flyerSize)\nfold1.scale(0.15, 1)\n\nvar fold2 = new Path.RegularPolygon(new Point(width/2, height/2+flyerSize*0.8), 3, flyerSize)\nfold2.rotation = 180;\nfold2.scale(0.15, 0.08)\n\nvar fold3 = fold1.unite(fold2)\nfold3.fillColor = '#d1d1d1'\n\nvar fold4 = fold3.clone()\nfold4.scale(0.2, 1)\nfold4.fillColor = '#ccc'\n\nvar fold5 = fold4.clone()\nfold5.scale(0.4, 1)\nfold5.fillColor = '#aaa'\n\nvar group = new Group([flyer3, fold3, fold4, fold5]);\ngroup.rotation = 90;\n\nvar group2 = group.clone();\ngroup2.rotation = 180;\ngroup2.scale(0.7,0.7)\n\nvar group3 = group.clone();\ngroup3.rotation = 0;\ngroup3.scale(0.3,0.3)\n\nview.onFrame = function(event) {\n  radius1 = 250;\n  group.position = new Point (width/2, height/2) + new Point(radius1 * Math.sin(event.count*0.01), radius1 * Math.cos(event.count*0.01));\n  group.position = new Point (width/2, height/2) + new Point(radius1 * Math.sin(event.count*0.01), radius1 * Math.cos(event.count*0.01));\n  group.rotation = -0.57\n  radius2 = 150;\n  group2.position = new Point (width/2, height/2) + new Point(radius2 * Math.sin(-event.count*0.02), radius2 * Math.cos(-event.count*0.02));\n  group2.position = new Point (width/2, height/2) + new Point(radius2 * Math.sin(-event.count*0.02), radius2 * Math.cos(-event.count*0.02));\n  group2.rotation = 0.57*2\n  radius3 = 80;\n  group3.position = new Point (width/2, height/2) + new Point(radius3 * Math.sin(event.count*0.015), radius3 * Math.cos(event.count*0.015));\n  group3.position = new Point (width/2, height/2) + new Point(radius3 * Math.sin(event.count*0.015), radius3 * Math.cos(event.count*0.015));\n  group3.rotation = -0.57*1.5\n  \n}\n\ntool.onKeyDown = function(event) {\n  if (event.key == 'up') {\n      // Scale the path by 110%:\n      group.position = group.position + new Point(0,-8);\n      // Prevent the key event from bubbling\n      return false;\n  }\n  if (event.key == 'down') {\n    // Scale the path by 110%:\n    group.position = group.position + new Point(0,8);\n    // Prevent the key event from bubbling\n    return false;\n  }\n}"
  },
  {
    "_id": "xuEGJnMNsB8Wrx4Xc",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "created_at": { "$date": "2019-03-25T01:55:11.986Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dw24ijz4j28yv17avatu",
        "version": 1553478921,
        "signature": "717ec605255951b7771f5b95955694813b89cf3f",
        "width": 2560,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-25T01:55:21Z",
        "tags": [],
        "bytes": 351362,
        "type": "upload",
        "etag": "d81a7aaaafbb8e2afd514b38d2beb62c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553478921/avalanche2019/dw24ijz4j28yv17avatu.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553478921/avalanche2019/dw24ijz4j28yv17avatu.png"
      },
      {
        "public_id": "avalanche2019/eadopyw675mm70rr2aju",
        "version": 1553478927,
        "signature": "b9f776cf9a93140f0e8ff9089d63ce52e582ac8b",
        "width": 2560,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-25T01:55:27Z",
        "tags": [],
        "bytes": 467773,
        "type": "upload",
        "etag": "d32b3f82010f5d23fa8f52dfac7a3fec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553478927/avalanche2019/eadopyw675mm70rr2aju.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553478927/avalanche2019/eadopyw675mm70rr2aju.png"
      },
      {}
    ],
    "votes": [],
    "lesson": "Random",
    "title": "",
    "description": "Random walker",
    "inspiration_name": "Coding Train",
    "inspiration_url": "https://www.youtube.com/watch?v=l__fEY1xanY"
  },
  {
    "_id": "y2ETzzF7px3eicW3b",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "created_at": { "$date": "2019-03-01T16:27:58.238Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fh3a9cjfdsxc8kqbzzft",
        "version": 1551457762,
        "signature": "65888c328d9c3db43ad099dae9f68690e7a20b74",
        "width": 1246,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T16:29:22Z",
        "tags": [],
        "bytes": 1631781,
        "type": "upload",
        "etag": "ba062bf8c164aaf5f0144e411e514611",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551457762/avalanche2019/fh3a9cjfdsxc8kqbzzft.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551457762/avalanche2019/fh3a9cjfdsxc8kqbzzft.png"
      },
      {
        "public_id": "avalanche2019/gpkctokg50hpflwobkcs",
        "version": 1551457767,
        "signature": "17d2c0f2fa60cd5e6347b221ccc61314cb89a838",
        "width": 496,
        "height": 480,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-03-01T16:29:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 12742332,
        "type": "upload",
        "etag": "815a882d34bc7af356b8af3b10a71eb3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1551457767/avalanche2019/gpkctokg50hpflwobkcs.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1551457767/avalanche2019/gpkctokg50hpflwobkcs.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2546141",
          "dar": "31:30"
        },
        "frame_rate": 60,
        "bit_rate": 2552646,
        "duration": 39.9345,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "lesson": "Tiles",
    "title": "",
    "description": "Tiles changing colors"
  },
  {
    "_id": "y3pQbn3DAPQRGpdL5",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T17:46:03.329Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/hdc0htaokffulplopuyu",
        "version": 1554486560,
        "signature": "48c031d134a1baed3e5ef8fff274848c09fce2ae",
        "width": 960,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T17:49:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 1761389,
        "type": "upload",
        "etag": "0e7a6c9a244c22e570a7afd079b274fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554486560/avalanche2019/hdc0htaokffulplopuyu.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554486560/avalanche2019/hdc0htaokffulplopuyu.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv444p10le",
          "codec": "h264",
          "level": 31,
          "profile": "High 4:4:4 Predictive",
          "bit_rate": "1167558"
        },
        "frame_rate": 25,
        "bit_rate": 1170358,
        "duration": 12.04,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T17:51:08.359Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-06T02:33:12.217Z" }
      }
    ],
    "title": "",
    "description": "Cinema 4D sketch I made a while ago – to conclude this week’s sphere and circle obsession  \n\n_I think this was originally a Greyscale Gorilla tutorial_"
  },
  {
    "_id": "y53YbwX3q3GGCCvQj",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-22T17:48:03.281Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "\"Chopsticks\" - using some distortion.  Playing with class starter code.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\nvar distortion = new Tone.Distortion(1.8)\nvar tremolo = new Tone.Tremolo().start()\n\nvar polySynth = new Tone.PolySynth(8, Tone.Synth).chain(distortion, tremolo, Tone.Master)\n\n// First, create the synth.\n//const synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\n//create a loop\nvar loop = new Tone.Loop(function(time){\n\tsynth.triggerAttackRelease(\"G4\", \"4n\", time)\n}, \"4n\")\n\n//play the loop between 0-2m on the transport\nloop.start(0).stop('2m')\n\nconst melody = [\n  ['G4', '4n.'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n  \n  ['G4', '4n.'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n  ['G4', '4n'],\n\n  ['B4', '4n'],\n  ['B4', '4n'],\n  ['B4', '4n'],\n  ['B4', '4n'],\n  ['A4', '4n'],\n  ['B4', '4n'],\n  \n    ['C5', '2n'],\n    ['C5', '4n'],\n    ['C5', '4n'],\n    ['B4', '4n'],\n    ['A4', '4n'],\n    \n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    \n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    \n    \n    ['B4', '4n'],\n    ['B4', '4n'],\n    ['B4', '4n'],\n    ['B4', '4n'],\n    ['A4', '4n'],\n    ['B4', '4n'],\n    ['C5', '2n'],\n    ['G4', '4n'],\n    ['C5', '2n'],\n    \n    ['E5', '4n'],\n    ['D5', '2n'],\n    ['C5', '4n'],\n    ['B4', '2n'],\n    ['A4', '4n'],\n    ['G4', '2n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['A4', '4n'],\n    ['G4', '4n'],\n    ['F4', '2n'],\n    ['F4', '4n'],\n    ['F4', '4n'],\n    ['G4', '4n'],\n    ['F4', '4n'],\n    ['E4', '2n'],\n    ['F4', '4n'],\n    ['G4', '2n'],\n    \n    ['E5', '4n'],\n    ['D5', '2n'],\n    ['C5', '4n'],\n    ['B4', '2n'],\n    ['A4', '4n'],\n    ['G4', '2n'],\n    ['G4', '4n'],\n    ['G4', '4n'],\n    ['A4', '4n'],\n    ['G4', '4n'],\n    ['F4', '2n'],\n    ['F4', '4n'],\n    ['F4', '4n'],\n    ['G4', '4n'],\n    ['F4', '4n'],\n    ['E4', '2n'],\n    \n  ['rest', '1m'],\n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== 'rest') {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      polySynth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log('click for music!');"
  },
  {
    "_id": "y5PdWuNMykaRM6Mo5",
    "author_id": "EbdEAWumAHKFDnb3H",
    "author": "Anna Garbier",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T18:34:36.149Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qvygkhjdsryvosodatyc",
        "version": 1555094156,
        "signature": "837459d7153059df5799b9e49da10e2717cc37a3",
        "width": 1764,
        "height": 1022,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T18:35:56Z",
        "tags": [],
        "bytes": 180477,
        "type": "upload",
        "etag": "2cc763c33f85242957ee869872ac336d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555094156/avalanche2019/qvygkhjdsryvosodatyc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555094156/avalanche2019/qvygkhjdsryvosodatyc.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T18:46:40.145Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-12T18:46:41.729Z" }
      }
    ],
    "title": "",
    "description": "Fed chunks of \"a dark and stormy night\" text into yesterday's [spoonerism tool](https://annagarbier.github.io/exampleCode/spoonerisms). And that's it!"
  },
  {
    "_id": "y5gTB6mzrYJDFxi6R",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ruihan Xia",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-01-31T22:33:18.829Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yoakf6mh0rjnxihtqtdk",
        "version": 1548974147,
        "signature": "67c35ac27024b2c17dd532016cdbdd959f2fa836",
        "width": 3300,
        "height": 2550,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-01-31T22:35:47Z",
        "tags": [],
        "bytes": 1424818,
        "type": "upload",
        "etag": "606f4d4ef5c434fe1b07f1e744b98f74",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1548974147/avalanche2019/yoakf6mh0rjnxihtqtdk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1548974147/avalanche2019/yoakf6mh0rjnxihtqtdk.jpg"
      },
      {
        "public_id": "avalanche2019/oh6nqsrvjqspjaxjjj6c",
        "version": 1548974244,
        "signature": "f15b8fdb763750c074b67cfef8d7cd5aa3e3c97a",
        "width": 994,
        "height": 992,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-01-31T22:37:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 6637940,
        "type": "upload",
        "etag": "2d6330778ac2b2004f46df45960724ee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1548974244/avalanche2019/oh6nqsrvjqspjaxjjj6c.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1548974244/avalanche2019/oh6nqsrvjqspjaxjjj6c.mov",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "3020060",
          "dar": "497:496"
        },
        "frame_rate": 45.11278195488722,
        "bit_rate": 3024807,
        "duration": 17.556,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Inspired by works of Neil Solane and Numberphile  with adjusted / played with sequence and catalog.",
    "inspiration_name": "Omar Pol's toothpick sequence",
    "inspiration_url": "http://oeis.org/A139250/a139250.anim.html"
  },
  {
    "_id": "y6pZLMPyZhA6Z3c3o",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T19:45:11.023Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dbvh3visu3bvdqe9loa8",
        "version": 1555098323,
        "signature": "9fad2a3f7de8b84c6a3272ef7e5e369f1205b9b6",
        "width": 1214,
        "height": 630,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:45:23Z",
        "tags": [],
        "bytes": 120196,
        "type": "upload",
        "etag": "8a98ae43cb728f17f7e497b4f4881bfd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555098323/avalanche2019/dbvh3visu3bvdqe9loa8.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555098323/avalanche2019/dbvh3visu3bvdqe9loa8.png"
      },
      {
        "public_id": "avalanche2019/lpj9fukacbvcf7b8dj5m",
        "version": 1555098327,
        "signature": "9a351e34546fd01fbb066c86ea02a7b6b40de7b2",
        "width": 1184,
        "height": 540,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:45:27Z",
        "tags": [],
        "bytes": 112470,
        "type": "upload",
        "etag": "54db62a84a1f4c5bab118c90b22339b1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555098327/avalanche2019/lpj9fukacbvcf7b8dj5m.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555098327/avalanche2019/lpj9fukacbvcf7b8dj5m.png"
      },
      {
        "public_id": "avalanche2019/q9q8wzr1not2gv3vxdas",
        "version": 1555098331,
        "signature": "ee31dd9d3bf17dacfab7dbbd405ceee661c044b6",
        "width": 1196,
        "height": 538,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:45:31Z",
        "tags": [],
        "bytes": 99312,
        "type": "upload",
        "etag": "16adde1b7ce2972fb3af0a24a8673006",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555098331/avalanche2019/q9q8wzr1not2gv3vxdas.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555098331/avalanche2019/q9q8wzr1not2gv3vxdas.png"
      }
    ],
    "votes": [],
    "title": "",
    "code": "injectInterface();\n//document.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle1\").textContent = generateSubtitle1();\ndocument.getElementById(\"subtitle2\").textContent = generateSubtitle2();\ndocument.getElementById(\"subtitle3\").textContent = generateSubtitle3();\n\n\nfunction generateSubtitle1() {\n\t\n\tvar story_characters = [\"Witched Machiato\", \"Forgotten bag of evill\", \"Fantastic monster\", \"Clever apple\", \"Arrogant professor\"];\n\tvar story_verbs = [\"lost\", \"found\", \"ate\", \"drank\", \"took\"];\n\tvar story_nouns = [\"a reversed concept.\", \"a poisoned storyboard.\", \"a surprisingly-functional prototype.\", \"a super fake demo.\", \"a bad code.\", \"an organ interface.\"];\n\n\tvar characters = sample(story_characters);\n\tvar verbs = sample(story_verbs);\n\tvar nouns = sample(story_nouns);\n\tvar subtitle1 = `It was a dark and stormy night.  ${characters} ${verbs} ${nouns}`;\n\n\treturn subtitle1;\n}\n\nfunction generateSubtitle2() {\n\tvar story_characters = [\"witched Machiato\", \"forgotten bag of evill\", \"existentialism monster\", \"clever apple\", \"arrogant sushi\"];\n\tvar story_verbs = [\"saw\", \"found\", \"ate\", \"drank\", \"formed\"];\n\tvar story_nouns = [\"a reversed concept.\", \"a dead storyboard.\", \"a surprisingly-functional prototype.\", \"a super fake demo.\", \"a bad code.\", \"an organ interface.\"];\n\n\tvar characters = sample(story_characters);\n\tvar verbs = sample(story_verbs);\n\tvar nouns = sample(story_nouns);\n\tvar subtitle2 = `Soon after that,  ${characters} ${verbs} ${nouns}`;\n\n\treturn subtitle2;\n}\n\nfunction generateSubtitle3() {\n\tvar story_characters = [\"2 days later,\", \"After 35 semesters,\", \"3 minutes and 4 seconds later,\", \"When class ends,\", \"In the winter,\"];\n\tvar story_verbs = [\"they\", \"their cats\", \"the whole world\", \"half of the world\", \"all the cats\"];\n\tvar story_nouns = [\"compromised.\", \"dead.\", \"vanished.\", \"become an unhappy couple.\", \"got on the subway.\"];\n\n\tvar characters = sample(story_characters);\n\tvar verbs = sample(story_verbs);\n\tvar nouns = sample(story_nouns);\n\tvar subtitle3 = `${characters} ${verbs} ${nouns}`;\n\n\treturn subtitle3;\n}\n\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\n\n\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('<link href=\"https://fonts.googleapis.com/css?family=Dokdo|Fira+Sans|Lobster\" rel=\"stylesheet\">');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Lobster', cursive;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 2px;\n\t\t\tmargin: 2px auto;\n\t\t\ttext-align: center;\n\t\t\tmargin-top: 2.75em;\n\t\t\tfont-weight: 50;\n\t\t\tfont-size: 30px;\n\t\t\tfont-weight: normal;\n\t\t}\n\n\n\t\t}\n\t\t#subtitle1 {\n\t\t\tmargin-top: 2.75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t\n\t\t<div id=\"subtitle1\">Subtitle1</div>\n\t\t<div id=\"subtitle2\">Subtitle1</div>\n\t\t<div id=\"subtitle3\">Subtitle1</div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "y6razbJnyEHiASzdY",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-10T19:36:33.523Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/slketvtezdwg4knkahjd",
        "version": 1549827443,
        "signature": "4eb9de3c5553f3e5cec7db44b859003aaf3fc49e",
        "width": 1068,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-10T19:37:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 19102581,
        "type": "upload",
        "etag": "42a91b2c861a1635300db9e097f5cd79",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549827443/avalanche2019/slketvtezdwg4knkahjd.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549827443/avalanche2019/slketvtezdwg4knkahjd.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "10965337",
          "dar": "89:60"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11324801,
        "duration": 13.494333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "funny",
        "created_at": { "$date": "2019-02-11T01:49:07.464Z" }
      }
    ],
    "title": "",
    "description": "so many of me",
    "inspiration_name": "The Coding Train",
    "inspiration_url": "https://www.youtube.com/watch?v=O1mYw-3Wl_Q",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\n\nvar posX, posY, zoomZ, rotation;\nvar cam;\nvar pos_Z = 0;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n\n  cam = createCapture(VIDEO);\n  cam.size(320, 240);\n  noStroke();\n  cam.hide();\n\n  createP('Rotation X');\n  posX = createSlider(1, 30, 0);\n\n  createP('Rotation Y');\n  posY = createSlider(1, 30, 0);\n\n  createP('Zoom ');\n  zoomZ = createSlider(1, 500, 250);\n}\n\nfunction draw() {\n  background(0);\n\n  cam.loadPixels();\n\n  // fill(redVal, greenVal, blueVal);\n\n\n\n  var pos_Y = posY.value();\n  var pos_X = posX.value();\n  var zoom = zoomZ.value();\n  for (var x = -500; x < 500; x += 110) {\n    for (var y = -500; y < 500; y += 110) {\n      push();\n      translate(x, y, zoom);\n      rotateY(pos_Y);\n      rotateX(pos_X);\n      rotateZ(pos_Z);\n      texture(cam);\n      box(80);\n      pos_Z += 0.001;\n      pop();\n    }\n  }\n}"
  },
  {
    "_id": "y7AnpA6rjQgdyR73v",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T00:01:17.108Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qskyuqa6txm4wifwu6ed",
        "version": 1554422804,
        "signature": "a90d9172eb09dfaa7fe1884973e257b341cf4ef3",
        "width": 496,
        "height": 496,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T00:06:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 3102061,
        "type": "upload",
        "etag": "fcc850444abfa11ffb070956d0102372",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554422804/avalanche2019/qskyuqa6txm4wifwu6ed.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554422804/avalanche2019/qskyuqa6txm4wifwu6ed.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2858756",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 2919586,
        "duration": 8.5,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/mev5uij0voz5zndrlvsi",
        "version": 1554422811,
        "signature": "9274cc41471284920791eaa8feaa668f5d3c7cf0",
        "width": 496,
        "height": 496,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T00:06:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 7367241,
        "type": "upload",
        "etag": "67ddc5c23ad22339c4b8a35fa55d7cd9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554422811/avalanche2019/mev5uij0voz5zndrlvsi.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554422811/avalanche2019/mev5uij0voz5zndrlvsi.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2835465",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 2879703,
        "duration": 20.466667,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "code": "var phase, speed, maxCircleSize, numRows, numCols, numStrands, colorA, colorB;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noStroke();\n  \n  phase = 0;\n  speed = 0.01;\n  maxCircleSize = 30;\n  numRows = 20;\n  numCols = 26;\n  numStrands = 2;\n  \n  colorA = color(20, 174, 120);\n  colorB = color(226, 70, 100);\n}\n\nfunction draw() {\n  background(40, 40, 40);\n  phase = frameCount * speed;\n  \n  for(var strand = 0; strand < numStrands; strand += 1) {\n    var strandPhase = phase + map(strand, 0, numStrands, 0, TWO_PI);\n    \n    for(var col = 0; col < numCols; col += 1) {\n      var colOffset = map(col, 0, numCols, 0, TWO_PI);\n      var x = map(col, 0, numCols, 10, width );\n      \n      for(var row = 0; row < numRows; row += 1) {\n        var y = height/3 + row * 10 + sin(strandPhase + colOffset) * 80;\n        var sizeOffset = (cos(strandPhase - (row / numRows) + colOffset) + 1) * 0.5;\n        var circleSize = sizeOffset * maxCircleSize;\n        \n        fill(lerpColor(colorA, colorB, row / numRows));\n        ellipse(x, y, circleSize, circleSize);\n      }\n    }\n  }\n}"
  },
  {
    "_id": "y7fokmBFd9WadGEgh",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-12T20:05:29.796Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/av73zqfqn3ypchdsytv1",
        "version": 1550001942,
        "signature": "b58ed6ba7d2dcd7d2b560d8f376327290a36aa37",
        "width": 2004,
        "height": 1512,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-12T20:05:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 16217150,
        "type": "upload",
        "etag": "14c2f47e892896ad52a56b8a51a2aedc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550001942/avalanche2019/av73zqfqn3ypchdsytv1.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550001942/avalanche2019/av73zqfqn3ypchdsytv1.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "8268",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "12892490",
          "dar": "167:126"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12909174,
        "duration": 10.05,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Spheres bouncing inside a box. I think there's a bug with p5 and WebGl that doesn't allow you to render boxes with noFill(); or adjust the stroke of the shape outline so this was done in openFrameworks."
  },
  {
    "_id": "y8Bi9YF2fW6L3noKG",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "created_at": { "$date": "2019-03-01T03:14:23.406Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xnxswvzydoh33gxsvsbm",
        "version": 1551410070,
        "signature": "4fd493a6ef1187d9cb525b60680cff5a0728dfff",
        "width": 786,
        "height": 776,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T03:14:30Z",
        "tags": [],
        "bytes": 72687,
        "type": "upload",
        "etag": "6d4f27b79de7f42c68c17c56f61d9c19",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551410070/avalanche2019/xnxswvzydoh33gxsvsbm.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551410070/avalanche2019/xnxswvzydoh33gxsvsbm.png"
      },
      {
        "public_id": "avalanche2019/eqhh2w6awjs3gir7ajsg",
        "version": 1551410074,
        "signature": "8fdcf7119a9f70c508027518a25acf70a260aa38",
        "width": 776,
        "height": 770,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T03:14:34Z",
        "tags": [],
        "bytes": 71196,
        "type": "upload",
        "etag": "5b399a772b430e231711300b6ea3ed47",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551410074/avalanche2019/eqhh2w6awjs3gir7ajsg.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551410074/avalanche2019/eqhh2w6awjs3gir7ajsg.png"
      },
      {
        "public_id": "avalanche2019/oxagrtive4aocj9w6pii",
        "version": 1551410872,
        "signature": "3933cb4b6ec11a509b5178b3bc8ef54c8c1c7e39",
        "width": 774,
        "height": 754,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-01T03:27:52Z",
        "tags": [],
        "bytes": 71617,
        "type": "upload",
        "etag": "74e005132cc2c06d93de06671f366f10",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551410872/avalanche2019/oxagrtive4aocj9w6pii.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551410872/avalanche2019/oxagrtive4aocj9w6pii.png"
      }
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 1\n\nOBSERVATIONS:\n - dots vary in diameter\n- colors set by size \n    (hue, HSB mode)\n- overlap\n\nSTRATEGY:\n- random? for diameter\n- map function of size to hue\n- noise for positions\n\nProblems with my sketch:\nSizes\nToo much overlapping\nSpreading"
  },
  {
    "_id": "y9QMWqABMjfE6fBri",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T06:13:42.27Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/tk21ofdujop3ygnaybzb",
        "version": 1555049647,
        "signature": "e4cf16165e2bb61772539b2c19c867d785dfda6d",
        "width": 1640,
        "height": 816,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T06:14:07Z",
        "tags": [],
        "bytes": 121313,
        "type": "upload",
        "etag": "3744cf51784c0a130d760e7815760de0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555049647/avalanche2019/tk21ofdujop3ygnaybzb.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555049647/avalanche2019/tk21ofdujop3ygnaybzb.png"
      },
      {
        "public_id": "avalanche2019/mveq5yqqogwmzigvmyxy",
        "version": 1555049661,
        "signature": "8aa040abad7edd95591a3ccb6f2db0023acc87e4",
        "width": 1650,
        "height": 806,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T06:14:21Z",
        "tags": [],
        "bytes": 115782,
        "type": "upload",
        "etag": "65b9288d3d079fbcb005896b71bfac31",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555049661/avalanche2019/mveq5yqqogwmzigvmyxy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555049661/avalanche2019/mveq5yqqogwmzigvmyxy.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-12T16:49:21.155Z" }
      }
    ],
    "title": "",
    "description": "it was a dark stormy night..",
    "code": "//code from class Template Examples: http://compform.net/text/\ninjectInterface();\ndocument.getElementById(\"story\").textContent = generateStory();\n\n\nfunction generateStory() {\n\tvar characters = [\"Iron man\",\"Thor\",\"Thanos\",\"Hulk\",\"Groot\",\"Bucky\"]\n\tvar characters_adj = [\"hungry\",\"scared\",\"bored\"]\n\tvar characters_adj2 = [\"sleepy\",\"angry\",\"cold\"]\n\tvar characters_adj3 = [\"terrified\",\"frightened\",\"scared\",\"happy\",\"excited\"]\n  var objects = [\"trees\",\"water\",\"snow\",\"sands\",\"fog\"]\n  var questions = [\"What time is it?\",\"Where am I?\",\"I think I smell something\",\"I wish I had brought my ipad with me\",\"Is this a dream?\"]\n  var adjectives= [\"funny\",\"strange\",\"strong\",\"scary\"]\n\n\tvar character = sample(characters);\n\tvar character_adj= sample(characters_adj);\n\tvar character_adj2= sample(characters_adj2);\n\tvar character_adj3= sample(characters_adj3);\n  var object = sample(objects);\n  var question = sample(questions);\n\tvar adjective = sample(adjectives);\n\n\n\tvar story = \"\";\n\tif (Math.random() < 1) {\n    story =  `It was a dark and stormy night, ${character} was feeling ${character_adj} and ${character_adj2}. Surrounded by nothing but ${object},\n\t\t\"${question}\" ${character} said. Suddenly a ${adjective} sound came from the ${object}, ${character} did not know who it was, it made ${character} ${character_adj3}. Finally\n\t\tthe storm stopped, and the sun rised.`\n\t}\n\n\treturn story;\n}\n\n\nfunction sample(array) {\n\tconst index = Math.floor(Math.random() * array.length);\n\treturn array[index];\n}\n\n\nfunction injectInterface() {\n\n\tdocument.body.insertAdjacentHTML('beforeend', `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\tbackground-color: #232323;\n\t\t\ttext-align: left;\n\t\t\tfont-family: 'Roboto', sans-serif;\n      color: #ffffff;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px;\n\t\t\ttext-align: Left;\n\t\t}\n\t\t#story {\n\t\t\tfont-size: 20px;\n\t\t\tline-height: .9em;\n      width: 600px;\n      line-height: 1.5em;\n      color: #a3a3a3;\n\n\t\t}\n\n\t</style>\n\t<div class=\"wrap\">\n    <h1>It was a dark and stormy night..</h1>\n\t\t<div id=\"story\"></div>\n\t</div>\n`);\n}"
  },
  {
    "_id": "yA43TbkfabiJafxAx",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T19:11:01.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/a4u4sj0kxll0pzqfcnb9",
        "version": 1555096298,
        "signature": "713dcf27b252d6c45792ee7b402c0baaf214b719",
        "width": 2880,
        "height": 1430,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-12T19:11:38Z",
        "tags": [],
        "bytes": 735815,
        "type": "upload",
        "etag": "32646545280449672c465111052cb0d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555096298/avalanche2019/a4u4sj0kxll0pzqfcnb9.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555096298/avalanche2019/a4u4sj0kxll0pzqfcnb9.png"
      },
      {
        "public_id": "avalanche2019/fht7orfkk7jisk5unvyj",
        "version": 1555096302,
        "signature": "5bc0619606772a66c8837a4f1d979c219561e6ac",
        "width": 2874,
        "height": 1428,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-12T19:11:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 4180196,
        "type": "upload",
        "etag": "3e7348b20c2528dbd0ee1763dff34387",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555096302/avalanche2019/fht7orfkk7jisk5unvyj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555096302/avalanche2019/fht7orfkk7jisk5unvyj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "3580633",
          "dar": "479:238"
        },
        "frame_rate": 15,
        "bit_rate": 3583025,
        "duration": 9.333333,
        "rotation": 0
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Updating the generated data table and data paragraph in a previous data viz project to have better highlighting and grammar in the output."
  },
  {
    "_id": "yAuSbSaGETLL49cPF",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-16T05:58:50.499Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ifasgnktacxvofk50uns",
        "version": 1555394628,
        "signature": "fbf316274e3fb563cd395486303417000e220571",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-16T06:03:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 7331325,
        "type": "upload",
        "etag": "e2b67ffc96fb0a9bb00c71c2b5ffadf0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555394628/avalanche2019/ifasgnktacxvofk50uns.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555394628/avalanche2019/ifasgnktacxvofk50uns.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "155228",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1153260",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1316039,
        "duration": 44.544,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/znlvrghojp2x4gvslb27",
        "version": 1555394637,
        "signature": "b5dc240803e705ea48bee6250224b6d04ca1075f",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-16T06:03:57Z",
        "tags": [],
        "bytes": 621692,
        "type": "upload",
        "etag": "5c05a317b9270b970e6acc09ff07063b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555394637/avalanche2019/znlvrghojp2x4gvslb27.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555394637/avalanche2019/znlvrghojp2x4gvslb27.png"
      },
      {
        "public_id": "avalanche2019/neyn3ohegdozcsjz9buy",
        "version": 1555394644,
        "signature": "60558c413654aa77654c2721020f6c6d37b85a3b",
        "width": 1258,
        "height": 650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-16T06:04:04Z",
        "tags": [],
        "bytes": 142999,
        "type": "upload",
        "etag": "a879fa31acce208a06bfb61c5db3879f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555394644/avalanche2019/neyn3ohegdozcsjz9buy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555394644/avalanche2019/neyn3ohegdozcsjz9buy.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Inspired by Tim Cook’s speech at EPIC, the Electronic Privacy Information Center, in Washington on June 1, 2015, I have created a sound visualization of his voice, to show how communication and devices have become a part of our lives, thus interrupting privacy.\n\nDesign done using Illustrator, After Effects, Cinema 4D, Audition, and other tools.",
    "inspiration_name": "Privacy is Obscured",
    "inspiration_url": "https://techcrunch.com/2015/06/02/apples-tim-cook-delivers-blistering-speech-on-encryption-privacy/"
  },
  {
    "_id": "yHeJkGcAXDy2YXcz8",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-15T18:38:52.8Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/h04iqttzd3pkyhyal6ck",
        "version": 1550255947,
        "signature": "5c31d410653d5ce6426cf494b69d7f8305992e32",
        "width": 898,
        "height": 562,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T18:39:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 24490,
        "type": "upload",
        "etag": "8806cc5b853e148d5853aa8802eeca4b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550255947/avalanche2019/h04iqttzd3pkyhyal6ck.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550255947/avalanche2019/h04iqttzd3pkyhyal6ck.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "360743",
          "dar": "449:281"
        },
        "frame_rate": 60,
        "bit_rate": 378955,
        "duration": 0.516992,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "yN9yvseWD6F4ubfYe",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-09T15:02:14.063Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xmcrfpzbxav8wtbnvude",
        "version": 1552143743,
        "signature": "39d689ccb5fd564232a2dded02ecc4a369e52469",
        "width": 862,
        "height": 784,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-09T15:02:23Z",
        "tags": [],
        "bytes": 74078,
        "type": "upload",
        "etag": "9b86ffd504ba3d6c77d4b7d69599d10d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552143743/avalanche2019/xmcrfpzbxav8wtbnvude.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552143743/avalanche2019/xmcrfpzbxav8wtbnvude.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-10T02:46:21Z" }
      }
    ],
    "title": "",
    "inspiration_name": "effects"
  },
  {
    "_id": "yNaimCpTNzqHYDu8b",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T15:56:53.225Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/qgxr3nlqowlbor4mz7n0",
        "version": 1550851079,
        "signature": "cf4366531527423292fa5b2ba56d5d2044c17c84",
        "width": 838,
        "height": 840,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T15:57:59Z",
        "tags": [],
        "bytes": 168471,
        "type": "upload",
        "etag": "8259b8d82cc12a7ae7235f4963fb3aa8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550851079/avalanche2019/qgxr3nlqowlbor4mz7n0.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550851079/avalanche2019/qgxr3nlqowlbor4mz7n0.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "inspiration_name": "Perlin Noise Flow Field by Daniel Shiffman",
    "inspiration_url": "https://www.youtube.com/watch?v=BjoM9oKOAKY&t=1529s",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar inc = 0.1;\nvar scl = 10;\nvar zoff = 0;\nvar cols, rows;\nvar num = 500;\n\nvar fr;\nvar particles = [];\n\nvar flowfield = [];\n\nfunction setup() {\n  createCanvas(600, 600);\n  var w = width;\n  var h = height;\n  cols = floor(w / scl);\n  rows = floor(h / scl);\n\n  flowfield = new Array(cols * rows);\n\n  for (var i = 0; i < num; i++) {\n    particles[i] = new Particle();\n  }\n\n}\n\nfunction draw() {\n  background(51);\n\n  var yoff = 0;\n\n  loadPixels();\n  for (var y = 0; y < rows; y++) {\n    var xoff = 0;\n\n    for (var x = 0; x < cols; x++) {\n      var index = x + y * cols;\n      var angle = noise(xoff, yoff, zoff) * TWO_PI;\n      var v = p5.Vector.fromAngle(angle);\n      v.setMag(0.5);\n\n      flowfield[index] = v;\n\n      xoff += inc;\n\n      noStroke();\n\n    }\n    yoff += inc;\n    zoff += 0.0003;\n  }\n\n  for (var i = 0; i < particles.length; i++) {\n    particles[i].follow(flowfield);\n    particles[i].update();\n    particles[i].show();\n    particles[i].edges();\n  }\n}\n\n\n\nfunction Particle() {\n  this.pos = createVector(random(width), random(height));\n  this.vel = createVector(0, 0);\n  this.acc = createVector(0, 0);\n  this.maxspeed = 4;\n\n  this.update = function() {\n    this.vel.add(this.acc);\n    this.vel.limit(this.maxspeed);\n    this.pos.add(this.vel);\n    //reset accelration to zero\n    this.acc.mult(0);\n\n  }\n\n  this.follow = function(vectors) {\n    var x = floor(this.pos.x / scl);\n    var y = floor(this.pos.y / scl);\n    var index = x + y * cols;\n    var force = vectors[index];\n    this.applyForce(force);\n\n  }\n\n  this.applyForce = function(force) {\n    this.acc.add(force);\n  }\n\n  this.show = function() {\n    stroke(255);\n    noFill();\n    ellipse(this.pos.x, this.pos.y, random(20), random(30));\n\n  }\n\n  this.edges = function() {\n    if (this.pos.x > width) this.pos.x = 0;\n    if (this.pos.x < 0) this.pos.x = width;\n    if (this.pos.y > height) this.pos.y = 0;\n    if (this.pos.y < 0) this.pos.y = height;\n\n  }\n}"
  },
  {
    "_id": "ySFNPgcep4D5ig33L",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-01T15:10:29.051Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vpicvdquup5bmrny8bae",
        "version": 1556723436,
        "signature": "fef0e091438f1fc46ce5406c75ef63f5e9ccc2f8",
        "width": 169,
        "height": 108,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-05-01T15:10:36Z",
        "tags": [],
        "bytes": 22297,
        "type": "upload",
        "etag": "8ddd5bb67558fade12dde24ac88e7a1d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556723436/avalanche2019/vpicvdquup5bmrny8bae.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556723436/avalanche2019/vpicvdquup5bmrny8bae.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-05-02T03:09:43.387Z" }
      },
      {
        "voter_id": "Yw7QmsCcEhu4eZuTP",
        "category": "pretty",
        "created_at": { "$date": "2019-05-03T20:19:47.329Z" }
      }
    ],
    "title": "",
    "description": "Bird, dunce, ice cream"
  },
  {
    "_id": "yTmeLbuNmDZAhMQu8",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T07:20:40.755Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/wff7phhkxlvnbxb3baow",
        "version": 1556263250,
        "signature": "40e1749851f4d4336f06e79026256db5474ffd60",
        "width": 500,
        "height": 500,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-26T07:20:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 10302531,
        "type": "upload",
        "etag": "1a4882fda7b6d712c2a539bffa0cd3ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556263250/avalanche2019/wff7phhkxlvnbxb3baow.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556263250/avalanche2019/wff7phhkxlvnbxb3baow.mov",
        "audio": {
          "codec": "pcm_s16le",
          "bit_rate": "1536000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "rgb24",
          "codec": "qtrle",
          "level": -99,
          "bit_rate": "3019791",
          "dar": "1:1"
        },
        "is_audio": false,
        "frame_rate": 12,
        "bit_rate": 5072015,
        "duration": 16.25,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T12:36:49.523Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T17:39:06.229Z" }
      }
    ],
    "title": "",
    "description": "I liked Akshansh's GOT piano sketch, so I created a little animation for it"
  },
  {
    "_id": "yYdcqp5wtkd8GGcQt",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "created_at": { "$date": "2019-03-01T16:41:27.932Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/nzl40sqdnqxgem5ajuyy",
        "version": 1551849536,
        "signature": "0bb4d536f5892e194c80241e130f860ca1ad1d45",
        "width": 798,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-06T05:18:56Z",
        "tags": [],
        "bytes": 604231,
        "type": "upload",
        "etag": "fbd6e096d63d4a3770765faa6a8687e8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551849536/avalanche2019/nzl40sqdnqxgem5ajuyy.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551849536/avalanche2019/nzl40sqdnqxgem5ajuyy.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "make some changes on my previous sketch",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar nx = 0;\nvar ny = 0;\nvar nz = 0;\nvar length;\n\nfunction setup () {\n createCanvas (400, 400);\n frameRate(50);\n   createP('Length');\n   length_slider = createSlider(0, 100, 50);\n}\n\n\nfunction draw () {\n  background('#9707D3');\n  stroke('#D594F7'); \n  drawStream ();\n  \n}\n\nfunction drawStream () {\n  var length = length_slider.value();\n  nx = 0;\n  for (var i=0; i<600; i += 9) {\n    ny = 0;\n    for (var j=0; j<400; j += 9) {\n      var angle = map (noise (nx, ny, nz), 0, 1.0, 0, 4*PI);\n      var x = length * cos (angle);\n      var y = length * sin (angle);\n      line (i, j, i+x, j+y);\n      ny += 0.003;\n    }\n    nx += 0.002;\n  }\n  nz +=0.001;\n}"
  },
  {
    "_id": "yZFXNabYuE2jwuhya",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Text",
    "created_at": { "$date": "2019-04-12T16:55:27.272Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/xpabgwkfbulo9pmyljiy",
        "version": 1555088709,
        "signature": "eaaa1ae2ae0b0044eadbdb0b1d7eb9decefcdb18",
        "width": 1192,
        "height": 1684,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-12T17:05:09Z",
        "tags": [],
        "bytes": 364818,
        "type": "upload",
        "etag": "5c2a950dfc742a359ef3534336b6c492",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1555088709/avalanche2019/xpabgwkfbulo9pmyljiy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1555088709/avalanche2019/xpabgwkfbulo9pmyljiy.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T17:10:12.467Z" }
      },
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-12T17:39:07.881Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-12T17:56:25.324Z" }
      }
    ],
    "title": "",
    "description": "[**Listen here.**](https://musescore.com/user/29625988/scores/5525234)  \n  \n  First try to work with Lilypond to create a score. This one is just a remix of one score, mixed the two voices with Markov chains. There’s more to explore!",
    "inspiration_name": "Pachelbel Canon in D",
    "inspiration_url": "https://musescore.com/user/1188116/scores/828956",
    "code": "const treble = `e''2\nd''2 cis''\nb'2 a'\nb'2 cis''\nd'' fis'' cis'' e''b' d''a' cis''g' b' fis' a'g' b'a' cis'' fis' d''cis'' d'' d' cis' a' e' fis'\nd'8 d'' cis'' b' cis'' fis'' a'' b''\nb' g'' fis'' e'' g'' a' fis'''' d'' cis''\ng' b'a' g' b' a' g'' fis'' g''\na''8 fis''16 g'' a''8 fis''16 g'' a'' a' b' cis'' d''\ne''16 fis'' g''\nfis''8 d''16 e'' fis''8 fis'16 g' a' b' a' g' a' fis'\ng'16 a'\ng'8 b'16 a' g'8 fis'16 e' fis' e' d' e' fis' g' a'\nb'16\ng'8 b'16 a' b'8 cis''16 d'' a' b' cis'' d'' e'' fis''\ng''16 a''\nfis'' a''d'' fis'' e'' g'' fis'' a''d'' fis''\ne'' g'' fis'' a''' b' cis'' d'' e'' fis'' g''\nd'' fis''b' d'' cis'' e''d'' fis''d'16 e' fis'\ng'16 fis' e' fis' d'' cis'' d''\nb'8 d''16 cis'' b'8 a'16 g' a' g' fis' g' a' b'\ncis''16 d''\nb'8 d''16 cis'' d''8 cis''16 b' a' cis'''' e'' d''\ncis''16 d'' b' cis''\nfis' a' d''e' a' cis''d' fis' b'cis' fis' a'b d' g'a d' fis 'b d' g'cis' e' a'd'' fis'' cis'' e''b' d''a' cis''g' b' fis' a'g' b'e' a' cis''d' fis' a' d''`;\nconst bass = `fis'8 a, e a cis'\nb,8 fis b d' fis, cis fis b\ng,8 d g b d, a, d fis\ng,8 d g b a, e a cis'\nd8 fis a d' a, cis e a\nb,8 d fis b fis, a, cis fis\ng,8 b, d g d, fis, a, d\ng,8 b, d g a, cis e a\nd8 fis a d' a, cis e a\nb,8 d fis b fis, a, cis fis\ng,8 b, d g d, fis, a, d\ng,8 b, d g a, cis e a\nd8 fis a d' a, cis e a\nb,8 d fis b fis, a, cis fis\ng,8 b, d g d, fis, a, d\ng,8 b, d g a, cis e a\nd8 fis a d' a, cis e a\nb,8 d fis b fis, a, cis fis\ng,8 b, d g d, fis, a, d\ng,8 b, d g a, cis e a\nd8 fis a d' a, cis e a\nb,8 d fis b fis, a, cis fis\ng,8 b, d g d, fis, a, d\ng,8 b, d g a, cis e a\nd8 fis a d' a, cis e a\nb,8 d fis b fis, a, cis fis\ng,8 b, d g d, fis, a, d\ng,8 b, d g a, cis e a\nd, d`;\n\nconst model = generateModel(treble + \" \" + bass);\nconst output_text = generateText(\"g\", model);\n\ndocument.body.innerHTML = output_text;\n// console.log(output_text);\n\nfunction generateModel(input_text) {\n    const words = input_text.split(\" \");\n    const model = {};\n\n    // loop through all the words except the last one.\n    for (let i = 0; i < words.length - 1; i++) {\n        const target_word = words[i];\n        const next_word = words[i + 1];\n\n        // if the model doesn't contain the target word, add it.\n        if (!model[target_word]) {\n            model[target_word] = [];\n        }\n\n        // add the next word to the possibilities for target_word\n        model[target_word].push(next_word);\n    }\n\n    return model;\n}\n\n\nfunction generateText(first_word, model) {\n    // start with the word passed in\n    let output_text = first_word;\n    let current_word = first_word;\n    for (let i = 0; i < 120; i++) {\n        // choose the next word by sampling from options in the model\n        current_word = sample(model[current_word]);\n\n        // append word to output\n        output_text += \" \";\n        output_text += current_word;\n\n        // if we get to a word that ends with \".\" we are done.\n        const last_character = current_word.substr(current_word.length - 1);\n        if (last_character === \".\") {\n            break;\n        }\n    }\n    return output_text;\n}\n\nfunction sample(array) {\n    const index = Math.floor(Math.random() * array.length);\n    return array[index];\n}"
  },
  {
    "_id": "yaNQyjacmC2yoqTSd",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T14:29:03.138Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/evmfib4vzteleyclzaif",
        "version": 1549031348,
        "signature": "60a5fa132e2afa94fad212400875022e4d9d8862",
        "width": 988,
        "height": 988,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T14:29:08Z",
        "tags": [],
        "bytes": 222667,
        "type": "upload",
        "etag": "fae36c8dc792d990d47a18a46633e73c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549031348/avalanche2019/evmfib4vzteleyclzaif.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549031348/avalanche2019/evmfib4vzteleyclzaif.png"
      },
      {
        "public_id": "avalanche2019/ypffni6z52yq5z3ccrsq",
        "version": 1549031352,
        "signature": "ef33ff7d2df94d4ffaa8bc9bbc6a5a60fb0036a3",
        "width": 986,
        "height": 986,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T14:29:12Z",
        "tags": [],
        "bytes": 373231,
        "type": "upload",
        "etag": "ccf51d89aa47ac857d2a7201144b5a29",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549031352/avalanche2019/ypffni6z52yq5z3ccrsq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549031352/avalanche2019/ypffni6z52yq5z3ccrsq.png"
      },
      {
        "public_id": "avalanche2019/u88glkbhurtygeurowl4",
        "version": 1549031356,
        "signature": "224a21c0427a0afc7913a62a2c1a9fb7c9d4b5b9",
        "width": 984,
        "height": 982,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-01T14:29:16Z",
        "tags": [],
        "bytes": 373590,
        "type": "upload",
        "etag": "948471c805ee92a2158d009c3624f3ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549031356/avalanche2019/u88glkbhurtygeurowl4.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549031356/avalanche2019/u88glkbhurtygeurowl4.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Pattern made with Processing"
  },
  {
    "_id": "yfhq7Q8m9vJ5P8pKk",
    "author_id": "wXmG3qb4ixbw3ssAF",
    "author": "Felix Buchholz",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T18:43:12.715Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "Experimenting with a few of the tone.js examples to start creating something like a intro for a song",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nvar synth = new Tone.MembraneSynth().toMaster()\n\n// create a loop\nvar loop = new Tone.Loop(function(time){\n\tsynth.triggerAttackRelease(\"C1\", \"8n\", time)\n}, \"8n\")\n\nloop.probability = 0.5\n\n//play the loop between 0-2m on the transport\nloop.start(\"4m\")\n\nvar kick = new Tone.MembraneSynth({\n  \"envelope\" : {\n    \"sustain\" : 0,\n    \"attack\" : 0.01,\n    \"decay\" : 0.8\n  },\n  \"octaves\" : 12\n}).toMaster();\n\nvar kickPart = new Tone.Loop(function(time){\n  kick.triggerAttackRelease(\"C1\", \"8n\", time);\n}, \"2n\").start(\"2m\");\n\nkickPart.probability = 0.8\n\n/*\n SNARE\n */\nvar snare = new Tone.NoiseSynth({\n  \"volume\" : -5,\n  \"envelope\" : {\n    \"attack\" : 0.001,\n    \"decay\" : 0.2,\n    \"sustain\" : 0\n  },\n  \"filterEnvelope\" : {\n    \"attack\" : 0.001,\n    \"decay\" : 0.1,\n    \"sustain\" : 0\n  }\n}).toMaster();\n\nvar snarePart = new Tone.Loop(function(time){\n  snare.triggerAttack(time);\n}, \"2n\").start(\"0\");\n\nsnarePart.probability = 0.9\n\n/**\n *  PIANO\n */\n\n\nvar piano = new Tone.PolySynth(3, Tone.Synth, {\n  \"oscillator\" : {\n    \"type\" : \"fatsawtooth\",\n    \"count\" : 3,\n    \"spread\" : 30\n  },\n  \"envelope\" : {\n    \"attack\" : 0.01,\n    \"decay\" : 0.1,\n    \"sustain\" : 0.5,\n    \"release\" : 0.4,\n    \"attackCurve\" : \"exponential\"\n  },\n  \"volume\": -15\n}).toMaster()\n// synth.chain(delay, reverb);\n\nvar cChord = [\"C4\", \"E4\", \"G4\", \"B4\"];\nvar dChord = [\"D4\", \"F4\", \"A4\", \"C5\"];\nvar gChord = [\"B3\", \"D4\", \"E4\", \"A4\"];\n\nvar pianoPart = new Tone.Part(function(time, chord){\n  // console.log(\"pianoPart\");\n  piano.triggerAttackRelease(chord, \"16n\", time);\n}, [[\"0:0:2\", cChord], [\"0:1\", dChord], [\"0:1:3\", dChord], [\"0:2:2\", dChord], [\"0:3\", cChord], [\"0:3:2\", gChord]]);\n\npianoPart.loop = true;\n// pianoPart.loopEnd = \"1m\";\npianoPart.humanize = true;\npianoPart.probability = 0.9\n\n\n/*\n BASS\n */\nvar bass = new Tone.MonoSynth({\n  \"volume\" : -10,\n  \"envelope\" : {\n    \"attack\" : 0.1,\n    \"decay\" : 0.3,\n    \"release\" : 2,\n  },\n  \"filterEnvelope\" : {\n    \"attack\" : 0.001,\n    \"decay\" : 0.01,\n    \"sustain\" : 0.5,\n    \"baseFrequency\" : 200,\n    \"octaves\" : 2.6\n  }\n}).toMaster();\n\n// var bassPart = new Tone.Sequence(function(time, note){\n//   // TransportTime\n//   bass.triggerAttackRelease(note, \"16n\", time);\n// }, [\"C2\", [\"C3\", [\"C3\", \"D2\"]], \"E2\", [\"D2\", \"A1\"]]).start(0);\n\n// bassPart.probability = 0.9;\n\nvar trigger = new Tone.Sequence(function(time, note){\n  console.log(\"trigger\");\n  if (pianoPart.state != \"started\") {\n    pianoPart.start(time)\n    console.log(time, time + Tone.Time('1m'));\n    pianoPart.stop(time + Tone.Time('1m'))\n    console.log(pianoPart.state);\n  }\n}, [\"rest\"])\n\ntrigger.start(0)\ntrigger.probability = 0.2\n\n//set the transport \nTone.Transport.bpm.value = 118;\n\nwindow.onmousedown = () => {\n  // Play the melody!\n\n  Tone.Transport.toggle()\n};"
  },
  {
    "_id": "yg7pPN3o3SYYBDgFJ",
    "author_id": "suwh57gqusNdpDWYa",
    "author": "Tinsley Huo",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T05:26:33.181Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/bbqnavybgq0xp6mk2ump",
        "version": 1550813934,
        "signature": "e6f48e15186154247323b0e6268d4c4d65dd26a1",
        "width": 1366,
        "height": 1336,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T05:38:54Z",
        "tags": [],
        "bytes": 381357,
        "type": "upload",
        "etag": "11a1af534f01f5d26b8798238ce3eecd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550813934/avalanche2019/bbqnavybgq0xp6mk2ump.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550813934/avalanche2019/bbqnavybgq0xp6mk2ump.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "noisy circle",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nvar x = 1;\nvar y = 1;\nvar t = 0.02; \nvar nVal;\nvar nInt;\nvar nAmp;\n\nfunction setup() {\n  createCanvas(600, 600);\n  frameRate(10);\n  colorMode (HSB);\n\n}\n\nfunction draw() {\n  background(frameCount*1% 360, 250, 80);\n  translate(width/2, height/2);\n    noFill();\n  \n  nInt = map(random(200), 0, width, 0.1, 30); \n  nAmp = map(random(300), 0, height, 0.0, 1.0); \n  \n   strokeWeight(2);\n    stroke(frameCount*10% 360, 50, 255);\n    beginShape();\n  for (var a=0; a<=TWO_PI; a+=TWO_PI/200) {\n    nVal = map(noise( sin(a)*nInt, cos(a)*nInt, t ), 0.0, 1.0, nAmp, 1.0);\n    x = cos(a)*190 *nVal;\n    y = sin(a)*190 *nVal;\n    vertex(x, y);  \n    }\n  endShape(CLOSE);\n\n     strokeWeight(2);\n    stroke(frameCount*10% 360, 50, 255);\n    beginShape();\n  for (var a=0; a<=TWO_PI; a+=TWO_PI/200) {\n    nVal = map(noise( sin(a)*nInt, cos(a)*nInt, t ), 0.0, 1.0, nAmp, 1.0);\n    x = cos(a)*180 *nVal;\n    y = sin(a)*180 *nVal;\n    vertex(x, y);  \n    }\n  endShape(CLOSE);\n  \n     strokeWeight(2);\n    stroke(frameCount*10% 360, 50, 255);\n    beginShape();\n  for (var a=0; a<=TWO_PI; a+=TWO_PI/200) {\n    nVal = map(noise( sin(a)*nInt, cos(a)*nInt, t ), 0.0, 1.0, nAmp, 1.0);\n    x = cos(a)*170 *nVal;\n    y = sin(a)*170 *nVal;\n    vertex(x, y);  \n    }\n  endShape(CLOSE);\n \n  stroke(frameCount*10% 360, 50, 255);\n    strokeWeight(5);\n  beginShape();\n  for (var a=0; a<=TWO_PI; a+=TWO_PI/200) {\n    nVal = map(noise( cos(a)*nInt, sin(a)*nInt, t ), 0.0, 1.0, nAmp, 1.0);\n    x = cos(a)*200 *nVal;\n    y = sin(a)*200 *nVal;\n    vertex(x, y);  \n    }\n  endShape(CLOSE);\n\n}"
  },
  {
    "_id": "yg9LPLzpk6ARrMbAB",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T04:48:48.091Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jykuvr16cvkdakliutfi",
        "version": 1552021123,
        "signature": "bc3090a3c8d5b8bf804abc099981efca03e376c3",
        "width": 742,
        "height": 742,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T04:58:43Z",
        "tags": [],
        "bytes": 34409,
        "type": "upload",
        "etag": "be9cd0d7696bc0d78262e996a0fae2d4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552021123/avalanche2019/jykuvr16cvkdakliutfi.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552021123/avalanche2019/jykuvr16cvkdakliutfi.png"
      },
      {
        "public_id": "avalanche2019/arhajma2v2ntcuzpzmlk",
        "version": 1552021175,
        "signature": "b7d7db80c089acecc1a7e7ff9724d452b3347923",
        "width": 744,
        "height": 744,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T04:59:35Z",
        "tags": [],
        "bytes": 35122,
        "type": "upload",
        "etag": "3b6d228ac916d02d9de35b7da5f4c56e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552021175/avalanche2019/arhajma2v2ntcuzpzmlk.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552021175/avalanche2019/arhajma2v2ntcuzpzmlk.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-08T11:28:26.724Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "funny",
        "created_at": { "$date": "2019-03-08T11:28:30.386Z" }
      }
    ],
    "title": "",
    "description": "I really wanted to draw the rocket",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// code from class Gradient Example http://compform.net/pixels/\nvar rocket;\nfunction setup() {\n    createCanvas(500, 500);\n    rocket = createImg(\"https://i.ibb.co/q52R3xm/rocket.png\");\n    rocket.style('z-index','-1');\n    rocket.position(0, 0);\n    rocket.size(500, 500);\n}\n\nfunction draw() {\n    clear();\n    img = createImage(30, 30);\n    img.loadPixels();\n\n    for (var y = 0; y < img.height; y++) {\n        for (var x = 0; x < img.width; x++) {\n            var c = color(y * 250 , x * 5 , 50);\n            img.set(x, random(y), c);\n            frameRate(8);\n        }\n    }\n\n    img.updatePixels();\n\n    noSmooth();\n    image(img, 158, 282, width/3, height/3);\n\n}"
  },
  {
    "_id": "yoC3HrQrRA4YzDdth",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T20:10:48.677Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/teqyek4fme8rdwtv1fgq",
        "version": 1552075880,
        "signature": "64c50d1403059dfb7ba0d35f5e59388a2bf04a84",
        "width": 1598,
        "height": 926,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T20:11:20Z",
        "tags": [],
        "bytes": 2828566,
        "type": "upload",
        "etag": "aced293e265b6823e9de66ddc58b5871",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552075880/avalanche2019/teqyek4fme8rdwtv1fgq.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552075880/avalanche2019/teqyek4fme8rdwtv1fgq.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "(ref. code from the coding train)",
    "code": "let z;\nfunction setup() {\n  createCanvas(800, 535);\n img = loadImage(\"world.jpg\");}\n\nfunction draw() {\n image(img, 0, 0);\n  loadPixels();\n  img.loadPixels();\n  for(let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      let loc = x+y*width;\n      pixels[loc] = img.pixels[loc];\n    }\n  }\n  updatePixels();\n\n}"
  },
  {
    "_id": "yuhtpR7RnMAJ3fRRo",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-14T22:12:43.257Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yubde8nup13qqm5523ns",
        "version": 1552601753,
        "signature": "536d83182c94e36fe3bc6610255a4f8dc583b3db",
        "width": 994,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-14T22:15:53Z",
        "tags": [],
        "bytes": 346826,
        "type": "upload",
        "etag": "ee909491e448af3f76b15eb21b163cf1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552601753/avalanche2019/yubde8nup13qqm5523ns.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552601753/avalanche2019/yubde8nup13qqm5523ns.png"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "oNptvYKewf9pfcXHa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T03:46:16.773Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:04:53.225Z" }
      },
      {
        "voter_id": "suwh57gqusNdpDWYa",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:14:41.436Z" }
      }
    ],
    "title": "",
    "description": "Turtle Push + Pop example code from class",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n// turtle graphics code from class Turtle Push + Pop example\n\nvar myTurtle;\nfunction setup() {\n\tcreateCanvas(500, 500);\n\tnoFill();\n\tstrokeWeight(0.185);\n\tsmooth();\n\tstroke(255,255,255, 30);\n\tbackground(10);\n\tnoLoop();\n\n\tmyTurtle = new Turtle();\n}\n\nfunction draw() {\n\tmyTurtle.penUp();\n\tmyTurtle.moveTo(235, 255);\n\tmyTurtle.penDown();\n\n\tfor (var i = 0; i < 300; i++) {\n\n\t\tmyTurtle.moveForward(25 +i * 0.57);\n\t\tmyTurtle.turnRight(241);\n\t\tdrawLeaf();\n\t}\n}\n\nfunction drawLeaf() {\n\tmyTurtle.pushState();\n\tfor (i = 0; i < 2; i++) {\n\t\tmyTurtle.moveForward(160);\n\t\tmyTurtle.turnLeft(100);\n\t}\n\n\tmyTurtle.popState();\n}"
  },
  {
    "_id": "yzTbKA95fWHZjL8sa",
    "author_id": "QSwAyQWuZTQEDAsf5",
    "author": "Janice Yamanaka",
    "lesson": "Turtles",
    "created_at": { "$date": "2019-03-15T02:41:24.958Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ocynhwieloaylhhympht",
        "version": 1552617742,
        "signature": "8940b83f193c1c9ee5a2994bb1a987bab8902276",
        "width": 998,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T02:42:22Z",
        "tags": [],
        "bytes": 833957,
        "type": "upload",
        "etag": "7faeeffd0a6e86bcd37de86f72498f7d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552617742/avalanche2019/ocynhwieloaylhhympht.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552617742/avalanche2019/ocynhwieloaylhhympht.png"
      },
      {
        "public_id": "avalanche2019/fccvkujhgm3prolepabn",
        "version": 1552617757,
        "signature": "eca6205e26e9994fc16f70ff15143fa28e31678d",
        "width": 1002,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-15T02:42:37Z",
        "tags": [],
        "bytes": 822411,
        "type": "upload",
        "etag": "a399c1c7c75c7adf29ee839fe42af0f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552617757/avalanche2019/fccvkujhgm3prolepabn.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552617757/avalanche2019/fccvkujhgm3prolepabn.png"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "xSc7EEweHFrcu2jjC",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T04:13:32.863Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T06:00:26.212Z" }
      },
      {
        "voter_id": "BRWMuGgSmfRbg9b2p",
        "category": "pretty",
        "created_at": { "$date": "2019-03-15T13:48:45.735Z" }
      }
    ],
    "title": "",
    "description": "Turtle Recursive Tree - variations",
    "inspiration_name": "Justin's starter code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require /turtles/turtle/turtle.js\n\nvar myTurtle;\n\n\n//Constants\nconst Y_AXIS = 2;\nconst X_AXIS = 1;\nlet b1, b2;\n\nfunction setup() {\n    createCanvas(500, 500);\n     // Define colors\n  \tb1 = color(255);\n  \tb2 = color(0);\n  \tcolorMode(HSB, 255);\n  \t//noFill();\n    stroke(125);\n    //background(199);\n    blendMode(MULTIPLY);\n    //frameRate(5);\n  \tnoLoop();\n    myTurtle = new Turtle();\n}\n\n\n\nfunction draw() {\n  // Background\n  //setGradient(0, 0, width, height, b1, b2, X_AXIS);\n  //setGradient(width / 2, 0, width / 2, height, b2, b1, X_AXIS);\n    setGradient(0, 0, width / 2, height, b1, b2, X_AXIS);\n  setGradient(width / 2, 0, width / 2, height, b2, b1, X_AXIS);\n}\n\n  function setGradient(x, y, w, h, c1, c2, axis) {\n  noFill();\n\n  if (axis === Y_AXIS) {\n    // Top to bottom gradient\n    for (let i = y; i <= y + h; i++) {\n      let inter = map(i, y, y + h, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(x, i, x + w, i);\n    }\n  } else if (axis === X_AXIS) {\n    // Left to right gradient\n    for (let i = x; i <= x + w; i++) {\n      let inter = map(i, x, x + w, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(i, y, i, y + h);\n    }\n    \n    for (let i = 0; i < 50; i++) {\n        var deg = int(random(0, 360));\n    myTurtle.penUp();\n    myTurtle.moveTo(width/2, 480);\n        rotate (deg);\n\t\t    myTurtle.penDown();\n      \tdrawBranch(100);\n}\n}\n\n\nfunction drawBranch(length) {\n\n    if (length < 4) {\n        return;\n    }\n\n    // draw this branch\n    strokeWeight(length / 10);\n    myTurtle.moveForward(length * .5);\n    myTurtle.turnLeft(10);\n    myTurtle.moveForward(length * .5);\n\n    // left child\n    myTurtle.pushState();\n    myTurtle.turnLeft(random(10, 80));\n    drawBranch(length * 0.75);\n    //drawBranch(length * random(.5, .9));\n\n    myTurtle.popState();\n\n    // right child\n    myTurtle.pushState();\n    myTurtle.turnRight(random(10, 30));\n    drawBranch(length * 0.75);\n    //drawBranch(length * random(.5, .9));\n    myTurtle.popState();\n\n}\n  }"
  },
  {
    "_id": "yzrBReyS9AkaMBxh9",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-18T21:42:24.5Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/vdkp6utb2yjgnm8yewim",
        "version": 1555623751,
        "signature": "8937a4b42d82efed89965eec93db7b8ef8ba4083",
        "width": 788,
        "height": 792,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-18T21:42:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 225499,
        "type": "upload",
        "etag": "e3deaaadba059c60e8a87611a96087bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555623751/avalanche2019/vdkp6utb2yjgnm8yewim.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555623751/avalanche2019/vdkp6utb2yjgnm8yewim.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "201845",
          "frequency": 44100,
          "channels": 3,
          "channel_layout": "3.0"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "53225",
          "dar": "197:198"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 267258,
        "duration": 6.75,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-04-19T02:52:13.707Z" }
      }
    ],
    "title": "",
    "description": "Code from class Bounce example"
  },
  {
    "_id": "z3dZi6JJSENbdyGvf",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-03-29T13:52:31.888Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/dckwzmvxifu2gw0owvwr",
        "version": 1553867614,
        "signature": "1b7a93d7e75dd6cab54b06db3fa18401fffc4be1",
        "width": 2560,
        "height": 1396,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-03-29T13:53:34Z",
        "tags": [],
        "bytes": 1341791,
        "type": "upload",
        "etag": "c148ff814a13544bbcacb3b3bbb263cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1553867614/avalanche2019/dckwzmvxifu2gw0owvwr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1553867614/avalanche2019/dckwzmvxifu2gw0owvwr.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "z7w6D6m48c6N3kidk",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "created_at": { "$date": "2019-02-27T01:38:43.393Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/a9znj5veoowr30zb3nxc",
        "version": 1551231526,
        "signature": "99619ed6a0c34ea3a1295b7e77a0b292e1fe7e76",
        "width": 622,
        "height": 622,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-27T01:38:46Z",
        "tags": [],
        "bytes": 65802,
        "type": "upload",
        "etag": "27f9676cf12af12934965095569a2854",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551231526/avalanche2019/a9znj5veoowr30zb3nxc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551231526/avalanche2019/a9znj5veoowr30zb3nxc.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Part 3 of 3: Stored Placement; \nPine Tree and Snowmen Placement",
    "inspiration_name": "Stored Placement",
    "inspiration_url": "http://compform.net/strategy/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// In-class challenges\n// Part 3 of 3\n// Stored Random and Grid Placement\n\nconst points = [];\n// var posOffset; // position offset in grid placement\n\nvar xPos = 0;\nvar yPos = 0;\nvar pointCount; // no. of points in random placement\n\nfunction setup() {\n    createCanvas(500, 500);\n    noLoop();\n\n    pointCount = 100;\n\n    // STORED RANDOM PLACEMENT\n    for (let i = 0; i < pointCount; i++) {\n        points.push({\n            xPos: random() * width,\n            yPos: random() * height\n        });\n    }\n\n    createTreesAndSnowmen();\n\n    // STORED GRID PLACEMENT\n    // posOffset = 10;\n\n    // for (let y = 0; y < 10; y++) {\n    //     for (let x = 0; x < 10; x++) {\n    //         points.push({\n    //             x: x * 50 + 25 + random() * posOffset,\n    //             y: y * 50 + 25 + random() * posOffset\n    //         });\n    //     }\n    // }\n}\n\nfunction draw() {\n\n\n    // STORED GRID PLACEMENT\n    // for (let i = 0; i < points.length; i++) {\n    //     const p = points[i];\n    //     ellipse(p.x, p.y, 10, 10);\n    // }\n}\n\n\nfunction createTreesAndSnowmen() {\n    background(50);\n    fill(200);\n    noStroke();\n    // STORED RANDOM PLACEMENT\n    for (let i = 0; i < points.length; i++) {\n        const p = points[i];\n\n        if (random() < 0.75) {\n\n            // create pine trees\n            let xPos1 = p.xPos - 10;\n            let xPos2 = p.xPos + 20;\n            let xPos3 = (xPos1 + xPos2) / 2;\n            let yPos1 = p.yPos;\n            let yPos2 = yPos1 - 20;\n\n            fill(160, 82, 45); // brown\n            rect(p.xPos, p.yPos, 10, 10);\n\n            fill(0, 128, 0); // green\n            triangle(xPos1, yPos1, xPos1 + 30, yPos1, xPos3, yPos2);\n\n        } else {\n            // create snowmen\n            fill(255);\n            ellipse(p.xPos, p.yPos - 40, 10, 10);\n            ellipse(p.xPos, p.yPos - 25, 20, 20);\n            ellipse(p.xPos, p.yPos, 30, 30);\n\n            // random movement of snowman\n            p.xPos += random() * 2;\n            p.yPos += random() * 2;\n        }\n    }\n\n}"
  },
  {
    "_id": "zBQFHyDwQ8cWS6dCr",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T20:13:03.942Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fujbtpr6tz7ogla4zgdc",
        "version": 1550866395,
        "signature": "c6167a0603c892365266213ef5d2726b12b88a3c",
        "width": 1980,
        "height": 1976,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T20:13:15Z",
        "tags": [],
        "bytes": 405834,
        "type": "upload",
        "etag": "f0a143b28c044fc42f20bd9234ae9e08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550866395/avalanche2019/fujbtpr6tz7ogla4zgdc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550866395/avalanche2019/fujbtpr6tz7ogla4zgdc.jpg"
      },
      {
        "public_id": "avalanche2019/yulmr8hgffcozszzw7r3",
        "version": 1550866398,
        "signature": "6791c1b4a9704da06063f943b71a892ab6621934",
        "width": 1992,
        "height": 1988,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-22T20:13:18Z",
        "tags": [],
        "bytes": 508784,
        "type": "upload",
        "etag": "debed4c6f24f8860ebeb31d4dcb26033",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550866398/avalanche2019/yulmr8hgffcozszzw7r3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550866398/avalanche2019/yulmr8hgffcozszzw7r3.jpg"
      },
      {
        "public_id": "avalanche2019/atg3p491nyikrhgdksu7",
        "version": 1550866493,
        "signature": "d63a7497bda410d9503e3475fa26bd2d31d1f4ec",
        "width": 992,
        "height": 992,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T20:14:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 997816,
        "type": "upload",
        "etag": "af5dc3d8837e23e156f3d2773351d3b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550866493/avalanche2019/atg3p491nyikrhgdksu7.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550866493/avalanche2019/atg3p491nyikrhgdksu7.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "3294898",
          "dar": "1:1"
        },
        "frame_rate": 60,
        "bit_rate": 3302659,
        "duration": 2.416992,
        "rotation": 0
      }
    ],
    "votes": [],
    "title": "",
    "description": "Flag",
    "inspiration_name": "daniel shiffman's terrains",
    "inspiration_url": "https://www.youtube.com/watch?v=IKB1hWWedMk"
  },
  {
    "_id": "zBZrq8st5a9Zdpx28",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T19:37:05.294Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yza3s9ezswoh2ziehxcf",
        "version": 1554493033,
        "signature": "9c3c0adec80e84f1618f5626cd0a5f1f6f1701f6",
        "width": 916,
        "height": 580,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T19:37:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 646661,
        "type": "upload",
        "etag": "1c3abc1c6ca680467d08cad97b36858e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554493033/avalanche2019/yza3s9ezswoh2ziehxcf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554493033/avalanche2019/yza3s9ezswoh2ziehxcf.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "528636",
          "dar": "229:145"
        },
        "frame_rate": 60,
        "bit_rate": 536092,
        "duration": 9.65,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": ""
  },
  {
    "_id": "zFcbS2dSWLiX7Mrtr",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Microgames!",
    "created_at": { "$date": "2019-05-09T22:19:28.855Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "zMhzSBezYyR4k5oin",
    "author_id": "9jwhKiHeLcKtMmd7i",
    "author": "Ivy Cheng",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-07T19:06:47.097Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/ggnrg3tv4rkebfytdlio",
        "version": 1549566421,
        "signature": "1c70f789dd2ff99e83d7bc677bc92e03323cd88b",
        "width": 1258,
        "height": 1112,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T19:07:01Z",
        "tags": [],
        "bytes": 284914,
        "type": "upload",
        "etag": "a8a9e31a3a8a9e88f079f06232afc635",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549566421/avalanche2019/ggnrg3tv4rkebfytdlio.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549566421/avalanche2019/ggnrg3tv4rkebfytdlio.png"
      },
      {
        "public_id": "avalanche2019/ananbnatovcfavsyt80a",
        "version": 1549566794,
        "signature": "e517cb545323ebafc70049bfd344ebb0e3c032c0",
        "width": 1260,
        "height": 1108,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-07T19:13:14Z",
        "tags": [],
        "bytes": 250840,
        "type": "upload",
        "etag": "c19226aa502ff48cb08170b3735a7cfe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549566794/avalanche2019/ananbnatovcfavsyt80a.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549566794/avalanche2019/ananbnatovcfavsyt80a.png"
      },
      {
        "public_id": "avalanche2019/gvcbussrnbdrgv1dgfl0",
        "version": 1549566802,
        "signature": "86bef7820f19e472c04c98170a2b6248c6a24eaf",
        "width": 800,
        "height": 526,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-07T19:13:22Z",
        "tags": [],
        "bytes": 197450,
        "type": "upload",
        "etag": "a1642e60f35358f38f7343d85abbdc5d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549566802/avalanche2019/gvcbussrnbdrgv1dgfl0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549566802/avalanche2019/gvcbussrnbdrgv1dgfl0.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-07T20:03:01.593Z" }
      }
    ],
    "title": "",
    "description": "Inspired by artist Eyvind Earle, who was mentioned in Brad's last sketch. (Third pic is an original painting)",
    "inspiration_url": "https://editor.p5js.org/allisonwalters/sketches/B1AGR09CQ",
    "code": "var apples = [];\nvar totalapples = 0;\nvar appleSize = 0;\nvar appleSpeed = 0;\nconst Y_AXIS = 1;\nconst X_AXIS = 2;\nlet b1, b2, c1, c2;\n\nfunction setup() {\n  createCanvas(700, 600);\n  noLoop();\n\n  //for loop creating the apples\n  for (var a = 0; a < totalapples; a++) {\n    apples[a] = new Apple();\n  }\n  b1 = color(random(256),random(256),random(256));\n  b2 = color(random(256),random(256),random(256));\n  \n  noLoop();\n\n}\n\nfunction draw() {\n  setGradient(0, 0, width, height, b1, b2, Y_AXIS);\n  \n  strokeWeight(2);\n  stroke(random(30,255));\n  translate(width / 2, height - 20);\n  branch(0);\n  \n  //for loop to call the functions\n  for (var a=0; a < apples.length; a++) {\n    apples[a].render();\n    apples[a].update();\n    apples[a].initiate();\n  }\n}\n\nfunction setGradient(x, y, w, h, c1, c2, axis) {\n  noFill();\n\n  if (axis === Y_AXIS) {\n    // Top to bottom gradient\n    for (let i = y; i <= y + h; i++) {\n      let inter = map(i, y, y + h, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(x, i, x + w, i);\n    }\n  } else if (axis === X_AXIS) {\n    // Left to right gradient\n    for (let i = x; i <= x + w; i++) {\n      let inter = map(i, x, x + w, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c);\n      line(i, y, i, y + h);\n    }\n  }\n}\n\nfunction branch(depth) {\n  if (depth < 10) {\n    line(0, 0, 0, -height / 6); // draw a line going up\n    {\n      translate(0, -height / 6); // move the space upwards      \n      rotate(random(-0.2,0.2)); // random wiggle\n\n      rotate(0.3); // rotate to the right\n      scale(random(0.7,0.9)); // scale down\n\n      push(); // now save the transform state\n      branch(depth + 1); // start a new branch!\n      pop(); // go back to saved state\n\n      rotate(-0.6); // rotate back to the left \n\n      push(); // save state\n      branch(depth + 1); // start a second new branch \n      pop(); // back to saved state\n      //source of tree: https://editor.p5js.org/mtchl/sketches/ryyW2U5Fx\n    }\n    \n  }\n}\n\n//creating the function for the apples\nfunction Apple() {\n  this.x = random(0, width);\n  this.y = random(-600, 0);\n  this.speed = appleSpeed;\n  this.y = this.y + appleSpeed;\n\n  //draws the ball\n  this.render = function() {\n    //fill('red');\n    //ellipse(this.x, this.y, appleSize, appleSize);\n  }\n  //updates the position of the apples\n  this.update = function() {\n    this.y = this.y + appleSpeed;\n  }\n  \n  //send apples back to top\n  this.initiate = function() {\n    if (this.y > height) {\n      this.y = random(-600, 0);\n    }\n  }\n}"
  },
  {
    "_id": "zN4HuXSKYcs7zNrGu",
    "author_id": "4aZxpvvL2qSDLGARM",
    "author": "Ray Xia",
    "lesson": "Pixels",
    "created_at": { "$date": "2019-03-08T01:52:57.155Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/a03mjicdyjsgmtjdvjik",
        "version": 1552010216,
        "signature": "2a87b68cd4e1c033b82c51fe68aece03f0345960",
        "width": 844,
        "height": 626,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-03-08T01:56:56Z",
        "tags": [],
        "bytes": 170632,
        "type": "upload",
        "etag": "11110bda9c39e52a1f13930a37473f7e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1552010216/avalanche2019/a03mjicdyjsgmtjdvjik.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1552010216/avalanche2019/a03mjicdyjsgmtjdvjik.png"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\nvar video;\n\nvar vScale = 16;\n\nfunction setup() {\n  createCanvas(640, 480);\n  pixelDensity(1);\n  video = createCapture(VIDEO);\n  video.size(width / vScale, height / vScale);\n}\n\nfunction draw() {\n  background(51);\n  video.loadPixels();\n  for (var y = 0; y < video.height; y++) {\n    for (var x = 0; x < video.width; x++) {\n      var index = (video.width - x + 1 + (y * video.width)) * 4;\n      var r = video.pixels[index + 0];\n      var g = video.pixels[index + 1];\n      var b = video.pixels[index + 2];\n      var bright = (r + g + b) / 3;\n      var w = map(bright, 0, 255, 0, vScale);\n      noStroke();\n      fill(r,g,b);\n      rectMode(CENTER);\n      ellipse(x * vScale, y * vScale, w, w);\n    }\n  }\n\n}",
    "inspiration_name": "Daniel Shiffman's brightness block",
    "inspiration_url": "https://youtu.be/rNqaw8LT2ZU"
  },
  {
    "_id": "zRipy2ekQH8ve5XDL",
    "author_id": "ydnDMAe5iAgeJa5pp",
    "author": "Noah Edelstein",
    "lesson": "Sound",
    "created_at": { "$date": "2019-04-15T15:27:03.922Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/khdr6qik02lo6r1p3cmf",
        "version": 1555342124,
        "signature": "af0fb7a22e5e5a40918d370ff1bdd34a48046ab1",
        "width": 640,
        "height": 348,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-15T15:28:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 12240183,
        "type": "upload",
        "etag": "009f3f2c96bd27fca38d8bd074452a41",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1555342124/avalanche2019/khdr6qik02lo6r1p3cmf.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1555342124/avalanche2019/khdr6qik02lo6r1p3cmf.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "220977",
          "frequency": 44100,
          "channels": 8,
          "channel_layout": "7.1"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4813943",
          "dar": "160:87"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5043165,
        "duration": 19.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "7XycCxwG69HJ7TefY",
        "category": "nerdy",
        "created_at": { "$date": "2019-04-18T03:37:45.763Z" }
      }
    ],
    "title": "",
    "description": "I tried to work with the individual pixels of the video but it was waaay to slow so I had to just do filters over the whole canvas."
  },
  {
    "_id": "zTWYHZp8kPDir8ztC",
    "author_id": "Yw7QmsCcEhu4eZuTP",
    "author": "kathrin henon",
    "lesson": "Parameters",
    "created_at": { "$date": "2019-02-15T14:53:29.078Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/r23dflcqu6om5fg1wb3h",
        "version": 1550242414,
        "signature": "e40ae3fab6e710e986843756bd6ce471ab663245",
        "width": 552,
        "height": 468,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-15T14:53:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 492391,
        "type": "upload",
        "etag": "5eb16fe4d9b1865ccc671ccb770074a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550242414/avalanche2019/r23dflcqu6om5fg1wb3h.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550242414/avalanche2019/r23dflcqu6om5fg1wb3h.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "310007",
          "dar": "46:39"
        },
        "frame_rate": 60,
        "bit_rate": 317245,
        "duration": 12.416667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Do you notice anything?  \n\n(vec. from https://www.freepik.com/free-vector/avatar-with-different-preferences_1066822.htm)"
  },
  {
    "_id": "zY4rn2JWpfTm23hGK",
    "author_id": "iDDWcdkC2BWXZMSyw",
    "author": "Kevin Fan",
    "lesson": "Random",
    "created_at": { "$date": "2019-02-08T06:25:22.494Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/z9nj6ujryoswkeodcsjv",
        "version": 1549607190,
        "signature": "f9dc08eb542486ce06ac87efdeb49d1ebfabf02c",
        "width": 1476,
        "height": 1404,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-08T06:26:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 1012579,
        "type": "upload",
        "etag": "760a5abdd7e514aa772aa9180ea234f3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1549607190/avalanche2019/z9nj6ujryoswkeodcsjv.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1549607190/avalanche2019/z9nj6ujryoswkeodcsjv.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1784666",
          "dar": "41:39"
        },
        "frame_rate": 60,
        "bit_rate": 1793497,
        "duration": 4.516667,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T14:21:03.994Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-08T15:00:21.787Z" }
      }
    ],
    "title": "",
    "description": "Firework\n- \nMade with Processing"
  },
  {
    "_id": "zZWerGGnyZ6Hdguek",
    "author_id": "xSc7EEweHFrcu2jjC",
    "author": "Andrew Levinson",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-22T18:23:16.943Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/cxxhqa2ods2g5ll8ag9c",
        "version": 1550859806,
        "signature": "594fb3e8ba5b8d17a750d97adddc0ede42f8f4e1",
        "width": 1000,
        "height": 940,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-22T18:23:26Z",
        "tags": [],
        "bytes": 405426,
        "type": "upload",
        "etag": "ccab04a7a0299fdbc8e252f821968024",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550859806/avalanche2019/cxxhqa2ods2g5ll8ag9c.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550859806/avalanche2019/cxxhqa2ods2g5ll8ag9c.png"
      },
      {
        "public_id": "avalanche2019/t4tmx5dq1jmxh4zhur59",
        "version": 1550859810,
        "signature": "e73f820dde8e4eb7f049f190a0ded3d7f31eabdb",
        "width": 1132,
        "height": 1060,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-22T18:23:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 11465403,
        "type": "upload",
        "etag": "7ab96c88589ca24de8c0bf76043a653f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550859810/avalanche2019/t4tmx5dq1jmxh4zhur59.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550859810/avalanche2019/t4tmx5dq1jmxh4zhur59.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "6280310",
          "dar": "283:265"
        },
        "frame_rate": 15,
        "bit_rate": 6282412,
        "duration": 14.6,
        "rotation": 0
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2019-02-22T18:44:56.729Z" }
      },
      {
        "voter_id": "wXmG3qb4ixbw3ssAF",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-22T18:58:41.723Z" }
      }
    ],
    "title": "",
    "description": "Use the [open weather API](https://openweathermap.org/current) to pull windspeed from any US zip code and use to generate noise speed",
    "inspiration_name": "Vectors from Coding Train",
    "inspiration_url": "https://www.youtube.com/watch?v=BjoM9oKOAKY&list=PLRqwX-V7Uu6bgPNQAdxQZpJuJCjeOr7VD&index=6",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.js\n\nconst weatherAPI = {\n  key: \"058e5a582368a449e5156441d3403646\",\n  location: 11238\n};\n\nlet input, button;\n\nlet inc = 0.1;\nlet scl = 10;\nlet cols, rows;\nlet zoff = 0;\nlet windMove = 0;\nlet para = \"Enter a zipcode pull the windspeed and see the noise update\";\nlet hue = 50;\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 100);\n  cols = floor(width / scl);\n  rows = floor(height / scl);\n\n  input = createInput().attribute(\"placeholder\", \" 🕵🏻‍♂️ Enter a Zipcode\");\n  input.position(40, 51);\n\n  button = createButton(\"Load Windspeed! 💨\");\n  button.position(input.x + input.width + 10, 48);\n  button.mousePressed(gen);\n\n  createP(para);\n}\n\nfunction gen() {\n  weatherAPI.location = input.value();\n  input.value(\"\");\n\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?zip=${\n      weatherAPI.location\n    },us&units=imperial&appid=${weatherAPI.key}`\n  )\n    .then(res => {\n      return res.json();\n    })\n    .then(data => {\n      console.log(data);\n\n      // use to update zoff noise speed\n      windMove = data.wind.speed * 0.0005;\n\n      hue = random(100);\n\n      // data paragraph for current weater\n      createP(`Currently, in <b>${data.name}</b> it's <b>${Math.round(\n        data.main.temp\n      )}</b> ℉ and\n      <b>${data.weather[0].main.toLowerCase()}</b> with a windspeed of <b>${\n        data.wind.speed\n      }</b> mph.\n  `);\n    })\n    .catch(err => {\n      console.log(err);\n      createP(`Something went wrong, try entering a zip code again!`);\n    });\n}\n\nfunction draw() {\n  background(10);\n\n  // code from coding train 2d noise demo\n  // https://www.youtube.com/watch?v=BjoM9oKOAKY&list=PLRqwX-V7Uu6bgPNQAdxQZpJuJCjeOr7VD&index=6\n  let yoff = 0;\n  for (y = 0; y < rows; y++) {\n    var xoff = 0;\n    for (x = 0; x < cols; x++) {\n      let angle = noise(xoff, yoff, zoff) * TWO_PI;\n      let v = p5.Vector.fromAngle(angle);\n      xoff += inc;\n      stroke(hue, 60, 80);\n      push();\n      translate(x * scl, y * scl);\n      rotate(v.heading());\n      line(0, 0, scl, 0);\n      pop();\n    }\n    yoff += inc;\n    zoff += windMove;\n  }\n}"
  },
  {
    "_id": "zZerwMnCbjaAbcoiv",
    "author_id": "WYacRHNkqf6GiFHDS",
    "author": "Brooke Smith",
    "lesson": "Noise",
    "created_at": { "$date": "2019-02-19T16:35:14.948Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fovgqdr3jnvz5f3rmrob",
        "version": 1550605817,
        "signature": "f28acff42ca7b15d56f1c7b2e7928690b63753ca",
        "width": 1192,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-02-19T19:50:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 11238669,
        "type": "upload",
        "etag": "dbdedc057757a496f1bfb27b4004d326",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1550605817/avalanche2019/fovgqdr3jnvz5f3rmrob.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1550605817/avalanche2019/fovgqdr3jnvz5f3rmrob.mov",
        "audio": {
          "codec": "aac",
          "bit_rate": "310630",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "9760234",
          "dar": "149:148"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10096312,
        "duration": 8.905167,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/idwkh5vv68xref5rmiqc",
        "version": 1550605841,
        "signature": "73f35b58fe25b8e8fdf1155c8c8a76f9766c42ea",
        "width": 1194,
        "height": 1208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-19T19:50:41Z",
        "tags": [],
        "bytes": 2569168,
        "type": "upload",
        "etag": "7832b9b3299acec75d3af5aa6e2ed69b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550605841/avalanche2019/idwkh5vv68xref5rmiqc.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550605841/avalanche2019/idwkh5vv68xref5rmiqc.png"
      },
      {
        "public_id": "avalanche2019/u5ia16bxarpknonszzl3",
        "version": 1550605845,
        "signature": "2a1c0dc782b4adf18b69df82464ffac1f30e6d21",
        "width": 1202,
        "height": 1208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-19T19:50:45Z",
        "tags": [],
        "bytes": 2518150,
        "type": "upload",
        "etag": "3791805981ba3d93e181cca584ef429a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1550605845/avalanche2019/u5ia16bxarpknonszzl3.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1550605845/avalanche2019/u5ia16bxarpknonszzl3.png"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Experimenting with noise to create basic  Fur Texture \n\ndrawing a vector field with noise",
    "inspiration_name": "Drawing a Vector Field with Noise",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.js\nlet inc = 0.05;\nlet scl = 6;\nlet cols, rows;\nlet zOff = 0;\nlet b = 30;\n\nfunction setup() {\n    createCanvas(600, 600);\n    // background(0, 0, 0);\n    colorMode(HSB, 360, 100, 100, 1);\n    cols = floor(width / scl);\n    rows = floor(height / scl);\n    // colorMode(HSB);\n    frameRate(5);\n\n}\n\nfunction draw() {\n    background(30, 87, 0, .2);\n    strokeWeight(1);\n\n    var yOff = 0;\n    for (let y = 0; y < rows; y++) {\n        var xOff = 0;\n        strokeWeight(1);\n\n        noFill();\n\n        for (let x = 0; x < cols; x++) {\n            let index = (x + y * width) * 4;\n            let angle = noise(xOff, yOff, zOff) * TWO_PI;\n            let v = p5.Vector.fromAngle(angle);\n            xOff += inc;\n\n            push();\n            b = noise(xOff, yOff) * 100;\n            stroke(109, 90, b, .1);\n            translate(x * scl, y * scl);\n            rotate(v.heading());\n            line(0, 0, scl, scl + 40);\n            pop();\n            // rect(x * scl, y * scl, scl, scl);\n        }\n        yOff += inc;\n    }\n    zOff += inc;\n\n    // noLoop();\n}"
  },
  {
    "_id": "zdhjuvpjZ5PfZFNiP",
    "author_id": "24sPdz2SRLiiWezdC",
    "author": "Batool Ak",
    "lesson": "3D",
    "created_at": { "$date": "2019-05-03T16:35:05.731Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/eu655lc5kv4sxkiiubqv",
        "version": 1556901339,
        "signature": "52c7a79d6dbde5c468581c4d1ae42efdaeae25c4",
        "width": 838,
        "height": 849,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-05-03T16:35:39Z",
        "tags": [],
        "bytes": 202665,
        "type": "upload",
        "etag": "d51ab1be1334412bfbf47aacee8c908c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556901339/avalanche2019/eu655lc5kv4sxkiiubqv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556901339/avalanche2019/eu655lc5kv4sxkiiubqv.jpg"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Pennies!",
    "code": "intersection() {\n    color(\"DarkGoldenrod\")\n    scale([0.1, 0.1, 0.007])\n    surface(file = \"penny.png\", center = true, invert = false);\ncolor(\"DarkGoldenrod\")\ncylinder(h=10, r=25, center=false);\n}\n\ncolor(\"DarkGoldenrod\")\ntranslate([0,0,-1.7])\ncylinder($fn=80,h=4, r=25, center=true);"
  },
  {
    "_id": "zhXyQfbfv3mj2c7iw",
    "author_id": "7XycCxwG69HJ7TefY",
    "author": "Alonso Alcocer",
    "lesson": "Tiles",
    "created_at": { "$date": "2019-02-01T20:27:34.704Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/fn43hmcusp9i2prlhwft",
        "version": 1549052865,
        "signature": "9836c47b0fb1c3dea16ad85d46af199cdf3fc85c",
        "width": 2120,
        "height": 1280,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-02-01T20:27:45Z",
        "tags": [],
        "bytes": 316663,
        "type": "upload",
        "etag": "3ba5b032c8e2d30d4f2fa7bcf16b4f35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1549052865/avalanche2019/fn43hmcusp9i2prlhwft.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1549052865/avalanche2019/fn43hmcusp9i2prlhwft.jpg"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "HfJXqwPQbwJ6trstr",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:58:06.136Z" }
      },
      {
        "voter_id": "QSwAyQWuZTQEDAsf5",
        "category": "pretty",
        "created_at": { "$date": "2019-02-01T20:59:30.87Z" }
      },
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "nerdy",
        "created_at": { "$date": "2019-02-01T21:07:28.402Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2019-12-16T18:40:32.735Z" }
      }
    ],
    "title": "",
    "description": "Draw four radial grids\nRoll a dice to get a random circle in a ring edge\nDraw distorted square by joining all circles"
  },
  {
    "_id": "zjB7E8Kgat5zPw6X3",
    "author_id": "Dbo5QkXQ8ubge2u4F",
    "author": "Archit Kaushik",
    "created_at": { "$date": "2019-02-26T23:55:15.44Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/zgc5ftblwambnllf0qx2",
        "version": 1551225333,
        "signature": "bed99266c0f60162b0e7936901637207d2836d7a",
        "width": 994,
        "height": 600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-02-26T23:55:33Z",
        "tags": [],
        "bytes": 33991,
        "type": "upload",
        "etag": "ef013f7710ccca455a14d5144d02aa9c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1551225333/avalanche2019/zgc5ftblwambnllf0qx2.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1551225333/avalanche2019/zgc5ftblwambnllf0qx2.png"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Strategies",
    "title": "",
    "description": "Challenge 2",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n\n// draws a rectangle, where you tell it to!\n\n\nvar amplitude_slider;\nvar timeSlider;\nvar frequencySlider;\n\nvar startX = 50;\nvar startY = 250;\nvar endX = 450;\nvar endY = 50;\n\n\nfunction setup() {\n    createCanvas(500, 300);\n\n\n    createP('Amplitude');\n    amplitude_slider = createSlider(0, 200, 120);\n\n    createP('Time speed');\n    timeSlider =  createSlider(0, 10, 2);\n    \n    createP('frequency');\n    frequencySlider=  createSlider(0,10,1);\n\n}\n\n\nfunction draw() {\n    background(50);\n    ellipseMode(CENTER);\n\n    var amplitude = amplitude_slider.value() ;\n    var time = timeSlider.value() ;\n    var freq = map (frequencySlider.value(),0,10,0.01,0.07 );\n    \n\n\n    noiseDetail(1, .5);\n\n\n\n    fill(255);\n    noStroke();\n    let n;\n\n    // study this loop. do you understand how the line of ellipses is created?\n    for (i = 0; i < 1; i += .02) {\n        var x = lerp(startX, endX, i);\n        var y = lerp(startY, endY, i);\n        // var offsetX = 0;\n        // var offsetY = 0;\n\n\n        var  offsetY = noise(x) * 0.2;\n\n        n = noise(x * freq + millis()*time * -.001);\n        var offsetX = n * amplitude;\n\n        ellipse(x + offsetX, y + offsetY, 10, 10);\n    }\n\n\n}"
  },
  {
    "_id": "zmJsFMNgxgrA2tsM7",
    "author_id": "HfJXqwPQbwJ6trstr",
    "author": "Phoebe Zheng",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T16:35:18.777Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": ""
  },
  {
    "_id": "znq2rRMGNXkEv5J2k",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Music",
    "created_at": { "$date": "2019-04-26T05:27:51.438Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/l2gqjeunxjyx8r1pnjkq",
        "version": 1556256506,
        "signature": "fecf839d3b88056a941afc1327e9031f23b184e8",
        "width": 944,
        "height": 750,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T05:28:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 19310458,
        "type": "upload",
        "etag": "33330d80db8fb60daf3234b6241907c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556256506/avalanche2019/l2gqjeunxjyx8r1pnjkq.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556256506/avalanche2019/l2gqjeunxjyx8r1pnjkq.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "1432507",
          "dar": "472:375"
        },
        "is_audio": false,
        "frame_rate": 15,
        "bit_rate": 1752946,
        "duration": 88.066667,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/aoy4c5zkjwif1rebguel",
        "version": 1556256544,
        "signature": "10fd027a3fdcfab901c9db8b982195f06acd7689",
        "width": 944,
        "height": 750,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-26T05:29:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 6236956,
        "type": "upload",
        "etag": "8b5396dcff7d00edca235469b52d481d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1556256544/avalanche2019/aoy4c5zkjwif1rebguel.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1556256544/avalanche2019/aoy4c5zkjwif1rebguel.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "1378",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Constrained Baseline",
          "bit_rate": "562694",
          "dar": "472:375"
        },
        "is_audio": false,
        "frame_rate": 28.75,
        "bit_rate": 565059,
        "duration": 88.282268,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/yuu1usiev3iwf7e656t5",
        "version": 1556256548,
        "signature": "2d7e28dd13d281831354adb1f263c98abf48a8a4",
        "width": 748,
        "height": 498,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-26T05:29:08Z",
        "tags": [],
        "bytes": 39272,
        "type": "upload",
        "etag": "301ceb274a032022e6d92f4b4d265b52",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1556256548/avalanche2019/yuu1usiev3iwf7e656t5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1556256548/avalanche2019/yuu1usiev3iwf7e656t5.jpg"
      }
    ],
    "votes": [
      {
        "voter_id": "4aZxpvvL2qSDLGARM",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T07:00:25.469Z" }
      },
      {
        "voter_id": "24sPdz2SRLiiWezdC",
        "category": "pretty",
        "created_at": { "$date": "2019-04-26T07:24:19.9Z" }
      }
    ],
    "title": "",
    "description": "Extending from the last week's sketch on Discrete Fourier Transform, in this piece, I have visualized the epicycles as parallel record players, playing a romantic piece on a violin orchestra. \nI have played the piece on Garage Band and added Record Player White Noise to create the effect.",
    "inspiration_name": "Record Player Music Visualization",
    "inspiration_url": "https://en.wikipedia.org/wiki/Discrete_Fourier_transform",
    "code": "// Check online on Github:\n// Link:\n// https://github.com/akshansh2593/CompForm/tree/master/recordPlayer_visualization"
  },
  {
    "_id": "zuduoWftTKFBgT54E",
    "author_id": "BRWMuGgSmfRbg9b2p",
    "author": "Akshansh Chaudhary",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T14:38:53.619Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/m2pw1hkocihjqf74gu9h",
        "version": 1554475165,
        "signature": "0b2e259946dfb556d840c82c2a28a749652580be",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T14:39:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 15412789,
        "type": "upload",
        "etag": "b88dff31dcc30432de6372aeecbd573f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554475165/avalanche2019/m2pw1hkocihjqf74gu9h.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554475165/avalanche2019/m2pw1hkocihjqf74gu9h.mp4",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "9916044",
          "dar": "16:9"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 10211653,
        "duration": 12.033333,
        "rotation": 0
      },
      {
        "public_id": "avalanche2019/pequsdrnents1rm5rjle",
        "version": 1554475177,
        "signature": "1de83b0ba5eb702e40e83bee0eb4c0cf56a832e0",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2019-04-05T14:39:37Z",
        "tags": [],
        "bytes": 398309,
        "type": "upload",
        "etag": "0a18e764caff9fe34f12adcf8cd9690f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554475177/avalanche2019/pequsdrnents1rm5rjle.png",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554475177/avalanche2019/pequsdrnents1rm5rjle.png"
      },
      {
        "public_id": "avalanche2019/e0hvhh6wuedb7ledfcd4",
        "version": 1554475183,
        "signature": "14b5814322030c6bd365c45083aacd8877abc6e6",
        "width": 1258,
        "height": 650,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2019-04-05T14:39:43Z",
        "tags": [],
        "bytes": 84448,
        "type": "upload",
        "etag": "8f598543050c4e7cb95c9ce99e177b35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/image/upload/v1554475183/avalanche2019/e0hvhh6wuedb7ledfcd4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2019/image/upload/v1554475183/avalanche2019/e0hvhh6wuedb7ledfcd4.jpg"
      }
    ],
    "votes": [],
    "title": "",
    "description": "In this project, I have created a generative Sierpinski Triangle. A grid of pyramids gets converted into a triangle shape with the platonic popups. \nI have used cloners, shaders, lighting, camera, and other 3D tools to create the desired effect. I have used Cinema 4D coupled with After Effects in this project. \n\nSpecial thanks: Jonas Pilz",
    "inspiration_name": "Generative Sierpinski Triangle",
    "inspiration_url": "https://en.wikipedia.org/wiki/Sierpinski_triangle"
  },
  {
    "_id": "zwoS5XTt2fynDHeRn",
    "author_id": "oNptvYKewf9pfcXHa",
    "author": "Brad MacDonald",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T15:33:28.678Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/yhn0hqemiacvdli2vhks",
        "version": 1554478425,
        "signature": "17f601f8ee14224dc550f3661444d89bc5e32418",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2019-04-05T15:33:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 3614326,
        "type": "upload",
        "etag": "49a92c8a8de6262959e823d94fda8d74",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554478425/avalanche2019/yhn0hqemiacvdli2vhks.mp4",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554478425/avalanche2019/yhn0hqemiacvdli2vhks.mp4",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "High",
          "bit_rate": "3769068",
          "dar": "1:1"
        },
        "frame_rate": 15,
        "bit_rate": 3838222,
        "duration": 7.533333,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EbdEAWumAHKFDnb3H",
        "category": "pretty",
        "created_at": { "$date": "2019-04-05T16:20:34.508Z" }
      }
    ],
    "title": "",
    "description": "Be radiant. And smile. Stop motion featuring forks and spoons from my kitchen, batteries from my office and letter tiles from Apples to Apples."
  },
  {
    "_id": "zxEHDGGhnPbkvKQk8",
    "author_id": "xrbYhgTEuXQagpop8",
    "author": "Jo Biscailuz",
    "lesson": "Animation",
    "created_at": { "$date": "2019-04-05T13:27:02.865Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "public_id": "avalanche2019/jmabvosfpjobuxazxlzj",
        "version": 1554470831,
        "signature": "3bee8c999ef4f9114d7e3ad36dfca0b006823018",
        "width": 640,
        "height": 360,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2019-04-05T13:27:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 158428,
        "type": "upload",
        "etag": "ca69d34e5380c775e4ba755ef79851cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2019/video/upload/v1554470831/avalanche2019/jmabvosfpjobuxazxlzj.mov",
        "secure_url": "https://res.cloudinary.com/compform2019/video/upload/v1554470831/avalanche2019/jmabvosfpjobuxazxlzj.mov",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "2577610",
          "dar": "16:9"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 2713197,
        "duration": 0.467133,
        "rotation": 0
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Made using Maya. Might make it longer and have more petals fall."
  }
]
