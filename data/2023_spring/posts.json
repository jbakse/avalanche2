[
  {
    "_id": "27vdvsA9c6FTbMgDa",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": { "$date": "2023-04-28T03:30:50.328Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2f153371a1be06b45bef12e6163479a0",
        "public_id": "avalanche2023spring/uibymrddapzlsxp2iekr",
        "version": 1682652797,
        "version_id": "acb7b2964f6245adced207dcd712e2b3",
        "signature": "c3c92393699ebee3ce2e4ce1614548a7aa9e904a",
        "width": 1266,
        "height": 1132,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:33:17Z",
        "tags": [],
        "bytes": 59580,
        "type": "upload",
        "etag": "aa822f7f9231aabec5c5085367131ac9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682652797/avalanche2023spring/uibymrddapzlsxp2iekr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682652797/avalanche2023spring/uibymrddapzlsxp2iekr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f5600193c834dfb0bc061446e08e6c37",
        "public_id": "avalanche2023spring/irieoay9blockaj64qad",
        "version": 1682652801,
        "version_id": "f1429e26433fd85069188f6d528c81fe",
        "signature": "7d95afd1dacca52f5e5ce6f08be02cbc70267852",
        "width": 2376,
        "height": 1126,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:33:21Z",
        "tags": [],
        "bytes": 332763,
        "type": "upload",
        "etag": "839cb9ac027a832803926353b9488165",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682652801/avalanche2023spring/irieoay9blockaj64qad.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682652801/avalanche2023spring/irieoay9blockaj64qad.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "545c3796b30124d959ed158a372722e5",
        "public_id": "avalanche2023spring/w0ytzzndnirzkngeqpwt",
        "version": 1682652811,
        "version_id": "bb6e660936e66eda75a0e57e290dcd0d",
        "signature": "0ea5ea355779cfadb5803e162b043bb39fb3fdbb",
        "width": 2376,
        "height": 1124,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:33:31Z",
        "tags": [],
        "bytes": 245759,
        "type": "upload",
        "etag": "0cab55739d299fdaf697d2da43235be4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682652811/avalanche2023spring/w0ytzzndnirzkngeqpwt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682652811/avalanche2023spring/w0ytzzndnirzkngeqpwt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "funny",
        "created_at": { "$date": "2023-04-28T04:54:36.353Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "I really wanted the joke generator to work so I took another stab at it. Turns out I was able to get it to function by simply trying out a different API. This one generates a new dad joke every time you refresh the page.",
    "comments": []
  },
  {
    "_id": "2H4dv4GFFGCBmZdyJ",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-21T00:08:16.108Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a3bf4d2f40ffd4a108683efb74d0b653",
        "public_id": "avalanche2023spring/ntbjybauklzeroilu5jm",
        "version": 1676938115,
        "version_id": "3d68359d245f82c79e1a29cdbe1f1e75",
        "signature": "2e8beadecb5dee4edbde596e663aa1fb101ad13d",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-21T00:08:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 9677512,
        "type": "upload",
        "etag": "d734d99ef3ac2d49624c1e33cd78a404",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676938115/avalanche2023spring/ntbjybauklzeroilu5jm.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676938115/avalanche2023spring/ntbjybauklzeroilu5jm.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676938115/avalanche2023spring/ntbjybauklzeroilu5jm.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "11711769",
          "dar": "794:797",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 12491812,
        "duration": 6.197667,
        "rotation": 0,
        "nb_frames": 386,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ac921c452f97dee6086507f740cc38d0",
        "public_id": "avalanche2023spring/qfmddm8h3u0ibhk7vqso",
        "version": 1676938265,
        "version_id": "f0e81068f35ad8c9072a4a0ae71cd263",
        "signature": "0c204d025fd455cfafa8c08dd049854d5168ad19",
        "width": 1080,
        "height": 1920,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-21T00:11:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 12630674,
        "type": "upload",
        "etag": "3a6bbeb6f4e9f5dfb225e225b378fa3d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676938265/avalanche2023spring/qfmddm8h3u0ibhk7vqso.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676938265/avalanche2023spring/qfmddm8h3u0ibhk7vqso.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676938265/avalanche2023spring/qfmddm8h3u0ibhk7vqso.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p10le",
          "codec": "hevc",
          "level": 120,
          "profile": "Main 10",
          "bit_rate": "15133006",
          "time_base": "1/600"
        },
        "frame_rate": 29.97002997002997,
        "bit_rate": 15145448,
        "duration": 6.671667,
        "rotation": 90,
        "nb_frames": 200,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:19.289Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T04:46:16.765Z" }
      }
    ],
    "title": "",
    "description": "Inspired by a rather bubbly drink I had this weekend with uncontrollable flow of bubbles 🙃",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet bubbleSize;\nlet t=0;\nlet densityX;\nlet densityY;\n\nfunction setup() {\n  createCanvas(800, 800);\n  // noLoop();\n  \n  densityX = createSlider(50, 300, 50);\n  densityX.position(20, 40);\n  densityX.style('width', '100px');\n\n  createP(\"Vertical Density\");\n  densityY = createSlider(50, 300, 50);\n  densityY.position(350, 40);\n  densityY.style('width', '100px');\n  \n  createP(\"Bubble Size\");\n  bubbleSize = createSlider(5, 12, 5);\n  bubbleSize.position(600, 40);\n  bubbleSize.style('width', '100px');\n}\n\nfunction draw() {\n  background(110, 195, 196)\n  \n  push()\n  noStroke()\n  fill(30)\n  textSize(14)\n  text('Horizontal Density', 20, 30);\n  text('Vertical Density', 350, 30);\n  text('Bubble Size', 600, 30);\n  pop()\n  \n  for(let x=width/2-densityX.value(); x<width/2+densityX.value(); x+=10){\n    for (let y=height/2-densityY.value();y<height/2+densityY.value(); y+=10){\n      \n      let n;\n      \n      n = noise(x, y)*60-30\n      \n      let s;\n      \n      s = noise(x*0.01, y*0.01)*20-10\n      \n      noiseDetail(t);\n      \n      fill (255, 50+n)\n      stroke(255, 200+n)\n      \n      ellipse(x+n, y+n, bubbleSize.value()+s, bubbleSize.value()+s)\n      \n    }\n    \n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "2Ttxhsdd8PJ2oabH6",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T17:04:16.49Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2c65db689da34f0b22b6e15618761b03",
        "public_id": "avalanche2023spring/o1kcgav26rzbn4ibkjd6",
        "version": 1683911062,
        "version_id": "19ad1d7a86518c73f3aeb18a1702cc0e",
        "signature": "60d420ecd017795db76fe81eb4467d7adeebe868",
        "width": 984,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T17:04:22Z",
        "tags": [],
        "bytes": 72785,
        "type": "upload",
        "etag": "7732ae6588ef18e8dfaf1c01916d107c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683911062/avalanche2023spring/o1kcgav26rzbn4ibkjd6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683911062/avalanche2023spring/o1kcgav26rzbn4ibkjd6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "MY GARDEn",
    "comments": []
  },
  {
    "_id": "2iaHrSGnqnjyv9fXS",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T15:14:47.7Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b41f72c9d5cd47bd13bc327c288e19a8",
        "public_id": "avalanche2023spring/lcxv0dey9h5avihoye2t",
        "version": 1676560527,
        "version_id": "e53d7b7277dc402c3ed94a2c92963d23",
        "signature": "9559118c8ddaa9dbfb5263bd90090d86fcccba25",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T15:15:27Z",
        "tags": [],
        "bytes": 1969505,
        "type": "upload",
        "etag": "5050220eea6f0664e352018e4728a382",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676560527/avalanche2023spring/lcxv0dey9h5avihoye2t.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676560527/avalanche2023spring/lcxv0dey9h5avihoye2t.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7ad720a0bcdd49cc94d8a59200151da6",
        "public_id": "avalanche2023spring/xcvoyd6foyfhkbdkb54p",
        "version": 1676560555,
        "version_id": "468a67d256e59798a5e09ee8eb30a65f",
        "signature": "1e78e8babcb492e3264ec151dc1ddebda139a09c",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-16T15:15:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 15812201,
        "type": "upload",
        "etag": "cac87dea4c5822d256342daa8b8c0765",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676560555/avalanche2023spring/xcvoyd6foyfhkbdkb54p.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676560555/avalanche2023spring/xcvoyd6foyfhkbdkb54p.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676560555/avalanche2023spring/xcvoyd6foyfhkbdkb54p.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "25053299",
          "dar": "794:797",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 25144465,
        "duration": 5.030833,
        "rotation": 0,
        "nb_frames": 303,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T18:31:10.631Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T00:57:39.26Z" }
      }
    ],
    "title": "",
    "description": "My pair challenge for Srishti - just playing around with noise to create flow-y motions",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(800, 800);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(0, 95, 130);\n  \n  noStroke()\n  \n  for(let x=5; x<width; x+=5){\n    \n    let r = 228;\n    let g = 148;\n    let b = 255;\n//     228, 148, 255\n//     145, 255, 105\n    \n    t = noise(x*0.01, frameCount * 0.05) * 200 - 100;\n    \n   \n\n//     144, 255, 107\n    \n    for(let y=10; y<height + 20; y+=10){\n       fill(r + t, g+ t, b + t);\n    let n = noise(x * 0.01, y*0.001) * 40 - 20\n    ellipse(x, y + n, 5, 5);\n    noiseDetail(0.9);\n      // rect(x, y + n, 5, 5 + n)\n      \n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "2ibejdZEaTakQweSW",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-12T04:58:32.152Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "04335df2f7378407759f3b94a65023e0",
        "public_id": "avalanche2023spring/hljh7scrkxqdhnbmvuix",
        "version": 1676178110,
        "version_id": "d9232c76457452f4b8493e46e0ca53a5",
        "signature": "03292831eff3957e3e69319f38eff589a3ede6d2",
        "width": 1006,
        "height": 1000,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-12T05:01:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 4655580,
        "type": "upload",
        "etag": "377dd0bbbc235689f6cfc298fa479ded",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676178110/avalanche2023spring/hljh7scrkxqdhnbmvuix.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676178110/avalanche2023spring/hljh7scrkxqdhnbmvuix.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "2206775",
          "dar": "503:500",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2254973,
        "duration": 16.516667,
        "rotation": 0,
        "nb_frames": 995,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T04:45:56.864Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:07.346Z" }
      }
    ],
    "title": "",
    "description": "Malevich-inspired sketch with rectangles and ellipses.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\n//shape positions and angle\nlet x;\nlet y;\nlet r;\n\n//colors\nlet shapeColR;\nlet shapeColG;\nlet shapeColB;\n\n//texture\nlet texture;\n\n//no. of shapes\nlet shapeNum;\n\nfunction preload() {\n  texture = loadImage('papertexture.jpeg');\n}\n\nfunction setup() {\n  frameRate(1);\n  createCanvas(500, 500);\n  angleMode(DEGREES);\n  noStroke();\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(220);\n  image(texture,0,0);\n  randomStuff(); \n  // blendMode(LIGHTEST); -- Can't figure out how to blend it with the texture\n  \n}\n\n\nfunction randomStuff() {\n  shapeNum = floor(random(5,42));\n  \n  for(let i = 0;  i < shapeNum; i++) {\n    x = random(0, width-200);\n    y = random(0, height-150);\n    w = (random(10, 200));\n    h = (random(10, 200));\n    r = (random(-40, 80));\n    shapeColR =  floor(random(0, 360));\n    shapeColG =  floor(random(0, 360));\n    shapeColB =  floor(random(0, 360));\n    \n    makeRect(x, y, w, h, r);\n    makeCircle(x,y,w,h);\n  }\n}\n\nfunction makeRect(x, y, w, h, r){\n  fill(shapeColR,shapeColG,shapeColB);\n  push();\n    translate(x, y);\n    rotate(r);\n    rect(x, y, w, h);\n  pop();\n}\n\nfunction makeCircle(x,y,w,h) {\n  fill(shapeColR,shapeColG,shapeColB);\n  ellipse(x,y,w,h);\n}",
    "comments": []
  },
  {
    "_id": "2mZBSqyhF7u9av2gp",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T18:02:19.948Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cd9b08bc6f18c43b62b8767cb03f9175",
        "public_id": "avalanche2023spring/ndsv7afhixf48qdutsej",
        "version": 1675360967,
        "version_id": "403141876a50f22dd964039c4bc49e46",
        "signature": "041a30ced8e51f2aa2c20c01cedb887816baf282",
        "width": 1200,
        "height": 1200,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-02T18:02:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 19353431,
        "type": "upload",
        "etag": "e2f491ba6c587c7c8ca0b5d87cac5116",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675360967/avalanche2023spring/ndsv7afhixf48qdutsej.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675360967/avalanche2023spring/ndsv7afhixf48qdutsej.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127689",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "15395182",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 17694565,
        "duration": 8.75,
        "rotation": 0,
        "nb_frames": 584,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T18:07:35.566Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-02-02T18:07:40.486Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T23:18:09.41Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "funny",
        "created_at": { "$date": "2023-02-03T00:24:51.356Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T06:50:59.266Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Alex's instructions",
    "inspiration_name": "Instructions from Alex",
    "code": "//require https://cdnjs.cloudfare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gap = 16;              //gap between each point\nlet l = 32;               //l = half the line length\nlet spacingH;             //horizontal spacing btw points\nlet spacingV;             //vertical spacing btw points\nlet angX = 90;              //starting angle 1\nlet angY = 90;              //starting angle 2\nlet colorA, colorB, colorC;\n\nfunction setup() {\n  colorMode(RGB);\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  \n  spacingH = height / gap;\n  spacingV = width / gap;\n  colorA = color(255, 0, 0);\n  colorB = color(0, 0, 255);\n}\n\nfunction draw() {\n  background('black');\n  \n  angX = map(mouseX, 0, width, 0, 360);\n  angY = map(mouseY, 0, height, 0, 360);\n  \n  push();\n  colorC =\n  //stroke('white'); \n  strokeWeight(2);\n  \n  for (let i = spacingH; i<width; i+=spacingH) {\n    for (let j = spacingV; j<height; j+=spacingV) {\n      //point(i, j); //ref points\n      push();\n        translate(i, j);\n        strokeWeight(4);\n        line (l*sin(angX), l*sin(angY), l*cos(angX), l*cos(angY));\n      pop();\n      \n      angX+=1; angY+=1;\n    }\n  }   \n  pop();\n  \n}",
    "comments": []
  },
  {
    "_id": "2otbeGoS59NeFuPDa",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-22T00:12:25.569Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4a8e00dc6a6daaaa27025c5414b5762b",
        "public_id": "avalanche2023spring/pykjuwzwfnlyxcjerrvh",
        "version": 1679443968,
        "version_id": "24e46c59cf11adb539fee0feb77c5cf9",
        "signature": "35d283135fb5bb25ec195b45f5ea583d18b207b5",
        "width": 1440,
        "height": 1441,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-22T00:12:48Z",
        "tags": [],
        "bytes": 1930376,
        "type": "upload",
        "etag": "ff221b931d822b0dd00f8a76599f5e7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679443968/avalanche2023spring/pykjuwzwfnlyxcjerrvh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679443968/avalanche2023spring/pykjuwzwfnlyxcjerrvh.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bc2aa8ca8321ef5ca35f0d402113fcb1",
        "public_id": "avalanche2023spring/tsovzcufpfw1qsrqwren",
        "version": 1679443975,
        "version_id": "87513365ea309b9ec5c5dc83b54a4448",
        "signature": "c1bf7598f46a11ac364069061bb8210f0cddb3c3",
        "width": 1440,
        "height": 1441,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-22T00:12:55Z",
        "tags": [],
        "bytes": 1592799,
        "type": "upload",
        "etag": "34d89bfadc3e36487dc0dc36a29785ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679443975/avalanche2023spring/tsovzcufpfw1qsrqwren.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679443975/avalanche2023spring/tsovzcufpfw1qsrqwren.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d6230980c7cdf633da2454121c6c37fb",
        "public_id": "avalanche2023spring/otwtb6e0uhoz1ybbxzq7",
        "version": 1679443978,
        "version_id": "3029f9acc353e1ccca64e021e2e1c689",
        "signature": "94ac789dceb7b7edfdb3c3d8e4d80498141ee4a3",
        "width": 1440,
        "height": 1441,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-22T00:12:58Z",
        "tags": [],
        "bytes": 978750,
        "type": "upload",
        "etag": "236a971d94c74539bc23bb58a02f0405",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679443978/avalanche2023spring/otwtb6e0uhoz1ybbxzq7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679443978/avalanche2023spring/otwtb6e0uhoz1ybbxzq7.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-22T08:19:32.558Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T16:59:52.439Z" }
      }
    ],
    "title": "",
    "description": "First part of the individual assignment! I brought these designs to the laser lab which I then realized was pretty ambitious... I ended up printing the first design!",
    "comments": []
  },
  {
    "_id": "2pwnpLAnsLYMHYHzN",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T03:11:09.959Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f509e150f8a731a1fec67a1a47716c97",
        "public_id": "avalanche2023spring/vcqmmqv1mqe1jvyf2dch",
        "version": 1680837100,
        "version_id": "c5b0a6cdcfecc649aedb21c781865ac7",
        "signature": "ea7eb27379e22fd53137ea271d07aa690565482e",
        "width": 2800,
        "height": 1600,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T03:11:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 4995490,
        "type": "upload",
        "etag": "9597129702825545126b08d10e98267c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680837100/avalanche2023spring/vcqmmqv1mqe1jvyf2dch.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680837100/avalanche2023spring/vcqmmqv1mqe1jvyf2dch.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680837100/avalanche2023spring/vcqmmqv1mqe1jvyf2dch.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "2020212",
          "dar": "7:4",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2062104,
        "duration": 19.380167,
        "rotation": 0,
        "nb_frames": 998,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:22:07.49Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:48:25.571Z" }
      }
    ],
    "title": "",
    "description": "\"Mad Scientists\" couch co-op to produce maximum possible science juice!\nFor further iterations I would want to set a timer for the response action to increase the challenge and add some animations and sound effects. But a pretty straightforward interaction inspired by the slamming button games at Barcade 😬",
    "comments": []
  },
  {
    "_id": "2qp7eQr5DQaBcXLsY",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T09:31:45.082Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "361966e92908bc18b6f4e025d72c6163",
        "public_id": "avalanche2023spring/uz6pg45djj6sp3v5dj9d",
        "version": 1681464715,
        "version_id": "6d5f922d41b542bfa39a4cd33a8dec80",
        "signature": "99f84db32151c1149263e761aebaeb18e4231e7e",
        "width": 1336,
        "height": 704,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T09:31:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 1357637,
        "type": "upload",
        "etag": "d324390ed1ddd40a9e512c385dc4eff8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681464715/avalanche2023spring/uz6pg45djj6sp3v5dj9d.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681464715/avalanche2023spring/uz6pg45djj6sp3v5dj9d.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681464715/avalanche2023spring/uz6pg45djj6sp3v5dj9d.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128154",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "495550",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1095236,
        "duration": 9.916667,
        "rotation": 0,
        "nb_frames": 656,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 10 (3/4): If this is not spooky then idk what is. THIS NOT FOUND ERROR KEPT POPPING UP AND I WAS SO TIRED WHEN I WAS DOING THIS AND GAVE UP.",
    "comments": []
  },
  {
    "_id": "2rgMjdzGAQoi5MTug",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T02:32:44.637Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e398234cb00b76376e6289e0ad7306d5",
        "public_id": "avalanche2023spring/pivzsk4whlxap5ka99fq",
        "version": 1678415573,
        "version_id": "897b2938290e00e3e82d706089809363",
        "signature": "9c755aa2c7d2b94e657cf5449bbaa2c3bc77759d",
        "width": 496,
        "height": 497,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T02:32:53Z",
        "tags": [],
        "bytes": 593207,
        "type": "upload",
        "etag": "a3efd56b5c35fe33119b60ecc6e9f8c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678415573/avalanche2023spring/pivzsk4whlxap5ka99fq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678415573/avalanche2023spring/pivzsk4whlxap5ka99fq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T02:39:22.509Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T05:30:29.752Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:35.406Z" }
      }
    ],
    "title": "",
    "description": "Created this fabric pattern for the pair challenge. I used Keren's sketch here!",
    "comments": []
  },
  {
    "_id": "2thFTmKpEkkpHuDJA",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-07T22:12:10.128Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bc779198a9753a58c5a17c7a5266715e",
        "public_id": "avalanche2023spring/yg5it2agtpo3cyuv1dds",
        "version": 1675807937,
        "version_id": "9e5a4e334a74eea6badea544dd2566eb",
        "signature": "b58c83d735bf9dc273e0ea15f6526916f24bd971",
        "width": 506,
        "height": 497,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-07T22:12:17Z",
        "tags": [],
        "bytes": 45645,
        "type": "upload",
        "etag": "5486815d6179cd7779653b9dbe10e2df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675807937/avalanche2023spring/yg5it2agtpo3cyuv1dds.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675807937/avalanche2023spring/yg5it2agtpo3cyuv1dds.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6b35f1d103f5130df3107068fc575b65",
        "public_id": "avalanche2023spring/mfr4jlcesuxhb7r3p94t",
        "version": 1675808076,
        "version_id": "ebb66d54903ecf2190fcdd70b113c7fc",
        "signature": "328bac8acce40919b6e16646445f100a6e084a53",
        "width": 510,
        "height": 501,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-07T22:14:36Z",
        "tags": [],
        "bytes": 37233,
        "type": "upload",
        "etag": "d3d97de89630e8e6ef0c67828824b69b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675808076/avalanche2023spring/mfr4jlcesuxhb7r3p94t.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675808076/avalanche2023spring/mfr4jlcesuxhb7r3p94t.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T04:58:28.261Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T20:10:47.433Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:36.247Z" }
      }
    ],
    "title": "",
    "description": "Recreation of Piet Mondrian's Composition with Yellow, Blue and Red 1937–42. I still need to change elements to make the rectangles line up better, space the lines out and change the sketch cosmetically. This took me around two hours to make using the random () function.",
    "inspiration_name": "Piet Mondrian's Composition with Yellow, Blue and Red",
    "inspiration_url": "https://www.tate.org.uk/art/artworks/mondrian-composition-with-yellow-blue-and-red-t00648",
    "comments": []
  },
  {
    "_id": "36PTf5bKSJvf72GvA",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T01:13:50.445Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "140fbb073a50809aef144652fa43162c",
        "public_id": "avalanche2023spring/b17tbeke2qckotunz14x",
        "version": 1675905242,
        "version_id": "918d538926d48a781ddd67beb576b7a2",
        "signature": "b867ae7545be4d97ebbc295610ffb4bae42518ae",
        "width": 1190,
        "height": 1188,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-09T01:14:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 13711256,
        "type": "upload",
        "etag": "cb5719dd539470c33eb0fdd8f454901b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675905242/avalanche2023spring/b17tbeke2qckotunz14x.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675905242/avalanche2023spring/b17tbeke2qckotunz14x.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "8178699",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 8347796,
        "duration": 13.14,
        "rotation": 0,
        "nb_frames": 797,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EZGFdZAsGvyhaQ3Gi",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-09T01:16:03.11Z" }
      }
    ],
    "title": "",
    "description": "WEEK 2 SKETCH (1/4) : PAIRED CHALLENGE \nWe had an unnecessary amount of funny moments doing this assignment. Here is the sauce",
    "comments": [],
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar deck = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar deckPos = 0;\nvar d;\n\nfunction setup() {\n  createCanvas(800, 800);\n  deck = shuffle(deck);\n  frameRate(.5);\n}\n\nfunction draw() {\n  for(let i = 0; i < 10; i++) {\n    var d = deck[deckPos];\n    drawScenes(d);\n\n    deckPos++;\n    if (deckPos > deck.length - 1) {\n      deck = shuffle(deck);\n      deckPos = 0;\n    }\n\n    return d;\n  }\n}\n\nfunction drawScenes(dVar) {\n  switch(dVar){\n    case 0:\n      scene0();\n      break;\n    case 1:\n      scene1();\n      break;\n    case 2:\n      scene2();\n      break;\n    case 3:\n      scene3();\n      break;\n    case 4:\n      scene4();\n      break;\n    case 5:\n      scene5();\n      break;\n    case 6:\n      scene6();\n      break;\n    case 7:\n      scene7();\n      break;\n    case 8:\n      scene8();\n      break;\n    case 9:\n      scene9();\n      break;\n  }\n}\n\nfunction scene0() {\n  background(\"red\");\n  fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 20;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10)\n      ellipse(x+space/2,y+space/2,10)\n    }\n  }\n}\n\n\nfunction scene1() {\n  background(\"orange\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 25;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene2() {\n  background(\"yellow\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 30;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene3() {\n  background(\"green\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 35;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene4() {\n  background(\"blue\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 40;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene5() {\n  background(\"purple\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 45;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene6() {\n  background(\"black\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 50;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene7() {\n  background('grey');\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 55;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene8() {\n  background(\"lightgreen\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 60;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene9() {\n  background(\"pink\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 65;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}"
  },
  {
    "_id": "3EKhc79unMtdPn498",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T02:44:54.644Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1c1a45a14e04927b8838bb5064754484",
        "public_id": "avalanche2023spring/nko8iqm62j3sp1e86egg",
        "version": 1677120304,
        "version_id": "65290679b8b7b1c7817095b5b8404a55",
        "signature": "98b79c2dc06c87498f8de05aaa7718617072f78c",
        "width": 5184,
        "height": 3456,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-23T02:45:04Z",
        "tags": [],
        "bytes": 1149941,
        "type": "upload",
        "etag": "4406b22cf512a6079891ef02e9abc50a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677120304/avalanche2023spring/nko8iqm62j3sp1e86egg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677120304/avalanche2023spring/nko8iqm62j3sp1e86egg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "523c93da070c47387f6fd92a7a857fc3",
        "public_id": "avalanche2023spring/hb2tcqhb25gzgrutpptb",
        "version": 1677120312,
        "version_id": "7b64ac180ce50ba53a6ccbab3b1c7e87",
        "signature": "6572281d661cfbb423cab368e5d8b93a9468b9bf",
        "width": 861,
        "height": 572,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T02:45:12Z",
        "tags": [],
        "bytes": 294131,
        "type": "upload",
        "etag": "4e1d0142c8d58cc6efbd8c91d15cf4ff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677120312/avalanche2023spring/hb2tcqhb25gzgrutpptb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677120312/avalanche2023spring/hb2tcqhb25gzgrutpptb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f6ce2bc4acdd85f3aca1a5440702720e",
        "public_id": "avalanche2023spring/wp0k9i5mn0wjwjebtx41",
        "version": 1677120315,
        "version_id": "e78b076a648c7b5e37f9483a4361e949",
        "signature": "b6f1be966041335d7e504ee0f67dd91ab69769dc",
        "width": 861,
        "height": 576,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T02:45:15Z",
        "tags": [],
        "bytes": 503942,
        "type": "upload",
        "etag": "8d22abd0e54e05f0f716af0c4796af8f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677120315/avalanche2023spring/wp0k9i5mn0wjwjebtx41.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677120315/avalanche2023spring/wp0k9i5mn0wjwjebtx41.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T04:12:44.821Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T17:18:20.808Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:21.451Z" }
      }
    ],
    "title": "",
    "description": "Changing some fun filters with slider.",
    "code": "/change pixel to fluroscent on mouse move\n//image\n//change canvas size to image size\n//get pixel information\n//change the ones we cant to change\n//let slider;\n\nlet slider;\nlet filterModes;\n\nfunction preload() {\n  img = loadImage(\"dog.jpg\");\n}\n\nfunction setup() {\n  img.resize(windowWidth, 0);\n  createCanvas(img.width, img.height);\n \n\n   filterModes = [\n    GRAY,\n    OPAQUE,\n    INVERT,\n    POSTERIZE,\n    BLUR,\n    ERODE,\n    DILATE,\n    BLUR,\n    THRESHOLD,\n  ];\nslider =  sliderMaker(filterModes.length-1);\n\n}\n\nfunction draw() {\n  image(img, 0, 0);\n\n\n  let val = slider.value();\n  \n  filter(filterModes[val]);\n}\n\nfunction sliderMaker(maxValue) {\n  //createSlider(min, max, [value], [step])\n  slider = createSlider(0, maxValue, 1, 1);\n  slider.position(10, 40);\n  return slider;\n}\n\n// function changeFilter() {\n//   if (index < filterModes.length - 1) index++;\n//   else index = 0;\n//   currFilterMode = filterModes[index];\n\n//   console.log(\"Current filter: \" + currFilterMode, \"Sahiti\");\n// }",
    "comments": []
  },
  {
    "_id": "3HYkBxCo4iJXpH6yB",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-01T03:23:10.185Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "711b98ca71087c5b8f155affb13f64da",
        "public_id": "avalanche2023spring/vqzj2nvoqxjqnds4oew4",
        "version": 1677641024,
        "version_id": "4050e27e28310cb43f31fb92294cc464",
        "signature": "662a52c1adf6404ed3b100f5550a563c0612ad97",
        "width": 1028,
        "height": 1130,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-01T03:23:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 14715508,
        "type": "upload",
        "etag": "9eb8645cc6f7b01362b1a4cd0732f686",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677641024/avalanche2023spring/vqzj2nvoqxjqnds4oew4.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677641024/avalanche2023spring/vqzj2nvoqxjqnds4oew4.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677641024/avalanche2023spring/vqzj2nvoqxjqnds4oew4.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3154412",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3234177,
        "duration": 36.4,
        "rotation": 0,
        "nb_frames": 2187,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Attempt at Challenge 2...",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet frequency_slider;\nlet amplitude_slider;\nlet time_speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 100);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n  createP(\"Time Speed\");\n  time_speed_slider = createSlider(0, 100, 100);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let frequency = frequency_slider.value();\n  let amplitude = amplitude_slider.value() / 10;\n  let time_speed = time_speed_slider.value() / 1000\n\n  noiseDetail(1, 0.5);\n  // noiseDetail(1, 1);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = (random() - 0.5) * amplitude * 10;\n    // let offsetY = (random() - 0.5) * amplitude * 10;\n\n    let offsetX = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n    let offsetY = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "comments": []
  },
  {
    "_id": "3JBQ754Gp4d6DhNp4",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T17:05:43.592Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4ed2cb8e1828615254d0ac47d4cedfba",
        "public_id": "avalanche2023spring/hqpiomang3ylf32ddevl",
        "version": 1683911147,
        "version_id": "5f8db23645e44f2126e6a459299fffa8",
        "signature": "3ea172c97d73f784722dfff9747dee04de4feb4e",
        "width": 258,
        "height": 224,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T17:05:47Z",
        "tags": [],
        "bytes": 34914,
        "type": "upload",
        "etag": "c432de42af272781f889222920339556",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683911147/avalanche2023spring/hqpiomang3ylf32ddevl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683911147/avalanche2023spring/hqpiomang3ylf32ddevl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "SPIROGRAPH",
    "comments": []
  },
  {
    "_id": "3LeLS4jsJt4c2Du85",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:51:08.289Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "47e2d3a18e87731407ebb6bf27d2fb65",
        "public_id": "avalanche2023spring/vlkucwviblozetvt8frs",
        "version": 1683301884,
        "version_id": "e5828f5f3454738adb302e0396663776",
        "signature": "fb12d26dbf66d13f6193655c20809e1c65954ad4",
        "width": 692,
        "height": 686,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:51:24Z",
        "tags": [],
        "bytes": 231165,
        "type": "upload",
        "etag": "48a3a35c46c9ee043456057dbe10645b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683301884/avalanche2023spring/vlkucwviblozetvt8frs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683301884/avalanche2023spring/vlkucwviblozetvt8frs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b71543a975050971e7fe756c93cc621c",
        "public_id": "avalanche2023spring/mxjin8tlnci2bgp71bsz",
        "version": 1683301887,
        "version_id": "db7642045e462a64c66c7909df4a5ac4",
        "signature": "0c8cdcbafb329a16443790c8ef96e45c81df84b3",
        "width": 692,
        "height": 686,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:51:27Z",
        "tags": [],
        "bytes": 231165,
        "type": "upload",
        "etag": "48a3a35c46c9ee043456057dbe10645b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683301887/avalanche2023spring/mxjin8tlnci2bgp71bsz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683301887/avalanche2023spring/mxjin8tlnci2bgp71bsz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4344d79719a7f812bd9f8e124c44f42b",
        "public_id": "avalanche2023spring/zcyphgz52dlttqdjq7jt",
        "version": 1683301894,
        "version_id": "d9bfb6b61d33c3fa473a68661218c863",
        "signature": "fdb00f058d9e4a5f7bab39ebc0508e76ea081319",
        "width": 1404,
        "height": 884,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T15:51:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 17883004,
        "type": "upload",
        "etag": "e15d716cfeb05f9f42944d246d496f27",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683301894/avalanche2023spring/zcyphgz52dlttqdjq7jt.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683301894/avalanche2023spring/zcyphgz52dlttqdjq7jt.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683301894/avalanche2023spring/zcyphgz52dlttqdjq7jt.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125763",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6373297",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7165143,
        "duration": 19.966667,
        "rotation": 0,
        "nb_frames": 1259,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:01:14.72Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:52.389Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T22:58:00.764Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:18:23.999Z" }
      }
    ],
    "title": "",
    "description": "MY CHESS CASTLE: COLORED EDITION",
    "comments": []
  },
  {
    "_id": "3RfQa25G5hLHSEE8x",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-11T17:16:58.093Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0a946193405146d0742fc660a08226dc",
        "public_id": "avalanche2023spring/humuwo0kzj2tsvrbxu6z",
        "version": 1681233429,
        "version_id": "a192f5e9d17cbce4dbe15c092622d998",
        "signature": "b538ca2490b18c44ee795445270e8cb1e9ecd0a4",
        "width": 963,
        "height": 616,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-11T17:17:09Z",
        "tags": [],
        "bytes": 53260,
        "type": "upload",
        "etag": "5130fe2d5c67be701e93d2c8947a12d8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681233429/avalanche2023spring/humuwo0kzj2tsvrbxu6z.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681233429/avalanche2023spring/humuwo0kzj2tsvrbxu6z.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-11T20:01:54.878Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T03:23:05.339Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T19:05:30.409Z" }
      }
    ],
    "title": "",
    "description": "Using textToPoints()  to display the word \"microbe\"",
    "comments": []
  },
  {
    "_id": "3YZcGAG5BfQDEZi9Z",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T05:53:44.005Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "be7909c7f763c839dda89ed6adbc5ea4",
        "public_id": "avalanche2023spring/ytixuj52qurxop3b6ofz",
        "version": 1680846976,
        "version_id": "b081ab54d9cb9910f2d6976f2db3adbd",
        "signature": "d46cefb6c28d297875b2bcadecbacf674eec490c",
        "width": 2880,
        "height": 1800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T05:56:16Z",
        "tags": [],
        "pages": 0,
        "bytes": 5712074,
        "type": "upload",
        "etag": "aebc1871a45da3bde834b7d006077db7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680846976/avalanche2023spring/ytixuj52qurxop3b6ofz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680846976/avalanche2023spring/ytixuj52qurxop3b6ofz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680846976/avalanche2023spring/ytixuj52qurxop3b6ofz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126309",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "1618315",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2138686,
        "duration": 21.366667,
        "rotation": 0,
        "nb_frames": 1341,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T07:33:09.672Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T14:28:45.303Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-11T03:23:15.15Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:31:33.889Z" }
      }
    ],
    "title": "",
    "description": "**Pacman with Doors:** Followed [this Noobtuts tutorial](https://noobtuts.com/unity/2d-pacman-game) to make Pacman with and without doors in Unity. This was done in collaboration with another classmate (Marina Pace)",
    "comments": []
  },
  {
    "_id": "3c4vaCu9X535tMqSW",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T00:35:35.57Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "698a395158d1de102e00fae681e969ac",
        "public_id": "avalanche2023spring/afiyc88lg9e4g7xtsyan",
        "version": 1677199083,
        "version_id": "0e3c20cc08f672ba2dd61bb2b1cb4d4c",
        "signature": "482bd6b6529ee34ec75ada91722727c0adaf19c5",
        "width": 1480,
        "height": 820,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T00:38:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 15045365,
        "type": "upload",
        "etag": "e85b614c3580691b0d97b7a4d260eeeb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677199083/avalanche2023spring/afiyc88lg9e4g7xtsyan.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677199083/avalanche2023spring/afiyc88lg9e4g7xtsyan.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677199083/avalanche2023spring/afiyc88lg9e4g7xtsyan.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125774",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "10191328",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11218291,
        "duration": 10.729167,
        "rotation": 0,
        "nb_frames": 673,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T01:04:14.452Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T03:52:03.446Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:45.582Z" }
      }
    ],
    "title": "",
    "description": "**Play of Ball's instantiated position, bounciness as params on Unity** Continuing my struggle with learning Unity - finding it too difficult to even start considering aesthetics in the sketch.",
    "comments": []
  },
  {
    "_id": "3j8XkDag3aPseoZD6",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T23:02:31.046Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "251d2728fc7e19a97bfac3825f0127fc",
        "public_id": "avalanche2023spring/hrrarxttkv6mkhcp9aus",
        "version": 1675292561,
        "version_id": "7b5f5a33cabbc477d0ad34f81638e035",
        "signature": "770ab5b6f412aaa1c7b949da7bf27c42ac2aeca5",
        "width": 702,
        "height": 504,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T23:02:41Z",
        "tags": [],
        "bytes": 677532,
        "type": "upload",
        "etag": "acbb311fd41c5b0455f174b305cd77c0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675292561/avalanche2023spring/hrrarxttkv6mkhcp9aus.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675292561/avalanche2023spring/hrrarxttkv6mkhcp9aus.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T02:02:03.429Z" }
      }
    ],
    "title": "",
    "description": "Decoded John's instruction set!",
    "inspiration_name": "diehex",
    "comments": []
  },
  {
    "_id": "3jZdKQqoSpSmuq4G2",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T07:55:49.594Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c2fda7690556e4b2ac1922c64e2347f3",
        "public_id": "avalanche2023spring/sqglap8fmnxfiflxaivl",
        "version": 1677830156,
        "version_id": "f884c4408065db8d9adbd0d093b8179f",
        "signature": "655596fe4776673653303f420ce76fea04d0ed7a",
        "width": 936,
        "height": 978,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T07:55:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 6119160,
        "type": "upload",
        "etag": "48434be822a37d65a8f3fb0e2d95b29d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677830156/avalanche2023spring/sqglap8fmnxfiflxaivl.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677830156/avalanche2023spring/sqglap8fmnxfiflxaivl.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677830156/avalanche2023spring/sqglap8fmnxfiflxaivl.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "2341073",
          "dar": "156:163",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2351638,
        "duration": 20.816667,
        "rotation": 0,
        "nb_frames": 1250,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My attempt at challenge 2! This is where I got within the time limit. I'm still trying to figure out the time speed slider.",
    "comments": []
  },
  {
    "_id": "3kN4Hhjmad6yzv8hM",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-08T07:19:12.298Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "23f7f584fc7e36c05fcd7dfaccb192af",
        "public_id": "avalanche2023spring/ozkxmdbo9uxshgdayth2",
        "version": 1678259973,
        "version_id": "5ed9a66b5260434925bf1786d5baeb56",
        "signature": "5d1289ffe3e795d70220258c9d6d9523f2d53b80",
        "width": 1018,
        "height": 1086,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-08T07:19:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 20616178,
        "type": "upload",
        "etag": "ffb62196b84e4fd6e45ea33cc6d363dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678259973/avalanche2023spring/ozkxmdbo9uxshgdayth2.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678259973/avalanche2023spring/ozkxmdbo9uxshgdayth2.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678259973/avalanche2023spring/ozkxmdbo9uxshgdayth2.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "12035806",
          "dar": "509:543",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 12097513,
        "duration": 13.633333,
        "rotation": 0,
        "nb_frames": 819,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Building upon challenge 2",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet amplitude_slider;\nlet frequency_slider;\nlet speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 10, 5, 0.1);\n\n  createP(\"Speed\");\n  speed_slider = createSlider(0, 10, 5, 0.1);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = frequency_slider.value();\n  let timespeed = speed_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  // create a color array with random colors\n  let colors = [\n    color(255, 0, 0),\n    color(0, 255, 0),\n    color(0, 0, 255),\n    color(255, 255, 0),\n    color(0, 255, 255),\n    color(255, 0, 255)\n  ];\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    let offsetX = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n    let offsetY = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n\n    // randomly choose a color from the array\n    let col = random(colors);\n\n    // set the fill color to the randomly chosen color\n    fill(col);\n\n    // draw the ellipse with a random size between 5 and 20\n    ellipse(x + offsetX, y + offsetY, random(5, 20), random(5, 20));\n\n    // draw a line from the previous ellipse to the current one\n    stroke(col);\n    strokeWeight(2);\n    if (i > 0) {\n      let px = lerp(startX, endX, i - 0.02);\n      let py = lerp(startY, endY, i - 0.02);\n      line(px + offsetX, py + offsetY, x + offsetX, y + offsetY);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "3kRSSBQNLMxXgnNrR",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "API",
    "created_at": { "$date": "2023-04-27T23:41:47.368Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "06d368d28722719c8e76733d69287d18",
        "public_id": "avalanche2023spring/zvcez7rlct9b9wx8evsj",
        "version": 1682638948,
        "version_id": "72bb92bc4f95b928c997c2b00a2cc833",
        "signature": "9d4b1695a3c94580a26d3a0c35a530e43c591df1",
        "width": 2548,
        "height": 1548,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-27T23:42:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 19433128,
        "type": "upload",
        "etag": "4540fa3aab7f20ba4c650ee04a1a26f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682638948/avalanche2023spring/zvcez7rlct9b9wx8evsj.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682638948/avalanche2023spring/zvcez7rlct9b9wx8evsj.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682638948/avalanche2023spring/zvcez7rlct9b9wx8evsj.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "115480",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "98047563",
          "dar": "637:387",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 99349274,
        "duration": 1.564833,
        "rotation": 0,
        "nb_frames": 95,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "da64c51e69b0884989f189f7d74877d4",
        "public_id": "avalanche2023spring/wtlgov0vfsdnmyewcqzj",
        "version": 1682638952,
        "version_id": "d7f6b4c9e433dd3bcf889ab086015f39",
        "signature": "02d7fe25ca317d3023cc9217b2c486fdea604282",
        "width": 2548,
        "height": 1548,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-27T23:42:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 18876090,
        "type": "upload",
        "etag": "6e4f7c184e4314e808c22cabf703fa4a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682638952/avalanche2023spring/wtlgov0vfsdnmyewcqzj.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682638952/avalanche2023spring/wtlgov0vfsdnmyewcqzj.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682638952/avalanche2023spring/wtlgov0vfsdnmyewcqzj.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "119513",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "78709106",
          "dar": "637:387",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 160334921,
        "duration": 0.941833,
        "rotation": 0,
        "nb_frames": 87,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Using sound levels to control outputs to experiment with p5 sound",
    "comments": []
  },
  {
    "_id": "3o4uYdWakaGFQJvYm",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T02:36:09.86Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3900c3aad872cdb7bc11f77ed25108a4",
        "public_id": "avalanche2023spring/t0dhl7z1dbcm0kxqko7f",
        "version": 1678415818,
        "version_id": "4b4a902e5c47536d76e47094be8196ef",
        "signature": "3bb2f0a4e9db20139c90b4dbd6520522d1133767",
        "width": 1376,
        "height": 1830,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T02:36:58Z",
        "tags": [],
        "bytes": 8262919,
        "type": "upload",
        "etag": "ac81f58f185d937ec948ea885a307ece",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678415818/avalanche2023spring/t0dhl7z1dbcm0kxqko7f.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678415818/avalanche2023spring/t0dhl7z1dbcm0kxqko7f.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T02:39:04.253Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:37.521Z" }
      }
    ],
    "title": "",
    "code": "let img;\nlet glitchImg;\n\nfunction preload() {\n  img = loadImage('1.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  image(img, 0, 0);\n  \n  // Get pixel values\n  loadPixels();\n  \n  // Apply glitch effect\n  glitchImg = createImage(img.width, img.height);\n  glitchImg.loadPixels();\n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n      let index = (x + y * img.width) * 4;\n      let glitchIndex = (x + y * glitchImg.width) * 4;\n      let r = pixels[index];\n      let g = pixels[index + 1];\n      let b = pixels[index + 2];\n      \n      // Add random offset to pixel\n      glitchImg.pixels[glitchIndex] = pixels[index + int(random(-10, 10))];\n      glitchImg.pixels[glitchIndex + 1] = pixels[index + 1 + int(random(-10, 10))];\n      glitchImg.pixels[glitchIndex + 2] = pixels[index + 2 + int(random(-10, 10))];\n      glitchImg.pixels[glitchIndex + 3] = pixels[index + 3];\n    }\n  }\n  \n  // Update glitch image pixels\n  glitchImg.updatePixels();\n  image(glitchImg, 0, 0);\n}",
    "comments": [],
    "description": "Tried to create a glitch distortion on a collage I had made"
  },
  {
    "_id": "3rnEQ8q6WyhdHRX4f",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T18:57:26.432Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a185755709bd48fe3d8da39deca9ebfd",
        "public_id": "avalanche2023spring/azvhu5fkpepqrt4vvm3y",
        "version": 1678388706,
        "version_id": "27421e180ba02b61cac05e9c663aa25a",
        "signature": "34bc38f96fd49a4866e775265e3c35d3f1ff49b9",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:05:06Z",
        "tags": [],
        "bytes": 159396,
        "type": "upload",
        "etag": "fc30adfb23ca987ffb78e524529c9a5f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678388706/avalanche2023spring/azvhu5fkpepqrt4vvm3y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678388706/avalanche2023spring/azvhu5fkpepqrt4vvm3y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a7bc2da20885e736129b9a884023fc89",
        "public_id": "avalanche2023spring/m7bp7jzqg3jxwzovma25",
        "version": 1678388727,
        "version_id": "36bb73dce713dcd2a6cd35f0cbeabde2",
        "signature": "978189b7377dcf73065f9d43b95be087b37fe9fb",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:05:27Z",
        "tags": [],
        "bytes": 2462994,
        "type": "upload",
        "etag": "23d947334a81c51697202295c0f52bfc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678388727/avalanche2023spring/m7bp7jzqg3jxwzovma25.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678388727/avalanche2023spring/m7bp7jzqg3jxwzovma25.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "317e684b3806395d3308d4ae06428b7b",
        "public_id": "avalanche2023spring/euxsinneiohqyqlcccto",
        "version": 1678441861,
        "version_id": "b5943e24293cbc6039527d4336d263de",
        "signature": "ad69aeafdd10c79394d2228b717f1a2cda6c44f5",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T09:51:01Z",
        "tags": [],
        "bytes": 152135,
        "type": "upload",
        "etag": "63d84ee04a40a1d33a0178e8749f6493",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678441861/avalanche2023spring/euxsinneiohqyqlcccto.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678441861/avalanche2023spring/euxsinneiohqyqlcccto.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T21:15:47.653Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:03.093Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "funny",
        "created_at": { "$date": "2023-03-16T11:28:08.873Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-16T11:28:08.959Z" }
      }
    ],
    "title": "",
    "code": "function setup() {\n  createCanvas(600, 600);\n}\n\nfunction draw() {\n  background(0);\n\n  img = createImage(100, 100);\n  img.loadPixels();\n  let c;\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      if (x%2==0) \n        c = color(noise(x)*255, 0, noise(x, y)*255);\n      else if (y%2==0)\n        c = color(noise(x, y)*225, 30, noise(y)*200);\n      else \n        c = color(noise(x)*100, 60, noise(y)*255);\n      img.set(x, y, c);\n    }\n  }\n\n  img.updatePixels();\n\n  //noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "comments": [],
    "description": "**Generating Pixel Images**"
  },
  {
    "_id": "3tEBBvWKq8A6KNmsa",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T18:40:55.71Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4a2d48082c7a63ee7cd846850405840f",
        "public_id": "avalanche2023spring/cf37g7uu8wwuxufrwobs",
        "version": 1676573096,
        "version_id": "f0761a9be3f8869472b404484f12f553",
        "signature": "9dd29cb6954f891d7633d7dbeb4c70d3b1a9f151",
        "width": 942,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T18:44:56Z",
        "tags": [],
        "bytes": 222704,
        "type": "upload",
        "etag": "2e3a89cdd5cc20c897c2d2283137c992",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676573096/avalanche2023spring/cf37g7uu8wwuxufrwobs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676573096/avalanche2023spring/cf37g7uu8wwuxufrwobs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T18:50:09.112Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:34.618Z" }
      }
    ],
    "title": "",
    "description": "I made an abstract mountain scene using noise and wave(). This piece was done for the map challenge by depicting abstract terrain.",
    "comments": []
  },
  {
    "_id": "3vtLfBCfzrQJTzDG4",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T17:30:30.418Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d5eb40d026aa1ea2c0e2dba09272c378",
        "public_id": "avalanche2023spring/yg7zvanisjm7ill7pvph",
        "version": 1678383052,
        "version_id": "c4f8798683cdeb2aabdc5e01ecf68b30",
        "signature": "3d8b5b45127bdc3a070723f19d9751198b52b1db",
        "width": 580,
        "height": 668,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T17:30:52Z",
        "tags": [],
        "bytes": 261114,
        "type": "upload",
        "etag": "e6c5dbadb6d44e6678a1a0f4886990fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678383052/avalanche2023spring/yg7zvanisjm7ill7pvph.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678383052/avalanche2023spring/yg7zvanisjm7ill7pvph.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f02f3ae193c80e5c51e83bd6c2b0b8d9",
        "public_id": "avalanche2023spring/az88ng8tsicrbmxybqax",
        "version": 1678383056,
        "version_id": "6adecb56bcc7ad22451ab6d4fe1a5f00",
        "signature": "6be2f7c1e55fd3b0889cce4ac025eb664d7fe659",
        "width": 596,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T17:30:56Z",
        "tags": [],
        "bytes": 501067,
        "type": "upload",
        "etag": "aed12555e7cdbb2ef3dd8f13c4d989df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678383056/avalanche2023spring/az88ng8tsicrbmxybqax.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678383056/avalanche2023spring/az88ng8tsicrbmxybqax.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:46.842Z" }
      }
    ],
    "title": "",
    "description": "WEEK 6 (4/4): I PIXELATED IMAGES. THIS IS SO FUN. LOOK AT MY CAT. This was surprisingly easier to understand how to do.",
    "comments": []
  },
  {
    "_id": "3weHc57zkE2ASmpc5",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T06:50:43.018Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "48122b1d2f027bb523da05f66d074652",
        "public_id": "avalanche2023spring/tximloi6b7g4tbqmlcms",
        "version": 1676443954,
        "version_id": "605ad83e704eff6d4287dcb78d6b6ca7",
        "signature": "72b39188f93367d6e62093d4d01ffa24c2ba073d",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-15T06:52:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 20965862,
        "type": "upload",
        "etag": "92a2ab20ab7e80675ef8847bb2ccf33b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676443954/avalanche2023spring/tximloi6b7g4tbqmlcms.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676443954/avalanche2023spring/tximloi6b7g4tbqmlcms.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676443954/avalanche2023spring/tximloi6b7g4tbqmlcms.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316844",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "16049789",
          "dar": "1:1",
          "time_base": "1/25000"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 16345527,
        "duration": 10.24,
        "rotation": 0,
        "nb_frames": 256,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T16:40:21.586Z" }
      }
    ],
    "title": "",
    "description": "Trying to understand noise. Variation in curves controlled by noise and millis.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet dim = 400;\n\nfunction setup() {\n  createCanvas(dim, dim);\n}\n\nfunction draw() {\n  // background(220);\n  \n  let col = color(81, 19, 117, 10);\n  background(col);\n  fill(col);\n  stroke(219, 203, 31);\n  strokeWeight(dim / 175);\n\n  let num = round(dim / 25);\n  let offset = 200 / num;\n  let delta = 10 * cos(TWO_PI * millis() / 2000);\n\n  for (let x = 0; x < num; x++) {\n    for (let y = 0; y < num; y++) {\n      let nx = noise(x) * 10;\n      let ny = noise(y) * 10;\n\n      bezier(\n        0,\n        ny + offset + (y * dim) / num,\n        y + ny * delta,\n        offset + (y * dim) / num - delta * ny,\n        y + ny * delta * 10,\n        offset + (y * dim) / num + delta * ny,\n        dim,\n        ny + offset + (y * dim) / num\n      );\n      bezier(\n        nx + offset + (x * dim) / num,\n        0,\n        offset + (x * dim) / num - delta * nx,\n        x + nx * delta,\n        offset + (x * dim) / num + delta * nx,\n        x + nx * delta * 10,\n        nx + offset + (x * dim) / num,\n        dim\n      );\n      \n    }\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "3whbHEsb6jNykmB3i",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T21:00:21.863Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a1d2369fca64d8e4872cfcf01825f634",
        "public_id": "avalanche2023spring/en29dmtfkiz6ifieuk16",
        "version": 1675371856,
        "version_id": "cb1eec442e481153bba53802d26523a8",
        "signature": "2ac7fa83034f797525d32632097eabbdfa063ca0",
        "width": 1650,
        "height": 1620,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-02T21:04:16Z",
        "tags": [],
        "bytes": 775411,
        "type": "upload",
        "etag": "7ee2bcc3155b7cae1335de23684ce4cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675371856/avalanche2023spring/en29dmtfkiz6ifieuk16.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675371856/avalanche2023spring/en29dmtfkiz6ifieuk16.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "89f81773e5607ad258ab28dfeda15975",
        "public_id": "avalanche2023spring/hy6k0tggcmrydpaa5ors",
        "version": 1675371867,
        "version_id": "d97519d1d4e505bab28f550b32deee88",
        "signature": "0e767919d39083ccfc05d091d95326de6c08888d",
        "width": 1650,
        "height": 1620,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-02T21:04:27Z",
        "tags": [],
        "bytes": 130573,
        "type": "upload",
        "etag": "3ca6b616674a5c6ffd87f3658f691576",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675371867/avalanche2023spring/hy6k0tggcmrydpaa5ors.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675371867/avalanche2023spring/hy6k0tggcmrydpaa5ors.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b5f294bf8444e0eb6d49dedb3a9535e5",
        "public_id": "avalanche2023spring/sb9shfnb1vhdpotyu7hq",
        "version": 1675371877,
        "version_id": "5e3f4bc60f9deb5c64c085a36790138b",
        "signature": "ac813d1145f753853aeb6ef9d9ecd7f9d8923386",
        "width": 1650,
        "height": 1620,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-02T21:04:37Z",
        "tags": [],
        "bytes": 204167,
        "type": "upload",
        "etag": "4627f85f477ce4da795d3b86ddcee8ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675371877/avalanche2023spring/sb9shfnb1vhdpotyu7hq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675371877/avalanche2023spring/sb9shfnb1vhdpotyu7hq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T21:58:40.704Z" }
      },
      {
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T23:53:37.235Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-02-03T02:19:08.054Z" }
      }
    ],
    "title": "",
    "description": "Warming up and playing around with the random sketch from the lesson",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "How did you achieve such a beautiful analogous color palette?",
        "created_at": { "$date": "2023-02-03T03:32:48.569Z" }
      },
      {
        "commenter_id": "DgrD5so94kzZH8ktA",
        "comment": "I had set by R and G values to be random and B was 255. (R, G, 255) colors",
        "created_at": { "$date": "2023-02-03T15:01:29.298Z" }
      }
    ]
  },
  {
    "_id": "3xkjTuEDZS3bgqPGd",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T02:23:41.182Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "30a262b732747f543bc02da823a029a8",
        "public_id": "avalanche2023spring/xfsbfr7spf4kycdynay2",
        "version": 1680834226,
        "version_id": "a9e6d132f96ca41cf8272d565c7b4bfc",
        "signature": "e0c438c86dd242e7f8e9ec8ac8fc4fd4befa1805",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-07T02:23:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 1804101,
        "type": "upload",
        "etag": "c50883d705dfecee8373aca62ee0e844",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680834226/avalanche2023spring/xfsbfr7spf4kycdynay2.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680834226/avalanche2023spring/xfsbfr7spf4kycdynay2.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680834226/avalanche2023spring/xfsbfr7spf4kycdynay2.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192037",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "302198",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 500947,
        "duration": 28.766667,
        "rotation": 0,
        "nb_frames": 863,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T02:37:53.951Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:47:21.426Z" }
      }
    ],
    "title": "",
    "description": "Microgame with Reshma!\nWe made a ping pong game with the end goal of pushing the ball into the hole using the paddles.",
    "comments": []
  },
  {
    "_id": "46LbNsiyH4jLi5Ja7",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T20:36:50.162Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "418b0211ee56b823030e8c4c41baad15",
        "public_id": "avalanche2023spring/bq37frhkieem1ltjwbsx",
        "version": 1679603862,
        "version_id": "ba59bf8ecde9bc9790bf5134e7f9cd08",
        "signature": "732884a0fe8ed4e7970e79cd1cb775a0399c846a",
        "width": 1288,
        "height": 1220,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:37:42Z",
        "tags": [],
        "bytes": 350786,
        "type": "upload",
        "etag": "6b2bc75a58b411aa8f880b9c630bad01",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603862/avalanche2023spring/bq37frhkieem1ltjwbsx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603862/avalanche2023spring/bq37frhkieem1ltjwbsx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8b157582b09c1381c0e3ed40bc53f715",
        "public_id": "avalanche2023spring/n7gofuch9reekf9i8c3u",
        "version": 1679603865,
        "version_id": "af61931e7b32a1af473b38e01a227ac6",
        "signature": "70416bb0016b8fc0479302d320977684772ba17a",
        "width": 1300,
        "height": 1224,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:37:45Z",
        "tags": [],
        "bytes": 817120,
        "type": "upload",
        "etag": "c1d434931e399fe9f86f4433a356a505",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603865/avalanche2023spring/n7gofuch9reekf9i8c3u.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603865/avalanche2023spring/n7gofuch9reekf9i8c3u.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9c6e449277ea26d36981296194cd5e77",
        "public_id": "avalanche2023spring/xx0zf43yarchfhcfj5kx",
        "version": 1679603868,
        "version_id": "22bfd825fbb90c212b883d350eb647ef",
        "signature": "eb14eeb621c2810d2e5f9aaf376af398ff2e3a5c",
        "width": 1292,
        "height": 1124,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:37:48Z",
        "tags": [],
        "bytes": 92484,
        "type": "upload",
        "etag": "4380ada975f34db4dfaf00504604636b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603868/avalanche2023spring/xx0zf43yarchfhcfj5kx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603868/avalanche2023spring/xx0zf43yarchfhcfj5kx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:39:59.585Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T21:21:23.2Z" }
      }
    ],
    "title": "",
    "description": "I think I was feeling inspired with Earth Hour coming up this weekend. Here are some patterns I created playing around with parameters in Paper.js!",
    "comments": []
  },
  {
    "_id": "47QEyRdHRF5JCuAXu",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T19:58:04.079Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f2e39bfd54a33904d3df3b8bc7e9cd8c",
        "public_id": "avalanche2023spring/hhhnzwc68xdjzq2sp4zp",
        "version": 1675367913,
        "version_id": "6bd6b8d93f8e23b55b7f9336af6b4764",
        "signature": "d1639dde1cbc9eaa692d12d363487125c0515435",
        "width": 2160,
        "height": 2297,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T19:58:33Z",
        "tags": [],
        "bytes": 435570,
        "type": "upload",
        "etag": "2e623e8718d7ef63217f2d43e5924987",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675367913/avalanche2023spring/hhhnzwc68xdjzq2sp4zp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675367913/avalanche2023spring/hhhnzwc68xdjzq2sp4zp.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T01:37:52.649Z" }
      }
    ],
    "title": "",
    "description": "WEEK 1 SKETCH (1/4) : SAHITI'S INSTRUCTIONS",
    "inspiration_name": "DONALD AND SEPHIROTH",
    "comments": []
  },
  {
    "_id": "47WBGAoPiQTqPMApF",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-29T20:37:50.855Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ccc053091bbda82124a6b1f6ce0dd174",
        "public_id": "avalanche2023spring/edi4nykodtpqpzcvpu5e",
        "version": 1680122322,
        "version_id": "a6ad1a3270132519ed0233ffebd1d6d9",
        "signature": "dec0daee66ac4da56f6a401ce1bd138c8e9e0a66",
        "width": 2162,
        "height": 1276,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-29T20:38:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 1356770,
        "type": "upload",
        "etag": "97e1bf57d96bd40cde640bd0b8c5b49e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680122322/avalanche2023spring/edi4nykodtpqpzcvpu5e.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680122322/avalanche2023spring/edi4nykodtpqpzcvpu5e.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680122322/avalanche2023spring/edi4nykodtpqpzcvpu5e.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "130075",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "1632869",
          "dar": "1081:638",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1774521,
        "duration": 6.116667,
        "rotation": 0,
        "nb_frames": 367,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "funny",
        "created_at": { "$date": "2023-03-29T21:42:45.722Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T21:42:47.034Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:19.641Z" }
      }
    ],
    "title": "",
    "description": "The intro to My Humps by The Blacked Eyed Peas... but make it techno. Extremely random but I think the intro was just begging to be replicated in tone.js? Still playing around with the timing of the notes",
    "inspiration_name": "Inspo",
    "inspiration_url": "https://www.youtube.com/watch?v=iEe_eraFWWs",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\n//changes the speed of the overall song - will scane 3n, etc in each\nTone.Transport.bpm.value = 250;\n\nconst melody = [\n  [\"E5\", \"1n\"],\n  [\"D#5\", \"6n\"],\n  [\"E5\", \"6n\"],\n  \n  [\"F#5\", \"6n\"],\n  \n  [\"E5\", \"6n\"],\n  [\"F#5\", \"6n\"],\n  [\"E5\", \"6n\"],\n  [\"F#5\", \"6n\"],\n  [\"E5\", \"6n\"],\n  [\"F#5\", \"6n\"],\n  \n  [\"E5\", \"5n\"],\n  [\"D#5\", \"5n\"],\n  [\"E5\", \"5n\"],\n  [\"D#5\", \"5n\"],\n  \n  [\"rest\", \"2n\"],\n  \n  [\"D#5\", \"2n\"],\n  [\"C5\", \"2n\"],\n  [\"Ab4\", \"1n\"],\n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n\t\t\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log(\"click for music!\");",
    "comments": []
  },
  {
    "_id": "49hfoTfoSx7ACabrz",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T02:38:02.116Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "eb14318892e0562dbd79449d02fb3699",
        "public_id": "avalanche2023spring/j1d1cni5i1e70o8iwmxs",
        "version": 1680835112,
        "version_id": "1bd2085ec577006d9d08aa5187537ece",
        "signature": "2d5761f9265cd35cb0046c76bf04551fe0b5407d",
        "width": 1196,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T02:38:32Z",
        "tags": [],
        "bytes": 876610,
        "type": "upload",
        "etag": "8cc0258d98556ee08cc122ad3b00b0b6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680835112/avalanche2023spring/j1d1cni5i1e70o8iwmxs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680835112/avalanche2023spring/j1d1cni5i1e70o8iwmxs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6bfed2aa166dbdee4746e495d31c2723",
        "public_id": "avalanche2023spring/qgcquiscdfsrkjspojzr",
        "version": 1680835132,
        "version_id": "d5a49790617df5e78a149a35a529e227",
        "signature": "bce437db723100484c4fafcd99bd2a2707cae2a6",
        "width": 1532,
        "height": 1464,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T02:38:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 11585019,
        "type": "upload",
        "etag": "08a3e642ec41c2de8179d383782345a3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680835132/avalanche2023spring/qgcquiscdfsrkjspojzr.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680835132/avalanche2023spring/qgcquiscdfsrkjspojzr.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680835132/avalanche2023spring/qgcquiscdfsrkjspojzr.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "7492342",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 7648980,
        "duration": 12.116667,
        "rotation": 0,
        "nb_frames": 731,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:47:39.326Z" }
      }
    ],
    "title": "",
    "description": "I was playing with sprites/sprite sheets and thinking about Rubik's cubes/those puzzle games where you slide tiles around to make an image. Ran out of time but it's almost there",
    "comments": []
  },
  {
    "_id": "4ACaWs8wmdXtDvCtk",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T00:19:43.923Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4a8d55d99b352215437f04c12c369ebf",
        "public_id": "avalanche2023spring/udjmrny5uzfqge1e6ehx",
        "version": 1683850795,
        "version_id": "697075a2341c232368030a1deae1e0a1",
        "signature": "cbef14484ff5b1a84af7eb970ae1603129854fc5",
        "width": 1350,
        "height": 848,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T00:19:55Z",
        "tags": [],
        "bytes": 867224,
        "type": "upload",
        "etag": "0de7fa5bcdb8e2c90ca5a9b523bff9a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683850795/avalanche2023spring/udjmrny5uzfqge1e6ehx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683850795/avalanche2023spring/udjmrny5uzfqge1e6ehx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:14:02.64Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge with Shristi",
    "comments": []
  },
  {
    "_id": "4DnREvN3HDwJb7Yi3",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-31T02:45:28.139Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b94c1288fca4ed4bb0060d92958438a4",
        "public_id": "avalanche2023spring/m5ynbk1rjkmffotvxkql",
        "version": 1675133134,
        "version_id": "899abd6e62fdd198b480ef1cea216e0e",
        "signature": "2105bf12a3e684a63b443192305595603445b640",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-31T02:45:34Z",
        "tags": [],
        "bytes": 511807,
        "type": "upload",
        "etag": "7a1d0fe81806ece6488569426a845d9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675133134/avalanche2023spring/m5ynbk1rjkmffotvxkql.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675133134/avalanche2023spring/m5ynbk1rjkmffotvxkql.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T17:57:59.953Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T22:40:24.278Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T06:51:04.544Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:23.407Z" }
      }
    ],
    "title": "",
    "inspiration_name": "Instructions from Alex",
    "comments": [],
    "description": "Response to Alex's Instructions"
  },
  {
    "_id": "4PBvwLrDBrESrDfJc",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T01:32:29.331Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d7f3ab85f220f77e1ddabede044c8d9b",
        "public_id": "avalanche2023spring/j9gjfqfdgq0s6mhfuhxh",
        "version": 1677720756,
        "version_id": "a052ce6ae23f36d7742a13fffad7d270",
        "signature": "c19fc339abc4525ffb83d404eab2607a48d04d8a",
        "width": 816,
        "height": 880,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-02T01:32:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 3914239,
        "type": "upload",
        "etag": "057f726738c63d7954e3cbc234e10e17",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677720756/avalanche2023spring/j9gjfqfdgq0s6mhfuhxh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677720756/avalanche2023spring/j9gjfqfdgq0s6mhfuhxh.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677720756/avalanche2023spring/j9gjfqfdgq0s6mhfuhxh.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317078",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "1389477",
          "dar": "51:55",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 1710768,
        "duration": 18.251567,
        "rotation": 0,
        "nb_frames": 547,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Line challenge. Movement isn't identical to the goal sketch, but parameters work parallely.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet amplitude_slider;\nlet frequency_slider;\nlet timespeed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 0);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 0);\n  createP(\"Time Speed\");\n  timespeed_slider = createSlider(0, 100, 0);\n\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = frequency_slider.value() / 100;\n  let timespeed = timespeed_slider.value();\n\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n    \n    //offset with amplitude\n    let aX = (noise(amplitude)-0.5)*100;\n    let aY = (noise(amplitude)-0.5)*100;\n    \n    //offset with frequency\n    let fX = noise(i*frequency*10)*amplitude*200\n    let fY = noise(i*frequency*10)*amplitude*200\n    \n    //combine amplitude and frequency offsets\n    let xPos = x+aX+fX;\n    let yPos = y+aY+fY;\n    \n    //animate with noise as a function of time, controlled by amplitude value\n    let tX_offset = timespeed * sin(i * noise(x*(millis()%(amplitude+1))));\n    let tY_offset = timespeed * sin(i * noise(y*(millis()%(amplitude+1))));\n    let tX = map(tX_offset,0,20,0,5)\n    let tY = map(tY_offset,0,20,0,5)\n    xPos += tX;\n    yPos += tY; \n    \n    //draw ellipse\n    fill(255);\n    noStroke();\n    ellipse(xPos , yPos , 10, 10);\n  }\n}",
    "comments": []
  },
  {
    "_id": "4Q9ScmXrrW6WqnFXu",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T12:04:22.442Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "4krAvb6gtzAyCojxx",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T13:06:34.72Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2c5a2c2c45ef7f1d45103b02bbadaeeb",
        "public_id": "avalanche2023spring/owi4hy2il6bttby8gfoi",
        "version": 1676034440,
        "version_id": "1af021caec2be7438a8100985752be77",
        "signature": "b6d27634f1361b07d43f05e985795f6f42903684",
        "width": 1192,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T13:07:20Z",
        "tags": [],
        "bytes": 91912,
        "type": "upload",
        "etag": "91093a95c49402f02a715b17eb5a1341",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676034440/avalanche2023spring/owi4hy2il6bttby8gfoi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676034440/avalanche2023spring/owi4hy2il6bttby8gfoi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T15:51:40.004Z" }
      }
    ],
    "title": "",
    "description": "Rainy day with Keren and Abha 🌧",
    "comments": []
  },
  {
    "_id": "4nPdkJ6EwE8SLuQDK",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-12T22:28:30.987Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a99120bb5dffcaaf22866049ada1bb85",
        "public_id": "avalanche2023spring/fq6cvsxklsj2u07e2zn9",
        "version": 1681338566,
        "version_id": "c9a3def64e5c201e21877802ea4d1b1a",
        "signature": "507c14d7127e337c1c072a89618555cc2b81bcc1",
        "width": 1196,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T22:29:26Z",
        "tags": [],
        "bytes": 194655,
        "type": "upload",
        "etag": "49fab6cb6e1f59b92427eeaf16410737",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681338566/avalanche2023spring/fq6cvsxklsj2u07e2zn9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681338566/avalanche2023spring/fq6cvsxklsj2u07e2zn9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c58cd499f4431d97c50a4dced25e7ff0",
        "public_id": "avalanche2023spring/pompuao58w8dwzcvcwgm",
        "version": 1681338571,
        "version_id": "11131a059c0b7e720628024cdfa24811",
        "signature": "40b3412edebce5ca4e92b8301ff85c0075ec53b3",
        "width": 1196,
        "height": 1198,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-12T22:29:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 424506,
        "type": "upload",
        "etag": "d10fed5a60e8da35b9ab143f2d4d0acd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681338571/avalanche2023spring/pompuao58w8dwzcvcwgm.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681338571/avalanche2023spring/pompuao58w8dwzcvcwgm.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681338571/avalanche2023spring/pompuao58w8dwzcvcwgm.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "201361",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 219397,
        "duration": 15.479,
        "rotation": 0,
        "nb_frames": 955,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T23:12:56.678Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T03:31:35.708Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T01:14:35.039Z" }
      }
    ],
    "title": "",
    "description": "Continuation from class, a haiku generator lol, I used a template and kept the number of syllables consistent with each line to get the 5-7-5 format",
    "comments": []
  },
  {
    "_id": "4qHqs6XgJYLCSLvhE",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T01:50:56.755Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c7d05fe6469c522e8e7bd353c2663f92",
        "public_id": "avalanche2023spring/uvvtnudbokqmvqvqo0zy",
        "version": 1678413323,
        "version_id": "d388bc2dc2ad45a0779421de9d45aa45",
        "signature": "e0f6c26304c9a05c7c48dcc0c39bf6d561ed48c4",
        "width": 600,
        "height": 599,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T01:55:23Z",
        "tags": [],
        "bytes": 217008,
        "type": "upload",
        "etag": "e65dda6790f490a4aba6c36f37f96cc2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678413323/avalanche2023spring/uvvtnudbokqmvqvqo0zy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678413323/avalanche2023spring/uvvtnudbokqmvqvqo0zy.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:22.863Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge with Sora. Took her material, first edited it with some interactivity, then for the second pass used getQuick() but messed around with img.set() to see if I could manipulate the processing.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet img;\n\nfunction preload(){\n  img = loadImage(\"Image/Material.jpg\"); \n}\n\nfunction setup(){\n  createCanvas(400, 400);\n  //pixelDensity(0.5);\n}\n\nfunction draw() {\n  background(51);\n\n  img.loadPixels();\n  \n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      //used for first pass of editing new script\n      \n      /* var index = (x + y * width) * 4;\n      pixels[index + 0] = mouseX * noise(x * width, 0);\n      pixels[index + 1] = random(255);\n      pixels[index + 2] = mouseY * noise(y * height, 1000);\n      pixels[index + 3] = 255; */\n      \n      c = getQuick(img, x, y);\n      img.set(x * -100, y, c);\n    }\n  }\n  \n  img.updatePixels();\n  \n  image(img, 0, 0, width, height);\n}\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}",
    "comments": []
  },
  {
    "_id": "4sCekSTpG8XwCpdoi",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-05T01:40:23.967Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "05383d38f546c4335aecd51eef61993e",
        "public_id": "avalanche2023spring/eg9r7udsok9b5pqaf8r0",
        "version": 1680658836,
        "version_id": "238f3c3c10b6b9ce5a9cc553132a4cbb",
        "signature": "5484408d3eb3b5054f5dbd76df461b58ac3a6569",
        "width": 1848,
        "height": 2755,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-05T01:40:36Z",
        "tags": [],
        "bytes": 1417604,
        "type": "upload",
        "etag": "c3e8ab0e062dc8b869a956d147798037",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680658836/avalanche2023spring/eg9r7udsok9b5pqaf8r0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680658836/avalanche2023spring/eg9r7udsok9b5pqaf8r0.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ca55b463a85f9a5afddd80f61803bbd1",
        "public_id": "avalanche2023spring/imqarcsfcw6af3pmp87s",
        "version": 1680658848,
        "version_id": "edca57069226892c3f0d2f4b4af587b2",
        "signature": "79e02833a8bf806166dbbe1cfc5ad2563e9626f6",
        "width": 1280,
        "height": 1920,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-05T01:40:48Z",
        "tags": [],
        "bytes": 322190,
        "type": "upload",
        "etag": "f4034d5e68452efff91f7d68748b76f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680658848/avalanche2023spring/imqarcsfcw6af3pmp87s.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680658848/avalanche2023spring/imqarcsfcw6af3pmp87s.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:00:53.091Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:45:39.755Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T16:20:24.529Z" }
      }
    ],
    "title": "",
    "description": "Since we're on the topic of microgames one of the facets of this project for my Major Studio is a card/board game where the cards are your board pieces. This is still in its microgame stage as I only have the base mechanics down for this project but hopefully through this semester this game will grow into a fully fleshed-out game.",
    "comments": []
  },
  {
    "_id": "4tNTjxvwguTZxieDA",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T13:46:32.393Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "db5c15d96336afa96032792bff7c260a",
        "public_id": "avalanche2023spring/iev1isuxiwafzmml19x4",
        "version": 1680270405,
        "version_id": "779d0649fca0d4324472a52b24240c86",
        "signature": "447b661dd0b64f2abed1f610457a8f7ea89098cb",
        "width": 1398,
        "height": 1396,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T13:46:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 466564,
        "type": "upload",
        "etag": "87c3e63d78102da374250801df4aeaf5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680270405/avalanche2023spring/iev1isuxiwafzmml19x4.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680270405/avalanche2023spring/iev1isuxiwafzmml19x4.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680270405/avalanche2023spring/iev1isuxiwafzmml19x4.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127623",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "340696",
          "dar": "699:698",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 645391,
        "duration": 5.783333,
        "rotation": 0,
        "nb_frames": 407,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Pair challenge with Sahiti - We played around with bass, metal synth and tweaked different parameters for this upbeat-ish \"music\" thing 😅",
    "comments": []
  },
  {
    "_id": "4tXRLDTn6jMy7Tt3k",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-29T21:20:58.756Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9ec66bdd71419eee992f0eff3fe68ee3",
        "public_id": "avalanche2023spring/sypccmwoknildhrpjq1g",
        "version": 1680125440,
        "version_id": "4a67c854ec9b4ddedb4daf7b9ffbc9a6",
        "signature": "28f920b73c9a2b966344d6569c2ae2eb14888ece",
        "width": 930,
        "height": 742,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-29T21:30:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 6274062,
        "type": "upload",
        "etag": "73e6144cd990d7d8caf9465cfa5eb665",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680125440/avalanche2023spring/sypccmwoknildhrpjq1g.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680125440/avalanche2023spring/sypccmwoknildhrpjq1g.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680125440/avalanche2023spring/sypccmwoknildhrpjq1g.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "265782",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "979286",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1239963,
        "duration": 40.478,
        "rotation": 0,
        "nb_frames": 1200,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T21:42:33.996Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T04:16:26.413Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:17.036Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:13:09.684Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "nerdy",
        "created_at": { "$date": "2023-03-31T13:07:56.217Z" }
      }
    ],
    "title": "",
    "description": "I just created some interesting beats with recording my day and adding a little reverb and noise as base in audacity.\n\nI wanted to have a super electronic track added with beats signifying I am dealing too much with technology while time is passing by.",
    "code": "let song;\nlet fft;\n\nfunction preload() {\n  song = loadSound(\"audiotrial.mp3\");\n}\nfunction setup() {\n  // URL copied from the Glitch assets folder\n\n  createCanvas(1000, 1000);\n  background(0, 0, 0);\n\n  fft = new p5.FFT();\n}\n\nfunction draw() {\n  stroke(255);\n\n  let wave = fft.waveform(); //generates 1024 elements in array\n\n  for (i = 0; i < width; i = i + 1) {\n    //need to map because of width\n    //needs to be an integer\n    let size1 = floor(map(i, 0, width, 0, 1024));\n\n    //create x and y co-ordinate\n\n    xcord = i;\n\n    //need to scale because value is between -1,1\n    ycord = wave[size1] * 300 + height / 2;\n    point(xcord,ycord);\n  }\n}\n\nfunction mousePressed() {\n  if (song.isPlaying()) {\n    // start or pause\n    song.pause();\n    //background(255,0,0);//just some indication of what is happening\n  } else {\n    song.play();\n    // background(0,255,0);//just some indication of what is happening\n  }\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "So cool!",
        "created_at": { "$date": "2023-03-30T19:37:06.803Z" }
      }
    ]
  },
  {
    "_id": "4uSAQxMzLnQ8zuSbr",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": { "$date": "2023-02-03T04:33:41.151Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d54c3a005c444ec820755cabf846c269",
        "public_id": "avalanche2023spring/sujgkyeaym84meqvyi1g",
        "version": 1675398833,
        "version_id": "3db5480bbf892c1489b9ca239b907a18",
        "signature": "4ad5029de76d57f560858ed26e057c3f9ba6ee66",
        "width": 984,
        "height": 980,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T04:33:53Z",
        "tags": [],
        "bytes": 52307,
        "type": "upload",
        "etag": "aa268bfb104cd140cc537d672775d95f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675398833/avalanche2023spring/sujgkyeaym84meqvyi1g.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675398833/avalanche2023spring/sujgkyeaym84meqvyi1g.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2e163288566bc74f6a4b85a878cddef4",
        "public_id": "avalanche2023spring/glendazxgk3bc6ftxwda",
        "version": 1675398894,
        "version_id": "67603752968164e188a58b5858c0493d",
        "signature": "1acb2a4373a6c3686eb7251e216988f928691616",
        "width": 984,
        "height": 980,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T04:34:54Z",
        "tags": [],
        "bytes": 51811,
        "type": "upload",
        "etag": "ab992f190108fcbfa173d7c0ddc6cb08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675398894/avalanche2023spring/glendazxgk3bc6ftxwda.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675398894/avalanche2023spring/glendazxgk3bc6ftxwda.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b463509d2ca35768ecc02d7fa4c61dff",
        "public_id": "avalanche2023spring/fevrzgxkqtrlux8zei6o",
        "version": 1675398899,
        "version_id": "036ac03e0f9ec2dede89e12fbc679e53",
        "signature": "253b49113365d8fcca680e37980461513757c97c",
        "width": 984,
        "height": 980,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T04:34:59Z",
        "tags": [],
        "bytes": 50559,
        "type": "upload",
        "etag": "9c62b6ba8f644160e72c5f744a2362b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675398899/avalanche2023spring/fevrzgxkqtrlux8zei6o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675398899/avalanche2023spring/fevrzgxkqtrlux8zei6o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:20:24.647Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T15:58:18.751Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Red crystal art",
    "inspiration_url": "https://editor.p5js.org/mrm029/sketches/rk8upjm9m",
    "comments": []
  },
  {
    "_id": "4utEkrykwCnnvGmFb",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T20:06:24.208Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4c95b9e6b157235ac3335a31f0c24851",
        "public_id": "avalanche2023spring/qeng8w2ykcokax5alcdg",
        "version": 1681416634,
        "version_id": "de7a96f9d4e2586da3f0ec5535e7e751",
        "signature": "2c9f66a4b24450fc7ccfe91dffc32846b46a62a4",
        "width": 896,
        "height": 390,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-13T20:10:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 595116,
        "type": "upload",
        "etag": "1f8c44048c9f644985df07300808b4eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681416634/avalanche2023spring/qeng8w2ykcokax5alcdg.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681416634/avalanche2023spring/qeng8w2ykcokax5alcdg.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681416634/avalanche2023spring/qeng8w2ykcokax5alcdg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "167603",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 168827,
        "duration": 28.2,
        "rotation": 0,
        "nb_frames": 847,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I was playing Colossal Cave Adventure and was transported to the times when text based input games were so fun!!!!!!!\n\nhttps://rickadams.org/adventure/advent/",
    "code": "let i;\nlet j;\nlet disa;\n\nfunction setup() {\n  i = createInput();\n  j = 0;\n  let disa = 0;\n  createP(\"You are My greates treasure, the friend of Sahiti\");\n  createP(\"You wake up  and yawn, when you notice there is something weird in the air. There is something not right, you feel it!. Should you call the police?\");\n}\n\nfunction draw() {\n  //call police\n  if (i.value() == \"yes\" && j == 0) {\n    createP(\"You know you shouldn't go into this on your own. You pick up your phone and dial 911.\");\n    createP(\"911, what's you emergency?\");\n    createP(\"I just found a ransom note on my table. Can you help?\");\n    createP(\"Of course. We'll be right there.\");\n    createP('After a minute or two, the police show up. They ask if they can see the note, and you hand it to them. They read it, then tell you to get into the car. Then they drive you there and open the door to a huge mansion. They go in, and after a few minutes, gunshots are heard. The guy in the car with you is about to call for backup, when he gets shot in the shoulder, and cries out in pain. Unsure of what to do, you ask yourself, should I KEEP GOING? Should I DRIVE BACK, or just GIVE THEM THE MONEY.');\n    j = 1;\n  }\n\n  \n    if (i.value() == \"no\" && j == 0) {\n    createP(\"You know you shouldn't go to the police right away but, you need help. You pick your phone and dial who then? family, friend?\");\n\n    j = 1;\n  }\n   //give them the money\n  if (i.value() == \"give them the money\" && j == 1) {\n    createP(\"You walk up to the masion with your hands up, and someone invites you in. You hand them the money, and they give you your son. You stroll right out the door and walk happily to your car, when you get pulled back by one of the guys. The man starts talking.\");\n    createP(\"I can't have you two talking about what happened tonight. Do you promise you won't tell anyone?\");\n    createP(\"Yes, we won't tell anyone.\");\n    createP(\"I'm afraid that won't be enough. I'm going to have to kill you both now. At least you'll die togethor.\");\n    createP(\"Your screams for help, ironically, don't help. Your last words are: AAAAAAAUGH! DON'T KILL ME! PLEASE! AAAAAHHHH!\");\n    j = 1000;\n    h = 0;\n  }\n\n }",
    "comments": []
  },
  {
    "_id": "4xjSWudTXMi2536hn",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T17:10:07.943Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dd3cf9e6f76a3bc9e9862b3b0129b3a2",
        "public_id": "avalanche2023spring/wg2mcib83keosbwwbkht",
        "version": 1675357819,
        "version_id": "2e1b64ded4130d3a192d097030c34d37",
        "signature": "ad5633c4098660283c13e5d269b09249927e59b0",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T17:10:19Z",
        "tags": [],
        "bytes": 1379637,
        "type": "upload",
        "etag": "82723a9b27c72bb0ff56c56c3a75a423",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675357819/avalanche2023spring/wg2mcib83keosbwwbkht.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675357819/avalanche2023spring/wg2mcib83keosbwwbkht.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T18:08:40.843Z" }
      }
    ],
    "title": "",
    "description": "Here's a sketch using my own instructions, an upside down drawing flipped again.",
    "comments": []
  },
  {
    "_id": "524JZhfQjXpMb9ejg",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T14:21:08.696Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6827624b5961df357513bb31cda7c994",
        "public_id": "avalanche2023spring/h9aionxpv8jnf6cvabdt",
        "version": 1683901407,
        "version_id": "17ff8d8dd0ce1bd8ade91967ee7ef9fd",
        "signature": "bd2f7d7adec2b7836be9e474b5f8d4bdf6684f2a",
        "width": 496,
        "height": 498,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-12T14:23:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 2589851,
        "type": "upload",
        "etag": "6a64c90080ebb8f7e408a0472f7464ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683901407/avalanche2023spring/h9aionxpv8jnf6cvabdt.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683901407/avalanche2023spring/h9aionxpv8jnf6cvabdt.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683901407/avalanche2023spring/h9aionxpv8jnf6cvabdt.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "6090670",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 6093767,
        "duration": 3.4,
        "rotation": 0,
        "nb_frames": 103,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Bringing motion with random in turtle.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  stroke(255);\n}\n\nfunction draw() {\n  background(50);\n  \n  // Body\n  \n//   myTurtle.penUp();\n//   myTurtle.moveTo(0, 0);\n//   myTurtle.penDown();\n//     myTurtle.moveTo(104, 125);\n    \n    \n  \n  for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n  \n    for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(100, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n  \n      for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(300, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n        for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n        for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n          for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 100);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n  \n            for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 300);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n              for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 300);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n  \n          for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 100);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n  \n            for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 400);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }",
    "comments": []
  },
  {
    "_id": "5Afbrqvxu7fCmnfSg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-20T20:52:48.075Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5a4454e1913f8307eb363345584268f9",
        "public_id": "avalanche2023spring/uhxwhyftyduuhxbwbo90",
        "version": 1679345581,
        "version_id": "e4f484cf0a69545159b64c2b29fcd471",
        "signature": "3d5fbd939058dbde8675bc798bc19eabcd9f7d29",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-20T20:53:01Z",
        "tags": [],
        "bytes": 18902,
        "type": "upload",
        "etag": "5fc542aebe842bed0d0f970b994bdfb8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679345581/avalanche2023spring/uhxwhyftyduuhxbwbo90.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679345581/avalanche2023spring/uhxwhyftyduuhxbwbo90.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9a203d466132cb57d2c46624cecf88d0",
        "public_id": "avalanche2023spring/ednzjypnjbb6uhhtxvhr",
        "version": 1679345586,
        "version_id": "815363477db413c245fb69afa6aed2d0",
        "signature": "386879e26a0c52e15070579eb038f846bee6023a",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-20T20:53:06Z",
        "tags": [],
        "bytes": 25631,
        "type": "upload",
        "etag": "36fdc0f4ba35dfd0ec3ce20d6a43da71",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679345586/avalanche2023spring/ednzjypnjbb6uhhtxvhr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679345586/avalanche2023spring/ednzjypnjbb6uhhtxvhr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "be6205681c3c7fc75a5efac9ae73e150",
        "public_id": "avalanche2023spring/sw8f2pfemux05g0437ba",
        "version": 1679345609,
        "version_id": "ceb48ad4f496409ce140795ffc484e3d",
        "signature": "d2bcb6a78adc44fbcc463ab5e2a1908280469471",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-20T20:53:29Z",
        "tags": [],
        "bytes": 46121,
        "type": "upload",
        "etag": "ec214913e2a24715bb80b7c147cb3862",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679345609/avalanche2023spring/sw8f2pfemux05g0437ba.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679345609/avalanche2023spring/sw8f2pfemux05g0437ba.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T07:08:31.024Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:10.526Z" }
      }
    ],
    "title": "",
    "description": "Part 1 of Individual Project. I was experimenting with recursive subdivision and I got this really weird result that was nowhere near what I wanted. But it looked cooler so I was happy with it. Curious to see how the cut is going to go tomorrow!",
    "code": "var initSideLength = 800;\nfunction recurseRect (h, k, recurse) {\n\n            var currentRectBounds = new Rectangle(\n                                        new Point(h  * (400 * recurse )  + 2.5, k  * 400 * recurse + 2.5 ), \n                                        new Point(initSideLength / (recurse * 4), initSideLength/ (recurse * 4) )\n                                        );\n            var currentRectangle = new Path.Rectangle(currentRectBounds);\n            currentRectangle.strokeColor= 'black';\n            currentRectangle.strokeWidth= 5\n            var subdivide = Math.random();\n            if (subdivide < 0.3 && recurse < 6) {\n                recurseRect(h / (recurse * 4), k / (recurse * 4), Math.round(recurse) + 1)\n                var circle1 = new Path.Circle([h * recurse + 80 * recurse, k * recurse + 80 * recurse ], 60 * recurse);\n                circle1.strokeColor= 'black';\n                circle1.strokeWidth= 5\n            }\n\n}\n\n    for (var x = 0; x < 5; x++) {\n        for (var y = 0; y < 5; y++) {\n            recurseRect(x,y , 1/4)\n        }\n    }",
    "comments": []
  },
  {
    "_id": "5KNZ5sH8dyfShhwG9",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-27T16:50:52.37Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0f0be257b06e6106c8bc992a16198fbb",
        "public_id": "avalanche2023spring/oxxjvkqskgxktlgwmrh7",
        "version": 1677516672,
        "version_id": "86498b08fd83e037953a592099e73b4c",
        "signature": "459a91935710dd23947c3a93d75f8f73b46aa109",
        "width": 1380,
        "height": 974,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-27T16:51:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 14097692,
        "type": "upload",
        "etag": "0914ad1820633a96a1be54ae0f3aca74",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677516672/avalanche2023spring/oxxjvkqskgxktlgwmrh7.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677516672/avalanche2023spring/oxxjvkqskgxktlgwmrh7.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677516672/avalanche2023spring/oxxjvkqskgxktlgwmrh7.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2280",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "3765166",
          "dar": "690:487",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 3776125,
        "duration": 29.866,
        "rotation": 0,
        "nb_frames": 895,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T00:57:25.365Z" }
      }
    ],
    "title": "",
    "description": "Challenge 1 extension. Added dynamics controlled by parameters.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst points = [];\n\nconst pane = new Tweakpane.Pane();\nconst params = {\n  speed: 1/1750,\n  max_size: 20,\n  min_size: 5,\n  noise_factor: 1.1,\n  transparency: 0.75,\n};\npane.addInput(params, \"speed\", { min: 1/7500, max: 1/500 });\npane.addInput(params, \"max_size\", { min: 15, max: 45 });\npane.addInput(params, \"min_size\", { min: 2, max: 14 });\npane.addInput(params, \"noise_factor\", { min: 0.5, max: 3 });\npane.addInput(params, \"transparency\", { min: 0.25, max: 1 });\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  ellipseMode(CENTER);\n  colorMode(HSB,360,100,100,100);\n  frameRate(40);\n\n  for (let y = 0; y < 30; y++) {\n    for (let x = 0; x < 30; x++) {\n      points.push({\n        x: (random(width)+random(width)+random(width))/3,\n        y: (random(width)+random(width)+random(width))/3,\n      });\n    }\n  }\n}\n\nfunction draw() {\n  background(60,0,20);\n\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];   \n    \n    let dMin = params.min_size;\n    let dMax = params.max_size;\n    let dSize = map(i,0,points.length,dMin,dMax);\n    \n    p.x += params.noise_factor*sin(i*noise(p.x));\n    p.y += params.noise_factor*sin(i*noise(p.y));\n    \n    let colH = map(dSize,dMin,dMax,0,320);\n    let alpha = (noise(i,100)*100 + (75 * cos(TWO_PI * millis() * params.speed)) + i)%100 * params.transparency;\n    \n    fill(colH,100,100,alpha);\n    ellipse(p.x, p.y, dSize);\n    \n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "5NdhZmF2xKsDPDEn9",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T03:27:29.377Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1efe2b09bdc46e8e2bfb62ccb971833d",
        "public_id": "avalanche2023spring/kzmim9gevlviftrc4lji",
        "version": 1682047664,
        "version_id": "61dd3d9b79ad9e0dbf67d3d7f608c668",
        "signature": "e6881bfdff63756b3153e274ccda5e08598568e8",
        "width": 1525,
        "height": 835,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T03:27:44Z",
        "tags": [],
        "bytes": 235292,
        "type": "upload",
        "etag": "ef88767dde34cdc3bf8b7962216963f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682047664/avalanche2023spring/kzmim9gevlviftrc4lji.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682047664/avalanche2023spring/kzmim9gevlviftrc4lji.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ae594a24389745accdc39e98122d6723",
        "public_id": "avalanche2023spring/pi3sflojtny0gvzxqiir",
        "version": 1682047665,
        "version_id": "2d0523169885778d8f9060d54203f732",
        "signature": "1aaaba014654d242c6ea599d6b8afd4cc84addb9",
        "width": 1519,
        "height": 1013,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T03:27:45Z",
        "tags": [],
        "bytes": 274911,
        "type": "upload",
        "etag": "7092904b7971bc8d76962966e4cc71a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682047665/avalanche2023spring/pi3sflojtny0gvzxqiir.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682047665/avalanche2023spring/pi3sflojtny0gvzxqiir.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T04:18:27.396Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:43:05.785Z" }
      }
    ],
    "title": "",
    "description": "Midjourney was not working for me this week. I tried to follow their instructions, but I think something's been going on that has been affecting their free trial use. I don't think I'll be able to get around to this so I talked a bit to ChatGPT about Mijdourney and what it thinks about image generation. Hopefully I can maybe squeeze something out of Midjourney but after trying for a few hours to generate something my chances seem slim.",
    "comments": []
  },
  {
    "_id": "5QxFrbxKmxpZSFutT",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T12:47:02.681Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "779821b006d1ebdf351bea3a41bfdb80",
        "public_id": "avalanche2023spring/qm2koc7h1frxblnviltt",
        "version": 1683895725,
        "version_id": "537122214138bb85ad557aab3c3b91c5",
        "signature": "7d918ebd9b1ba301302f09eb19e9e099f60fa028",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T12:48:45Z",
        "tags": [],
        "bytes": 535466,
        "type": "upload",
        "etag": "585751dafdbd36fca67d702f709d6226",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683895725/avalanche2023spring/qm2koc7h1frxblnviltt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683895725/avalanche2023spring/qm2koc7h1frxblnviltt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ead824281c228a7e4ac8a57ad99c9ad0",
        "public_id": "avalanche2023spring/tfpqnu1dnx88rlnttvnw",
        "version": 1683895774,
        "version_id": "19583d89a0b9627f7676728b385fc59e",
        "signature": "16926a38d64bcf5a87dba64c5c48a2039f73e410",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T12:49:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 16302420,
        "type": "upload",
        "etag": "c84d89a449286d8bce8d43ea8960ec24",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683895774/avalanche2023spring/tfpqnu1dnx88rlnttvnw.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683895774/avalanche2023spring/tfpqnu1dnx88rlnttvnw.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683895774/avalanche2023spring/tfpqnu1dnx88rlnttvnw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127322",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11322510",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12934151,
        "duration": 10.083333,
        "rotation": 0,
        "nb_frames": 666,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "646aef51b8b3b5c637a87b73192322ef",
        "public_id": "avalanche2023spring/aml5v8irxalfsc5fd49z",
        "version": 1683895844,
        "version_id": "4cc94172d893b68efe8185c4c6e5d517",
        "signature": "3161c9b9400b7504772ac4a861dbe161615127e9",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T12:50:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 19515454,
        "type": "upload",
        "etag": "d662e8ce5454acb0a4bfcc2656b05fbb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683895844/avalanche2023spring/aml5v8irxalfsc5fd49z.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683895844/avalanche2023spring/aml5v8irxalfsc5fd49z.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683895844/avalanche2023spring/aml5v8irxalfsc5fd49z.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125134",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11417957",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12849681,
        "duration": 12.15,
        "rotation": 0,
        "nb_frames": 790,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:14.566Z" }
      }
    ],
    "title": "",
    "description": "**Recursive Spirographs** using Turtles",
    "code": "let myTurtle;\n\n\nfunction setup() {\n  \n  createCanvas(500, 500);\n  myTurtle = new Turtle(0, 0);\n  //myTurtle = new Turtle(-120, 170);\n  \n  noFill();\n  stroke(255, 160, 180);\n  strokeWeight(8);\n\n  frameRate(90);\n  //noLoop();\n}\n\nfunction draw() {\n  \n  background(255);\n  translate(width/2, height/2);\n  // rotate(frameCount/90);\n  \n  \n  drawSpiro(450, -160, 200);\n  \n}\n\nfunction drawSpiro(length, x, y) {\n  \n  myTurtle.pushState();\n  rotate(frameCount/450);\n  \n  strokeWeight(length/60);\n  stroke(length/1.8, length/2, length/1.5);\n  \n  if (length < 2)\n    return;\n  myTurtle.penUp();\n  myTurtle.moveTo(x, y);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 36; i++) {\n    myTurtle.moveForward(length);\n    myTurtle.turnLeft(70);\n  }\n  \n  myTurtle.popState();\n  \n  let reduce = 0.72;\n  drawSpiro(length*reduce, x*reduce, y*reduce);\n  \n}",
    "comments": []
  },
  {
    "_id": "5TxbMnjKy8fmAoK2u",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Music",
    "created_at": { "$date": "2023-04-04T16:08:23.954Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "13fbfc5999560050dccbd6bc5a356a6b",
        "public_id": "avalanche2023spring/vyqekskixpufc48brvqb",
        "version": 1680624604,
        "version_id": "2cb323a7139efa7974c876a1afb3eea0",
        "signature": "20ed1766dc7f410cbf26a7caa921be8a454de5fb",
        "width": 650,
        "height": 300,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-04T16:10:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 995414,
        "type": "upload",
        "etag": "ad6e5e73a5057b0122f570320a6fb7d9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680624604/avalanche2023spring/vyqekskixpufc48brvqb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680624604/avalanche2023spring/vyqekskixpufc48brvqb.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680624604/avalanche2023spring/vyqekskixpufc48brvqb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317076",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "111633",
          "dar": "13:6",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 436585,
        "duration": 18.184833,
        "rotation": 0,
        "nb_frames": 545,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T21:08:27.862Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T02:19:11.446Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:38.486Z" }
      }
    ],
    "title": "",
    "description": "**Pair Sketch with Isha:** We added a poly-synth to Justin's moderator, choosing the third or 5th notes randomly to accompany the current note being played, and we coded the last note of the second measure to be the 5th note of the scale to hopefully improve musicality",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.49/Tone.js\n/* global Tone */\n\nconst synth = new Tone.PolySynth(Tone.Synth)\nsynth.set({\n    \"oscillator\": {\n    \"type\": \"sine\",\n  },\n    \"envelope\" : {\n        \"attack\": 0.1,\n    \"decay\": 0.1,\n    \"sustain\": 0.5,\n    \"release\": 1,\n    }\n});\nsynth.toDestination();\n\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n  const melody = generate();\n  play(melody);\n};\n\nconst cmajor = [\"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\"];\n// const cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst notesnew = [\n  \"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\", \n  \"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\"\n];\nconst notes = notesnew;\n\nlet degree = 0;\n\nfunction generate() {\n  degree = randomInt(0, 7);\n\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  b[b.length - 1][0] = notes[4];\n  c[c.length - 1][0] = notes[0];\n\n  return [].concat(a, b, a, c);\n}\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n\n    let change = sample([-1, -1, -1, 1, 1, -2, 2, 2, 2, -3]); \n    degree = constrain(degree + change, 0, notes.length - 1);\n    const note = notes[degree];\n\n    let length = Tone.Time(\"4n\");\n    // let r = Math.random();\n    if (Math.random() < 0.5) {\n        length = Tone.Time(\"2n\");\n    }\n    // if (r > 0.3333 && r < 0.6666) {\n    //   length = Tone.Time(\"2n\");\n    // } else if (r > 0.6666) {\n    //   length = Tone.Time(\"8n\");\n    // }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n    timeLeft = Tone.Time(timeLeft - length);\n  \n    m.push([note, length, degree]);\n    \n  }\n\n  return m;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n      if (note[2] < notes.length - 3 && Math.random() < 0.5) {\n          synth.triggerAttackRelease(notes[note[2] + 2], Tone.Time(note[1]) - 0.1, t);\n      }\n      if (note[2] < notes.length - 5 && Math.random() < 0.3) {\n          synth.triggerAttackRelease(notes[note[2] + 4], Tone.Time(note[1]) - 0.1, t);\n      }\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}",
    "comments": []
  },
  {
    "_id": "5gRHQQNPgaHDCdrcp",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "API",
    "created_at": { "$date": "2023-04-26T02:00:10.072Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b5d8a9f13db61c84fab2ed21a7008252",
        "public_id": "avalanche2023spring/vp7w6gefai16qm5piexj",
        "version": 1682474414,
        "version_id": "5148e948c8d08cdb9606d3c53f5a2e1b",
        "signature": "25f04555b53502a43713da4f0c2b324c574d9e04",
        "width": 900,
        "height": 901,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-26T02:00:14Z",
        "tags": [],
        "bytes": 44212,
        "type": "upload",
        "etag": "b2587fadce2d7b9dd07ab22e9172dd79",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682474414/avalanche2023spring/vp7w6gefai16qm5piexj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682474414/avalanche2023spring/vp7w6gefai16qm5piexj.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T02:28:24.015Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T03:10:27.621Z" }
      }
    ],
    "title": "",
    "description": "Revisited WebGL since it's been a while and I wanted to see if I could work in some topics we covered at the beginning of the semester. It took me a bit but I was able to bend the shapes to create a vortex pattern instead of letting the objects fly around as they please.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x;\nlet y;\nlet v;\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  //debugMode();\n}\n\nfunction draw() {\n  background(66, 54, 19);\n  \n  v = 55;\n  pointLight(v, v, v, 0, 500, 0);\n  emissiveMaterial(190, 232, 179);\n  \n  noStroke();\n  shapes();\n  \n  camera(0, -500, 500, 0, 1000, -100);\n  //orbitControl();\n}\n\nfunction shapes() {\n  for (y = 0; y < 100; y = y + 10) {\n    for (x = 0; x < 100; x = x + 10) {\n      for(i = 0; i < width; i = i + 10) {\n        n = noise(i) * frameCount + 20;\n        rotateX(n / 100000);\n        rotateY(n / 4500);\n      }\n      push();\n      translate(10 * x - 100, y + 40 / 18, 0);\n      box(50);\n      pop();\n      \n      translate(10, y + 40, 0);\n      torus(50);\n      \n      translate(10, y + 40, 0);\n      cone(50);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "5hu5nXXhoWwBXtn38",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T14:35:28.141Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dbdef91c3114de8e6d435176f9e3f5e3",
        "public_id": "avalanche2023spring/brxeudgrmkdqqz40xwo4",
        "version": 1680878234,
        "version_id": "d28704d097437bc979728d3714416c1b",
        "signature": "4725bbdb7f2aa33db0ea9a731328381723957d1b",
        "width": 988,
        "height": 976,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T14:37:14Z",
        "tags": [],
        "bytes": 24572,
        "type": "upload",
        "etag": "a043eddd11c3b3f87925b48bdfb78a42",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680878234/avalanche2023spring/brxeudgrmkdqqz40xwo4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680878234/avalanche2023spring/brxeudgrmkdqqz40xwo4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ab0f1558876a3db883a88d1ce0ea6343",
        "public_id": "avalanche2023spring/oacketwkjwuyv2yvyyg9",
        "version": 1680878255,
        "version_id": "6a4a18bbe283f469c5388c63f62714c7",
        "signature": "9702a87ca2e372077de8bcd6632a85da2948b996",
        "width": 976,
        "height": 962,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T14:37:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 425823,
        "type": "upload",
        "etag": "662d75e549112144f5eb061836fe3832",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680878255/avalanche2023spring/oacketwkjwuyv2yvyyg9.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680878255/avalanche2023spring/oacketwkjwuyv2yvyyg9.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680878255/avalanche2023spring/oacketwkjwuyv2yvyyg9.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126725",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "90418",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 722243,
        "duration": 4.716667,
        "rotation": 0,
        "nb_frames": 342,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 9 ( 3/4): This was after class when I went to finish the pong game but I needed help and looked online to do the velocity stuff and it looks like an EYEBALL YEAHHHH",
    "comments": []
  },
  {
    "_id": "5ieRySbnX8NtDzNTA",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T07:43:47.351Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8f48406df81116ad1fa5b2dbc912e9cf",
        "public_id": "avalanche2023spring/copduuckzff51cmztwbl",
        "version": 1675928659,
        "version_id": "6238a4e894296c5302902977dbb461e6",
        "signature": "0be938ebdd6aba2f20acd70b0a54f4d6acf56a6e",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T07:44:19Z",
        "tags": [],
        "bytes": 215681,
        "type": "upload",
        "etag": "da298972351de3051245016bb6ae40f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675928659/avalanche2023spring/copduuckzff51cmztwbl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675928659/avalanche2023spring/copduuckzff51cmztwbl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "13a4fb61a7a652e718f95b641a3ab302",
        "public_id": "avalanche2023spring/xn2zmdvtyp80163xcgvu",
        "version": 1675928664,
        "version_id": "9a1952124aa54181172f93c0340e7366",
        "signature": "9edfbe2264115db796ff43863c024fc8bae78e03",
        "width": 1200,
        "height": 1172,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T07:44:24Z",
        "tags": [],
        "bytes": 204454,
        "type": "upload",
        "etag": "13e7d8ef0563eaf4b4fa7dfc8b268644",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675928664/avalanche2023spring/xn2zmdvtyp80163xcgvu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675928664/avalanche2023spring/xn2zmdvtyp80163xcgvu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5d1c8d2ef19f06111c4747e8206e8eb8",
        "public_id": "avalanche2023spring/dn4qxorajvh8yz5zxvah",
        "version": 1675960225,
        "version_id": "16b6e6ad58055ba1d343e3b1ce042c09",
        "signature": "c3daf4651d7d645dd5e2520676825f7a3d6d0f91",
        "width": 1440,
        "height": 1440,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T16:30:25Z",
        "tags": [],
        "bytes": 504334,
        "type": "upload",
        "etag": "58151a5315fbb7cf72557ce11fb1add2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675960225/avalanche2023spring/dn4qxorajvh8yz5zxvah.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675960225/avalanche2023spring/dn4qxorajvh8yz5zxvah.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T14:43:03.8Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T17:16:52.88Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:44:44.537Z" }
      }
    ],
    "title": "",
    "description": "I finally stopped procrastinating working with Processing.\nFirst sketch ever!",
    "inspiration_name": "Random Walker tutorial",
    "inspiration_url": "https://www.youtube.com/watch?v=rqecAdEGW6I&list=PLRqwX-V7Uu6aFlwukCmDf0-1-uSR7mklK&index=2",
    "code": "//require https://cdnjs.cloudflare.comajax/libs/p5.js/0.5.14/p5.js\n\nfloat x;\nfloat y;\nWalker w;\nWalker a;\nWalker s;\nWalker d;\nWalker m;\nWalker l;\nWalker r;\n\nvoid setup(){\n  size(600,600);\n  colorMode(HSB,360,100,100,60);\nframeRate(300);\n  w = new Walker(0,height, 15);\n  a = new Walker(width,0, 15);\n  s = new Walker(0,0, 15);\n  d = new Walker(width,height, 15);\n  m = new Walker(width/2,height/2,15);\n  l = new Walker(0,height/2,15);\n  r = new Walker(width/2,0,15);\n  \n  background(color(300, 30,80,40));\n}\n\nvoid draw(){\n    w.display();\n  w.walk();\n \n a.display();\n a.walk();\n \n s.display();\n s.walk();\n \n d.display();\n d.walk();\n \n m.display();\n m.walk();\n \n l.display();\n l.walk();\n \n r.display();\n r.walk();\n}\n\n class Walker{\n//float r;\n//float g;\n//float b;\nfloat x;\nfloat y;\nfloat rsize;\n\n Walker(float tempX, float tempY, float tempS){ //constructor\n//r = tempR;\n//g = tempG;\n//b = tempB;\nx = tempX;\ny = tempY;\nrsize = tempS;\n}\n\nvoid display(){ //make it visible\n  noStroke(); //give it color\n  fill(color(random(360), random(100), random(100)));\n  //fill(random(133),random(50),random(255));\n  rect(x,y,rsize,rsize); //give it location\n}\n  void walk(){\n    int choice = int(random(4));\n    \n    if (choice == 0) {\n      x=x+5;\n    }\n    else if(choice==1){\n       x=x-5;\n    }\n    else if(choice==2){\n      y=y+5;\n    }\n    else {\n      y=y-5;\n    }\n    \n    x = constrain(x,0,width-1);\n    y = constrain(y,0,height-1);\n    \n  }\n}",
    "comments": []
  },
  {
    "_id": "5mFTwSRW7Y2NPuWz5",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T14:15:50.715Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "91514f17d4c84514c03417dc33198a12",
        "public_id": "avalanche2023spring/gpv1dfzsa5bjpnzo2v9j",
        "version": 1680876991,
        "version_id": "39e481dd516884864b8f27bd1a7f335a",
        "signature": "9c9e4a9c18589d8114269b03a2dbb2cd671f80b8",
        "width": 652,
        "height": 512,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T14:16:31Z",
        "tags": [],
        "bytes": 308650,
        "type": "upload",
        "etag": "5d9386382753275f3aec3cd535fa7a1e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680876991/avalanche2023spring/gpv1dfzsa5bjpnzo2v9j.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680876991/avalanche2023spring/gpv1dfzsa5bjpnzo2v9j.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4cc0816ce803b12ec9439fd34bc008c5",
        "public_id": "avalanche2023spring/z4hnldmfxrevhxfxwceb",
        "version": 1680877017,
        "version_id": "bc45165217786b84d3428db80e845863",
        "signature": "8950233540b7f9fe0cd806c70a344b9d51688854",
        "width": 1374,
        "height": 958,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T14:16:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 8323572,
        "type": "upload",
        "etag": "34d83bc958d4c775a461563f9ac021d9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680877017/avalanche2023spring/z4hnldmfxrevhxfxwceb.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680877017/avalanche2023spring/z4hnldmfxrevhxfxwceb.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680877017/avalanche2023spring/z4hnldmfxrevhxfxwceb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126119",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "977589",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1433039,
        "duration": 46.466667,
        "rotation": 0,
        "nb_frames": 2847,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 9 ( 2/4): Here is another game I made on unity with sprites and images on top of them. This is a story game hehe.",
    "comments": []
  },
  {
    "_id": "5mZ4Yshpv9s2Hznmn",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T02:28:50.884Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "eea3d2221fdb64433332c716ef9b001e",
        "public_id": "avalanche2023spring/aiaq7siko7mgy4glngzb",
        "version": 1680229788,
        "version_id": "e4611f5f402f25023258b25480cbe5cf",
        "signature": "1a88d741f719d14a3289282ebee6315015f9531f",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T02:29:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 14939014,
        "type": "upload",
        "etag": "4edd8d62db1752bb9f28c7e28f4e15c0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680229788/avalanche2023spring/aiaq7siko7mgy4glngzb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680229788/avalanche2023spring/aiaq7siko7mgy4glngzb.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680229788/avalanche2023spring/aiaq7siko7mgy4glngzb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128080",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "2316227",
          "dar": "16:9",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2631344,
        "duration": 45.418646,
        "rotation": 0,
        "nb_frames": 334,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T02:34:55.697Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:18:24.239Z" }
      }
    ],
    "title": "",
    "description": "using polysynth to create an overlapping melody",
    "comments": []
  },
  {
    "_id": "5nZs9FtkaDntZ2snD",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-28T05:25:43.891Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1c896d7ed643d609648a9f9aa0a8875a",
        "public_id": "avalanche2023spring/xqdujofpuicwi5d61hdp",
        "version": 1679981174,
        "version_id": "106605036bea1d6b91a3d1ed5e729feb",
        "signature": "7de8a960c1542cecfb4ad803d3e0d6c04ab143c4",
        "width": 723,
        "height": 723,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-28T05:26:14Z",
        "tags": [],
        "bytes": 228136,
        "type": "upload",
        "etag": "b005cac17d65960c7671768b8f5257a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679981174/avalanche2023spring/xqdujofpuicwi5d61hdp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679981174/avalanche2023spring/xqdujofpuicwi5d61hdp.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c9792fdfec323e4d873b81d18101dafa",
        "public_id": "avalanche2023spring/kcxhkluq5gzd6e3seufg",
        "version": 1679981176,
        "version_id": "dc5946b7d7f4fa21618eedd3a8d948a3",
        "signature": "56638fc2282b15700ca826c07af10fe9123c9687",
        "width": 732,
        "height": 732,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-28T05:26:16Z",
        "tags": [],
        "bytes": 218124,
        "type": "upload",
        "etag": "b3b8b7f61926e5e03389059192b0bb5f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679981176/avalanche2023spring/kcxhkluq5gzd6e3seufg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679981176/avalanche2023spring/kcxhkluq5gzd6e3seufg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d1243751e49cffa3d7704e1ac220e677",
        "public_id": "avalanche2023spring/dcmfkcumc5kxsxhzdpf2",
        "version": 1679981183,
        "version_id": "303a6a38535b15d025c570ec39994136",
        "signature": "f3891efd07ff7df0947c4670bf282d8a14eb0d50",
        "width": 555,
        "height": 555,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-28T05:26:23Z",
        "tags": [],
        "bytes": 173869,
        "type": "upload",
        "etag": "b816b0616145a3a6f0f4019abb72cb97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679981183/avalanche2023spring/dcmfkcumc5kxsxhzdpf2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679981183/avalanche2023spring/dcmfkcumc5kxsxhzdpf2.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:31:21.72Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-08T21:57:03.327Z" }
      }
    ],
    "title": "",
    "description": "Had fun playing with Reshma's concentric shapes on Illustrator.",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Whoaa... I feel BOOOOM!",
        "created_at": { "$date": "2023-03-30T19:31:37.332Z" }
      }
    ]
  },
  {
    "_id": "5uNtzAXCWeCARSNhD",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T04:00:57.547Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "800ebb05550d82c5ac0bcdc28bf56ce4",
        "public_id": "avalanche2023spring/oonodb79tlks1hwmshxw",
        "version": 1680840065,
        "version_id": "785637258cf49286ed4eea582a84d985",
        "signature": "61615c4aeb5027290aa83ce7dbc147784e643174",
        "width": 1080,
        "height": 1068,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T04:01:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 472786,
        "type": "upload",
        "etag": "6956f5fc3e96cbb661c0aa5e3b5f7219",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680840065/avalanche2023spring/oonodb79tlks1hwmshxw.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680840065/avalanche2023spring/oonodb79tlks1hwmshxw.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680840065/avalanche2023spring/oonodb79tlks1hwmshxw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "159087",
          "dar": "90:89",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 173262,
        "duration": 21.829833,
        "rotation": 0,
        "nb_frames": 1340,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "71ae6d1bf83c647b292ce69f6c84ab3d",
        "public_id": "avalanche2023spring/xowggdlcpfndwqrfvwef",
        "version": 1680840067,
        "version_id": "761b741eb2ba0a0939cb3f3c48efcfc6",
        "signature": "8c1d6a28cd38afc4848c69324a9500bb2f8fd48b",
        "width": 1044,
        "height": 1038,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T04:01:07Z",
        "tags": [],
        "bytes": 39123,
        "type": "upload",
        "etag": "19879d44c1a085e6bed1f9a23cf6cbf9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680840067/avalanche2023spring/xowggdlcpfndwqrfvwef.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680840067/avalanche2023spring/xowggdlcpfndwqrfvwef.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T04:23:45.627Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T04:23:59.7Z" }
      }
    ],
    "title": "",
    "description": "Pong with paddles controlled by the mouseY position. I also played with a Game Over message and mousePressed() functions to start/restart the game",
    "comments": []
  },
  {
    "_id": "5v7hqvkBWJXSAtXhF",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-28T19:00:14.627Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "128d24297552170e7f126d2d89275357",
        "public_id": "avalanche2023spring/a4fzgpejhnjt3ncont3w",
        "version": 1680030030,
        "version_id": "d3a1075f57de49b1e1d8105ac46c3903",
        "signature": "b8347cea915704f26eabc3a12b65dec901e74bfc",
        "width": 1200,
        "height": 1202,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-28T19:00:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 4233637,
        "type": "upload",
        "etag": "075a5bd877e00970e9e1515f64893373",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680030030/avalanche2023spring/a4fzgpejhnjt3ncont3w.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680030030/avalanche2023spring/a4fzgpejhnjt3ncont3w.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680030030/avalanche2023spring/a4fzgpejhnjt3ncont3w.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "129769",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1075982",
          "dar": "600:601",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1348470,
        "duration": 25.116667,
        "rotation": 0,
        "nb_frames": 1567,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T00:12:07.383Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T20:00:39.267Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T21:04:26.364Z" }
      }
    ],
    "title": "",
    "description": "Modified the example sketch from the lesson to create sketch that creates random melodies in C scale with different pitches based on the mouse position - It's not always pleasant except occasional decent sounding ones - Then used the audio as input sounds to visualize",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nlet notes = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"]\nlet timeInt = [\"2n\", \"4n\", \"6n\", \"8n\"]\n\nlet scaleNotes = []\n\nlet mousePos;\n\nlet newMelody = [];\n\nlet hueCol;\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n  if(e.clientX < width && e.clientY < height){\n    \n    mousePos = Math.floor(map(e.clientX+e.clientY, 0, 1200, 0, 7));\n    \n    setNotes(mousePos);\n    \n    console.log(scaleNotes);\n    \n    hueCol = map(e.clientX+e.clientY, 0, 1200, 0, 350, 0.5)\n    \n  for(let i=0; i<7; i++){\n    newMelody[i] = [scaleNotes[Math.floor(random(scaleNotes.length))], timeInt[Math.floor(random(timeInt.length))]]\n  }\n  newMelody[7] = [\"rest\", \"2n\"]\n\n  let t = Tone.now();\n\n  for (const note of newMelody) {\n    // console.log(note);\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n  }\n};\n\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  mic = new p5.AudioIn();\n  mic.start();\n  \n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(0, 0.1);\n  \n  level = mic.getLevel();\n  \n  visualizer();\n\n}\n\nfunction visualizer(){\n  \n  elSize = map(level, 0.1, 0.6, 100, 400);\n  \n  noStroke();\n  \n  fill(hueCol, 100, 60);\n  \n  ellipse(mouseX, mouseY, elSize, elSize);\n}\n\nfunction setNotes(scale){\n  \n  for(let i=0; i<notes.length; i++){\n    scaleNotes[i] = String(notes[i] + scale)\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "5y7m6cvxoAe8xqNgF",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T03:06:16.429Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4c0a6a5a032e29b729e2a9a464dafa91",
        "public_id": "avalanche2023spring/sr1e6mcwq3bsiry4adkz",
        "version": 1681442393,
        "version_id": "418a6ed244b0d012393c16c862173a68",
        "signature": "97f07f4ebc268d331ae13c93880d592fc59ca493",
        "width": 1528,
        "height": 1528,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T03:19:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 16376006,
        "type": "upload",
        "etag": "0aae47c9619dbf5408ef771257edc2c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681442393/avalanche2023spring/sr1e6mcwq3bsiry4adkz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681442393/avalanche2023spring/sr1e6mcwq3bsiry4adkz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681442393/avalanche2023spring/sr1e6mcwq3bsiry4adkz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "122761",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "34047353",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 36905411,
        "duration": 3.549833,
        "rotation": 0,
        "nb_frames": 223,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e8584241d417d2f5ac24901b30058181",
        "public_id": "avalanche2023spring/fqc1lqycjmdt21wceeob",
        "version": 1681498840,
        "version_id": "c08d6ab52d642c11c383a6e42458dad9",
        "signature": "f9c7c672db5d443f8249f9851b10b3f0f5763786",
        "width": 1528,
        "height": 1528,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T19:00:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 19012176,
        "type": "upload",
        "etag": "e56721b07987c867cdf071eed7c8a147",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681498840/avalanche2023spring/fqc1lqycjmdt21wceeob.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681498840/avalanche2023spring/fqc1lqycjmdt21wceeob.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681498840/avalanche2023spring/fqc1lqycjmdt21wceeob.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "130038",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "21285755",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 22367815,
        "duration": 6.799833,
        "rotation": 0,
        "nb_frames": 418,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8af1bbda065544652bd0e45feed8af24",
        "public_id": "avalanche2023spring/kpduajctktwmfbipgwjb",
        "version": 1681500927,
        "version_id": "11789efb018ac146b48330b6bc73b429",
        "signature": "6946e70e8721b7abd711b7cd8cf3d79bfe1967d8",
        "width": 1528,
        "height": 1528,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T19:35:27Z",
        "tags": [],
        "bytes": 2397890,
        "type": "upload",
        "etag": "bea150ae168f1b64c8d1c046f9b21ea8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681500927/avalanche2023spring/kpduajctktwmfbipgwjb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681500927/avalanche2023spring/kpduajctktwmfbipgwjb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T03:53:48.183Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T04:55:40.303Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T15:01:43.053Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:12:56.425Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:19:24.668Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:21:05.73Z" }
      }
    ],
    "title": "",
    "description": "**Using Perlin Noise to Generate Hs and Hyphens**",
    "code": "let noise;\nnoise = new Noise(Math.random());\n\n\ndocument.getElementById(\"line1\").textContent = generateLine();\ndocument.getElementById(\"line2\").textContent = generateLine();\ndocument.getElementById(\"line3\").textContent = generateLine();\ndocument.getElementById(\"line4\").textContent = generateLine();\n\nfunction generateLine() {\n    console.log(\"check\");\n    var rand = Math.random();\n\n    var line1 = \"\";\n    \n    for (let i = 0; i<100; i++) {\n        for (let j = 0; j<100; j++) {\n            var val = noise.perlin2(i*0.01, j*0.01);\n            if (val <0.2) line1+=\"H\";\n            else if (val<0.3) line1+=\"I\";\n            else if (val<0.5) line1+=\"/\";\n            else line1+=\"...\";\n        }\n        \n    }\n    \n    return line1;\n}",
    "comments": [],
    "inspiration_name": "Aaron Marcus: Early Works",
    "inspiration_url": "https://bampfa.org/program/aaron-marcus-early-works"
  },
  {
    "_id": "6AeXuRFaXNrkjjr3E",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T04:39:04.145Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ef189367b7ff3c0e8b249cc1fc276f85",
        "public_id": "avalanche2023spring/gecsk7bpqxhvgi7k9ikd",
        "version": 1676522591,
        "version_id": "c1c18cf8eca3921ffe3fa161f439e9b9",
        "signature": "75614dc9080333af3fe953d3a3a71ae764d9a687",
        "width": 1166,
        "height": 1124,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-16T04:43:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 14107534,
        "type": "upload",
        "etag": "9041caa5a67d63463975b37ede948b23",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676522591/avalanche2023spring/gecsk7bpqxhvgi7k9ikd.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676522591/avalanche2023spring/gecsk7bpqxhvgi7k9ikd.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676522591/avalanche2023spring/gecsk7bpqxhvgi7k9ikd.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317033",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "6756945",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7091588,
        "duration": 15.883333,
        "rotation": 0,
        "nb_frames": 953,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3e21790c8a5f7d32d447a2dd85248d5a",
        "public_id": "avalanche2023spring/lg8oyzektlweounrkitd",
        "version": 1676522690,
        "version_id": "a0750c9804aaf4dbb22e7e15f22416e6",
        "signature": "5534d0e1e9097bd8c8f922e0af46b847a18bff2e",
        "width": 1280,
        "height": 1233,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T04:44:50Z",
        "tags": [],
        "bytes": 3666953,
        "type": "upload",
        "etag": "472d28b011d804c384875d9b3983ae65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676522690/avalanche2023spring/lg8oyzektlweounrkitd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676522690/avalanche2023spring/lg8oyzektlweounrkitd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T18:00:06.214Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:22.936Z" }
      }
    ],
    "title": "",
    "description": "Treasure Map reveal: I tried to use the noise as both clouds and terrain where the former slowly fades away to reveal the latter.\nTreasure Map vector attributed to Freepik.",
    "code": "let t = 0;\nlet l = 1;\nlet spot;\n\nfunction setup() {\n  createCanvas(600, 600);\n  ellipseMode(CENTER);\n  fill(200, 50, 100);\n  noStroke();\n  // frameRate(10);\n  spot = loadImage('spot.png');\n}\n\nfunction draw() {\n  background(\"rgb(46,150,185)\");\n  let n;\n\n  for (let y = -25; y < height+15; y += 3) {\n    for (let x = -25; x < width+15; x += 3) {\n       // n = noise(y);\n n = noise(x*0.01, y*0.01);\n      let r = 3;\n      // fill(x+n, n*second()*10,200);\n      fill(x+n, n*millis()*0.04,200);\n      ellipse(x+n*20+10, y+n*20+10, r, r);\n      // image(spot, width-100, height-100,spot.width*0.3, spot.height*0.3);\n      // ellipse(x+n*50, y+n*50, r, r); //for a terrain\n          // point(x+n*50, y+n*50);\n    }\n  }\n  \n \n}",
    "comments": [],
    "inspiration_url": "https://www.freepik.com/free-vector/map-pirate-island-treasure_1128651.htm#query=treasure%20map&position=6&from_view=search&track=ais"
  },
  {
    "_id": "6EYHmvSLSuoSG9CJR",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-19T18:50:23.421Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ea8f57391848533a3041e4c157931928",
        "public_id": "avalanche2023spring/gpolhz6yzyezhf4axarv",
        "version": 1676832634,
        "version_id": "bdfb82eaf8b4a760f52b936867df4de3",
        "signature": "748b931896d36fe1c608975fe4ca6be8c043f8ca",
        "width": 370,
        "height": 370,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-19T18:50:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 534867,
        "type": "upload",
        "etag": "6b4ff5d215774625be3b24f304a71a47",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676832634/avalanche2023spring/gpolhz6yzyezhf4axarv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676832634/avalanche2023spring/gpolhz6yzyezhf4axarv.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676832634/avalanche2023spring/gpolhz6yzyezhf4axarv.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "493852",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 495591,
        "duration": 8.633333,
        "rotation": 0,
        "nb_frames": 260,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Target practice as way of mapping treasure. Was thinking about satisfaction of alignment. Thinking of a new perception with Ishaan's sketch.",
    "code": "let xoff = 0;\nlet xoff1 = 0.9;\nlet yoff = 100;\nlet yoff1 = 0.1;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(51);\n  // let x = random(width);\n\n  push();\n  \n  strokeWeight(32);\n  strokeCap(SQUARE);\n  noFill();\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 64, 64, 0, PI);\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 64, 64, PI, 0);\n\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 160, 160, PI / 6, (PI * 5) / 6);\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 160, 160, (PI * 5) / 6, (PI * 3) / 2);\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 160, 160, (PI * 3) / 2, PI / 6);\n\n\n  pop();\n  \n  push();\n  fill(\"rgba(255,255,255,0.73)\");\n  stroke(\"grey\");\n  ellipse(width/2, height/2, 50,50);\n  \npop();\n  \n  push();\n  \n stroke(126);\nline(200, 170, 200, 230);\n  \n  line(170, 200, 230, 200);\n\n  pop();\n  \n  \n    push();\n    let x = map(noise(xoff), 0, 1, 0, width);\n    console.log(noise(xoff), \"sahiti1\");\n    let y = map(noise(yoff1), 0, 1, 0, height);\n    console.log(noise(yoff1), \"sahiti2\");\n\n    xoff += 0.009;\n    yoff1 = yoff1 + 0.01;\n    // ellipse(x, y, 10, 10);\n    // ellipse(y, x, 10, 10);\n    // ellipse(y, 20 + x, 10, 10);\n    // ellipse(20 + y, x, 10, 10);\n    for (i = 1; i < width; i = i + 10) {\n      noStroke();\n      fill(\"rgb(255,0,0)\");\n     // rect(x + i, y, 10, 5);\n      //rect(x, y + i, 5, 10);\n\n      rect(10 + i, y, 10, 5);\n      rect(x, 80 + i, 5, 10);\n      pop();\n      \n  //noLoop();\n    }\n}",
    "comments": []
  },
  {
    "_id": "6GDuXG5Mod9T76H8X",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T22:32:23.204Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8ef23e6437ca055cbecaee9988483878",
        "public_id": "avalanche2023spring/isfdq6fef7ybl198yfty",
        "version": 1675377146,
        "version_id": "a539445b98e4c062a7c2a40e887ad928",
        "signature": "79e6bab1d74354a991712263c7ebc13aee7a3d69",
        "width": 1919,
        "height": 771,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-02T22:32:26Z",
        "tags": [],
        "bytes": 286174,
        "type": "upload",
        "etag": "acfe84fe94fdba2ceffb70fb04132ad7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675377146/avalanche2023spring/isfdq6fef7ybl198yfty.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675377146/avalanche2023spring/isfdq6fef7ybl198yfty.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f022e76758f0820ad9b09801e556c400",
        "public_id": "avalanche2023spring/buverywiuzuturqmd0go",
        "version": 1675377271,
        "version_id": "31a1fe911d724de20d113fb66e94154e",
        "signature": "56c474c18a1eca79885108708bc9363ad65de0ef",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-02T22:34:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 5931732,
        "type": "upload",
        "etag": "d8e08bbc00a0c94e7ff50c236ed84936",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675377271/avalanche2023spring/buverywiuzuturqmd0go.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675377271/avalanche2023spring/buverywiuzuturqmd0go.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2262",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "4464436",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4475512,
        "duration": 10.602667,
        "rotation": 0,
        "nb_frames": 636,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T22:37:52.758Z" }
      },
      {
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T23:53:20.667Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T00:24:29.517Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "funny",
        "created_at": { "$date": "2023-02-03T00:24:36.456Z" }
      }
    ],
    "title": "",
    "description": "These sketches come from one of my favorite libraries to use, shaderpark! Message me if you'd like an intro to this library, it's fun and pretty easy to use!",
    "code": "// shader-park runs on its proprietary website (but can be exported elsewhere)\n// you can fork my code but I believe you have to sign up first\n// https://shaderpark.com/sculpture/-NNIzQDTGLzsA_ouUmbY?hideeditor=true&hidepedestal=true\n// zoom in to see the sculpture! (NOTE this library is GPU intensive)\n// Inspired by this sketch from Torin Blankensmith:\n// https://shaderpark.netlify.app/sculpture/-NIFkhuu5L2CXK4T-Zq3?hideeditor=true&hidepedestal=true",
    "comments": []
  },
  {
    "_id": "6SuHYctRwkmJ7S6hf",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-21T23:32:29.216Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "69412f9e58a27bab7b5aef37c24ef65c",
        "public_id": "avalanche2023spring/rtebtsppkwtksfn9wf66",
        "version": 1677022423,
        "version_id": "d42539fb2857c4a7c4b0dd475ecb4be5",
        "signature": "771c29dfe24961b36ee802198d6a04e7cacffad4",
        "width": 2260,
        "height": 1392,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-21T23:33:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 1583041,
        "type": "upload",
        "etag": "9f5547e71d91a81fb453b2e09957c9a2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677022423/avalanche2023spring/rtebtsppkwtksfn9wf66.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677022423/avalanche2023spring/rtebtsppkwtksfn9wf66.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677022423/avalanche2023spring/rtebtsppkwtksfn9wf66.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "521677",
          "dar": "565:348",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 529518,
        "duration": 23.916667,
        "rotation": 0,
        "nb_frames": 1436,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "05659fe1ff301528492bd54af297e95e",
        "public_id": "avalanche2023spring/rn8ijacl8l4xketmxr8g",
        "version": 1677022427,
        "version_id": "4b69f32637490f743aa71174384c57ba",
        "signature": "38302c0ae51df92b37e9d132722371100e80034b",
        "width": 2262,
        "height": 1452,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-21T23:33:47Z",
        "tags": [],
        "bytes": 139923,
        "type": "upload",
        "etag": "e27c0c6fc6d8a31828effe06e131600c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677022427/avalanche2023spring/rn8ijacl8l4xketmxr8g.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677022427/avalanche2023spring/rn8ijacl8l4xketmxr8g.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "048e2f4c16b752b6b536f3cfac9bc48d",
        "public_id": "avalanche2023spring/ob1hpxi0mprayutemq4s",
        "version": 1677022430,
        "version_id": "39d13f0a1b95e6b11c6f717e24d05470",
        "signature": "71df7a9c6d9b967a2e8e87b77a6441c0ed8942b3",
        "width": 2264,
        "height": 1458,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-21T23:33:50Z",
        "tags": [],
        "bytes": 124850,
        "type": "upload",
        "etag": "0ba5c44e6642e2da1dfb525a5e07785c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677022430/avalanche2023spring/ob1hpxi0mprayutemq4s.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677022430/avalanche2023spring/ob1hpxi0mprayutemq4s.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T00:15:01.889Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T02:31:59.898Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T02:59:11.38Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T04:46:14.584Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T10:26:28.243Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T14:58:00.018Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:34.36Z" }
      }
    ],
    "title": "",
    "description": "Face generator challenge using type and characters! With more time I could definitely add more character options and tweak the positioning of the features.",
    "comments": []
  },
  {
    "_id": "6YYs8XrTrWk4suCFX",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T03:00:16.838Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e361a2a5b18c544601bc6779c07bfb71",
        "public_id": "avalanche2023spring/jbtufp6kvnnlze5csbjq",
        "version": 1683860473,
        "version_id": "ad965bae8e06a2a10bfa1d2cf00d2dc3",
        "signature": "36c85210280d3c8b088189fb88d6143b3e32d61c",
        "width": 1984,
        "height": 1950,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:01:13Z",
        "tags": [],
        "bytes": 2640426,
        "type": "upload",
        "etag": "80e557f0a6da1167573183b0a76cc076",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860473/avalanche2023spring/jbtufp6kvnnlze5csbjq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860473/avalanche2023spring/jbtufp6kvnnlze5csbjq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f6f871928e9263ffcd96541659ab23c5",
        "public_id": "avalanche2023spring/fkdxecgvz870chadcxcz",
        "version": 1683860476,
        "version_id": "c4963db3b4c5b416ad40b84e02263fad",
        "signature": "26c2e906ed849c680deadaea8391ecf679636373",
        "width": 1986,
        "height": 1958,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:01:16Z",
        "tags": [],
        "bytes": 1938895,
        "type": "upload",
        "etag": "2ad9d665d136182aa83ff2b7ef4fae0c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860476/avalanche2023spring/fkdxecgvz870chadcxcz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860476/avalanche2023spring/fkdxecgvz870chadcxcz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dc5ef0c6d8f1b5069df26c3527eda072",
        "public_id": "avalanche2023spring/n4arkn8edafdaisxawtq",
        "version": 1683860484,
        "version_id": "a1b9187b09015bd34f46dc28d4fa3667",
        "signature": "4bd624be023f9308e0201795aae472db723e85f8",
        "width": 1990,
        "height": 1974,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:01:24Z",
        "tags": [],
        "bytes": 2772756,
        "type": "upload",
        "etag": "62c6a3c4ef59be0891a82bd9ac2b43b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860484/avalanche2023spring/n4arkn8edafdaisxawtq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860484/avalanche2023spring/n4arkn8edafdaisxawtq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T04:36:12.774Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T11:43:56.672Z" }
      }
    ],
    "title": "",
    "description": "Dandelions or fireworks?\n\nI was experimenting with the spirograph starter code and started to get some dandelion-y forms",
    "comments": []
  },
  {
    "_id": "6bvE5tf9xaxx3owmF",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T04:47:21.012Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "70b35713fbc056f00fa7a032cab5e6f8",
        "public_id": "avalanche2023spring/idxi0jyfbk5sfbovhvbp",
        "version": 1680756450,
        "version_id": "521e1a88594b77ca76e4252de344261a",
        "signature": "ae2553abad51c12c17dd69dd10723e72ae6a87a1",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T04:47:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 1031152,
        "type": "upload",
        "etag": "928472fbcdcd60cb0fb5294b681c91c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680756450/avalanche2023spring/idxi0jyfbk5sfbovhvbp.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680756450/avalanche2023spring/idxi0jyfbk5sfbovhvbp.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680756450/avalanche2023spring/idxi0jyfbk5sfbovhvbp.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2273",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "277297",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 288939,
        "duration": 28.55,
        "rotation": 0,
        "nb_frames": 1713,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I'm calling this the dev texture build. I have a really good idea of where to take this but ran out of time.",
    "comments": []
  },
  {
    "_id": "6eY2PCBnX5p7ma8gH",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T14:26:41.634Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7bbad248abb1236ccb4386838348e3ca",
        "public_id": "avalanche2023spring/seszes8jifvvk7xrig8i",
        "version": 1680877620,
        "version_id": "cf02d853d4b92a0496caf919704fd5d9",
        "signature": "8023774a581cb1e454bf48927117d2d51fd44899",
        "width": 234,
        "height": 548,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-07T14:27:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 196470,
        "type": "upload",
        "etag": "d85e3abfa1426726dec8d6ea96928ee4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680877620/avalanche2023spring/seszes8jifvvk7xrig8i.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680877620/avalanche2023spring/seszes8jifvvk7xrig8i.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680877620/avalanche2023spring/seszes8jifvvk7xrig8i.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "84536",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 85888,
        "duration": 18.3,
        "rotation": 0,
        "nb_frames": 550,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:58.264Z" }
      }
    ],
    "title": "",
    "description": "Tried creating connect with p5js.\n\n//sample code of https://editor.p5js.org/simontiger/sketches/gb3gVSd5K",
    "code": "const cols = 3;\nconst rows = 6;\nconst w = 100;\nconst dw = 80;\nconst board = Array(6).fill().map(() => Array(3).fill(0));\n\nlet player = 1;\nlet playerPos;\nlet win = 0;\n\nfunction setup() {\n  createCanvas(cols*w, rows*w + w);\n}\n\nfunction hasWon() {\n  // Test Horizontal\n  for (let j = 0; j < rows; j++) {\n    for (let i = 0; i <= cols-3; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j][i+k] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  // Test Vertical\n  for (let j = 0; j <= rows-3; j++) {\n    for (let i = 0; i < cols; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j+k][i] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  // Test Diagonal\n  for (let j = 0; j <= rows-3; j++) {\n    for (let i = 0; i <= cols-3; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j+k][i+k] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  // Test Antidiagonal\n  for (let j = 0; j <= rows-3; j++) {\n    for (let i = 2; i < cols; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j+k][i-k] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  return false;\n}\n\nfunction draw() {\n  background(255, 255, 0);\n  \n  playerPos = floor(mouseX/w)\n  \n  stroke(0);\n  fill(255);\n  rect(-1, -1, width+2, w);\n  for (let j = 0; j < rows; j++) {\n    for (let i = 0; i < cols; i++) {\n      fill(255);\n      if (board[j][i] == 1) {\n        fill(0, 0, 255);\n      } else if (board[j][i] == 2) {\n        fill(255, 0, 0);\n      }\n      ellipse(i*w + w/2, j*w + 3*w/2, dw);\n    }\n  }\n  \n  stroke(102, 102, 0);\n  for (let x = w; x < width; x += w) {\n    line(x, w, x, height);\n  }\n  \n  stroke(0);\n  if (player == 1) {\n    fill(0, 0, 255);\n  } else if (player  == 2) {\n    fill(255, 0, 0);\n  }\n  ellipse((playerPos + 0.5) * w, w/2, dw);\n  \n  if (win != 0) {\n    noStroke();\n    fill(0);\n    if (win == 1) {\n      fill(0, 0, 255);\n    } else if (win  == 2) {\n      fill(255, 0, 0);\n    }\n    textAlign(CENTER, CENTER);\n    textSize(64);\n    if (win == 4) {\n      text(\"Game Over!\", width/2, w/2);\n    } else if (win == 3) {\n      text(\"It is a tie.\", width/2, w/2);\n    } else {\n      text(`${win > 1 ? 'Red' : 'Blue'} won!`, width/2, w/2);\n    }\n    noLoop();\n  }\n}\n\nfunction mousePressed() {\n  if (board[0][playerPos] != 0) {\n    win = 4;\n  }\n  \n  board[0][playerPos] = player;\n  let i = 0;\n  while (true) {\n    if (i >= rows-1) {\n      break;\n    }\n    if (board[i+1][playerPos] != 0) {\n      break;\n    }\n    [board[i+1][playerPos], board[i][playerPos]] = [board[i][playerPos], board[i+1][playerPos]];\n    i++;\n  }\n  \n  if (hasWon()) {\n    //console.log(`${player > 1 ? 'Red' : 'Blue'} won!`);\n    win = player;\n  } else {\n    let drop = true;\n    for (let i = 0; i < cols; i++) {\n      if (board[rows-1][i] == 0) {\n        drop = false;\n      }\n    }\n    if (drop) {\n      for (let j = rows-2; j >= 0; j--) {\n        for (let i = 0; i < cols; i++) {\n          board[j+1][i] = board[j][i];\n        }\n      }\n      for (let i = 0; i < cols; i++) {\n        board[0][i] = 0;\n      }\n    }\n  }\n  \n  player = 3 - player;\n}",
    "comments": []
  },
  {
    "_id": "6frJeH3EW3nj7kDZs",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-12T02:48:11.083Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1e44afc0bd519c3ca61ac447685ad4aa",
        "public_id": "avalanche2023spring/p82dpvc9csm8juodfl8x",
        "version": 1681267765,
        "version_id": "d401afbd199345cb842b79dee02f7687",
        "signature": "ef8c9e649af0f87966e7d3b50df83cf4e9f70ef8",
        "width": 1634,
        "height": 1634,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-12T02:49:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 11269587,
        "type": "upload",
        "etag": "350d1e1d6d22cbe8b197e39348131ed2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681267765/avalanche2023spring/p82dpvc9csm8juodfl8x.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681267765/avalanche2023spring/p82dpvc9csm8juodfl8x.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681267765/avalanche2023spring/p82dpvc9csm8juodfl8x.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "12666123",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12923838,
        "duration": 6.933333,
        "rotation": 0,
        "nb_frames": 416,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b562ecc75c9c7ef8483e81947afb4da4",
        "public_id": "avalanche2023spring/bvzmzydhmnfboavvzfb9",
        "version": 1681267825,
        "version_id": "159e546b27f565f400bb55dfdf6e5c8d",
        "signature": "4fd8424d9f315653afa51dcadb62a30e13833297",
        "width": 1280,
        "height": 1280,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T02:50:25Z",
        "tags": [],
        "bytes": 3885222,
        "type": "upload",
        "etag": "cfc9c75ea493dfc206cf70e09507d79a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681267825/avalanche2023spring/bvzmzydhmnfboavvzfb9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681267825/avalanche2023spring/bvzmzydhmnfboavvzfb9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "497988d1d8cefcd803f4d6bc98cb4102",
        "public_id": "avalanche2023spring/msavqovsxroueutcfpng",
        "version": 1681421009,
        "version_id": "4085e97645b56033b087dfce43dfa48b",
        "signature": "a395b2b1fcacb4cbe0c53fa31af6daba662053aa",
        "width": 2000,
        "height": 2000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T21:23:29Z",
        "tags": [],
        "bytes": 1056030,
        "type": "upload",
        "etag": "0fa01401adc0e3806cec8e65cf7d3a35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681421009/avalanche2023spring/msavqovsxroueutcfpng.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681421009/avalanche2023spring/msavqovsxroueutcfpng.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T03:13:55.907Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T04:06:14.332Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-12T05:58:17.375Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2023-04-12T05:58:26.766Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T05:59:18.352Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T07:09:06.091Z" }
      }
    ],
    "title": "",
    "description": "letters for 36 Days of Type: thank you Aabha for setting the precedent with text to Points, I can now post mine. Gonna get to actually generating text real soon.",
    "inspiration_name": "Xin Xin's letter morphing tutorial",
    "comments": []
  },
  {
    "_id": "6hqtZ4HgYsD7oDf3p",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T02:29:51.188Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f3ca7a24749880f26fa4898186a4289b",
        "public_id": "avalanche2023spring/sbvosmjpro9qzokfoc2r",
        "version": 1678415454,
        "version_id": "fe079667209a93a38bc2e4a7f08e2f5b",
        "signature": "d98a56bde4d126060062dbc0cd2f2cd97f87b326",
        "width": 900,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T02:30:54Z",
        "tags": [],
        "bytes": 837315,
        "type": "upload",
        "etag": "d1d43415342cec4936bbd6cfaed34840",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678415454/avalanche2023spring/sbvosmjpro9qzokfoc2r.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678415454/avalanche2023spring/sbvosmjpro9qzokfoc2r.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "54a9ac1973edebdffcc65e49bdc6a334",
        "public_id": "avalanche2023spring/knrfzs8rcbarmhmiayhv",
        "version": 1678415648,
        "version_id": "92d8aaf288585986b68cdd2837774e17",
        "signature": "901527fa27cb8f249f5d3cdfd5def17dd4dc4701",
        "width": 900,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T02:34:08Z",
        "tags": [],
        "bytes": 817639,
        "type": "upload",
        "etag": "e5c0636c9d63f699ea4a57be0fc5631d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678415648/avalanche2023spring/knrfzs8rcbarmhmiayhv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678415648/avalanche2023spring/knrfzs8rcbarmhmiayhv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:30.842Z" }
      }
    ],
    "title": "",
    "description": "Prompt for Shristi for the pair challenge",
    "comments": []
  },
  {
    "_id": "6pLCxb8d75PC6bDGA",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": { "$date": "2023-02-10T00:13:39.611Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b649cd65fe0d9d7746792c68f6b71d14",
        "public_id": "avalanche2023spring/qsay2xjcefygzmtq8ais",
        "version": 1675988112,
        "version_id": "18d9488ac6e752b205eb4ceb3d22c55c",
        "signature": "1bcde9eb5ba6747ebe9ffd231afbd4f88efe0105",
        "width": 1192,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T00:15:12Z",
        "tags": [],
        "bytes": 341532,
        "type": "upload",
        "etag": "20de7789586ba0e55737b6cc39be0b0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675988112/avalanche2023spring/qsay2xjcefygzmtq8ais.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675988112/avalanche2023spring/qsay2xjcefygzmtq8ais.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:44:24.624Z" }
      }
    ],
    "lesson": "Random",
    "title": "",
    "description": "WEEK 2 SKETCH (2/4) :  I tried to mimic PIET MODRIANs style and I had a lot of fun, it was more technical in terms of thinking with how to organize the shapes but it was still pretty good.",
    "code": "function setup() {\n  createCanvas(600, 600);\n  background(225,0,0);\n \nvar a = color(240,240,240);\n  \n    //White Squares\n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(0, 140, 40, 500);  // Draw rectangle  \n  \n    //White Bottom Left\n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 435, 200, 200);  // Draw rectangle  \n  \n    //White Top Right\n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 0, 200, 140);  // Draw rectangle \n  \n    //White Top \n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(220, 0, 120, 70);  // Draw rectangle \n  \n  \n  \n var b = color(0,0,190);\n    //Blue Squares\n\tfill(b);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(0, 0, 40, 140);  // Draw rectangle  \n  \n  //BlueBottom Left\n\tfill(b);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 140, 200, 200);  // Draw rectangle  \n  \n  //BlueBottom Right\n\tfill(b);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 440, 100, 200);  // Draw rectangle  \n  \n  var c = color(244, 223, 66);\n    //Yellow\n  \n    //Top left\n\tfill(c);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 0, 200, 140);  // Draw rectangle \n  \n    //MIddle\n\tfill(c);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 140, 260, 290);  // Draw rectangle  \n  \nvar d = color(40, 40, 40);\n    //Black\n  \n    //1st lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 0, 8, 600);  // Draw rectangle\n  \n    //1st v2 lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 0, 8, 600);  // Draw rectangle\n  \n    //2nd lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(340, 0, 8, 140);  // Draw rectangle \n  \n    //3rd lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 0, 8, 600);  // Draw rectangle \n  \n    //1st Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(0, 135, 600, 8);  // Draw rectangle \n  \n    //2nd Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 65, 100, 12);  // Draw rectangle\n    \n    //3rd Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 430, 100, 10);  // Draw rectangle \n  \n    //4th Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 330, 200, 8);  // Draw rectangle \n  \n    //5th Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 430, 200, 8);  // Draw rectangle \n  \n  \n    //Top Left\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 430, 260, 800);  // Draw rectangle \n\n \n  \n  \n  \n \n}",
    "comments": []
  },
  {
    "_id": "6qWudpSyvwsCdukCF",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": { "$date": "2023-04-28T11:48:35.507Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b41ccc45d4c114ae2cc02783122db08b",
        "public_id": "avalanche2023spring/ywufmdqez9f0i4zl4agd",
        "version": 1682682522,
        "version_id": "2ddd1420ed3e9be9e2d3d8bc1202b56d",
        "signature": "5d522822208084d9eba9bcbb1fb3c69d727db781",
        "width": 1600,
        "height": 676,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T11:48:42Z",
        "tags": [],
        "bytes": 153216,
        "type": "upload",
        "etag": "7670d5eadf0910cc87d73e06ea3989ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682682522/avalanche2023spring/ywufmdqez9f0i4zl4agd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682682522/avalanche2023spring/ywufmdqez9f0i4zl4agd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a0de353d3ac5a35e9f6fc6161f7dc398",
        "public_id": "avalanche2023spring/btho5epkwvoid1aknnq7",
        "version": 1682682526,
        "version_id": "78dae6dbdba02cf30b6c18e1c438ac8a",
        "signature": "3f8629142231738673dcc9ebc603e13f2064d88e",
        "width": 1352,
        "height": 308,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T11:48:46Z",
        "tags": [],
        "bytes": 100627,
        "type": "upload",
        "etag": "ca00313da7951f695607567d6caab0af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682682526/avalanche2023spring/btho5epkwvoid1aknnq7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682682526/avalanche2023spring/btho5epkwvoid1aknnq7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "WEEK 12 (2/4): This is basically what I was trying to do",
    "comments": []
  },
  {
    "_id": "6qy4CtMLQ9AmBwNzR",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T23:28:14.143Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a94374fce770b55ad052a815c8483d09",
        "public_id": "avalanche2023spring/ubciked8raddo5sba0ne",
        "version": 1676503774,
        "version_id": "f9da1ed0102c54b151c4e6100c8c64d1",
        "signature": "ac3755c978ec93ea01f7c4af87165ae124dcebbd",
        "width": 1370,
        "height": 1274,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T23:29:34Z",
        "tags": [],
        "bytes": 104106,
        "type": "upload",
        "etag": "b8d5d5c4e1fbaf1e2568e9fbfe489df1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676503774/avalanche2023spring/ubciked8raddo5sba0ne.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676503774/avalanche2023spring/ubciked8raddo5sba0ne.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "CODING SYMPHONY",
    "inspiration_name": "Coding Symphony",
    "code": "let t;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tstrokeWeight(1);\n  //stroke(random(255), random(255), random(255));\n  //noFill();\n  \tframeRate(60);\n\tt = 0;\n  \n}\n\nfunction draw() {\n\tbackground(255);\n  //stroke(random(255), random(255), random(255));\n\tframeRate(60);\n\tcircling(0, 600, 200);\n\tcircling (200, 0, 140);\n\tcircling(100, 200, 80);\n\tcircling(40, 800, 30);\n    circling(100, 60, 30);\n\tcircling(50, 30, 200);\n\tcircling(50, 40, 600);\n\tcircling(300, 10, 170);\n  \n   //fill(random(100), random(100), random(255));\n}\n\nfunction circling(xPos, yPos, circleSize) {\n  let x = width/2; //position of circling\n  let y = height * noise(t + yPos);\n  let size = width/2 * noise(t + circleSize);\n\n  ellipse(x, y, size, size);\n\n  t += 0.0008;\n}",
    "comments": []
  },
  {
    "_id": "6sYtZnq2HyoCLnPmt",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T08:42:56.798Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c193196dc214584ce09c21e4c679cf9b",
        "public_id": "avalanche2023spring/lclwbcq93neq5bkvgvim",
        "version": 1676018612,
        "version_id": "fe11efa5aa2de834540dd958de568888",
        "signature": "7ec041df8817ddf4f8aecf188b97928a7eecb21c",
        "width": 1168,
        "height": 1174,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T08:43:32Z",
        "tags": [],
        "bytes": 322929,
        "type": "upload",
        "etag": "b925bfd46dac352a408372b1643180e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676018612/avalanche2023spring/lclwbcq93neq5bkvgvim.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676018612/avalanche2023spring/lclwbcq93neq5bkvgvim.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T14:19:06.434Z" }
      }
    ],
    "title": "",
    "description": "WEEK 2 SKETCH (4/4): I WAS HONESTLY TRYING TO SEE WHAT THIS WOULD MAKE AND TO PLAY WITH TRANSPARENCY",
    "comments": []
  },
  {
    "_id": "6yj4iwY2z2fBYY5rS",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-04T05:04:58.564Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "94be4033854f0f6a2aedc5ba67712ee5",
        "public_id": "avalanche2023spring/hhfp2ieknqhmp8htslnb",
        "version": 1683176711,
        "version_id": "0cec20f726206ac5948867fa6ba933f0",
        "signature": "346788bb449c0d21742b4cafa81b46f513f150ed",
        "width": 1614,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-04T05:05:11Z",
        "tags": [],
        "bytes": 44499,
        "type": "upload",
        "etag": "72603d059910402d60758bb548aeee3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683176711/avalanche2023spring/hhfp2ieknqhmp8htslnb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683176711/avalanche2023spring/hhfp2ieknqhmp8htslnb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a9d0c50676ecc7884be0e686fd22a032",
        "public_id": "avalanche2023spring/dqmt8i0oijzovraqq3cl",
        "version": 1683176713,
        "version_id": "aa0d2b8be31eb1e2ac6699d23c482fa3",
        "signature": "70f8939ee8a3596697e57ef3d4de02d9ec70a7f5",
        "width": 1626,
        "height": 824,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-04T05:05:13Z",
        "tags": [],
        "bytes": 41396,
        "type": "upload",
        "etag": "2745de4648b91a645d8f5be5b4a4c6a1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683176713/avalanche2023spring/dqmt8i0oijzovraqq3cl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683176713/avalanche2023spring/dqmt8i0oijzovraqq3cl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8e83f253714f033221cf6d97ccdee5a6",
        "public_id": "avalanche2023spring/lysq24f4ze1pwbruc9lg",
        "version": 1683176717,
        "version_id": "f0d14b7df8e473672e6b09291c60c318",
        "signature": "d5d19f07f828692dfb8fc51e1d60e946d77fade6",
        "width": 1002,
        "height": 594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-04T05:05:17Z",
        "tags": [],
        "bytes": 30144,
        "type": "upload",
        "etag": "b3c6bf2a3f826164bdba561328c37051",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683176717/avalanche2023spring/lysq24f4ze1pwbruc9lg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683176717/avalanche2023spring/lysq24f4ze1pwbruc9lg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-04T05:28:11.391Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T02:17:42.533Z" }
      }
    ],
    "title": "",
    "description": "I made a little couch situation 🛋 I mainly used translate and rotate.",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "piet mondrian doing interior design  ",
        "created_at": { "$date": "2023-05-05T07:59:50.416Z" }
      }
    ]
  },
  {
    "_id": "6z85L9oJcSh5ghMNJ",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T09:40:37.561Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fde533f53b655db8fc0694ad8f413ba0",
        "public_id": "avalanche2023spring/nailkxg5y6tdlmgthx8g",
        "version": 1675244443,
        "version_id": "1c5b7ed60004d49535239d1ee5e6de36",
        "signature": "ff3c2b50360bdb30eb4ac7adcedbec68b8cd7b1d",
        "width": 1500,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T09:40:43Z",
        "tags": [],
        "bytes": 458366,
        "type": "upload",
        "etag": "6900322289b67754bbcd439261fa949e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675244443/avalanche2023spring/nailkxg5y6tdlmgthx8g.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675244443/avalanche2023spring/nailkxg5y6tdlmgthx8g.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T14:42:21.359Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T02:02:21.058Z" }
      }
    ],
    "title": "",
    "description": "Sketch based off of Reshma's instruction. My hand hurts lol",
    "comments": []
  },
  {
    "_id": "733nx3FccJ3AxBz8c",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-27T03:45:49.994Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5703a491f632db80303b237b9359faee",
        "public_id": "avalanche2023spring/mowy6gwkxlqhciswmkzz",
        "version": 1677469557,
        "version_id": "cd8a93ce279c4284d5b2a81f5d963b43",
        "signature": "30244bb30067bf3b55659a22fe9f47f4077a7b00",
        "width": 596,
        "height": 592,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-27T03:45:57Z",
        "tags": [],
        "bytes": 32727,
        "type": "upload",
        "etag": "e6b1b5b3b9dfd0a59d071bb8e37f0cf5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677469557/avalanche2023spring/mowy6gwkxlqhciswmkzz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677469557/avalanche2023spring/mowy6gwkxlqhciswmkzz.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Started with the Starting Code for Challenge 1, got pretty close surprisingly since at the start of this challenge I was struggling to even get the distribution of the ellipses right.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(50);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 1;\n  let r = float(random(0, 255));\n  let g = float(random(0, 255));\n  let b = float(random(0, 255));\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    let x = noise(i * noiseFrequency, 0) * width;\n    let y = noise(i * noiseFrequency, 1000) * height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    let diameter = float(random(1, 20));\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    //fill(r, g, b);\n\n    colorMode(HSB, 100);\n    \n    for (let j = 0; j < 100; j++) {\n      for (let k = 0; k < 100; k++) {\n        fill(i, j, k);\n      }\n    }\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "73brcn2g5xPCHcmkE",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:10:11.714Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2164930b72e3cea06c86e78d55b3c012",
        "public_id": "avalanche2023spring/ms0twqfyq925p4fxa31x",
        "version": 1683299456,
        "version_id": "9443dc8a878a61ff123cafe89750253a",
        "signature": "384fcbb820e54e4650508b370fc77cd2599d2638",
        "width": 952,
        "height": 870,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:10:56Z",
        "tags": [],
        "bytes": 24525,
        "type": "upload",
        "etag": "4bb529a221b2ebeaea84bcd2e254a8ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683299456/avalanche2023spring/ms0twqfyq925p4fxa31x.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683299456/avalanche2023spring/ms0twqfyq925p4fxa31x.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "007264df9d1279196e293b260c91d2c3",
        "public_id": "avalanche2023spring/pfey9incyktqyrqqgmuv",
        "version": 1683299460,
        "version_id": "8a8c2eafe08a35c9de3f380ce9359841",
        "signature": "e467fc0206e54051800c3f0b03c177e8f2b0e56d",
        "width": 1222,
        "height": 861,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:11:00Z",
        "tags": [],
        "bytes": 65386,
        "type": "upload",
        "etag": "f24b39c96595b65fa58146d6fcda5349",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683299460/avalanche2023spring/pfey9incyktqyrqqgmuv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683299460/avalanche2023spring/pfey9incyktqyrqqgmuv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:00.99Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T13:23:48.607Z" }
      }
    ],
    "title": "",
    "description": "A futuristic pod/flower castle!!!My first ever Individual challenge!!",
    "code": "//color (\"LimeGreen\") {\n//    square([200000,200000],true);\n//}\n\n\n$fn=4;\n// Define brick\nbrick_length = 10;\nbrick_height = 5;\nbrick_depth = 30;\n// Define ring\nbricks_per_ring = 20;\ncircumference_ring = brick_length*bricks_per_ring-300;\nradius_ring = circumference_ring/(2*PI);\nradius_ring_plus_space = radius_ring+90;\n// Define wall\nnumber_of_rings = 60;\n\nmodule wall_ring () {\n    for (r = [0:bricks_per_ring]) {\n        rotate([0,0,4/bricks_per_ring*r]) translate([0,radius_ring_plus_space,0]) cube([  brick_length,brick_depth,brick_height],false);\n    }\n}\nmodule wall() {\n    for (l = [0:number_of_rings]) {\n        rotate([0,0,180/bricks_per_ring*l]) translate([0,0,(brick_height)*l]) wall_ring();\n    }\n}\n\nwall();\n\n// Archi\nmodule top () {\n    for (i = [0:180]) {\n//    rotate([i,-i,i]) \n    rotate([0,0,0])\n    translate([0,0,0]) rotate([i*0.05,i*0.1,i]) sphere(30);\n    }\n}\n\n\n\nmodule soft_ice(height) {\n\nlinear_extrude(height = height, twist = -180, scale = 0, center = false, slices = 800)\ncircle(10, center = true, $fn=8);\n}\n\n\n\nmodule banana() {\n    for (i = [0:180]) {\n        translate([sin(i)*40,0,i*3]) \n        rotate([0,0,0]) \n        sphere(sin(i)*10);\n    }\n}\n\nmodule spiky_tower_base() {\n    for (i = [0:4]) {\n        rotate(-360/5*i,0,0)\n        translate([47,0,0])\n        rotate([0,7,180]) \n        banana();\n    }\n}\n\nspiky_tower_base();\n\ntranslate([0,0,190]) sphere(15, $fn=9);\nmodule spike() {\n    for (i = [0:130]) {\n        translate([sin(i)*5,0,i*0.18]) \n        rotate([0,0,0]) \n        sphere(sin(i)*4.5);\n    }\n}\n\nmodule center_spike() {\n    translate([-46,0,45]) rotate([0,100,0]) spike();\n}\n\nmodule spiky_crown(number, translate, rotate) {\n    for (i = [0:(number-1)]) {\n        rotate(-360/number*i,0,0)\n        translate([translate,0,0])\n        rotate([0,rotate,180]) \n        center_spike();\n    }\n}\n\n\ntranslate([0,0,150]) spiky_crown(number=40, translate=0, rotate=10);\ntranslate([0,0,155]) spiky_crown(number=20, translate=0, rotate=20);\n\ntranslate([0,0,158]) spiky_crown(number=3, translate=4, rotate=30);",
    "comments": []
  },
  {
    "_id": "7T84Rftjxkdt3nKiW",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T17:07:58.104Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4bd4f69a75d30577f84480a6ccb92f50",
        "public_id": "avalanche2023spring/dm4lyll7vjlecsqfb4h9",
        "version": 1678381694,
        "version_id": "bd1e642703bb45ca947de3f99b728e5c",
        "signature": "a108a08fa494fa7bae7816441b2eceb303cc5a28",
        "width": 796,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T17:08:14Z",
        "tags": [],
        "bytes": 486707,
        "type": "upload",
        "etag": "7c1d660ea855eeec876ca6921baeaad6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678381694/avalanche2023spring/dm4lyll7vjlecsqfb4h9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678381694/avalanche2023spring/dm4lyll7vjlecsqfb4h9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T18:59:39.832Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:39.887Z" }
      }
    ],
    "title": "",
    "description": "WEEK 6 (1/4): Minecraft Block ( I was following some tutorial on pixels to refresh my memory and I did it soooo wrong but ended up with this)",
    "comments": []
  },
  {
    "_id": "7dHSR6iZ5DwiwDiEy",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-19T21:15:34.367Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "badd17568e6893e65f409712d5ed4ece",
        "public_id": "avalanche2023spring/yxbcibvrubyetiwa4zlt",
        "version": 1681938972,
        "version_id": "1a8440b37f467d0919bdd4292d20b034",
        "signature": "c3b34036a357b036d20a1465a5919acab236f4b1",
        "width": 2073,
        "height": 2100,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T21:16:12Z",
        "tags": [],
        "bytes": 7776796,
        "type": "upload",
        "etag": "1eeeed874bed9770478a236a1dfd60f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681938972/avalanche2023spring/yxbcibvrubyetiwa4zlt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681938972/avalanche2023spring/yxbcibvrubyetiwa4zlt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d979e4a267104feca8922d2384ab50ca",
        "public_id": "avalanche2023spring/vxtbvjjh1jp7rrryri0v",
        "version": 1681938976,
        "version_id": "3de05facb6b72434d53d433c67675d25",
        "signature": "53ab67339f5355aa479ba12d4c36c4687a4112ae",
        "width": 2073,
        "height": 2100,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T21:16:16Z",
        "tags": [],
        "bytes": 7805694,
        "type": "upload",
        "etag": "acf127246fed0cf617532ec008f74ba4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681938976/avalanche2023spring/vxtbvjjh1jp7rrryri0v.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681938976/avalanche2023spring/vxtbvjjh1jp7rrryri0v.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T06:44:17.702Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T17:58:51.134Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T22:41:28.253Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:59:36.561Z" }
      }
    ],
    "title": "",
    "description": "\"Planetary Intelligence\" I gave the same prompt to midjourney again and again and eventually they all came out looking similar aesthetics.",
    "comments": []
  },
  {
    "_id": "7kmeCRmK52Nw3E66D",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T05:07:35.046Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1118766df858bb5b89694f28a52bb144",
        "public_id": "avalanche2023spring/xqtsgucqmzosfajbr6iz",
        "version": 1682053797,
        "version_id": "03502c1b7007131000a4d8c2e02ee062",
        "signature": "2baef6a028a2347a03f2dd5eafd63736a73c6c16",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T05:09:57Z",
        "tags": [],
        "bytes": 153440,
        "type": "upload",
        "etag": "ba5d6d2ab5f5efd80e0269ea9663c6e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682053797/avalanche2023spring/xqtsgucqmzosfajbr6iz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682053797/avalanche2023spring/xqtsgucqmzosfajbr6iz.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "672125f115442b5995e9efbd23386b8c",
        "public_id": "avalanche2023spring/dbmx9mfuzjdlfcmr8xxc",
        "version": 1682053823,
        "version_id": "c994df320b492e7b2da06f23df903d21",
        "signature": "2e4e0a0c71a9556c61587e262e03c541c9514138",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T05:10:23Z",
        "tags": [],
        "bytes": 114963,
        "type": "upload",
        "etag": "ff67a46935a74b28e0953d1c5748c743",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682053823/avalanche2023spring/dbmx9mfuzjdlfcmr8xxc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682053823/avalanche2023spring/dbmx9mfuzjdlfcmr8xxc.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0a9bef07beebc0fea52f41835fab7177",
        "public_id": "avalanche2023spring/i7agfoykmxyrshupw2it",
        "version": 1682053847,
        "version_id": "a987a927c8877cea0e7772d0ab8be731",
        "signature": "c87a8829a38582eccca2b2cf5350d1c704ab3d90",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T05:10:47Z",
        "tags": [],
        "bytes": 156695,
        "type": "upload",
        "etag": "0c8f591b1d65582d31a791c7cd88574d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682053847/avalanche2023spring/i7agfoykmxyrshupw2it.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682053847/avalanche2023spring/i7agfoykmxyrshupw2it.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:42:41.571Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-21T16:07:01.706Z" }
      }
    ],
    "title": "",
    "description": "Stable Diffusion is Midjourney's weird cousin. I asked it to place known characters, like Shrek and Mario (lol) in different scenarios. The results were INTERESTING. Stable Diffusion REALLY wants Princess Peach to have a moustache. I even used a negative prompt, saying that Princess Peach should not have a moustache, but it didn't always listen. The second image is it's interpretation of Shrek and Mario eating cake together. These images sort of resemble those off brand characters/mascots that roam Times Square.",
    "comments": []
  },
  {
    "_id": "7mb5pH7tfnwNAPfK7",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T02:22:20.224Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f0b91cdc21e3e4da811fe3b039d47c53",
        "public_id": "avalanche2023spring/o6mboxes151dnkr171ck",
        "version": 1678415244,
        "version_id": "ef4195c1da24adab828fc3b79b5caf3c",
        "signature": "20339909139668b443cc6fd6a398d17b87f38d63",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-10T02:27:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 16647172,
        "type": "upload",
        "etag": "ae305dae821623cd1e5fc0b6d5e4abc9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678415244/avalanche2023spring/o6mboxes151dnkr171ck.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678415244/avalanche2023spring/o6mboxes151dnkr171ck.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678415244/avalanche2023spring/o6mboxes151dnkr171ck.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "83593",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "7091247",
          "dar": "16:9",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 7250372,
        "duration": 18.36835,
        "rotation": 0,
        "nb_frames": 1101,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:27.055Z" }
      }
    ],
    "title": "",
    "description": "Using Shrishti's prompt sketch for the pair challenge - I'm not sure if this also qualifies for Ouroboros? 😬\n\nI sped up the video quite a lot for the full effect. The video seems rather low quality - feel free to try the sketch out instead!\n\nP.S. It's a heavy sketch",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet worldImage;\nlet threshold = 180;\n\nfunction preload() {\n  worldImage = loadImage(\"world.png\");\n}\n\nfunction setup() {\n  createCanvas(750, 400);\n  pixelDensity(1);\n  rectMode(CENTER);\n  \n  frameRate(2)\n}\n\nfunction draw() {\n  background(0, 0, 0);\n  \n  noStroke()\n  \n  // threshold = abs(sin(millis()) * 255);\n\n  worldImage.loadPixels();\n\n  for (let y = 0; y < worldImage.height; y++) {\n    for (let x = 0; x < worldImage.width; x++) {\n      // console.log(x);\n      \n      t = (noise(x+y+millis())-0.5)*10-5\n      \n      const in_color = worldImage.get(x, y);\n\n      const r = red(in_color);\n      const g = green(in_color);\n      const b = blue(in_color);\n      \n       avg = (r + g + b) / 3;\n\n      let out_color;\n\n      if (avg > (threshold * 2) / 4) {\n        // if (r > threshold && g > threshold && b > threshold){\n        fill(\"red\")\n        // rect(x, y, 10, 10)\n        // out_color = color(\"red\");\n      } else if (avg > threshold / 3 && avg < (threshold * 2) / 3) {\n        // out_color = color(\"white\");\n        fill(\"white\")\n        // rect(x, y, 10, 10)\n      } else {\n        // out_color = color(\"black\");\n        fill(\"black\")\n      }\n      \n      p = map(x, 0, worldImage.width, 0, width)\n      q = map(y, 0, worldImage.height, 0, height)\n      \n      rect(p, q, 10+t, 10+t)\n      \n      // console.log(q)\n    \n      // console.log(r,g,b);\n      // let out_color;\n      // if (r > 120) {\n      //   out_color = color(\"white\");\n      // } else {\n      //   out_color = color(\"black\");\n      // }\n\n      // if (g < 100 || b > 150) {\n      //   out_color = color(\"#d97c4a\");\n      // }\n      // else if (r > 200  && b > 180) {\n      //   out_color = color(\"white\");\n      // } else\n      // {\n      //   out_color = color(\"black\");\n      // }\n\n      // worldImage.set(x, y, out_color);\n    }\n  }\n\n  // worldImage.updatePixels();\n\n  // noSmooth();\n  // image(worldImage, 0, 0, width, height);\n\n  // noLoop();\n}",
    "comments": []
  },
  {
    "_id": "7oYPZWFbzSG7DjxoC",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-15T03:47:29.961Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "59ac8e9cc22a4e198bfd663f10c7fa0d",
        "public_id": "avalanche2023spring/nsvv4xt6f92vjo5tkiik",
        "version": 1681530456,
        "version_id": "7352875d8b516ee2c0893f4d4a3c4afb",
        "signature": "d4db3755db4922d63987dc10735007bdd4ec65c8",
        "width": 1306,
        "height": 1270,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-15T03:47:36Z",
        "tags": [],
        "bytes": 262242,
        "type": "upload",
        "etag": "cb34c692116745e54f31c0642b62e73b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681530456/avalanche2023spring/nsvv4xt6f92vjo5tkiik.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681530456/avalanche2023spring/nsvv4xt6f92vjo5tkiik.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c67cdee9002935094851d70c38f90d67",
        "public_id": "avalanche2023spring/g1b7cho2m4cxiwkbkwy6",
        "version": 1681530468,
        "version_id": "e73631f8996c904277c4f75a8f2e031f",
        "signature": "39d6c4d007ed5bc394e0f95074d7619848a82158",
        "width": 1484,
        "height": 1486,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-15T03:47:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 3917318,
        "type": "upload",
        "etag": "ee9cc447402c4ec8a7ca71d412e6f380",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681530468/avalanche2023spring/g1b7cho2m4cxiwkbkwy6.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681530468/avalanche2023spring/g1b7cho2m4cxiwkbkwy6.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681530468/avalanche2023spring/g1b7cho2m4cxiwkbkwy6.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2304836",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2407570,
        "duration": 13.016667,
        "rotation": 0,
        "nb_frames": 784,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-15T19:19:33.746Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-16T00:05:08.701Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "nerdy",
        "created_at": { "$date": "2023-04-16T00:05:11.055Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-16T21:25:04.015Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T01:15:55.671Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T07:15:21.154Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T20:37:06.218Z" }
      }
    ],
    "title": "",
    "description": "🤯😧 I used ChatGPT to code a little something that I've been wanting to do for a while but didn't know how! I would say I'm very new to ChatGPT, I've only used it a few times and never for any coding before this class so a lot of it is new to me but I was impressed that it was able to do what I wanted.\n\nIt was an interesting experience and a lot of trial and error, I think for me I was learning how to phrase my inputs to get more accurate outcomes (it made me think of how you can use Google more effectively if you know what you're Googling and can use more specific terms).\n\nI was impressed by the way you can modify the code continuously by telling ChatGPT to fix something, or that something isn't working the way you want it to, and then it's able to go back and change things in the code. The commenting was also really helpful to understand what the code was doing when I wasn't familiar with something.\n\nStill a lot to explore but from a coding perspective I can see ChatGPT being a helpful tool to maybe get to a result faster than having to start coding something yourself from scratch. Once it was functioning more or less how I wanted, it was pretty simple for me to go in and tweak things. So overall I'm excited by it's potential!",
    "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Curved Text with SVG</title>\n    <style>\n      body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        background: black;\n      }\n\n      text {\n        font-family: 'Helvetica';\n        font-size: 2rem;\n        /* fill: white; */\n      }\n    </style>\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap\" rel=\"stylesheet\">\n  </head>\n  <body>\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1920 1080\">\n      <path stroke=\"black\" stroke-width=\"2\" fill=\"none\" id=\"path\"></path>\n      <text>\n        <textPath xlink:href=\"#path\" id=\"text-path\">\n          COMP FORM!\n        </textPath>\n      </text>\n    </svg>\n    <script>\n      let path = document.getElementById('path');\n      let textPath = document.getElementById('text-path');\n      let text = document.querySelector('text');\n      let isDrawing = false;\n      let pathData = '';\n\n      function onMouseMove(event) {\n        if (!isDrawing) {\n          pathData = `M ${event.clientX} ${event.clientY}`;\n          path.setAttribute('d', pathData);\n          isDrawing = true;\n        } else {\n          pathData += ` L ${event.clientX} ${event.clientY}`;\n          path.setAttribute('d', pathData);\n        }\n\n        pathLength = path.getTotalLength();\n        let startOffset = pathLength - 215;\n        textPath.setAttribute('startOffset', startOffset);\n        text.setAttribute('fill', getRandomColor());\n      }\n\n      function onMouseUp(event) {\n        isDrawing = false;\n      }\n\n      function getRandomColor() {\n        let letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n          color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n      }\n\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n    </script>\n  </body>\n</html>",
    "comments": []
  },
  {
    "_id": "7ohXTuy8bSrBtjY7H",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-10T18:54:44.413Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "83a83b6b70395b784bc99bc9f7f8e28a",
        "public_id": "avalanche2023spring/yz0tbmcwohvsuvxupmbm",
        "version": 1681152894,
        "version_id": "7c8ebaf8d9970b4b9474b25adfb191cd",
        "signature": "f841cf53258a64c59d8f17cb6e29aa7894114879",
        "width": 1194,
        "height": 1182,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-10T18:54:54Z",
        "tags": [],
        "bytes": 111176,
        "type": "upload",
        "etag": "0b887f298d51266fb67a400e65ccd919",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681152894/avalanche2023spring/yz0tbmcwohvsuvxupmbm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681152894/avalanche2023spring/yz0tbmcwohvsuvxupmbm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "486e9245a7a57ffe2081440f21547061",
        "public_id": "avalanche2023spring/xr6iklv7ijxxp12fg1ig",
        "version": 1681152897,
        "version_id": "7cf32ac6585563fda2184c5e8f8e2b6e",
        "signature": "457953ad4383ae85af227abd859d7886bf8908db",
        "width": 883,
        "height": 582,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-10T18:54:57Z",
        "tags": [],
        "bytes": 99586,
        "type": "upload",
        "etag": "211ec8ed59e2d2aa7a6926171f9a1a23",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681152897/avalanche2023spring/xr6iklv7ijxxp12fg1ig.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681152897/avalanche2023spring/xr6iklv7ijxxp12fg1ig.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "funny",
        "created_at": { "$date": "2023-04-10T21:05:33.855Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-04-11T01:18:41.055Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-11T01:18:42.409Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-12T05:58:43.672Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "funny",
        "created_at": { "$date": "2023-04-12T06:52:26.244Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T00:46:36.725Z" }
      }
    ],
    "title": "",
    "description": "Gave ChatGPT a line and asked it to come up with rhyming lines for it, then mixed them all up using Tracery to come up with nonsensical, mostly grammatically-correct rhymes.",
    "code": "// require /text/tracery.min.js\n\nconst lineGrammar = {\n    line: [\"I committed a crime, #line2#\"],\n    line2: [\"#optionA#\", \"#optionB#\"],\n    \n    optionA: [\"I'm #A1#\"],\n    A1: [\"#A1a# the #A1b#\", \"#A1c#\"],\n    A1a: [\"doing\", \"paying\"],\n    A1b: [\"fine\", \"time\"],\n    A1c: [\"in a bind\"],\n    \n    optionB: [\"#B1# #B2# #B3#\"],\n    B1: [\"my\", \"the\"],\n    B2: [\"future\", \"reputation\", \"guilt\", \"conscience\", \"forgiveness\", \"regret\", \"redemption\", \"freedom\", \"evidence\", \"past\", \"action\", \"life\", \"punishment\", \"mistake\"],\n    B3: [\"#B3a# #B3b#\", \"#B3c#\"],\n    B3a: [\"is\", \"has been\"],\n    B3b: [\"undefined\", \"declined\", \"intertwined\", \"on my mind\", \"defined\", \"confined\", \"aligned\", \"maligned\", \"redefined\", \"outlined\", \"enshrined\"],\n    B3c: [\"reminds\"],\n};\n\nfunction main() {\n  const grammar = tracery.createGrammar(lineGrammar);\n  const rhyme = grammar.flatten(\"#line#\");\n  display(rhyme);\n}\n\nfunction display(...strings) {\n    const div = document.createElement(\"div\");\n    div.style = `\n        display: table; \n        padding: 50px; \n        margin: 50px auto; \n        text-align: center; \n        font-family: 'Roboto', sans-serif;\n        font-size: 40px; \n        font-weight: bold; \n        text-transform: \n        uppercase; line-height: .9em;\n    `\n    div.innerText = strings.join(\"\\n\");\n    document.body.append(div);\n}\n\nsetTimeout(main, 10);",
    "comments": []
  },
  {
    "_id": "7pqxu8o7iQG6vLAhA",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T19:53:44.159Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e9d2d0bcd98ba1de0ac90207913fd994",
        "public_id": "avalanche2023spring/mpstzcolnglingwe3sb3",
        "version": 1679601234,
        "version_id": "b605eb2dd43d64d6b77fbaebb1ad4e01",
        "signature": "af615d5da67f8437a036be697323c17f141c7b7c",
        "width": 972,
        "height": 958,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-23T19:53:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 2698824,
        "type": "upload",
        "etag": "31563b135fb5d8c03d343c594ed57a59",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679601234/avalanche2023spring/mpstzcolnglingwe3sb3.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679601234/avalanche2023spring/mpstzcolnglingwe3sb3.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679601234/avalanche2023spring/mpstzcolnglingwe3sb3.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "4861144",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 4980528,
        "duration": 4.335,
        "rotation": 0,
        "nb_frames": 263,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5efdf5c679d4701218ad226d846430d9",
        "public_id": "avalanche2023spring/apvpeg9kfqtsz68gth2a",
        "version": 1679601249,
        "version_id": "38f35bed43fdca533b534d1e9b39f654",
        "signature": "018517636c14afc20ec791d1b241bfe8296d704b",
        "width": 992,
        "height": 864,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T19:54:09Z",
        "tags": [],
        "bytes": 34136,
        "type": "upload",
        "etag": "98ba9ae0a4b1ca90206bcf7cda8ce3f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679601249/avalanche2023spring/apvpeg9kfqtsz68gth2a.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679601249/avalanche2023spring/apvpeg9kfqtsz68gth2a.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "72b8a2aa6a7a4cbed352d28cf5156694",
        "public_id": "avalanche2023spring/sfyzahjkp4ncmoz5cbux",
        "version": 1679601253,
        "version_id": "16971946b64d752593c46da3c8304bfe",
        "signature": "abe2e21d0d31a6f60363c43004cdb7ef44c81b6d",
        "width": 998,
        "height": 814,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T19:54:13Z",
        "tags": [],
        "bytes": 37879,
        "type": "upload",
        "etag": "9df5cdabf2ad30c2600f91e12b58eb0e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679601253/avalanche2023spring/sfyzahjkp4ncmoz5cbux.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679601253/avalanche2023spring/sfyzahjkp4ncmoz5cbux.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:19:37.509Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:40:00.029Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T21:21:15.487Z" }
      }
    ],
    "title": "",
    "description": "gonna call this one \"the Pacman that fell in love and started a family\"",
    "code": "var Circle1 = new Path.Circle({\n\tcenter: [250, 350],\n\tradius: 150,\n\tfillColor: 'blue',\n});\nCircle1.add(position);\n\n\nvar copy1 = Circle1.clone();\ncopy1.fillColor = 'red';\ncopy1.scale(0.5);\n\nvar copy = Circle1.clone();\n// copy.radius = 100;\ncopy.fillColor = 'yellow';\ncopy.scale(0.8);\n\nfunction onFrame(event){\n     Circle1.rotate(2);\n      copy1.rotate(2);\n  copy.rotate(-2);\n\n}",
    "comments": []
  },
  {
    "_id": "7qT6F9mhhSpvxCF5e",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T16:17:23.984Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "217a68c718dde75f46d73c89b99e1ba0",
        "public_id": "avalanche2023spring/q4ohu7h3jgl23f48zk4p",
        "version": 1679588249,
        "version_id": "8e25891c0233ec3de17401bcd53f22be",
        "signature": "6c0801de883be108312eb8c9b1166a4fbcf24346",
        "width": 444,
        "height": 404,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T16:17:29Z",
        "tags": [],
        "bytes": 256005,
        "type": "upload",
        "etag": "557f0b83454695cfca560ac443b11641",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679588249/avalanche2023spring/q4ohu7h3jgl23f48zk4p.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679588249/avalanche2023spring/q4ohu7h3jgl23f48zk4p.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:34.624Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T21:23:26.248Z" }
      }
    ],
    "title": "",
    "description": "WEEK 7 (2/4): I forgot what the name of this kind of spiral is but I wanted to remake it, how cool would it be to print this one out? and the white parts be see through. It is a bunch or triangles drawn over and over again in +20 radius and +20 rotation. idk it just looked cool to do and a lot of people in class were making spirals so I was inspired.",
    "comments": []
  },
  {
    "_id": "7t9HZGCxj2Snp74S2",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T16:01:44.331Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a691d632e62165e5a9968a52b18e1cdb",
        "public_id": "avalanche2023spring/fs5aazfn2shg3bukxtor",
        "version": 1683907329,
        "version_id": "3174d33d1f5ac5138ad5031c093e1614",
        "signature": "7ab3555f4565d82e0ed1d35544f2c7b0b7fd6ec2",
        "width": 500,
        "height": 500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T16:02:09Z",
        "tags": [],
        "bytes": 20413,
        "type": "upload",
        "etag": "2b261fbbb055fcb0ca515e5f2d4f8272",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683907329/avalanche2023spring/fs5aazfn2shg3bukxtor.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683907329/avalanche2023spring/fs5aazfn2shg3bukxtor.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f56123360b9cdb0f5d518bbbf26f0820",
        "public_id": "avalanche2023spring/awgmnxkirdunduz14mks",
        "version": 1683907334,
        "version_id": "a05589d45c0a0bdd8362cb8a7ea5c2f8",
        "signature": "d2b8290afa9b811390dca9d14858978ea99cbc6d",
        "width": 500,
        "height": 500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T16:02:14Z",
        "tags": [],
        "bytes": 23119,
        "type": "upload",
        "etag": "5cfad3fbffd7f6815936b47072aa91b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683907334/avalanche2023spring/awgmnxkirdunduz14mks.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683907334/avalanche2023spring/awgmnxkirdunduz14mks.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "404d9785d338ffe64cc39fba9ab927f3",
        "public_id": "avalanche2023spring/c5jmuaw0bydff31tr4ri",
        "version": 1683907348,
        "version_id": "dd6d74847f1a7f8072f5526908a1a823",
        "signature": "c0c71b6ebb4d6da732635ebf6502297a10dbd0d5",
        "width": 548,
        "height": 728,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T16:02:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 13545314,
        "type": "upload",
        "etag": "2448e804d145aaba1959d79b87eb047d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683907348/avalanche2023spring/c5jmuaw0bydff31tr4ri.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683907348/avalanche2023spring/c5jmuaw0bydff31tr4ri.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683907348/avalanche2023spring/c5jmuaw0bydff31tr4ri.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4401418",
          "dar": "137:182",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 4407966,
        "duration": 24.583333,
        "rotation": 0,
        "nb_frames": 1475,
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Testing out some shapes for the garden challenge",
    "comments": []
  },
  {
    "_id": "7u8rQi4LGeWyiKX8X",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T04:38:25.154Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3fbc93297279c1f10e835308a06770d8",
        "public_id": "avalanche2023spring/emklaapfcyiy3akymyva",
        "version": 1676608729,
        "version_id": "bd772a5e6b07d9e5f3950c8d0c057847",
        "signature": "37d186a4859c24936282b9d5cb28aa4c7c9a09bc",
        "width": 1080,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T04:38:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 5061462,
        "type": "upload",
        "etag": "17667d785fa73a4c10098a28546a1e83",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676608729/avalanche2023spring/emklaapfcyiy3akymyva.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676608729/avalanche2023spring/emklaapfcyiy3akymyva.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676608729/avalanche2023spring/emklaapfcyiy3akymyva.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "4039668",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 4042297,
        "duration": 10.016667,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T04:44:32.894Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:00:44.898Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:46:17.472Z" }
      }
    ],
    "title": "",
    "description": "Modification off of the Tame Impala sketch. Reduced the scale of some numbers which result in this really cool soap bubble-esque orb.",
    "inspiration_name": "(ShaderPark Link)",
    "inspiration_url": "https://shaderpark.com/embed/-NGxlrmLhpSj2JmiQjTz",
    "comments": []
  },
  {
    "_id": "82ZGDFhXfrmAmsL6W",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T03:01:32.121Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6e530729b6b052e3ae90cb4586712061",
        "public_id": "avalanche2023spring/utam6uopi7klvhydz9nu",
        "version": 1676430207,
        "version_id": "3612f9fad54e7686414e161b39755e5e",
        "signature": "a73f1573faf397b496602765898b5e1affdacb24",
        "width": 1049,
        "height": 900,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-15T03:03:27Z",
        "tags": [],
        "bytes": 111604,
        "type": "upload",
        "etag": "223b5e5d479ce391ec68b1f57f400ad1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676430207/avalanche2023spring/utam6uopi7klvhydz9nu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676430207/avalanche2023spring/utam6uopi7klvhydz9nu.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T04:10:07.402Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T04:52:34.055Z" }
      }
    ],
    "title": "",
    "description": "My attempt at the individual challenge this week. I was able to have each of the corridor sections of the map change in size with a combination of noise and random. I wish I could have randomized the map generation more but I couldn't figure something out with the time that I allotted myself for this sketch.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet num = 10;\nlet n;\n\nfunction setup() {\n  createCanvas(700, 600);\n  rectMode(CENTER);\n  frameRate(4);\n}\n\nfunction draw() {\n  background(142, 212, 102);\n  \n  //base map foundation\n  \n  push();\n  fill(255, 50);\n  //noStroke();\n  stroke(1);\n  /* rect(200, 0, 50, 100);\n  rect(200, 600, 50, 100);\n  rect(100, 300, 100, 500);\n  rect(300, 300, 100, 500);\n  rect(500, 0, 50, 100);\n  rect(500, 600, 50, 100);\n  rect(400, 300, 100, 500);\n  rect(600, 300, 100, 500); */\n  pop();\n  \n  for(i = 0; i < width; i += 20) {\n    n = noise(i * frameCount);\n    //noStroke();\n    stroke(255, 255, 112);\n    fill(199, 247, 126, 80);\n    \n    //Bridges\n    \n    rect(350, 100, 600 * n, 100 * n);\n    rect(350, 500, 600 * n, 100 * n);\n    \n    // Floor manipulation through noise\n    \n    rect(200, 0, 50, 100 * n * 2);\n    rect(200, 600, 50, 100 * n * 2);\n    rect(100, 300, 100, 500 * n / (random(1.3, 1.7)));\n    rect(300, 300, 100, 500 * n / (random(1, 2)));\n    rect(500, 0, 50, 100 * n * 2);\n    rect(500, 600, 50, 100* n * 2);\n    rect(400, 300, 100, 500 * n / (random(1, 2.5)));\n    rect(600, 300, 100, 500 * n / (random(1.2, 3)));\n    \n    //Red dot treasure location\n    \n    noStroke();\n    fill(255, 0, 0, random(0, 100));\n    ellipse(125, 375, 25, 25);\n    \n    //Red dot recording button\n    \n    ellipse(150, 25, 10, 10);\n  }\n  \n  //screen flickering\n  \n  for(i = 0; i < num; i++) {\n    fill(125, 50);\n    noStroke();\n    translate(random(0, 255));\n    rect(floor(random(-10, 150)) * 5, floor(random(-10, 150)) * 5, 300, 50); \n  }\n  \n  stroke(255, 255, 112);\n  strokeWeight(3);\n  \n  push();\n  translate(-25, -25);\n  \n  line(50, 50, 150, 50);\n  line(50, 50, 50, 150);\n  pop();\n  \n  push();\n  translate(625, -25);\n  \n  line(50, 50, -50, 50);\n  line(50, 50, 50, 150);\n  pop();\n  \n  push();\n  translate(-25, 525);\n  \n  line(50, 50, 150, 50);\n  line(50, 50, 50, -50);\n  pop();\n\n  push();\n  translate(625, 525);\n  \n  line(50, 50, -50, 50);\n  line(50, 50, 50, -50);\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "84v76kLBpGC2z7LFs",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T17:08:38.773Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "87D6J6E4cqHNPXy3B",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T14:45:02.893Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5edc4a7a565bc8c9eedf15734b60e440",
        "public_id": "avalanche2023spring/tznxh5eimofxthjfxcce",
        "version": 1678459581,
        "version_id": "a99d4844e3ad41b4a0ea6bb0b693810d",
        "signature": "2827a86d67ce4467b3ebdc26aafa2b44f6534184",
        "width": 588,
        "height": 444,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-10T14:46:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 1492851,
        "type": "upload",
        "etag": "6393cccfa78617e91e99aaa2d2f4aac6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678459581/avalanche2023spring/tznxh5eimofxthjfxcce.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678459581/avalanche2023spring/tznxh5eimofxthjfxcce.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678459581/avalanche2023spring/tznxh5eimofxthjfxcce.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "625023",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 626360,
        "duration": 19.066667,
        "rotation": 0,
        "nb_frames": 573,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T15:50:06.62Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T15:54:13.514Z" }
      }
    ],
    "title": "",
    "description": "Inspired fro Daniel Shiffman's bright video code!!! Love creating with pixels. Using pixel with video!",
    "code": "// Daniel Shiffman\n// https://youtu.be/rNqaw8LT2ZU\n// http://thecodingtrain.com\n\nvar video;\n\nvar vScale = 16;\n\nfunction setup() {\n  createCanvas(640, 480);\n  pixelDensity(1);\n  video = createCapture(VIDEO);\n  video.size(width / vScale, height / vScale);\n}\n\nfunction draw() {\n  background(51);\n  video.loadPixels();\n  for (var y = 0; y < video.height; y++) {\n    for (var x = 0; x < video.width; x++) {\n      var index = (video.width - x + 1 + (y * video.width)) * 4;\n      var r = video.pixels[index + 0];\n      var g = video.pixels[index + 1];\n      var b = video.pixels[index + 2];\n      var bright = r + g + b;\n     var w = map(bright, 0, 255, 0, vScale);\n      noStroke();\n      fill(255);\n      rectMode(CENTER);\n      rect(x * vScale, y * vScale, w, w);\n    }\n  }\n\n}",
    "comments": []
  },
  {
    "_id": "87MXwTmo62LwjRHF8",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T18:43:39.394Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "abc2b4dfe8719ce548e6842688b01843",
        "public_id": "avalanche2023spring/sxiwvsnux96wn9vmkvl4",
        "version": 1680806751,
        "version_id": "db843f0748baad8f4851c45d16848473",
        "signature": "aab7bb99bbaff778b46de0d7e905590904e7b66d",
        "width": 1668,
        "height": 856,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T18:45:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 14390950,
        "type": "upload",
        "etag": "699a8b592099aa35c6a4d29379581e6d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680806751/avalanche2023spring/sxiwvsnux96wn9vmkvl4.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680806751/avalanche2023spring/sxiwvsnux96wn9vmkvl4.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680806751/avalanche2023spring/sxiwvsnux96wn9vmkvl4.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "8072106",
          "dar": "417:214",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 8310261,
        "duration": 13.853667,
        "rotation": 0,
        "nb_frames": 844,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c6840084e157638ed2b95217b1f79b51",
        "public_id": "avalanche2023spring/i23rlvkgjogj4dnld6pw",
        "version": 1680806807,
        "version_id": "509c2720660a5ee6c715846c479abc9b",
        "signature": "6471a5435cdc569301004bfe1c0cec8f27385c7a",
        "width": 1630,
        "height": 838,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-06T18:46:47Z",
        "tags": [],
        "bytes": 290262,
        "type": "upload",
        "etag": "5c1bc50e355f1872bab2743b4c745baa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680806807/avalanche2023spring/i23rlvkgjogj4dnld6pw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680806807/avalanche2023spring/i23rlvkgjogj4dnld6pw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:46:45.324Z" }
      }
    ],
    "title": "",
    "description": "I wanted to explore the camera function in p5.play, so I studied the tutorial on the website and brought the bunny character back for an Easter egg hunt. Would love to add some sort of animation when the bunny collides with the Easter egg",
    "comments": []
  },
  {
    "_id": "8DzbDoYXKboXMYv9r",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-26T19:20:20.846Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cb2ce5b32443e569f666022c439472ac",
        "public_id": "avalanche2023spring/fduseubjyrugrymcut2q",
        "version": 1677439225,
        "version_id": "1d6c33fdef07a6ea9ecad2a7423d4182",
        "signature": "a5dac20d0d3511855c6edf39282924e16b7a4e4e",
        "width": 802,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-26T19:20:25Z",
        "tags": [],
        "bytes": 62548,
        "type": "upload",
        "etag": "98706f84beca14388b8e02bde2087879",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677439225/avalanche2023spring/fduseubjyrugrymcut2q.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677439225/avalanche2023spring/fduseubjyrugrymcut2q.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "05b54308a9c0903e1637032beb079ce7",
        "public_id": "avalanche2023spring/v8ibmythjzqdzaebcy06",
        "version": 1677439229,
        "version_id": "8795d55195bca9761477fa9897bd7ddb",
        "signature": "0c8020b39c5bbb63d3313bab44bd2091d9e19473",
        "width": 802,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-26T19:20:29Z",
        "tags": [],
        "bytes": 71704,
        "type": "upload",
        "etag": "bd221535242b84fe1aad85065a20e00b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677439229/avalanche2023spring/v8ibmythjzqdzaebcy06.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677439229/avalanche2023spring/v8ibmythjzqdzaebcy06.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "20f74709e9c86f8cd6145d1badc2298e",
        "public_id": "avalanche2023spring/y2b3uiimu0ryslylznbd",
        "version": 1677439237,
        "version_id": "c40487476b261ec8aa0d4584ba83af04",
        "signature": "bba86b0ec907f6703ff0a3a472e10d41eee78f1b",
        "width": 802,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-26T19:20:37Z",
        "tags": [],
        "bytes": 64446,
        "type": "upload",
        "etag": "ba9c37903440b6db22f104600fd4be27",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677439237/avalanche2023spring/y2b3uiimu0ryslylznbd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677439237/avalanche2023spring/y2b3uiimu0ryslylznbd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "First, second and third attempts at the challenge - I used culling placement for this. I wanted to try the tighten code from the text book but I couldn't get it to work very well (wasn't able to debug why)",
    "comments": []
  },
  {
    "_id": "8GoyMAZ8zJkZDg2yj",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-22T21:05:13.328Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a5771ec05987f297146a9e3b6d02bd12",
        "public_id": "avalanche2023spring/enebi1sfi8rhmepqbt04",
        "version": 1677099934,
        "version_id": "708cb1140c509bc840949342024156d9",
        "signature": "12c8721d95836228fb557fef8fb517240e548907",
        "width": 1812,
        "height": 1604,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-22T21:05:34Z",
        "tags": [],
        "bytes": 9243521,
        "type": "upload",
        "etag": "5df2bdd551e93e2b1349fc93eff28e74",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677099934/avalanche2023spring/enebi1sfi8rhmepqbt04.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677099934/avalanche2023spring/enebi1sfi8rhmepqbt04.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ba09f8ccfcc347d19ee6526dca7d47e0",
        "public_id": "avalanche2023spring/wn8ilfnybmp7vv9swjbr",
        "version": 1677099942,
        "version_id": "c23fa2399ba93d1c206bd0c8a29cd727",
        "signature": "c0b54747cb42dcaeca53d91160fe8ed0b89d3130",
        "width": 1586,
        "height": 1586,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-22T21:05:42Z",
        "tags": [],
        "bytes": 5322975,
        "type": "upload",
        "etag": "164dd2f6c3a2d426ea98ddce2ee0aba6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677099942/avalanche2023spring/wn8ilfnybmp7vv9swjbr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677099942/avalanche2023spring/wn8ilfnybmp7vv9swjbr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T03:06:01.909Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T14:56:27.168Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:29.871Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:16:08.816Z" }
      }
    ],
    "title": "",
    "description": "I put a sketch in Photoshop to make the colors brighter. I was building off my noise map sketch from last week. The second picture is the original.",
    "comments": []
  },
  {
    "_id": "8KRpk45xvJrRi9qh6",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T16:19:09.323Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a1f33102691a3d43319c1dd016bd3dc0",
        "public_id": "avalanche2023spring/bhimeo5wpndn27i5mcfm",
        "version": 1676045980,
        "version_id": "488365412f6c6d5599fc12ed121e9e67",
        "signature": "c65ef80902f5bb4124df20167342b206724e0e6e",
        "width": 1492,
        "height": 1334,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-10T16:19:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 2961489,
        "type": "upload",
        "etag": "64020bcc5b4384522b4170951f39c52c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676045980/avalanche2023spring/bhimeo5wpndn27i5mcfm.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676045980/avalanche2023spring/bhimeo5wpndn27i5mcfm.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "5086240",
          "dar": "746:667",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 5150415,
        "duration": 4.6,
        "rotation": 0,
        "nb_frames": 278,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7e848770edac4626d30d640647a37cd0",
        "public_id": "avalanche2023spring/yumlgzzdmy2qfui8dqvw",
        "version": 1676045983,
        "version_id": "62f1a3641fc1eac3921f196f29330b8a",
        "signature": "e3aa0f5192c39efbe388c6eab572847b8c629b80",
        "width": 1190,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T16:19:43Z",
        "tags": [],
        "bytes": 139224,
        "type": "upload",
        "etag": "f7d2f4e149f402b0599df0e132ab898c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676045983/avalanche2023spring/yumlgzzdmy2qfui8dqvw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676045983/avalanche2023spring/yumlgzzdmy2qfui8dqvw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T16:47:39.978Z" }
      }
    ],
    "title": "",
    "description": "More rain 🌧",
    "comments": []
  },
  {
    "_id": "8LrxJqAmhQNysA6Yq",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T05:53:28.657Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e88d5476929420fd2b3d6a595ca439ca",
        "public_id": "avalanche2023spring/qvhn5e7seggpupnbvsxv",
        "version": 1680242211,
        "version_id": "e62dd0a40eb88126632c716780300147",
        "signature": "c1387c9e7d3107ab24266a0bf2f0567111256619",
        "width": 3584,
        "height": 1818,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T05:56:51Z",
        "tags": [],
        "bytes": 483553,
        "type": "upload",
        "etag": "950d20c23eb3e50f917698502ac67f02",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680242211/avalanche2023spring/qvhn5e7seggpupnbvsxv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680242211/avalanche2023spring/qvhn5e7seggpupnbvsxv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Failed Attempt at making something new out of example code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\nconst synth = new Tone.Synth().toMaster();\nconst notes = [\"C2\", \"D2\", \"E2\", \"F2\", \"G2\", \"A2\", \"B2\"];\nlet tempo = 120;\nlet sequence = [];\n\nfunction generateSequence() {\n  sequence = [];\n  const length = Math.floor(Math.random() * 16) + 4;\n  for (let i = 0; i < length; i++) {\n    const noteIndex = Math.floor(Math.random() * notes.length);\n    const note = notes[noteIndex];\n    sequence.push(note);\n  }\n}\n\nfunction playSequence() {\n  let index = 0;\n  const loop = new Tone.Loop((time) => {\n    const note = sequence[index];\n    synth.triggerAttackRelease(note, \"8n\", time);\n    index++;\n    if (index >= sequence.length) {\n      index = 0;\n    }\n  }, \"8n\");\n  loop.start(0);\n}\n\nfunction changeTempo() {\n  tempo += Math.floor(Math.random() * 20) - 10;\n  if (tempo < 60) {\n    tempo = 60;\n  } else if (tempo > 200) {\n    tempo = 200;\n  }\n  Tone.Transport.bpm.value = tempo;\n}\n\nwindow.onclick = () => {\n  generateSequence();\n  playSequence();\n  changeTempo();\n};\n\nconsole.log(\"click for music!\");",
    "comments": []
  },
  {
    "_id": "8NPdnWYmjLrvp9TTC",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T04:17:08.363Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "50c86223ca95e0d7af513e6988ea4cbc",
        "public_id": "avalanche2023spring/tknmnysunuexlk9fgxg1",
        "version": 1675311438,
        "version_id": "3c53475b5367b0b2842e3797c4b01a87",
        "signature": "0eafb7608518aaf993ff41f54e7748f98731c61f",
        "width": 1200,
        "height": 1204,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-02T04:17:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 7014953,
        "type": "upload",
        "etag": "644aa29c3a1715be10563589a369e726",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675311438/avalanche2023spring/tknmnysunuexlk9fgxg1.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675311438/avalanche2023spring/tknmnysunuexlk9fgxg1.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1634722",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 1711833,
        "duration": 32.783333,
        "rotation": 0,
        "nb_frames": 1969,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T16:11:40.623Z" }
      }
    ],
    "title": "",
    "description": "Some more typography! \nRandom Exploration in p5.js😊\n\nBut beware of the code it is still super messy and inefficient!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\n\n\nlet font_one;\nlet fontSize = 100;\nlet point_amount = 0.3;\n\nlet e_letter;\nlet d_letter;\nlet u_letter;\nlet c_letter;\nlet a_letter;\nlet t_letter;\nlet i_letter;\nlet o_letter;\nlet n_letter;\n\nlet enumber = 1;\nlet dnumber = 1;\nlet unumber = 1;\nlet cnumber = 1;\nlet anumber = 1;\nlet tnumber = 1;\nlet inumber = 1;\nlet onumber = 1;\nlet nnumber = 1;\n\n\nlet x_location;\nlet y_location;\n\nfunction preload() {\n  font_one = loadFont(\"CaslonOS-Regular.otf\");\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  textFont(font_one);\n  textSize(fontSize);\n\n  x = width / 2 - 80;\n  y = height / 2 + 65;\n\n  // the amount of points have to be exactly the same for both letters, therefore we need to make the SampleFactor different for both letters (match it perfectly)\n\n  e_letter = font_one.textToPoints(\"E\", 100, 100, fontSize, {\n    sampleFactor: 0.35,\n  });\n  d_letter = font_one.textToPoints(\"D\", 300, 100, fontSize, {\n    sampleFactor: 0.365,\n  });\n  u_letter = font_one.textToPoints(\"U\", 500, 100, fontSize, {\n    sampleFactor: 0.383,\n  });\n  c_letter = font_one.textToPoints(\"C\", 100, 300, fontSize, {\n    sampleFactor: 0.405,\n  });\n  a_letter = font_one.textToPoints(\"A\", 300, 300, fontSize, {\n    sampleFactor: 0.395,\n  });\n  t_letter = font_one.textToPoints(\"T\", 500, 300, fontSize, {\n    sampleFactor: 0.438,\n  });\n  i_letter = font_one.textToPoints(\"I\", 125, 500, fontSize, {\n    sampleFactor: 0.76,\n  });\n  o_letter = font_one.textToPoints(\"O\", 300, 500, fontSize, {\n    sampleFactor: 0.3745,\n  });\n  n_letter = font_one.textToPoints(\"N\", 500, 500, fontSize, {\n    sampleFactor: 0.322,\n  });\n}\n\nfunction draw() {\n    // enumber -= 1;\n    // dnumber -= 1;\n    // unumber -= 1;\n    // cnumber -= 1;\n    // anumber -= 1;\n    // tnumber -= 1;\n    // inumber -= 1;\n    // onumber -= 1;\n    // nnumber -= 1;\n  \n  // A\n  if (mouseX>0 && mouseX<200 && mouseY>0 && mouseY<200){\n    enumber += 4;\n    dnumber += 2;\n    unumber -= 3;\n    cnumber += 2;\n    anumber -= 3;\n    tnumber -= 3;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  //B\n  if (mouseX>200 && mouseX<400 && mouseY>0 && mouseY<200){\n    enumber += 2;\n    dnumber += 4;\n    unumber += 2;\n    cnumber -= 3;\n    anumber += 2;\n    tnumber -= 3;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  //C\n  if (mouseX>400 && mouseX<600 && mouseY>0 && mouseY<200){\n    enumber -= 3;\n    dnumber += 1;\n    unumber += 2;\n    cnumber -= 3;\n    anumber -= 3;\n    tnumber += 1;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  // D\n  if (mouseX>0 && mouseX<200 && mouseY>200 && mouseY<400){\n    enumber += 1;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber += 2;\n    anumber += 1;\n    tnumber -= 3;\n    inumber += 1;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  //E\n  if (mouseX>200 && mouseX<400 && mouseY>200 && mouseY<400){\n    enumber -= 3;\n    dnumber += 1;\n    unumber -= 3;\n    cnumber += 2;\n    anumber += 2;\n    tnumber += 1;\n    inumber -= 3;\n    onumber += 1;\n    nnumber -= 3;\n  }\n  \n  //F\n  if (mouseX>400 && mouseX<600 && mouseY>200 && mouseY<400){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber += 1;\n    cnumber -= 3;\n    anumber += 1;\n    tnumber += 2;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber += 1;\n  }\n  // G\n  if (mouseX>0 && mouseX<200 && mouseY>400 && mouseY<600){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber += 1;\n    anumber -= 3;\n    tnumber -= 3;\n    inumber += 2;\n    onumber += 1;\n    nnumber -= 3;\n  }\n  \n  //H\n  if (mouseX>200 && mouseX<400 && mouseY>400 && mouseY<600){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber -= 3;\n    anumber += 1;\n    tnumber -= 3;\n    inumber += 1;\n    onumber += 2;\n    nnumber += 1;\n  }\n  \n  //I\n  if (mouseX>400 && mouseX<600 && mouseY>400 && mouseY<600){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber -= 3;\n    anumber -= 3;\n    tnumber += 1;\n    inumber -= 3;\n    onumber += 1;\n    nnumber += 2;\n  }\n  \n  if (enumber < 1){\n    enumber = 1;\n  }\n  if (dnumber < 1){\n    dnumber = 1;\n  }\n  if (unumber < 1){\n    unumber = 1;\n  }\n  if (cnumber < 1){\n    cnumber = 1;\n  }\n  if (anumber < 1){\n    anumber = 1;\n  }\n  if (tnumber < 1){\n    tnumber = 1;\n  }\n  if (inumber < 1){\n    inumber = 1;\n  }\n  if (onumber < 1){\n    onumber = 1;\n  }\n  if (nnumber < 1){\n    nnumber = 1;\n  }\n  \n  if (enumber > e_letter.length-20){\n    enumber = e_letter.length-20;\n  }\n  if (dnumber > e_letter.length-20){\n    dnumber = e_letter.length-20;\n  }\n  if (unumber > e_letter.length-20){\n    unumber = e_letter.length-20;\n  }\n  if (cnumber > e_letter.length-20){\n    cnumber = e_letter.length-20;\n  }\n  if (anumber > e_letter.length-20){\n    anumber = e_letter.length-20;\n  }\n  if (tnumber > e_letter.length-20){\n    tnumber = e_letter.length-20;\n  }\n  if (inumber > e_letter.length-20){\n    inumber = e_letter.length-20;\n  }\n  if (onumber > e_letter.length-20){\n    onumber = e_letter.length-20;\n  }\n  if (nnumber > e_letter.length-20){\n    nnumber = e_letter.length-20;\n  }\n  \n  background(220);\n  textAlign(CENTER);\n  // text(\"EDUCATION\", width/2, 187)\n  strokeWeight(1);\n  push();\n  fill(\"black\")\n  translate(-40, 35)\n\n  // E\n  beginShape();\n  for (i = 0; i < e_letter.length; i += enumber) {\n    vertex(e_letter[i].x, e_letter[i].y);\n  }\n  endShape();\n\n  // D\n  beginShape();\n  for (i = 0; i < e_letter.length; i += dnumber) {\n    vertex(d_letter[i].x, d_letter[i].y);\n  }\n  endShape();\n\n  // U\n  beginShape();\n  for (i = 0; i < e_letter.length; i += unumber) {\n    vertex(u_letter[i].x, u_letter[i].y);\n  }\n  endShape();\n\n  // C\n  beginShape();\n  for (i = 0; i < e_letter.length; i += cnumber) {\n    vertex(c_letter[i].x, c_letter[i].y);\n  }\n  endShape();\n\n  // A\n  beginShape();\n  for (i = 0; i < e_letter.length; i += anumber) {\n    vertex(a_letter[i].x, a_letter[i].y);\n  }\n  endShape();\n\n  // T\n  beginShape();\n  for (i = 0; i < e_letter.length; i += tnumber) {\n    vertex(t_letter[i].x, t_letter[i].y);\n  }\n  endShape();\n\n  // I\n  beginShape();\n  for (i = 0; i < e_letter.length; i += inumber) {\n    vertex(i_letter[i].x, i_letter[i].y);\n  }\n  endShape();\n\n  // O\n  beginShape();\n  for (i = 0; i < e_letter.length; i += onumber) {\n    vertex(o_letter[i].x, o_letter[i].y);\n  }\n  endShape();\n\n  // N\n  beginShape();\n  for (i = 0; i < e_letter.length; i += nnumber) {\n    vertex(n_letter[i].x, n_letter[i].y);\n  }\n  endShape();\n\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "8XKDN8YwaKSgvqQ4i",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-19T23:14:11.567Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "67f0d55bc9574f0980f7665ff6255337",
        "public_id": "avalanche2023spring/ypdxwqlngxa2n9mrnfoa",
        "version": 1679267661,
        "version_id": "299340e49eeef0efa7209e551ee9edb7",
        "signature": "09a18f2f65a6becb08314e667df75df569e63ef2",
        "width": 750,
        "height": 749,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-19T23:14:21Z",
        "tags": [],
        "bytes": 26271,
        "type": "upload",
        "etag": "cb2f75526d949645eaf9fa8bdd28dd64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679267661/avalanche2023spring/ypdxwqlngxa2n9mrnfoa.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679267661/avalanche2023spring/ypdxwqlngxa2n9mrnfoa.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:04.799Z" }
      }
    ],
    "title": "",
    "description": "Basic experimentations/learning with paper js that I did over Spring Break. A lot of my time that went into this sketch was learning the syntax for paper and getting things to appear.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar boundary = new Rectangle(new Point(0, 0), new Point(500, 500));\nvar rect1 = new Path.Rectangle(boundary);\nrect1.fillColor = \"grey\";\n\nvar circle1Location = new Point(250, 250);\nvar circle1 = new Path.Circle(circle1Location, 100);\ncircle1.fillColor = \"red\";\n\nvar circle2Location = new Point(400, 400);\nvar circle2 = new Path.Circle(circle2Location, 50);\ncircle2.fillColor = \"#ebc265\";\n\nvar rect1 = new Rectangle(new Point(10, 20), new Size(100, 200));\nvar rect1path = new Path.Rectangle(rect1);\nrect1path.fillColor = \"#3252a8\";\n\nvar rect2 = new Rectangle(new Point(390, 20), new Size(100, 200));\nvar rect2path = new Path.Rectangle(rect2);\nrect2path.fillColor = \"#36cf52\";\n\nvar rect3 = new Rectangle(new Point(10, 390), new Size(200, 100));\nvar rect3path = new Path.Rectangle(rect3);\nrect3path.fillColor = \"#e3da36\";\n\nconsole.log(\"Hello, Paper\");",
    "comments": []
  },
  {
    "_id": "8aWLfw3ENLr35JSRo",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-31T07:50:53.827Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4d10131a8f86f626209df8ed7971fddf",
        "public_id": "avalanche2023spring/znhycfslmq7yjp6euina",
        "version": 1675151528,
        "version_id": "c8d5e5c6b85fd20cb40804387639a394",
        "signature": "d293384d675a58c10d2384ee786af8e13737d8a9",
        "width": 1176,
        "height": 1502,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-31T07:52:08Z",
        "tags": [],
        "bytes": 337247,
        "type": "upload",
        "etag": "25fc3c572b8acf1f828039a75ea816e0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675151528/avalanche2023spring/znhycfslmq7yjp6euina.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675151528/avalanche2023spring/znhycfslmq7yjp6euina.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T13:57:09.922Z" }
      }
    ],
    "title": "",
    "description": "https://music.apple.com/us/playlist/while-you-were-sketching/pl.u-8aAVodVuoBjrPYk",
    "inspiration_url": "https://music.apple.com/us/playlist/while-you-were-sketching/pl.u-8aAVodVuoBjrPYk",
    "comments": []
  },
  {
    "_id": "8bXjMxpY4MRh8or6A",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T16:25:05.586Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a96374ee72d11a03f8da76b0f2ae42d5",
        "public_id": "avalanche2023spring/yogmqfczswalafnvxwtx",
        "version": 1682094311,
        "version_id": "000ec93a49bf9fa8fba6df352864d3fe",
        "signature": "69a0a427f8c614eaf5f72239cc473ae612042b4c",
        "width": 1364,
        "height": 1366,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T16:25:11Z",
        "tags": [],
        "bytes": 4663552,
        "type": "upload",
        "etag": "45e698ef501f8dfc13d41392d39ba6f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682094311/avalanche2023spring/yogmqfczswalafnvxwtx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682094311/avalanche2023spring/yogmqfczswalafnvxwtx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ed55d17ddf3ee6f556938f1c8e6bbe76",
        "public_id": "avalanche2023spring/im5rcwyrscmg2fs4pmha",
        "version": 1682094420,
        "version_id": "cf944e3a1e88f697776f79630e979337",
        "signature": "5267ce469511c141832576d2fab75e4b3067f501",
        "width": 1524,
        "height": 976,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T16:27:00Z",
        "tags": [],
        "bytes": 560954,
        "type": "upload",
        "etag": "2e71b3a6e5f2cd1b4c7b535f642c88af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682094420/avalanche2023spring/im5rcwyrscmg2fs4pmha.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682094420/avalanche2023spring/im5rcwyrscmg2fs4pmha.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:38:22.229Z" }
      }
    ],
    "title": "",
    "description": "WEEK 11 (4/4): I forgot to post this but I wanted to see what a variety of these AI's do so I played with nearly all of them this week from RIZZGPT, CATGPT, a lot of image generating ones since midjourney was trying to charge me. I WANTED TO ADD THAT THEY DID AN AI CHAT FEATURE ON SNAP CHAT. I THOUGHT THAT WAS SO COOL and halfway through I was trying to get it to say something an AI would not say or break into consciousness idk. I spent like a whole day chatting and asking random questions to try to HUMAN'fy it.",
    "comments": []
  },
  {
    "_id": "8dyPtE5yXvJKuhL4z",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T18:57:36.482Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b4c246a7555e27665948268e44df3fbf",
        "public_id": "avalanche2023spring/ckobfokyddhhbhunkqat",
        "version": 1679597891,
        "version_id": "2320ec107a8d36fb24e594fcb12e3524",
        "signature": "62e62d1616148f33711ce4b070bba43486378207",
        "width": 1006,
        "height": 1006,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-23T18:58:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 17628906,
        "type": "upload",
        "etag": "ff3bd6a8b6269663d3aa66f296056509",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679597891/avalanche2023spring/ckobfokyddhhbhunkqat.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679597891/avalanche2023spring/ckobfokyddhhbhunkqat.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679597891/avalanche2023spring/ckobfokyddhhbhunkqat.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125116",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11328211",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12840478,
        "duration": 10.983333,
        "rotation": 0,
        "nb_frames": 718,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "041155c07d3eefcc9e9bcdae55aa1572",
        "public_id": "avalanche2023spring/hnkvxileojh9gcsbhwmo",
        "version": 1679599770,
        "version_id": "1bd1cc8c563d46a0f76982ac5a30c3b5",
        "signature": "fb1625fd11fdeb105a3433e26c2e7b654bd69cd5",
        "width": 480,
        "height": 480,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T19:29:30Z",
        "tags": [],
        "bytes": 107646,
        "type": "upload",
        "etag": "76451297cc3541cee7c3a6d2b3d4eb80",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679599770/avalanche2023spring/hnkvxileojh9gcsbhwmo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679599770/avalanche2023spring/hnkvxileojh9gcsbhwmo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "fd8a2d2ce91fefce9640e2e5272ae0cf",
        "public_id": "avalanche2023spring/y2a4ngladuptjc3ptv0o",
        "version": 1679674520,
        "version_id": "70a3daeef565ebafdb3e658db7ca3182",
        "signature": "977bd997297731c0c576d1417c27405c924c888f",
        "width": 924,
        "height": 924,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T16:15:20Z",
        "tags": [],
        "bytes": 452535,
        "type": "upload",
        "etag": "3a381b4bd6d822753d46d100393df6a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679674520/avalanche2023spring/y2a4ngladuptjc3ptv0o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679674520/avalanche2023spring/y2a4ngladuptjc3ptv0o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:33.257Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:19:48.275Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-28T05:19:49.106Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T14:33:37.145Z" }
      }
    ],
    "title": "",
    "description": "**Regular Polygon + Perlin Noise + OnFrame Event Handler** Thumbnails look a little dull, so open it to view. [Using this library for 2D Perlin noise by Seph Gentle](https://github.com/josephg/noisejs)",
    "comments": []
  },
  {
    "_id": "8kMWTs9Twt99P4Jry",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T19:30:26.164Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b4435f724afc9c6d1655b1e9df4c1b0c",
        "public_id": "avalanche2023spring/dcuzbxx4fjxm3x2udjvk",
        "version": 1675884632,
        "version_id": "297f0d267c132d323438aebd97f68147",
        "signature": "4f139090dfdfc809f164490a25c7842d7b877d1b",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-08T19:30:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 13948535,
        "type": "upload",
        "etag": "d13bf0309617ca6d0649be10ba500f03",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675884632/avalanche2023spring/dcuzbxx4fjxm3x2udjvk.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675884632/avalanche2023spring/dcuzbxx4fjxm3x2udjvk.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "29063545",
          "dar": "805:809",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 29266500,
        "duration": 3.812833,
        "rotation": 0,
        "nb_frames": 231,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "669ed25d837d26a6deaf5aa9c3404ea7",
        "public_id": "avalanche2023spring/zlzwij5zmaqrbj4icm5r",
        "version": 1675884637,
        "version_id": "abef0ae18aeb302a2bc184cf857d1fc6",
        "signature": "27debd50d64b500f4ed212a5ac9a49e7442cd78f",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-08T19:30:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 4550623,
        "type": "upload",
        "etag": "20759b61305e68ab7bac080140112b5b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675884637/avalanche2023spring/zlzwij5zmaqrbj4icm5r.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675884637/avalanche2023spring/zlzwij5zmaqrbj4icm5r.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "17469998",
          "dar": "805:809",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 18507871,
        "duration": 1.967,
        "rotation": 0,
        "nb_frames": 123,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5e159d31f1d57d77c8e6253f6aecbd78",
        "public_id": "avalanche2023spring/xtms9ffobaebzqwptig9",
        "version": 1675884644,
        "version_id": "294be2cba9cfc15ec173b90ffbb31d01",
        "signature": "4debf070f703b2c76b610d48b4f929990ef1231e",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-08T19:30:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 18828302,
        "type": "upload",
        "etag": "168618b2027a60c19896d18d7f5aa565",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675884644/avalanche2023spring/xtms9ffobaebzqwptig9.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675884644/avalanche2023spring/xtms9ffobaebzqwptig9.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "44230173",
          "dar": "805:809",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 47714407,
        "duration": 3.156833,
        "rotation": 0,
        "nb_frames": 199,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T21:24:38.969Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2023-02-08T21:26:28.174Z" }
      }
    ],
    "title": "",
    "description": "I don't quite have a title for this - just some experiments with randomness",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet skew;\nlet points = [];\nlet increase;\n\nfunction setup() {\n  // noLoop();\n  // frameRate(10)\n  createCanvas(windowWidth, windowHeight);\n  \n  skew = false;\n  increase = false;\n}\n\nfunction draw() {\n \n  background(40);\n  \n  if(!skew){\n    points = [min(random(0,60), random(0,60), random(0,60), random(0,60), random(0,60)), max(random(10,100), random(10,100), random(10,100), random(10,100), random(10,100)), (random(150,200), random(150,200), random(150,200), random(150,200), random(150,200))*0.2, random(windowWidth/2,windowHeight)];\n    point1 = random(points);\n    point2 = random(points);\n    point3 = random(points);\n    point4 = random(points);\n    skew = true;\n  }\n  else {\n    if(point1<100 && !increase){\n    point1++;\n    point2++;\n    point3++;\n    point4++;\n    }\n    else{\n    point1--;\n    point2--;\n    point3--;\n    point4--;\n    increase = true;\n    }\n  }\n  if(point1<0 && point2<0 && point3<0 && point4){\n    if(increase){\n    skew = false;\n      increase = false;\n    }\n  }\n  \n  noFill();\n  for(let i=0; i<100; i++){\n  shapeDrawing(point1, point2, point3, point4, i);\n  shapeDrawing(point2, point3, point4, point1, i+10);\n  shapeDrawing(point3, point4, point1, point2, i+20);\n  shapeDrawing(point4, point1, point2, point3, i+30);\n  }\n  \n}\n\nfunction shapeDrawing(p1, p2, p3, p4, r){\n  \n  R = 50+p1;\n  G = 100+p4;\n  B = 80 + p3;\n  A = 150 + p2;\n  \n  stroke(R, G, B, A)\n  \n  beginShape();\n      vertex(width/2 - r - p1, height/2 + r + p2);\n      vertex(width/2 - r - p2, height/2 - r - p3);\n      vertex(width/2 + r + p3, height/2 - r - p4);\n      vertex(width/2 + r + p4, height/2 + r + p1);\n      endShape(CLOSE);\n}",
    "comments": []
  },
  {
    "_id": "97TyWMcQjnjQhkGmA",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T15:42:21.327Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b6aaf36b1a1b17c0ef25b0613015c44b",
        "public_id": "avalanche2023spring/y7tgsc5g046xmvnp5g4y",
        "version": 1678463083,
        "version_id": "e340d16bbd7ebdf398038c0df87b1944",
        "signature": "4241a8aa4ee6eb0c11a9a05ef95d2a1ad7844d62",
        "width": 671,
        "height": 650,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T15:44:43Z",
        "tags": [],
        "bytes": 320333,
        "type": "upload",
        "etag": "1713e23206504939cb799c8b0300e86b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678463083/avalanche2023spring/y7tgsc5g046xmvnp5g4y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678463083/avalanche2023spring/y7tgsc5g046xmvnp5g4y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ab1ee4c4925b97e5d94c428836556a23",
        "public_id": "avalanche2023spring/annyug7ccmkwvjoqhagn",
        "version": 1678463092,
        "version_id": "7f924767496fe060e816daf3106fbb8d",
        "signature": "9d3033b3f8f603fb787169aa4762b85e2dd59bb1",
        "width": 672,
        "height": 654,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-10T15:44:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 1594667,
        "type": "upload",
        "etag": "2ebdc693a69e1a2bb39b2c45ef4636bc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678463092/avalanche2023spring/annyug7ccmkwvjoqhagn.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678463092/avalanche2023spring/annyug7ccmkwvjoqhagn.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678463092/avalanche2023spring/annyug7ccmkwvjoqhagn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "278023",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 279153,
        "duration": 45.7,
        "rotation": 0,
        "nb_frames": 1372,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "76e999fbb5ac06ffaf459cad53bc3ea6",
        "public_id": "avalanche2023spring/enatsac1hl9qrsjyerra",
        "version": 1678463102,
        "version_id": "225b86bc95fb3719e51ccf68ca7875e0",
        "signature": "db088b65ed5603f90995a5860336e3c28accc2e3",
        "width": 938,
        "height": 937,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T15:45:02Z",
        "tags": [],
        "bytes": 91035,
        "type": "upload",
        "etag": "fef6d3928b7b0b814a1a34bcc7d58bf2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678463102/avalanche2023spring/enatsac1hl9qrsjyerra.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678463102/avalanche2023spring/enatsac1hl9qrsjyerra.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:09.962Z" }
      }
    ],
    "title": "",
    "description": "Had so much fun manipulating Isha's sketch. She gave me an very colorful playground to play with!",
    "code": "//Pair CHallenge\n//load pixel color and change values\n\nlet img;\n\nlet smallPoint;\nlet largePoint;\n\nfunction preload() {\n  img = loadImage(\"assets/isha.png\");\n}\nfunction setup() {\n  \n  createCanvas(720, 700);\n  smallPoint = 4;\n  largePoint = 40;\n  imageMode(CENTER);\n  img.resize(700,700);\n  noStroke();\n  background(255);\n  img.loadPixels();\n}\n\nfunction draw() {\n  let pointillize = map(mouseX, 0, width, smallPoint, largePoint);\n  let x = floor(random(img.width));\n  let y = floor(random(img.height));\n  let pix = img.get(x, y);\n  fill(pix, 128);\n  rect(x, y, pointillize, pointillize);\n}",
    "comments": []
  },
  {
    "_id": "9E8xrGLDToZ5x6QLQ",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T16:19:10.538Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6f22a268bd6e4512e8d89d2dcf072389",
        "public_id": "avalanche2023spring/xcdcjkezqz5qn5lcjhwo",
        "version": 1683908362,
        "version_id": "7523e9692b0b97fe0a89deaef52f412a",
        "signature": "2bcde2ea5779c943e0151c1a3ce230069a8a804a",
        "width": 470,
        "height": 707,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T16:19:22Z",
        "tags": [],
        "bytes": 113579,
        "type": "upload",
        "etag": "a74f3c0609f3f487f6e0743bb31c33e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683908362/avalanche2023spring/xcdcjkezqz5qn5lcjhwo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683908362/avalanche2023spring/xcdcjkezqz5qn5lcjhwo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8f43dc616d004b454186e9d668a96176",
        "public_id": "avalanche2023spring/njjtpb34jfggikraobzn",
        "version": 1683908367,
        "version_id": "62b7c6a1ef8bc445a0160f3fd5b545d6",
        "signature": "c229877a9daa827120eceb9136a7ba86d87b5833",
        "width": 955,
        "height": 2048,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T16:19:27Z",
        "tags": [],
        "bytes": 215052,
        "type": "upload",
        "etag": "e36a267d99fe054ed678b4350ad3cee3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683908367/avalanche2023spring/njjtpb34jfggikraobzn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683908367/avalanche2023spring/njjtpb34jfggikraobzn.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T21:04:27.607Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:18:31.011Z" }
      }
    ],
    "title": "",
    "description": "Took turtle graphics literally and made a sketch in illustrator to laser cut.",
    "comments": []
  },
  {
    "_id": "9EyAiHg6CDRBLLpuq",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-22T02:34:22.039Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fff62c3cb06d2b0ac10f32af20506808",
        "public_id": "avalanche2023spring/rn48mrmwsi480ox3ohbb",
        "version": 1677033266,
        "version_id": "04f14dde48bb9d03e7d63735ccce4e66",
        "signature": "ead2a9dcd416b044466998803deeac4a892318b3",
        "width": 520,
        "height": 871,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-22T02:34:26Z",
        "tags": [],
        "bytes": 40987,
        "type": "upload",
        "etag": "d58a41042e360acf23a6127d83de98dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677033266/avalanche2023spring/rn48mrmwsi480ox3ohbb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677033266/avalanche2023spring/rn48mrmwsi480ox3ohbb.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9be347ad03b7c61941e124ab4ce6f2cf",
        "public_id": "avalanche2023spring/dek5etyngw6kukp79jb0",
        "version": 1677033787,
        "version_id": "cf3a34e9a8307096df23406e123283f6",
        "signature": "70bf91c796ea236dcf0e587e75f08444b949ae30",
        "width": 533,
        "height": 487,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-22T02:43:07Z",
        "tags": [],
        "bytes": 25138,
        "type": "upload",
        "etag": "281351be1c70b374727716c96e3ba580",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677033787/avalanche2023spring/dek5etyngw6kukp79jb0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677033787/avalanche2023spring/dek5etyngw6kukp79jb0.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "31da37f6e64adc86b731a9036144e02f",
        "public_id": "avalanche2023spring/nyqf925aow40hfmre3pq",
        "version": 1677033789,
        "version_id": "d212ed74bbcb8cbbd36f2c369c1b0dc0",
        "signature": "f137ae0878ac71e5506f8e720214a9fed1e84987",
        "width": 542,
        "height": 490,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-22T02:43:09Z",
        "tags": [],
        "bytes": 32370,
        "type": "upload",
        "etag": "2d2df16ea2bb74ed3a130141035d1416",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677033789/avalanche2023spring/nyqf925aow40hfmre3pq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677033789/avalanche2023spring/nyqf925aow40hfmre3pq.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T03:29:27.815Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T04:46:12.067Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T10:26:34.205Z" }
      }
    ],
    "title": "",
    "description": "Face Generator challenge, except I dove into using social media icons to create the elements of each part of the face. Social media has conglomerated into a big force in our lives, why not give it a face as well?",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  instagram = loadImage(\"Image/instagram.png\");\n  instagramHolo = loadImage(\"Image/sm-icons-instagram-glyph-logo.png\");\n  pinterest = loadImage(\"Image/pinterest.png\");\n  facebook = loadImage(\"Image/sm-icons-facebook-logo.png\");\n  linkedin = loadImage(\"Image/sm-icons-linkedin-in-logo.png\");\n  linkedinFull = loadImage(\"Image/sm-icons-linkedin-logo.png\");\n  snapchat = loadImage(\"Image/sm-icons-snapchat-ghost.png\");\n  youtubeFull = loadImage(\"Image/sm-icons-youtube-full.png\");\n  youtube = loadImage(\"Image/sm-icons-youtube.png\");\n  twitter = loadImage(\"Image/twitter.png\");\n  twitch = loadImage(\"Image/twitch-logo_project_use.png\");\n  \n  createCanvas(350, 350);\n  \n  createP(\"Eyes\");\n  eyeSlider = createSlider(1, 3, 1);\n  \n  createP(\"Nose\");\n  noseSlider = createSlider(1, 3, 1);\n  \n  createP(\"Mouth\");\n  mouthSlider = createSlider(1, 3, 1);\n}\n\nfunction draw() {\n  background(220);\n  image(twitch, 0, 0);\n  \n  if(eyeSlider.value() == 1) {\n    push();\n    scale(0.3);\n    image(instagram, 375, 280);\n    image(instagram, 675, 280);\n    pop();\n  } else if(eyeSlider.value() === 2) {\n    push();\n    scale(0.4);\n    image(pinterest, 295, 205);\n    image(pinterest, 520, 205);\n    pop();\n  } else if(eyeSlider.value() == 3) {\n    push();\n    scale(0.35);\n    image(facebook, 305, 210);\n    image(facebook, 570, 210);\n    pop();\n  }\n  \n  if(noseSlider.value() == 1) {\n    push();\n    scale(0.4);\n    image(snapchat, 400, 325);\n    pop();\n  } else if(noseSlider.value() == 2) {\n    push();\n    scale(0.3);\n    image(instagramHolo, 550, 450);\n    pop();\n  } else if(noseSlider.value() == 3) {\n    push();\n    scale(0.35);\n    image(twitter, 465, 375);\n    pop();\n  }\n  \n  if(mouthSlider.value() == 1) {\n    push();\n    scale(0.4);\n    image(youtubeFull, 250, 450);\n    pop();\n  } else if(mouthSlider.value() == 2) {\n    push();\n    scale(0.06);\n    image(linkedinFull, 1900, 3100);\n    pop();\n  } //Slot 3 is empty to have no mouth\n}",
    "comments": []
  },
  {
    "_id": "9FokYneTrzozjZFnZ",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T00:09:02.787Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b425f81c6799e8241b48fd744d5c3b8f",
        "public_id": "avalanche2023spring/p3thhed8mwv8o1yjqhhy",
        "version": 1677802204,
        "version_id": "bb240456066b9abc4683af0998f7c876",
        "signature": "05ffcbd0b9ec509b73bd0d39ec8c1ff7b0fc4c24",
        "width": 1016,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T00:10:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 19463303,
        "type": "upload",
        "etag": "5fc96bc23a2d58a50b2e73a4370c501e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677802204/avalanche2023spring/p3thhed8mwv8o1yjqhhy.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677802204/avalanche2023spring/p3thhed8mwv8o1yjqhhy.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677802204/avalanche2023spring/p3thhed8mwv8o1yjqhhy.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "124927",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "12944182",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 14620321,
        "duration": 10.65,
        "rotation": 0,
        "nb_frames": 698,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e227bcff95919ca5502db059421b7c6c",
        "public_id": "avalanche2023spring/qsl4opbjsvx4uqiyi2eq",
        "version": 1677810367,
        "version_id": "6d271529d980c63c063580624f5ae9fb",
        "signature": "769b302520fd3ba61126f8e6a39704a1df748d49",
        "width": 1016,
        "height": 658,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T02:26:07Z",
        "tags": [],
        "bytes": 215498,
        "type": "upload",
        "etag": "4b3b0c4de9c11152bd9d093ecaeb5c3a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677810367/avalanche2023spring/qsl4opbjsvx4uqiyi2eq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677810367/avalanche2023spring/qsl4opbjsvx4uqiyi2eq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "00cc049180d8f184468aa53ebd0a3b42",
        "public_id": "avalanche2023spring/xgf2ajofhgo3yhpovcao",
        "version": 1677819053,
        "version_id": "6b51f201ad27297ade37e6b8f4e64dd3",
        "signature": "ab9fdf42e0d0420afa5face684b371069b0dbbb2",
        "width": 984,
        "height": 634,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T04:50:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 4673265,
        "type": "upload",
        "etag": "27836aeedb305b01e9f45bf0d8319754",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677819053/avalanche2023spring/xgf2ajofhgo3yhpovcao.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677819053/avalanche2023spring/xgf2ajofhgo3yhpovcao.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677819053/avalanche2023spring/xgf2ajofhgo3yhpovcao.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127816",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "7032336",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9346530,
        "duration": 4,
        "rotation": 0,
        "nb_frames": 301,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T03:01:47.121Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T04:14:33.714Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T04:17:44.808Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T16:53:53.912Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:08.035Z" }
      }
    ],
    "title": "",
    "description": "**Challenge 2 Extended**",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet amplitude_slider;\nlet timeSpeed_slider;\nlet frequency_slider;\n\nlet startX = 0;\nlet endX = 540;\n\nlet amplitude, frequency, timeSpeed;\n\nlet fromCol ;\nlet toCol ;\n\nfunction setup() {\n  createCanvas(500, 320);\n  stroke(240);\n  strokeWeight(0.2);\n  //noStroke();\n  push();\n  fill(\"white\");\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(10, 400, 100);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 30);\n  createP(\"TimeSpeed\");\n  timeSpeed_slider = createSlider(0, 50, 30);\n  pop();\n  \n  fromCol = color(floor(random(255)), floor(random(255)), floor(random(255)));\n  toCol = color(floor(random(255)), floor(random(255)), floor(random(255)));\n}\n\nfunction draw() {\n  background(240);\n  ellipseMode(CENTER);\n\n  amplitude = amplitude_slider.value() / 2;\n  frequency = frequency_slider.value() / 3;\n  timeSpeed = timeSpeed_slider.value() / 15000;\n\n  noiseDetail(1, 0.5);\n\n  //noStroke();\n\n  for (\n    let start = 0, end = -10, n1 = 3.4, n2 = 5.4;\n    start < 361;\n    start += 12, end += 12, n1 -= 0.3, n2 -= 0.3\n  ) {\n    drawLine(start, end, n1, n2);\n  }\n}\n\nfunction drawLine(startY_, endY_, noiseX, noiseY) {\n  for (let i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY_, endY_, i);\n\n    let nX = noise(i * frequency + millis() * timeSpeed, noiseX);\n    let nY = noise(i * frequency + millis() * timeSpeed, noiseY);\n    \n    let offsetX = (nX - 0.5) * amplitude;\n    let offsetY = (nY - 0.5) * amplitude;\n    \n    let finCol = lerpColor(fromCol, toCol, (nX+nY)/2);\n    fill(finCol);\n\n    rect(x + offsetX, y + offsetY, 12, 12);\n    rect(x - offsetX, y - offsetY, 12, 12, 2,2,2,2);\n  }\n}\n\nfunction mouseClicked() {\n  if (mouseX > 0 && mouseX < 500 && mouseY > 0 && mouseY < 320) {\n    fromCol = color(floor(random(255)), 40, floor(random(255)));\n    toCol = color(floor(random(255)), 200, floor(random(255)));\n  }\n}",
    "comments": [
      {
        "commenter_id": "me69bqQXDu4jtokwu",
        "comment": "crazy it kind of looks like crocodile!",
        "created_at": { "$date": "2023-03-03T03:01:43.624Z" }
      }
    ]
  },
  {
    "_id": "9FxDRPsT8ithh7ZFs",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T18:53:23.124Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b79e340cc2a86273e1b5749f6e4ea850",
        "public_id": "avalanche2023spring/qlodfjxsmn3xf99fimtx",
        "version": 1682103216,
        "version_id": "3d14dd97778908a4b1df325eec326eb6",
        "signature": "862ba6af113b49a108a5249c8b0eb2ef03c70a91",
        "width": 848,
        "height": 892,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-21T18:53:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 583305,
        "type": "upload",
        "etag": "c1c43443b4f2b4b83b582de9d691e2ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682103216/avalanche2023spring/qlodfjxsmn3xf99fimtx.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682103216/avalanche2023spring/qlodfjxsmn3xf99fimtx.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682103216/avalanche2023spring/qlodfjxsmn3xf99fimtx.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "487127",
          "dar": "212:223",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 524319,
        "duration": 8.9,
        "rotation": 0,
        "nb_frames": 517,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T05:09:16.951Z" }
      }
    ],
    "title": "",
    "code": "let button;\nlet faceColor, eyeColor, mouthColor;\nlet mouthSize;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // initialize colors and mouth size\n  faceColor = color(255);\n  eyeColor = color(0);\n  mouthColor = color(255, 0, 0);\n  mouthSize = 30;\n  \n  // create button\n  button = createButton('Change');\n  button.mousePressed(changeFeatures);\n  \n  // create slider for mouth size\n  slider = createSlider(10, 60, mouthSize);\n  slider.position(20, height - 50);\n}\n\nfunction draw() {\n  background(220);\n  \n  // draw face\n  fill(faceColor);\n  ellipse(width/2, height/2, 200, 200);\n  \n  // draw eyes\n  fill(eyeColor);\n  ellipse(width/2 - 50, height/2 - 20, 30, 30);\n  ellipse(width/2 + 50, height/2 - 20, 30, 30);\n  \n  // draw mouth\n  fill(mouthColor);\n  ellipse(width/2, height/2 + 40, mouthSize, 30);\n}\n\nfunction changeFeatures() {\n  // change colors randomly\n  faceColor = color(random(255), random(255), random(255));\n  eyeColor = color(random(255), random(255), random(255));\n  mouthColor = color(random(255), random(255), random(255));\n  \n  // change mouth size randomly\n  mouthSize = random(20, 50);\n  slider.value(mouthSize);\n}\n\nfunction mouseDragged() {\n  // update mouth size with slider\n  if (mouseX > 20 && mouseX < width - 20 && mouseY > height - 50 && mouseY < height - 20) {\n    mouthSize = slider.value();\n  }\n}",
    "comments": [],
    "description": "Face generator code written by ChatGPT with very minimal corrections"
  },
  {
    "_id": "9GEKG97SDfdyYu79J",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": { "$date": "2023-04-28T02:08:47.853Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fe604569254409cc814e82fa2060f8ed",
        "public_id": "avalanche2023spring/h9t2hhgqswhdmbhouyur",
        "version": 1682647763,
        "version_id": "070d6a5c0a0c26430a71809397d2d27d",
        "signature": "474839fc19af1791747c973db97ca967362c97f2",
        "width": 822,
        "height": 824,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T02:09:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 10478860,
        "type": "upload",
        "etag": "3d91b7663e1bb204985cced962935143",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682647763/avalanche2023spring/h9t2hhgqswhdmbhouyur.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682647763/avalanche2023spring/h9t2hhgqswhdmbhouyur.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682647763/avalanche2023spring/h9t2hhgqswhdmbhouyur.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7953665",
          "dar": "411:412",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 8073600,
        "duration": 10.383333,
        "rotation": 0,
        "nb_frames": 629,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T05:48:50.995Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "Revisited my treasure map sketch from noise week and made a different sketch, building on that",
    "code": "let rows = 8;\nlet cols = 8;\nlet tileSize = 50;\nlet colorOptions = ['#FF6F61', '#6B5B95', '#88B04B', '#F7CAC9', '#92A8D1'];\nlet selectedColor;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noStroke();\n  selectedColor = colorOptions[0];\n}\n\nfunction draw() {\n  background(220);\n  \n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * tileSize;\n      let y = j * tileSize;\n      \n      let c = color(random(255), random(255), random(255));\n      if (selectedColor) {\n        c = selectedColor;\n      }\n      fill(c);\n      \n      push();\n      translate(x + tileSize/2, y + tileSize/2);\n      rotate(random(TWO_PI));\n      rect(0, 0, tileSize/2, tileSize/2);\n      pop();\n      \n      push();\n      translate(x + tileSize/2, y + tileSize/2);\n      rotate(random(TWO_PI));\n      rect(0, 0, tileSize/4, tileSize/4);\n      pop();\n      \n    }\n  }\n}\n\nfunction mousePressed() {\n  selectedColor = color(random(colorOptions));\n}\n\nfunction mouseDragged() {\n  let x = floor(mouseX / tileSize);\n  let y = floor(mouseY / tileSize);\n  if (x >= 0 && x < cols && y >= 0 && y < rows) {\n    let c = color(random(255), random(255), random(255));\n    fill(c);\n    rect(x * tileSize, y * tileSize, tileSize, tileSize);\n  }\n}",
    "comments": []
  },
  {
    "_id": "9JJ2n5dwqceq6NKHi",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T21:33:49.015Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "12ca67fa8ce6264466fb33a9622c5f10",
        "public_id": "avalanche2023spring/balisoni0ve47ylye7ku",
        "version": 1678398750,
        "version_id": "05041db0902dc9e1dad3526a07017ab4",
        "signature": "b3119e5e6cb6cb653dadeee8bbfbfb574f26bf80",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T21:52:30Z",
        "tags": [],
        "bytes": 106535,
        "type": "upload",
        "etag": "2a9be9b96f335c4d69acf93625e8476b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678398750/avalanche2023spring/balisoni0ve47ylye7ku.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678398750/avalanche2023spring/balisoni0ve47ylye7ku.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0052b8f5d7d990378dc86593b7f111d5",
        "public_id": "avalanche2023spring/wsz1gmoue9v4my82al6r",
        "version": 1678398764,
        "version_id": "15f5c9e838ce2b1ec5f47378056bf70c",
        "signature": "4a89f116514c3a1fe0c3e281ad42aa5e51b9fb5c",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T21:52:44Z",
        "tags": [],
        "bytes": 107404,
        "type": "upload",
        "etag": "57b1c75bbea7aef2f248340ee40b5cbc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678398764/avalanche2023spring/wsz1gmoue9v4my82al6r.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678398764/avalanche2023spring/wsz1gmoue9v4my82al6r.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "125b32808a62e7a9895a6d6377104d2f",
        "public_id": "avalanche2023spring/iexpyfdshtl1hx70lfar",
        "version": 1678399306,
        "version_id": "a923e958abcabe7a17f6b7bca8f7071e",
        "signature": "bc5570ba8dbc4983928c11cd0d7ffea73872bee7",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T22:01:46Z",
        "tags": [],
        "bytes": 1127549,
        "type": "upload",
        "etag": "4259f35305fb60a9a5cd66d497d5f65f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678399306/avalanche2023spring/iexpyfdshtl1hx70lfar.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678399306/avalanche2023spring/iexpyfdshtl1hx70lfar.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T07:51:29.848Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:09.035Z" }
      }
    ],
    "title": "",
    "description": "**Exploring the benefit of working at the pixel level,** noise + random at the pixel level. Some of these images makes me feel dizzy - it gives me the impression that I am not able to focus on the image or that the image is not focussed.",
    "code": "function setup() {\n  createCanvas(500, 500);\n}\n\nfunction draw() {\n  background(0);\n\n  img = createImage(100, 100);\n  img.loadPixels();\n  let factor = 0.04;\n  for (let i = 0; i < img.width; i++) {\n    for (let j = 0; j < img.height; j++) {\n      let c;\n      let n = noise(i*factor, j*factor);\n      if (n < 0.25)  \n        //c = color(255, random(220, 230), random(190, 210));\n        c = color(255, random(220, 250), random(190, 210));\n      else if (n < 0.35)  \n        //c = color(255, random(205, 215), random(178, 190));\n        c = color(255, random(205, 235), random(178, 190));\n      else if (n < 0.5)\n        //c = color(255, random(180, 195), random(162, 178));\n        c = color(255, random(180, 215), random(162, 178));\n      else if (n < 0.6)\n        //c = color(random(229, 230), random(152, 162), random(154, 162));\n        c = color(random(229, 230), random(152, 182), random(154, 162));\n      else if (n < 0.7)\n        //c = color(random(181, 191), random(131, 141), 141);\n        c = color(random(181, 191), random(131, 161), 141);\n      else\n        //c = color(random(90, 109), random(104, 112), random(104,127));\n        c = color(random(90, 109), random(104, 132), random(104,127));\n      img.set(i, j, c);\n    }\n  }\n\n  img.updatePixels();\n\n  noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "9JLfTLYRFQuWX5aYt",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": { "$date": "2023-04-28T15:59:05.077Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "916becd1f65897bfdaefa5862b6de57c",
        "public_id": "avalanche2023spring/fy6jy7g0opbhwnfd7131",
        "version": 1682697553,
        "version_id": "e059c862e3ea747d28ea2a4c0d02e2a1",
        "signature": "ddc8c7e7ec219086c7a7a5b880b43a399f172344",
        "width": 754,
        "height": 374,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T15:59:13Z",
        "tags": [],
        "bytes": 30109,
        "type": "upload",
        "etag": "a7053e54dafc3ba5c2a1f4c3458a0f90",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682697553/avalanche2023spring/fy6jy7g0opbhwnfd7131.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682697553/avalanche2023spring/fy6jy7g0opbhwnfd7131.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "99f90e02617e8096ec19d35bd727ff85",
        "public_id": "avalanche2023spring/pmcl8rjvb1n5554lplyn",
        "version": 1682697556,
        "version_id": "a40fc410cb33af58c6c0a2bbebd93bb1",
        "signature": "a7d257887f161f9b1e68a73e37307eec68bf127f",
        "width": 768,
        "height": 401,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T15:59:16Z",
        "tags": [],
        "bytes": 30362,
        "type": "upload",
        "etag": "4fd601a130c4828b99922a791077516c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682697556/avalanche2023spring/pmcl8rjvb1n5554lplyn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682697556/avalanche2023spring/pmcl8rjvb1n5554lplyn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b08308cdd9807608192df34ab5152626",
        "public_id": "avalanche2023spring/kb6bbrxyz2nigoes390e",
        "version": 1682697572,
        "version_id": "7f53622e848d438fd20794e50bb3f6d9",
        "signature": "c5dd8591ff71ada4ecd4bbebe246e84ded6d15b3",
        "width": 1410,
        "height": 726,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T15:59:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 1867575,
        "type": "upload",
        "etag": "303a4ac1aeecd1c2e457ab7e7c6ac38a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682697572/avalanche2023spring/kb6bbrxyz2nigoes390e.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682697572/avalanche2023spring/kb6bbrxyz2nigoes390e.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682697572/avalanche2023spring/kb6bbrxyz2nigoes390e.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "477812",
          "dar": "235:121",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 484298,
        "duration": 30.85,
        "rotation": 0,
        "nb_frames": 1851,
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Built off of my previous sketch, and added a randomize function. I used chatGPT to help me trouble shoot how to prevent the pupil from going outside of the outer circle. It works pretty well, but sometimes the pupil starts to move around in a circle when it collides with the outer circle, and then stops. I'm going to try to fix that!",
    "comments": []
  },
  {
    "_id": "9QcpDD9pRgx7gKHBd",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-06T23:01:28.994Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3c456a5453890fd0d8040411fd0ddcec",
        "public_id": "avalanche2023spring/u5bd1ekrme0rtu9an4gp",
        "version": 1678143723,
        "version_id": "ca16f4952c1304ed7142aa947cf9f2eb",
        "signature": "6ba606bb0ac2394aa8424fef37fbc078255c33be",
        "width": 1090,
        "height": 1444,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-06T23:02:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 3118927,
        "type": "upload",
        "etag": "73baf9af1ea1299c282cb075bfe0f2f2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678143723/avalanche2023spring/u5bd1ekrme0rtu9an4gp.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678143723/avalanche2023spring/u5bd1ekrme0rtu9an4gp.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678143723/avalanche2023spring/u5bd1ekrme0rtu9an4gp.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Constrained Baseline",
          "bit_rate": "3855416",
          "dar": "545:722",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 3858267,
        "duration": 6.466667,
        "rotation": 0,
        "nb_frames": 388,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f1bcb0257249fdc16774a89ad92a9e85",
        "public_id": "avalanche2023spring/omdxyifkwxmx2mceycqt",
        "version": 1678143726,
        "version_id": "3fb2dbfda2fef2b05b2095df1808a15b",
        "signature": "3792da43a4723d6828a19998b41679721fbd474b",
        "width": 1650,
        "height": 975,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-06T23:02:06Z",
        "tags": [],
        "bytes": 175988,
        "type": "upload",
        "etag": "ca138ad14ea1fb34000ddb36d269dcff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678143726/avalanche2023spring/omdxyifkwxmx2mceycqt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678143726/avalanche2023spring/omdxyifkwxmx2mceycqt.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T00:52:44.88Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T04:43:59.704Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:00.722Z" }
      }
    ],
    "title": "",
    "description": "I wanted to try doing the Pixel Ouroboros challenge physically (by scanning an image and printing the results over and over). I did that 10 times with this image. I plan to process it through code as well to compare the physical and digital results! My printer definitely started to run out of ink towards the end but I think it created a cool effect.",
    "inspiration_name": "Image Reference",
    "inspiration_url": "https://unsplash.com/photos/9-OCsKoyQlk",
    "comments": []
  },
  {
    "_id": "9ReonyY9RJ9pggo8a",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T04:47:09.161Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3d0e909b0ce4149d9ce769ad80e6016c",
        "public_id": "avalanche2023spring/oaunuseaieschl5yzhgp",
        "version": 1680238036,
        "version_id": "87e104a6f45062573ad702fb076eba24",
        "signature": "480d0bda1641cb13543fca2a9903399746606188",
        "width": 1610,
        "height": 1546,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T04:47:16Z",
        "tags": [],
        "bytes": 155424,
        "type": "upload",
        "etag": "7d86062ba1a39372bef1d1d952a3d18e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680238036/avalanche2023spring/oaunuseaieschl5yzhgp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680238036/avalanche2023spring/oaunuseaieschl5yzhgp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1a180a8daa8775ddc991a56a5c0157e2",
        "public_id": "avalanche2023spring/eyik2r1trgv37c6zp5j8",
        "version": 1680238044,
        "version_id": "56ff8eeed13eeb4d8b58f26b3b38ecdc",
        "signature": "8876d693ed43d4c0534efb4e6fd63a9a63e9af39",
        "width": 640,
        "height": 612,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T04:47:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 3065519,
        "type": "upload",
        "etag": "a7146afbf28e650ccb4b13da80aa7c9a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680238044/avalanche2023spring/eyik2r1trgv37c6zp5j8.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680238044/avalanche2023spring/eyik2r1trgv37c6zp5j8.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680238044/avalanche2023spring/eyik2r1trgv37c6zp5j8.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127735",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "688345",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 824803,
        "duration": 29.733333,
        "rotation": 0,
        "nb_frames": 1784,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:15:54.176Z" }
      }
    ],
    "title": "",
    "description": "Wanted to play with drawing sound",
    "comments": []
  },
  {
    "_id": "9WrZtXcQqF4uZ6h9w",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T05:59:48.61Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6bebf9b99579c4cc3e3c6a45424be886",
        "public_id": "avalanche2023spring/v4dc0zpdvc3kq7cb4ms4",
        "version": 1681970770,
        "version_id": "819852d466afa92db1712b684c5f3f42",
        "signature": "7099b103383c776e61c6376f956c83fdaf0a3339",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-20T06:06:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 5891172,
        "type": "upload",
        "etag": "bbb7b9bc2e188d7a561a25215351dddf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681970770/avalanche2023spring/v4dc0zpdvc3kq7cb4ms4.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681970770/avalanche2023spring/v4dc0zpdvc3kq7cb4ms4.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681970770/avalanche2023spring/v4dc0zpdvc3kq7cb4ms4.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317375",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "3776649",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4091091,
        "duration": 11.466667,
        "rotation": 0,
        "nb_frames": 688,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "226cd771a336b0b0bfb31962c0dbe7a7",
        "public_id": "avalanche2023spring/gqk9ka2hjtmzkwlj4qcy",
        "version": 1681970787,
        "version_id": "3302f18aa01880123bd3be29d86c32ac",
        "signature": "9c5d68c728cd88c437971ca545d95d9fa8090b41",
        "width": 1012,
        "height": 1380,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T06:06:27Z",
        "tags": [],
        "bytes": 2037937,
        "type": "upload",
        "etag": "4a6a07927706c8baa2631dab74b8b779",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681970787/avalanche2023spring/gqk9ka2hjtmzkwlj4qcy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681970787/avalanche2023spring/gqk9ka2hjtmzkwlj4qcy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dc3df7a69850548b3cd576dbc6cc45b4",
        "public_id": "avalanche2023spring/d0elzo8w0km3378stnhw",
        "version": 1681970973,
        "version_id": "a38199bbaedf7683eb0c4768186c2e02",
        "signature": "a881b7eecf9d9ce789efa21d550738d6c4c7aa5b",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T06:09:33Z",
        "tags": [],
        "bytes": 3631450,
        "type": "upload",
        "etag": "069f99121eec2c27bb65b775594adbdc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681970973/avalanche2023spring/d0elzo8w0km3378stnhw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681970973/avalanche2023spring/d0elzo8w0km3378stnhw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T15:01:22.099Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T17:42:07.67Z" }
      }
    ],
    "title": "",
    "description": "Press the button to make the J Jiterrrrr. Another type exploration made in collaboration with Chat GPT. It set up the button functionality and style for me pretty well. It did not, however, succeed in forming a \"J\" with shapes like I asked it to. Had to do that one myself. But nonetheless, cut down my trial and error time significantly.",
    "code": "let myFont;\nlet textArray1 = [];\nlet textArray2 = [];\nlet r = 0;\nlet button;\nlet fSize = 800;\nlet isJittering = false;\n\n// Define an array of shapes\nlet shapes = [];\nconst palette = ['#610FA9', '#A246DD', '#7E00CC', '#8A00E0'];\n\nfunction preload() {\n  myFont = loadFont(\"TestUntitledSerif-Bold.otf\");\n\n}\n\nfunction setup() {\n  createCanvas(1000, 1000);\ntextAlign(CENTER);\n  textFont(myFont);\n  // Create the button\n  button = createButton(\"JITTER\");\n  button.addClass(\"button\");\n  button.mousePressed(toggleJitter);\n  button.position(width-200,height-170);\n  \n  frameRate(10);\n  angleMode(DEGREES);\n  textArray1 = myFont.textToPoints(\"J\", width / 2 - 200, height / 2+120, fSize, {\n\n    sampleFactor: 0.1,\n    // sampleFactor: 0.0241 for lines effect\n  });\n\n  textArray2 = myFont.textToPoints(\"j\", width / 2 - 200, height / 2+250, fSize, {\n\n    sampleFactor: 0.114,\n    // sampleFactor: 0.0306\n  });\n  // textAlign(CENTER);\n  print(textArray1.length, textArray2.length);\n  \n}\n\nfunction draw() {\n  background(236,206,255);\n stroke(color('#9757EB'));\n strokeWeight(2);\n  // textSize(fSize);\n\n  // text('D', width / 2+40, height / 2+250)\n  // text('d', width / 2+40, height / 2+250)\n\n    for(let i = 0; i < textArray1.length;i++){ \n     \n      // fill(palette[Math.floor(Math.random()*palette.length)]);\n      fill(color('#6b40e0'));\n      if (isJittering) {\n        // translate(random(-2, 2), random(0)); // Apply the jitter motion\n        noStroke();\n        rect(random(textArray1[i].x-20,textArray1[i].x+20), random(textArray1[i].y-20,textArray1[i].y+20), width/10, height/10, 100);\n      }\n      else {\n        rect(textArray1[i].x, textArray1[i].y, width/10, height/10, 20);\n      }\n      \n    \n   \n     \n\n// circle(textArray1[i].x, textArray1[i].y, val);\n   \n      \n      if(keyCode===65){\n         if(textArray1[i].x<=textArray2[i].x){\n       textArray1[i].x++;\n     }\n\n      if(textArray1[i].x>=textArray2[i].x){\n       textArray1[i].x--;\n     }\n\n         if(textArray1[i].y>=textArray2[i].y){\n       textArray1[i].y--;\n     }\n\n      if(textArray1[i].y<=textArray2[i].y){\n       textArray1[i].y++;\n     }\n\n      }\n    \n    }\n  // endShape();\n}\n\n\nfunction toggleJitter() {\n  // Toggle the isJittering variable\n  isJittering = !isJittering;\n  \n  // Change the button text to reflect the new state\n  if (isJittering) {\n    button.html(\"DON'T JITTER\");\n  } else {\n    button.html(\"JITTER\");\n  }\n}",
    "comments": []
  },
  {
    "_id": "9dWeMnN26v7wLMajJ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T22:21:59.066Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9bd0729e6422c2e58b9f960fd76a391d",
        "public_id": "avalanche2023spring/sgt2dkfdhitcpwfmkb3y",
        "version": 1677190925,
        "version_id": "6bcbe8e311c8152b12b33c83be6ddba2",
        "signature": "37a7059184ea9922e1d15e439e1e9b5f6e1b4bfb",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T22:22:05Z",
        "tags": [],
        "bytes": 1336564,
        "type": "upload",
        "etag": "1f94b3639cb927d075adc62bd916ee87",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677190925/avalanche2023spring/sgt2dkfdhitcpwfmkb3y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677190925/avalanche2023spring/sgt2dkfdhitcpwfmkb3y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3e3e8278fc180ee5d96648b4ce2fcc4c",
        "public_id": "avalanche2023spring/cjfvn2khmtroiskvo6zc",
        "version": 1677190935,
        "version_id": "b1ce5c3980880fc508c5be8113c69ee6",
        "signature": "475a5b7813a3e9414cdee109a1cda024d1993526",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T22:22:15Z",
        "tags": [],
        "bytes": 1424263,
        "type": "upload",
        "etag": "e6c70124226b12cae65ae3e55ab41abd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677190935/avalanche2023spring/cjfvn2khmtroiskvo6zc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677190935/avalanche2023spring/cjfvn2khmtroiskvo6zc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "53f6bc92a0244b2527ecc614bdc0031b",
        "public_id": "avalanche2023spring/i9cci23h9pexzargs91d",
        "version": 1677190945,
        "version_id": "47a5ff710c75c66c5d58c2cf097f92ab",
        "signature": "970db94a695fea4ef0f6e999c3aba858f2dc2c63",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T22:22:25Z",
        "tags": [],
        "bytes": 1569577,
        "type": "upload",
        "etag": "31577b8159986625657582b2f71a9272",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677190945/avalanche2023spring/i9cci23h9pexzargs91d.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677190945/avalanche2023spring/i9cci23h9pexzargs91d.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T23:44:05.607Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T00:23:40.271Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T16:14:41.798Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-27T00:28:39.831Z" }
      }
    ],
    "title": "",
    "description": "Playing with Sloppy Rect and parameters",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet gridSizeX = 50;\nlet gridSizeY = 50;\nlet rectWidth = gridSizeX;\nlet rectHeight = gridSizeY;\nlet slopX;\n\nfunction setup() {\n  createCanvas(1000, 1000);\n  background(\"black\");\n  noLoop();\n}\n\nfunction draw() {\n  background(250);\n\n  // fill(0, 0, 0, 100);\n\n  for (x=gridSizeX; x< width - gridSizeX; x+=gridSizeX) {\n\n    // print(noise(x*10)*10);\n    // slopX = noise(x)*100;\n    // slopX = noise(x)*20;\n    slopX = x;\n    slopX = x/2;\n    slopX = x/20;\n\n    // slopX = mouseX/50;\n\n    for (y=gridSizeY; y< height - gridSizeY; y+=gridSizeY) {\n\n      fill(x/5+10, y/5, x, 0 + x/6);\n      fill(y/5+10, x/5, x, 0 + x/6);\n      fill(x/4, x/6, x/4, 0 + x/5);\n\n      fill(x/10, y/8, x/10, 0 + x/4);\n      // fill(x, y/5, 0, noise(y+x)*30);\n      // stroke(y/10, 0, 0, 0 + x/6);\n      // stroke(y/10, 0, 0, 0 + x/6);\n\n  // fill(0, 0, 0, random(100));\n      sloppyRect(x, y, rectWidth, rectHeight, slopX);\n      fill(x/2+10, y/2, y/5, 0 + x/6);\n      sloppyRect(x, y, rectWidth, rectHeight, slopX);\n      fill(y/3+10, x/5, x/3, 0 + x/6);\n      sloppyRect(x, y, rectWidth, rectHeight, slopX);\n    }\n  }\n}\n\nfunction sloppyRect(x, y, w, h, slop) {\n  beginShape();\n  vertex(\n    x + random(-slop, slop), //\n    y + random(-slop, slop)\n  );\n  vertex(\n    x + w + random(-slop, slop), //\n    y + random(-slop, slop)\n  );\n  vertex(\n    x + w + random(-slop, slop), //\n    y + h + random(-slop, slop)\n  );\n  vertex(\n    x + random(-slop, slop), //\n    y + h + random(-slop, slop)\n  );\n  endShape(CLOSE);\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love the colours on the last one!",
        "created_at": { "$date": "2023-02-24T02:13:13.879Z" }
      },
      {
        "commenter_id": "eeksZiGaSD3xMNF54",
        "comment": "Light Stroke has such a glass breaking feel",
        "created_at": { "$date": "2023-02-24T20:04:40.522Z" }
      }
    ]
  },
  {
    "_id": "9kmdZhNJhTh4vRvTT",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": { "$date": "2023-02-05T06:48:21.846Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "97ada5ebaac91529125d1b2dcebc7240",
        "public_id": "avalanche2023spring/kl9mso0r7tg56mq2dahp",
        "version": 1675579717,
        "version_id": "d508108449b85b7d8ef3d61c096e9bc9",
        "signature": "e2b17a06d7a519d3dad231d589920c7a6981c536",
        "width": 1600,
        "height": 2000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-05T06:48:37Z",
        "tags": [],
        "bytes": 2102144,
        "type": "upload",
        "etag": "f18c70d4c39bea405e97c060049af170",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675579717/avalanche2023spring/kl9mso0r7tg56mq2dahp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675579717/avalanche2023spring/kl9mso0r7tg56mq2dahp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T14:37:39.172Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T15:12:21.208Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T16:52:00.069Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T22:20:47.163Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T21:24:52.038Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T14:43:52.041Z" }
      }
    ],
    "lesson": "Random",
    "title": "",
    "description": "My attempt at a Rothko 😩\nUsing the grass coding challenge as a starting point",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Wow!",
        "created_at": { "$date": "2023-02-05T14:37:57.087Z" }
      }
    ]
  },
  {
    "_id": "9mgtRdAwhMg6zkkom",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T15:25:41.418Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "59bfdc4f09b4058da77c347e816c0520",
        "public_id": "avalanche2023spring/vdi00dtahbunumg9fxxi",
        "version": 1677770810,
        "version_id": "0d6d7d37bc243f6ba41c6cac1e1cbdff",
        "signature": "55c795ff5c91bf3bb160dacedd096641f27d3fa3",
        "width": 732,
        "height": 762,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T15:26:50Z",
        "tags": [],
        "bytes": 254243,
        "type": "upload",
        "etag": "20459635f31c6c76b4c0a25371f97aea",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677770810/avalanche2023spring/vdi00dtahbunumg9fxxi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677770810/avalanche2023spring/vdi00dtahbunumg9fxxi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 5 (3/4): Take it or leave it, I couldn't figure out how to actually get the colors to range based on the diameters.",
    "comments": []
  },
  {
    "_id": "9r6Hptu2XXyWShXWf",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T01:23:51.591Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "99e8b7cffdd40549bb86a2bbb4dfe33c",
        "public_id": "avalanche2023spring/isr9yytbpa6kpe8ycfbn",
        "version": 1679621044,
        "version_id": "c33ddb103483bf37f821e77a2d9e5315",
        "signature": "43d8b51609d4a5fb62cd085d2d6b44febac57e1a",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T01:24:04Z",
        "tags": [],
        "bytes": 459516,
        "type": "upload",
        "etag": "e2ac2a74c7880928bcce18a93bd42d74",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679621044/avalanche2023spring/isr9yytbpa6kpe8ycfbn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679621044/avalanche2023spring/isr9yytbpa6kpe8ycfbn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T02:02:46.556Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:56:54.956Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge with Sora. I took her initial sketch of the triangle spiral that she sent me and tinkered around with it in Illustrator, experimenting with blending using more than 2 targets.",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "This looks lovely! I love the balance of chaos and order here...",
        "created_at": { "$date": "2023-03-24T02:03:31.973Z" }
      }
    ]
  },
  {
    "_id": "9wHhnqt2qNReoW7qj",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T03:40:57.638Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "43a3283cedf04279722a7d6aa17b2fa1",
        "public_id": "avalanche2023spring/yxhng6cms49kxjqveyrk",
        "version": 1683258069,
        "version_id": "92f2cf5bb8c385d461355ff91595da00",
        "signature": "f44cd70b66a90ff1854d9763958593957c0cbfd1",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T03:41:09Z",
        "tags": [],
        "bytes": 3570875,
        "type": "upload",
        "etag": "8389508f348c659e397ae71357e65bd3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683258069/avalanche2023spring/yxhng6cms49kxjqveyrk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683258069/avalanche2023spring/yxhng6cms49kxjqveyrk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T03:52:09.943Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T03:57:14.149Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T04:32:02.089Z" }
      }
    ],
    "title": "",
    "description": "Here's my final castle render! All elements were created in OpenScad except the shells. I rendered this in Blender and I really had fun using modifiers and creating the shells.",
    "comments": []
  },
  {
    "_id": "9wT8z6ttLbrbgnxsY",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": { "$date": "2023-02-04T03:44:49.923Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bbff36251f3a444c868093c022dd14b2",
        "public_id": "avalanche2023spring/nbgfisuic7sb6k6c3yf9",
        "version": 1675482512,
        "version_id": "0dd2c472a0cec4adea5505b3225901b2",
        "signature": "082d723c705c01566e875d4a993c456117fbb734",
        "width": 1306,
        "height": 1306,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-04T03:48:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 2100653,
        "type": "upload",
        "etag": "86cadab5ac70eda8740a20c8e560cb5d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675482512/avalanche2023spring/nbgfisuic7sb6k6c3yf9.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675482512/avalanche2023spring/nbgfisuic7sb6k6c3yf9.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126662",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "402790",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 881392,
        "duration": 19.066667,
        "rotation": 0,
        "nb_frames": 1205,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "536ba3aea3d8be9a55e5b51871a687a7",
        "public_id": "avalanche2023spring/uojtqn0ykzgdmtmc6itb",
        "version": 1675483843,
        "version_id": "6b2fbdf82730cec53f84e0b11fed6fad",
        "signature": "dbbb233349f217a6f66a022325e9a0d6ba4f40ce",
        "width": 1300,
        "height": 1302,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-04T04:10:43Z",
        "tags": [],
        "bytes": 91336,
        "type": "upload",
        "etag": "f9f1242f3cce28dd65501e19aad13c71",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675483843/avalanche2023spring/uojtqn0ykzgdmtmc6itb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675483843/avalanche2023spring/uojtqn0ykzgdmtmc6itb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "50a3ba1461b0f80dc200582b76fe3733",
        "public_id": "avalanche2023spring/s8skhdsqxnq7sfnenmpf",
        "version": 1675483967,
        "version_id": "30ad7d9d2a346f6000110d0b447589fc",
        "signature": "e767f43283c4168bdce27c634b784f68d41d95a3",
        "width": 1300,
        "height": 1302,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-04T04:12:47Z",
        "tags": [],
        "bytes": 109341,
        "type": "upload",
        "etag": "75bb488d8821089886a6592652ce9006",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675483967/avalanche2023spring/s8skhdsqxnq7sfnenmpf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675483967/avalanche2023spring/s8skhdsqxnq7sfnenmpf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-04T04:06:42.083Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T08:41:02.397Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T15:12:19.533Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T19:55:41.429Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T03:50:52.353Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T06:16:50.926Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T17:43:53.356Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:16.438Z" }
      }
    ],
    "lesson": "Random",
    "title": "",
    "description": "**Brownian Motion inspired by CompForm Textbook**: Yet to figure out how to avoid coloring over a section that has already been colored - like the textbook seems to do. On mouse click, the gradient color scheme being followed by the painted pixels change to another random scheme. In order to create an aesthetic I want, I click past color schemes I don't like much (but not without leaving a tiny mark of it behind with no assurance that it'll be covered up).",
    "inspiration_name": "CompForm Textbook",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x, y;\nlet startColor, endColor;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n // noLoop();\n  background(240);\n  x=width/2; y=height/2;\n  frameRate(64);\n  \n  noStroke();\n  startColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n  endColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n  \n  push();\n    fill(startColor);\n    textSize(20);\n    text('Click to change colour', 24, 32);\n  pop();\n}\n\nfunction draw() {\n    \n    //Recalibrate in case x or y lies outside the canvas\n    if (x<0) x+=24; \n    if (x >width-12) x-=24;\n    \n    if (y<0) y+=24;\n    if (y>height-12) y-=24;\n  \n    //Draw square\n    let tempColor = lerpColor (startColor, endColor, random());\n    fill(tempColor);\n    rect(x, y, 12, 12);\n    \n    //Calculate next random adjacent x/y position\n    let a = random();\n    if ( a < 0.33 && frameCount!=0) {\n      x-=12;\n    } else if (a < 0.66){ \n      x+=12;\n    }\n    a = random();\n    if ( a < 0.33 && frameCount!=0) {\n      y-=12;\n    } else if (a < 0.66){ \n      y+=12;\n    }\n  \n  \n}\n\nfunction mouseClicked(){\n  startColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n  endColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n}",
    "comments": [
      {
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "comment": "very nice!",
        "created_at": { "$date": "2023-02-05T15:12:17.206Z" }
      }
    ],
    "inspiration_url": "https://compform.net/"
  },
  {
    "_id": "A5WxjYsB3dSB8xpBF",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T02:11:24.444Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "669b1d0f0de2d88b41bad2d00645704e",
        "public_id": "avalanche2023spring/u2grx080vcqumli8zkvz",
        "version": 1680142287,
        "version_id": "787fb8fd667702106b493ffaccaf2a21",
        "signature": "10ebbd118c3eadba7a558728779aebe6e5293628",
        "width": 600,
        "height": 596,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-30T02:11:27Z",
        "tags": [],
        "bytes": 9203,
        "type": "upload",
        "etag": "7ea75b1fa0735770c6d1caf9311611a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680142287/avalanche2023spring/u2grx080vcqumli8zkvz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680142287/avalanche2023spring/u2grx080vcqumli8zkvz.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T04:21:23.88Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:49.876Z" }
      }
    ],
    "title": "",
    "description": "This sketch didn't turn out as I hoped it would. I wanted the music note to randomly move every time a sound is played but unfortunately I struggled with realizing my idea and ended up cutting this down to what it is right now. At least I got the note to vibrate but I ran out of time from trying to get to this point.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nlet x = 200;\nlet y = 200;\nlet mousebuttonClicked = false;\n\nfunction setup() {\n  createCanvas(400, 400);\n  frameRate(30);\n}\n\nconst synth = new Tone.Synth({\n    envelope: {\n    attack: 0.1,\n    decay: 1,\n    sustain: 3,\n    release: 3,\n  },\n});\n\nsynth.toMaster();\nconst notes = [\"G3\", \"A3\", \"B3\", \"C3\", \"D3\", \"E3\", \"F3\"];\n\nfunction mousePressed() {\n  mousebuttonClicked = true;\n  synth.triggerAttackRelease(random(notes), \"8n\");\n}\n\nfunction mouseReleased() {\n  mousebuttonClicked = false;\n}\n\nfunction draw() {\n  background(50);\n  \n  fill(255);\n  strokeWeight(2);\n  \n  if(mousebuttonClicked === true){\n      translate(random(-50, 50) + 10, random(-50, 50) + 10);\n  }\n  \n  rect(x + 5, y - 100, 40, 20);\n  rect(x + 5, y - 100, 20, 100);\n  ellipse(x, y, 50, 50);\n}",
    "comments": []
  },
  {
    "_id": "A6ZhQRRpctfobpcc2",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-19T05:45:49.616Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1c475dff7964f07304f0480c7fcaa169",
        "public_id": "avalanche2023spring/srcqcegu8xx5inzgw8ux",
        "version": 1681883245,
        "version_id": "aff2e1f608e49d0c6265d068d7aa9668",
        "signature": "4bddb2540abae9595acd6b9a3938d71b60eb44bb",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T05:47:25Z",
        "tags": [],
        "bytes": 4485732,
        "type": "upload",
        "etag": "757ada92d208bab5554484e621edb4d1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681883245/avalanche2023spring/srcqcegu8xx5inzgw8ux.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681883245/avalanche2023spring/srcqcegu8xx5inzgw8ux.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f0c6e387604a6f4e11f8bc973d55e3e4",
        "public_id": "avalanche2023spring/tnm2bqcwd7whgratcyek",
        "version": 1681883265,
        "version_id": "4977f561e347ef087ecae5f1cd090833",
        "signature": "b7c23a0a641b89277846f34aefe8215e80f00c94",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-19T05:47:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 10461895,
        "type": "upload",
        "etag": "0e25a7a73ae144f7758b0c200da93c58",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681883265/avalanche2023spring/tnm2bqcwd7whgratcyek.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681883265/avalanche2023spring/tnm2bqcwd7whgratcyek.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681883265/avalanche2023spring/tnm2bqcwd7whgratcyek.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128259",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "4914200",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5052021,
        "duration": 16.566667,
        "rotation": 0,
        "nb_frames": 995,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T19:24:52.624Z" }
      }
    ],
    "title": "",
    "description": "I used chatgpt to debug the code for this interactive letter I. I fed it the JS code and asked it to pinpoint any mistakes. It was able to figure out syntax errors like missing or incorrect quotation marks but it did struggle to spot errors with names and variables. I think it’s a great debugging tool but you probably shouldn’t use it for starter sketches unless you’re good at prompting.",
    "comments": [],
    "code": "const letters = document.querySelectorAll(\".fill\");\n/*pink, yellow, orange, skin, teal*/\nconst palette = ['#EAC435', '#1E96FC', '#FF6F59', '#D90368','#A246DD']\n\n// \n\nfor (const letter of letters){\n  let parts = letter.querySelectorAll(\".fill\");\n  letter.addEventListener(\"mouseenter\", function(){\n      // loop through the parts\n     // letter.style.borderRadius = \"80%\";\n        // set the \"transform\" style to random translation and rotation within a range\n          letter.style.transform = `translateY(${Math.random()*300 - 150}%) translateX(${Math.random()*300 - 150}%) rotate(${Math.random()*800 - 250}deg)`;\n        // pick a random color for their background\n        letter.style.background = palette[Math.floor(Math.random()*palette.length)];\n      });\n\n  }\n\ndocument.addEventListener(\"mousedown\", function(){\n  for (const letter of letters){\n    // clear the \"style\" attribute that we added earlier\n    letter.removeAttribute(\"style\");\n  }\n});"
  },
  {
    "_id": "ABrbgWfRRqDoqnfta",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T22:49:41.502Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "89dead54d6388e941eb0f1b9d2952b91",
        "public_id": "avalanche2023spring/zlukfodihiattbcmsqwl",
        "version": 1682031007,
        "version_id": "8976b135e5d3cfc2d73e9875c32ad645",
        "signature": "2278972debd56f25c9d3b8cca3d0e41a5749b2c9",
        "width": 6144,
        "height": 3072,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-20T22:50:07Z",
        "tags": [],
        "bytes": 3245653,
        "type": "upload",
        "etag": "30903f4104f93b2e2fb5ebbb070f90bd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682031007/avalanche2023spring/zlukfodihiattbcmsqwl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682031007/avalanche2023spring/zlukfodihiattbcmsqwl.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "47bc26c5ce507f979429a122d465aacd",
        "public_id": "avalanche2023spring/fbyixjnpkrwkrrtg2cpj",
        "version": 1682031013,
        "version_id": "fad9fab81c1ffa8cb8e1fad40750f248",
        "signature": "84bdc9162bb2c47f588830a5bc2ed63a383ecac0",
        "width": 6144,
        "height": 3072,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-20T22:50:13Z",
        "tags": [],
        "bytes": 3430170,
        "type": "upload",
        "etag": "e34ce56d387a64f40140ff83aef5f4ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682031013/avalanche2023spring/fbyixjnpkrwkrrtg2cpj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682031013/avalanche2023spring/fbyixjnpkrwkrrtg2cpj.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "89f02882fd14f6d7c4f0aca98ba2ef15",
        "public_id": "avalanche2023spring/df9v715ctkx5hdow9ar5",
        "version": 1682031016,
        "version_id": "45f4c05e6139a63e519373a9cbacc924",
        "signature": "0e6bd899e8dad2958aa610549600141fdf682215",
        "width": 6144,
        "height": 3072,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-20T22:50:16Z",
        "tags": [],
        "bytes": 3033420,
        "type": "upload",
        "etag": "3eb890a03f6e22b487164b61dcefaaf1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682031016/avalanche2023spring/df9v715ctkx5hdow9ar5.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682031016/avalanche2023spring/df9v715ctkx5hdow9ar5.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T01:01:13.897Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:01:10.541Z" }
      }
    ],
    "title": "",
    "description": "Playing with Skybox Lab! I wanted to put in my idea for my studio project to see what this program would come up but it did not do a great job. The sketches are beautiful but I wanted a 3d rendered painting of a cyber microbial world. I believe midjourney will give me better output",
    "comments": []
  },
  {
    "_id": "ACnWWYwAY53dXZ7et",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T14:49:42.689Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b956b56d6b0039e4881acd461fe83d99",
        "public_id": "avalanche2023spring/wfjamyifn148aqx5lcnm",
        "version": 1682002201,
        "version_id": "44b8ba705f3a85a612ab8197f38ca2bc",
        "signature": "81c6535b883d9f3c9cd4c2c4969820908b4903ff",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-20T14:50:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 19950466,
        "type": "upload",
        "etag": "3a2c5383c7e3e5db29c6a20b29a9b74b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682002201/avalanche2023spring/wfjamyifn148aqx5lcnm.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682002201/avalanche2023spring/wfjamyifn148aqx5lcnm.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682002201/avalanche2023spring/wfjamyifn148aqx5lcnm.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "65545",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "17409940",
          "dar": "16:9",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 18666593,
        "duration": 8.550233,
        "rotation": 0,
        "nb_frames": 267,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "17fd5c544e678d01ab0084ca75419882",
        "public_id": "avalanche2023spring/habpksgwjugpcaq0qtag",
        "version": 1682002628,
        "version_id": "ab5153fa4f4b96f645d969587d6b5ba2",
        "signature": "41ef88a085eab3fa3e0c01f9e3517b16d4d1257a",
        "width": 3320,
        "height": 1762,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T14:57:08Z",
        "tags": [],
        "bytes": 6677306,
        "type": "upload",
        "etag": "f41a504a9fd602355665f9c671039d64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682002628/avalanche2023spring/habpksgwjugpcaq0qtag.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682002628/avalanche2023spring/habpksgwjugpcaq0qtag.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a5c712e3e45f8a86294fc6fe096010c2",
        "public_id": "avalanche2023spring/t2pbssxsqoridhzsiifi",
        "version": 1682002632,
        "version_id": "37f4ded518bdf2ed4ffec8ac0262b793",
        "signature": "64c85d9712afe2771d5f253e668ded8abe8ff9c1",
        "width": 3308,
        "height": 922,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T14:57:12Z",
        "tags": [],
        "bytes": 2648160,
        "type": "upload",
        "etag": "9b07e304694e18991dfb9aeae85381eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682002632/avalanche2023spring/t2pbssxsqoridhzsiifi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682002632/avalanche2023spring/t2pbssxsqoridhzsiifi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T17:42:20.288Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T19:02:38.641Z" }
      }
    ],
    "title": "",
    "description": "I enjoyed training my own model using Playform. I wanted to test which elements, features of the images it takes up. I used my 36 Days of Type from 3-4 years ago and used it as the input collection - It gave some interesting results.  I noticed a lot of the patterns, ink-ness and shadows in each of the output images consistently. If you look closely at the generated images, you can almost see some features of animals in some of them but in the most abstract way. The last image I have put here is the input for the training model.",
    "comments": []
  },
  {
    "_id": "AJzYJRNXqLBfn4R2h",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T00:57:07.649Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1ea2575b70f463f25f11db73158f4947",
        "public_id": "avalanche2023spring/vbksvb619fqm9wqsibyt",
        "version": 1677117205,
        "version_id": "a5dcc01ec137a8bca8281d13e4f95f01",
        "signature": "6d224e6858b5b8e835a5fb10ea9df55a18d26a6a",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T01:53:25Z",
        "tags": [],
        "bytes": 126636,
        "type": "upload",
        "etag": "04b98d41a93dbebf4f53c54eb730ce72",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677117205/avalanche2023spring/vbksvb619fqm9wqsibyt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677117205/avalanche2023spring/vbksvb619fqm9wqsibyt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T04:12:49.567Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T13:22:59.569Z" }
      }
    ],
    "title": "",
    "description": "Pretty mild sketch that I passed on to Rama for the pair sketch! Here I was experimenting with making shapes using mathematical graph equations and passing functions as objects. I got the math part to work but wasn't able to do anything particularly interesting in manipulating the forms that I produced. A really powerful technique that I think I can work on more!",
    "code": "function setup() {\n  createCanvas(1000, 1000);\n  noLoop();\n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(220);\n  let cloverLeaf = buildCurve(cloverFunction, 50);\n \n  translate (100, 50);\n  for(let i = 0; i < 80; i++) {\n    rotate(360/(i));\n      fill(360, 20+i,40);\n    beginShape();\n      for (let j = 0; j < cloverLeaf.length; j++) {\n        translate(.8,.8)\n        vertex(cloverLeaf[j].x*4, cloverLeaf[j].y*4)\n      }\n    endShape(CLOSE);\n  }\n}\n\n  function cloverFunction(t){\n    let point = {\n      x:pow(sin(2*PI*t), 3) * 16,\n      y:(13*cos(2*PI*t))-(5*cos(2*PI*t*2))-(2*cos(2*PI*t*3))-(cos(2*PI*t*4))\n    };\n    return point;\n  }\n\n  function buildCurve(f, npts)\n    {\n        let pts = [];\n        for (var i = 0; i < npts; i++) \n        {\n            let pt = f(i / (npts-1));\n            pts.push(pt);\n        }\n        return pts;\n\n    }",
    "comments": []
  },
  {
    "_id": "ANPX2SF7xDgWr7Lyb",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T05:59:58.98Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3270630102d2cf6e62ae249e50f35c78",
        "public_id": "avalanche2023spring/xv83aujhenmfbe3n2mud",
        "version": 1676008841,
        "version_id": "34c6a584432b7dc3123909383fdd0428",
        "signature": "c669fa9255613d7423bef37ebae1bc1fa3cc8698",
        "width": 800,
        "height": 442,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T06:00:41Z",
        "tags": [],
        "bytes": 35784,
        "type": "upload",
        "etag": "5ad50c491d07e05368c02d0bd0d36f63",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676008841/avalanche2023spring/xv83aujhenmfbe3n2mud.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676008841/avalanche2023spring/xv83aujhenmfbe3n2mud.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T17:14:28.236Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T05:59:55.335Z" }
      }
    ],
    "title": "",
    "description": "Randomly generated combinations of breakfast items and a side by combining two arrays (based on my own eating habits lately). \n\nI wanted to use this to do a bit of basic dom-manipulation with javascript and try to implement biases outside of p5 but didn't have enough time to explore the latter properly.",
    "code": "//food options arrays\nconst mainFood = [\"Omlette\", \"Instant Noodles\", \"Cereal & Milk\", \"Chicken Sandwich\"];\nconst sideFood = [\"Milk\", \"Nothing\", \"Bread\", \"Yogurt\", \"Grapes\", \"Potatoes\", \"Banana\"];\n\nconst getRandomNumber = (max) => Math.floor(Math.random() * max);\n\n//get a random item from list\nconst getRandomFood = () => `${mainFood[getRandomNumber(mainFood.length)]} and ${sideFood[getRandomNumber(sideFood.length)]}`;\n\n//update DOM\nconst setRandomFood = () => {\n  document.getElementById('item-name').innerText = getRandomFood();\n};\n\n\n//generate on button click event\ndocument.getElementById('generate')\n  .addEventListener('click', setRandomFood);\n\n// console.log(getRandomFood());\n\n// setRandomFood();",
    "comments": []
  },
  {
    "_id": "APEAhF32bE3fNtK6S",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T04:33:14.15Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6c2a969b283e6c249cf214b0979f10e9",
        "public_id": "avalanche2023spring/kfiaqygfe8w2s4xspfbc",
        "version": 1676522103,
        "version_id": "571329291e453d0ce39d7ea1af424ce5",
        "signature": "582678706ef81a7bbeda8416dbfc50bd4dd764ab",
        "width": 1419,
        "height": 1419,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T04:35:03Z",
        "tags": [],
        "bytes": 1366314,
        "type": "upload",
        "etag": "ce84f674dd8dcfaf23fa40d0958371d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676522103/avalanche2023spring/kfiaqygfe8w2s4xspfbc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676522103/avalanche2023spring/kfiaqygfe8w2s4xspfbc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T05:06:21.021Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:27.817Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T01:47:26.544Z" }
      }
    ],
    "title": "",
    "description": "Attempt at a treasure map, the treasure is supposed to be at the \"lowest\" (darkest) point, indicated by the empty square, while the \"highest\" point is indicated by the white square",
    "comments": []
  },
  {
    "_id": "AStMp65XQhe73oK9E",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T20:07:04.172Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fc12fbcc56bb156312e6f48e5ddfcac4",
        "public_id": "avalanche2023spring/wi6ekxjsjxefipac748m",
        "version": 1677183132,
        "version_id": "59d0e8294aff50b096986e22f354a218",
        "signature": "4d9e54ea65a1d9e28c3a4769cb01e2f252866dd6",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T20:12:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 11699418,
        "type": "upload",
        "etag": "519af35ad8a7bb415c962b4e8b80e575",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677183132/avalanche2023spring/wi6ekxjsjxefipac748m.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677183132/avalanche2023spring/wi6ekxjsjxefipac748m.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677183132/avalanche2023spring/wi6ekxjsjxefipac748m.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "9341117",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 9343650,
        "duration": 10.016667,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "01498c10bcf1cb5620e34f175c823df7",
        "public_id": "avalanche2023spring/w5mrmfxojyxxboczslby",
        "version": 1677183490,
        "version_id": "61ccfb690cb96ed65c76bd31d85bd074",
        "signature": "deca7e943b385b7d19c3c6e4fa885eb50c3ef3b0",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T20:18:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 8576156,
        "type": "upload",
        "etag": "544d3df455cd932635786feac11c5381",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677183490/avalanche2023spring/w5mrmfxojyxxboczslby.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677183490/avalanche2023spring/w5mrmfxojyxxboczslby.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677183490/avalanche2023spring/w5mrmfxojyxxboczslby.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "6846704",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 6849281,
        "duration": 10.016667,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a95a8a9d0f823f27101d907aeefc102d",
        "public_id": "avalanche2023spring/m7jwqhsm6lty1cytfofn",
        "version": 1677183825,
        "version_id": "58887c40cb47875cb76340ff2c49a465",
        "signature": "3a44a0e6f0fcc987456111e17052a998b669954a",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T20:23:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 9265081,
        "type": "upload",
        "etag": "b658bd26fb49dd210625e4f3a81606ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677183825/avalanche2023spring/m7jwqhsm6lty1cytfofn.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677183825/avalanche2023spring/m7jwqhsm6lty1cytfofn.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677183825/avalanche2023spring/m7jwqhsm6lty1cytfofn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "7396917",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 7399485,
        "duration": 10.016667,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:55:45.043Z" }
      }
    ],
    "title": "",
    "description": "More shader-park! Found an interesting way to make cloud-like textures 😍",
    "inspiration_name": "(ShaderPark Link)",
    "inspiration_url": "https://shaderpark.com/embed/-NOzqC70ztczi1vFilVi",
    "comments": []
  },
  {
    "_id": "Ah7hut66qg5THhinc",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": { "$date": "2023-04-28T10:39:02.257Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "be00a4e4ec1363f8ffabfac722c76ffc",
        "public_id": "avalanche2023spring/ffpkxd8tjhpzyr0sl2hc",
        "version": 1682678349,
        "version_id": "2088542e46ee05e52dc01ec10cb0aff7",
        "signature": "4f343dad0d8b0e0c7395b9a042859718df3badda",
        "width": 1468,
        "height": 722,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T10:39:09Z",
        "tags": [],
        "bytes": 148183,
        "type": "upload",
        "etag": "f05b37ce0f4a8dc97e1dc568bdc731ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682678349/avalanche2023spring/ffpkxd8tjhpzyr0sl2hc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682678349/avalanche2023spring/ffpkxd8tjhpzyr0sl2hc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "14581fc8de2530dc603e6289a31c3fda",
        "public_id": "avalanche2023spring/vevesnnxyegtkx4whyuh",
        "version": 1682678352,
        "version_id": "1d1a85471dba7adf3cfe2c65666b7ae2",
        "signature": "3b36a6937952a801e171a2d7d150c7900adf4bab",
        "width": 1372,
        "height": 684,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T10:39:12Z",
        "tags": [],
        "bytes": 157991,
        "type": "upload",
        "etag": "1cc22830248b72693a3531c804d20996",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682678352/avalanche2023spring/vevesnnxyegtkx4whyuh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682678352/avalanche2023spring/vevesnnxyegtkx4whyuh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "WEEK 12 (1/4): I COULD NOT FIGURE OUT THE NODE THING :(  Using ChatGPT to basically mimic the assignment just because I wanted to see how different it would be from the way we were doing things in class.",
    "comments": []
  },
  {
    "_id": "Amedyak7cPwTbmPK8",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": { "$date": "2023-02-03T15:42:27.478Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a6e6c7bee93101e652c31446fff9afe0",
        "public_id": "avalanche2023spring/w2jt4qargl9vfgfpjnos",
        "version": 1675872954,
        "version_id": "bc045ab0d11755eccad7986ba5c3e82e",
        "signature": "e402a63c2f2e39063783b7306b77f03a2108c742",
        "width": 752,
        "height": 730,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T16:15:54Z",
        "tags": [],
        "bytes": 27844,
        "type": "upload",
        "etag": "a881497154dd2133ad6f3374c6646f97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675872954/avalanche2023spring/w2jt4qargl9vfgfpjnos.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675872954/avalanche2023spring/w2jt4qargl9vfgfpjnos.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T16:25:12.884Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "code": "function setup() {\n\tcreateCanvas(800,800);\n\tbackground(255);\n}\n\nfunction draw() {\n\tbackground(100);\n\tfill(random(255)); \n\tcircle(mouseX, mouseY, random(0,800));\n}",
    "comments": [],
    "description": "KINETIC ENERGY"
  },
  {
    "_id": "AufZop6x9n3jBj5BT",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T04:53:06.176Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2615148d3cdfb8478ac51536f68e0a88",
        "public_id": "avalanche2023spring/v5or9yn4jf4xrdwyfdl4",
        "version": 1676004809,
        "version_id": "9233bc8019243db8aa1d0406a23e8e84",
        "signature": "745c99e6b0760ff339e1e6814838f1e02db08ae9",
        "width": 963,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T04:53:29Z",
        "tags": [],
        "bytes": 31815,
        "type": "upload",
        "etag": "9160ce06f5e295b16a3156ca6cc83aac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676004809/avalanche2023spring/v5or9yn4jf4xrdwyfdl4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676004809/avalanche2023spring/v5or9yn4jf4xrdwyfdl4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e572adcee8e7c2bb6ef7bb9905d3d418",
        "public_id": "avalanche2023spring/exz3wr1ubxv12swkilon",
        "version": 1676004925,
        "version_id": "18f9d4f486b991976c3014dd10dd6d50",
        "signature": "6fb2437b5625a7a1171dd0103ab154bd61e507f4",
        "width": 963,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T04:55:25Z",
        "tags": [],
        "bytes": 31012,
        "type": "upload",
        "etag": "fd6b5b462ac7b23bce00ce9c15c4c624",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676004925/avalanche2023spring/exz3wr1ubxv12swkilon.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676004925/avalanche2023spring/exz3wr1ubxv12swkilon.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1fca7ac4fd9eed75ac1c3e6f32d692cc",
        "public_id": "avalanche2023spring/fsxhgkcypcmrwxznkyeu",
        "version": 1676004928,
        "version_id": "6a68f66c0d29b69d3a560786698a7996",
        "signature": "e8dfdd38e355556e3a44335922f658188de920a4",
        "width": 963,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T04:55:28Z",
        "tags": [],
        "bytes": 32398,
        "type": "upload",
        "etag": "3640e14a80b4b7a0a27c0e1b91d79b9e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676004928/avalanche2023spring/fsxhgkcypcmrwxznkyeu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676004928/avalanche2023spring/fsxhgkcypcmrwxznkyeu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T07:07:48.305Z" }
      }
    ],
    "title": "",
    "description": "I was doing some more testing with color palette generation and limiting the scope of some random variables. Really beautiful results, I especially like the first one, very Monet-esque!",
    "code": "let arr = [];\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB);\n  noLoop();\n}\n\nfunction draw() {\n  noStroke();\nfor (let y = 0; y < 10; y++) {\n    for (let x = 0; x < 7; x++) {\n      let xpos = x *(floor(windowWidth/7));\n      let ypos = y *(floor(windowHeight/10));\n      \n      //set brightness to 95 and cap saturation to 70 = pastels\n      // let hue = floor(random()*360);\n      // let sat = floor(random()*70);\n      // let bright = 95;\n      \n      //set sat to 20 = neutrals\n      // let hue = floor(random()*360);\n      // let sat = 20;\n      // let bright = floor(random()*100);\n      \n      //'salad' color palette\n      // let hue = floor(random()*100);\n      // let sat = floor(random()*70);\n      // let bright = 95;\n      \n      //same idea but rotated around color wheel. Super beautiful Monet palette\n      let hue = floor(random()*100+200);\n      let sat = floor(random()*50);\n      let bright = 90;\n      \n      //Limited hue range for a nice monochrome and muted palette\n      // let hue = floor(random()*20+200);\n      // let sat = floor(random()*30);\n      // let bright = 90;\n      \n      fill(hue,sat,bright);\n      \n      rect(xpos, ypos, floor(windowWidth/7), floor(windowHeight/10));\n\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "B7TDT7YpfAncqtEaM",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-16T18:03:51.63Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8141c641ec8e503c14d81b23a9e12227",
        "public_id": "avalanche2023spring/ankvxtophwv2ycwm1xqg",
        "version": 1681668359,
        "version_id": "a473db6674cf938689a8f34f0d442df7",
        "signature": "54bb3975aa7b9fac96a33cc544b58bcb2500516f",
        "width": 2880,
        "height": 1580,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-16T18:05:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 17264224,
        "type": "upload",
        "etag": "7197a154b4692c0c100859f6a28c3fae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681668359/avalanche2023spring/ankvxtophwv2ycwm1xqg.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681668359/avalanche2023spring/ankvxtophwv2ycwm1xqg.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681668359/avalanche2023spring/ankvxtophwv2ycwm1xqg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "10227346",
          "dar": "144:79",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 10230651,
        "duration": 13.5,
        "rotation": 0,
        "nb_frames": 405,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9399ed2af85a4fc4a684352fcf513934",
        "public_id": "avalanche2023spring/irdg1l8tnozrq6rhpltw",
        "version": 1681668363,
        "version_id": "fe7a8d0d7e26318207787c52d5c539f8",
        "signature": "dcb17a5585eba21bdce5b31655ddf63dbe69dcd0",
        "width": 2872,
        "height": 1580,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-16T18:06:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 17468003,
        "type": "upload",
        "etag": "1a1aae7fbcff5013a7dc95d757017d55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681668363/avalanche2023spring/irdg1l8tnozrq6rhpltw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681668363/avalanche2023spring/irdg1l8tnozrq6rhpltw.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681668363/avalanche2023spring/irdg1l8tnozrq6rhpltw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "19497400",
          "dar": "718:395",
          "time_base": "1/30000"
        },
        "frame_rate": 30,
        "bit_rate": 19499257,
        "duration": 7.166633,
        "rotation": 0,
        "nb_frames": 215,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f245b1b88903b3f7d058c85dfa25fce5",
        "public_id": "avalanche2023spring/xdwwnkrsuelnl3uoxbr9",
        "version": 1681668366,
        "version_id": "1e30809d8c338a493077d8f7370940f8",
        "signature": "3fc2c82e2c78d82b9deaacbaf80a5bd91deabf1c",
        "width": 2874,
        "height": 1578,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-16T18:06:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 17185195,
        "type": "upload",
        "etag": "09d28ba67e31317f8d98e034a3a8a3a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681668366/avalanche2023spring/xdwwnkrsuelnl3uoxbr9.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681668366/avalanche2023spring/xdwwnkrsuelnl3uoxbr9.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681668366/avalanche2023spring/xdwwnkrsuelnl3uoxbr9.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "10007425",
          "dar": "479:263",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 10010307,
        "duration": 13.733333,
        "rotation": 0,
        "nb_frames": 412,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-16T21:44:11.507Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T01:06:06.566Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T20:45:54.605Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T20:37:24.888Z" }
      }
    ],
    "title": "",
    "description": "Pose detection and mapping using ml5.js and an Azure Kinect. Asked ChatGPT for help with the animated lines. Its initial code was very basic but it improved with each correction.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n\n//initialise image detection variables\nlet video;\nlet poseNet;\n\n//initialise position variables\nlet nose;\nlet lefteye, righteye;\nlet leftwrist, rightwrist;\nlet xPos, yPos;\n\n//initialise draw variables\nlet lines = [];\n\nfunction setup() {\n  createCanvas(window.innerWidth, window.innerHeight);\n  \n  //create video and capture images; detect poses from feed\n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n  poseNet.on('pose', gotPoses);\n}\n\n//if pose detected, define keypoints and required body parts\nfunction gotPoses(poses) {\n  if (poses.length > 0) {\n    nose = poses[0].pose.keypoints[0];  \n    lefteye = poses[0].pose.keypoints[1];  \n    righteye = poses[0].pose.keypoints[2]; \n    leftwrist = poses[0].pose.keypoints[9]; \n    rightwrist = poses[0].pose.keypoints[10];\n  }\n}\n\n//check if model loaded\nfunction modelLoaded() {\n  console.log('loaded');\n}\n\nfunction draw() {\n  \n  // image(video, 0, 0);\n  push();\n    translate(128, 0);\n    scale(-0.2, 0.2);\n    image(video, 0, 0);\n  pop();\n\n  if (nose && lefteye && righteye && leftwrist && rightwrist) {\n    if (nose.score > 0.6) {\n\n      let cam_width = 640; //frontcam: 640; kinect:\n      let cam_height = 480; //frontcam: 480; kinect:\n\n      //movement mapped to nose position\n      xPos = map(nose.position.x, 0, cam_width, width, 0);\n      yPos = map(nose.position.y, 0, cam_height, 0, height);\n\n      //line length mapped to eye distance aka distance from camera\n      let lengthFactor = map(lefteye.position.x - righteye.position.x, 0, 200, 30, 200);\n\n      //colour inversion mapped to wrist postition\n      let wristFactor = leftwrist.position.y + rightwrist.position.y;\n      let lineCol = map(wristFactor, 200, 1000, 255, 0);\n      let bgCol = map(wristFactor, 200, 1000, 0, 255);\n      console.log(wristFactor);\n      \n      //draw background\n      background(bgCol, 10);\n      //draw lines\n      // ellipse(leftwrist.position.x, leftwrist.position.y, 10, 10);\n      // ellipse(rightwrist.position.x, rightwrist.position.y, 10, 10);\n      if (lines.length < 100) {\n        lines.push(new Line());\n      }\n      let mousePos = createVector(xPos, yPos);\n      lines.forEach(line => line.update(mousePos, noise(line.pos.x * 0.01, line.pos.y * 0.01)));\n      lines.forEach(line => line.draw(lengthFactor, lineCol));\n      lines = lines.filter(line => line.alpha > 0);\n    } \n  }\n}\n\nclass Line {\n  constructor() {\n    this.pos = createVector(random(width), random(height));\n    this.angle = random(TWO_PI);\n    this.speed = random(1, 3);\n    this.alpha = random(50, 200);\n  }\n\n  update(target, noiseVal) {\n    //calculate the direction towards the target\n    let dir = p5.Vector.sub(target, this.pos);\n    dir.normalize();\n\n    //update the angle of the line based on the direction towards the target and some noise\n    this.angle = atan2(dir.y, dir.x) + noiseVal * TWO_PI * 0.5 - TWO_PI * 0.25;\n\n    //move the line in the direction of the angle at a speed proportional to the distance to the target\n    let distance = p5.Vector.dist(target, this.pos);\n    this.pos.add(p5.Vector.fromAngle(this.angle).mult(this.speed * distance / 100));\n\n    //transparency\n    this.alpha -= 0.5;\n    if (this.alpha < 0) {\n      this.alpha = 0;\n    }\n  }\n\n  draw(lengthFactor, lineCol) {\n    stroke(lineCol, this.alpha);\n    strokeWeight(1);\n    line(\n      this.pos.x, this.pos.y, \n      this.pos.x + cos(this.angle) * lengthFactor, \n      this.pos.y + sin(this.angle) * lengthFactor\n    );\n  }\n}",
    "comments": []
  },
  {
    "_id": "B83dohuvo8MNvCDCc",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T15:12:21.671Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8f1c922f0361832b684a9dcbf1cc3adc",
        "public_id": "avalanche2023spring/jwdo11wxlscsgn3iwge6",
        "version": 1676646774,
        "version_id": "707ee264a28de0de1f0a80d291f7f7cb",
        "signature": "6fdf7e2a35bc25991140cb623a9e15217a976fcd",
        "width": 484,
        "height": 394,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-17T15:12:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 3195317,
        "type": "upload",
        "etag": "b6075785c4844e7ea0806896a8da4cd5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676646774/avalanche2023spring/jwdo11wxlscsgn3iwge6.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676646774/avalanche2023spring/jwdo11wxlscsgn3iwge6.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676646774/avalanche2023spring/jwdo11wxlscsgn3iwge6.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "1529274",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 1530690,
        "duration": 16.7,
        "rotation": 0,
        "nb_frames": 502,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "326abe19aed8b009a168142966700998",
        "public_id": "avalanche2023spring/jnimoq6odwmgqcvvqra7",
        "version": 1676646790,
        "version_id": "d420307321a468431755a1f6176dfe2f",
        "signature": "e515c9758595aeb80ec731bc2ca38663d6a70f50",
        "width": 583,
        "height": 581,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T15:13:10Z",
        "tags": [],
        "bytes": 221482,
        "type": "upload",
        "etag": "0782dd8b1c93b7b01064d3c8ad917657",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676646790/avalanche2023spring/jnimoq6odwmgqcvvqra7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676646790/avalanche2023spring/jnimoq6odwmgqcvvqra7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:26.191Z" }
      }
    ],
    "title": "",
    "description": "I was trying to map different patterns on noise with Isha's sketch!",
    "comments": []
  },
  {
    "_id": "BD6MJKCKJvLQdETfE",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T14:06:15.696Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "65fe00f5c62284208b56401b97b1d7b4",
        "public_id": "avalanche2023spring/nrmwyd0hpqacpimwkkud",
        "version": 1682086033,
        "version_id": "95c9ca3869203d6bacc0874ce9f4f393",
        "signature": "1876df85526fd239146b7d2e6f024dc612032117",
        "width": 1004,
        "height": 1292,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:07:13Z",
        "tags": [],
        "bytes": 274480,
        "type": "upload",
        "etag": "442a04c446ab8f21f03458cb1da9b922",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682086033/avalanche2023spring/nrmwyd0hpqacpimwkkud.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682086033/avalanche2023spring/nrmwyd0hpqacpimwkkud.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8e3e6f11fb09b866ca916214af2cc968",
        "public_id": "avalanche2023spring/dza7blj0vdywt0lmluh7",
        "version": 1682086042,
        "version_id": "8d6c3315529920a4faad10029ba285d0",
        "signature": "bcff9c45c9a50c3332a1c35f8558579e7b7f1007",
        "width": 822,
        "height": 988,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:07:22Z",
        "tags": [],
        "bytes": 208690,
        "type": "upload",
        "etag": "7d8c4ba2a8e2b962a5945f874af95dff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682086042/avalanche2023spring/dza7blj0vdywt0lmluh7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682086042/avalanche2023spring/dza7blj0vdywt0lmluh7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b8e19390cea8b4a675705b7a5e84a748",
        "public_id": "avalanche2023spring/plkbvx64zfhk4e80xosc",
        "version": 1682086053,
        "version_id": "97b44f08695afb5f346e77ac6d42d234",
        "signature": "52dab79a43cc25db5fc98034c939d765da8896d5",
        "width": 702,
        "height": 1016,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:07:33Z",
        "tags": [],
        "bytes": 153797,
        "type": "upload",
        "etag": "b139a3172812e8e7da5f398c15576c30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682086053/avalanche2023spring/plkbvx64zfhk4e80xosc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682086053/avalanche2023spring/plkbvx64zfhk4e80xosc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 11 ( 1/4): I could not just pick one. I never used AI before or ChatGPT so I had no Idea what I was allowed to ask it. I was assigned a prototype theme this week and asked ChatGPT for help on it and I just got lost playing with it.",
    "comments": []
  },
  {
    "_id": "BJr9mCtv69A4QnC5o",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-20T04:34:20.676Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9d0db178f4a0c7f3cc2581d1b2f3c612",
        "public_id": "avalanche2023spring/nqlvnisckwvdkutencvx",
        "version": 1676867671,
        "version_id": "2f8bdec800ae3374afcda658411ba283",
        "signature": "08e6f8109be2b33429526e55aa6c6f68444eb702",
        "width": 1200,
        "height": 1200,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-20T04:34:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 5118801,
        "type": "upload",
        "etag": "851c11bfb4cdb946fcd9a2f14692f21a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676867671/avalanche2023spring/nqlvnisckwvdkutencvx.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676867671/avalanche2023spring/nqlvnisckwvdkutencvx.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676867671/avalanche2023spring/nqlvnisckwvdkutencvx.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Baseline",
          "bit_rate": "5339400",
          "time_base": "1/90000"
        },
        "frame_rate": 30,
        "bit_rate": 5341357,
        "duration": 7.666667,
        "rotation": 0,
        "nb_frames": 230,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "25b1ffcad17e82aec75d970c39cdb02d",
        "public_id": "avalanche2023spring/yhz7ndwudpqldd8x7k3f",
        "version": 1676867680,
        "version_id": "c71f038efb3219666b5d88a321a5e194",
        "signature": "85125dc4783b781498ac8d924b47823ae4ac62c1",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-20T04:34:40Z",
        "tags": [],
        "bytes": 309118,
        "type": "upload",
        "etag": "ed420f6fc520bc90e85394e3e2108dad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676867680/avalanche2023spring/yhz7ndwudpqldd8x7k3f.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676867680/avalanche2023spring/yhz7ndwudpqldd8x7k3f.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T06:06:17.442Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T22:16:47.627Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T23:44:46.922Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T00:19:33.775Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T19:42:30.913Z" }
      }
    ],
    "title": "",
    "description": "Type experiments are best done in parameters week! \nFollowed Xin Xin's tutorial:",
    "inspiration_url": "https://www.youtube.com/watch?v=wbDF6xcgvV8",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "cuutel!",
        "created_at": { "$date": "2023-02-20T05:14:59.776Z" }
      }
    ],
    "code": "let chrom; //hold my font\nlet chromArray = []; //set up an array to receive coordinates\n// let fontSize=150; //initialize size of text\n\nconst params = {\n  circle_size: 5,\n  bg_color: \"#40E0D0\",\n  color: \"#6B40E0\",\n};\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"circle_size\", { min: 0, max: 20 });\npane.addInput(params, \"bg_color\");\npane.addInput(params, \"color\");\n\nfunction preload() {\n  chrom = loadFont(\"Chromatica.otf\");\n}\n\n\nfunction setup() {\n  createCanvas(600, 600);\n  textFont(chrom);\n  frameRate(30);\n  textSize(150);\n  noStroke();\n  textAlign(CENTER);\n  textWrap(CHAR);\n     stroke(2);\n  // rectMode(CENTER);\n  chromArray1 = chrom.textToPoints(\"comp form\", width / 2, height / 2, 100, {\n    sampleFactor: 0.08,\n  });\n\n  // chromArray2 = chrom.textToPoints(\"form\", width / 2, height / 2, params.fontSize, {\n  //   sampleFactor: 0.08,\n  // });\n\n  // print(chromArray);\n\n}\n\nfunction draw() {\n  background(params.bg_color);\n  fill(params.color);\n  addRect();\n  \n}\n\nfunction addRect() {\n  for (let i = 0; i < chromArray1.length; i++) {\n    push();\n    translate(chromArray1[i].x, chromArray1[i].y);\n    circle(-275, -150,  params.circle_size);\n circle(-275, 25,  params.circle_size);\n     circle(-275, 200,  params.circle_size);\n    // rect(-200, -100,  12);\n    pop();\n    \n    \n //     for (let i = 0; i < chromArray2.length; i++)\n //    push();\n //    translate(chromArray2[i].x, chromArray2[i].y);\n // circle(-200, 100,  params.circle_size);\n //    pop();\n  // \n}\n}"
  },
  {
    "_id": "BYgTZzorcsBpLFYzp",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": { "$date": "2023-04-28T05:22:17.014Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "01bfdb2a75f8ecc93656622db2673d87",
        "public_id": "avalanche2023spring/vqxvsgm7skrocbrqijdj",
        "version": 1682659400,
        "version_id": "fcbd8cc8b520e36d42496345ad4a14ef",
        "signature": "c083105b73d821c82de4f9a619631c5b8d98421a",
        "width": 898,
        "height": 1182,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:23:20Z",
        "tags": [],
        "bytes": 484304,
        "type": "upload",
        "etag": "5cecef5f46f0e728493d680091265ed3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682659400/avalanche2023spring/vqxvsgm7skrocbrqijdj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682659400/avalanche2023spring/vqxvsgm7skrocbrqijdj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "fb11743cc588190951a078290d5b46e3",
        "public_id": "avalanche2023spring/ennpkfhp0wrj8g2d7pqo",
        "version": 1682659417,
        "version_id": "12f9e3c49ea5ba4f694680a98121a1f8",
        "signature": "0c86de538ebed9d752ee53b614d1a98b0ea86ae5",
        "width": 914,
        "height": 1352,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:23:37Z",
        "tags": [],
        "bytes": 593229,
        "type": "upload",
        "etag": "772c99ed32bcbb20074c714a154bae62",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682659417/avalanche2023spring/ennpkfhp0wrj8g2d7pqo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682659417/avalanche2023spring/ennpkfhp0wrj8g2d7pqo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "030427a643aec0e6778f8269df85470b",
        "public_id": "avalanche2023spring/eijz9rvicakrtp5sw7qe",
        "version": 1682659723,
        "version_id": "fb30e949b7ee92b57240dc2de407e346",
        "signature": "f6d5b18d4f67b4b600a89e51e4360da20da478b1",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T05:28:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 10820212,
        "type": "upload",
        "etag": "6daab411b7161bdebd2ff52cf88d4d12",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682659723/avalanche2023spring/eijz9rvicakrtp5sw7qe.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682659723/avalanche2023spring/eijz9rvicakrtp5sw7qe.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682659723/avalanche2023spring/eijz9rvicakrtp5sw7qe.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128088",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2504885",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 2638405,
        "duration": 32.808333,
        "rotation": 0,
        "nb_frames": 984,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T05:48:15.789Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "Chords Progression Generator with openAI: Spent most of the 2 hours setting up and troubleshooting, the culprit: an expired API key. I did manage to sample a quick song-maker that takes inputs of a person's favorite song for lyrics and their favorite key for music to spit out a new composition. You can see the difference in both harmony and words with the temperature being 0.2 and 0 respectively. I also played out the chords to see if they’re in tune (only at 0) and yes very much so! the 0.2 was off key so that's for my ears only.",
    "code": "import { ask, gpt, end } from \"./shared.js\";\n\nmain();\n\nasync function main() {\n  console.log(\"Hello, GPT!\");\n  const name = await ask(\"What is you favorite song?\");\n  const chord = await ask(\"What is your favorite key in music?\");\n  // let prompt = await ask(\"What do you want to ask?\");\n\n  // let result = await gpt(prompt, { temperature: 0.3 });\n  // console.log(`\"\"\"\\n${result}\\n\"\"\"`);\n\n  console.log(\"\");\n\n  const prompt = `My name is ${name} and I am from ${chord}. Make a new song based on the favorite key and suggest a chord pattern in the same key.`;\n\n  const song = await gpt(prompt, { temperature: 0.2 });\n  console.log(`\"\"\"\\n${song}\\n\"\"\"`);\n\n  end();\n}",
    "comments": []
  },
  {
    "_id": "Bhnmp6tuT2kbxS4Wu",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T12:27:34.819Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d4085255067245331a12dfdb63938dfe",
        "public_id": "avalanche2023spring/isr6hxwe12oxo3extek3",
        "version": 1679660860,
        "version_id": "adeb98040388e057be595c032f2cb8c2",
        "signature": "122f018e82aa3d19998bd330f4bce234f8fc3007",
        "width": 1151,
        "height": 919,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T12:27:40Z",
        "tags": [],
        "bytes": 575374,
        "type": "upload",
        "etag": "5507abf8e109116bcd0d7d1dd5ebab55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679660860/avalanche2023spring/isr6hxwe12oxo3extek3.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679660860/avalanche2023spring/isr6hxwe12oxo3extek3.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Interesting pattern I came across when experimenting",
    "comments": []
  },
  {
    "_id": "Bki6ay7XaZko7ByFX",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-28T00:00:02.708Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "df9d9bac233451c01e12d1beb4ed78ea",
        "public_id": "avalanche2023spring/xmiuala23jd0pn0n12nz",
        "version": 1677542599,
        "version_id": "34497ad164edf803dfbf9021a373b476",
        "signature": "ad0a53163caaf4d2b0e9f103cf0b497109e1c27a",
        "width": 996,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-28T00:03:19Z",
        "tags": [],
        "bytes": 249046,
        "type": "upload",
        "etag": "4accac62ead064ef747a5a5e15243b90",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677542599/avalanche2023spring/xmiuala23jd0pn0n12nz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677542599/avalanche2023spring/xmiuala23jd0pn0n12nz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-03-01T14:21:03.964Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T05:38:57.769Z" }
      }
    ],
    "title": "",
    "description": "For the extension of Challenge 1, I tried integrating the dots challenge code with the \"cull close before placing\" code from the Point Placing demo. Would love to try to push this further in a future week",
    "comments": []
  },
  {
    "_id": "BmN6p8ADzqQ7wE6wC",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T03:09:45.782Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "603e1c187be440b9bc812c4f7bba76f5",
        "public_id": "avalanche2023spring/df8n1ayv9wczvkmcckib",
        "version": 1683860997,
        "version_id": "71e3b5bbd62e3040c16367ad56553979",
        "signature": "4439788dd9ec71c67779fcfac5156ba120277705",
        "width": 1944,
        "height": 1926,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:09:57Z",
        "tags": [],
        "bytes": 1556315,
        "type": "upload",
        "etag": "de5ac630ef99fee16c549a595328c17b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860997/avalanche2023spring/df8n1ayv9wczvkmcckib.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860997/avalanche2023spring/df8n1ayv9wczvkmcckib.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "21fb403e64d88d9cfc2501ecad667668",
        "public_id": "avalanche2023spring/sijqdkhcxyqg1ppwmzoe",
        "version": 1683861000,
        "version_id": "671beeac1711b60df0f7cc419e00c88b",
        "signature": "7f57b2cf6bffa8a06e3495b0522d8c6cd53ef772",
        "width": 1978,
        "height": 1934,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:10:00Z",
        "tags": [],
        "bytes": 1302883,
        "type": "upload",
        "etag": "e07a23287da20fb0aa0953f90707cc76",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683861000/avalanche2023spring/sijqdkhcxyqg1ppwmzoe.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683861000/avalanche2023spring/sijqdkhcxyqg1ppwmzoe.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "edf9fce9f815fd299947a0dbcabfd1f0",
        "public_id": "avalanche2023spring/qvpxd2ay5f66lwiz0rrj",
        "version": 1683861008,
        "version_id": "5d05051a4b8c19d3bfb0bbec0e758449",
        "signature": "532fafc846668d1b59cc9c3c5c84536e9463d66b",
        "width": 1964,
        "height": 1952,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:10:08Z",
        "tags": [],
        "bytes": 2236080,
        "type": "upload",
        "etag": "535fee2a902e48b93f0755be78006275",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683861008/avalanche2023spring/qvpxd2ay5f66lwiz0rrj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683861008/avalanche2023spring/qvpxd2ay5f66lwiz0rrj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T04:36:17.377Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T16:18:16.068Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:14:30.955Z" }
      }
    ],
    "title": "",
    "description": "some fur tests for the animal challenge... I can kind of see it with some more time!",
    "comments": []
  },
  {
    "_id": "BsPcMGxyqofP2kZHR",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": { "$date": "2023-04-28T14:32:25.866Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "495273cda0e3560089306ccc36a3f323",
        "public_id": "avalanche2023spring/tpbp85cdqdqrgzi2rbig",
        "version": 1682692361,
        "version_id": "4c79cdee7280799663cf822c78be1ac0",
        "signature": "ed01c5a872e9db5ea71cb6a76f3fed6d5ec75b81",
        "width": 1832,
        "height": 907,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T14:32:41Z",
        "tags": [],
        "bytes": 156725,
        "type": "upload",
        "etag": "1efc6f0a77e6f936f36f409d728dffa7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682692361/avalanche2023spring/tpbp85cdqdqrgzi2rbig.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682692361/avalanche2023spring/tpbp85cdqdqrgzi2rbig.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Messing around with spotify API. I am stuck in understanding how to re_create access tokens.",
    "comments": []
  },
  {
    "_id": "CArjPT2NNG5AbZTr6",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T15:45:34.344Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "46d7a51caf75f9051e83666b68074503",
        "public_id": "avalanche2023spring/yos5fw1wmr6n3oo3lcc0",
        "version": 1679672747,
        "version_id": "9152c0c93e4b8832a1bd060b0cd280e8",
        "signature": "40cc25a9d98a09120c6605cec3eda8b9b9f79280",
        "width": 950,
        "height": 948,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T15:45:47Z",
        "tags": [],
        "bytes": 65197,
        "type": "upload",
        "etag": "faaebef6bd0a7212eadbe4e6d04ef59d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679672747/avalanche2023spring/yos5fw1wmr6n3oo3lcc0.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679672747/avalanche2023spring/yos5fw1wmr6n3oo3lcc0.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "40e9ced81a3010412c24a6cf102af9cf",
        "public_id": "avalanche2023spring/sjgnhdk0ewpftjosgent",
        "version": 1679672750,
        "version_id": "4c239ebcd008ba4fa0dd02d19b5e014f",
        "signature": "36c2e584526e795e5dc0a549c1b652e718b628c2",
        "width": 952,
        "height": 948,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T15:45:50Z",
        "tags": [],
        "bytes": 62507,
        "type": "upload",
        "etag": "9674a3359db4a72dadf919ac6db20a26",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679672750/avalanche2023spring/sjgnhdk0ewpftjosgent.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679672750/avalanche2023spring/sjgnhdk0ewpftjosgent.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1135c5adbfec31003b5de9992d758c95",
        "public_id": "avalanche2023spring/jb5mhauqgyyf2rkmpcia",
        "version": 1679672755,
        "version_id": "d9037895fea8de4caaa41f198e660a1d",
        "signature": "02c28779b988f7a5c0a6bfbea609964b24991bbd",
        "width": 926,
        "height": 934,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-24T15:45:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 925805,
        "type": "upload",
        "etag": "758946d499f3496260bf794c02447cfc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679672755/avalanche2023spring/jb5mhauqgyyf2rkmpcia.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679672755/avalanche2023spring/jb5mhauqgyyf2rkmpcia.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679672755/avalanche2023spring/jb5mhauqgyyf2rkmpcia.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "625040",
          "dar": "463:467",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 655301,
        "duration": 11.302333,
        "rotation": 0,
        "nb_frames": 691,
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Played around with paths and made a random egg generator 🍳",
    "comments": []
  },
  {
    "_id": "CNXaK2LYudWt4DjWR",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T05:04:33.707Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b834cbc848133c6f532f60e2e786bf8d",
        "public_id": "avalanche2023spring/kpgwe4vawr02h2oovjvc",
        "version": 1675832758,
        "version_id": "b66efa45b9a2b5c9e95aefa3316b203d",
        "signature": "34a5cf596dc09991687281d69b32bb86620492c4",
        "width": 1818,
        "height": 1832,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T05:05:58Z",
        "tags": [],
        "bytes": 325812,
        "type": "upload",
        "etag": "f1cfec26cc810559c6005e371f0f4974",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675832758/avalanche2023spring/kpgwe4vawr02h2oovjvc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675832758/avalanche2023spring/kpgwe4vawr02h2oovjvc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T14:31:14.971Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T17:14:29.552Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T05:59:58.483Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-01T19:03:20.879Z" }
      }
    ],
    "title": "",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n//Global variables\nlet x = 900/2;\nlet y = 900/2;\nlet cardW = 300;\nlet cardH = 150;\nlet button;\nlet cards = [];\n\n//return random integer within parameters\nfunction getRandomInt(min, max) {\n  return (Math.random()*(max - min + 1) ) + min;\n}\n\n\nfunction setup() {\n  createCanvas(900, 900);\n  //create input field interface\n  noteTitle = createInput('').attribute('placeholder', 'Title');\n  noteText = createInput('').attribute('placeholder', 'Note');\n  button = createButton(\"Add Entry\");\n  \n  //generate cards on mouse press on button\n  button.mousePressed(()=>{\n    x = getRandomInt(100,800)\n    y = getRandomInt(75,825)\n    drawCard(x,y)\n    //json object\n    cards.push({\n      noteTitle: noteTitle.value(),\n      noteText: noteText.value(),\n    })\n    console.log(cards);\n  });\n}\n\n\n// function to draw a card\nfunction drawCard (x,y) {\n  fill(0);\n  rectMode(CENTER)\n  rect(x-8,y+8,cardW+5,cardH+5)\n  fill(400);\n  rectMode(CENTER)\n  rect(x, y, cardW, cardH)\n  fill(0);\n  drawText(x, y);\n\n}\n\n// text inside card\nfunction drawText (x, y) {\n  push();\n  translate(0, 0);\n  translate (0, -30);\n  textAlign(CENTER);\n  textSize(15)\n  text(noteTitle.value(), x, y);\n  text(noteText.value(), x, y + 40);\n  pop();\n}\n\nfunction draw() {\n  background(200, 0, 0);\n  noLoop();\n}",
    "comments": [],
    "description": "An interface that generates randomly positioned notes (cards) on button.mousePressed(). I set the max and min range for the position of the cards based on the canvas size and size of the cards so that they are always generated within the viewport of the canvas.",
    "inspiration_name": "Basic CMS item UIs",
    "inspiration_url": "https://webflow.com/made-in-webflow/website/CMS-Cards"
  },
  {
    "_id": "CRfSX9ycXHhrkMozy",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T04:29:53.608Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5b54ac066240f8c53d3aed2795d442e5",
        "public_id": "avalanche2023spring/d81sjzdkjxsrzpyuyull",
        "version": 1680237245,
        "version_id": "6bdfdd222366e624b933400d5993194d",
        "signature": "22130123357033a62848e649cd3eb573f56cfa95",
        "width": 652,
        "height": 654,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T04:34:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 654987,
        "type": "upload",
        "etag": "1497f6241355b0e77d0ff6b692388bca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680237245/avalanche2023spring/d81sjzdkjxsrzpyuyull.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680237245/avalanche2023spring/d81sjzdkjxsrzpyuyull.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680237245/avalanche2023spring/d81sjzdkjxsrzpyuyull.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "403469",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "150994",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 555132,
        "duration": 9.438,
        "rotation": 0,
        "nb_frames": 269,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:15:14.104Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-01T16:54:09.799Z" }
      }
    ],
    "title": "",
    "description": "Had some fun pair coding with Rama and worked with reverb, and bass synth and metal.",
    "code": "// Beginning of code to be declared\n//bass sound\n\nlet reverb;\n\n//const distort = new Tone.Distortion(0.8).toMaster();\n\nreverb = new Tone.JCReverb({\n  roomSize: 0.8,\n  wet: 0.5,\n}).toMaster();\n\nconst bassSynth = new Tone.MembraneSynth({\n  pitchDecay: 0.02,\n  octaves: 10,\n  oscillator: {\n    type: \"sine\",\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.1,\n    sustain: 0.1,\n    release: 2,\n  },\n})\n  .connect(reverb)\n  .toMaster();\nTone.Transport.bpm.value = 200;\n\n//cymbal sound\nconst cymbalSynth = new Tone.MetalSynth({\n  frequency: 40,\n  envelope: {\n    attack: 0.01,\n    decay: 0.3,\n    release: 0.2,\n  },\n  harmonicity: 4.1,\n  modulationIndex: 14,\n  resonance: 3500,\n  octaves: 2.5,\n})\n  .connect(reverb)\n  .toMaster();\n\n//mousedown function is the same\nwindow.onmousedown = () => {\n  const melody = generate();\n  play(melody);\n};\n\n//haven't changed these - can be replaced\nconst fmajor = [\"F3\", \"G3\", \"A3\", \"Bb3\", \"C3\", \"D3\", \"E3\"];\nconst cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst notes1 = fmajor;\nconst notes2 = cminor;\n\nlet degree = 0;\n\n//generate function is the same\nfunction generate() {\n  degree = randomInt(0, 7);\n\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  // last note should be the tonic\n  c[c.length - 1][0] = notes1[0];\n\n  return [].concat(a, c, a, b);\n}\n\nfunction generateMeasure() {\n  const m = [];\n  const n = [];\n\n  let timeLeft = Tone.Time(\"1m\"); //\n\n  while (timeLeft.toSeconds() > 0) {\n    //changed sample\n    const change = sample([-1, -1, 1, 1, 1, 2, 2, 2, 3, 4, -3]);\n    degree = constrain(degree + change, 0, 8);\n    const note1 = notes1[degree];\n    const note2 = notes2[degree];\n\n    // increased length\n    let length = Tone.Time(\"8n\"); // time in a sequence\n\n    if (Math.random() < 0.7) {\n      //increased tonetime\n      length = Tone.Time(\"4n\");\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n\n    timeLeft = Tone.Time(timeLeft - length);\n\n    m.push([note1, length]);\n    n.push([note2, length]);\n  }\n\n  return m, n;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    if (note[0] !== \"rest\") {\n      //added bass and cymbal sounds here\n      cymbalSynth.triggerAttackRelease(Tone.Time(note[1]) - 0.1, t);\n    }\n    if (note[0] !== \"rest\") {\n      bassSynth.triggerAttackRelease(note[0], note[1], t);\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\nconsole.log(\"click for music!\");\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}\n\nvar time;\nvar wait = 100; // change this to change the 'ticking'\nvar c;\n\nfunction setup() {\n  createCanvas(700, 700);\n\n  time = millis(); // store the current time\n  // millis() returns the current number of milliseconds since starting the program.\n\n  //This information is often used for timing events and animation sequences.\n\n  c = color(255); // black\n}\n\nfunction draw() {\n  background(c);\n\n  //check the difference between now and the previously stored time is greater than the wait interval\n  if (millis() - time >= wait) {\n    c = color(random(255), random(255), random(255)); //if it is, change the background color\n    time = millis(); //also update the stored time\n  }\n}",
    "comments": []
  },
  {
    "_id": "CSC6JETK7ZyyuyfBe",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T15:57:22.246Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c1962395d781b5652153376ab5064df8",
        "public_id": "avalanche2023spring/uitfilggfkjeakc6wxyi",
        "version": 1675872514,
        "version_id": "a10c68aea52cf20773f844668072aab6",
        "signature": "014efb164bb9b799398066deaff48821790c74f0",
        "width": 807,
        "height": 712,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T16:08:34Z",
        "tags": [],
        "bytes": 19700,
        "type": "upload",
        "etag": "cfe0c45fe6768deb860663b8d32971b0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675872514/avalanche2023spring/uitfilggfkjeakc6wxyi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675872514/avalanche2023spring/uitfilggfkjeakc6wxyi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T21:24:42.635Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:46:37.691Z" }
      }
    ],
    "title": "",
    "description": "PERLIN NOISE",
    "inspiration_url": "https://gorillasun.de/blog/smooth-curves-with-perlin-noise-and-recreating-the-unknown-pleasures-album-cover-in-p5",
    "code": "var phase = 1;\nvar slider;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n  \n\tslider = createSlider(2, 12, 2.5, 0.1);\n  \n  \tbgColor = color( random(255), random(255), random(255) );\n\n}\n\nfunction draw() {\n\tbackground(bgColor);\n\tnoFill();\n\tstroke(255);\n\tstrokeWeight(4);\n\ttranslate(width/2, height/2); // position\n\n\t\n\tnoiseMax = slider.value();\n\t\n\tbeginShape(); // Curvature values\n\tfor (a = 0; a < TWO_PI; a+=0.2) {\n\t\txoff = map(cos(a+phase)+phase, -1, 1, 0, noiseMax);\n\t\tyoff = map(sin(a+phase)+phase, -1, 1, 0, noiseMax);\n    r = map(noise(xoff, yoff), 0, 1, 75, 125);\n\t\tx = r * cos(a);\n\t\ty = r * sin(a);\n\t\tvertex(x, y);\n\t}\n\tendShape(CLOSE);\n\t\n\tphase += 0.07; // Speed of geometry\n}\n\nfunction mousePressed(){\n\tbgColor = color( random(255), random(255), random(255) ); // changing color when clicking\n}",
    "comments": []
  },
  {
    "_id": "CTNeWEopQvoNyEDHk",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T00:05:08.506Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b80e788c5ae0e03d6b56a0e850e6d8a1",
        "public_id": "avalanche2023spring/fbk4owgnjekjtdjj0tss",
        "version": 1680222232,
        "version_id": "f0ba66627275c6d57e7aebd3f6857997",
        "signature": "a1ccef337ab6dd4c5cb89cc023ed5ba66b4973b7",
        "width": 1200,
        "height": 1194,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T00:23:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 5296890,
        "type": "upload",
        "etag": "00b69df20b376bbb3ec57c628ae9a611",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680222232/avalanche2023spring/fbk4owgnjekjtdjj0tss.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680222232/avalanche2023spring/fbk4owgnjekjtdjj0tss.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680222232/avalanche2023spring/fbk4owgnjekjtdjj0tss.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125764",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "610189",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1069178,
        "duration": 39.633333,
        "rotation": 0,
        "nb_frames": 2439,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "20915385eed13f9673fba17765814a7f",
        "public_id": "avalanche2023spring/oafldwrecdf5gfpfxsof",
        "version": 1680222240,
        "version_id": "4483a3560afafa6565b61c35adcfa843",
        "signature": "c3859fb36b60a32498e470562f5bd3861f395378",
        "width": 1212,
        "height": 1194,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T00:24:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 3855088,
        "type": "upload",
        "etag": "082c5844db3b4f18155caa71b41e2a2f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680222240/avalanche2023spring/oafldwrecdf5gfpfxsof.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680222240/avalanche2023spring/oafldwrecdf5gfpfxsof.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680222240/avalanche2023spring/oafldwrecdf5gfpfxsof.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126405",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "528629",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 970851,
        "duration": 31.766667,
        "rotation": 0,
        "nb_frames": 1967,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8bb271d705003892067ba7ade7123614",
        "public_id": "avalanche2023spring/ibkoejk8urjll2z5przx",
        "version": 1680222281,
        "version_id": "090208f475bd902711df67842998e581",
        "signature": "a2804cc8ad936c8b1c663d09d4020c5d98a11af1",
        "width": 1200,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T00:24:41Z",
        "tags": [],
        "bytes": 56903,
        "type": "upload",
        "etag": "263569dbc4eac0926856b80e54334061",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680222281/avalanche2023spring/ibkoejk8urjll2z5przx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680222281/avalanche2023spring/ibkoejk8urjll2z5przx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:38:37.411Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T04:11:06.084Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:13:54.121Z" }
      }
    ],
    "title": "",
    "description": "**Two Bots on Synths:** Two random walkers were hooked to two different synths to create this effect. Does it seem easier to sense  musicality with major scales or the minor? Is this conditioning based on the (pop) music we largely listen to? \n.\n.\nIn addition to this, I wanted to improve musicality to create a sense of time. I tried to add random pauses to the music but that obviously isn't enough",
    "comments": []
  },
  {
    "_id": "CZfLR2D4CxjTZNJkT",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T07:40:46.43Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cef26fe7c1d77d01d6cc83546d12c4cc",
        "public_id": "avalanche2023spring/zhtx9qijveohpdpnzqkz",
        "version": 1677829305,
        "version_id": "640dd621c0fe1c9a15b01abc19b5432a",
        "signature": "ee4b74ed7540663dcd8f9bc637f4bded9e529201",
        "width": 1000,
        "height": 600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T07:41:45Z",
        "tags": [],
        "bytes": 32530,
        "type": "upload",
        "etag": "e07a7fe08623072bba7d809d9a04b1bd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677829305/avalanche2023spring/zhtx9qijveohpdpnzqkz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677829305/avalanche2023spring/zhtx9qijveohpdpnzqkz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "i stared at this for so long that it simply stopped making sense. but my brain feels challenged.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet amplitude_slider;\nlet frequency_slider;\nlet tSpeed_slider;\nlet start = 0;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 60);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 0.02);\n  createP(\"Time Speed\");\n  tSpeed_slider = createSlider(0, 100, 50);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value()/100;\n  let frequency = frequency_slider.value()/100;\n  let speedW = tSpeed_slider.value()/100;\n \n noiseDetail(1,0.5);\n  fill(255);\n  noStroke();\n  \n  for(i=0; i<1;i+=0.02){\n    let x = lerp(startX,endX,i);\n     let y = lerp(startY,endY,i);\n    let xoff = start;\n   xoff = noise(i*30+frequency)*amplitude*100 + sin(i)*10;\n   // yoff = noise(i*30)*amplitude + frequency;\n     ellipse(x+xoff, y+xoff+start, 10, 10);\n    \n\n  }\n  start+=0.02;\n      \n\n  // study this loop. do you understand how the line of ellipses is created?\n//   for (i = 0; i < 1; i += 0.02) {\n//     let x = lerp(startX, endX, i);\n//     let y = lerp(startY, endY, i);\n\n//   let offsetX =  noise(i * 30, 0) * amplitude;\n//     let offsetY = noise(i * 30, 0) * amplitude;\n    \n//       ellipse(x + offsetX, y + offsetY, 10, 10);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = (random() - 0.5) * amplitude * 10;\n    // let offsetY = (random() - 0.5) * amplitude * 10;\n\n\n}",
    "comments": []
  },
  {
    "_id": "CjMixEgKumhj5G93P",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-15T02:16:17.648Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b9f15706af53a2c41d17236c204b777d",
        "public_id": "avalanche2023spring/gcob89zgldzi9ksrzjh0",
        "version": 1681525074,
        "version_id": "f3ec1f0aea12c87248d2d79f27398c8c",
        "signature": "9199d4f78468f7dcab0c1ec4c46aabdff962049d",
        "width": 3456,
        "height": 1666,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-15T02:17:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 5375301,
        "type": "upload",
        "etag": "783395d4b4d6b8d8c5021dc67340f70a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681525074/avalanche2023spring/gcob89zgldzi9ksrzjh0.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681525074/avalanche2023spring/gcob89zgldzi9ksrzjh0.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681525074/avalanche2023spring/gcob89zgldzi9ksrzjh0.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128030",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "High",
          "bit_rate": "898739",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1039860,
        "duration": 41.352993,
        "rotation": 0,
        "nb_frames": 2480,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f004c8ef48ea8d9e4962e9c610ce76c3",
        "public_id": "avalanche2023spring/jjrpvudgndjpl1kae3yu",
        "version": 1681525169,
        "version_id": "90916675c0614cbabded36dc23a766cb",
        "signature": "7685167c70f3063ab61d2400fb47fd76a8f2c171",
        "width": 2472,
        "height": 1682,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-15T02:19:29Z",
        "tags": [],
        "bytes": 1572007,
        "type": "upload",
        "etag": "18ac86f02170df9afddeca6002c083c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681525169/avalanche2023spring/jjrpvudgndjpl1kae3yu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681525169/avalanche2023spring/jjrpvudgndjpl1kae3yu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "332b559520a068d0191b8eef746d597f",
        "public_id": "avalanche2023spring/ppgpdlfrtkq6cuyrykqf",
        "version": 1681525175,
        "version_id": "8deb99991ce198f881bcd175c5c0c0bd",
        "signature": "95430cb9c4feefca175a00d6d17612b314cba14b",
        "width": 1188,
        "height": 976,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-15T02:19:35Z",
        "tags": [],
        "bytes": 159980,
        "type": "upload",
        "etag": "62a9cb85fae2b909b25abfd2f8447de4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681525175/avalanche2023spring/ppgpdlfrtkq6cuyrykqf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681525175/avalanche2023spring/ppgpdlfrtkq6cuyrykqf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-15T04:10:49.398Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-16T00:05:37.772Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "nerdy",
        "created_at": { "$date": "2023-04-16T00:06:06.983Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-16T23:02:44.967Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T01:15:56.878Z" }
      }
    ],
    "title": "",
    "description": "Teachable Machine is ML so replugging my sketch from microgames week!! Use common house objects instead of arrow keys to control your character. \nEvery time you reach the T.A.R.D.I.S you're relocated and have to find your way back again. The moving black box at the top keeps track of collisions.",
    "comments": []
  },
  {
    "_id": "CqMM8Cp2uQt2xwmWF",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-20T06:04:51.171Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6441aa6da3eafe30b83d5e48f0bc65b2",
        "public_id": "avalanche2023spring/eq5ei474dl1zqcvt9yab",
        "version": 1676873129,
        "version_id": "b17919285b48e985203b2c9589225474",
        "signature": "50ac92635d5c08fb15ff1b6d5dfd12dc9e07e0b2",
        "width": 1428,
        "height": 1428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-20T06:05:29Z",
        "tags": [],
        "bytes": 593476,
        "type": "upload",
        "etag": "e2c9dc8228ec24013cc687421bd97c1e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676873129/avalanche2023spring/eq5ei474dl1zqcvt9yab.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676873129/avalanche2023spring/eq5ei474dl1zqcvt9yab.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8c18b987cb2eeb814cb0b33eb3c88e61",
        "public_id": "avalanche2023spring/wolkad6k575z6tygpfcv",
        "version": 1676873166,
        "version_id": "2d87a8c4724fa5a8a31d0d9141bb7338",
        "signature": "c4abf4ba1b2819928742279bde6c59a8a1a4754d",
        "width": 1962,
        "height": 1438,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-20T06:06:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 19800080,
        "type": "upload",
        "etag": "09a5c38ccd9828424eda5de113a17642",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676873166/avalanche2023spring/wolkad6k575z6tygpfcv.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676873166/avalanche2023spring/wolkad6k575z6tygpfcv.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676873166/avalanche2023spring/wolkad6k575z6tygpfcv.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "9701054",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 10272748,
        "duration": 15.4195,
        "rotation": 0,
        "nb_frames": 953,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-02-20T06:07:40.265Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "funny",
        "created_at": { "$date": "2023-02-20T06:52:34.392Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-20T07:23:56.288Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-02-20T21:10:45.815Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T22:16:48.705Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T22:28:44.312Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T00:09:51.745Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:40.117Z" }
      }
    ],
    "title": "",
    "description": "Challenge: Face Generator 😩",
    "inspiration_name": "*loosely* Shepard Fairey (sorry)",
    "inspiration_url": "https://www.artic.edu/artworks/229396/barack-obama-hope-poster",
    "comments": []
  },
  {
    "_id": "Cypru3eSTZ76Azq8H",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-23T04:56:55.766Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ac63adbf7628da6b3c823f5988201c72",
        "public_id": "avalanche2023spring/ps7bgiga4n002vghey6a",
        "version": 1682225831,
        "version_id": "0570f8f838ea332a9e5f5a86f766866d",
        "signature": "8f551f1dd0520eeb47b952c3a71006d71c64a38f",
        "width": 1065,
        "height": 1065,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-23T04:57:11Z",
        "tags": [],
        "bytes": 1603982,
        "type": "upload",
        "etag": "89b42594156974ef139acf2d2cd24cf3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682225831/avalanche2023spring/ps7bgiga4n002vghey6a.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682225831/avalanche2023spring/ps7bgiga4n002vghey6a.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f464516f804a18554fbdfd5975605930",
        "public_id": "avalanche2023spring/defkjz1dftnatoodlpra",
        "version": 1682226268,
        "version_id": "9e4a48154c849f887ba0b7684a36a94d",
        "signature": "8ad33c996cd7dd8c2b05d41f9dbb8e54e3d3e48c",
        "width": 1065,
        "height": 1065,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-23T05:04:28Z",
        "tags": [],
        "bytes": 1394163,
        "type": "upload",
        "etag": "03efc88d44384ebb2c45ee6eabb2edb1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682226268/avalanche2023spring/defkjz1dftnatoodlpra.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682226268/avalanche2023spring/defkjz1dftnatoodlpra.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "74481e8ae7421f8378dd3e111bd1640e",
        "public_id": "avalanche2023spring/xxgwyfjnruf9nlvmwift",
        "version": 1682226271,
        "version_id": "8d2422527a7e54869e719462dbb48fa4",
        "signature": "e27f69c572a6551cc13abfa038bf0f0dc2b12785",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-23T05:04:31Z",
        "tags": [],
        "bytes": 1400163,
        "type": "upload",
        "etag": "c8e4a150a488816684c4fe94f1894071",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682226271/avalanche2023spring/xxgwyfjnruf9nlvmwift.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682226271/avalanche2023spring/xxgwyfjnruf9nlvmwift.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "More experiments with Midjourney.  \n1 - Gave Midjourney its own image from the last Midjourney sketch, told it to describe that image in a prompt, and then generate an image based on that prompt. Turned out VERY different from the original image.  \n2 - Gave it two images from the last sketch and asked it to blend them. The purple is very dominating.  \n3 - Asked it to blend images #1 and #2. The blurry style dominates.",
    "comments": []
  },
  {
    "_id": "D2E6KScKxqnquyMTq",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-28T01:31:34.804Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e183d63b2c5e5efb7e184e314f123b33",
        "public_id": "avalanche2023spring/a65sgfe8qwkfcb3hhpvn",
        "version": 1680047874,
        "version_id": "7cd33df74c8f84354abf867e9881dbc6",
        "signature": "0a425c7bd47b4c3a53407a496b11fda1f770d11c",
        "width": 1920,
        "height": 987,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-28T23:57:54Z",
        "tags": [],
        "bytes": 102991,
        "type": "upload",
        "etag": "41b0a85199eaab9652341c51f8e64a78",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680047874/avalanche2023spring/a65sgfe8qwkfcb3hhpvn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680047874/avalanche2023spring/a65sgfe8qwkfcb3hhpvn.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:35.99Z" }
      }
    ],
    "title": "",
    "description": "My attempt at the Individual Challenge while tinkering around with tone.js. Decided to quite literally write a song and I quite like it. Currently thinking about continuing to expand on this for an open sketch this week.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// partially adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/simple_song.js\n/* global Tone */\n\nconst synth = new Tone.Synth().toMaster();\n\nTone.Transport.bpm.value = 120;\n\nconst melody = [\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n\"],\n    [\"d5\", \"4n\"],\n    \n    [\"c5\", \"2n\"],\n]; \n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};",
    "comments": []
  },
  {
    "_id": "D8jXRyZ5dpkhHZk4y",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T00:30:41.879Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "798431553c46d9a152db64eae2ce0a36",
        "public_id": "avalanche2023spring/gevfkplrxbhwflov9lfq",
        "version": 1678408250,
        "version_id": "104d7911d12593781d0a28e711dec103",
        "signature": "d074bb16e3f971a170cdb79b2f1298a15a506ac7",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T00:30:50Z",
        "tags": [],
        "bytes": 440805,
        "type": "upload",
        "etag": "fcf12d4b1ab55b5578d4eba6031527c6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678408250/avalanche2023spring/gevfkplrxbhwflov9lfq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678408250/avalanche2023spring/gevfkplrxbhwflov9lfq.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e48a8e9278b5cf78109ae1d7c2861936",
        "public_id": "avalanche2023spring/lwxq8vwmpkplacw5tyle",
        "version": 1678408280,
        "version_id": "98979c88b5c8c896d8924abb3c00c2e9",
        "signature": "7be8948b0cb64e4fc1afa38030911f0bd4a152d0",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T00:31:20Z",
        "tags": [],
        "bytes": 236965,
        "type": "upload",
        "etag": "c94fbb4bbaea4e03b8739ca44634f16b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678408280/avalanche2023spring/lwxq8vwmpkplacw5tyle.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678408280/avalanche2023spring/lwxq8vwmpkplacw5tyle.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:18.844Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T19:49:46.49Z" }
      }
    ],
    "title": "",
    "description": "Pixel Ouroboros challenge! I processed the image 6 times. Images shown are the first processed version, and the sixth. Interesting that on the computer, the image got lighter, and when I scanned and reprinted the result, the image got darker.",
    "comments": []
  },
  {
    "_id": "DB7Fn2YSddubA8yYS",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-04T16:11:22.19Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6bbc37a0438d9f23e60ab8ae7015e9b1",
        "public_id": "avalanche2023spring/m5bbo5dw2xq1rod7knev",
        "version": 1680624706,
        "version_id": "2d25e231a6d1771b261fdcc486a40d9a",
        "signature": "29bcce2fd7be15ef9a2e5d7c465149443e8ff226",
        "width": 718,
        "height": 620,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-04T16:11:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 1650499,
        "type": "upload",
        "etag": "88ee3da5ea15966973fcdcc75447a2d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680624706/avalanche2023spring/m5bbo5dw2xq1rod7knev.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680624706/avalanche2023spring/m5bbo5dw2xq1rod7knev.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680624706/avalanche2023spring/m5bbo5dw2xq1rod7knev.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316983",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "624904",
          "dar": "359:310",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 950748,
        "duration": 13.866667,
        "rotation": 0,
        "nb_frames": 416,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T21:08:37.284Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T22:57:08.302Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T02:19:05.23Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:31:30.945Z" }
      }
    ],
    "title": "",
    "description": "**Pair Pipe Maze with Isha:** We tried to create a pipe maze out of the Trebuchet tiles we'd made earlier. We got the tiles to rotate on mouse click but we are yet to code the path that tracks and signals the player's success on connecting tiles from one point to the other",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\nlet pattern = [];\nconst patternSize = 50;\nconst xNum = 7;\nconst yNum = 6;\n\nlet pipeImages = [];\n// const pipeImagesSize = 50;\n\nfunction setup() {\n  createCanvas(xNum*patternSize, yNum*patternSize);\n  background(0);\n\n  for (let i=0; i<9; i++) {\n    pipeImages[i] = loadImage(\"Frame_\" + i + \".png\");\n  }\n  // let pipeImage = loadImage(\"pipe.jpg\");\n\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      pattern[x + y*10] = createSprite(\n        patternSize/2 + x*patternSize,\n        patternSize/2 + y*patternSize,\n        patternSize,\n        patternSize\n      );\n      pattern[x + y*10].addImage(\"main\", random(pipeImages))\n      // pattern[x + y*10].scale = patternSize/pipeImagesSize;\n      pattern[x + y*10].mouseActive = true;\n      pattern[x + y*10].rotation = 90 * (floor(random(0,4)));\n    }\n  }\n\n}\n\nfunction draw() {\n  drawSprites();\n}\n\nfunction mousePressed() {\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      if (pattern[x + y*10].mouseIsOver) {\n        pattern[x + y*10].rotation += 90;\n      } \n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "DDTzzkSfMbpMzMqeu",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T04:45:39.875Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3ea1f58215a6ac5974e30364fefa36b1",
        "public_id": "avalanche2023spring/jzjbxf2pabkenl4fzble",
        "version": 1677214376,
        "version_id": "7f07699879e835de8fbd4efe84411a3f",
        "signature": "4016c010e5a3ad5ed2c76cab0e56e16c9d159103",
        "width": 1080,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-24T04:52:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 8291652,
        "type": "upload",
        "etag": "52d619819f3156fa96655ef269e7f6b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677214376/avalanche2023spring/jzjbxf2pabkenl4fzble.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677214376/avalanche2023spring/jzjbxf2pabkenl4fzble.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677214376/avalanche2023spring/jzjbxf2pabkenl4fzble.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316473",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "10717082",
          "dar": "1:1",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10987171,
        "duration": 6,
        "rotation": 0,
        "nb_frames": 360,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b6c1352589d51064ddfe5a1a17be0378",
        "public_id": "avalanche2023spring/su50xeahhmnynownqybo",
        "version": 1677214382,
        "version_id": "6796f6cd7bb6f470e6eef8a19fb624de",
        "signature": "b080653490eb70356eb3c5e8b570fbc5d860b5f1",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T04:53:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 18425471,
        "type": "upload",
        "etag": "9295e8df121ce0161d02ca54ba6235e7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677214382/avalanche2023spring/su50xeahhmnynownqybo.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677214382/avalanche2023spring/su50xeahhmnynownqybo.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677214382/avalanche2023spring/su50xeahhmnynownqybo.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "14712930",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 14715360,
        "duration": 10.016667,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I really liked the pair challenge this week so I did it again! This time I passed some shader-park code to Torin Blankensmith (who co-developed the shader-park library 🤯). My code is the second video and Torin's remix is the first.",
    "comments": []
  },
  {
    "_id": "DDzYmtYQ8D4gpHpnT",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:57:27.646Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "81eccc2967f334d5b8260c82e6bf39a3",
        "public_id": "avalanche2023spring/oh0ookxsqn2apu2cbxjf",
        "version": 1683302258,
        "version_id": "7e20465dc94761bf342cc246758807e1",
        "signature": "04ca2560f72b8b0faab3153b396459e3e5be59a7",
        "width": 1072,
        "height": 748,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:57:38Z",
        "tags": [],
        "bytes": 37604,
        "type": "upload",
        "etag": "cfa98e44d355d33e4c21c0ec44a35a6f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683302258/avalanche2023spring/oh0ookxsqn2apu2cbxjf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683302258/avalanche2023spring/oh0ookxsqn2apu2cbxjf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "89217cc039d6ae955e6b138d6bae20b5",
        "public_id": "avalanche2023spring/xopkeoywk8guxcw9zp0l",
        "version": 1683302261,
        "version_id": "e6d92f55fe90c566f5e3a4cea0db39fa",
        "signature": "c3c456fe87d905269b3ab0c13707101f770d2d09",
        "width": 1322,
        "height": 848,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:57:41Z",
        "tags": [],
        "bytes": 59879,
        "type": "upload",
        "etag": "fb02bc2f8c6b0e961f32856ea9059d48",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683302261/avalanche2023spring/xopkeoywk8guxcw9zp0l.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683302261/avalanche2023spring/xopkeoywk8guxcw9zp0l.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:48.872Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T12:55:56.691Z" }
      }
    ],
    "title": "",
    "description": "Made a little ~martini glass~ I was experimenting with the transparency of the glass and the pink drink. I wish you could see the pink drink through the sides of the glass.",
    "comments": []
  },
  {
    "_id": "DQrrZQgSTkdS7bzwk",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T01:43:32.771Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1f7b2313fbd94555775b5b0968fab52e",
        "public_id": "avalanche2023spring/lgktqs4kkl8ipz55vlsd",
        "version": 1678412616,
        "version_id": "0ecf588f63b342e99c8e14ac2d86036c",
        "signature": "fec629623ba18f1cf1cee8107e4263479f3a74ff",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T01:43:36Z",
        "tags": [],
        "bytes": 51090,
        "type": "upload",
        "etag": "f0415e9ec79555e7419d4cf5f2eea05a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678412616/avalanche2023spring/lgktqs4kkl8ipz55vlsd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678412616/avalanche2023spring/lgktqs4kkl8ipz55vlsd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "42fd2eca81f67f16e09b85604999b271",
        "public_id": "avalanche2023spring/uyou1mmdrkckpje8i2ta",
        "version": 1678412923,
        "version_id": "a6ab75e48811c3d0e41b31a3e46ced92",
        "signature": "a45b7564eb18328807e626a64cc284c78cce7ba6",
        "width": 400,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T01:48:43Z",
        "tags": [],
        "bytes": 522009,
        "type": "upload",
        "etag": "1962455b19de78c49a9da59f411029db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678412923/avalanche2023spring/uyou1mmdrkckpje8i2ta.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678412923/avalanche2023spring/uyou1mmdrkckpje8i2ta.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:21.182Z" }
      }
    ],
    "title": "",
    "description": "My response to Ishaan's sketch. I was a bit stuck on where to go but this is where I got. I sampled every pixel in each grid square and got the average R, G, and B values. I then intensified the difference between the average color values and the mean 127. This way, the color of each grid space is that space's average color.",
    "code": "function setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\n\nfunction preload() {\n  testImage = loadImage(\"/sketch_pixeldata.png\");\n  noLoop();\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  testImage.loadPixels();\n  noSmooth();\n}\n\nfunction draw() {\n  background(0,0,0);\n  \n  testImage.loadPixels(); \n  let redAvg \n  let greenAvg\n  let blueAvg\n\n  let redAtPoint\n  let greenAtPoint\n  let blueAtPoint  \n  \n  let pixelColor\n \n  for (let startPointX = 0; startPointX < 20; startPointX++) {\n    for (let startPointY = 0; startPointY < 20; startPointY++) {\n      redAvg = 0\n      greenAvg = 0\n      blueAvg = 0\n      \n      for (let x = 1 + (20*startPointX); x < (20*(startPointX+1)); x++) {\n        for (let y = 1 + (20*startPointY); y < (20*(startPointY+1)); y++) {\n          pixelColor = getQuick(testImage, x, y);\n          \n          redAtPoint = pixelColor[0];\n          greenAtPoint = pixelColor[1];\n          blueAtPoint = pixelColor[2];\n          \n          redAvg = redAvg + redAtPoint;\n          greenAvg = greenAvg + greenAtPoint;\n          blueAvg = blueAvg + blueAtPoint;\n        \n        }\n       \n      }\n      \n      redAvg = round(redAvg / pow(19,2));\n      greenAvg = round(greenAvg / pow(19,2));\n      blueAvg = round(blueAvg / pow(19,2));\n      \n      extraRed = (abs(127-redAvg)*7) + redAvg;\n      extraGreen = (abs(127-greenAvg)*7) + greenAvg;\n      extraBlue = (abs(127-blueAvg)*7) + blueAvg;\n      \n      for (let x = 1 + (20*startPointX); x < (20*(startPointX+1)); x++) {\n        for (let y = 1 + (20*startPointY); y < (20*(startPointY+1)); y++) {\n          setQuick(testImage, x, y, [extraRed, extraGreen, extraBlue, 255])\n        }\n      }\n      \n    }\n  }\n \n  testImage.updatePixels();\n  \n  image(testImage, 0, 0, 600, 600);\n\n}",
    "comments": []
  },
  {
    "_id": "DT54zjqaTqjjmaZ4P",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-05T17:42:45.861Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a025771e68345672d1347268418f4745",
        "public_id": "avalanche2023spring/sryr63cr8brbjc8sqhkk",
        "version": 1675618975,
        "version_id": "f1a20790e5a3b5c1688b482cc48a4842",
        "signature": "7b441e68e452a7f2c5842938b2a9e81bb754418e",
        "width": 932,
        "height": 1004,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-05T17:42:55Z",
        "tags": [],
        "bytes": 540665,
        "type": "upload",
        "etag": "a329a7b5121f45eb3013eb3fc40cf258",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675618975/avalanche2023spring/sryr63cr8brbjc8sqhkk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675618975/avalanche2023spring/sryr63cr8brbjc8sqhkk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T18:06:18.985Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T19:55:32.605Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T22:21:08.809Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "funny",
        "created_at": { "$date": "2023-02-05T22:21:11.509Z" }
      }
    ],
    "title": "",
    "description": "Trial 1 of replicating a print by Anni Albers.",
    "inspiration_name": "Untitled, Albers",
    "inspiration_url": "https://nmwa.org/art/collection/albers-untitled/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 60;\nlet border = 20;\nlet dim = 480 / 450;\n\nfunction setup() {\n  createCanvas(450, 450 * dim);\n  noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(245, 246, 251);\n\n  let triLength = (width - 2 * border) / num;\n  let colour = [color(94, 172, 211), color(253, 85, 14)];\n\n  translate(width / 2, height / 2);\n  translate(triLength, triLength);\n\n  for (let i = (-1 * num) / 4; i < num / 4; i++) {\n    for (let j = (-1 * num * dim) / 4; j < (num * dim) / 4; j++) {\n      let triX = i * 2 * triLength;\n      let triY = j * 2 * triLength;\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX - triLength,\n        triY - triLength,\n        triX - triLength,\n        triY + triLength\n      );\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX - triLength,\n        triY - triLength,\n        triX + triLength,\n        triY - triLength\n      );\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX + triLength,\n        triY - triLength,\n        triX + triLength,\n        triY + triLength\n      );\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX + triLength,\n        triY + triLength,\n        triX - triLength,\n        triY + triLength\n      );\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "DaTbgWCyvDWPnhahk",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T12:35:57.378Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ad18c3dd929b82db7bdad2ab1a24c808",
        "public_id": "avalanche2023spring/yo6aevb5ti4qbvdf6siw",
        "version": 1677155905,
        "version_id": "56bac3c585b421d00ba491de199779b0",
        "signature": "3ef77ab54b507bfdca343dc81dd7ddc18580dfa4",
        "width": 1194,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T12:38:25Z",
        "tags": [],
        "bytes": 270309,
        "type": "upload",
        "etag": "380a23bb2a7982680dc64f16b2533767",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677155905/avalanche2023spring/yo6aevb5ti4qbvdf6siw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677155905/avalanche2023spring/yo6aevb5ti4qbvdf6siw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9794e3da155edefde22beadcdd6d1e8c",
        "public_id": "avalanche2023spring/vaa3rfciftixwrnr1pry",
        "version": 1677155910,
        "version_id": "af3253ade099b2afb9e2f097e55abcb8",
        "signature": "647ba7d96abf3244c90a7e0726d01db1557239b7",
        "width": 1198,
        "height": 1194,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T12:38:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 4431057,
        "type": "upload",
        "etag": "55baf2bd8a29cfc897364ffee7c4a208",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677155910/avalanche2023spring/vaa3rfciftixwrnr1pry.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677155910/avalanche2023spring/vaa3rfciftixwrnr1pry.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677155910/avalanche2023spring/vaa3rfciftixwrnr1pry.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "10417117",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 12948417,
        "duration": 2.737667,
        "rotation": 0,
        "nb_frames": 185,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T13:22:35.614Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T14:53:17.617Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:14.297Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T00:24:38.08Z" }
      }
    ],
    "title": "",
    "description": "WEEK 4 (1/4): This was the sketch I handed to Johnny. I saw a picture of this type of code somewhere and found a tutorial on how to make one but I added parameters and played around with it for an hour to see the different things I could do with it. ( I might change this because I really love the way this looks and might re- experiment with it. I am a bit in love with it and I took a lot of time to understand the youtube guys explanation and now I actually understand)",
    "inspiration_name": "Creative Coding with Maxim",
    "inspiration_url": "https://www.youtube.com/watch?v=RrSOv9FH6uo&ab_channel=CreativeCodingwithMaxim",
    "code": "function setup() {\n  createCanvas(600, 600);\n  \n  strokeWeight(0.002);\n  \n  //An edit of Jonnys Code :D\n  createP(\"Circles\");\n  circlecountSlider = createSlider(0, 1000, 10);\n     \n  createP(\"Background Color\");\n  bgcSlider = createInput(\"#648EDE\", \"color\");\n  \n  createP(\"Color\");\n  colorSlider = createInput(\"#C4D2EC\", \"color\");\n                          \n  \n}\n \n\nconst radius = Math.sqrt(0.5);\nconst dSize = 0.05;\nconst Yourmom = (1 + Math.sqrt(5)) / 2;\n\nfunction draw() {\n  scale(width, height);\n  background(bgcSlider.value());\n  stroke(colorSlider.value());\n  noFill();\n\n  \n  let count = circlecountSlider.value();\n  \n  for (let i = 1; i < count; i++) {\n    const f = i / count;\n    \n    const angle = i * Yourmom;\n    const distance = f * radius;\n\n    const x = 0.5 + cos(angle * TWO_PI) * distance;\n    const y = 0.5 + sin(angle * TWO_PI) * distance;\n\n    const r = f * dSize;\n\n    circle(x, y, r);\n  }\n}",
    "comments": []
  },
  {
    "_id": "DeHqECbKx7knZ2wm6",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "API",
    "created_at": { "$date": "2023-04-25T23:49:26.57Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fcca76bd667434af830e25e8fd5b9628",
        "public_id": "avalanche2023spring/fpd5z0mezz7rktcdkyts",
        "version": 1682467227,
        "version_id": "0e0c340ef62fe4f209af38719bf58706",
        "signature": "f165fdbe06717fbade33e07e5eed127ae809cd48",
        "width": 1078,
        "height": 892,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-26T00:00:27Z",
        "tags": [],
        "bytes": 152354,
        "type": "upload",
        "etag": "f91f1b766c17906ee524a436bdb6f5c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682467227/avalanche2023spring/fpd5z0mezz7rktcdkyts.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682467227/avalanche2023spring/fpd5z0mezz7rktcdkyts.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b6ef4d2f8427a56c2d9853980e69c8ca",
        "public_id": "avalanche2023spring/oej55kwjcb1g1ihh6ncs",
        "version": 1682467234,
        "version_id": "8d0d2c270545421db141ed7a23020049",
        "signature": "0a646181ed14bb0f125558bdf51b2816e76b750d",
        "width": 1094,
        "height": 876,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-26T00:00:34Z",
        "tags": [],
        "bytes": 144966,
        "type": "upload",
        "etag": "1eb7342ef2034af6e2195ea9e60d38fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682467234/avalanche2023spring/oej55kwjcb1g1ihh6ncs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682467234/avalanche2023spring/oej55kwjcb1g1ihh6ncs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "84ea8121c5d346d3d66c1394d1ef4436",
        "public_id": "avalanche2023spring/iinkgz0ffztavqvfohvd",
        "version": 1682467237,
        "version_id": "322ca04b413307e9cdaeb8e66d00c31d",
        "signature": "cd36b9ea808b87de12511180d986e4f7879d5851",
        "width": 1060,
        "height": 886,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-26T00:00:37Z",
        "tags": [],
        "bytes": 135297,
        "type": "upload",
        "etag": "a7057be050981b1dbfd374f77ed1823a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682467237/avalanche2023spring/iinkgz0ffztavqvfohvd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682467237/avalanche2023spring/iinkgz0ffztavqvfohvd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T02:28:15.753Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T03:10:25.341Z" }
      }
    ],
    "title": "",
    "description": "I spent some time setting up Codespaces and getting my ChatGPT key up and running. Then, I created an app that can create poems for any type of occasion for friends.  Here are some of the best (+ funniest) results. I wanted the poem to include puns, but without using the actual word \"pun\". The final prompt that seemed to work was: `Send a ${tone} ${occasion} poem to my friend, ${friend}, using lots of puns. Never use the actual word pun, puns, nor punny in the poem, ever.`",
    "comments": []
  },
  {
    "_id": "DejMSBHs5EsDJ8dXy",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T02:31:55.481Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d09de166d1a7eaa65e1b518b9a616011",
        "public_id": "avalanche2023spring/vspe0nukccfpcm83nsgg",
        "version": 1678415547,
        "version_id": "46a41c56e49cc72a59773d17717cff44",
        "signature": "9bede0d57ef39fd904c615f040ad435f045b78a2",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-10T02:32:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 5942716,
        "type": "upload",
        "etag": "2df5709f28c4af36bd491716ca1b6041",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678415547/avalanche2023spring/vspe0nukccfpcm83nsgg.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678415547/avalanche2023spring/vspe0nukccfpcm83nsgg.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678415547/avalanche2023spring/vspe0nukccfpcm83nsgg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192215",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "5161159",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 5351387,
        "duration": 8.866667,
        "rotation": 0,
        "nb_frames": 266,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:33.672Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:08.59Z" }
      }
    ],
    "title": "",
    "description": "Created this firey gif using random, noise and pixel",
    "comments": []
  },
  {
    "_id": "DoSKRwvhRR5q9C4fC",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T20:35:37.58Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "96b1e1d954766697a3a073b9ea705faa",
        "public_id": "avalanche2023spring/um0svamufubzm7irzsyv",
        "version": 1675024548,
        "version_id": "92ac6b4490f9dc099b64bca8d6fcbc5a",
        "signature": "faf5d1fa9f9586bb325ceda15171c0f8fef3fc12",
        "width": 2091,
        "height": 1595,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-29T20:35:48Z",
        "tags": [],
        "bytes": 365621,
        "type": "upload",
        "etag": "49ac931f3b553465d1465330aa404a48",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675024548/avalanche2023spring/um0svamufubzm7irzsyv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675024548/avalanche2023spring/um0svamufubzm7irzsyv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Excited for this and also hoping people end up with TV show recommendations!",
    "comments": []
  },
  {
    "_id": "DvJYitDmF97u2jquc",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "API",
    "created_at": { "$date": "2023-04-25T05:25:35.661Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "381baf0cd503f9e777b92cd662e1d104",
        "public_id": "avalanche2023spring/l3jyozbzuv1rttob556r",
        "version": 1682400589,
        "version_id": "f6fbec8afe15f5d418ac03cdfa1ff5e0",
        "signature": "7712f29e76f4b2dba01c8512c7c27a7fad046dab",
        "width": 1502,
        "height": 1064,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-25T05:29:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 5246434,
        "type": "upload",
        "etag": "915454ceb938178ab8a60c320bdb49e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682400589/avalanche2023spring/l3jyozbzuv1rttob556r.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682400589/avalanche2023spring/l3jyozbzuv1rttob556r.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682400589/avalanche2023spring/l3jyozbzuv1rttob556r.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "1664662",
          "dar": "751:532",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 1667718,
        "duration": 25.166667,
        "rotation": 0,
        "nb_frames": 755,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ff1e4f05e82d0aeb5ad0d4ab77c40852",
        "public_id": "avalanche2023spring/r5uu8vuirpx26qklkjek",
        "version": 1682400670,
        "version_id": "1bd2bac19b695b22bb15d87241123917",
        "signature": "757806cfd0a446bda0e5a65200c6a7d85efba728",
        "width": 1390,
        "height": 918,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-25T05:31:10Z",
        "tags": [],
        "bytes": 222621,
        "type": "upload",
        "etag": "465fcfe10fdfd09226e31f9532d20843",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682400670/avalanche2023spring/r5uu8vuirpx26qklkjek.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682400670/avalanche2023spring/r5uu8vuirpx26qklkjek.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T03:10:21.085Z" }
      }
    ],
    "title": "",
    "description": "Twist Challenge: tried to recreate the last sketch using just the ChatGPT interface fairly successfully. I did have to prompt it many times to actually *answer* the prompt, not just repeat it back to me, which it took a while to understand. Even after it understood once, if I changed the prompts around or redefined the initial question, I had to tell it again to actually answer the prompt after repeating it.",
    "comments": []
  },
  {
    "_id": "DvkXxvTtQW7WnkeyP",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T15:29:42.509Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e2da3b4bbc64df2ab4b34302dc69d65b",
        "public_id": "avalanche2023spring/zu8h3s92zclw8pobpdk1",
        "version": 1676647789,
        "version_id": "cf52e0a412f9d43a9cd5035f6907e4dc",
        "signature": "15dd837a951c0c7f5986be2cd3e3a44c739769e2",
        "width": 1104,
        "height": 1086,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T15:29:49Z",
        "tags": [],
        "bytes": 119373,
        "type": "upload",
        "etag": "90fca1ba5a6729f8a84c6f6e52ac16c7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676647789/avalanche2023spring/zu8h3s92zclw8pobpdk1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676647789/avalanche2023spring/zu8h3s92zclw8pobpdk1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T20:01:27.904Z" }
      }
    ],
    "title": "",
    "description": "Apparently I'm very into pink this week. A mix of using noise and random!",
    "comments": []
  },
  {
    "_id": "E7E5mbTrrcCn2B33X",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T03:30:49.203Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bae97faa06dd1c0a8d7de7730bf001b1",
        "public_id": "avalanche2023spring/jcncbpoerztvucbo3z1l",
        "version": 1683862332,
        "version_id": "b27827c9926e707577a71bace2a845cf",
        "signature": "1a2a6c33ab822b1491861e7f6a7daa6e2c986e56",
        "width": 1358,
        "height": 1348,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T03:32:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 11536652,
        "type": "upload",
        "etag": "9578f8fe1eccc3eb8bb1ac361ead6c20",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683862332/avalanche2023spring/jcncbpoerztvucbo3z1l.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683862332/avalanche2023spring/jcncbpoerztvucbo3z1l.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683862332/avalanche2023spring/jcncbpoerztvucbo3z1l.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "14011675",
          "dar": "679:674",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 14019223,
        "duration": 6.583333,
        "rotation": 0,
        "nb_frames": 395,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dc3427f6a1dec13f1df43d5eea99b31c",
        "public_id": "avalanche2023spring/jibqqluysfkffhpgonwt",
        "version": 1683862335,
        "version_id": "8f30308bbbd297fd6f87ae55e6b53f3d",
        "signature": "8fd7c56ff85564d08c8c9b18c5aae66fefb2e54a",
        "width": 1358,
        "height": 1348,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T03:32:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 14055766,
        "type": "upload",
        "etag": "aa5a38a6b0a51f3e227e20cc1bf87e41",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683862335/avalanche2023spring/jibqqluysfkffhpgonwt.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683862335/avalanche2023spring/jibqqluysfkffhpgonwt.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683862335/avalanche2023spring/jibqqluysfkffhpgonwt.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "19435334",
          "dar": "679:674",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 19443135,
        "duration": 5.783333,
        "rotation": 0,
        "nb_frames": 347,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Interesting patterns almost like being made on the rotating bases",
    "comments": []
  },
  {
    "_id": "EA3Rddz65JJzS3f3F",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T22:16:02.679Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7acd1e4b73cbb02d5b8d1e1c808d4d15",
        "public_id": "avalanche2023spring/xkozoeofqjx1f45yordm",
        "version": 1675894587,
        "version_id": "bfef58fe1aa649832a5b227e04e7cef1",
        "signature": "812e7d40b701a78fa220536188fa8a614a1c1bdb",
        "width": 1204,
        "height": 1208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T22:16:27Z",
        "tags": [],
        "bytes": 1219012,
        "type": "upload",
        "etag": "a88237818cf000855e95d9be5e185e6d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675894587/avalanche2023spring/xkozoeofqjx1f45yordm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675894587/avalanche2023spring/xkozoeofqjx1f45yordm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "fc35f57767af0a813d1fc00d92f9e184",
        "public_id": "avalanche2023spring/bkblymnainx6wtapm8r1",
        "version": 1675894593,
        "version_id": "33351717cf53946b9ac1faf2e9ee1ead",
        "signature": "584130cb9b9ed9864115559557b7affd368ab2fe",
        "width": 1204,
        "height": 1210,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T22:16:33Z",
        "tags": [],
        "bytes": 1375778,
        "type": "upload",
        "etag": "a9f586768900bdfb2036383ed6549e2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675894593/avalanche2023spring/bkblymnainx6wtapm8r1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675894593/avalanche2023spring/bkblymnainx6wtapm8r1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e5cfc894d12f6bd42b6d0af6240b85e1",
        "public_id": "avalanche2023spring/yx9tdtlusy1nbslbjror",
        "version": 1675895132,
        "version_id": "854aafd18c17d7ef44b2be0878c6e8f3",
        "signature": "a73a87b856ac1500700bf39426a97009bc9dfa22",
        "width": 1202,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T22:25:32Z",
        "tags": [],
        "bytes": 876169,
        "type": "upload",
        "etag": "a5d22bbd6921aa8bc8957ad87160b0c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675895132/avalanche2023spring/yx9tdtlusy1nbslbjror.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675895132/avalanche2023spring/yx9tdtlusy1nbslbjror.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T02:03:05.762Z" }
      }
    ],
    "title": "",
    "description": "I've added buttons to switch between shapes/beziers",
    "code": "//require https://cdnjs.cloudfare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(600, 620);\n  frameRate(30);\n  background(\"white\");\n\n  radio = createRadio();\n  radio.position(width / 2, height - 20);\n  radio.option(1);\n  radio.option(2);\n  radio.option(3);\n  radio.option(4);\n}\n\nfunction draw() {\n  let val = radio.value();\n  let c, r, g, b, x, y;\n  c = random(40, 80);\n  r = random(255);\n  g = random(255);\n  b = random(255);\n  x = random(width);\n  y = random(height - 20);\n\n  fill(r, g, b, 50);\n  stroke(r, g, b);\n\n  if (val == 1) {\n    strokeWeight(1);\n    ellipse(x, y, c);\n  }\n\n  if (val == 2) {\n    strokeWeight(1);\n    rect(x, y, c);\n  }\n\n  if (val == 3) {\n    strokeWeight(3);\n\n    // bezier(x, y, x-50, y+20, x+100, 80, y, x);\n bezier(x, y, 40, 80, 10, 20, x, y); //petal effect\n    // bezier(x, y, 50, x, y, 100, x, y, 250, x, y, 300);\n  }\n  \n if (val == 4) {\n    strokeWeight(3);\n       bezier(x, y, 40, 80, x, y, x, y); //line effect\n  }\n\n  if (mouseIsPressed) {\n    background(\"white\");\n  }\n\n  if (keyIsPressed) {\n    if (keyCode == 49) {\n      saveCanvas(\"myCanvas\", \"png\");\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "EBsrpJfamq9YP8DZB",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-02T04:11:44.751Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8ce3bb023beb75bd86c37f31bdeb10cf",
        "public_id": "avalanche2023spring/sopjexiryuzmpnwwylom",
        "version": 1683000844,
        "version_id": "a363904aca4d5da428b5a15f1aebf9a7",
        "signature": "6f58cf33bf513d74e3fcea1aeda8cd6420cb33d4",
        "width": 1638,
        "height": 1542,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-02T04:14:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 17623971,
        "type": "upload",
        "etag": "d24eafdad130fb61bba5ed02019185e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683000844/avalanche2023spring/sopjexiryuzmpnwwylom.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683000844/avalanche2023spring/sopjexiryuzmpnwwylom.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683000844/avalanche2023spring/sopjexiryuzmpnwwylom.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "18965763",
          "dar": "273:257",
          "time_base": "1/30000"
        },
        "frame_rate": 30,
        "bit_rate": 18967587,
        "duration": 7.4333,
        "rotation": 0,
        "nb_frames": 223,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3e4f7c69769338b0b9f94be1a9dc4f87",
        "public_id": "avalanche2023spring/crveodgedb5ijjmgoend",
        "version": 1683053624,
        "version_id": "a19d560bc511ddf5d641121ae1348562",
        "signature": "0ca708a61563c87dfdada512f39376d4c0e263d4",
        "width": 1192,
        "height": 1154,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-02T18:53:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 10914240,
        "type": "upload",
        "etag": "5c31888f660f3aa97614d7c3ea1b80b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683053624/avalanche2023spring/crveodgedb5ijjmgoend.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683053624/avalanche2023spring/crveodgedb5ijjmgoend.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683053624/avalanche2023spring/crveodgedb5ijjmgoend.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "19841652",
          "dar": "596:577",
          "time_base": "1/30000"
        },
        "frame_rate": 30,
        "bit_rate": 19844072,
        "duration": 4.4,
        "rotation": 0,
        "nb_frames": 132,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "baf3ba7f706bf8631f16c9348a9b1a76",
        "public_id": "avalanche2023spring/y6jooda5zrf19qesviph",
        "version": 1683053628,
        "version_id": "68a671a9503c4c7cfe311ccae508f929",
        "signature": "79a8f76677f8cc3f173041b3b1ce5aa4837f8483",
        "width": 1224,
        "height": 1144,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-02T18:53:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 17332977,
        "type": "upload",
        "etag": "66b8cd132fd26fad5328b1bd366574c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683053628/avalanche2023spring/y6jooda5zrf19qesviph.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683053628/avalanche2023spring/y6jooda5zrf19qesviph.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683053628/avalanche2023spring/y6jooda5zrf19qesviph.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "18569309",
          "dar": "153:143",
          "time_base": "1/30000"
        },
        "frame_rate": 30,
        "bit_rate": 18571130,
        "duration": 7.466633,
        "rotation": 0,
        "nb_frames": 224,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:49.658Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T08:26:49.803Z" }
      }
    ],
    "title": "",
    "description": "Wanted to play with movement on three.js, so took an old sketch and added animation.",
    "code": "var scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\ncamera.position.y = 0.4;\ncamera.position.z = 7;\nvar renderer = new THREE.WebGLRenderer({antialias: true});\nrenderer.setClearColor(0x212121);\nrenderer.setSize(window.innerWidth,window.innerHeight);\n\ndocument.body.appendChild(renderer.domElement);\nwindow.addEventListener('resize',()=>{\n    renderer.setSize(window.innerWidth,window.innerHeight);\n    camera.aspect = window.innerWidth/window.innerHeight;   \n    camera.updateProjectionMatrix();\n});\n\nlet boxes = [];\nlet boxMaterials = [];\nlet boxMeshes = [];\nlet boxRows = 14;\n\nlet max = 2.5;\nlet offset = max/6.25;\nlet squareSize = max/10;\nlet squareHeightBase = max*1.6;\nlet sinOffset = (max*1.2) / 4.5;\n\nfor (let i=-1*max; i<max+offset; i+=offset) {\n    for (let j=-1*max; j<max+offset; j+=offset) {\n        boxes[i + j*boxRows] = new THREE.BoxGeometry(\n            squareSize, squareSize, \n            squareHeightBase + Math.sin(i*sinOffset) + Math.sin(j*sinOffset)\n        );\n        boxMaterials[i + j*boxRows] = new THREE.MeshLambertMaterial(\n            {color: \"hsl(\" +  Math.abs(((i*j)%15) + 10 ) + \", 80%, 50%)\"}\n        );\n        boxMeshes[i + j*boxRows] = new THREE.Mesh(boxes[i + j*boxRows], boxMaterials[i + j*boxRows]);\n        boxMeshes[i + j*boxRows].position.set(i,j,0);\n        scene.add(boxMeshes[i + j*boxRows]);\n    }  \n}\n\nlet spheres = [];\nlet sphereMaterials = [];\nlet sphereMeshes = [];\nlet sphereRows = 50;\nlet sphereoffset = 1;\n\nfor (let i=-1*max; i<max+sphereoffset; i+=sphereoffset) {\n    for (let j=-1*max; j<max+sphereoffset; j+=sphereoffset) {\n        for (let k=0; k<5; k+=sphereoffset) {\n            spheres[i + j*sphereRows] = new THREE.SphereGeometry((Math.random()*0.075), 25, 25);\n            sphereMaterials[i + j*sphereRows] = new THREE.MeshLambertMaterial({color: 0xFFFFFF});\n            sphereMeshes[i + j*sphereRows] = new THREE.Mesh(spheres[i + j*sphereRows], sphereMaterials[i + j*sphereRows]);\n            sphereMeshes[i + j*sphereRows].position.set(\n                (Math.random()*2*max)-max,\n                (Math.random()*2*max)-max,\n                (Math.random()*3.25)\n            );\n            scene.add(sphereMeshes[i + j*sphereRows]);\n        }\n    }  \n}\n\nvar light = new THREE.PointLight(0xFFFFFF, 1, 500);\nlight.position.set(-4,-4,18);\nscene.add(light);\n\nlet boxTheta = 0;\nlet sphereTheta = 0;\n\nvar render = function(){\n    requestAnimationFrame(render);\n\n    for (let i=-1*max; i<max+offset; i+=offset) {\n        for (let j=-1*max; j<max+offset; j+=offset) {\n            boxMeshes[i + j*boxRows].rotation.z += 0.05;\n            boxMeshes[i + j*boxRows].position.z += (Math.sin(boxTheta + i + j))/20;\n            boxTheta += 0.001;\n        }\n    }\n\n    for (let i=-1*max; i<max+sphereoffset; i+=sphereoffset) {\n        for (let j=-1*max; j<max+sphereoffset; j+=sphereoffset) {\n            sphereMeshes[i + j*sphereRows].position.x += (Math.sin(sphereTheta + i + j))/100;\n            sphereMeshes[i + j*sphereRows].position.y += (Math.sin(sphereTheta + i + j))/100;\n            sphereMeshes[i + j*sphereRows].position.z += (Math.sin(sphereTheta + i + j))/100;            \n            sphereTheta += 0.001;\n        }\n    }\n\n    renderer.render(scene,camera);\n}\nrender();",
    "comments": []
  },
  {
    "_id": "EDTCZ4ZPjG76cBmMY",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T13:26:39.884Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3be918c4f16d31b1b113e9225a17a9b9",
        "public_id": "avalanche2023spring/nspqjmtvivrsbp2vboje",
        "version": 1676640404,
        "version_id": "899221ec6da7ec8e00ecb57a7cad05b0",
        "signature": "e792b47d310ff7d85a9bbf9816dece6fbc246f2e",
        "width": 940,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-17T13:26:44Z",
        "tags": [],
        "bytes": 429534,
        "type": "upload",
        "etag": "2c6a680cf5216eb0bcee3d66088dac05",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676640404/avalanche2023spring/nspqjmtvivrsbp2vboje.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676640404/avalanche2023spring/nspqjmtvivrsbp2vboje.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-18T01:33:05.782Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge with Aabha!",
    "comments": []
  },
  {
    "_id": "EMBPmwGhBSohrW44G",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T00:18:35.62Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c2ffe10ace1c17f2720e7ab3bc839e2b",
        "public_id": "avalanche2023spring/ecvcx0zv09zaxfpg7vsw",
        "version": 1683850731,
        "version_id": "3479eacb4302e042439d35395d448f7f",
        "signature": "d752a234ac73682770b5d78f8edb71c6d33f4ab3",
        "width": 854,
        "height": 694,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T00:18:51Z",
        "tags": [],
        "bytes": 48659,
        "type": "upload",
        "etag": "820da5b3ccb7a17553002db61cd5dfb6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683850731/avalanche2023spring/ecvcx0zv09zaxfpg7vsw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683850731/avalanche2023spring/ecvcx0zv09zaxfpg7vsw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "35b9c8d9625758af7a6e9894f2f60fde",
        "public_id": "avalanche2023spring/pmsq4ljx8b0bg9vwfaat",
        "version": 1683850741,
        "version_id": "c31c9dfcc001fc10033e670c20759bc6",
        "signature": "253377279d02b3fb8bb5cb87190b68edd2b0655b",
        "width": 1350,
        "height": 844,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T00:19:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 1520380,
        "type": "upload",
        "etag": "266ca506a909022c0dfaea5917dc2547",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683850741/avalanche2023spring/pmsq4ljx8b0bg9vwfaat.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683850741/avalanche2023spring/pmsq4ljx8b0bg9vwfaat.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683850741/avalanche2023spring/pmsq4ljx8b0bg9vwfaat.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "7519304",
          "dar": "675:422",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 8831928,
        "duration": 1.377167,
        "rotation": 0,
        "nb_frames": 91,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:13:41.264Z" }
      }
    ],
    "title": "",
    "description": "Maximum zoomies",
    "inspiration_name": "Cats",
    "comments": []
  },
  {
    "_id": "EMWMkgFdPfNvWZPN2",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T03:53:47.673Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0389563f88198bb5852ad0c5f2e24168",
        "public_id": "avalanche2023spring/kr42nlurvdpjl4pkkirm",
        "version": 1678420452,
        "version_id": "5e936e860c7aabe23230248cf6d2186a",
        "signature": "adac1c7cfb8a512c4a233872acb8999490fc720f",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T03:54:12Z",
        "tags": [],
        "bytes": 747787,
        "type": "upload",
        "etag": "935cb8a87730dc011e77aa1f6fe4264a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678420452/avalanche2023spring/kr42nlurvdpjl4pkkirm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678420452/avalanche2023spring/kr42nlurvdpjl4pkkirm.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "48e754b932711c6ba2e2a42fb5ed0cc9",
        "public_id": "avalanche2023spring/w10lv6qczryd4m5egiu0",
        "version": 1678420456,
        "version_id": "e21e3ecfd6990e15a87f92a35c69b1bf",
        "signature": "86c5bccdcfd13537ef318e28b2765f842b04b1fb",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T03:54:16Z",
        "tags": [],
        "bytes": 707509,
        "type": "upload",
        "etag": "4f0049af06d9d2778ffed5344eab3aac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678420456/avalanche2023spring/w10lv6qczryd4m5egiu0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678420456/avalanche2023spring/w10lv6qczryd4m5egiu0.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:39.132Z" }
      }
    ],
    "title": "",
    "description": "Extension of Brian's sketch for the pair challenge!",
    "comments": []
  },
  {
    "_id": "ESLPDDnQwQPWrvEsK",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:59:08.13Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5f23d43f68e6f6cc465f8db6172ede46",
        "public_id": "avalanche2023spring/hkijehmjonafpjrcur4s",
        "version": 1683302356,
        "version_id": "ee52726f242bc8583499eb0718d8c6e2",
        "signature": "1739767f9202d972200d9a8f293b4b47f863d152",
        "width": 1788,
        "height": 1078,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:59:16Z",
        "tags": [],
        "bytes": 166181,
        "type": "upload",
        "etag": "c4e4cf737f915729913c92c96e170ae1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683302356/avalanche2023spring/hkijehmjonafpjrcur4s.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683302356/avalanche2023spring/hkijehmjonafpjrcur4s.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:46.669Z" }
      }
    ],
    "title": "",
    "description": "An attempt at pseudo-randomness",
    "comments": []
  },
  {
    "_id": "EdGNKygbjo33SR4eh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T04:57:04.995Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37b808f4eb41b13bddef2c6fdac4df86",
        "public_id": "avalanche2023spring/rhzoqlfq5cxq81lxy3jp",
        "version": 1683262634,
        "version_id": "c7722b25b95abfacd34738e5cdfb7de7",
        "signature": "ef1da29a1e4f1ffb4a80036a8b80f6d5022d3445",
        "width": 772,
        "height": 794,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T04:57:14Z",
        "tags": [],
        "bytes": 44799,
        "type": "upload",
        "etag": "2a7f7e296f9a5cf77700b72b090c5a11",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683262634/avalanche2023spring/rhzoqlfq5cxq81lxy3jp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683262634/avalanche2023spring/rhzoqlfq5cxq81lxy3jp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:27.806Z" }
      }
    ],
    "title": "",
    "description": "Tried to make a flower with cylinders",
    "code": "// Define variables\nPETAL_WIDTH = 20;\nPETAL_LENGTH = 60;\nPETAL_THICKNESS = 5;\nSTEM_LENGTH = 80;\nSTEM_THICKNESS = 5;\n\n// Define petal module\nmodule petal() {\n  difference() {\n    cylinder(h=PETAL_LENGTH, r=PETAL_WIDTH/2, center=true);\n    translate([0, 0, PETAL_THICKNESS]) cylinder(h=PETAL_LENGTH, r=PETAL_WIDTH/4, center=true);\n  }\n}\n\n// Define flower module\nmodule flower() {\n  union() {\n    for(i=[0:4]) {\n      rotate([0, 0, i*72]) translate([0, PETAL_LENGTH/2, 0]) petal();\n    }\n    cylinder(h=STEM_LENGTH, r=STEM_THICKNESS/2, center=true);\n  }\n}\n\n// Draw flowers in a 2x2 square pattern\nfor(x=[-100:100:200]) {\n  for(y=[-100:100:200]) {\n    translate([x, y, 0]) flower();\n  }\n}\n\n// Draw big cube below flowers\ntranslate([0, 0, -50]) color(\"blue\") cube([500, 500, 50]);",
    "comments": []
  },
  {
    "_id": "EeA8YvMiLL24BSRhT",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T03:25:00.047Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a12c59587329845cefb8bdf00ce9b341",
        "public_id": "avalanche2023spring/pwnrssmdazzm0lkwjt8p",
        "version": 1682047507,
        "version_id": "2f578e22480f4430fc0cf77aee22d9f7",
        "signature": "93495b8c0fc978705edccb03652e30227a19b6eb",
        "width": 1502,
        "height": 821,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T03:25:07Z",
        "tags": [],
        "bytes": 1693290,
        "type": "upload",
        "etag": "c35634efd5e59eb46cfd3a5a11ecdb60",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682047507/avalanche2023spring/pwnrssmdazzm0lkwjt8p.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682047507/avalanche2023spring/pwnrssmdazzm0lkwjt8p.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1da1eed46034866cedd82869c4cd0ef7",
        "public_id": "avalanche2023spring/ov6wnqgbjzdohl3to08m",
        "version": 1682047536,
        "version_id": "27eb6c154d547b5beb749bdb3f0987ac",
        "signature": "4427013cc7d3eee93cc2727b174008a0f97374e6",
        "width": 1280,
        "height": 956,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-21T03:25:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 2718664,
        "type": "upload",
        "etag": "52c4ba371590f1d8dbd79b42fa19e385",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682047536/avalanche2023spring/ov6wnqgbjzdohl3to08m.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682047536/avalanche2023spring/ov6wnqgbjzdohl3to08m.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682047536/avalanche2023spring/ov6wnqgbjzdohl3to08m.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "2662082",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 2668627,
        "duration": 8.15,
        "rotation": 0,
        "nb_frames": 489,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9e6b007ebd884bd8580e9e7bb746dab9",
        "public_id": "avalanche2023spring/jcszyho2xe0nne23i83s",
        "version": 1682047607,
        "version_id": "0514fa055870d3875c26dc476abe3815",
        "signature": "c8ba8ce8785279af7a08736eea034d9228e83f48",
        "width": 1280,
        "height": 956,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-21T03:26:47Z",
        "tags": [],
        "pages": 0,
        "bytes": 1771841,
        "type": "upload",
        "etag": "4ebeb6be93cb69fd83aa9d468d72c494",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682047607/avalanche2023spring/jcszyho2xe0nne23i83s.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682047607/avalanche2023spring/jcszyho2xe0nne23i83s.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682047607/avalanche2023spring/jcszyho2xe0nne23i83s.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "3119467",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 3126318,
        "duration": 4.533333,
        "rotation": 0,
        "nb_frames": 272,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:27:01.61Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:27:32.044Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:29:31.986Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:48:11.916Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:06:11.59Z" }
      }
    ],
    "title": "",
    "comments": [],
    "description": "another alphabet series! each letter is composed of an object that starts with that letter. I've been meaning to work with PoseNet and the premise is pretty simple. It lets you use your body as a console to input whatever you want and I'm thinking of the countless applications. Maybe make music out of dance moves? Record poses and input them into other ai tools like the example talked about in class. Or just take something old and make it with something new, like the letters!"
  },
  {
    "_id": "EeQnnEuKshfA3h8uC",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-10T22:10:31.403Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "31cbe2c3514cbc68d97631e7bd5d8ac1",
        "public_id": "avalanche2023spring/jr7vkc17omvqeqj4ev4a",
        "version": 1683756645,
        "version_id": "a789c1e98f38bb719c5f1b86927bba32",
        "signature": "acba3f7ab48790c958aa95a7872217b4eec36bdf",
        "width": 1510,
        "height": 1134,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-10T22:10:45Z",
        "tags": [],
        "bytes": 129331,
        "type": "upload",
        "etag": "7dc355cda198b9e447c9b8b2f0660194",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683756645/avalanche2023spring/jr7vkc17omvqeqj4ev4a.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683756645/avalanche2023spring/jr7vkc17omvqeqj4ev4a.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-10T22:20:25.28Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T11:44:40.506Z" }
      }
    ],
    "title": "",
    "description": "I worked on a project that actually used a turtle drawer as the main technique. Here, you can input text and the turtle drawer will take that text as a series of instructions and draw each character one by one as a continuous spiral.",
    "comments": []
  },
  {
    "_id": "EheJyKcaXb9agvBg6",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T11:18:22.485Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "82eb871a12a80d9c3ef4d28029031123",
        "public_id": "avalanche2023spring/qmceauqt8rxlhjyaxfah",
        "version": 1683285541,
        "version_id": "c29bc8201d0604bf752ae2c2af3b25d2",
        "signature": "6519bc73aed7bc85e7783c1c2466da8ea5e06d0e",
        "width": 1024,
        "height": 768,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T11:19:01Z",
        "tags": [],
        "bytes": 730632,
        "type": "upload",
        "etag": "16a04da51d70f4b8922e16096a9c688a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683285541/avalanche2023spring/qmceauqt8rxlhjyaxfah.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683285541/avalanche2023spring/qmceauqt8rxlhjyaxfah.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ebc26142c41a6c48775d16d9f857fd36",
        "public_id": "avalanche2023spring/cqriklo8n6ndhgbmuk62",
        "version": 1683286012,
        "version_id": "24a8ab03a02ae4b537dc86a717a6ce72",
        "signature": "de3a98d6d025b85fb826f8b45a7e48c354d9ad39",
        "width": 1544,
        "height": 1444,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-05T11:26:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 3152347,
        "type": "upload",
        "etag": "ac19275f37fe9f4170da29985b267879",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683286012/avalanche2023spring/cqriklo8n6ndhgbmuk62.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683286012/avalanche2023spring/cqriklo8n6ndhgbmuk62.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683286012/avalanche2023spring/cqriklo8n6ndhgbmuk62.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "1406665",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 1412816,
        "duration": 17.85,
        "rotation": 0,
        "nb_frames": 1071,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "73e9bf3cd5323a77aad61463cc3876e6",
        "public_id": "avalanche2023spring/ul1jg5jhqu8ndd5y4ynf",
        "version": 1683286653,
        "version_id": "2f57f4cfe8d1c39425d394c2de2f85a2",
        "signature": "5cba72ba7b65822d3f8a62d830f8acb991796248",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T11:37:33Z",
        "tags": [],
        "bytes": 1186909,
        "type": "upload",
        "etag": "cc5281b66ef2a8674c298285e5c8e57c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683286653/avalanche2023spring/ul1jg5jhqu8ndd5y4ynf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683286653/avalanche2023spring/ul1jg5jhqu8ndd5y4ynf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:20:49.109Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:16:32.641Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T10:20:39.8Z" }
      }
    ],
    "title": "",
    "description": "Golden castle rendered off of the openSCAD STL export. The possibilities are too many so I have to stop now!",
    "code": "echo(version=version());\n\n// rotate_extrude() rotates a 2D shape around the Z axis. \n// Note that the 2D shape must be either completely on the \n// positive or negative side of the X axis.\n$fn = 80;\n\ncolor(\"gray\")\ntranslate([-15,-50,5])\ncube([200,200,5]);\n//translate([85,45,7])\n//cylinder(h = 5, r = 120, center = true);\n\n\nmodule tower(){\ncolor(\"cyan\")\n \n    union(){\n         translate([40, 0, 20])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n         translate([40, 0, 120])\n    cylinder (h=50, r=16, center = true);\n            color(\"cyan\")\n              translate([40, 0, 90])\n        rotate_extrude($fn = 80)\n            text(\"  J\");\n                translate([40, 0, 60])\n        rotate_extrude($fn = 80)\n            text(\"  T\");\n                 translate([40, 0, 70])\n          cylinder (h=60, r=10, center = true);\n    }\n    color(\"cyan\")\n              translate([40, 0, 30])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n    \n       color(\"cyan\")\n              translate([40, 0, 10])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n            \n            \ncolor(\"cyan\")\n      translate([40, 0, 0])\n        rotate_extrude($fn = 80)\n            text(\"  W\");\n\n// rotate_extrude() uses the global $fn/$fa/$fs settings, but\n// it's possible to give a different value as parameter.\ncolor(\"cyan\")\n    translate([40, 0, -10])\n        rotate_extrude($fn = 80)\n            text(\"  H\");\n\n// Using a shape that touches the X axis is allowed and produces\n// 3D objects that don't have a hole in the center.\ncolor(\"cyan\")\n    translate([40, 00, -35])\n        rotate_extrude($fn = 80)\n            polygon( points=[[0,0],[18,14],[14,18],[14,22],[22,26],[0,20]] );\n        }\n        \n        for (x = [0:1], y = [0:1]) {\n    translate([x * 80, y * 80, 150]) {\n           rotate([0,180,180])\n    tower();\n    }\n}\n\n  \n\n\n// combining both relatively complex shapes can be created\n\nmodule spire(){\n\n    \ncolor(\"orange\")\n   \n    \n    translate([100, 100, 110])\n        linear_extrude(height = 60, twist = -360, scale = 0, center = true, slices = 200)\n            square([20, 10], center = true);\n\ncolor(\"gray\")\n    translate([100, 100, 0])  // Changed y-coordinate from -30 to -40\n        linear_extrude(height = 80)\n            square([20, 10], center = true);\n    \n}\n\ntranslate([-90,-130,10])\nfor (x = [0:1], y = [0:1]) {\n    translate([x * 150, y * 150, 0]) {\n spire();\n    }\n}\n\n\ncolor(\"gray\")\n  translate([160, 120, 30])\n    rotate([0-45,90,90])\ncube([10,210,5]);\ncolor(\"gray\")\n      translate([160, -30, 30])\n    rotate([-45+90,90,90])\ncube([10,210,5]);\n\ncolor(\"gray\")\n  translate([120, -10, 105])\n    rotate([45,90,90])\ncube([10,120,5]);\ncolor(\"gray\")\n  translate([120, 80, 105])\n    rotate([-45,90,90])\ncube([10,120,5]);\n\nmodule walls(){\n  translate([10, 90, 40])\n  rotate([0,90,0])\n  scale([1.5,1.5,1.5])\ndifference() {\n    union() {\n        translate([0, -10, -3]) cube([25, 20, 6]);\n        cylinder(h = 6, r = 10, center = true);\n    }\n    cylinder(h = 10, r = 5, center = true);\n}\n}\n\n//module sidewall(){\n//for (x=[0:4]){\n//color(\"gray\")\n //   translate([0, -105+x*31, 0])\n      //  walls();\n//}\n//}\n\n//sidewall();\n//\n//translate([150, 0, 5])\n//    rotate([0,0,0])\n//sidewall();\n//\n//translate([130, 110, 5])\n//    rotate([0,0,90])\n//sidewall();\n//\n//translate([130, -40, 5])\n//    rotate([0,0,90])\n//sidewall();\n//color(\"gray\")\n  //translate([10, -30, 60])\n    //rotate([90,90,90])\n//cube([10,150,5]);\n\n        \n\n// By default rotate_extrude forms a full 360 degree circle, \n// but a partial rotation can be performed by using the angle \n\n\n// Written in 2015 by Torsten Paul <Torsten.Paul@gmx.de>\n//\n// To the extent possible under law, the author(s) have dedicated all\n// copyright and related and neighboring rights to this software to the\n// public domain worldwide. This software is distributed without any\n// warranty.\n//\n// You should have received a copy of the CC0 Public Domain\n// Dedication along with this software.\n// If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.",
    "comments": []
  },
  {
    "_id": "Ejm5BLbvqEcmEPxCs",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T20:32:58.061Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "55bf7bcc0bcbcca8081f0f7818dde175",
        "public_id": "avalanche2023spring/mykorffma70af4cgphwo",
        "version": 1677184381,
        "version_id": "812c78a2f3ef6486225fa8bc6f974f0b",
        "signature": "0624e4dfce3547955adba86cc6d6abf412073c0c",
        "width": 598,
        "height": 596,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-23T20:33:01Z",
        "tags": [],
        "bytes": 14695,
        "type": "upload",
        "etag": "db07f0d23ff0a3f02634b4bfb8744921",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677184381/avalanche2023spring/mykorffma70af4cgphwo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677184381/avalanche2023spring/mykorffma70af4cgphwo.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Failed sketch that I made this week. I wanted this to be an adjustable gameboard that would grow/shrink depending on the size of the squares but I couldn't get that to work, so instead I improvised and came out with this.\n\nEventually I would use this as a part of my Pair Challenge for this week.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  noStroke();\n  \n  createP(\"Square Size\");\n  squaresizeSlider = createSlider(0, 50, 10);\n  \n  createP(\"Circle Size\");\n  circlesizeSlider = createSlider(0, 50, 10);\n  \n  createP(\"Red Slider\");\n  r_Slider = createSlider(0, 255, 220);\n  \n  createP(\"Green Slider\");\n  g_Slider = createSlider(0, 255, 220);\n  \n  createP(\"Blue Slider\");\n  b_Slider = createSlider(0, 255, 220);\n}\n\nfunction draw() {\n  background(r_Slider.value(), g_Slider.value(), b_Slider.value());\n  drawShapes(); \n}\n\nfunction drawShapes() {\n  squareSize = squaresizeSlider.value();\n  circleSize = circlesizeSlider.value();\n  \n  rect(0, 0, squareSize, squareSize);\n  ellipse(0, 0, circleSize, circleSize);\n\n  for(y = 0; y < height; y++) {\n    for(x = 0; x < width; x++) {\n      translate(x + 10, y + 20);\n      rect(x * 10 + 5, y * 10 + 5, squareSize, squareSize);\n      \n      ellipse(x * 5, y + 40, circleSize, circleSize);\n      \n      rect(x, y + 100, squareSize, squareSize);\n      \n      ellipse(x / 10, y + 200, circleSize, circleSize);\n      \n      ellipse(x * 20 + 5, y, circleSize, circleSize);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "EkodnpBdgbLMChAmN",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T06:12:27.218Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "906bed745e9aa96746393655ed24d731",
        "public_id": "avalanche2023spring/d5elnhaqxgu325t7c2qb",
        "version": 1675663974,
        "version_id": "775dfbdb0590589369e707c037ac13f9",
        "signature": "9e8e5953a4b294b83dfa05da5a4554d827f2d4ab",
        "width": 3213,
        "height": 2342,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-06T06:12:54Z",
        "tags": [],
        "bytes": 1638726,
        "type": "upload",
        "etag": "2f6cbb70cbb1790b5ae4fc78faddc837",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675663974/avalanche2023spring/d5elnhaqxgu325t7c2qb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675663974/avalanche2023spring/d5elnhaqxgu325t7c2qb.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T15:27:01.502Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T16:36:58.589Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T17:44:37.065Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:02:28.793Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:02:33.839Z" }
      }
    ],
    "title": "",
    "description": "1,026 dice rolls later! I assigned a color to each side of a 6 sided die. The number rolled determined which color would fill each square.",
    "comments": []
  },
  {
    "_id": "EoW7ibvbhaQ5rt6iZ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T03:02:07.247Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5d42066e42bcd553be9524076bae8f50",
        "public_id": "avalanche2023spring/fmyifohjrm12lqqcydf2",
        "version": 1683860575,
        "version_id": "8861ccb606c0cb3f5036c1c65596fe28",
        "signature": "2cc5f8a3a88cb7c1dc44e1645a75756a0399edcd",
        "width": 1982,
        "height": 1948,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:02:55Z",
        "tags": [],
        "bytes": 2530010,
        "type": "upload",
        "etag": "a17f97bd68de9782d94a7ecefcad6bff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860575/avalanche2023spring/fmyifohjrm12lqqcydf2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860575/avalanche2023spring/fmyifohjrm12lqqcydf2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ecf3a82780983e9d2e8d0df186f93c29",
        "public_id": "avalanche2023spring/a7g3gyzlnhcsh8ifyrft",
        "version": 1683860578,
        "version_id": "ade13509e5a9277a5ae4618d76fb2b67",
        "signature": "989ea57877b37c1371505aa894ed088d834fc080",
        "width": 1982,
        "height": 1924,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:02:58Z",
        "tags": [],
        "bytes": 2185838,
        "type": "upload",
        "etag": "5dc714eb92ed652a5aab2186112ae7c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860578/avalanche2023spring/a7g3gyzlnhcsh8ifyrft.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860578/avalanche2023spring/a7g3gyzlnhcsh8ifyrft.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b341abcc7819ce97364b2210436761a6",
        "public_id": "avalanche2023spring/ivxunqkrhhmhxhibizgr",
        "version": 1683860588,
        "version_id": "b75a9b9f990a71188cd22b5639a95bf7",
        "signature": "77003cc1b9c04ddbca8b188ea2a3048d38dfd542",
        "width": 1982,
        "height": 1952,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:03:08Z",
        "tags": [],
        "bytes": 2139033,
        "type": "upload",
        "etag": "ee7047687985f16495df481417fa0818",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860588/avalanche2023spring/ivxunqkrhhmhxhibizgr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860588/avalanche2023spring/ivxunqkrhhmhxhibizgr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T04:36:14.378Z" }
      }
    ],
    "title": "",
    "description": "crystals? I was playing around with random to get these crystal-y shapes",
    "comments": []
  },
  {
    "_id": "ExgfpzA3JG8qCPWAM",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": { "$date": "2023-02-03T05:50:38.081Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "00aee7d5ab098e5579d4a265530c7f1e",
        "public_id": "avalanche2023spring/o0kfupya1ffgncjphsi6",
        "version": 1675403467,
        "version_id": "81109f5ae49fd369090e8d4599d688d1",
        "signature": "b391126d688cf0c199a1faac7f6c97a125f90c80",
        "width": 800,
        "height": 800,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-03T05:51:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 15540219,
        "type": "upload",
        "etag": "ed50346e5f83da4efb1fad2de3803437",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675403467/avalanche2023spring/o0kfupya1ffgncjphsi6.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675403467/avalanche2023spring/o0kfupya1ffgncjphsi6.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "6925633",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 7254651,
        "duration": 17.136833,
        "rotation": 0,
        "nb_frames": 1053,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:19:05.588Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "sticking to primitives this week! The 2 open sketches made me realize I much prefer polygons over ellipses to create with.",
    "code": "https://cdnjs.cloudfare.com/ajax/libs/p5/js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  frameRate(80);\n}\n\nfunction draw() {\n  background(220);\n\n  g = map(mouseX, 0, width, 0, 50);\n\n  for (i = 25; i <= width; i = i + 50) {\n    for (j = 25; j <= height; j = j + 50) {\n      circle(i, j, g);\n      if (g > 40) {\n        fill(\"#F44336\");\n      } else {\n        fill(\"#00BCD4\");\n       \n      }\n    }\n  }\n\n  // if(mouseIsPressed){\n  //   fill(random(0,155),random(0,155),random(0,155));\n  // }\n}",
    "comments": []
  },
  {
    "_id": "F54bJQzovCeDGFK2i",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T19:44:39.586Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b8511b6faf731dd959c57ad3b85ae9dc",
        "public_id": "avalanche2023spring/gnrutgo6fpzduwdtix2t",
        "version": 1679600703,
        "version_id": "5053aeebb2312d9bdde637c5e5455019",
        "signature": "09c791fb509f34b4d3236e6c19d11ca2780f00d2",
        "width": 1996,
        "height": 576,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T19:45:03Z",
        "tags": [],
        "bytes": 366014,
        "type": "upload",
        "etag": "f033f9501b297383ef6c3c41eb76b1d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679600703/avalanche2023spring/gnrutgo6fpzduwdtix2t.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679600703/avalanche2023spring/gnrutgo6fpzduwdtix2t.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:41.738Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:40:01.23Z" }
      }
    ],
    "title": "",
    "description": "Playing around with a reference sketch as a warm up!",
    "comments": []
  },
  {
    "_id": "F8ppdZTNNLkMBxNtL",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T10:13:04.14Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "73c3fdf7a42611b34ee22c7ab536c941",
        "public_id": "avalanche2023spring/xd8tahqqdc2vzdpshbai",
        "version": 1676542389,
        "version_id": "c0c68ddd8c691446ff9c21339315e827",
        "signature": "f6d39900f4ae3818625165fea15e863932010b06",
        "width": 976,
        "height": 886,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T10:13:09Z",
        "tags": [],
        "bytes": 335642,
        "type": "upload",
        "etag": "8ca0646c05a8d1c3f8c2d7bf3b4ef3d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676542389/avalanche2023spring/xd8tahqqdc2vzdpshbai.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676542389/avalanche2023spring/xd8tahqqdc2vzdpshbai.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T17:59:35.668Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:32.792Z" }
      }
    ],
    "title": "",
    "description": "WEEK 3 (4/4): Playing with the example code to try to achieve a pixelated map look. LISTEN, I STRUGGLED TOO MUCH WITH TRYING TO MANIPULATE NOISE SO THIS IS WHAT UR GONNA GET JUST PRETEND ITS MINECRAFT LAND OK?",
    "comments": []
  },
  {
    "_id": "FEcjpPn9KjJYXPvQP",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": { "$date": "2023-02-04T22:46:16.346Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f8f6d82a57b18707e7785f1794c34b10",
        "public_id": "avalanche2023spring/ff81ciomubmnrnwlsimw",
        "version": 1675550791,
        "version_id": "db91b861522c373926039c21943eccc8",
        "signature": "7dcf27995370baf216d17e8f2ce518b6b5c998bf",
        "width": 1905,
        "height": 945,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-04T22:46:31Z",
        "tags": [],
        "bytes": 54858,
        "type": "upload",
        "etag": "023783bc44a2641bcfc8ae7bd05483c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675550791/avalanche2023spring/ff81ciomubmnrnwlsimw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675550791/avalanche2023spring/ff81ciomubmnrnwlsimw.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-04T23:32:29.376Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T06:52:03.274Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T22:20:53.438Z" }
      }
    ],
    "lesson": "Random",
    "title": "",
    "description": "I originally had different plans with this piece but shifted gears to using p5.js for this. With the time I had allotted for this piece, unfortunately a lot of things that I wanted to implement did not come to fruition (e.g. wanting to spawn in multiple 3D shapes, randomizing positions), so I took what I was able to do and spun it into this piece.\n\nControls:\n\nEnter: Randomly generates one of the six shapes used in WebGL p5.js\nMouse: Click and drag to look around the scene\n\nLink for full screen can be found in code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n//Link: https://editor.p5js.org/kimj828/full/shqKOJvQr\n\n// This was my original idea I was going to do in 3D but I changed gears and tried this idea here:\n// 1D6 for shapes:\n// 1: Plane\n// 2: Box\n// 3: Cylinder\n// 4: Cone\n// 5: Sphere\n// 6: Torus\n\n// 1D20 - take value * 20 to determine point in space\n\n/////////////////////////////////////////////////////\n\nlet shapeVal;\n//let colorVal;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n  //debugMode();\n}\n\nfunction draw() {\n  background(15);\n  noStroke();\n  orbitControl();\n  //ambientLight(255);\n  //directionalLight(255, 255, 255, 0, 1, 0);\n  spotLight(205, 205, 205, 0, -1000, 0, 0, 1, 0, PI/3, 25);\n  spotLight(205, 205, 205, 0, 0, 1000, 0, 0, -1, PI/3, 100);\n  ambientMaterial(175);\n  \n  structure();\n  extraPillars();\n  \n  normalMaterial();\n  generateShape();\n}\n\nfunction keyPressed(ENTER) {\n  shapeVal = floor(random(1, 7));\n  console.log(shapeVal);\n}\n\nfunction generateShape() {\n  if(shapeVal == 1) {\n    push();\n    rotateY(frameCount * 0.03);\n    plane(150);\n    pop();\n  }\n  \n  if(shapeVal == 2) {\n    push();\n    rotateY(frameCount * 0.03);\n    box(150);\n    pop();\n  }\n  \n  if(shapeVal == 3) {\n    push();\n    rotateY(frameCount * 0.03);\n    cylinder(150);\n    pop();\n  }\n  \n  if(shapeVal == 4) {\n    push();\n    rotateY(frameCount * 0.03);\n    cone(150);\n    pop();\n  }\n  \n  if(shapeVal == 5) {\n    push();\n    rotateY(frameCount * 0.03);\n    sphere(150);\n    pop();\n  }\n  \n  if(shapeVal == 6) {\n    push();\n    rotateY(frameCount * 0.03);\n    torus(130);\n    pop();\n  }\n}\n\nfunction structure() {\n  push();\n  translate(0, 200, 0);\n  box(750, 100, 750);\n  pop();\n  \n  push();\n  translate(263, 0, -263);\n  box(100, 300, 100);\n  pop();\n  \n  push();\n  translate(-263, 0, -263);\n  box(100, 300, 100);\n  pop();\n  \n  push();\n  translate(-263, 0, 263);\n  box(100, 300, 100);\n  pop();\n  \n  push();\n  translate(263, 0, 263);\n  box(100, 300, 100);\n  pop();\n}\n\nfunction extraPillars() {\n  push();\n  translate(500, 0, -500);\n  box(100, 2000, 100);\n  pop();\n  \n  push();\n  translate(-500, 0, -500);\n  box(100, 2000, 100);\n  pop();\n  \n  push();\n  translate(-500, 0, 500);\n  box(100, 2000, 100);\n  pop();\n  \n  push();\n  translate(500, 0, 500);\n  box(100, 2000, 100);\n  pop();\n}\n\n/* function keyPressed(SHIFT) {\n  colorVal = floor(random(8, 13));\n  console.log(colorVal);\n} */",
    "comments": []
  },
  {
    "_id": "FG5sPQuY2RK8saKud",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T23:56:26.572Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3c962c7e43ba4b8388c9b46ef244d7e5",
        "public_id": "avalanche2023spring/gkrnvcjyoudrpsrtnpi3",
        "version": 1682035212,
        "version_id": "8f5d8b74391f591810b721929cf3bfef",
        "signature": "559e9c82d7e8e7a13f694bce40184bffe9a52559",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T00:00:12Z",
        "tags": [],
        "bytes": 1762779,
        "type": "upload",
        "etag": "b32e2be34cffac97eb8ab319fe3e9bdb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682035212/avalanche2023spring/gkrnvcjyoudrpsrtnpi3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682035212/avalanche2023spring/gkrnvcjyoudrpsrtnpi3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dde0d55965fd0519446cc98717c8853f",
        "public_id": "avalanche2023spring/vire0igqscxca3gk7uol",
        "version": 1682036906,
        "version_id": "dcbbe21d2b5a9491b0ba411123486a43",
        "signature": "1e27cf9494bbb3c0f8011efede2476db5d8626e3",
        "width": 2428,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T00:28:26Z",
        "tags": [],
        "bytes": 2538872,
        "type": "upload",
        "etag": "653b8c1d38d16bcc3136fcafa6c5e57b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682036906/avalanche2023spring/vire0igqscxca3gk7uol.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682036906/avalanche2023spring/vire0igqscxca3gk7uol.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "71a8a0929f8ed7c44105839658f2751a",
        "public_id": "avalanche2023spring/ghm4x9nlj9ayhvzrl6x6",
        "version": 1682036918,
        "version_id": "a1b5cd5ca5566358d9f1752cb9bbfdee",
        "signature": "d04e499b6da8dfec3f92f634620bd4cba951baa4",
        "width": 2428,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T00:28:38Z",
        "tags": [],
        "bytes": 2893131,
        "type": "upload",
        "etag": "80016fe8d138f73f545f1a0b4ef6af35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682036918/avalanche2023spring/ghm4x9nlj9ayhvzrl6x6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682036918/avalanche2023spring/ghm4x9nlj9ayhvzrl6x6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T05:05:23.461Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:00:17.374Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:42:37.387Z" }
      }
    ],
    "title": "",
    "description": "**Humans tend to have no body hair in cyberpunk action games,** is what DALLE's generation seems to reveal. The model translated \"body hair on arms\" to scars, tattoos and cyborg-parts. The build and attire also seem homogenous. Can we use these models as a way to highlight biases prevalent in visual and written discourse made by humans?",
    "comments": []
  },
  {
    "_id": "FQy4SteYxAaLkcmdn",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-05T01:35:47.622Z" },
    "posted": false,
    "cloudinary_media": [
      {
        "asset_id": "99c9ba2bef8c1baf064c96c04f4585ca",
        "public_id": "avalanche2023spring/isek3bns9oqem1datyab",
        "version": 1680658569,
        "version_id": "29f5102e079bf78ab390c6746f66081d",
        "signature": "9a3fc2c7e96d6533986a8e58cfe3fe4fcf37330b",
        "width": 3456,
        "height": 2002,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-05T01:36:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 14256745,
        "type": "upload",
        "etag": "fbb2af17a646470cfa3b3b5acd9854c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680658569/avalanche2023spring/isek3bns9oqem1datyab.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680658569/avalanche2023spring/isek3bns9oqem1datyab.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680658569/avalanche2023spring/isek3bns9oqem1datyab.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "110356",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "3857096",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3980570,
        "duration": 28.652667,
        "rotation": 0,
        "nb_frames": 1655,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "FWH6BDBHgC2faYHWH",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T14:39:25.853Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e16561afe3d59c6c83866440b267a3c8",
        "public_id": "avalanche2023spring/rxpoppvgi1e71nqiqygg",
        "version": 1683297597,
        "version_id": "4a605c4ce051cb2c0b1708dc63e25ad0",
        "signature": "e063dd6705e0c004acfed13c4b0aabe3043e278a",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T14:39:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 18465143,
        "type": "upload",
        "etag": "caaf0b6268463666eb089364d3c6715a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683297597/avalanche2023spring/rxpoppvgi1e71nqiqygg.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683297597/avalanche2023spring/rxpoppvgi1e71nqiqygg.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683297597/avalanche2023spring/rxpoppvgi1e71nqiqygg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "14706912",
          "dar": "16:9",
          "time_base": "1/600"
        },
        "frame_rate": 24,
        "bit_rate": 14710818,
        "duration": 10.041667,
        "rotation": 0,
        "nb_frames": 241,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:04.268Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-05-07T08:09:51.023Z" }
      }
    ],
    "title": "",
    "description": "Plugging my cinema 3d sketch with animation.",
    "comments": []
  },
  {
    "_id": "FiD8wsNJc93RT2rMo",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T02:28:16.004Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a483b345e04b10e9477a7e5755ffdaab",
        "public_id": "avalanche2023spring/hke2d2otoj3ytufnens1",
        "version": 1676514503,
        "version_id": "41e94f89841cb3836aa56ece58f972e5",
        "signature": "6944bca335603bcba528dfda27641be1bc823b36",
        "width": 1182,
        "height": 1168,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T02:28:23Z",
        "tags": [],
        "bytes": 4346352,
        "type": "upload",
        "etag": "78d3907e9e0ef135db84d8f81fbd85c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676514503/avalanche2023spring/hke2d2otoj3ytufnens1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676514503/avalanche2023spring/hke2d2otoj3ytufnens1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7e51857621fe19e13a3ccd60e09e026a",
        "public_id": "avalanche2023spring/mmclq3unt9npkpnlskpx",
        "version": 1676514506,
        "version_id": "2b2492fd0c7024a3816a4a0b8bc9c20e",
        "signature": "2c31b81b6d470827481e9d4d3fa0474cf042a0bf",
        "width": 1186,
        "height": 1176,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T02:28:26Z",
        "tags": [],
        "bytes": 2026868,
        "type": "upload",
        "etag": "57d86cc559ff12f76604f8c1fee14d8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676514506/avalanche2023spring/mmclq3unt9npkpnlskpx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676514506/avalanche2023spring/mmclq3unt9npkpnlskpx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:48.569Z" }
      }
    ],
    "title": "",
    "description": "WEEK 3 (2/4): I wanted to try to make one of those Tv screens with the random colors flashing but I ended up with this and it looked like an optical illusion. It looks a bit cool idk. It was lagging a lot so I couldn't even mess with it more",
    "comments": [],
    "inspiration_name": "Gene Kogans Site",
    "inspiration_url": "https://genekogan.com/code/p5js-perlin-noise/"
  },
  {
    "_id": "FoXiGcxNn8pqZNyM6",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-28T23:59:17.858Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "da0e133cea56bcc9e77a4b6651dba096",
        "public_id": "avalanche2023spring/fqlbpyqad0jsaiqqunnf",
        "version": 1680048287,
        "version_id": "761b0e5e41f7a7ae2dc15c0f9a4c9130",
        "signature": "08293335650fe5d6603add72072cf0ca67e788f2",
        "width": 3000,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-29T00:04:47Z",
        "tags": [],
        "bytes": 4904064,
        "type": "upload",
        "etag": "22b37d905277a0dce21218d4090709c4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680048287/avalanche2023spring/fqlbpyqad0jsaiqqunnf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680048287/avalanche2023spring/fqlbpyqad0jsaiqqunnf.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "56d37672da178d1c9bb7f1dca75a9e59",
        "public_id": "avalanche2023spring/tulmjdejwbpbj8s0orww",
        "version": 1680048291,
        "version_id": "5c5ec0b8fa8339c09835d43961acee1a",
        "signature": "5ef4be1f9e14107f0218e09e0f143bbe34f0616a",
        "width": 3000,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-29T00:04:51Z",
        "tags": [],
        "bytes": 5325649,
        "type": "upload",
        "etag": "e4b02fe0af819a17c984b21552bcd2a3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680048291/avalanche2023spring/tulmjdejwbpbj8s0orww.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680048291/avalanche2023spring/tulmjdejwbpbj8s0orww.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "eaf08cc87f4211a0a3b8e658ee215b68",
        "public_id": "avalanche2023spring/tpakdbsr8f146cgxijll",
        "version": 1680048292,
        "version_id": "866f5b0a925309936d2f89c4ecf09b2b",
        "signature": "5f46251722df0206aa181392bfecca0d1035ac01",
        "width": 4000,
        "height": 3000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-29T00:04:52Z",
        "tags": [],
        "bytes": 3435132,
        "type": "upload",
        "etag": "bf35a6f8a36928ca9557ccc2f30c56af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680048292/avalanche2023spring/tpakdbsr8f146cgxijll.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680048292/avalanche2023spring/tpakdbsr8f146cgxijll.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T20:34:50.75Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T18:05:13.918Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:31:03.284Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-08T21:57:11.259Z" }
      }
    ],
    "title": "",
    "description": "Finally finished my laser cut. I had this lamp I made last semester for xFab, but it was too bright to light. So I used paper.js to make this lampshade for it",
    "comments": []
  },
  {
    "_id": "FqkL2XB8n5t98ZJMJ",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": { "$date": "2023-02-03T15:00:30.572Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8882ef8d8e3458c20149b7ced7c14439",
        "public_id": "avalanche2023spring/ihmecporzlaqedpkrpmw",
        "version": 1675436474,
        "version_id": "b89e42eba348286561b78310fcddf6bd",
        "signature": "2404394648ee1046c49e8dac3d81b34ba6b37bad",
        "width": 1668,
        "height": 2388,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T15:01:14Z",
        "tags": [],
        "bytes": 2039788,
        "type": "upload",
        "etag": "f66cf2b2ea8e1b5e988acf59b2edfa65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675436474/avalanche2023spring/ihmecporzlaqedpkrpmw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675436474/avalanche2023spring/ihmecporzlaqedpkrpmw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T16:24:23.7Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T18:02:28.034Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Self Portrait from Chris Instructions.",
    "comments": []
  },
  {
    "_id": "Ft338QGZY3J5vfybE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-11T05:31:31.493Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4bdaab67a4e82b697630693c85d22bb3",
        "public_id": "avalanche2023spring/ha6q2rnetpyrxe6yxfl6",
        "version": 1681191139,
        "version_id": "a562f3f2391dc184f57351ef32ac7f89",
        "signature": "b0ce124c61341203937ab0df02376911188c8389",
        "width": 1518,
        "height": 1518,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-11T05:32:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 14976529,
        "type": "upload",
        "etag": "eba4a5c2e3f743df1575133ff9eed9af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681191139/avalanche2023spring/ha6q2rnetpyrxe6yxfl6.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681191139/avalanche2023spring/ha6q2rnetpyrxe6yxfl6.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681191139/avalanche2023spring/ha6q2rnetpyrxe6yxfl6.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126226",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "4165145",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4760750,
        "duration": 25.166667,
        "rotation": 0,
        "nb_frames": 1569,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-11T17:03:04.66Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T05:59:04.47Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T15:50:14.157Z" }
      }
    ],
    "title": "",
    "description": "**Javascript template literals inside HTML Image tags** in order to add Random DALL.E-produced images for the personas. Next, try positioning & laying out HTML content better using template literals? Procedurally generated layouts?",
    "code": "const personaDetail =\n    \"She's a 32-year-old working mother of two children, ages 4 and 6, who frequently travels for work. She's often stressed about keeping her kids occupied during flights, and finds it difficult to come up with new activities and games to keep them engaged. They're a 35-year-old couple with one child, age 8, who are planning a family vacation to Europe. They've never flown with their child before, and are worried about how he'll handle the long flight and potential boredom. He's a 40-year-old single father of three children, ages 3, 5, and 7, who often travels for leisure with his kids. He's always looking for new and creative ways to keep his children entertained during flights, and values apps that offer educational and interactive content. She's a 27-year-old new mother traveling with her first child, age 10 months. She's never flown with a baby before, and is nervous about how she'll manage to keep him entertained and comfortable during the flight. He's a 29-year-old father of two children, ages 3 and 5, who often travels with his family for leisure. He's always looking for apps that offer age-appropriate content and activities that can keep his kids entertained during flights. They're a 42-year-old couple with two children, ages 7 and 10, who are planning a long-haul flight to visit family overseas. They're looking for an app that offers a mix of educational and entertaining content that can keep their kids engaged for the duration of the flight. She's a 33-year-old mother of two children, ages 2 and 4, who often travels with her family for leisure. She's looking for an app that offers content specifically tailored to young children, such as interactive stories and games that can be played offline. They're a 38-year-old couple with three children, ages 4, 7, and 9, who are planning a family vacation to Hawaii. They're looking for an app that offers a variety of content and activities that can be customized to each child's age and interests, such as puzzles, coloring pages, and interactive quizzes.\";\n\nconst names = [\"Aaran\", \"Aaren\", \"Aarez\", \"Aarman\", \"Aaron\", \"Aaron-James\", \"Aarron\", \"Aaryan\", \"Aaryn\", \"Aayan\", \"Aazaan\", \"Abaan\", \"Abbas\", \"Abdallah\", \"Abdalroof\", \"Abdihakim\", \"Abdirahman\", \"Abdisalam\", \"Abdul\", \"Abdul-Aziz\", \"Abdulbasir\", \"Abdulkadir\", \"Abdulkarem\", \"Abdulkhader\", \"Abdullah\", \"Abdul-Majeed\", \"Abdulmalik\", \"Abdul-Rehman\", \"Abdur\", \"Abdurraheem\", \"Abdur-Rahman\", \"Abdur-Rehmaan\", \"Abel\", \"Abhinav\", \"Abhisumant\", \"Abid\", \"Abir\", \"Abraham\", \"Abu\", \"Abubakar\", \"Ace\", \"Adain\", \"Adam\", \"Adam-James\", \"Addison\", \"Addisson\", \"Adegbola\", \"Adegbolahan\", \"Aden\", \"Adenn\", \"Adie\", \"Adil\", \"Aditya\", \"Adnan\", \"Adrian\", \"Adrien\", \"Aedan\", \"Aedin\", \"Aedyn\", \"Aeron\", \"Afonso\", \"Ahmad\", \"Ahmed\", \"Ahmed-Aziz\", \"Ahoua\", \"Ahtasham\", \"Aiadan\", \"Aidan\", \"Aiden\", \"Aiden-Jack\", \"Aiden-Vee\", \"Aidian\", \"Aidy\", \"Ailin\", \"Aiman\", \"Ainsley\", \"Ainslie\", \"Airen\", \"Airidas\", \"Airlie\", \"AJ\", \"Ajay\", \"A-Jay\", \"Ajayraj\", \"Akan\", \"Akram\", \"Al\", \"Ala\", \"Alan\", \"Alanas\", \"Alasdair\", \"Alastair\", \"Alber\", \"Albert\", \"Albie\", \"Aldred\", \"Alec\", \"Aled\", \"Aleem\", \"Aleksandar\", \"Aleksander\", \"Aleksandr\", \"Aleksandrs\", \"Alekzander\", \"Alessandro\", \"Alessio\", \"Alex\", \"Alexander\", \"Alexei\", \"Alexx\", \"Alexzander\", \"Alf\", \"Alfee\", \"Alfie\", \"Alfred\", \"Alfy\", \"Alhaji\", \"Al-Hassan\", \"Ali\", \"Aliekber\", \"Alieu\", \"Alihaider\", \"Alisdair\", \"Alishan\", \"Alistair\", \"Alistar\", \"Alister\", \"Aliyaan\", \"Allan\", \"Allan-Laiton\", \"Allen\", \"Allesandro\", \"Allister\", \"Ally\", \"Alphonse\", \"Altyiab\", \"Alum\", \"Alvern\", \"Alvin\", \"Alyas\", \"Amaan\", \"Aman\", \"Amani\", \"Ambanimoh\", \"Ameer\", \"Amgad\", \"Ami\", \"Amin\", \"Amir\", \"Ammaar\", \"Ammar\", \"Ammer\", \"Amolpreet\", \"Amos\", \"Amrinder\", \"Amrit\", \"Amro\", \"Anay\", \"Andrea\", \"Andreas\", \"Andrei\", \"Andrejs\", \"Andrew\", \"Andy\", \"Anees\", \"Anesu\", \"Angel\", \"Angelo\", \"Angus\", \"Anir\", \"Anis\", \"Anish\", \"Anmolpreet\", \"Annan\", \"Anndra\", \"Anselm\", \"Anthony\", \"Anthony-John\", \"Antoine\", \"Anton\", \"Antoni\", \"Antonio\", \"Antony\", \"Antonyo\", \"Anubhav\", \"Aodhan\", \"Aon\", \"Aonghus\", \"Apisai\", \"Arafat\", \"Aran\", \"Arandeep\", \"Arann\", \"Aray\", \"Arayan\", \"Archibald\", \"Archie\", \"Arda\", \"Ardal\", \"Ardeshir\", \"Areeb\", \"Areez\", \"Aref\", \"Arfin\", \"Argyle\", \"Argyll\", \"Ari\", \"Aria\", \"Arian\", \"Arihant\", \"Aristomenis\", \"Aristotelis\", \"Arjuna\", \"Arlo\", \"Armaan\", \"Arman\", \"Armen\", \"Arnab\", \"Arnav\", \"Arnold\", \"Aron\", \"Aronas\", \"Arran\", \"Arrham\", \"Arron\", \"Arryn\", \"Arsalan\", \"Artem\", \"Arthur\", \"Artur\", \"Arturo\", \"Arun\", \"Arunas\", \"Arved\", \"Arya\", \"Aryan\", \"Aryankhan\", \"Aryian\", \"Aryn\", \"Asa\", \"Asfhan\", \"Ash\", \"Ashlee-jay\", \"Ashley\", \"Ashton\", \"Ashton-Lloyd\", \"Ashtyn\", \"Ashwin\", \"Asif\", \"Asim\", \"Aslam\", \"Asrar\", \"Ata\", \"Atal\", \"Atapattu\", \"Ateeq\", \"Athol\", \"Athon\", \"Athos-Carlos\", \"Atli\", \"Atom\", \"Attila\", \"Aulay\", \"Aun\", \"Austen\", \"Austin\", \"Avani\", \"Averon\", \"Avi\", \"Avinash\", \"Avraham\", \"Awais\", \"Awwal\", \"Axel\", \"Ayaan\", \"Ayan\", \"Aydan\", \"Ayden\", \"Aydin\", \"Aydon\", \"Ayman\", \"Ayomide\", \"Ayren\", \"Ayrton\", \"Aytug\", \"Ayub\", \"Ayyub\", \"Azaan\", \"Azedine\", \"Azeem\", \"Azim\", \"Aziz\", \"Azlan\", \"Azzam\", \"Azzedine\", \"Babatunmise\", \"Babur\", \"Bader\", \"Badr\", \"Badsha\", \"Bailee\", \"Bailey\", \"Bailie\", \"Bailley\", \"Baillie\", \"Baley\", \"Balian\", \"Banan\", \"Barath\", \"Barkley\", \"Barney\", \"Baron\", \"Barrie\", \"Barry\", \"Bartlomiej\", \"Bartosz\", \"Basher\", \"Basile\", \"Baxter\", \"Baye\", \"Bayley\", \"Beau\", \"Beinn\", \"Bekim\", \"Believe\", \"Ben\", \"Bendeguz\", \"Benedict\", \"Benjamin\", \"Benjamyn\", \"Benji\", \"Benn\", \"Bennett\", \"Benny\", \"Benoit\", \"Bentley\", \"Berkay\", \"Bernard\", \"Bertie\", \"Bevin\", \"Bezalel\", \"Bhaaldeen\", \"Bharath\", \"Bilal\", \"Bill\", \"Billy\", \"Binod\", \"Bjorn\", \"Blaike\", \"Blaine\", \"Blair\", \"Blaire\", \"Blake\", \"Blazej\", \"Blazey\", \"Blessing\", \"Blue\", \"Blyth\", \"Bo\", \"Boab\", \"Bob\", \"Bobby\", \"Bobby-Lee\", \"Bodhan\", \"Boedyn\", \"Bogdan\", \"Bohbi\", \"Bony\", \"Bowen\", \"Bowie\", \"Boyd\", \"Bracken\", \"Brad\", \"Bradan\", \"Braden\", \"Bradley\", \"Bradlie\", \"Bradly\", \"Brady\", \"Bradyn\", \"Braeden\", \"Braiden\", \"Brajan\", \"Brandan\", \"Branden\", \"Brandon\", \"Brandonlee\", \"Brandon-Lee\", \"Brandyn\", \"Brannan\", \"Brayden\", \"Braydon\", \"Braydyn\", \"Breandan\", \"Brehme\", \"Brendan\", \"Brendon\", \"Brendyn\", \"Breogan\", \"Bret\", \"Brett\", \"Briaddon\", \"Brian\", \"Brodi\", \"Brodie\", \"Brody\", \"Brogan\", \"Broghan\", \"Brooke\", \"Brooklin\", \"Brooklyn\", \"Bruce\", \"Bruin\", \"Bruno\", \"Brunon\", \"Bryan\", \"Bryce\", \"Bryden\", \"Brydon\", \"Brydon-Craig\", \"Bryn\", \"Brynmor\", \"Bryson\", \"Buddy\", \"Bully\", \"Burak\", \"Burhan\", \"Butali\", \"Butchi\", \"Byron\", \"Cabhan\", \"Cadan\", \"Cade\", \"Caden\", \"Cadon\", \"Cadyn\", \"Caedan\", \"Caedyn\", \"Cael\", \"Caelan\", \"Caelen\", \"Caethan\", \"Cahl\", \"Cahlum\", \"Cai\", \"Caidan\", \"Caiden\", \"Caiden-Paul\", \"Caidyn\", \"Caie\", \"Cailaen\", \"Cailean\", \"Caileb-John\", \"Cailin\", \"Cain\", \"Caine\", \"Cairn\", \"Cal\", \"Calan\", \"Calder\", \"Cale\", \"Calean\", \"Caleb\", \"Calen\", \"Caley\", \"Calib\", \"Calin\", \"Callahan\", \"Callan\", \"Callan-Adam\", \"Calley\", \"Callie\", \"Callin\", \"Callum\", \"Callun\", \"Callyn\", \"Calum\", \"Calum-James\", \"Calvin\", \"Cambell\", \"Camerin\", \"Cameron\", \"Campbel\", \"Campbell\", \"Camron\", \"Caolain\", \"Caolan\", \"Carl\", \"Carlo\", \"Carlos\", \"Carrich\", \"Carrick\", \"Carson\", \"Carter\", \"Carwyn\", \"Casey\", \"Casper\", \"Cassy\", \"Cathal\", \"Cator\", \"Cavan\", \"Cayden\", \"Cayden-Robert\", \"Cayden-Tiamo\", \"Ceejay\", \"Ceilan\", \"Ceiran\", \"Ceirin\", \"Ceiron\", \"Cejay\", \"Celik\", \"Cephas\", \"Cesar\", \"Cesare\", \"Chad\", \"Chaitanya\", \"Chang-Ha\", \"Charles\", \"Charley\", \"Charlie\", \"Charly\", \"Chase\", \"Che\", \"Chester\", \"Chevy\", \"Chi\", \"Chibudom\", \"Chidera\", \"Chimsom\", \"Chin\", \"Chintu\", \"Chiqal\", \"Chiron\", \"Chris\", \"Chris-Daniel\", \"Chrismedi\", \"Christian\", \"Christie\", \"Christoph\", \"Christopher\", \"Christopher-Lee\", \"Christy\", \"Chu\", \"Chukwuemeka\", \"Cian\", \"Ciann\", \"Ciar\", \"Ciaran\", \"Ciarian\", \"Cieran\", \"Cillian\", \"Cillin\", \"Cinar\", \"CJ\", \"C-Jay\", \"Clark\", \"Clarke\", \"Clayton\", \"Clement\", \"Clifford\", \"Clyde\", \"Cobain\", \"Coban\", \"Coben\", \"Cobi\", \"Cobie\", \"Coby\", \"Codey\", \"Codi\", \"Codie\", \"Cody\", \"Cody-Lee\", \"Coel\", \"Cohan\", \"Cohen\", \"Colby\", \"Cole\", \"Colin\", \"Coll\", \"Colm\", \"Colt\", \"Colton\", \"Colum\", \"Colvin\", \"Comghan\", \"Conal\", \"Conall\", \"Conan\", \"Conar\", \"Conghaile\", \"Conlan\", \"Conley\", \"Conli\", \"Conlin\", \"Conlly\", \"Conlon\", \"Conlyn\", \"Connal\", \"Connall\", \"Connan\", \"Connar\", \"Connel\", \"Connell\", \"Conner\", \"Connolly\", \"Connor\", \"Connor-David\", \"Conor\", \"Conrad\", \"Cooper\", \"Copeland\", \"Coray\", \"Corben\", \"Corbin\", \"Corey\", \"Corey-James\", \"Corey-Jay\", \"Cori\", \"Corie\", \"Corin\", \"Cormac\", \"Cormack\", \"Cormak\", \"Corran\", \"Corrie\", \"Cory\", \"Cosmo\", \"Coupar\", \"Craig\", \"Craig-James\", \"Crawford\", \"Creag\", \"Crispin\", \"Cristian\", \"Crombie\", \"Cruiz\", \"Cruz\", \"Cuillin\", \"Cullen\", \"Cullin\", \"Curtis\", \"Cyrus\", \"Daanyaal\", \"Daegan\", \"Daegyu\", \"Dafydd\", \"Dagon\", \"Dailey\", \"Daimhin\", \"Daithi\", \"Dakota\", \"Daksh\", \"Dale\", \"Dalong\", \"Dalton\", \"Damian\", \"Damien\", \"Damon\", \"Dan\", \"Danar\", \"Dane\", \"Danial\", \"Daniel\", \"Daniele\", \"Daniel-James\", \"Daniels\", \"Daniil\", \"Danish\", \"Daniyal\", \"Danniel\", \"Danny\", \"Dante\", \"Danyal\", \"Danyil\", \"Danys\", \"Daood\", \"Dara\", \"Darach\", \"Daragh\", \"Darcy\", \"D'arcy\", \"Dareh\", \"Daren\", \"Darien\", \"Darius\", \"Darl\", \"Darn\", \"Darrach\", \"Darragh\", \"Darrel\", \"Darrell\", \"Darren\", \"Darrie\", \"Darrius\", \"Darroch\", \"Darryl\", \"Darryn\", \"Darwyn\", \"Daryl\", \"Daryn\", \"Daud\", \"Daumantas\", \"Davi\", \"David\", \"David-Jay\", \"David-Lee\", \"Davie\", \"Davis\", \"Davy\", \"Dawid\", \"Dawson\", \"Dawud\", \"Dayem\", \"Daymian\", \"Deacon\", \"Deagan\", \"Dean\", \"Deano\", \"Decklan\", \"Declain\", \"Declan\", \"Declyan\", \"Declyn\", \"Dedeniseoluwa\", \"Deecan\", \"Deegan\", \"Deelan\", \"Deklain-Jaimes\", \"Del\", \"Demetrius\", \"Denis\", \"Deniss\", \"Dennan\", \"Dennin\", \"Dennis\", \"Denny\", \"Dennys\", \"Denon\", \"Denton\", \"Denver\", \"Denzel\", \"Deon\", \"Derek\", \"Derick\", \"Derin\", \"Dermot\", \"Derren\", \"Derrie\", \"Derrin\", \"Derron\", \"Derry\", \"Derryn\", \"Deryn\", \"Deshawn\", \"Desmond\", \"Dev\", \"Devan\", \"Devin\", \"Devlin\", \"Devlyn\", \"Devon\", \"Devrin\", \"Devyn\", \"Dex\", \"Dexter\", \"Dhani\", \"Dharam\", \"Dhavid\", \"Dhyia\", \"Diarmaid\", \"Diarmid\", \"Diarmuid\", \"Didier\", \"Diego\", \"Diesel\", \"Diesil\", \"Digby\", \"Dilan\", \"Dilano\", \"Dillan\", \"Dillon\", \"Dilraj\", \"Dimitri\", \"Dinaras\", \"Dion\", \"Dissanayake\", \"Dmitri\", \"Doire\", \"Dolan\", \"Domanic\", \"Domenico\", \"Domhnall\", \"Dominic\", \"Dominick\", \"Dominik\", \"Donald\", \"Donnacha\", \"Donnie\", \"Dorian\", \"Dougal\", \"Douglas\", \"Dougray\", \"Drakeo\", \"Dre\", \"Dregan\", \"Drew\", \"Dugald\", \"Duncan\", \"Duriel\", \"Dustin\", \"Dylan\", \"Dylan-Jack\", \"Dylan-James\", \"Dylan-John\", \"Dylan-Patrick\", \"Dylin\", \"Dyllan\", \"Dyllan-James\", \"Dyllon\", \"Eadie\", \"Eagann\", \"Eamon\", \"Eamonn\", \"Eason\", \"Eassan\", \"Easton\", \"Ebow\", \"Ed\", \"Eddie\", \"Eden\", \"Ediomi\", \"Edison\", \"Eduardo\", \"Eduards\", \"Edward\", \"Edwin\", \"Edwyn\", \"Eesa\", \"Efan\", \"Efe\", \"Ege\", \"Ehsan\", \"Ehsen\", \"Eiddon\", \"Eidhan\", \"Eihli\", \"Eimantas\", \"Eisa\", \"Eli\", \"Elias\", \"Elijah\", \"Eliot\", \"Elisau\", \"Eljay\", \"Eljon\", \"Elliot\", \"Elliott\", \"Ellis\", \"Ellisandro\", \"Elshan\", \"Elvin\", \"Elyan\", \"Emanuel\", \"Emerson\", \"Emil\", \"Emile\", \"Emir\", \"Emlyn\", \"Emmanuel\", \"Emmet\", \"Eng\", \"Eniola\", \"Enis\", \"Ennis\", \"Enrico\", \"Enrique\", \"Enzo\", \"Eoghain\", \"Eoghan\", \"Eoin\", \"Eonan\", \"Erdehan\", \"Eren\", \"Erencem\", \"Eric\", \"Ericlee\", \"Erik\", \"Eriz\", \"Ernie-Jacks\", \"Eroni\", \"Eryk\", \"Eshan\", \"Essa\", \"Esteban\", \"Ethan\", \"Etienne\", \"Etinosa\", \"Euan\", \"Eugene\", \"Evan\", \"Evann\", \"Ewan\", \"Ewen\", \"Ewing\", \"Exodi\", \"Ezekiel\", \"Ezra\", \"Fabian\", \"Fahad\", \"Faheem\", \"Faisal\", \"Faizaan\", \"Famara\", \"Fares\", \"Farhaan\", \"Farhan\", \"Farren\", \"Farzad\", \"Fauzaan\", \"Favour\", \"Fawaz\", \"Fawkes\", \"Faysal\", \"Fearghus\", \"Feden\", \"Felix\", \"Fergal\", \"Fergie\", \"Fergus\", \"Ferre\", \"Fezaan\", \"Fiachra\", \"Fikret\", \"Filip\", \"Filippo\", \"Finan\", \"Findlay\", \"Findlay-James\", \"Findlie\", \"Finlay\", \"Finley\", \"Finn\", \"Finnan\", \"Finnean\", \"Finnen\", \"Finnlay\", \"Finnley\", \"Fintan\", \"Fionn\", \"Firaaz\", \"Fletcher\", \"Flint\", \"Florin\", \"Flyn\", \"Flynn\", \"Fodeba\", \"Folarinwa\", \"Forbes\", \"Forgan\", \"Forrest\", \"Fox\", \"Francesco\", \"Francis\", \"Francisco\", \"Franciszek\", \"Franco\", \"Frank\", \"Frankie\", \"Franklin\", \"Franko\", \"Fraser\", \"Frazer\", \"Fred\", \"Freddie\", \"Frederick\", \"Fruin\", \"Fyfe\", \"Fyn\", \"Fynlay\", \"Fynn\", \"Gabriel\", \"Gallagher\", \"Gareth\", \"Garren\", \"Garrett\", \"Garry\", \"Gary\", \"Gavin\", \"Gavin-Lee\", \"Gene\", \"Geoff\", \"Geoffrey\", \"Geomer\", \"Geordan\", \"Geordie\", \"George\", \"Georgia\", \"Georgy\", \"Gerard\", \"Ghyll\", \"Giacomo\", \"Gian\", \"Giancarlo\", \"Gianluca\", \"Gianmarco\", \"Gideon\", \"Gil\", \"Gio\", \"Girijan\", \"Girius\", \"Gjan\", \"Glascott\", \"Glen\", \"Glenn\", \"Gordon\", \"Grady\", \"Graeme\", \"Graham\", \"Grahame\", \"Grant\", \"Grayson\", \"Greg\", \"Gregor\", \"Gregory\", \"Greig\", \"Griffin\", \"Griffyn\", \"Grzegorz\", \"Guang\", \"Guerin\", \"Guillaume\", \"Gurardass\", \"Gurdeep\", \"Gursees\", \"Gurthar\", \"Gurveer\", \"Gurwinder\", \"Gus\", \"Gustav\", \"Guthrie\", \"Guy\", \"Gytis\", \"Habeeb\", \"Hadji\", \"Hadyn\", \"Hagun\", \"Haiden\", \"Haider\", \"Hamad\", \"Hamid\", \"Hamish\", \"Hamza\", \"Hamzah\", \"Han\", \"Hansen\", \"Hao\", \"Hareem\", \"Hari\", \"Harikrishna\", \"Haris\", \"Harish\", \"Harjeevan\", \"Harjyot\", \"Harlee\", \"Harleigh\", \"Harley\", \"Harman\", \"Harnek\", \"Harold\", \"Haroon\", \"Harper\", \"Harri\", \"Harrington\", \"Harris\", \"Harrison\", \"Harry\", \"Harvey\", \"Harvie\", \"Harvinder\", \"Hasan\", \"Haseeb\", \"Hashem\", \"Hashim\", \"Hassan\", \"Hassanali\", \"Hately\", \"Havila\", \"Hayden\", \"Haydn\", \"Haydon\", \"Haydyn\", \"Hcen\", \"Hector\", \"Heddle\", \"Heidar\", \"Heini\", \"Hendri\", \"Henri\", \"Henry\", \"Herbert\", \"Heyden\", \"Hiro\", \"Hirvaansh\", \"Hishaam\", \"Hogan\", \"Honey\", \"Hong\", \"Hope\", \"Hopkin\", \"Hosea\", \"Howard\", \"Howie\", \"Hristomir\", \"Hubert\", \"Hugh\", \"Hugo\", \"Humza\", \"Hunter\", \"Husnain\", \"Hussain\", \"Hussan\", \"Hussnain\", \"Hussnan\", \"Hyden\", \"I\", \"Iagan\", \"Iain\", \"Ian\", \"Ibraheem\", \"Ibrahim\", \"Idahosa\", \"Idrees\", \"Idris\", \"Iestyn\", \"Ieuan\", \"Igor\", \"Ihtisham\", \"Ijay\", \"Ikechukwu\", \"Ikemsinachukwu\", \"Ilyaas\", \"Ilyas\", \"Iman\", \"Immanuel\", \"Inan\", \"Indy\", \"Ines\", \"Innes\", \"Ioannis\", \"Ireayomide\", \"Ireoluwa\", \"Irvin\", \"Irvine\", \"Isa\", \"Isaa\", \"Isaac\", \"Isaiah\", \"Isak\", \"Isher\", \"Ishwar\", \"Isimeli\", \"Isira\", \"Ismaeel\", \"Ismail\", \"Israel\", \"Issiaka\", \"Ivan\", \"Ivar\", \"Izaak\", \"J\", \"Jaay\", \"Jac\", \"Jace\", \"Jack\", \"Jacki\", \"Jackie\", \"Jack-James\", \"Jackson\", \"Jacky\", \"Jacob\", \"Jacques\", \"Jad\", \"Jaden\", \"Jadon\", \"Jadyn\", \"Jae\", \"Jagat\", \"Jago\", \"Jaheim\", \"Jahid\", \"Jahy\", \"Jai\", \"Jaida\", \"Jaiden\", \"Jaidyn\", \"Jaii\", \"Jaime\", \"Jai-Rajaram\", \"Jaise\", \"Jak\", \"Jake\", \"Jakey\", \"Jakob\", \"Jaksyn\", \"Jakub\", \"Jamaal\", \"Jamal\", \"Jameel\", \"Jameil\", \"James\", \"James-Paul\", \"Jamey\", \"Jamie\", \"Jan\", \"Jaosha\", \"Jardine\", \"Jared\", \"Jarell\", \"Jarl\", \"Jarno\", \"Jarred\", \"Jarvi\", \"Jasey-Jay\", \"Jasim\", \"Jaskaran\", \"Jason\", \"Jasper\", \"Jaxon\", \"Jaxson\", \"Jay\", \"Jaydan\", \"Jayden\", \"Jayden-James\", \"Jayden-Lee\", \"Jayden-Paul\", \"Jayden-Thomas\", \"Jaydn\", \"Jaydon\", \"Jaydyn\", \"Jayhan\", \"Jay-Jay\", \"Jayke\", \"Jaymie\", \"Jayse\", \"Jayson\", \"Jaz\", \"Jazeb\", \"Jazib\", \"Jazz\", \"Jean\", \"Jean-Lewis\", \"Jean-Pierre\", \"Jebadiah\", \"Jed\", \"Jedd\", \"Jedidiah\", \"Jeemie\", \"Jeevan\", \"Jeffrey\", \"Jensen\", \"Jenson\", \"Jensyn\", \"Jeremy\", \"Jerome\", \"Jeronimo\", \"Jerrick\", \"Jerry\", \"Jesse\", \"Jesuseun\", \"Jeswin\", \"Jevan\", \"Jeyun\", \"Jez\", \"Jia\", \"Jian\", \"Jiao\", \"Jimmy\", \"Jincheng\", \"JJ\", \"Joaquin\", \"Joash\", \"Jock\", \"Jody\", \"Joe\", \"Joeddy\", \"Joel\", \"Joey\", \"Joey-Jack\", \"Johann\", \"Johannes\", \"Johansson\", \"John\", \"Johnathan\", \"Johndean\", \"Johnjay\", \"John-Michael\", \"Johnnie\", \"Johnny\", \"Johnpaul\", \"John-Paul\", \"John-Scott\", \"Johnson\", \"Jole\", \"Jomuel\", \"Jon\", \"Jonah\", \"Jonatan\", \"Jonathan\", \"Jonathon\", \"Jonny\", \"Jonothan\", \"Jon-Paul\", \"Jonson\", \"Joojo\", \"Jordan\", \"Jordi\", \"Jordon\", \"Jordy\", \"Jordyn\", \"Jorge\", \"Joris\", \"Jorryn\", \"Josan\", \"Josef\", \"Joseph\", \"Josese\", \"Josh\", \"Joshiah\", \"Joshua\", \"Josiah\", \"Joss\", \"Jostelle\", \"Joynul\", \"Juan\", \"Jubin\", \"Judah\", \"Jude\", \"Jules\", \"Julian\", \"Julien\", \"Jun\", \"Junior\", \"Jura\", \"Justan\", \"Justin\", \"Justinas\", \"Kaan\", \"Kabeer\", \"Kabir\", \"Kacey\", \"Kacper\", \"Kade\", \"Kaden\", \"Kadin\", \"Kadyn\", \"Kaeden\", \"Kael\", \"Kaelan\", \"Kaelin\", \"Kaelum\", \"Kai\", \"Kaid\", \"Kaidan\", \"Kaiden\", \"Kaidinn\", \"Kaidyn\", \"Kaileb\", \"Kailin\", \"Kain\", \"Kaine\", \"Kainin\", \"Kainui\", \"Kairn\", \"Kaison\", \"Kaiwen\", \"Kajally\", \"Kajetan\", \"Kalani\", \"Kale\", \"Kaleb\", \"Kaleem\", \"Kal-el\", \"Kalen\", \"Kalin\", \"Kallan\", \"Kallin\", \"Kalum\", \"Kalvin\", \"Kalvyn\", \"Kameron\", \"Kames\", \"Kamil\", \"Kamran\", \"Kamron\", \"Kane\", \"Karam\", \"Karamvir\", \"Karandeep\", \"Kareem\", \"Karim\", \"Karimas\", \"Karl\", \"Karol\", \"Karson\", \"Karsyn\", \"Karthikeya\", \"Kasey\", \"Kash\", \"Kashif\", \"Kasim\", \"Kasper\", \"Kasra\", \"Kavin\", \"Kayam\", \"Kaydan\", \"Kayden\", \"Kaydin\", \"Kaydn\", \"Kaydyn\", \"Kaydyne\", \"Kayleb\", \"Kaylem\", \"Kaylum\", \"Kayne\", \"Kaywan\", \"Kealan\", \"Kealon\", \"Kean\", \"Keane\", \"Kearney\", \"Keatin\", \"Keaton\", \"Keavan\", \"Keayn\", \"Kedrick\", \"Keegan\", \"Keelan\", \"Keelin\", \"Keeman\", \"Keenan\", \"Keenan-Lee\", \"Keeton\", \"Kehinde\", \"Keigan\", \"Keilan\", \"Keir\", \"Keiran\", \"Keiren\", \"Keiron\", \"Keiryn\", \"Keison\", \"Keith\", \"Keivlin\", \"Kelam\", \"Kelan\", \"Kellan\", \"Kellen\", \"Kelso\", \"Kelum\", \"Kelvan\", \"Kelvin\", \"Ken\", \"Kenan\", \"Kendall\", \"Kendyn\", \"Kenlin\", \"Kenneth\", \"Kensey\", \"Kenton\", \"Kenyon\", \"Kenzeigh\", \"Kenzi\", \"Kenzie\", \"Kenzo\", \"Kenzy\", \"Keo\", \"Ker\", \"Kern\", \"Kerr\", \"Kevan\", \"Kevin\", \"Kevyn\", \"Kez\", \"Khai\", \"Khalan\", \"Khaleel\", \"Khaya\", \"Khevien\", \"Khizar\", \"Khizer\", \"Kia\", \"Kian\", \"Kian-James\", \"Kiaran\", \"Kiarash\", \"Kie\", \"Kiefer\", \"Kiegan\", \"Kienan\", \"Kier\", \"Kieran\", \"Kieran-Scott\", \"Kieren\", \"Kierin\", \"Kiern\", \"Kieron\", \"Kieryn\", \"Kile\", \"Killian\", \"Kimi\", \"Kingston\", \"Kinneil\", \"Kinnon\", \"Kinsey\", \"Kiran\", \"Kirk\", \"Kirwin\", \"Kit\", \"Kiya\", \"Kiyonari\", \"Kjae\", \"Klein\", \"Klevis\", \"Kobe\", \"Kobi\", \"Koby\", \"Koddi\", \"Koden\", \"Kodi\", \"Kodie\", \"Kody\", \"Kofi\", \"Kogan\", \"Kohen\", \"Kole\", \"Konan\", \"Konar\", \"Konnor\", \"Konrad\", \"Koray\", \"Korben\", \"Korbyn\", \"Korey\", \"Kori\", \"Korrin\", \"Kory\", \"Koushik\", \"Kris\", \"Krish\", \"Krishan\", \"Kriss\", \"Kristian\", \"Kristin\", \"Kristofer\", \"Kristoffer\", \"Kristopher\", \"Kruz\", \"Krzysiek\", \"Krzysztof\", \"Ksawery\", \"Ksawier\", \"Kuba\", \"Kurt\", \"Kurtis\", \"Kurtis-Jae\", \"Kyaan\", \"Kyan\", \"Kyde\", \"Kyden\", \"Kye\", \"Kyel\", \"Kyhran\", \"Kyie\", \"Kylan\", \"Kylar\", \"Kyle\", \"Kyle-Derek\", \"Kylian\", \"Kym\", \"Kynan\", \"Kyral\", \"Kyran\", \"Kyren\", \"Kyrillos\", \"Kyro\", \"Kyron\", \"Kyrran\", \"Lachlainn\", \"Lachlan\", \"Lachlann\", \"Lael\", \"Lagan\", \"Laird\", \"Laison\", \"Lakshya\", \"Lance\", \"Lancelot\", \"Landon\", \"Lang\", \"Lasse\", \"Latif\", \"Lauchlan\", \"Lauchlin\", \"Laughlan\", \"Lauren\", \"Laurence\", \"Laurie\", \"Lawlyn\", \"Lawrence\", \"Lawrie\", \"Lawson\", \"Layne\", \"Layton\", \"Lee\", \"Leigh\", \"Leigham\", \"Leighton\", \"Leilan\", \"Leiten\", \"Leithen\", \"Leland\", \"Lenin\", \"Lennan\", \"Lennen\", \"Lennex\", \"Lennon\", \"Lennox\", \"Lenny\", \"Leno\", \"Lenon\", \"Lenyn\", \"Leo\", \"Leon\", \"Leonard\", \"Leonardas\", \"Leonardo\", \"Lepeng\", \"Leroy\", \"Leven\", \"Levi\", \"Levon\", \"Levy\", \"Lewie\", \"Lewin\", \"Lewis\", \"Lex\", \"Leydon\", \"Leyland\", \"Leylann\", \"Leyton\", \"Liall\", \"Liam\", \"Liam-Stephen\", \"Limo\", \"Lincoln\", \"Lincoln-John\", \"Lincon\", \"Linden\", \"Linton\", \"Lionel\", \"Lisandro\", \"Litrell\", \"Liyonela-Elam\", \"LLeyton\", \"Lliam\", \"Lloyd\", \"Lloyde\", \"Loche\", \"Lochlan\", \"Lochlann\", \"Lochlan-Oliver\", \"Lock\", \"Lockey\", \"Logan\", \"Logann\", \"Logan-Rhys\", \"Loghan\", \"Lokesh\", \"Loki\", \"Lomond\", \"Lorcan\", \"Lorenz\", \"Lorenzo\", \"Lorne\", \"Loudon\", \"Loui\", \"Louie\", \"Louis\", \"Loukas\", \"Lovell\", \"Luc\", \"Luca\", \"Lucais\", \"Lucas\", \"Lucca\", \"Lucian\", \"Luciano\", \"Lucien\", \"Lucus\", \"Luic\", \"Luis\", \"Luk\", \"Luka\", \"Lukas\", \"Lukasz\", \"Luke\", \"Lukmaan\", \"Luqman\", \"Lyall\", \"Lyle\", \"Lyndsay\", \"Lysander\", \"Maanav\", \"Maaz\", \"Mac\", \"Macallum\", \"Macaulay\", \"Macauley\", \"Macaully\", \"Machlan\", \"Maciej\", \"Mack\", \"Mackenzie\", \"Mackenzy\", \"Mackie\", \"Macsen\", \"Macy\", \"Madaki\", \"Maddison\", \"Maddox\", \"Madison\", \"Madison-Jake\", \"Madox\", \"Mael\", \"Magnus\", \"Mahan\", \"Mahdi\", \"Mahmoud\", \"Maias\", \"Maison\", \"Maisum\", \"Maitlind\", \"Majid\", \"Makensie\", \"Makenzie\", \"Makin\", \"Maksim\", \"Maksymilian\", \"Malachai\", \"Malachi\", \"Malachy\", \"Malakai\", \"Malakhy\", \"Malcolm\", \"Malik\", \"Malikye\", \"Malo\", \"Ma'moon\", \"Manas\", \"Maneet\", \"Manmohan\", \"Manolo\", \"Manson\", \"Mantej\", \"Manuel\", \"Manus\", \"Marc\", \"Marc-Anthony\", \"Marcel\", \"Marcello\", \"Marcin\", \"Marco\", \"Marcos\", \"Marcous\", \"Marcquis\", \"Marcus\", \"Mario\", \"Marios\", \"Marius\", \"Mark\", \"Marko\", \"Markus\", \"Marley\", \"Marlin\", \"Marlon\", \"Maros\", \"Marshall\", \"Martin\", \"Marty\", \"Martyn\", \"Marvellous\", \"Marvin\", \"Marwan\", \"Maryk\", \"Marzuq\", \"Mashhood\", \"Mason\", \"Mason-Jay\", \"Masood\", \"Masson\", \"Matas\", \"Matej\", \"Mateusz\", \"Mathew\", \"Mathias\", \"Mathu\", \"Mathuyan\", \"Mati\", \"Matt\", \"Matteo\", \"Matthew\", \"Matthew-William\", \"Matthias\", \"Max\", \"Maxim\", \"Maximilian\", \"Maximillian\", \"Maximus\", \"Maxwell\", \"Maxx\", \"Mayeul\", \"Mayson\", \"Mazin\", \"Mcbride\", \"McCaulley\", \"McKade\", \"McKauley\", \"McKay\", \"McKenzie\", \"McLay\", \"Meftah\", \"Mehmet\", \"Mehraz\", \"Meko\", \"Melville\", \"Meshach\", \"Meyzhward\", \"Micah\", \"Michael\", \"Michael-Alexander\", \"Michael-James\", \"Michal\", \"Michat\", \"Micheal\", \"Michee\", \"Mickey\", \"Miguel\", \"Mika\", \"Mikael\", \"Mikee\", \"Mikey\", \"Mikhail\", \"Mikolaj\", \"Miles\", \"Millar\", \"Miller\", \"Milo\", \"Milos\", \"Milosz\", \"Mir\", \"Mirza\", \"Mitch\", \"Mitchel\", \"Mitchell\", \"Moad\", \"Moayd\", \"Mobeen\", \"Modoulamin\", \"Modu\", \"Mohamad\", \"Mohamed\", \"Mohammad\", \"Mohammad-Bilal\", \"Mohammed\", \"Mohanad\", \"Mohd\", \"Momin\", \"Momooreoluwa\", \"Montague\", \"Montgomery\", \"Monty\", \"Moore\", \"Moosa\", \"Moray\", \"Morgan\", \"Morgyn\", \"Morris\", \"Morton\", \"Moshy\", \"Motade\", \"Moyes\", \"Msughter\", \"Mueez\", \"Muhamadjavad\", \"Muhammad\", \"Muhammed\", \"Muhsin\", \"Muir\", \"Munachi\", \"Muneeb\", \"Mungo\", \"Munir\", \"Munmair\", \"Munro\", \"Murdo\", \"Murray\", \"Murrough\", \"Murry\", \"Musa\", \"Musse\", \"Mustafa\", \"Mustapha\", \"Muzammil\", \"Muzzammil\", \"Mykie\", \"Myles\", \"Mylo\", \"Nabeel\", \"Nadeem\", \"Nader\", \"Nagib\", \"Naif\", \"Nairn\", \"Narvic\", \"Nash\", \"Nasser\", \"Nassir\", \"Natan\", \"Nate\", \"Nathan\", \"Nathanael\", \"Nathanial\", \"Nathaniel\", \"Nathan-Rae\", \"Nawfal\", \"Nayan\", \"Neco\", \"Neil\", \"Nelson\", \"Neo\", \"Neshawn\", \"Nevan\", \"Nevin\", \"Ngonidzashe\", \"Nial\", \"Niall\", \"Nicholas\", \"Nick\", \"Nickhill\", \"Nicki\", \"Nickson\", \"Nicky\", \"Nico\", \"Nicodemus\", \"Nicol\", \"Nicolae\", \"Nicolas\", \"Nidhish\", \"Nihaal\", \"Nihal\", \"Nikash\", \"Nikhil\", \"Niki\", \"Nikita\", \"Nikodem\", \"Nikolai\", \"Nikos\", \"Nilav\", \"Niraj\", \"Niro\", \"Niven\", \"Noah\", \"Noel\", \"Nolan\", \"Noor\", \"Norman\", \"Norrie\", \"Nuada\", \"Nyah\", \"Oakley\", \"Oban\", \"Obieluem\", \"Obosa\", \"Odhran\", \"Odin\", \"Odynn\", \"Ogheneochuko\", \"Ogheneruno\", \"Ohran\", \"Oilibhear\", \"Oisin\", \"Ojima-Ojo\", \"Okeoghene\", \"Olaf\", \"Ola-Oluwa\", \"Olaoluwapolorimi\", \"Ole\", \"Olie\", \"Oliver\", \"Olivier\", \"Oliwier\", \"Ollie\", \"Olurotimi\", \"Oluwadamilare\", \"Oluwadamiloju\", \"Oluwafemi\", \"Oluwafikunayomi\", \"Oluwalayomi\", \"Oluwatobiloba\", \"Oluwatoni\", \"Omar\", \"Omri\", \"Oran\", \"Orin\", \"Orlando\", \"Orley\", \"Orran\", \"Orrick\", \"Orrin\", \"Orson\", \"Oryn\", \"Oscar\", \"Osesenagha\", \"Oskar\", \"Ossian\", \"Oswald\", \"Otto\", \"Owain\", \"Owais\", \"Owen\", \"Owyn\", \"Oz\", \"Ozzy\", \"Pablo\", \"Pacey\", \"Padraig\", \"Paolo\", \"Pardeepraj\", \"Parkash\", \"Parker\", \"Pascoe\", \"Pasquale\", \"Patrick\", \"Patrick-John\", \"Patrikas\", \"Patryk\", \"Paul\", \"Pavit\", \"Pawel\", \"Pawlo\", \"Pearce\", \"Pearse\", \"Pearsen\", \"Pedram\", \"Pedro\", \"Peirce\", \"Peiyan\", \"Pele\", \"Peni\", \"Peregrine\", \"Peter\", \"Phani\", \"Philip\", \"Philippos\", \"Phinehas\", \"Phoenix\", \"Phoevos\", \"Pierce\", \"Pierre-Antoine\", \"Pieter\", \"Pietro\", \"Piotr\", \"Porter\", \"Prabhjoit\", \"Prabodhan\", \"Praise\", \"Pranav\", \"Pravin\", \"Precious\", \"Prentice\", \"Presley\", \"Preston\", \"Preston-Jay\", \"Prinay\", \"Prince\", \"Prithvi\", \"Promise\", \"Puneetpaul\", \"Pushkar\", \"Qasim\", \"Qirui\", \"Quinlan\", \"Quinn\", \"Radmiras\", \"Raees\", \"Raegan\", \"Rafael\", \"Rafal\", \"Rafferty\", \"Rafi\", \"Raheem\", \"Rahil\", \"Rahim\", \"Rahman\", \"Raith\", \"Raithin\", \"Raja\", \"Rajab-Ali\", \"Rajan\", \"Ralfs\", \"Ralph\", \"Ramanas\", \"Ramit\", \"Ramone\", \"Ramsay\", \"Ramsey\", \"Rana\", \"Ranolph\", \"Raphael\", \"Rasmus\", \"Rasul\", \"Raul\", \"Raunaq\", \"Ravin\", \"Ray\", \"Rayaan\", \"Rayan\", \"Rayane\", \"Rayden\", \"Rayhan\", \"Raymond\", \"Rayne\", \"Rayyan\", \"Raza\", \"Reace\", \"Reagan\", \"Reean\", \"Reece\", \"Reed\", \"Reegan\", \"Rees\", \"Reese\", \"Reeve\", \"Regan\", \"Regean\", \"Reggie\", \"Rehaan\", \"Rehan\", \"Reice\", \"Reid\", \"Reigan\", \"Reilly\", \"Reily\", \"Reis\", \"Reiss\", \"Remigiusz\", \"Remo\", \"Remy\", \"Ren\", \"Renars\", \"Reng\", \"Rennie\", \"Reno\", \"Reo\", \"Reuben\", \"Rexford\", \"Reynold\", \"Rhein\", \"Rheo\", \"Rhett\", \"Rheyden\", \"Rhian\", \"Rhoan\", \"Rholmark\", \"Rhoridh\", \"Rhuairidh\", \"Rhuan\", \"Rhuaridh\", \"Rhudi\", \"Rhy\", \"Rhyan\", \"Rhyley\", \"Rhyon\", \"Rhys\", \"Rhys-Bernard\", \"Rhyse\", \"Riach\", \"Rian\", \"Ricards\", \"Riccardo\", \"Ricco\", \"Rice\", \"Richard\", \"Richey\", \"Richie\", \"Ricky\", \"Rico\", \"Ridley\", \"Ridwan\", \"Rihab\", \"Rihan\", \"Rihards\", \"Rihonn\", \"Rikki\", \"Riley\", \"Rio\", \"Rioden\", \"Rishi\", \"Ritchie\", \"Rivan\", \"Riyadh\", \"Riyaj\", \"Roan\", \"Roark\", \"Roary\", \"Rob\", \"Robbi\", \"Robbie\", \"Robbie-lee\", \"Robby\", \"Robert\", \"Robert-Gordon\", \"Robertjohn\", \"Robi\", \"Robin\", \"Rocco\", \"Roddy\", \"Roderick\", \"Rodrigo\", \"Roen\", \"Rogan\", \"Roger\", \"Rohaan\", \"Rohan\", \"Rohin\", \"Rohit\", \"Rokas\", \"Roman\", \"Ronald\", \"Ronan\", \"Ronan-Benedict\", \"Ronin\", \"Ronnie\", \"Rooke\", \"Roray\", \"Rori\", \"Rorie\", \"Rory\", \"Roshan\", \"Ross\", \"Ross-Andrew\", \"Rossi\", \"Rowan\", \"Rowen\", \"Roy\", \"Ruadhan\", \"Ruaidhri\", \"Ruairi\", \"Ruairidh\", \"Ruan\", \"Ruaraidh\", \"Ruari\", \"Ruaridh\", \"Ruben\", \"Rubhan\", \"Rubin\", \"Rubyn\", \"Rudi\", \"Rudy\", \"Rufus\", \"Rui\", \"Ruo\", \"Rupert\", \"Ruslan\", \"Russel\", \"Russell\", \"Ryaan\", \"Ryan\", \"Ryan-Lee\", \"Ryden\", \"Ryder\", \"Ryese\", \"Ryhs\", \"Rylan\", \"Rylay\", \"Rylee\", \"Ryleigh\", \"Ryley\", \"Rylie\", \"Ryo\", \"Ryszard\", \"Saad\", \"Sabeen\", \"Sachkirat\", \"Saffi\", \"Saghun\", \"Sahaib\", \"Sahbian\", \"Sahil\", \"Saif\", \"Saifaddine\", \"Saim\", \"Sajid\", \"Sajjad\", \"Salahudin\", \"Salman\", \"Salter\", \"Salvador\", \"Sam\", \"Saman\", \"Samar\", \"Samarjit\", \"Samatar\", \"Sambrid\", \"Sameer\", \"Sami\", \"Samir\", \"Sami-Ullah\", \"Samual\", \"Samuel\", \"Samuela\", \"Samy\", \"Sanaullah\", \"Sandro\", \"Sandy\", \"Sanfur\", \"Sanjay\", \"Santiago\", \"Santino\", \"Satveer\", \"Saul\", \"Saunders\", \"Savin\", \"Sayad\", \"Sayeed\", \"Sayf\", \"Scot\", \"Scott\", \"Scott-Alexander\", \"Seaan\", \"Seamas\", \"Seamus\", \"Sean\", \"Seane\", \"Sean-James\", \"Sean-Paul\", \"Sean-Ray\", \"Seb\", \"Sebastian\", \"Sebastien\", \"Selasi\", \"Seonaidh\", \"Sephiroth\", \"Sergei\", \"Sergio\", \"Seth\", \"Sethu\", \"Seumas\", \"Shaarvin\", \"Shadow\", \"Shae\", \"Shahmir\", \"Shai\", \"Shane\", \"Shannon\", \"Sharland\", \"Sharoz\", \"Shaughn\", \"Shaun\", \"Shaunpaul\", \"Shaun-Paul\", \"Shaun-Thomas\", \"Shaurya\", \"Shaw\", \"Shawn\", \"Shawnpaul\", \"Shay\", \"Shayaan\", \"Shayan\", \"Shaye\", \"Shayne\", \"Shazil\", \"Shea\", \"Sheafan\", \"Sheigh\", \"Shenuk\", \"Sher\", \"Shergo\", \"Sheriff\", \"Sherwyn\", \"Shiloh\", \"Shiraz\", \"Shreeram\", \"Shreyas\", \"Shyam\", \"Siddhant\", \"Siddharth\", \"Sidharth\", \"Sidney\", \"Siergiej\", \"Silas\", \"Simon\", \"Sinai\", \"Skye\", \"Sofian\", \"Sohaib\", \"Sohail\", \"Soham\", \"Sohan\", \"Sol\", \"Solomon\", \"Sonneey\", \"Sonni\", \"Sonny\", \"Sorley\", \"Soul\", \"Spencer\", \"Spondon\", \"Stanislaw\", \"Stanley\", \"Stefan\", \"Stefano\", \"Stefin\", \"Stephen\", \"Stephenjunior\", \"Steve\", \"Steven\", \"Steven-lee\", \"Stevie\", \"Stewart\", \"Stewarty\", \"Strachan\", \"Struan\", \"Stuart\", \"Su\", \"Subhaan\", \"Sudais\", \"Suheyb\", \"Suilven\", \"Sukhi\", \"Sukhpal\", \"Sukhvir\", \"Sulayman\", \"Sullivan\", \"Sultan\", \"Sung\", \"Sunny\", \"Suraj\", \"Surien\", \"Sweyn\", \"Syed\", \"Sylvain\", \"Symon\", \"Szymon\", \"Tadd\", \"Taddy\", \"Tadhg\", \"Taegan\", \"Taegen\", \"Tai\", \"Tait\", \"Taiwo\", \"Talha\", \"Taliesin\", \"Talon\", \"Talorcan\", \"Tamar\", \"Tamiem\", \"Tammam\", \"Tanay\", \"Tane\", \"Tanner\", \"Tanvir\", \"Tanzeel\", \"Taonga\", \"Tarik\", \"Tariq-Jay\", \"Tate\", \"Taylan\", \"Taylar\", \"Tayler\", \"Taylor\", \"Taylor-Jay\", \"Taylor-Lee\", \"Tayo\", \"Tayyab\", \"Tayye\", \"Tayyib\", \"Teagan\", \"Tee\", \"Teejay\", \"Tee-jay\", \"Tegan\", \"Teighen\", \"Teiyib\", \"Te-Jay\", \"Temba\", \"Teo\", \"Teodor\", \"Teos\", \"Terry\", \"Teydren\", \"Theo\", \"Theodore\", \"Thiago\", \"Thierry\", \"Thom\", \"Thomas\", \"Thomas-Jay\", \"Thomson\", \"Thorben\", \"Thorfinn\", \"Thrinei\", \"Thumbiko\", \"Tiago\", \"Tian\", \"Tiarnan\", \"Tibet\", \"Tieran\", \"Tiernan\", \"Timothy\", \"Timucin\", \"Tiree\", \"Tisloh\", \"Titi\", \"Titus\", \"Tiylar\", \"TJ\", \"Tjay\", \"T-Jay\", \"Tobey\", \"Tobi\", \"Tobias\", \"Tobie\", \"Toby\", \"Todd\", \"Tokinaga\", \"Toluwalase\", \"Tom\", \"Tomas\", \"Tomasz\", \"Tommi-Lee\", \"Tommy\", \"Tomson\", \"Tony\", \"Torin\", \"Torquil\", \"Torran\", \"Torrin\", \"Torsten\", \"Trafford\", \"Trai\", \"Travis\", \"Tre\", \"Trent\", \"Trey\", \"Tristain\", \"Tristan\", \"Troy\", \"Tubagus\", \"Turki\", \"Turner\", \"Ty\", \"Ty-Alexander\", \"Tye\", \"Tyelor\", \"Tylar\", \"Tyler\", \"Tyler-James\", \"Tyler-Jay\", \"Tyllor\", \"Tylor\", \"Tymom\", \"Tymon\", \"Tymoteusz\", \"Tyra\", \"Tyree\", \"Tyrnan\", \"Tyrone\", \"Tyson\", \"Ubaid\", \"Ubayd\", \"Uchenna\", \"Uilleam\", \"Umair\", \"Umar\", \"Umer\", \"Umut\", \"Urban\", \"Uri\", \"Usman\", \"Uzair\", \"Uzayr\", \"Valen\", \"Valentin\", \"Valentino\", \"Valery\", \"Valo\", \"Vasyl\", \"Vedantsinh\", \"Veeran\", \"Victor\", \"Victory\", \"Vinay\", \"Vince\", \"Vincent\", \"Vincenzo\", \"Vinh\", \"Vinnie\", \"Vithujan\", \"Vladimir\", \"Vladislav\", \"Vrishin\", \"Vuyolwethu\", \"Wabuya\", \"Wai\", \"Walid\", \"Wallace\", \"Walter\", \"Waqaas\", \"Warkhas\", \"Warren\", \"Warrick\", \"Wasif\", \"Wayde\", \"Wayne\", \"Wei\", \"Wen\", \"Wesley\", \"Wesley-Scott\", \"Wiktor\", \"Wilkie\", \"Will\", \"William\", \"William-John\", \"Willum\", \"Wilson\", \"Windsor\", \"Wojciech\", \"Woyenbrakemi\", \"Wyatt\", \"Wylie\", \"Wynn\", \"Xabier\", \"Xander\", \"Xavier\", \"Xiao\", \"Xida\", \"Xin\", \"Xue\", \"Yadgor\", \"Yago\", \"Yahya\", \"Yakup\", \"Yang\", \"Yanick\", \"Yann\", \"Yannick\", \"Yaseen\", \"Yasin\", \"Yasir\", \"Yassin\", \"Yoji\", \"Yong\", \"Yoolgeun\", \"Yorgos\", \"Youcef\", \"Yousif\", \"Youssef\", \"Yu\", \"Yuanyu\", \"Yuri\", \"Yusef\", \"Yusuf\", \"Yves\", \"Zaaine\", \"Zaak\", \"Zac\", \"Zach\", \"Zachariah\", \"Zacharias\", \"Zacharie\", \"Zacharius\", \"Zachariya\", \"Zachary\", \"Zachary-Marc\", \"Zachery\", \"Zack\", \"Zackary\", \"Zaid\", \"Zain\", \"Zaine\", \"Zaineddine\", \"Zainedin\", \"Zak\", \"Zakaria\", \"Zakariya\", \"Zakary\", \"Zaki\", \"Zakir\", \"Zakk\", \"Zamaar\", \"Zander\", \"Zane\", \"Zarran\", \"Zayd\", \"Zayn\", \"Zayne\", \"Ze\", \"Zechariah\", \"Zeek\", \"Zeeshan\", \"Zeid\", \"Zein\", \"Zen\", \"Zendel\", \"Zenith\", \"Zennon\", \"Zeph\", \"Zerah\", \"Zhen\", \"Zhi\", \"Zhong\", \"Zhuo\", \"Zi\", \"Zidane\", \"Zijie\", \"Zinedine\", \"Zion\", \"Zishan\", \"Ziya\", \"Ziyaan\", \"Zohaib\", \"Zohair\", \"Zoubaeir\", \"Zubair\", \"Zubayr\", \"Zuriel\"];\n\nconst markovModel = generateModel(personaDetail);\nconst output_text1 = generateText(markovModel, \"They're\");\nconst output_text2 = generateText(markovModel, \"She's\");\nconst output_text3 = generateText(markovModel, \"He's\");\nconst name1 = pick(names);\nconst name2 = pick(names);\nconst name3 = pick(names);\nconst name4 = pick(names);\nconst img1 = document.createElement(\"IMG\");\nconst img2 = document.createElement(\"IMG\");\nconst img3 = document.createElement(\"IMG\");\n\nimg1.setAttribute(\"src\", \"profiles/p1.png\");\nimg2.setAttribute(\"src\", \"profiles/p5.png\");\nimg3.setAttribute(\"src\", \"profiles/p10.png\");\nimg1.setAttribute(\"width\", \"100\");\nimg1.setAttribute(\"height\", \"100\");\nimg2.setAttribute(\"width\", \"100\");\nimg2.setAttribute(\"height\", \"100\");\nimg3.setAttribute(\"width\", \"100\");\nimg3.setAttribute(\"height\", \"100\");\n\n\nconst x1 = Math.floor(Math.random()*18) + 1;\nconst x2 = Math.floor(Math.random()*18) + 1;\nwhile (x1==x2) {\n    x2 = Math.floor(Math.random()*18) + 1;\n}\nconst x3 = Math.floor(Math.random()*18) + 1;\nconst x4 = Math.floor(Math.random()*18) + 1;\nconst imgStr1 = `<div> <img src='profiles/p${x1}.png' width='100' height='100'> <img src='profiles/p${x2}.png' width='100' height='100'> </div>`;\nconst imgStr2 = `<div> <img src='profiles/p${x3}.png' width='100' height='100'> </div>`;\nconst imgStr3 = `<div> <img src='profiles/p${x4}.png' width='100' height='100'> </div>`;\ndocument.body.innerHTML \n    = \"<h2> Persona Generation </h2>\" \n        + \"<p id = 'subtitle'> Generating user personas for an app that helps parents keep children busy on flights. </p> &#10;&#13;\" \n        + \"<p class = 'persona'> <b> PERSONA 01 </b> </p>\" \n        + \"<div>\" + imgStr1 + \"</div>\"\n        + \"<b>\" + name1 + \" and \" + name2 + \": </b>\"\n        + output_text1 \n        + \"<p class = 'persona'> <b> PERSONA 02 </b> </p>\" \n        + \"<div>\" + imgStr2 + \"</div>\"\n        + \"<b>\" + name3 + \": </b>\"\n        + output_text2\n        + \"<p class = 'persona'> <b> PERSONA 03 </b> </p>\" \n        + \"<div>\" + imgStr3 + \"</div>\"\n        + \"<b>\" + name4 + \": </b>\"\n        + output_text3 + \"&#10; &#13; \";\n\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "comments": []
  },
  {
    "_id": "FxT3DmDwYRkusr5u6",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T23:01:08.7Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "909d70a580523f9833fb087bfaef80a1",
        "public_id": "avalanche2023spring/jed9xzdz1zm4g2pbeoxn",
        "version": 1676502075,
        "version_id": "1ef4fb6e2174c6501d97bc0212c02352",
        "signature": "10841b3ec68a21435c9ab97d4f56e52593312bdf",
        "width": 1192,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T23:01:15Z",
        "tags": [],
        "bytes": 113690,
        "type": "upload",
        "etag": "e7fe1f2c748ca149a52290962faa6748",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676502075/avalanche2023spring/jed9xzdz1zm4g2pbeoxn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676502075/avalanche2023spring/jed9xzdz1zm4g2pbeoxn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "40bd0620d69deb382220e4e538e6c685",
        "public_id": "avalanche2023spring/o7uqsu87nedvuevqalns",
        "version": 1676515031,
        "version_id": "da22cca580b1f0fc12330c22bec06b84",
        "signature": "2bdb17d8e10fae6e14074f5e01f1f9405538832b",
        "width": 1192,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T02:37:11Z",
        "tags": [],
        "bytes": 1788336,
        "type": "upload",
        "etag": "2820fbc7d85d93827d31eb26661f1ff8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676515031/avalanche2023spring/o7uqsu87nedvuevqalns.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676515031/avalanche2023spring/o7uqsu87nedvuevqalns.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7bd9137350587e6669129883fb1f7b09",
        "public_id": "avalanche2023spring/xcus1ei1ewteyrfrjhsx",
        "version": 1676515033,
        "version_id": "a777bb0b961690788ab095d6572e7a7d",
        "signature": "b1df7736a338a141f3a1b1c40fc5300b2d32aca1",
        "width": 986,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T02:37:13Z",
        "tags": [],
        "bytes": 223414,
        "type": "upload",
        "etag": "50e490b3a6149ad17031198a5775e28b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676515033/avalanche2023spring/xcus1ei1ewteyrfrjhsx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676515033/avalanche2023spring/xcus1ei1ewteyrfrjhsx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "F64LC2E5aSDKftSj9",
        "category": "funny",
        "created_at": { "$date": "2023-02-15T23:02:32.524Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T03:35:49.909Z" }
      }
    ],
    "title": "",
    "description": "WEEK 3 (1/4) : I Honestly just wanted to show off my super jank pasta mix. this is actually part of my pair challenge as I sent it to John because I thought it was funny.",
    "comments": []
  },
  {
    "_id": "FzGNicqsPo7xbaori",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": { "$date": "2023-02-03T00:56:41.321Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "93fd9211edea46919869c6241da041fa",
        "public_id": "avalanche2023spring/pcrfgsjiwbcc3mvqd3ct",
        "version": 1675385860,
        "version_id": "d18ca9eef0353bba85833da842a66969",
        "signature": "06a12323d8a822ed618d1941dac4064965f287f3",
        "width": 1700,
        "height": 1700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T00:57:40Z",
        "tags": [],
        "bytes": 1173121,
        "type": "upload",
        "etag": "f41e91d3e0e5e3a3c14fedd358a30d77",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675385860/avalanche2023spring/pcrfgsjiwbcc3mvqd3ct.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675385860/avalanche2023spring/pcrfgsjiwbcc3mvqd3ct.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T01:12:33.155Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T15:20:41.535Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T17:22:45.433Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Playing with random distributions, an attempt at recreating a Vera Molnar piece in p5",
    "comments": []
  },
  {
    "_id": "G2ZptN37zYo42S6pt",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T02:23:57.905Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "60c98fb054a2573381989431fb61c95e",
        "public_id": "avalanche2023spring/r8jbmgbkr8q4zavptebx",
        "version": 1681439062,
        "version_id": "82c229dfe476c2b01cd4dd8f7eb650f6",
        "signature": "4bbab8da3e665c47d7270fef0fc4de73c6d88a52",
        "width": 1946,
        "height": 1834,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T02:24:22Z",
        "tags": [],
        "bytes": 1087511,
        "type": "upload",
        "etag": "b6d0cbcfdac572860afea770b6332d10",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681439062/avalanche2023spring/r8jbmgbkr8q4zavptebx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681439062/avalanche2023spring/r8jbmgbkr8q4zavptebx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "17a1e1dae9a52faa508ecba759e1bf33",
        "public_id": "avalanche2023spring/yyghupakc2jmx5z8kl9s",
        "version": 1681439071,
        "version_id": "2c76f2e132ade611c9202d74d403f4a5",
        "signature": "129aa7820fd940b6ac979e653f2b230ab69d133a",
        "width": 1936,
        "height": 1850,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T02:24:31Z",
        "tags": [],
        "bytes": 1449541,
        "type": "upload",
        "etag": "f32188811421024695b12ffe59ee8c30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681439071/avalanche2023spring/yyghupakc2jmx5z8kl9s.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681439071/avalanche2023spring/yyghupakc2jmx5z8kl9s.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T02:41:08.142Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T03:11:49.286Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T03:53:14.054Z" }
      }
    ],
    "title": "",
    "description": "It was a dark and stormy night feat. Taylor Swift. I used context-free grammar and a Markov chain with her song lyrics",
    "comments": [
      {
        "commenter_id": "aFZYuqXuhejWXg6yv",
        "comment": "this is so creative!",
        "created_at": { "$date": "2023-04-14T02:41:05.913Z" }
      }
    ]
  },
  {
    "_id": "G2iefRC5KfJQb2gZd",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": { "$date": "2023-02-03T05:00:12.612Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "96c6fee21579a59ecd8eaa6d97da5d01",
        "public_id": "avalanche2023spring/fa4hdhzvarmkeou0zex2",
        "version": 1675401017,
        "version_id": "5c4996d663baaa9e91d70a0fd23e5dbb",
        "signature": "6bf45a8a58956d3ec3ad23ae001602c3be6aaa8f",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-03T05:10:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 1053016,
        "type": "upload",
        "etag": "d73fe0bd25dfc157e885f885814e83a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675401017/avalanche2023spring/fa4hdhzvarmkeou0zex2.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675401017/avalanche2023spring/fa4hdhzvarmkeou0zex2.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "620215",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 642180,
        "duration": 13.118,
        "rotation": 0,
        "nb_frames": 798,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Introduction",
    "title": "",
    "description": "i love colors but i can never decide which ones to use so i let random choose for me.",
    "code": "https://cdnjs.cloudfar.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(500, 500);\n  strokeWeight(3);\n  frameRate(3);\n  background(220);\n}\n\nfunction draw() {\n  \n  \n  for(i=0;i<=width; i=i+100){\n    // fill(random(i,255),random(0,i),random(133));\n    fill(random(0,100), random(100,200), random(200,255))\n  rect(i,0,100,50);\n  }\n    for(i=-50;i<=width; i=i+100){\n   fill(random(100,200), random(200,255), random(0,100))\n  rect(i,50,100,50);\n  }\n  \n  for(i=0;i<=width; i=i+100){\n    fill(random(200,255),random(0,100),random(100,200));\n  rect(i,100,100,50);\n  }\n  \n   for(i=-50;i<=width; i=i+100){\n    fill(random(0,55),random(85,270),random(90,250));\n  rect(i,150,100,50);\n  }\n  \n  // -------------------------------------------- //\n  for(i=0;i<=width; i=i+100){\n    // fill(random(i,255),random(0,i),random(133));\n    fill(random(0,100), random(100,200), random(200,255))\n  rect(i,200,100,50);\n  }\n    for(i=-50;i<=width; i=i+100){\n   fill(random(100,200), random(200,255), random(0,100))\n  rect(i,250,100,50);\n  }\n  \n  for(i=0;i<=width; i=i+100){\n    fill(random(200,255),random(0,100),random(100,200));\n  rect(i,300,100,50);\n  }\n  \n   for(i=-50;i<=width; i=i+100){\n    fill(random(0,55),random(85,270),random(90,250));\n  rect(i,350,100,50);\n  }\n  \nfor(i=0;i<=width; i=i+100){\n    fill(random(200,255),random(0,100),random(100,200));\n  rect(i,400,100,50);\n  }\n  \n   for(i=-50;i<=width; i=i+100){\n    fill(random(10,95),random(85,170),random(160,250));\n  rect(i,450,100,50);\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "G2tDtKWMWM3fnPSZD",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T20:56:46.126Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "36c60fcdef698168299f52ac824a0148",
        "public_id": "avalanche2023spring/vnxcxw682drz2olwzeey",
        "version": 1675889812,
        "version_id": "3bb1261869287e9f09d2e16a975e8f03",
        "signature": "84b68e69efd5832792b58c5e44d57f3b6ad20b06",
        "width": 1300,
        "height": 1300,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-08T20:56:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 15331689,
        "type": "upload",
        "etag": "1a34712b87531140ee9b61cd0f7a7ebe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675889812/avalanche2023spring/vnxcxw682drz2olwzeey.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675889812/avalanche2023spring/vnxcxw682drz2olwzeey.mp4",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316745",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "13970129",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 14196008,
        "duration": 8.575233,
        "rotation": 0,
        "nb_frames": 257,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:50:04.512Z" }
      }
    ],
    "title": "",
    "description": "Different version of the last sketch. The number of petals on the flowers are also randomised now.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 10;\nlet eMax = 30;\nlet eMin = 5;\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n  noStroke();\n  frameRate(3);\n  colorMode(HSB)\n}\n\nfunction draw() {\n  background(220);\n\n  for (let i = 2 * num; i < width; i += 4 * num) {\n    for (let j = 2 * num; j < height; j += 4 * num) {\n      \n      let inner;\n      let outer;\n      let d = dist(i, j, mouseX, mouseY);\n      let colBrt = map(d, 0, width, 100, 10);\n      let colHue = map(d, 0, width, 250,350);\n\n      if (d < width / 4) {\n        inner = min(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = min(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      } else if (d < width / 2) {\n        inner =\n          (random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin)) /\n          5;\n        outer =\n          (random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax)) /\n          5;\n      } else {\n        inner = max(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = max(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      }\n\n      push();\n\n      translate(i, j);\n      \n      let petalNum = floor(random(8,25));\n      for (let a = 0; a < petalNum; a++) {\n        rotate(a * (360 / petalNum));\n        fill(colHue, colBrt, 100);\n        beginShape();\n        curveVertex(0, 0);\n        curveVertex(inner, 0);\n        curveVertex(outer + inner, outer - inner);\n        curveVertex(outer + inner, outer + inner);\n        curveVertex(outer - inner, outer + inner);\n        curveVertex(0, inner);\n        curveVertex(0, 0);\n        endShape();\n      }\n      fill(colHue, colBrt, 50);\n      ellipse(0, 0, 2*inner, 2*inner);\n\n      pop();\n      \n    }\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "G6fqqdbScCoP4Anqu",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T06:02:37.131Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "290d1398b1109fcbf4c4f1428860472c",
        "public_id": "avalanche2023spring/lackmxxdyd6pew6iqjx3",
        "version": 1676613799,
        "version_id": "9cc9e5d6a280b0cfb16a99cd131855c3",
        "signature": "75a3284bdb9a1d84cab86767151c25adae94fdce",
        "width": 372,
        "height": 372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T06:03:19Z",
        "tags": [],
        "bytes": 191082,
        "type": "upload",
        "etag": "a984dac023af998508fb7e4d909da5a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676613799/avalanche2023spring/lackmxxdyd6pew6iqjx3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676613799/avalanche2023spring/lackmxxdyd6pew6iqjx3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "03f03c21ac62a0878eca3c0e8dd4c9bc",
        "public_id": "avalanche2023spring/odwncxig3gcdmmznv1qg",
        "version": 1676613802,
        "version_id": "76cc039cd31dcf8260730e61f0248749",
        "signature": "b1313310f13c527801ba3f174a681df9133558f4",
        "width": 358,
        "height": 372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T06:03:22Z",
        "tags": [],
        "bytes": 34713,
        "type": "upload",
        "etag": "27c70086408617564cb1645c29123183",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676613802/avalanche2023spring/odwncxig3gcdmmznv1qg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676613802/avalanche2023spring/odwncxig3gcdmmznv1qg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T15:13:59.41Z" }
      }
    ],
    "title": "",
    "description": "Part 2 of the pair challenge. Used Sahiti's sketch (image 2) as a module for the overlapping circles in the background.",
    "comments": []
  },
  {
    "_id": "G7GtGGPk7QRchad9v",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T03:37:30.658Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "842f438e49bd620ab0862ab047d1bafe",
        "public_id": "avalanche2023spring/u8v9ip5lbtozbabgsc9h",
        "version": 1677814670,
        "version_id": "20d94454873217592ff629fe7ab55382",
        "signature": "3d3e7e7290ca6f06273b82ac7ed5a27de9183861",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-03T03:37:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 3895212,
        "type": "upload",
        "etag": "9917d89730e2b50cd7e5aa6c40c79fa0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677814670/avalanche2023spring/u8v9ip5lbtozbabgsc9h.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677814670/avalanche2023spring/u8v9ip5lbtozbabgsc9h.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677814670/avalanche2023spring/u8v9ip5lbtozbabgsc9h.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192089",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "1174916",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1371432,
        "duration": 22.675011,
        "rotation": 0,
        "nb_frames": 680,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My attempt at challenge 2. I could not fully capture the smooth wave effect but I did spend quite some time on this, so I decided to post it as it is. The frequency slider also has a subtler effect than what I would have liked.",
    "comments": []
  },
  {
    "_id": "G9QwQ37hYWhZGFmDq",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T17:08:53.145Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ed2978d469144cba8fcfcf956e561815",
        "public_id": "avalanche2023spring/eiyqakvklkzhcb4bhiji",
        "version": 1676049014,
        "version_id": "5c9cb2ba4bc8555198304ac80cd8ec48",
        "signature": "c51177fe86ee3ee8d6effe74257304f6e485df31",
        "width": 1390,
        "height": 854,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-10T17:10:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 2291465,
        "type": "upload",
        "etag": "c032942fa895d88aedacc02991bb57ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676049014/avalanche2023spring/eiyqakvklkzhcb4bhiji.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676049014/avalanche2023spring/eiyqakvklkzhcb4bhiji.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "123189",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1226850",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1845475,
        "duration": 9.933333,
        "rotation": 0,
        "nb_frames": 657,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-12T04:58:28.086Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T14:36:04.666Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:07.414Z" }
      }
    ],
    "title": "",
    "description": "**Instantiating Cubes at Random Positions on Unity** New to Unity so taking some time to figure this out. I'm trying to position new prefabs at random positions but not sure if it works yet",
    "code": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.Diagnostics;\n\npublic class PlaceCubes : MonoBehaviour\n{\n    public int period = 1000;\n    public GameObject prefab;\n    float prevMs = 0f;\n\n    Stopwatch sw = new Stopwatch();\n\n   \n    // Start is called before the first frame update\n    void Start()\n    {\n        sw.Start();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        float currentMs = sw.ElapsedMilliseconds;\n        if (currentMs - prevMs > period)\n        {\n            var position = new Vector3(Random.Range(-20.0f, 20.0f), Random.Range(-20.0f, 20.0f), 0);\n            Instantiate(prefab, position, Quaternion.identity);\n            prevMs = currentMs;\n        }\n\n    }\n}",
    "comments": []
  },
  {
    "_id": "GEJu2WfRkuebZrSt7",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T23:01:28.264Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "48a160943d8b19d35163e4a1be8f3e51",
        "public_id": "avalanche2023spring/nhrcuu3irn8nketwacho",
        "version": 1676502096,
        "version_id": "7b514138467b2a4cefda62ef210c7708",
        "signature": "ce74da49e6c40d1654467897ab55bbdf00be0aba",
        "width": 899,
        "height": 594,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-15T23:01:36Z",
        "tags": [],
        "bytes": 546657,
        "type": "upload",
        "etag": "ad63109a966f28f2a02daf6445d211a7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676502096/avalanche2023spring/nhrcuu3irn8nketwacho.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676502096/avalanche2023spring/nhrcuu3irn8nketwacho.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-02-16T00:13:04.114Z" }
      },
      {
        "voter_id": "EZGFdZAsGvyhaQ3Gi",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-16T02:12:33.108Z" }
      }
    ],
    "title": "",
    "description": "Worked with Sora again for the pair challenge this week. You guys probably already saw her pasta mix that she sent me so with WebGL and Photoshop in hand I found an opportunity that I couldn't afford to pass up.\n\nCode for how I made the sauce is provided.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet n;\nlet fc;\n\nfunction setup() {\n  createCanvas(600, 400, WEBGL);\n  //debugMode();\n  //frameRate();\n  noLoop();\n}\n\nfunction draw() {\n  background(50);\n  //orbitControl();\n  camera(0, -400, 400);\n  noStroke();\n  ambientLight(255);\n  //ambientMaterial(255, 0, 0);\n  \n  push();\n  drawPlanes();\n  pop();\n}\n\nfunction drawPlanes() {\n  for(i = 0; i < width; i += 10) {\n    for(x = 10; x < width; x = x + 10) {\n      for(y = 10; y < height; y = y + 10){\n        n = noise(i * y);\n        fc = frameCount / 2;\n    \n        rotateY(fc / 2);\n        \n        ambientMaterial(255, 0, 0);\n        \n        push();\n        translate(x * noise(x), y * noise(y), 0);\n        plane(150 * n);\n        pop();\n        \n        ambientMaterial(200, 50, 50);\n        \n        push();\n        translate(x * noise(x) / 2, y * noise(y) / 2, 0);\n        plane(150 * n);\n        pop();\n      }\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "GFRx4sPQJDQ2jztoh",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-21T20:15:22.64Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cd8ed2fd3a5e06cfcc8a7d4725354acc",
        "public_id": "avalanche2023spring/micldl4iwc2solbxzizf",
        "version": 1677010529,
        "version_id": "14a2b6d4687993920b841761f23b4398",
        "signature": "307c32c569022bb83554a667ef6e5cddda45bef4",
        "width": 656,
        "height": 471,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-21T20:15:29Z",
        "tags": [],
        "bytes": 906993,
        "type": "upload",
        "etag": "b7e48bcbfa50020285c2a187859a6398",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677010529/avalanche2023spring/micldl4iwc2solbxzizf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677010529/avalanche2023spring/micldl4iwc2solbxzizf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b6ef236978251d633275ba5b666da006",
        "public_id": "avalanche2023spring/b8dzkhtdymzlmb6adpiz",
        "version": 1677010537,
        "version_id": "6c3b654afed483e847fe1ff5b1c1901c",
        "signature": "1f32080e2f6d8e6f2c5807282967578d1d9ff8b9",
        "width": 657,
        "height": 471,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-21T20:15:37Z",
        "tags": [],
        "bytes": 870350,
        "type": "upload",
        "etag": "6a0a78439f592554e0788339f5066338",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677010537/avalanche2023spring/b8dzkhtdymzlmb6adpiz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677010537/avalanche2023spring/b8dzkhtdymzlmb6adpiz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "889ffb73853b3a437fcbaa5581b31f19",
        "public_id": "avalanche2023spring/t2zfcgomtybozvgzg5bx",
        "version": 1677010546,
        "version_id": "63a211dcac2681fad4a4089d9a1cb356",
        "signature": "16d3dadaff84310ff16090f3835fd7111f275961",
        "width": 657,
        "height": 470,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-21T20:15:46Z",
        "tags": [],
        "bytes": 875202,
        "type": "upload",
        "etag": "eb1a081c7bbbfe382e985c4a897b8abe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677010546/avalanche2023spring/t2zfcgomtybozvgzg5bx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677010546/avalanche2023spring/t2zfcgomtybozvgzg5bx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T23:41:20.958Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T02:03:38.645Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T03:29:30.89Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T10:26:32.904Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T17:18:31.653Z" }
      }
    ],
    "title": "",
    "description": "I want to try different kind of image collages and distortion for this chapter. Here is my spiral and image trial. (Pair challenge for Shristi)",
    "code": "//Image processing\n//parametric modelling and design\n\nlet img;\n\nlet tileSize = 50;\n\nfunction preload() {\n  img = loadImage(\"autumn.jpg\");\n}\n\nfunction setup() {\n  createCanvas(700, 500);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(220);\n  imageMode(CENTER);\n  image(img, width/2, height/2, width, height);\n\n  // raster vs vector\n  //Use pixels to create pattern\n  //aaray of pixels\n  //rgba data\n  //so every pixel is the 4th element in the list!!!!!\n // loadPixels();\n\n  // let px = get(0,0);\n  // console.log(px, \"Sahiti\");\n\n  //Get one color\n\n  // console.log(px[0], \"Sahiti2\");\n\n  // for (let x = 0; x < 4; x++) {\n  //   px = get(x, 0);\n  //   console.log(px, \"Sahiti3\");\n\n    //randomly change pixel color\n\n    let radius = 5;\n    let angle = 0; //change as rotate?\n\n    while (radius < width / 2 - 50) {\n      let portionX = int(random(0, img.width - tileSize));\n      let portionY = int(random(0, img.height - tileSize));\n      let portion = img.get(portionX, portionY, tileSize, tileSize);\n      //I want to console log \"portion\" to know if I am getting the tiles on the image.\n      \n      push();\n      translate(width/2, height/2);\n      rotate(angle);\n      translate(radius, 0);\n   rotate(random(0, 90));\n      image(portion, 0, 0);\n      pop();\n      \n      angle = angle+ degrees(0.1);\n      radius = radius + 0.2;\n    }\n  \n   noLoop();\n\n  }\n\n//}",
    "comments": [],
    "inspiration_url": "https://editor.p5js.org/xinxin/sketches/VemrYWnSS"
  },
  {
    "_id": "GH62qb5ZgSeNewEzH",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-20T22:16:27.973Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a3f0eb656039c4e1b8cb766dddf53340",
        "public_id": "avalanche2023spring/e6uldei6bko61vlilmqp",
        "version": 1679350593,
        "version_id": "a13ddf00974fbf925e0da30b5294b352",
        "signature": "b0b3bddb8073d4ad83b7b81490d29f2838b0dd64",
        "width": 2447,
        "height": 1981,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-20T22:16:33Z",
        "tags": [],
        "bytes": 1197463,
        "type": "upload",
        "etag": "edb24cab5bf73b587811b618aeb88321",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679350593/avalanche2023spring/e6uldei6bko61vlilmqp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679350593/avalanche2023spring/e6uldei6bko61vlilmqp.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "975a38e9fe10d9ce155896b02541cc04",
        "public_id": "avalanche2023spring/y1jctm5hpilnztdbrww4",
        "version": 1679350756,
        "version_id": "afda009840f8a19a5dbb6b6b40bcc45d",
        "signature": "6b0b0244e55475edf79a485b9a0be55bca1f34a2",
        "width": 721,
        "height": 588,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-20T22:19:16Z",
        "tags": [],
        "bytes": 29784,
        "type": "upload",
        "etag": "3ddd645ea9d9d88c8fb1e4e79bce18ea",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679350756/avalanche2023spring/y1jctm5hpilnztdbrww4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679350756/avalanche2023spring/y1jctm5hpilnztdbrww4.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T03:00:26.561Z" }
      }
    ],
    "title": "",
    "description": "Part 2 of the individual challenge. Paid a visit to the laser lab this morning and was able to take my project and printed it on some spare plywood I found in the material recycling bin. This project came out well and I'm glad that I had another opportunity to visit the laser lab.",
    "comments": []
  },
  {
    "_id": "GHgEzGrjX4ePDevjf",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T17:12:39.223Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "513ff2c187165b09a43db4984e11206d",
        "public_id": "avalanche2023spring/kcyzsltfrjfrdwk3qoiw",
        "version": 1676654022,
        "version_id": "f718001387a45df20af245f81ab5584c",
        "signature": "78cbfdd45659a01dd157cabdfdaa490b07bffc9a",
        "width": 1306,
        "height": 1302,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T17:13:42Z",
        "tags": [],
        "bytes": 130257,
        "type": "upload",
        "etag": "0869db00476299566d50fad177ee0d54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676654022/avalanche2023spring/kcyzsltfrjfrdwk3qoiw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676654022/avalanche2023spring/kcyzsltfrjfrdwk3qoiw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T20:01:24.284Z" }
      }
    ],
    "title": "",
    "description": "Map challenge!",
    "comments": []
  },
  {
    "_id": "GLNDzEhnRAwh2YfYi",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T01:40:30.037Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "da60929b1e2480df52fb11c7babcee5f",
        "public_id": "avalanche2023spring/spufps6irava1zpb2dmc",
        "version": 1680226884,
        "version_id": "f0648674bbda78b218069acfa0fe9c40",
        "signature": "ceb2e73de98bf07e8607c3c9e0eb6c259d7b4035",
        "width": 0,
        "height": 0,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T01:41:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 917150,
        "type": "upload",
        "etag": "3689f2133632b232249967ed15fb5462",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680226884/avalanche2023spring/spufps6irava1zpb2dmc.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680226884/avalanche2023spring/spufps6irava1zpb2dmc.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680226884/avalanche2023spring/spufps6irava1zpb2dmc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "129380",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {},
        "is_audio": true,
        "bit_rate": 130953,
        "duration": 56.028005,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T02:19:56.002Z" }
      }
    ],
    "title": "",
    "comments": [],
    "description": "My attempt at some original music 😅 lots of experimentation with pairing notes. Also added a few drum sounds to this track"
  },
  {
    "_id": "GNLFMdBNE73uxAnSi",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T15:17:08.034Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9a72c7838efa870d4a6b38daaaba9416",
        "public_id": "avalanche2023spring/ay2mcvm6nmnip4kkv3xr",
        "version": 1681485436,
        "version_id": "d677404a603379877c0aa48d5205ff4c",
        "signature": "614e361eb6f5c4ccf9dc0469ba06e3b05bbd032a",
        "width": 1472,
        "height": 1458,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:17:16Z",
        "tags": [],
        "bytes": 2954019,
        "type": "upload",
        "etag": "7490b7031f350741b1cada15c02fbcbc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681485436/avalanche2023spring/ay2mcvm6nmnip4kkv3xr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681485436/avalanche2023spring/ay2mcvm6nmnip4kkv3xr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5f46447b253f9b2f1aca0b238339a32d",
        "public_id": "avalanche2023spring/nakxayapgseoortpblf2",
        "version": 1681485440,
        "version_id": "3cccabdb737d45cb46d509462e91bee3",
        "signature": "ab661af0db74ec8bd59225559e2e3235c7e7a922",
        "width": 1472,
        "height": 1458,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:17:20Z",
        "tags": [],
        "bytes": 2950719,
        "type": "upload",
        "etag": "db335d6d91e344ef10a99bca0ca973b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681485440/avalanche2023spring/nakxayapgseoortpblf2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681485440/avalanche2023spring/nakxayapgseoortpblf2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T15:44:13.071Z" }
      }
    ],
    "title": "",
    "description": "Spinoff Series Generator - because I watched the films recently and it's all fresh in my head\nBackground image generated using stable diffusion to match the vibe",
    "comments": []
  },
  {
    "_id": "GTdF2hMaqTvP8qean",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T02:09:47.534Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0670395b42f7c80b7cf55c3ecd1f22a9",
        "public_id": "avalanche2023spring/kppakvxryhuombicuvhi",
        "version": 1679623801,
        "version_id": "58f5e009d6c0ecb73e9ed709e464bff3",
        "signature": "718dfff8a8cdd82a0cfad9cbd202fcfcefc32ec0",
        "width": 2471,
        "height": 3269,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T02:10:01Z",
        "tags": [],
        "bytes": 1099920,
        "type": "upload",
        "etag": "f5878e9a48a460a6cf1fe51353ae2738",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679623801/avalanche2023spring/kppakvxryhuombicuvhi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679623801/avalanche2023spring/kppakvxryhuombicuvhi.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0e2ad846ab46620c64a567aaacad3b68",
        "public_id": "avalanche2023spring/pr541himmyfc6mma7jhh",
        "version": 1679623816,
        "version_id": "22494ffd1469a73bfba47de7e4a18864",
        "signature": "8e488add5cc026a1ad8514670a40100fe000babb",
        "width": 3024,
        "height": 3251,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T02:10:16Z",
        "tags": [],
        "bytes": 1596291,
        "type": "upload",
        "etag": "892da49de78adcd309421b970d16b368",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679623816/avalanche2023spring/pr541himmyfc6mma7jhh.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679623816/avalanche2023spring/pr541himmyfc6mma7jhh.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c4cd274bba18b23576782369ec3fbecc",
        "public_id": "avalanche2023spring/xzsqsihxrhickne1zblj",
        "version": 1679623833,
        "version_id": "4ab8ee9a27eb06f064b0d5b4ca5a9531",
        "signature": "355eba283630a1c13c2c51c6949ac669ae05565b",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T02:10:33Z",
        "tags": [],
        "bytes": 2263762,
        "type": "upload",
        "etag": "98b2b5168681b9b02afcc099f0cf3838",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679623833/avalanche2023spring/xzsqsihxrhickne1zblj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679623833/avalanche2023spring/xzsqsihxrhickne1zblj.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:56:51.881Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T05:27:57.623Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:05.511Z" }
      }
    ],
    "title": "",
    "description": "Laser cut coasters :D",
    "comments": []
  },
  {
    "_id": "GTtFg8XnE7nKRTX46",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T14:23:13.367Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d60c050aa7961cd36d7f98c2cf9d90c4",
        "public_id": "avalanche2023spring/mq13ozrumj7rjgefzdib",
        "version": 1680272613,
        "version_id": "69cc1fcf1ebb23b202fbff4c212780c0",
        "signature": "5cfe15170b35a5e745c12f9277208cb15b0f961c",
        "width": 2248,
        "height": 1310,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T14:23:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 3212117,
        "type": "upload",
        "etag": "3a46a28987158af8601aecd8e7491dfc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680272613/avalanche2023spring/mq13ozrumj7rjgefzdib.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680272613/avalanche2023spring/mq13ozrumj7rjgefzdib.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680272613/avalanche2023spring/mq13ozrumj7rjgefzdib.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128238",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "2047722",
          "dar": "1124:655",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2273763,
        "duration": 11.3015,
        "rotation": 0,
        "nb_frames": 693,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Spent some time playing around with the melody generator!",
    "comments": []
  },
  {
    "_id": "GWNXw2XgJsr7S9TGF",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T19:03:55.771Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "21ee26af28b4e19f5dd2e56a76c706e3",
        "public_id": "avalanche2023spring/bb3jak69i7em1hdz0saq",
        "version": 1675710250,
        "version_id": "962b2ea56cea1bf6212d15b801c8b8c2",
        "signature": "56e4e47ba0fe14bfed75cb4d911f494c3566483a",
        "width": 1282,
        "height": 882,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-06T19:04:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 1983735,
        "type": "upload",
        "etag": "3f3152589419ee04bf3ab97cb36e24b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675710250/avalanche2023spring/bb3jak69i7em1hdz0saq.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675710250/avalanche2023spring/bb3jak69i7em1hdz0saq.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "123912",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1715443",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2552795,
        "duration": 6.216667,
        "rotation": 0,
        "nb_frames": 434,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:06:32.905Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-02-06T19:06:36.193Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-06T19:06:40.705Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T21:24:40.565Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T04:58:36.814Z" }
      }
    ],
    "title": "",
    "description": "Worked with Reshma on the Pair Challenge. 10 patterns picked randomly from a deck such that each pattern appears at least once in every row.",
    "comments": [],
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gridX = [0, 200, 0, 200];\nlet gridY =[0, 0, 200, 200];\n\nlet canvasW = 640;\nlet canvasH = 440;\nlet gridW = 500;\nlet gridH = 350;\n\nlet patterns = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet patternPos = 0;\n\nlet gridSize = 50;\n\nfunction setup() {\n  createCanvas(canvasW, canvasH);\n\n  strokeCap(SQUARE);\n  stroke(255); strokeWeight(2);\n  \n  //Initial Deck Shuffling\n  patterns = shuffle(patterns);\n  \n  frameRate (1);\n  //noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(255);\n  for (let j = 45; j < 350; j+=gridSize) {\n    for (let i = 70; i < 570; i+=gridSize) {\n      let p = patterns[patternPos]; \n      drawPattern(p, i, j);\n      \n      patternPos ++;\n      if (patternPos > patterns.length-1) {\n        patterns = shuffle(patterns);\n        patternPos = 0;\n      }\n    }\n  }\n  \n  \n}\n\nfunction drawPattern(pNum, posX, posY) {\n  switch (pNum){\n    case 0:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 1:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 2:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n      pop();\n      break;\n    case 3:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 4:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 5:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 6:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 7:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 8:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n      pop();\n      break;\n    case 9:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  line(posX, posY+25, posX+50, posY+25);\n      pop();\n      break;\n  }\n}"
  },
  {
    "_id": "GWmW2qfYdTS9rYy4A",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T23:55:36.15Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5a8f29a83a39e9a1340d22651cbe38e8",
        "public_id": "avalanche2023spring/zqh6nw5q4up2osztz3lr",
        "version": 1680825366,
        "version_id": "85ea87daf79891cff14ece25dae41330",
        "signature": "7b99e847efb97c7979e621a515ed365a7c10405d",
        "width": 1600,
        "height": 1600,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T23:56:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 16617640,
        "type": "upload",
        "etag": "f1dd81299745392c350ea96c297ee74d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680825366/avalanche2023spring/zqh6nw5q4up2osztz3lr.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680825366/avalanche2023spring/zqh6nw5q4up2osztz3lr.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680825366/avalanche2023spring/zqh6nw5q4up2osztz3lr.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "3800925",
          "dar": "1:1",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3807382,
        "duration": 34.916667,
        "rotation": 0,
        "nb_frames": 2095,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:47:08.337Z" }
      }
    ],
    "title": "",
    "description": "We all have that one chair...\nA simple click and play to put clothes in the laundry hamper",
    "code": "let chair, clothes, initialX, initialY, newX, newY, destX, destY;\n\nlet chairPosSet=false;\n\nlet clothesToss;\n\nlet noNewCLothes=true;\n\nlet messCount = 0;\nlet collected = 0;\n\nlet allClothes = []\n\n\nfunction setup() {\n    createCanvas(800, 800);\n    noStroke();\n\n    initialX = random(0, width);\n    initialY = random(0, height-150);\n\n    newX = random(0, width);\n    newY = random(0, height-150);\n\n    chair = createSprite(initialX, initialY, 30, 30);\n    chair.setCollider(\"circle\", 0, 0, 60)\n    chair.addImage(loadImage('Laundry Hamper.svg'));\n\n    clothes = createSprite(width-70, height-80, 50, 50);\n    clothes.addImage(loadImage('chairAsset_1.svg'))\n\n    for(let i=0; i<19; i++){\n        allClothes[i]= ('Asset '+String(i+2)+'.svg');\n    }\n\n}\n\n  \n  \nfunction draw() {\n    background(245);\n\n    chair.attractionPoint(0.99, newX, newY);\n\t\n\tchair.maxSpeed = 3;\n\n    text(\"Mess     \"+String(messCount)+\"       Collected     \"+String(collected), 300, 300);\n\n\n    if(chair.overlapPoint(newX, newY)){\n        generatePos();\n    }\n\t\n    if(!noNewCLothes){\n        clothesToss.attractionPoint(0.2, destX, destY)\n        clothesToss.maxSpeed = 5;\n    }\n\n    if (!noNewCLothes && clothesToss.overlap(chair)){\n        collected +=1;\n\t\tclothesToss.remove();\n        noNewCLothes = true;\n\t}\n    else if(!noNewCLothes && clothesToss.overlapPoint(destX, destY)){\n        messCount +=1;\n        clothesToss.remove();\n        noNewCLothes = true;\n    }\n\n    drawSprites();\n\n    \n  }\n\nfunction mouseClicked() {\n\n    if(noNewCLothes){\n        let piece=random(allClothes);\n    clothesToss = createSprite(width-50, height-50, 20, 20);\n    clothesToss.setCollider(\"circle\", 0, 0, 60)\n    clothesToss.addImage(loadImage(piece));\n\n    destX = mouseX;\n    destY = mouseY;\n\n    noNewCLothes=false;\n    }\n\n}\n\nfunction generatePos(){\n    \n    initialX = newX;\n    initialY = newY;\n\n    newX = random(0,width);\n    newY = random(0,height-150);\n\n    // console.log(newX, newY)\n\n}",
    "comments": []
  },
  {
    "_id": "GdSr4MAGjawWJ4per",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T23:23:55.605Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "81f404283b4b2300063d33db4b4faaa8",
        "public_id": "avalanche2023spring/zpt8nr4sssorbaf44pfy",
        "version": 1681428250,
        "version_id": "99799e5b1e50b1919fd834477ef4f649",
        "signature": "b65488dc31dc77b20f9a5bc19a04ffd45ce65d39",
        "width": 1484,
        "height": 1486,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T23:24:10Z",
        "tags": [],
        "bytes": 438206,
        "type": "upload",
        "etag": "ec355ee7ec29690cae554f5ecabd4ee9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681428250/avalanche2023spring/zpt8nr4sssorbaf44pfy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681428250/avalanche2023spring/zpt8nr4sssorbaf44pfy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "aa53085a697125d9ad2036e089f4ce3e",
        "public_id": "avalanche2023spring/g5rhqiuzqhssgjp1n52m",
        "version": 1681428254,
        "version_id": "4fca5e8ab83c434e8e86facea283956b",
        "signature": "14ca180de1949216c1dd2b5af0ced5f791c1df1e",
        "width": 1484,
        "height": 1486,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-13T23:24:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 2191467,
        "type": "upload",
        "etag": "4dfff6cbede37d85a84b15b76f0d26ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681428254/avalanche2023spring/g5rhqiuzqhssgjp1n52m.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681428254/avalanche2023spring/g5rhqiuzqhssgjp1n52m.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681428254/avalanche2023spring/g5rhqiuzqhssgjp1n52m.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "991283",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 1050601,
        "duration": 16.687333,
        "rotation": 0,
        "nb_frames": 1029,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T02:41:43.737Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T14:15:11.152Z" }
      }
    ],
    "title": "",
    "description": "I was inspired by Shristi's DT bio generator so I decided to make one for CD using Tracery!",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    top: [\"#div#\"],\n    div: [\n        '<div style=\"color: rgb(180, 180, 180); text-align: left; text-transform: uppercase; font-family: helvetica; font-size: 5vw; margin: 10px; padding: 10px\">#story#</div>',\n    ],\n    story: [\"#greeting# I am #descriptor# #role# who is passionate about #passion#. I am always eager to #eager##char2#\"],\n    greeting: ['<span style=\"font-family: helvetica\">#greetingword##char#</span>'],\n    greetingword: [\"hello\", \"hey\", \"hi\"],\n    char: [\"!\", \",\"],\n    descriptor: ['<span style=\"color: black; font-family: helvetica\">#descriptorword.a#</span>'],\n    descriptorword: [\n        \"multidisciplinary\",\n        \"freelance\"\n    ],\n    role: ['<span style=\"color: black; font-family: helvetica\">#roleword#</span>'],\n    roleword: [\n        \"graphic designer\",\n        \"graphic designer and art director\",\n        \"creative\",\n        \"art director\"\n    ],\n    passion: [\n        '<span style=\"color: black; font-family: helvetica\">#passionword1#</span>',\n        '<span style=\"color: black; font-family: helvetica\">#passionword1#</span> and <span style=\"color: black; font-family: helvetica\">#passionword2#</span>',\n        '<span style=\"color: black; font-family: helvetica\">#passionword1#</span>, <span style=\"color: black; font-family: helvetica\">#passionword2#</span>, and <span style=\"color: black; font-family: helvetica\">#passionword3#</span>'\n    ],\n    passionword1: [\"coding\", \"motion\", \"branding\"],\n    passionword2: [\"UI/UX\", \"web design\", \"interaction\"],\n    passionword3: [\"dogs\", \"cats\", \"ice cream\", \"hiking\"],\n\n    eager: ['<span style=\"font-family: helvetica\">#eagerword#</span>'],\n    eagerword: [\n        \"#eagerword1#\",\n        \"#eagerword1# or #eagerword2#\"\n    ],\n    eagerword1: [\n        \"meet new people\",\n        \"work with like-minded creatives\",\n        \"learn new things\"],\n    eagerword2: [\"chat\", \"grab a coffee\"],\n    char2: [\"!\", \".\"]\n};\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten(\"#top#\");\n\n    const storyDiv = document.createElement(\"div\");\n    storyDiv.innerHTML = story;\n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    }\n\nsetTimeout(main, 10);",
    "comments": []
  },
  {
    "_id": "GfzpzQfem93twoxRp",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-12T22:25:41.35Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fd4c39c014622790b3ff5b23a0bf70cf",
        "public_id": "avalanche2023spring/hkjzowwhggtwxtvuvjmn",
        "version": 1681338377,
        "version_id": "911b2826a894bae346f70786eb301976",
        "signature": "1926df0a1c2ed896fb3408aed0789f5eb9a22495",
        "width": 712,
        "height": 520,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-12T22:26:17Z",
        "tags": [],
        "bytes": 97008,
        "type": "upload",
        "etag": "7345b203e801efb0876ad4f8a54e9e7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681338377/avalanche2023spring/hkjzowwhggtwxtvuvjmn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681338377/avalanche2023spring/hkjzowwhggtwxtvuvjmn.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My take on the individual challenge this week while trying out Tracery. I think for my story I may have been a little too hands-on with writing the story, still considering if I want to expand on this or one of my sketches.",
    "code": "// require /text/tracery.min.js\n\nconst storyElements = {\n  story: [\"It was a dark and stormy night. Jake was getting ready to pull an all nighter studying for his exam tomorrow because he didn't study until this night. He #verb# around before grabbing a cup of coffee in the kitchen. But as he #verb# to his room, his #noun# was missing. Did someone break in? Did he misplace it during the day? Nonetheless, Jake became distraught. He felt #adjective#. He #action#, hoping that through some miracle his #noun# would show up. And by some miracle the #noun# did show up. But the true horror soon struck as Jake saw the sun rise, and in this whole incident he didn’t spend even a single minute studying…\"],\n  adjective: [\"anxious\", \"exhausted\", \"scared\", \"hopeless\", \"terrified\"],\n  noun: [\"textbook\", \"coffee\", \"bed\", \"cat\", \"dog\", \"fish\", \"computer\"],\n  verb: [\"sauntered\", \"walked\", \"returned\", \"ran\", \"skipped\", \"sauntered\"],\n  action: [\"paced back and forth\", \"sat around thinking\", \"went on his phone\", \"prayed\"],\n};\n\nfunction main() {\n  const grammar = tracery.createGrammar(storyElements);\n  const story = grammar.flatten(\"#story#\");\n  display(story);\n}\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 15px; margin: 10%; line-height: 1.5;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}\n\nsetTimeout(main, 10);",
    "comments": []
  },
  {
    "_id": "GgJhrZF7ecqEg6WLB",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T03:22:23.888Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c64b28761b7b4ab276e20c4bda89fa19",
        "public_id": "avalanche2023spring/uk4hkm54ut8prj51soyb",
        "version": 1677209039,
        "version_id": "3e69d0a5c33c96f7d35904a8cc6580e9",
        "signature": "101e9b8dabe5d8395a67461e8af039788199da91",
        "width": 2108,
        "height": 1802,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T03:23:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 15053533,
        "type": "upload",
        "etag": "44a05b51d32a72c31be7fefd6ac89600",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677209039/avalanche2023spring/uk4hkm54ut8prj51soyb.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677209039/avalanche2023spring/uk4hkm54ut8prj51soyb.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677209039/avalanche2023spring/uk4hkm54ut8prj51soyb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "131092",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "14425999",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 14656881,
        "duration": 8.2165,
        "rotation": 0,
        "nb_frames": 447,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "A parameters week sketch without parameters. The user only gets one affordance---a mouse hover. I started out wanting them to control each letter but at the end of the day, the added interactions would have served no real purpose so maybe this was an excercise in building mindful constraints. Or maybe I ran out of time.",
    "inspiration_name": "Talia Cotton's Workshop",
    "inspiration_url": "https://codepen.io/cotton-t/pen/JjaKvZj",
    "code": "body{\n  background: #F9EBE0;\n}\n\n.container{\n  position:fixed;\n  width:1000px;\n  height: 250px;\n\n    \n/*  CENTER ON PAGE */\n  position: fixed;\n  top:50vh;\n  left:50vw;\n  transform:translate(-50%, -50%);\n}\n\n.cut{\n  width: 60px;\n  height: 215px;\n  position:absolute;\n/*   box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\n  transition: 1s;\n   background-image: url(\"https://i.ibb.co/ZXSM8dz/bacon.png\");\n}\n\n.strip{\n  width: 60px;\n  height: 215px;\n  position:absolute;\n/*   box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\n  transition: 1s;\n  background-image: url(\"https://i.ibb.co/ZXSM8dz/bacon.png\");\n}\n\n#m1{ \n  left: 0px;\n  transform: rotate(1.98deg);\n  \n \n}\n#m2{ \n  left: 5%;\n  transform: rotate(-33deg);\n  \n \n}\n#m3{ \n  left: 15%;\n  transform: rotate(33deg);\n  \n\n}\n#m4{ \n  left: 20%;\n  transform: rotate(-1.98deg);\n \n  \n}\n\n#e1{ \n  left: 30%;\n  transform: rotate(-2.98deg);\n  \n}\n#e2{ \n  left: 35%;\n  top: -25%;\n  transform: rotate(89.37deg);\n  \n}\n#e3{ \n  left: 35%;\n  top: 10%;\n  transform: rotate(89deg);\n \n}\n#e4{ \n  left: 35%;\n  top: 40%;\n  transform: rotate(89deg);\n  \n}\n\n#a1{ \n  left: 55%;\n  transform: rotate(20deg);\n}\n\n#a2{ \n  left: 65%;\n  transform: rotate(-20deg);\n  \n}\n\n#a3{ \n  left: 60%;\n  transform: rotate(-89deg);\n  \n}\n\n/* #i{ \n  left: 50%;\n  background: #4786e6;\n} */\n\n#t1{ \n  left: 85%;\n  top:-30%;\n  transform: rotate(88deg);\n \n}\n\n#t2{ \n  left: 85%;\n  transform: rotate(3deg);\n  top:15%;\n  \n}\n\n\n/* —————————————————————————— */\n/*         TRANSITIONS        */\n/* —————————————————————————— */\n\n/* —————————————————————————— */\n/* PART TRANSITION */\n\n\n\n/* —————————————————————————— */\n/* NESTED HOVERING */\n\n\n\n.container:hover > #m1{\n   left: 31%;\n  transform: rotate(-2.98deg);\n}\n\n.container:hover > #m2{\n    left: 35%;\n  top: -25%;\n  transform: rotate(85.37deg);\n}\n\n.container:hover > #m3{\n left: 35%;\n  top: 10%;\n  transform: rotate(85deg);\n}\n\n.container:hover > #m4{\n left: 35%;\n  top: 40%;\n  transform: rotate(86deg);\n}\n\n/* —————————————————————————— */",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Yum!",
        "created_at": { "$date": "2023-02-24T03:33:17.275Z" }
      }
    ]
  },
  {
    "_id": "Gi25QaKheyDvcNj73",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T03:51:02.159Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "725c696b1d42081b8f04187920a7c558",
        "public_id": "avalanche2023spring/vwf5woymuz4m6ljvbt9t",
        "version": 1675655469,
        "version_id": "c6a29faf92c97e618652915c1e68a002",
        "signature": "9bb9080e4da62d5fd36441869f35584dfb954ad0",
        "width": 522,
        "height": 751,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-06T03:51:09Z",
        "tags": [],
        "bytes": 17979,
        "type": "upload",
        "etag": "94dcddfafb6c1855f3efbf900c7026dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675655469/avalanche2023spring/vwf5woymuz4m6ljvbt9t.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675655469/avalanche2023spring/vwf5woymuz4m6ljvbt9t.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T06:15:18.682Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T15:26:54.655Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T17:44:32.817Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:03:13.198Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:08:35.687Z" }
      }
    ],
    "title": "",
    "description": "I made a tree using random! This was my first time figuring this out, so I thought it would be interesting to use the p5.js reference guide to help me get started.",
    "comments": []
  },
  {
    "_id": "GoTA3EDySgYromJBh",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T23:44:23.638Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c4610f3c80fbb0ecc5a3b5ab2e32474b",
        "public_id": "avalanche2023spring/tmaiyjqt65pgaqwaaawl",
        "version": 1681429473,
        "version_id": "64ff8c2908a482a7d0e7b2c1aa9d9655",
        "signature": "874ef06b76b1627abd242625019b117e159fb2dd",
        "width": 797,
        "height": 424,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T23:44:33Z",
        "tags": [],
        "bytes": 67842,
        "type": "upload",
        "etag": "a5ad0fdfc7628f38581b3e2673894ee2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681429473/avalanche2023spring/tmaiyjqt65pgaqwaaawl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681429473/avalanche2023spring/tmaiyjqt65pgaqwaaawl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "aa2bb2462ff9ec40e5e776f1a04cb5c9",
        "public_id": "avalanche2023spring/rvshumcuxu59fnzw5hmw",
        "version": 1681429478,
        "version_id": "581785190d95bf9e8267cc7d137d0f92",
        "signature": "d6f295a2413bb51160a50e7d4644a61f8739e881",
        "width": 797,
        "height": 456,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T23:44:38Z",
        "tags": [],
        "bytes": 70009,
        "type": "upload",
        "etag": "f0077ccee9f383ed3a2fc9e0e8bb0b8d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681429478/avalanche2023spring/rvshumcuxu59fnzw5hmw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681429478/avalanche2023spring/rvshumcuxu59fnzw5hmw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8665231e27798d1886653bdd8dd080d5",
        "public_id": "avalanche2023spring/ym5rrxwf0dk0pdp5qajv",
        "version": 1681429487,
        "version_id": "5ad5d013fc9f84155e0337aae404157a",
        "signature": "e41bb575555de2eac70e536f54057eec174df58b",
        "width": 797,
        "height": 422,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T23:44:47Z",
        "tags": [],
        "bytes": 68093,
        "type": "upload",
        "etag": "d77bee4540ec4ac663736e6d181e6e60",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681429487/avalanche2023spring/ym5rrxwf0dk0pdp5qajv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681429487/avalanche2023spring/ym5rrxwf0dk0pdp5qajv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "My take on the individual challenge. I just improved the Markov model by sampling many more texts and the same text multiple times to bias the model a little bit. Also added some conditions for longevity and concision. Markov models are nuts, it's crazy how much you can get out of a relatively simple technique",
    "code": "const bill_of_rights =\n  \"Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances. A well regulated Militia, being necessary to the security of a free State, the right of the people to keep and bear Arms, shall not be infringed. No Soldier shall, in time of peace be quartered in any house, without the consent of the Owner, nor in time of war, but in a manner to be prescribed by law. The right of the people to be secure in their persons, houses, papers, and effects, against unreasonable searches and seizures, shall not be violated, and no Warrants shall issue, but upon probable cause, supported by Oath or affirmation, and particularly describing the place to be searched, and the persons or things to be seized. No person shall be held to answer for a capital, or otherwise infamous crime, unless on a presentment or indictment of a Grand Jury, except in cases arising in the land or naval forces, or in the Militia, when in actual service in time of War or public danger; nor shall any person be subject for the same offence to be twice put in jeopardy of life or limb; nor shall be compelled in any criminal case to be a witness against himself, nor be deprived of life, liberty, or property, without due process of law; nor shall private property be taken for public use, without just compensation. In all criminal prosecutions, the accused shall enjoy the right to a speedy and public trial, by an impartial jury of the State and district wherein the crime shall have been committed, which district shall have been previously ascertained by law, and to be informed of the nature and cause of the accusation; to be confronted with the witnesses against him; to have compulsory process for obtaining witnesses in his favor, and to have the Assistance of Counsel for his defence. In Suits at common law, where the value in controversy shall exceed twenty dollars, the right of trial by jury shall be preserved, and no fact tried by a jury, shall be otherwise re-examined in any Court of the United States, than according to the rules of the common law. Excessive bail shall not be required, nor excessive fines imposed, nor cruel and unusual punishments inflicted. The enumeration in the Constitution, of certain rights, shall not be construed to deny or disparage others retained by the people. The powers not delegated to the United States by the Constitution, nor prohibited by it to the States, are reserved to the States respectively, or to the people.\";\nconst hansel_and_gretel =\n  \"Hard by a great forest dwelt a poor wood-cutter with his wife and his two children. The boy was called Hansel and the girl Gretel. He had little to bite and to break, and once when great dearth fell on the land, he could no longer procure even daily bread. Now when he thought over this by night in his bed, and tossed about in his anxiety, he groaned and said to his wife: ‘What is to become of us? How are we to feed our poor children, when we no longer have anything even for ourselves?’ ‘I’ll tell you what, husband,’ answered the woman, ‘early tomorrow morning we will take the children out into the forest to where it is the thickest; there we will light a fire for them, and give each of them one more piece of bread, and then we will go to our work and leave them alone. They will not find the way home again, and we shall be rid of them.’ ‘No, wife,’ said the man, ‘I will not do that; how can I bear to leave my children alone in the forest?—the wild animals would soon come and tear them to pieces.’ ‘O, you fool!’ said she, ‘then we must all four die of hunger, you may as well plane the planks for our coffins,’ and she left him no peace until he consented. ‘But I feel very sorry for the poor children, all the same,’ said the man.The two children had also not been able to sleep for hunger, and had heard what their stepmother had said to their father. Gretel wept bitter tears, and said to Hansel: ‘Now all is over with us.’ ‘Be quiet, Gretel,’ said Hansel, ‘do not distress yourself, I will soon find a way to help us.’ And when the old folks had fallen asleep, he got up, put on his little coat, opened the door below, and crept outside. The moon shone brightly, and the white pebbles which lay in front of the house glittered like real silver pennies. Hansel stooped and stuffed the little pocket of his coat with as many as he could get in. Then he went back and said to Gretel: ‘Be comforted, dear little sister, and sleep in peace, God will not forsake us,’ and he lay down again in his bed. When day dawned, but before the sun had risen, the woman came and awoke the two children, saying: ‘Get up, you sluggards! we are going into the forest to fetch wood.’ She gave each a little piece of bread, and said: ‘There is something for your dinner, but do not eat it up before then, for you will get nothing else.’ Gretel took the bread under her apron, as Hansel had the pebbles in his pocket. Then they all set out together on the way to the forest. When they had walked a short time, Hansel stood still and peeped back at the house, and did so again and again. His father said: ‘Hansel, what are you looking at there and staying behind for? Pay attention, and do not forget how to use your legs.’ ‘Ah, father,’ said Hansel, ‘I am looking at my little white cat, which is sitting up on the roof, and wants to say goodbye to me.’ The wife said: ‘Fool, that is not your little cat, that is the morning sun which is shining on the chimneys.’ Hansel, however, had not been looking back at the cat, but had been constantly throwing one of the white pebble-stones out of his pocket on the road.When they had reached the middle of the forest, the father said: ‘Now, children, pile up some wood, and I will light a fire that you may not be cold.’ Hansel and Gretel gathered brushwood together, as high as a little hill. The brushwood was lighted, and when the flames were burning very high, the woman said: ‘Now, children, lay yourselves down by the fire and rest, we will go into the forest and cut some wood. When we have done, we will come back and fetch you away.’Hansel and Gretel sat by the fire, and when noon came, each ate a little piece of bread, and as they heard the strokes of the wood-axe they believed that their father was near. It was not the axe, however, but a branch which he had fastened to a withered tree which the wind was blowing backwards and forwards. And as they had been sitting such a long time, their eyes closed with fatigue, and they fell fast asleep. When at last they awoke, it was already dark night. Gretel began to cry and said: ‘How are we to get out of the forest now?’ But Hansel comforted her and said: ‘Just wait a little, until the moon has risen, and then we will soon find the way.’ And when the full moon had risen, Hansel took his little sister by the hand, and followed the pebbles which shone like newly-coined silver pieces, and showed them the way.They walked the whole night long, and by break of day came once more to their father’s house. They knocked at the door, and when the woman opened it and saw that it was Hansel and Gretel, she said: ‘You naughty children, why have you slept so long in the forest?—we thought you were never coming back at all!’ The father, however, rejoiced, for it had cut him to the heart to leave them behind alone.Not long afterwards, there was once more great dearth throughout the land, and the children heard their mother saying at night to their father: ‘Everything is eaten again, we have one half loaf left, and that is the end. The children must go, we will take them farther into the wood, so that they will not find their way out again; there is no other means of saving ourselves!’ The man’s heart was heavy, and he thought: ‘It would be better for you to share the last mouthful with your children.’ The woman, however, would listen to nothing that he had to say, but scolded and reproached him. He who says A must say B, likewise, and as he had yielded the first time, he had to do so a second time also.The children, however, were still awake and had heard the conversation. When the old folks were asleep, Hansel again got up, and wanted to go out and pick up pebbles as he had done before, but the woman had locked the door, and Hansel could not get out. Nevertheless he comforted his little sister, and said: ‘Do not cry, Gretel, go to sleep quietly, the good God will help us.’Early in the morning came the woman, and took the children out of their beds. Their piece of bread was given to them, but it was still smaller than the time before. On the way into the forest Hansel crumbled his in his pocket, and often stood still and threw a morsel on the ground. ‘Hansel, why do you stop and look round?’ said the father, ‘go on.’ ‘I am looking back at my little pigeon which is sitting on the roof, and wants to say goodbye to me,’ answered Hansel. ‘Fool!’ said the woman, ‘that is not your little pigeon, that is the morning sun that is shining on the chimney.’ Hansel, however little by little, threw all the crumbs on the path.The woman led the children still deeper into the forest, where they had never in their lives been before. Then a great fire was again made, and the mother said: ‘Just sit there, you children, and when you are tired you may sleep a little; we are going into the forest to cut wood, and in the evening when we are done, we will come and fetch you away.’ When it was noon, Gretel shared her piece of bread with Hansel, who had scattered his by the way. Then they fell asleep and evening passed, but no one came to the poor children. They did not awake until it was dark night, and Hansel comforted his little sister and said: ‘Just wait, Gretel, until the moon rises, and then we shall see the crumbs of bread which I have strewn about, they will show us our way home again.’ When the moon came they set out, but they found no crumbs, for the many thousands of birds which fly about in the woods and fields had picked them all up. Hansel said to Gretel: ‘We shall soon find the way,’ but they did not find it. They walked the whole night and all the next day too from morning till evening, but they did not get out of the forest, and were very hungry, for they had nothing to eat but two or three berries, which grew on the ground. And as they were so weary that their legs would carry them no longer, they lay down beneath a tree and fell asleep.It was now three mornings since they had left their father’s house. They began to walk again, but they always came deeper into the forest, and if help did not come soon, they must die of hunger and weariness. When it was mid-day, they saw a beautiful snow-white bird sitting on a bough, which sang so delightfully that they stood still and listened to it. And when its song was over, it spread its wings and flew away before them, and they followed it until they reached a little house, on the roof of which it alighted; and when they approached the little house they saw that it was built of bread and covered with cakes, but that the windows were of clear sugar. ‘We will set to work on that,’ said Hansel, ‘and have a good meal. I will eat a bit of the roof, and you Gretel, can eat some of the window, it will taste sweet.’ Hansel reached up above, and broke off a little of the roof to try how it tasted, and Gretel leant against the window and nibbled at the panes. Then a soft voice cried from the parlour: ‘Nibble, nibble, gnaw, Who is nibbling at my little house?’ The children answered: ‘The wind, the wind, The heaven-born wind,’ and went on eating without disturbing themselves. Hansel, who liked the taste of the roof, tore down a great piece of it, and Gretel pushed out the whole of one round window-pane, sat down, and enjoyed herself with it. Suddenly the door opened, and a woman as old as the hills, who supported herself on crutches, came creeping out. Hansel and Gretel were so terribly frightened that they let fall what they had in their hands. The old woman, however, nodded her head, and said: ‘Oh, you dear children, who has brought you here? do come in, and stay with me. No harm shall happen to you.’ She took them both by the hand, and led them into her little house. Then good food was set before them, milk and pancakes, with sugar, apples, and nuts. Afterwards two pretty little beds were covered with clean white linen, and Hansel and Gretel lay down in them, and thought they were in heaven.The old woman had only pretended to be so kind; she was in reality a wicked witch, who lay in wait for children, and had only built the little house of bread in order to entice them there. When a child fell into her power, she killed it, cooked and ate it, and that was a feast day with her. Witches have red eyes, and cannot see far, but they have a keen scent like the beasts, and are aware when human beings draw near. When Hansel and Gretel came into her neighbourhood, she laughed with malice, and said mockingly: ‘I have them, they shall not escape me again!’ Early in the morning before the children were awake, she was already up, and when she saw both of them sleeping and looking so pretty, with their plump and rosy cheeks she muttered to herself: ‘That will be a dainty mouthful!’ Then she seized Hansel with her shrivelled hand, carried him into a little stable, and locked him in behind a grated door. Scream as he might, it would not help him. Then she went to Gretel, shook her till she awoke, and cried: ‘Get up, lazy thing, fetch some water, and cook something good for your brother, he is in the stable outside, and is to be made fat. When he is fat, I will eat him.’ Gretel began to weep bitterly, but it was all in vain, for she was forced to do what the wicked witch commanded.And now the best food was cooked for poor Hansel, but Gretel got nothing but crab-shells. Every morning the woman crept to the little stable, and cried: ‘Hansel, stretch out your finger that I may feel if you will soon be fat.’ Hansel, however, stretched out a little bone to her, and the old woman, who had dim eyes, could not see it, and thought it was Hansel’s finger, and was astonished that there was no way of fattening him. When four weeks had gone by, and Hansel still remained thin, she was seized with impatience and would not wait any longer. ‘Now, then, Gretel,’ she cried to the girl, ‘stir yourself, and bring some water. Let Hansel be fat or lean, tomorrow I will kill him, and cook him.’ Ah, how the poor little sister did lament when she had to fetch the water, and how her tears did flow down her cheeks! ‘Dear God, do help us,’ she cried. ‘If the wild beasts in the forest had but devoured us, we should at any rate have died together.’ ‘Just keep your noise to yourself,’ said the old woman, ‘it won’t help you at all.’Early in the morning, Gretel had to go out and hang up the cauldron with the water, and light the fire. ‘We will bake first,’ said the old woman, ‘I have already heated the oven, and kneaded the dough.’ She pushed poor Gretel out to the oven, from which flames of fire were already darting. ‘Creep in,’ said the witch, ‘and see if it is properly heated, so that we can put the bread in.’ And once Gretel was inside, she intended to shut the oven and let her bake in it, and then she would eat her, too. But Gretel saw what she had in mind, and said: ‘I do not know how I am to do it; how do I get in?’ ‘Silly goose,’ said the old woman. ‘The door is big enough; just look, I can get in myself!’ and she crept up and thrust her head into the oven. Then Gretel gave her a push that drove her far into it, and shut the iron door, and fastened the bolt. Oh! then she began to howl quite horribly, but Gretel ran away and the godless witch was miserably burnt to death.Gretel, however, ran like lightning to Hansel, opened his little stable, and cried: ‘Hansel, we are saved! The old witch is dead!’ Then Hansel sprang like a bird from its cage when the door is opened. How they did rejoice and embrace each other, and dance about and kiss each other! And as they had no longer any need to fear her, they went into the witch’s house, and in every corner there stood chests full of pearls and jewels. ‘These are far better than pebbles!’ said Hansel, and thrust into his pockets whatever could be got in, and Gretel said: ‘I, too, will take something home with me,’ and filled her pinafore full. ‘But now we must be off,’ said Hansel, ‘that we may get out of the witch’s forest.’When they had walked for two hours, they came to a great stretch of water. ‘We cannot cross,’ said Hansel, ‘I see no foot-plank, and no bridge.’ ‘And there is also no ferry,’ answered Gretel, ‘but a white duck is swimming there: if I ask her, she will help us over.’ Then she cried: ‘Little duck, little duck, dost thou see, Hansel and Gretel are waiting for thee? There’s never a plank, or bridge in sight, Take us across on thy back so white.’ The duck came to them, and Hansel seated himself on its back, and told his sister to sit by him. ‘No,’ replied Gretel, ‘that will be too heavy for the little duck; she shall take us across, one after the other.’ The good little duck did so, and when they were once safely across and had walked for a short time, the forest seemed to be more and more familiar to them, and at length they saw from afar their father’s house. Then they began to run, rushed into the parlour, and threw themselves round their father’s neck. The man had not known one happy hour since he had left the children in the forest; the woman, however, was dead. Gretel emptied her pinafore until pearls and precious stones ran about the room, and Hansel threw one handful after another out of his pocket to add to them. Then all anxiety was at an end, and they lived together in perfect happiness. My tale is done, there runs a mouse; whosoever catches it, may make himself a big fur cap out of it.\";\nconst lovecraft =\n  \"What I heard in my youth about the shunned house was merely that people died there in alarmingly great numbers. That, I was told, was why the original owners had moved out some twenty years after building the place. It was plainly unhealthy, perhaps because of the dampness and fungous growths in the cellar, the general sickish smell, the drafts of the hallways, or the quality of the well and pump water. These things were bad enough, and these were all that gained belief among the persons whom I knew. Only the notebooks of my antiquarian uncle, Doctor Elihu Whipple, revealed to me at length the darker, vaguer surmises which formed an undercurrent of folklore among old-time servants and humble folk; surmises which never travelled far, and which were largely forgotten when Providence grew to be a metropolis with a shifting modern population. The general fact is, that the house was never regarded by the solid part of the community as in any real sense 'haunted.' There were no widespread tales of rattling chains, cold currents of air, extinguished lights, or faces at the window. Extremists sometimes said the house was 'unlucky,' but that is as far as even they went. What was really beyond dispute is that a frightful proportion of persons died there; or more accurately, had died there, since after some peculiar happenings over sixty years ago the building had become deserted through the sheer impossibility of renting it. These persons were not all cut off suddenly by any one cause; rather did it seem that their vitality was insidiously sapped, so that each one died the sooner from whatever tendency to weakness he may have naturally had. And those who did not die displayed in constying degree a type of anemia or consumption, and sometimes a decline of the mental faculties, which spoke ill for the salubriousness of the building. Neighboring houses, it must be added, seemed entirely free from the noxious quality. This much I knew before my insistent questioning led my uncle to show me the notes which finally embarked us both on our hideous investigation. In my childhood the shunned house was vacant, with barren, gnarled and terrible old trees, long, queerly pale grass and nightmarishly misshapen weeds in the high terraced yard where birds never lingered. We boys used to overrun the place, and I can still recall my youthful terror not only at the morbid strangeness of this sinister vegetation, but at the eldritch atmosphere and odor of the dilapidated house, whose unlocked front door was often entered in quest of shudders. The small-paned windows were largely broken, and a nameless air of desolation hung round the precarious panelling, shaky interior shutters, peeling wall-paper, falling plaster, rickety staircases, and such fragments of battered furniture as still remained. The dust and cobwebs added their touch of the fearful; and brave indeed was the boy who would voluntarily ascend the ladder to the attic, a vast raftered length lighted only by small blinking windows in the gable ends, and filled with a massed wreckage of chests, chairs, and spinning-wheels which infinite years of deposit had shrouded and festooned into monstrous and hellish shapes. But after all, the attic was not the most terrible part of the house. It was the dank, humid cellar which somehow exerted the strongest repulsion on us, even though it was wholly above ground on the street side, with only a thin door and window-pierced brick wall to separate it from the busy sidewalk. We scarcely knew whether to haunt it in spectral fascination, or to shun it for the sake of our souls and our sanity. For one thing, the bad odor of the house was strongest there; and for another thing, we did not like the white fungous growths which occasionally sprang up in rainy summer weather from the hard earth floor. Those fungi, grotesquely like the vegetation in the yard outside, were truly horrible in their outlines; detestable parodies of toadstools and Indian-pipes, whose like we had never seen in any other situation. They rotted quickly, and at one stage became slightly phosphorescent; so that nocturnal passers-by sometimes spoke of witch-fires glowing behind the broken panes of the fetor-spreading windows. We never—even in our wildest Halloween moods—visited this cellar by night, but in some of our daytime visits could detect the phosphorescence, especially when the day was dark and wet. There was also a subtler thing we often thought we detected—a very strange thing which was, however, merely suggestive at most. I refer to a sort of cloudy whitish pattern on the dirt floor—a vague, shifting deposit of mold or niter which we sometimes thought we could trace amidst the sparse fungous growths near the huge fireplace of the basement kitchen. Once in a while it struck us that this patch bore an uncanny resemblance to a doubled-up human figure, though generally no such kinship existed, and often there was no whitish deposit whatever. On a certain rainy afternoon when this illusion seemed phenomenally strong, and when, in addition, I had fancied I glimpsed a kind of thin, yellowish, shimmering exhalation rising from the nitrous pattern toward the yawning fireplace, I spoke to my uncle about the matter. He smiled at this odd conceit, but it seemed that his smile was tinged with reminiscence. Later I heard that a similar notion entered into some of the wild ancient tales of the common folk—a notion likewise alluding to ghoulish, wolfish shapes taken by smoke from the great chimney, and queer contours assumed by certain of the sinuous tree-roots that thrust their way into the cellar through the loose foundation-stones.\";\nconst the_raven =\n  \"Once upon a midnight dreary, while I pondered, weak and weary, Over many a quaint and curious volume of forgotten lore— While I nodded, nearly napping, suddenly there came a tapping, As of some one gently rapping, rapping at my chamber door. '’Tis some visitor,' I muttered, 'tapping at my chamber door— Only this and nothing more.' Ah, distinctly I remember it was in the bleak December; And each separate dying ember wrought its ghost upon the floor. Eagerly I wished the morrow;—vainly I had sought to borrow From my books surcease of sorrow—sorrow for the lost Lenore— For the rare and radiant maiden whom the angels name Lenore— Nameless here for evermore. And the silken, sad, uncertain rustling of each purple curtain Thrilled me—filled me with fantastic terrors never felt before; So that now, to still the beating of my heart, I stood repeating '’Tis some visitor entreating entrance at my chamber door— Some late visitor entreating entrance at my chamber door;— This it is and nothing more.' Presently my soul grew stronger; hesitating then no longer, 'Sir,' said I, 'or Madam, truly your forgiveness I implore; But the fact is I was napping, and so gently you came rapping, And so faintly you came tapping, tapping at my chamber door, That I scarce was sure I heard you'—here I opened wide the door;— Darkness there and nothing more. Deep into that darkness peering, long I stood there wondering, fearing, Doubting, dreaming dreams no mortal ever dared to dream before; But the silence was unbroken, and the stillness gave no token, And the only word there spoken was the whispered word, 'Lenore?' This I whispered, and an echo murmured back the word, 'Lenore!'— Merely this and nothing more. Back into the chamber turning, all my soul within me burning, Soon again I heard a tapping somewhat louder than before. 'Surely,' said I, 'surely that is something at my window lattice;  Let me see, then, what thereat is, and this mystery explore— Let my heart be still a moment and this mystery explore;— ’Tis the wind and nothing more!' Open here I flung the shutter, when, with many a flirt and flutter, In there stepped a stately Raven of the saintly days of yore; Not the least obeisance made he; not a minute stopped or stayed he; But, with mien of lord or lady, perched above my chamber door— Perched upon a bust of Pallas just above my chamber door— Perched, and sat, and nothing more.  Then this ebony bird beguiling my sad fancy into smiling, By the grave and stern decorum of the countenance it wore, 'Though thy crest be shorn and shaven, thou,' I said, 'art sure no craven, Ghastly grim and ancient Raven wandering from the Nightly shore— Tell me what thy lordly name is on the Night’s Plutonian shore!' Quoth the Raven 'Nevermore.' Much I marvelled this ungainly fowl to hear discourse so plainly, Though its answer little meaning—little relevancy bore; For we cannot help agreeing that no living human being Ever yet was blessed with seeing bird above his chamber door— Bird or beast upon the sculptured bust above his chamber door, With such name as 'Nevermore.' But the Raven, sitting lonely on the placid bust, spoke only That one word, as if his soul in that one word he did outpour. Nothing farther then he uttered—not a feather then he fluttered— Till I scarcely more than muttered 'Other friends have flown before— On the morrow he will leave me, as my Hopes have flown before.' Then the bird said 'Nevermore.' Startled at the stillness broken by reply so aptly spoken, 'Doubtless,' said I, 'what it utters is its only stock and store Caught from some unhappy master whom unmerciful Disaster Followed fast and followed faster till his songs one burden bore— Till the dirges of his Hope that melancholy burden bore Of ‘Never—nevermore’.' But the Raven still beguiling all my fancy into smiling, Straight I wheeled a cushioned seat in front of bird, and bust and door; Then, upon the velvet sinking, I betook myself to linking Fancy unto fancy, thinking what this ominous bird of yore— What this grim, ungainly, ghastly, gaunt, and ominous bird of yore Meant in croaking 'Nevermore.' This I sat engaged in guessing, but no syllable expressing To the fowl whose fiery eyes now burned into my bosom’s core; This and more I sat divining, with my head at ease reclining On the cushion’s velvet lining that the lamp-light gloated o’er, But whose velvet-violet lining with the lamp-light gloating o’er, She shall press, ah, nevermore! Then, methought, the air grew denser, perfumed from an unseen censer Swung by Seraphim whose foot-falls tinkled on the tufted floor. 'Wretch,' I cried, 'thy God hath lent thee—by these angels he hath sent thee Respite—respite and nepenthe from thy memories of Lenore; Quaff, oh quaff this kind nepenthe and forget this lost Lenore!' Quoth the Raven 'Nevermore.' 'Prophet!' said I, 'thing of evil!—prophet still, if bird or devil!— Whether Tempter sent, or whether tempest tossed thee here ashore, Desolate yet all undaunted, on this desert land enchanted— On this home by Horror haunted—tell me truly, I implore— Is there—is there balm in Gilead?—tell me—tell me, I implore!' Quoth the Raven 'Nevermore.' 'Prophet!' said I, 'thing of evil!—prophet still, if bird or devil! By that Heaven that bends above us—by that God we both adore— Tell this soul with sorrow laden if, within the distant Aidenn, It shall clasp a sainted maiden whom the angels name Lenore— Clasp a rare and radiant maiden whom the angels name Lenore.' Quoth the Raven 'Nevermore.' 'Be that word our sign of parting, bird or fiend!' I shrieked, upstarting— 'Get thee back into the tempest and the Night’s Plutonian shore! Leave no black plume as a token of that lie thy soul hath spoken! Leave my loneliness unbroken!—quit the bust above my door! Take thy beak from out my heart, and take thy form from off my door!' Quoth the Raven 'Nevermore.' And the Raven, never flitting, still is sitting, still is sitting On the pallid bust of Pallas just above my chamber door; And his eyes have all the seeming of a demon’s that is dreaming, And the lamp-light o’er him streaming throws his shadow on the floor; And my soul from out that shadow that lies floating on the floor Shall be lifted—nevermore!\";\n\nconst seuss =\n  \"One fish Two fish Red fish Blue fish. Black fish Blue fish Old fish New fish. This one has a little star. This one has a little car. Say! What a lot Of fish there are. Yes. Some are red. And some are blue. Some are old. And some are new. Some are sad. And some are glad. And some are very, very bad. Why are they Sad and glad and bad? I do not know. Go ask your dad. Some are thin. And some are fat. The fat one has A yellow hat. From there to here, from here to there, Funny things Are everywhere.  Here are some Who like to run. They run for fun In the hot, hot sun. Oh me! Oh my! Oh me! Oh my! What a lot Of funny things go by. Some have two feet And some have four. Some have six feet And some have more. Where do they come from? I can’t say. But I bet they have come a long, long way. We see them come. We see them go. Some are fast. And some are slow. Some are high And some are low. Not one of them Is like another. Don’t ask us why. Go ask your mother. Say! Look at his fingers! One, two, three… How many fingers Do I see? One, two, three, four, Five, six, seven, Eight, nine, ten. He has eleven! Eleven! This is something new. I wish I had Eleven, too!\";\n\nconst test = \"A B A B A C\";\nconst starters = ['but', 'and',]\nconst markovModel = generateModel(bill_of_rights, the_raven, hansel_and_gretel, lovecraft, lovecraft, lovecraft, the_raven);\nconst output_text = generateText(markovModel, 'I');\n\ndocument.body.innerHTML = `\n    <style> \n    body {\n        font-family: 'Garamond';\n        background-color: #0f0f0f;\n        color: #efefef;\n        font-size: 22px;\n        line-height: 1.3\n    }\n    </style>\n    <main>\n        ${output_text}\n    </main\n`;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let sentenceCount = 0\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    if (current_word !== `'`) {\n    output_text += current_word;\n    }\n    \n    if (current_word.length > 60) {\n      sentenceCount++\n      if (sentenceCount > 6){\n          break;\n          \n      }\n    }\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      sentenceCount++\n      if (sentenceCount > 6){\n          break;\n          \n      }\n    }\n  }\n  return 'It was a dark and stormy night, ' + output_text + '.';\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "comments": []
  },
  {
    "_id": "GpJe7R5ThejTqA67f",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T00:19:29.541Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5faaa03d2afaa6a4f795b89b132a20a1",
        "public_id": "avalanche2023spring/jmx7t7hjvrajck3llcbn",
        "version": 1683245990,
        "version_id": "d00e01c1eded7041f6c5165447faf8a8",
        "signature": "6c779019f7c95bdf311e5bffa92a6e9c10614992",
        "width": 676,
        "height": 646,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T00:19:50Z",
        "tags": [],
        "bytes": 9286,
        "type": "upload",
        "etag": "55d84f2fbc9d1738888e58a95057a2f3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683245990/avalanche2023spring/jmx7t7hjvrajck3llcbn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683245990/avalanche2023spring/jmx7t7hjvrajck3llcbn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T00:41:14.623Z" }
      }
    ],
    "title": "",
    "description": "Started building the walls of the castle, this took me some time but I got through it after watching a tutorial.",
    "comments": []
  },
  {
    "_id": "GpRYQAYYJoG6P6aq5",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": { "$date": "2023-02-03T15:49:18.232Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "56df54d229ee5c0edcb3c2a456792b0e",
        "public_id": "avalanche2023spring/uzmfe2auxnacfmyb9aex",
        "version": 1675439361,
        "version_id": "f348d83bae2a611aaf2ddcf9404740ac",
        "signature": "f53ec02ef8a2c78670cf20a30b2137e981f8fd43",
        "width": 595,
        "height": 842,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T15:49:21Z",
        "tags": [],
        "bytes": 412903,
        "type": "upload",
        "etag": "e0b40f8e4cc32261652812dafae4f103",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675439361/avalanche2023spring/uzmfe2auxnacfmyb9aex.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675439361/avalanche2023spring/uzmfe2auxnacfmyb9aex.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T17:15:42.64Z" }
      },
      {
        "voter_id": "ThhLMCZBENKtw2dT6",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T17:18:39.039Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "comments": [],
    "description": "Based on Graeme's instructions!"
  },
  {
    "_id": "GwvKommrXcKiLoEeX",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": { "$date": "2023-02-03T04:26:25.38Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f8840154e022ae2c17839515f074f51d",
        "public_id": "avalanche2023spring/tbkv2s4zowoeou4pjvrz",
        "version": 1675398605,
        "version_id": "b7101c713e3493bc2da8b80de49e69f9",
        "signature": "1cb2748a07e8d4e5394dd27075e09713238a00cb",
        "width": 3389,
        "height": 2400,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-03T04:30:05Z",
        "tags": [],
        "bytes": 1632631,
        "type": "upload",
        "etag": "f5b5364ca2397f3dbec0b969c2e54dbd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675398605/avalanche2023spring/tbkv2s4zowoeou4pjvrz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675398605/avalanche2023spring/tbkv2s4zowoeou4pjvrz.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T15:42:05.991Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Based on Keren's instruction set! :)",
    "comments": []
  },
  {
    "_id": "H7WEhjD2ony5DbXtW",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T05:49:00.485Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e198476c518158483008b9a6f95d51b9",
        "public_id": "avalanche2023spring/gbvmrg9dpjdunda9ikwb",
        "version": 1683265810,
        "version_id": "1e5ac27d4f1ab29b64b2167b01df7692",
        "signature": "b229d9b933aff225dd45e54a2afc2c871e13349f",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-05T05:50:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 6459642,
        "type": "upload",
        "etag": "e6c7088bcc13a60e179b8f4581952af2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683265810/avalanche2023spring/gbvmrg9dpjdunda9ikwb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683265810/avalanche2023spring/gbvmrg9dpjdunda9ikwb.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683265810/avalanche2023spring/gbvmrg9dpjdunda9ikwb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316685",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "6195774",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 6546934,
        "duration": 7.857854,
        "rotation": 0,
        "nb_frames": 471,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9600376ab14d733f065ab060454440c6",
        "public_id": "avalanche2023spring/xydbltnzllehomaurht3",
        "version": 1683265841,
        "version_id": "408c6db20c170d85611bf917f07f5d57",
        "signature": "c462cb3ad65205cf04f879d46a4331e58f1511e6",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-05T05:50:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 8093655,
        "type": "upload",
        "etag": "51c242c7e0dbb99ffc07e0168c53e322",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683265841/avalanche2023spring/xydbltnzllehomaurht3.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683265841/avalanche2023spring/xydbltnzllehomaurht3.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683265841/avalanche2023spring/xydbltnzllehomaurht3.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316764",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "6908578",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 7261054,
        "duration": 8.892229,
        "rotation": 0,
        "nb_frames": 533,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "104c3aecfb225a97503456a54cd75333",
        "public_id": "avalanche2023spring/r3udrfjtfinaexqn2pam",
        "version": 1683265860,
        "version_id": "72bc3f04099eca1ad84b8969add74c06",
        "signature": "c45605a812a2ed302ef974a97f297aed4feb6064",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T05:51:00Z",
        "tags": [],
        "bytes": 6469067,
        "type": "upload",
        "etag": "31b77ee9c8003404949a0f9879e4f0c7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683265860/avalanche2023spring/r3udrfjtfinaexqn2pam.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683265860/avalanche2023spring/r3udrfjtfinaexqn2pam.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:24.613Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:15:49.38Z" }
      }
    ],
    "title": "",
    "description": "not really 3D, but i did try to make this 2D sketch appear like it moves in 3D space.",
    "code": "let rects = []; //an array for the x and y positions of each shape\nlet rects1 = []; //anti-clockwise direction\nlet stepSize = 50;\n\n\nfunction setup() {\n  createCanvas(800, 800);\n  for (let i = 0; i < width; i++) {\n    rects.push({ x: i * stepSize, y: i * stepSize, angle: 0, delay: i * 500 }); \n  }\n  \n   for (let i = 0; i < width; i++) {\n    rects1.push({ x: width-i * stepSize, y: i * stepSize, angle: 0, delay: i * 500 });\n  }\n  rectMode(CENTER);\n  colorMode(HSB);\n  noStroke();\n}\n\nfunction draw() {\n  background(277,15,100);\n\n\nlet w = width/5;\nlet h = height/20;\n colorMode(HSB, 360, 100, 100, 1.0);\n  for (let i = 0; i < rects.length; i++) {\n    \n    const { x, y, angle, delay } = rects[i];\n    if (millis()*5 > delay) {\n      rects[i].angle += 1;\n    }\n    push();\n    translate(x, y);\n    rotate(radians(angle));\n      let colorValue = map(x, 0, rects.length, 290, 240); // map the index of the position to a color value\n    fill(colorValue, 60, 100,1);\n\n    rect(0, 0, w*angle*0.01, h);\n    pop();\n  }\n  \n\n for (let i = 0; i < rects1.length; i++) {\n    const { x, y, angle, delay } = rects1[i];\n    if (millis()*5 > delay) {\n      rects1[i].angle -= 1;\n    }\n    push();\n    translate(x, y);\n    rotate(radians(angle));\n    let colorValue = map(x, 0, rects.length, 240, 290); // map the index of the position to a color value\n    fill(colorValue, 60, 100,1);\n\n    rect(0, 0, w*angle*0.01, h);\n    pop();\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "H9bXAWNqHwWCBeeq7",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": { "$date": "2023-04-28T02:21:40.166Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f7d6d816b0e52f83334765f7505b3b9b",
        "public_id": "avalanche2023spring/lkjsyhxmkpwmdzkgnxlf",
        "version": 1682648655,
        "version_id": "5c65fd039eace9c01a7d8183e6531971",
        "signature": "2bc940be6c9de92969db6ff5be7d9a84064831c7",
        "width": 2784,
        "height": 1746,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-28T02:24:15Z",
        "tags": [],
        "bytes": 1695470,
        "type": "upload",
        "etag": "48fe3b6e2b4048a8b994d22877397d7d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682648655/avalanche2023spring/lkjsyhxmkpwmdzkgnxlf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682648655/avalanche2023spring/lkjsyhxmkpwmdzkgnxlf.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "902ddb85d525253df27e970af557d1fe",
        "public_id": "avalanche2023spring/wgs9ytovg6huamclsvhc",
        "version": 1682648657,
        "version_id": "71eafaaa9d9f7f30dad799ecd6b700db",
        "signature": "b35b5905cf3570480adb95f38d390e665ae33f98",
        "width": 2866,
        "height": 1575,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-28T02:24:17Z",
        "tags": [],
        "bytes": 1735318,
        "type": "upload",
        "etag": "c4377d90cd10c1185925a26defa845c8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682648657/avalanche2023spring/wgs9ytovg6huamclsvhc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682648657/avalanche2023spring/wgs9ytovg6huamclsvhc.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T03:08:41.207Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "Going analogue with a sketch because it's something I wanted to do for a while - this is watercolor on a black paper which gives a very interesting \"chalky\" effect. I find this particularly interesting because of how unusual it is compared to using water on regular white watercolor paper. I think watercolors are a great example of controlled randomness.",
    "comments": []
  },
  {
    "_id": "HBz6CuGwNGioDukmw",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T21:21:49.462Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6f23a5b89b3414251335b9e2dcd2a554",
        "public_id": "avalanche2023spring/fl8vna9kxxjgv5ae6iwb",
        "version": 1681420921,
        "version_id": "9abd2ba1be7a70bd9cb6e25fd2d614f9",
        "signature": "7fbbffa55834c3caec0732b1e91323e154c6f522",
        "width": 1478,
        "height": 524,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T21:22:01Z",
        "tags": [],
        "bytes": 213197,
        "type": "upload",
        "etag": "e68b3fd22dff2efa26c76f9f35b031d0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681420921/avalanche2023spring/fl8vna9kxxjgv5ae6iwb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681420921/avalanche2023spring/fl8vna9kxxjgv5ae6iwb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8285390e2dc3467bf992f4ba9cabe754",
        "public_id": "avalanche2023spring/dhkjjdglqr1bnvdxyxch",
        "version": 1681420926,
        "version_id": "839da1de565138602735b52ceca013be",
        "signature": "42a80bec441e978a1cdb19c218bd43783cd0d755",
        "width": 1478,
        "height": 540,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T21:22:06Z",
        "tags": [],
        "bytes": 227473,
        "type": "upload",
        "etag": "e809964f293654c5ca85c06027cb6334",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681420926/avalanche2023spring/dhkjjdglqr1bnvdxyxch.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681420926/avalanche2023spring/dhkjjdglqr1bnvdxyxch.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Some quite awful Markov Chain story generation with Abha and Shristi",
    "comments": []
  },
  {
    "_id": "HEdkpcWsSyErqkqNE",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T13:44:51.907Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c2345a49cb65b7336c5b04afde173822",
        "public_id": "avalanche2023spring/ktjyuoajapx8g6rq69oz",
        "version": 1681480030,
        "version_id": "c73be41b6d01e184969089a30be190ca",
        "signature": "b1b2d371bda5a1d2b1df10aa9ff3f3ff5028fc0a",
        "width": 512,
        "height": 750,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-14T13:47:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 367373,
        "type": "upload",
        "etag": "e44780ee6888bc3cb63777de6791d4eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681480030/avalanche2023spring/ktjyuoajapx8g6rq69oz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681480030/avalanche2023spring/ktjyuoajapx8g6rq69oz.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681480030/avalanche2023spring/ktjyuoajapx8g6rq69oz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "112084",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 113325,
        "duration": 25.933333,
        "rotation": 0,
        "nb_frames": 779,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T15:01:03.452Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:16:28.447Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:29:41.177Z" }
      }
    ],
    "title": "",
    "description": "Using reading Peephole as a way of understand ambience.",
    "code": "var img;\n\nfunction preload() {\n  img = loadImage(\"alice.png\");\n}\n\nfunction setup() {\n  createCanvas(720, 800);\n  pixelDensity(1);\n  img.loadPixels();\n  loadPixels();\n}\n\nfunction draw() {\n  for (var x = 0; x < img.width; x++) {\n    for (var y = 0; y < img.height; y++ ) {\n      // Calculate the 1D location from a 2D grid\n      var loc = (x + y*img.width)*4;\n      // Get the R,G,B values from image\n      var r,g,b;\n      r = img.pixels[loc];\n      // Calculate an amount to change brightness based on proximity to the mouse\n      var maxdist = 50;\n      var d = dist(x, y, mouseX, mouseY);\n      var adjustbrightness = 255*(maxdist-d)/maxdist;\n      r += adjustbrightness;\n      // Constrain RGB to make sure they are within 0-255 color range\n      r = constrain(r, 0, 255);\n      // Make a new color and set pixel in the window\n      //color c = color(r, g, b);\n      var pixloc = (y*width + x)*4;\n      pixels[pixloc] = r;\n      pixels[pixloc+1] = r;\n      pixels[pixloc+2] = r;\n      pixels[pixloc+3] = 255;\n    }\n  }\n  updatePixels();\n}",
    "comments": []
  },
  {
    "_id": "HJ4WQnDG3FbwEpwXa",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T20:58:59.696Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "14b04d3822cf8167c8d8084109b0143e",
        "public_id": "avalanche2023spring/bkhtejltwndw6qyd9xd9",
        "version": 1675717265,
        "version_id": "e21978a3dc09edba3040a1dfc9a6dfec",
        "signature": "eca0f81c5265cb3aeedef0da2d8fd95f0fb33df4",
        "width": 988,
        "height": 1432,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-06T21:01:05Z",
        "tags": [],
        "bytes": 100155,
        "type": "upload",
        "etag": "26c55ed99a875700c764f6dd4d483705",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675717265/avalanche2023spring/bkhtejltwndw6qyd9xd9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675717265/avalanche2023spring/bkhtejltwndw6qyd9xd9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T21:11:40.762Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T21:24:42.085Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T00:15:20.99Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T01:42:21.474Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T20:15:36.227Z" }
      }
    ],
    "title": "",
    "comments": [],
    "description": "Malevich-inspired Challenge"
  },
  {
    "_id": "HNsoqpnKwWRFMDriz",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T04:17:23.778Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c8a0a1917a3dbca5ea3b499e2d358b07",
        "public_id": "avalanche2023spring/zoflv6sdp2iasakd2xj9",
        "version": 1677817058,
        "version_id": "5c85ef353dce2cb723f1eadc2b619d8f",
        "signature": "e0997aeddbc80c28ca992000090a84d3c5516d88",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-03T04:17:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 4857432,
        "type": "upload",
        "etag": "21b684a28a9114a2d7499ba678e53222",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677817058/avalanche2023spring/zoflv6sdp2iasakd2xj9.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677817058/avalanche2023spring/zoflv6sdp2iasakd2xj9.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677817058/avalanche2023spring/zoflv6sdp2iasakd2xj9.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192105",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "1157340",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1353610,
        "duration": 28.660998,
        "rotation": 0,
        "nb_frames": 859,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T04:47:00.063Z" }
      }
    ],
    "title": "",
    "description": "my challenge 2 extension!",
    "comments": []
  },
  {
    "_id": "HZfht7Rf8HRD5qnZd",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T03:27:51.011Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7da45c9acf841aeb3fc2d6fd721207b6",
        "public_id": "avalanche2023spring/zpmcwhll09cepznculft",
        "version": 1683257276,
        "version_id": "aa2df3eaebf81ce0a366cdd4c4a287d4",
        "signature": "238904251fc7da9ee7daa22e87b55eeed892735b",
        "width": 2166,
        "height": 1330,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T03:27:56Z",
        "tags": [],
        "bytes": 135365,
        "type": "upload",
        "etag": "89852005a80e4e8e0a192e26cba7ccda",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683257276/avalanche2023spring/zpmcwhll09cepznculft.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683257276/avalanche2023spring/zpmcwhll09cepznculft.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8e472c55ae7fdb2f9ac1c80c610afd4e",
        "public_id": "avalanche2023spring/o2u98qjlvjccmaavuimg",
        "version": 1683257303,
        "version_id": "03049ecbdf530d4ab0d83eaf02266cd3",
        "signature": "05575ea0612128e15796d7f84996e470f4409bd0",
        "width": 2230,
        "height": 1366,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T03:28:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 10995237,
        "type": "upload",
        "etag": "234d9632470ec1722c7d7ef9df730df2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683257303/avalanche2023spring/o2u98qjlvjccmaavuimg.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683257303/avalanche2023spring/o2u98qjlvjccmaavuimg.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683257303/avalanche2023spring/o2u98qjlvjccmaavuimg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "15937071",
          "dar": "1115:683",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 15944753,
        "duration": 5.516667,
        "rotation": 0,
        "nb_frames": 273,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4f9d63d1d70cb1e43abc77b525936fcf",
        "public_id": "avalanche2023spring/pofl6z9l92kgtehghwre",
        "version": 1683257681,
        "version_id": "06be9f948ed68fd0ee2ce2c8b9a4fd64",
        "signature": "ae99e334df021f4032d9920648945c0b47a57b9d",
        "width": 1994,
        "height": 1332,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T03:34:41Z",
        "tags": [],
        "bytes": 114769,
        "type": "upload",
        "etag": "7a34764f1d438c93712717e7149d6276",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683257681/avalanche2023spring/pofl6z9l92kgtehghwre.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683257681/avalanche2023spring/pofl6z9l92kgtehghwre.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T04:31:31Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Disney's castle - Used sine waves to create varying tower heights",
    "comments": []
  },
  {
    "_id": "Hg8GzPh6ojkrnx6Jg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T00:20:05.147Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c6cf77e2fc74fb9121d34b19e1aafeae",
        "public_id": "avalanche2023spring/fhjyld0kqv7pjzgdwtcj",
        "version": 1675902014,
        "version_id": "ff9746dea8a7882bdcb8f9e76963b731",
        "signature": "4902266e15cdf95215c02353da0c82501c45284e",
        "width": 1930,
        "height": 1033,
        "format": "webm",
        "resource_type": "video",
        "created_at": "2023-02-09T00:20:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 13891302,
        "type": "upload",
        "etag": "e3c9f28353284e5e73d1abde699a4035",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675902014/avalanche2023spring/fhjyld0kqv7pjzgdwtcj.webm",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675902014/avalanche2023spring/fhjyld0kqv7pjzgdwtcj.webm",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "vp8",
          "level": -99,
          "profile": "0",
          "dar": "1930:1033",
          "time_base": "1/1000"
        },
        "frame_rate": 1000,
        "duration": 52.392,
        "rotation": 0,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-10T00:48:33.037Z" }
      }
    ],
    "title": "",
    "description": "This was a goofy pair sketch that I did with Graeme. Basically, we use a deck system to pick a series of Garfield panels and then put them side by side in a 1x3 comic strip. This led to some pretty funny comics that really didn't feel too far off from Garfield's vibe.",
    "code": "//I actually uploaded this site as a github microsite\n\n//look at the code: https://github.com/avs-codes/comp-form-spring-2023/tree/main/garfield_deck\n\n//look at the site: https://avs-codes.github.io/comp-form-spring-2023/garfield_deck/index.html",
    "comments": []
  },
  {
    "_id": "HgrLjt4sKEmkKkuPa",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T15:37:47.34Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ca79e117fe2ceb1ecdf76837ca3c9e8f",
        "public_id": "avalanche2023spring/mbhnz5dm1yyovwhrdr7s",
        "version": 1680882191,
        "version_id": "6b6395564f26dad28187be5442b6e77a",
        "signature": "db196bdca31292d54cae24f16302b3daf551ed33",
        "width": 395,
        "height": 397,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T15:43:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 2468895,
        "type": "upload",
        "etag": "9706775443a184a124c87e07f31d5086",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680882191/avalanche2023spring/mbhnz5dm1yyovwhrdr7s.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680882191/avalanche2023spring/mbhnz5dm1yyovwhrdr7s.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680882191/avalanche2023spring/mbhnz5dm1yyovwhrdr7s.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "Main",
          "bit_rate": "938368",
          "dar": "395:397",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 945031,
        "duration": 20.9,
        "rotation": 0,
        "nb_frames": 1254,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T16:08:15.556Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T20:35:54.151Z" }
      }
    ],
    "title": "",
    "description": "Help the flower grow 🥺\n\nI tried to reset the game when the user presses the spacebar, and it ended up doing something chaotic but kind of cute and fun. I'll figure out how to reset it properly, but just thought I should share the chaos.",
    "comments": []
  },
  {
    "_id": "HphHiK2QxL78HTTqe",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-21T04:46:45.458Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1fad8663a6fbcb801b0887a882f3809b",
        "public_id": "avalanche2023spring/pemmrm1q1araeksfdb65",
        "version": 1679374012,
        "version_id": "c1fb6bf562ee9d34518a399d39e556de",
        "signature": "c41e2630eecc8a57625989e5848797859810d6fb",
        "width": 1440,
        "height": 1403,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-21T04:46:52Z",
        "tags": [],
        "bytes": 1257385,
        "type": "upload",
        "etag": "85581e005f8efb8dd4199e96ccd18ba4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679374012/avalanche2023spring/pemmrm1q1araeksfdb65.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679374012/avalanche2023spring/pemmrm1q1araeksfdb65.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T07:08:19.563Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:15.817Z" }
      }
    ],
    "title": "",
    "description": "SVG output for Reshma. Had a lot of fun playing with star paths and colours.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar pathInner = [];\nvar pathOuter = [];\nvar radius1 = 7;\nvar col = [\n    'red',\n    'green',\n    'blue',\n    'yellow',\n    'orange',\n    'purple',\n    'cyan',\n    'magenta'\n];\nvar num = col.length;\nvar points = num*1.5;\n\nfor (i= 0; i<num; i++){\n    var radius2 = (radius1 * 30) + 20 + (i%num)*7;\n    pathOuter[i] = new Path.Star(view.center, points, radius1, radius2);\n    pathOuter[i].strokeColor = col[i];\n    // pathOuter[i].fillColor = col[i];\n    // pathOuter[i].blendMode = 'screen';\n    // pathOuter[i].opacity = 0.2;\n    pathOuter[i].rotate(i*360/(points*num));\n    pathOuter[i].smooth(1);\n}\n\nfor (i= 0; i<num; i++){\n    var radius2 = (radius1 * 30) - (i%num)*7;\n    pathInner[i] = new Path.Star(view.center, points, radius1, radius2);\n    pathInner[i].strokeColor = col[i];\n    // pathInner[i].fillColor = col[i];\n    // pathInner[i].blendMode = 'screen';\n    // pathInner[i].opacity = 0.2;\n    pathInner[i].rotate(i*360/(points*num));\n    pathInner[i].smooth(1);\n}",
    "comments": []
  },
  {
    "_id": "HxB4vSM2RRdRJ56Mh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T18:02:36.091Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d26233a0e135d9c82e3f4cdd53a1cace",
        "public_id": "avalanche2023spring/h56waxozg95qzhkuwy2j",
        "version": 1678384972,
        "version_id": "ae22e3e08d6de1fc6cc1b2e615a28331",
        "signature": "6c1925fa4a7daa6b99b2c77947257fcd677ed359",
        "width": 400,
        "height": 400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T18:02:52Z",
        "tags": [],
        "bytes": 521983,
        "type": "upload",
        "etag": "8f2f6caad93fc179d77185a9011d187d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678384972/avalanche2023spring/h56waxozg95qzhkuwy2j.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678384972/avalanche2023spring/h56waxozg95qzhkuwy2j.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:48.362Z" }
      }
    ],
    "title": "",
    "description": "Pixel generated sketch that I handed off to Alex for the pair challenge",
    "comments": [],
    "code": "function setup() {\n  createCanvas(400, 400);\n  pixelDensity(1);\n}\n\nfunction draw() {\n  loadPixels();\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      let index = (x + y * width) * 4;\n      let r = random(255);\n      let g = random(255);\n      let b = random(255);\n      let a = 255;\n      if (x % 20 == 0 || y % 20 == 0) {\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 255;\n      }\n      if (x % 40 == 0 || y % 40 == 0) {\n        r = 255;\n        g = 255;\n        b = 255;\n        a = 255;\n      }\n      if (x % 60 == 0 || y % 60 == 0) {\n        r = 255;\n        g = 0;\n        b = 0;\n        a = 255;\n      }\n      if (x % 80 == 0 || y % 80 == 0) {\n        r = 0;\n        g = 255;\n        b = 0;\n        a = 255;\n      }\n      pixels[index + 0] = r;\n      pixels[index + 1] = g;\n      pixels[index + 2] = b;\n      pixels[index + 3] = a;\n    }\n  }\n  updatePixels();\n}"
  },
  {
    "_id": "J3HBHkcYLDXSvys5L",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T08:28:42.809Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "70fa67559d5d50ff00bd2fea827ef780",
        "public_id": "avalanche2023spring/mzor9jbox78wl5lzeqmj",
        "version": 1681460963,
        "version_id": "8beb021c0f622cb50f94bed99271a196",
        "signature": "b1dd2f0458fa8b29f92ee88647acfe81738186d2",
        "width": 986,
        "height": 208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T08:29:23Z",
        "tags": [],
        "bytes": 70324,
        "type": "upload",
        "etag": "1e038fad65b47d8e86f7139e2563234d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681460963/avalanche2023spring/mzor9jbox78wl5lzeqmj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681460963/avalanche2023spring/mzor9jbox78wl5lzeqmj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "47cbf7715d20b307a38f29359f59c88e",
        "public_id": "avalanche2023spring/qffibesoycu7sph9hjb6",
        "version": 1681460967,
        "version_id": "07c8f0de17c8fb6c7ce47266b392af52",
        "signature": "61b3a09d2c1a365c934b6cb32da72b3a1872fc7a",
        "width": 878,
        "height": 196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T08:29:27Z",
        "tags": [],
        "bytes": 62057,
        "type": "upload",
        "etag": "5f6f63e0b1b2a2919b725e6952144737",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681460967/avalanche2023spring/qffibesoycu7sph9hjb6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681460967/avalanche2023spring/qffibesoycu7sph9hjb6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d071a27ef0d4f9f4d36ae104f0e9b991",
        "public_id": "avalanche2023spring/sxqmrbhlsndkkccpdgal",
        "version": 1681460970,
        "version_id": "77518e305ef9f1ae1ede8716c66027d9",
        "signature": "3a497c8bf96ab66ddfb9cc40515c080f42d6a73c",
        "width": 852,
        "height": 226,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T08:29:30Z",
        "tags": [],
        "bytes": 66361,
        "type": "upload",
        "etag": "3838c32066d4156088f4985540690e3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681460970/avalanche2023spring/sxqmrbhlsndkkccpdgal.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681460970/avalanche2023spring/sxqmrbhlsndkkccpdgal.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 10: (1/4): WHAT MY CAT DID GENERATOR. I swear I did something like this in a previous class so I just tried to do it again.",
    "comments": []
  },
  {
    "_id": "JAk9AcshZE6W5gfse",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T14:38:41.833Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2768e80b1ce5c18b1e9804d17cafc321",
        "public_id": "avalanche2023spring/vdpdep7tihnj91ba5b1f",
        "version": 1680273536,
        "version_id": "494a9c2d58b4d4afc67f4b45eda05961",
        "signature": "1d01a9cd2ac1519d17e076cf468339cef0d1f7a9",
        "width": 1512,
        "height": 1298,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T14:38:56Z",
        "tags": [],
        "bytes": 645301,
        "type": "upload",
        "etag": "792536630c6850a8e9a51ac18727834c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680273536/avalanche2023spring/vdpdep7tihnj91ba5b1f.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680273536/avalanche2023spring/vdpdep7tihnj91ba5b1f.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d41e9eab514bf657c724b865fb80263f",
        "public_id": "avalanche2023spring/zby4qmqhzjbkgc0qlmrj",
        "version": 1680273541,
        "version_id": "1497fada98fc330110d0d9b59a4f8da8",
        "signature": "2243e5c91640f9ae93f141fd756ac878df27a7a4",
        "width": 1588,
        "height": 1400,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T14:39:01Z",
        "tags": [],
        "bytes": 344807,
        "type": "upload",
        "etag": "06e7d32549774a12f34e802a645256ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680273541/avalanche2023spring/zby4qmqhzjbkgc0qlmrj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680273541/avalanche2023spring/zby4qmqhzjbkgc0qlmrj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bac1bbb23b6f08cc42029ab1952db15a",
        "public_id": "avalanche2023spring/jna1ox5prrjno6ti1oaj",
        "version": 1680273544,
        "version_id": "209e8a131e793887e30899a7dc7ee722",
        "signature": "3286462c8f420a5e7793fa2107b9ff25fe4bdd1f",
        "width": 1244,
        "height": 1252,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T14:39:04Z",
        "tags": [],
        "bytes": 222277,
        "type": "upload",
        "etag": "2f95841ce421948f33146299e487b874",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680273544/avalanche2023spring/jna1ox5prrjno6ti1oaj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680273544/avalanche2023spring/jna1ox5prrjno6ti1oaj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Logging 2 hours worth of failures across editors...a JOURNEY:\n1) tried to set up a polysynth activated on mouseclick on codePen. big whoops\n2) followed a tutorial to source libraries that together can set up an entire synth keyboard with interactive background...the html wouldn't load \n3) for whatever reason, even fft analyzing didn't work out for input audio so couldn't visualize music frequencies. (this one I might be able to figure out though!)",
    "comments": []
  },
  {
    "_id": "JAxr7XmeqxBaKiMxN",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T04:48:57.121Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "95facd2b014496ef9f62ca3a9646f2a2",
        "public_id": "avalanche2023spring/jrpzpl0ju1zcldqjqxec",
        "version": 1674969205,
        "version_id": "badbd53d7b7f069bd0cdaca9e306dbda",
        "signature": "f987157f5fda741eebbd626c67a51711ec932910",
        "width": 1221,
        "height": 782,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-29T05:13:25Z",
        "tags": [],
        "bytes": 178945,
        "type": "upload",
        "etag": "4c7df74e765eaa6a8b928bc15256bada",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674969205/avalanche2023spring/jrpzpl0ju1zcldqjqxec.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674969205/avalanche2023spring/jrpzpl0ju1zcldqjqxec.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Instruction set for John and Graeme!\nHappy creating :)",
    "comments": []
  },
  {
    "_id": "JDLZoHpyJjo8ysHF9",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T07:51:19.694Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4663d7ed0a2e6ed4a3f9049346674074",
        "public_id": "avalanche2023spring/kiqud25pgqjbsw27es8a",
        "version": 1683878128,
        "version_id": "c7c07d5a0c1690cce45f03911141f3d1",
        "signature": "fdd4a0ff78f2344b86510d38ad337930fe1e1a0c",
        "width": 894,
        "height": 896,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T07:55:28Z",
        "tags": [],
        "bytes": 301772,
        "type": "upload",
        "etag": "f247d0254c3478aec91cef311e894a3a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683878128/avalanche2023spring/kiqud25pgqjbsw27es8a.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683878128/avalanche2023spring/kiqud25pgqjbsw27es8a.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "186acfcfa7983f7d79f998ccfef74dd1",
        "public_id": "avalanche2023spring/w4wtsmyllicpffrmysce",
        "version": 1683878134,
        "version_id": "1e8432df2859a964c97d78465772d65e",
        "signature": "956c8edee6afc6e089ac60fc9a0d203ef287c17e",
        "width": 900,
        "height": 896,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T07:55:34Z",
        "tags": [],
        "bytes": 623353,
        "type": "upload",
        "etag": "467105390b05d12b0122e700c3d7925b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683878134/avalanche2023spring/w4wtsmyllicpffrmysce.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683878134/avalanche2023spring/w4wtsmyllicpffrmysce.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "29c627be890cc42eb23f757ec371e33e",
        "public_id": "avalanche2023spring/lwu47xpxa9mqnszt8t7i",
        "version": 1683878149,
        "version_id": "b861d9d6ad89199540cdf5e5753214f3",
        "signature": "11fa1fa4cef68b27a5592472f3299b74c264f561",
        "width": 892,
        "height": 896,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T07:55:49Z",
        "tags": [],
        "bytes": 253167,
        "type": "upload",
        "etag": "55414a881bca7b52ea8adaa53f640dc7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683878149/avalanche2023spring/lwu47xpxa9mqnszt8t7i.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683878149/avalanche2023spring/lwu47xpxa9mqnszt8t7i.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:16:38.321Z" }
      }
    ],
    "title": "",
    "description": "Played around with Comp Form alum Angela Zhu's code because the forms they'd made were beautiful I just had to try!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup(){\n    createCanvas(600, 600);\n    noFill();\n    //stroke(255);\n    background(0);\n    noLoop();\n    myTurtle = new Turtle();\n}\n\nfunction draw(){\n\n      for (let n = 0; n < 30; n++ ){\n        Umbrella(); \n        // myTurtle.turnLeft(-70);\n        // Umbrella();\n        // myTurtle.turnRight(70);\n     }\n}\n\nfunction Umbrella(){\n    \n    myTurtle.pushState();\n    strokeWeight(1.5)\n    //stroke('#F4F269')\n    myTurtle.popState();\n    \n    myTurtle.penUp();\n    myTurtle.moveTo(300, 300);\n    myTurtle.penDown();\n    \n    \n    stroke('#DBCBD8')\n    for (let i = 0; i < 28; i++){\n        myTurtle.moveForward(10);\n        myTurtle.turnRight(6);\n        \n    }\n    stroke('#564787')\n    for (let i = 0; i < 30; i++){\n        myTurtle.moveBackward(3);\n        myTurtle.turnRight(-2);\n    }\n    \n    stroke('#6B40E0')\n    for (let i = 0; i < 28; i++){\n        myTurtle.moveForward(5);\n        myTurtle.turnRight(-2);\n    }\n    stroke('#ECCEFF')\n    for (let i = 0; i < 30; i++){\n        myTurtle.moveBackward(6);\n        myTurtle.turnLeft(-2);\n    }\n\n}",
    "comments": [],
    "inspiration_name": "Angela Zhu",
    "inspiration_url": "https://sketches2022fall.compform.net/"
  },
  {
    "_id": "JRmdjgaEf8YnbBveZ",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T03:19:31.996Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c10c4ed9991cdd9a5eb5d0f9cf1274bc",
        "public_id": "avalanche2023spring/qeoxgn9fjmkhbabgo1jv",
        "version": 1679627990,
        "version_id": "4f9560f8fee417e8ed3b169e7f52e57d",
        "signature": "7546542d577a0587642874d38dd4d30980c3638b",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-24T03:19:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 2153230,
        "type": "upload",
        "etag": "bf821dfc0ff4d8910b0ec81da546b6ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679627990/avalanche2023spring/qeoxgn9fjmkhbabgo1jv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679627990/avalanche2023spring/qeoxgn9fjmkhbabgo1jv.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679627990/avalanche2023spring/qeoxgn9fjmkhbabgo1jv.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192203",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "1038862",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1235624,
        "duration": 13.9,
        "rotation": 0,
        "nb_frames": 417,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:01.01Z" }
      }
    ],
    "title": "",
    "description": "experimenting with blend modes in paper.js",
    "comments": []
  },
  {
    "_id": "JbcFPwaWyHuw4tSMK",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T16:03:13.692Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a02fe10467fb6d23139c6817865549d4",
        "public_id": "avalanche2023spring/qe7wvlqnu6qj9e8sra5k",
        "version": 1683907402,
        "version_id": "cc77fe6f70cd1a4eb56891eaaa1a02d0",
        "signature": "043e2406bfd01e5a7c4ef63db8c148846b05a8d5",
        "width": 1152,
        "height": 626,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T16:03:22Z",
        "tags": [],
        "bytes": 128413,
        "type": "upload",
        "etag": "79309d24ad1c07975129fa894b04da45",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683907402/avalanche2023spring/qe7wvlqnu6qj9e8sra5k.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683907402/avalanche2023spring/qe7wvlqnu6qj9e8sra5k.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My turtle garden! These flowers are more of a flower / lollipop hybrid. lol. I would like to add some element of randomness to the height of the stem and petals. I would also probably add some more detail to the stem. WOO GO COMP FORM!",
    "comments": []
  },
  {
    "_id": "JeyYNNGRryCuC3SDF",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "API",
    "created_at": { "$date": "2023-04-25T21:59:14.605Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "38d1132c6d42757d316f71133db1a033",
        "public_id": "avalanche2023spring/kjgq3ca4fyboqfhjwttu",
        "version": 1682459968,
        "version_id": "021b8ba72dc3a5a6d530a3da8fd0a18e",
        "signature": "913d0ee2430f1b64a2e039b55723428d46168408",
        "width": 897,
        "height": 897,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-25T21:59:28Z",
        "tags": [],
        "bytes": 192093,
        "type": "upload",
        "etag": "df287320725c520180cc06ed6a06e105",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682459968/avalanche2023spring/kjgq3ca4fyboqfhjwttu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682459968/avalanche2023spring/kjgq3ca4fyboqfhjwttu.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T02:27:41.665Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T03:10:24.149Z" }
      }
    ],
    "title": "",
    "description": "Using this week as a free week to re-explore some past topics. I wanted to re-delve into the play chapter and continue exploring that a bit more. This sketch though didn't really go anywhere unfortunately, thinking I may expand on this if I have some inspiration later this week.",
    "code": "let sprite;\nlet velocity;\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  boxleft = new Sprite();\n  boxleft.x = 15;\n  boxleft.width = 15;\n  boxleft.height = 500;\n  boxleft.collider = 'static';\n  \n  boxright = new Sprite();\n  boxright.x = 585;\n  boxright.width = 15;\n  boxright.height = 500;\n  boxright.collider = 'static';\n  \n  boxup = new Sprite();\n  boxup.y = 15;\n  boxup.width = 500;\n  boxup.height = 15;\n  boxup.collider = 'static';\n  \n  boxdown = new Sprite();\n  boxdown.y = 585;\n  boxdown.width = 500;\n  boxdown.height = 15;\n  boxdown.collider = 'static';\n}\n\nfunction draw() {\n  background(220);\n  \n  sprite = new Sprite();\n  sprite.width = 50;\n  sprite.height = 50;\n  \n  sprite.x = mouseX;\n  sprite.y = mouseY;\n  sprite.rotation = 30 + frameCount;\n  \n  for(i = 0; i < width; i++){\n    velocity = i * noise(i) / 25;\n    \n    sprite.vel.x = random(-velocity, velocity);\n    sprite.vel.y = random(-velocity, velocity);\n  }\n  \n  if(sprite.collides(boxup)) {\n    sprite.remove();\n  }\n}\n\nfunction mousePressed() {\n  noLoop();\n}\n\nfunction mouseReleased() {\n  loop();\n}",
    "comments": []
  },
  {
    "_id": "JfL3Bkh24zo6XACaP",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T14:10:51.816Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2e32b8acf7dcb19aa85116de1845a0ed",
        "public_id": "avalanche2023spring/sds4p168optqqwr4ehqz",
        "version": 1681481477,
        "version_id": "09702c24fdb24a4c3bba361a787387d9",
        "signature": "664be0b055f2bed55316414b889b4e3be4aca50b",
        "width": 2178,
        "height": 1448,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T14:11:17Z",
        "tags": [],
        "bytes": 136774,
        "type": "upload",
        "etag": "9b75360f6ed619ad150ceb80d0f5c7b0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681481477/avalanche2023spring/sds4p168optqqwr4ehqz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681481477/avalanche2023spring/sds4p168optqqwr4ehqz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "521a6f559565e0ee71a4f4c55f4e5f91",
        "public_id": "avalanche2023spring/quksbmbnqmwgh5jrpffd",
        "version": 1681481487,
        "version_id": "a63f3884056b8a66b77c409ed4f3c3b3",
        "signature": "ce09eb6e62bc2a94ed7b482afb7db5ce2ee0a815",
        "width": 2194,
        "height": 1462,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T14:11:27Z",
        "tags": [],
        "bytes": 141301,
        "type": "upload",
        "etag": "eaff0b150aaa2bc83f918762b64cbefd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681481487/avalanche2023spring/quksbmbnqmwgh5jrpffd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681481487/avalanche2023spring/quksbmbnqmwgh5jrpffd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "14a7e25f15a482a7307aa433a9de58a4",
        "public_id": "avalanche2023spring/od0fu3ns7cazflag6ywj",
        "version": 1681481509,
        "version_id": "e14a0fd20aae6bafd4dfaf9e717dd16a",
        "signature": "b8860097cb874133c39fe751f1153e03e9d5fc53",
        "width": 2160,
        "height": 1374,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T14:11:49Z",
        "tags": [],
        "pages": 0,
        "bytes": 3881226,
        "type": "upload",
        "etag": "96448a45a924d2a3d2cbbf791c977726",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681481509/avalanche2023spring/od0fu3ns7cazflag6ywj.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681481509/avalanche2023spring/od0fu3ns7cazflag6ywj.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681481509/avalanche2023spring/od0fu3ns7cazflag6ywj.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126560",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "896922",
          "dar": "360:229",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1032126,
        "duration": 30.083333,
        "rotation": 0,
        "nb_frames": 1805,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T15:01:00.913Z" }
      }
    ],
    "title": "",
    "description": "Oh how I love lit exterminators! I made a little design prompt generator.",
    "comments": []
  },
  {
    "_id": "JhAXPxWN8cEzvfntg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-18T05:43:54.979Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "608d637f024497705cc6b4876f5c966f",
        "public_id": "avalanche2023spring/cpipfirjppnn8p5lfty8",
        "version": 1681796644,
        "version_id": "e4c46213ca7a1f0d769c73dc64651b17",
        "signature": "0876cfe2ba60773e63c8227f5115766e7e6d6c9c",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-18T05:44:04Z",
        "tags": [],
        "bytes": 487559,
        "type": "upload",
        "etag": "85d76e819c693e4bebedb9641977ab31",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681796644/avalanche2023spring/cpipfirjppnn8p5lfty8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681796644/avalanche2023spring/cpipfirjppnn8p5lfty8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "459f8bb9656549b3142225bc3c2fdd48",
        "public_id": "avalanche2023spring/v62kpiedqsn9r0w1x6ff",
        "version": 1681796649,
        "version_id": "90bb7becc4b53250fc23dd098132007e",
        "signature": "51db0fca2b68ef0dd21e307d1f531687b14956d6",
        "width": 1685,
        "height": 750,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-18T05:44:09Z",
        "tags": [],
        "bytes": 82024,
        "type": "upload",
        "etag": "01a30e29249ec7561d06effc11f7c890",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681796649/avalanche2023spring/v62kpiedqsn9r0w1x6ff.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681796649/avalanche2023spring/v62kpiedqsn9r0w1x6ff.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T06:14:45.926Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T18:00:25.517Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T19:24:56.691Z" }
      }
    ],
    "title": "",
    "description": "I was really curious about how helpful ChatGPT might be in other applications I use. I like to work in TouchDesigner and thought it might be a good challenge so I opted for that. I went for the intermediate task of building a small hillside. \n\nInitially, it was quite fascinating that GPT was able to tell me the different operator types and the specific ones that I would need in order to create the effect of a hillside. However, it very quickly started to break down. \n\nFirstly, it started inventing new operators that aren't in the software 😭. It also got the purposes of several operators wrong which made the process quite annoying overall. \n\nWhat worked incredibly well though, was understanding abstractly the approach I needed and then just using my TouchDesigner knowledge to implement it.",
    "comments": []
  },
  {
    "_id": "JhbdRCzn3XhoZwn2x",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-03T17:33:39.377Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "62a7d87b3c55ace722cbaa9c9c4386be",
        "public_id": "avalanche2023spring/zoonf2o265pxslxx14tz",
        "version": 1683135231,
        "version_id": "aae4f2223abf54c6db7ee80d4dcaadee",
        "signature": "c7dd5271b4e805aac223e6fec4da0971dc4e4c3c",
        "width": 906,
        "height": 804,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T17:33:51Z",
        "tags": [],
        "bytes": 42630,
        "type": "upload",
        "etag": "ccc515bbe0fdf142b4941c04963ca316",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683135231/avalanche2023spring/zoonf2o265pxslxx14tz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683135231/avalanche2023spring/zoonf2o265pxslxx14tz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "33d38d799e4e37192ab4c7fb722762b4",
        "public_id": "avalanche2023spring/vbdltsxgqmmsk2qjtj4z",
        "version": 1683135233,
        "version_id": "c62c2136b7066e8ed005eb35f356f61d",
        "signature": "3bfe34cc5c5102ce02b8d5c2a3bd950824e0292a",
        "width": 1036,
        "height": 912,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T17:33:53Z",
        "tags": [],
        "bytes": 54250,
        "type": "upload",
        "etag": "daa8b4ccbecdb4688e99bc6e90a251c4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683135233/avalanche2023spring/vbdltsxgqmmsk2qjtj4z.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683135233/avalanche2023spring/vbdltsxgqmmsk2qjtj4z.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3bdeb58f4fdc463c7fc475d784c05d05",
        "public_id": "avalanche2023spring/tlndc24y8vlwfdlgsoeh",
        "version": 1683135236,
        "version_id": "dc334a1f9753d8b80625514eb367789c",
        "signature": "06fce2cf223b1c71ca486dfc12bfe4d05a2cbfe1",
        "width": 774,
        "height": 876,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T17:33:56Z",
        "tags": [],
        "bytes": 41492,
        "type": "upload",
        "etag": "ca36a3b06b43737dfbc56f7b20f39871",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683135236/avalanche2023spring/tlndc24y8vlwfdlgsoeh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683135236/avalanche2023spring/tlndc24y8vlwfdlgsoeh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T19:35:57.119Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:45.684Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-04T05:08:09.526Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T00:55:03.027Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T01:39:56.512Z" }
      }
    ],
    "title": "",
    "description": "Made a \"friend\" for the minecraft chickens... 🦊😋",
    "comments": []
  },
  {
    "_id": "JigpKaNMrNdCzR2sM",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "API",
    "created_at": { "$date": "2023-04-25T23:35:58.004Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "JimFHnuKjiH8uffPX",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T19:45:29.433Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6e19593d3a4e54cf465bbd7c7201fcaf",
        "public_id": "avalanche2023spring/tddubpuy9layx7bhhh4h",
        "version": 1675021571,
        "version_id": "9731b5b411ced3a2addfc0bf6e6a85c0",
        "signature": "ce3fc6de3593902331c38a527b37e5a2906146e2",
        "width": 2909,
        "height": 2480,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-29T19:46:11Z",
        "tags": [],
        "bytes": 350385,
        "type": "upload",
        "etag": "5ab732623857dedd01a24a4d02204308",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675021571/avalanche2023spring/tddubpuy9layx7bhhh4h.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675021571/avalanche2023spring/tddubpuy9layx7bhhh4h.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-30T01:55:07.764Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T09:40:14.173Z" }
      }
    ],
    "title": "",
    "description": "This is my interpretation of Isha's instructions!😃",
    "comments": []
  },
  {
    "_id": "Jp5r9fSqpbS4yx4z9",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": { "$date": "2023-02-10T02:40:22.923Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e28c4e968f798372a423938fb160dde5",
        "public_id": "avalanche2023spring/lp0kyyay9ii8gg8u6txe",
        "version": 1675997118,
        "version_id": "abcb9e44d14c6e74b5aadefb0aba8124",
        "signature": "080ed18dbab8eeed3719c42a5b5d61dc828236f2",
        "width": 695,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T02:45:18Z",
        "tags": [],
        "bytes": 251627,
        "type": "upload",
        "etag": "21f68d7f0c5c01f29975adac642395b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675997118/avalanche2023spring/lp0kyyay9ii8gg8u6txe.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675997118/avalanche2023spring/lp0kyyay9ii8gg8u6txe.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a2edc594a8451d74ec29a9b717fae4ee",
        "public_id": "avalanche2023spring/azfpf4fdhjeu3pevow54",
        "version": 1675997126,
        "version_id": "daa87a35cabf25fd33c0373583738183",
        "signature": "8a4e60f4ff946afabbaf600d43011b7384ad7c7a",
        "width": 695,
        "height": 783,
        "format": "webm",
        "resource_type": "video",
        "created_at": "2023-02-10T02:45:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 145843,
        "type": "upload",
        "etag": "ba79849c01c965d109f1e71b4fc69a1d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675997126/avalanche2023spring/azfpf4fdhjeu3pevow54.webm",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675997126/avalanche2023spring/azfpf4fdhjeu3pevow54.webm",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "vp8",
          "level": -99,
          "profile": "0",
          "dar": "695:783",
          "time_base": "1/1000"
        },
        "frame_rate": 17,
        "duration": 14.353,
        "rotation": 0,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "223261c8979b964a0a9414a21c1b14dd",
        "public_id": "avalanche2023spring/p1ptwh3aa3tgednjijkc",
        "version": 1675997128,
        "version_id": "821d17d676d715f9e2ed7d2db3eed26d",
        "signature": "0221e8a07f4f81c0f681a70a9789f5cc942c0865",
        "width": 695,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T02:45:28Z",
        "tags": [],
        "bytes": 370472,
        "type": "upload",
        "etag": "5fb378f087239971528ea5903470b7d1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675997128/avalanche2023spring/p1ptwh3aa3tgednjijkc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675997128/avalanche2023spring/p1ptwh3aa3tgednjijkc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "lesson": "Random",
    "title": "",
    "description": "Improved my initial Rothko Sketch! I just added some functionality to draw a few thousand circles with filled randomly according to the box they fill in. I also used an erode and blur filter to get some really interesting textures! I am also now a firm believer HSL is hands down the best color mode.",
    "code": "// I opted to use a class just because I find them more convenient to work with\nclass rothkoGenerator {\n\t\tconstructor() {\n//\t\t\tthis.rectCount = math.floor(math.random()+2);\n//this is where the coinflip is made to choose between a high or low contrast composition\n\t\t\tthis.paletteContrast = round(random());\n\t\t\tthis.colorList = [];\n//i then track the color values in the constructor\t\t\t\n          this.bkgColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.oneColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.twoColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n// I also want to implement the possibility for compositions with 3 rectangles but not quite there!          \n//\t\t\tthis.threeColor = {\n//\t\t\t\th: 0,\n//\t\t\t\ts: 0,\n//\t\t\t\tl: 0\n//\t\t\t}\n            this.oneBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }\n            this.twoBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }          \n\t\t\tthis.margin = 50;\n\t\t}\n// this could definitely be optimized but the basic idea is that I generate a random background color\n// I cap the saturation at 80 and light at 90 so the program doesn't get super neon colors which isn't like Rothko\n\t\tgenerateColors() {\n\t\t\tthis.bkgColor.h = floor(random()*360);\n\t\t\tthis.bkgColor.s = floor(random()*80);\n\t\t\tthis.bkgColor.l = floor(random()*80);\n// then, dependent on the contrast value I produce the colors for the two rectangles based off of the background color\n//a high-contrast composition uses end bias for the color whereas a low-contrast composition uses middle bias\n          if (this.paletteContrast === 1) {\n\t\t\tthis.oneColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t} else {\n\t\t\tthis.oneColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t}\n\t\t}\n  \n\t\tendBias() {\n\t\t\tlet value = random() + random();  \n\t\t\tvalue = value - 1;\n\t\t\tif (value < 0) value += 2;\n\t\t\treturn value;\n\t\t}\n  \n\t\tmiddleBias() {\n\t\t\tlet value = (random() + random() + random()) / 2;\n\t\t\treturn value;\n        }\n  // this is just a way to randomize the position of the line that bounds the two rectangles       \n        divideCanvas() {\n          this.oneBox.yMiddle = floor(windowHeight / 2) + (this.endBias()*100);\n          this.twoBox.yMiddle = windowHeight-(floor(windowHeight / 2) - this.oneBox.yMiddle);\n        }\n  //this is a function i use to create uneven texture in the final composition\n  //build off of Chris' idea of using many circles of a light opacity to blend them together\n        texturize() {\n            let randDiameter = random()*20+10;\n          for (let i=0; i<2000; i++) {\n            \n            \n            let randOneBoxX = (random() * (windowWidth - this.margin*1.5)) + (this.margin/2 + randDiameter/2);\n            let randOneBoxY = (random() * ((this.oneBox.yMiddle - randDiameter))) + (this.margin/2 + randDiameter/2); \n            \n            let oneBoxCircleColorH = floor(this.middleBias()*3+this.oneColor.h);\n\t\t\tlet oneBoxCircleColorS = floor(this.middleBias()*5+this.oneColor.s+2);\n\t\t\tlet oneBoxCircleColorL = floor(this.middleBias()*5+this.oneColor.l+2);\n            \n            fill(oneBoxCircleColorH, oneBoxCircleColorS, oneBoxCircleColorL, 40);\n            circle(randOneBoxX, randOneBoxY, randDiameter);\n          }\n            for (let i=0; i<1000; i++) {\n            let randTwoBoxX = (random() * (windowWidth - this.margin*1.5)) + (this.margin/2 + randDiameter/2);\n            //line 101-102 single-handedly took me the longest to solve. Damn math puzzles >:(\n            let twoBoxHeight = ( ( windowHeight - this.oneBox.yMiddle - (this. margin * 2)  ));\n            let randTwoBoxY = random() * twoBoxHeight + this.oneBox.yMiddle + this.margin;\n            \n            let twoBoxCircleColorH = floor(this.middleBias()*3+this.twoColor.h);\n\t\t\tlet twoBoxCircleColorS = floor(this.middleBias()*5+this.twoColor.s+2);\n\t\t\tlet twoBoxCircleColorL = floor(this.middleBias()*5+this.twoColor.l+2);\n            \n            fill(twoBoxCircleColorH, twoBoxCircleColorS, twoBoxCircleColorL, 40);\n            circle(randTwoBoxX, randTwoBoxY, randDiameter);\n                                                                                                   \n          }\n        }\n  //  here is where the rectangles are actually drawn and filled in\n  // I used quad() so I could be more granular with each point of the rectangle\n        draw() {\n          background(this.bkgColor.h, this.bkgColor.s, this.bkgColor.l);\n          noStroke()\n          fill(this.oneColor.h, this.oneColor.s, this.oneColor.l);\n          quad(this.margin, this.margin, \n               windowWidth - this.margin, this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle, \n               this.margin, this.oneBox.yMiddle\n              );\n          \n          fill(this.twoColor.h, this.twoColor.s, this.twoColor.l);\n          quad(this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, windowHeight - this.margin, \n               this.margin, windowHeight - this.margin\n              );\n          filter(BLUR, 3)\n        }\n          \n\t}\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tcolorMode(HSL);\n    frameRate(0.5);\n}\n\nfunction draw() {\n    let rothko = new rothkoGenerator();\n    rothko.generateColors();\n    rothko.divideCanvas();\n    rothko.draw();\n    rothko.texturize();\n    for(let i = 0; i<6; i++)  {\n      filter(ERODE);\n\n    }\n    filter(BLUR, 1);\n}",
    "comments": []
  },
  {
    "_id": "JsMvLdT5d34M2P6Z4",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-16T00:45:27.824Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "91472f4f33aaffb156861c17196cf71b",
        "public_id": "avalanche2023spring/cz55qbrmjwt2vuyuiqwy",
        "version": 1681606028,
        "version_id": "471d31673bc819068413f3134298ed7a",
        "signature": "225d56f074fdc06b6db34801e723bbbf7f25c071",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-16T00:47:08Z",
        "tags": [],
        "bytes": 1264507,
        "type": "upload",
        "etag": "453402ef4300e9399cd2abd475b6000f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681606028/avalanche2023spring/cz55qbrmjwt2vuyuiqwy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681606028/avalanche2023spring/cz55qbrmjwt2vuyuiqwy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d93024b82b0ce5793166061af5e4850d",
        "public_id": "avalanche2023spring/egxqtggqiyki366jz8xc",
        "version": 1681606030,
        "version_id": "439ba2e7bec96c99de3b339ba5764b6c",
        "signature": "9c2b8ab8790cb312bf3e443d1015f0f2a3dfd060",
        "width": 1034,
        "height": 1034,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-16T00:47:10Z",
        "tags": [],
        "bytes": 1185685,
        "type": "upload",
        "etag": "fbfb5f35e41468dc7a3e4695910c501b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681606030/avalanche2023spring/egxqtggqiyki366jz8xc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681606030/avalanche2023spring/egxqtggqiyki366jz8xc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e06c67b8ff45e509b90002ca4706b4f1",
        "public_id": "avalanche2023spring/pjlypez8ziyparlwbe00",
        "version": 1681606032,
        "version_id": "60df5cbd6007706a06f82befb4a5efd5",
        "signature": "8ec2c0eb311ae817214fedd66d5d1aeffb387ade",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-16T00:47:12Z",
        "tags": [],
        "bytes": 1438039,
        "type": "upload",
        "etag": "8089b99355e776f44d291c0ce0cad26f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681606032/avalanche2023spring/pjlypez8ziyparlwbe00.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681606032/avalanche2023spring/pjlypez8ziyparlwbe00.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-16T15:53:21.806Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-16T21:24:26.815Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T01:15:55.728Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T07:15:24.846Z" }
      }
    ],
    "title": "",
    "description": "Some of my favourite images from playing around on Midjourney.  \n  \nAll images are from a variation of the prompt \"close up of nose, wacky nose, brown woman, cartoon, abstract art, ai art, computationally generated art, unrealistic, alien features, human, close up, weird expression, droopy eyes, happy face, sparkling, rich, bluish purple light, zoomed in, red hair.\"   \n  \n \nSome observations:  \n• when I said 'eyes not visible', it gave me even more prominent eyes  \n• default images were always white men until I specified that I didn't want them to be  \n• variations became more and more similar the more detailed prompts I gave",
    "comments": []
  },
  {
    "_id": "JzjJ8Rdw2igK5tLXm",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T04:17:29.122Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dc0b8672f0efbd4a38084d024e221fd5",
        "public_id": "avalanche2023spring/pnfimhhq8buh3brufb0m",
        "version": 1677212445,
        "version_id": "efb8d1a9b588a3258c8a68dce246716a",
        "signature": "7c2c74e767550edde47c02bc70e99633d1a0325d",
        "width": 640,
        "height": 372,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T04:20:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 8473139,
        "type": "upload",
        "etag": "9743d10faae109519253be41152659e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677212445/avalanche2023spring/pnfimhhq8buh3brufb0m.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677212445/avalanche2023spring/pnfimhhq8buh3brufb0m.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677212445/avalanche2023spring/pnfimhhq8buh3brufb0m.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Main",
          "bit_rate": "2503113",
          "dar": "160:93",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2508113,
        "duration": 27.026333,
        "rotation": 0,
        "nb_frames": 781,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a545e380b61040eab8aef633389c5b49",
        "public_id": "avalanche2023spring/jvg5b1bemvsfhlvsedwp",
        "version": 1677213067,
        "version_id": "7ebb302a7d4910559da58fb0a94b8f4c",
        "signature": "36df50d1c394b4b7fe7f40022dffb898df334036",
        "width": 2546,
        "height": 1354,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T04:31:07Z",
        "tags": [],
        "bytes": 1766765,
        "type": "upload",
        "etag": "87b0213d1573bba568d832284dd602bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677213067/avalanche2023spring/jvg5b1bemvsfhlvsedwp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677213067/avalanche2023spring/jvg5b1bemvsfhlvsedwp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "78ff396c79da9cda4470e0604dcf4a81",
        "public_id": "avalanche2023spring/gmvd5c2o7v0iqflrm2nx",
        "version": 1677213073,
        "version_id": "29d3984196edb77254f79b886b85a88c",
        "signature": "4326bb4df521ddd38280660ea86e682d8f9eb630",
        "width": 2552,
        "height": 1350,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T04:31:13Z",
        "tags": [],
        "bytes": 4983262,
        "type": "upload",
        "etag": "862706faa5758bfc694df58add02b21d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677213073/avalanche2023spring/gmvd5c2o7v0iqflrm2nx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677213073/avalanche2023spring/gmvd5c2o7v0iqflrm2nx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T14:21:52.605Z" }
      }
    ],
    "title": "",
    "description": "I was inspired by our in-class spiral activity and tried to integrate it with parameters. I found a few online references as a starting point and played around with the code to create this",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love this! Please share the code if you can...",
        "created_at": { "$date": "2023-02-24T14:27:10.317Z" }
      }
    ]
  },
  {
    "_id": "KCg3pJhqac575vNvf",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T03:19:48.496Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5caab1935f173df824c98f74fc0b5066",
        "public_id": "avalanche2023spring/xvhi82rvwkeka0z0ca98",
        "version": 1676604011,
        "version_id": "13c5458e4371e5f6639bf9649aea6eff",
        "signature": "462252e3986175664b6685fca50ea401e70e441d",
        "width": 1735,
        "height": 1735,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T03:20:11Z",
        "tags": [],
        "bytes": 4742832,
        "type": "upload",
        "etag": "d4f4ff8c29bb131ee73a905dad8456e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676604011/avalanche2023spring/xvhi82rvwkeka0z0ca98.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676604011/avalanche2023spring/xvhi82rvwkeka0z0ca98.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3bc1ef7459769e18651dbecb8ec582a6",
        "public_id": "avalanche2023spring/ybj0tvdtd8iylkqdua9r",
        "version": 1676604045,
        "version_id": "ddfdc822c4d727fb08bf759da315cb54",
        "signature": "373715178ba1d8bec7b39c05b41c6aa81f64f76e",
        "width": 960,
        "height": 962,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T03:20:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 15562331,
        "type": "upload",
        "etag": "f3a29e45e1d9575120a697b177d0fc97",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676604045/avalanche2023spring/ybj0tvdtd8iylkqdua9r.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676604045/avalanche2023spring/ybj0tvdtd8iylkqdua9r.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676604045/avalanche2023spring/ybj0tvdtd8iylkqdua9r.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "13331875",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 14670199,
        "duration": 8.4865,
        "rotation": 0,
        "nb_frames": 535,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:39:21.223Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:54:22.413Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:00:38.765Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge: I loved the sketch that Reshma sent me, this is my reinterpretation of it. I had a lot of fun compositing!",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Crazy!",
        "created_at": { "$date": "2023-02-17T03:36:27.221Z" }
      }
    ]
  },
  {
    "_id": "KFpJkj9Gd5y2oAwtF",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T05:21:53.352Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "db650caee2f38f9963bef0d71790d481",
        "public_id": "avalanche2023spring/ynkc0e2xdnppgh0uqncg",
        "version": 1679635369,
        "version_id": "554ccd0c0ccc5c56b9e425a4f728c481",
        "signature": "c2398c19f8dc174a3f2d771090ae2ba5b5b7cc1f",
        "width": 1184,
        "height": 1026,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T05:22:49Z",
        "tags": [],
        "bytes": 457851,
        "type": "upload",
        "etag": "04bdf58835db1729364145fb886f4c25",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679635369/avalanche2023spring/ynkc0e2xdnppgh0uqncg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679635369/avalanche2023spring/ynkc0e2xdnppgh0uqncg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T12:08:35.337Z" }
      }
    ],
    "title": "",
    "description": "Ring Experiment with Paper.js",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// Define the colors to use\nvar colors = [\n  '#ef476f',\n  '#ffd166',\n  '#06d6a0',\n  '#118ab2'\n];\n\nfor (var i = 0; i < 180; i++) {\n  // Create a new rectangle with random size and position\n  var size = new Size(Math.random() * 150, Math.random() * 150);\n  var point = new Point(Math.random() * view.size.width, Math.random() * view.size.height);\n  var rectangle = new Rectangle(point, size);\n  \n  // Choose a random color from the array of colors\n  var color = colors[Math.floor(Math.random() * colors.length)];\n  \n  // Create a new Path object and draw an ellipse with the chosen color\n  var path = new Path.Ellipse(rectangle);\n  path.strokeColor = color;\n  \n  // Rotate the ellipse\n  path.rotate(i * 10);\n  \n  // Scale the stroke width of the ellipse based on its size\n  path.strokeWidth = size.width / 50;\n}",
    "comments": []
  },
  {
    "_id": "KJf9gQpZnHJurXRHD",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-12T17:30:42.487Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3accf2e30b3c008175db664b974681e2",
        "public_id": "avalanche2023spring/ybfbmtdxmjornpoade3z",
        "version": 1681320672,
        "version_id": "50f8cbe936150da078fc9ec9f8eaddb6",
        "signature": "8c429dbfffd06a6fe40aa9967ec17e1712f47990",
        "width": 797,
        "height": 256,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T17:31:12Z",
        "tags": [],
        "bytes": 30542,
        "type": "upload",
        "etag": "03edbf2a2503c129483ef4406ad5d95b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681320672/avalanche2023spring/ybfbmtdxmjornpoade3z.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681320672/avalanche2023spring/ybfbmtdxmjornpoade3z.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1cf52a252adf810e491bd37d9524ba5e",
        "public_id": "avalanche2023spring/xuyewutetmmqnrrvloth",
        "version": 1681320673,
        "version_id": "9841358fb0da36de3ac6d20d6c6035d1",
        "signature": "95ba6e7682fe661ea3a489619988c990cf70802f",
        "width": 797,
        "height": 496,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T17:31:13Z",
        "tags": [],
        "bytes": 56572,
        "type": "upload",
        "etag": "ff0c377241ac5f16f9dee99c12a7a67b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681320673/avalanche2023spring/xuyewutetmmqnrrvloth.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681320673/avalanche2023spring/xuyewutetmmqnrrvloth.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5bf11ef97cb28b005777a903d24e35ae",
        "public_id": "avalanche2023spring/ovyxp5mgb9jqerhctuwo",
        "version": 1681320675,
        "version_id": "25b7c60f6d001c465e160e658e90e33b",
        "signature": "9865317ebea9146b75b41ddbff0339ba851a9d83",
        "width": 797,
        "height": 207,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T17:31:15Z",
        "tags": [],
        "bytes": 22530,
        "type": "upload",
        "etag": "cb7821db78aedb389bc1ac090fd1cae8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681320675/avalanche2023spring/ovyxp5mgb9jqerhctuwo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681320675/avalanche2023spring/ovyxp5mgb9jqerhctuwo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Was really fascinated by how powerful just a simple Markov model can be. I made a model using 3 of Shakespeare's sonnets and used it to generate poetry. The confusing sentences actually work quite well here since it feels just like reading Shakespeare 😂",
    "code": "const sonnet1 =\n\"Shall I compare thee to a summer’s day? Thou art more lovely and more temperate: Rough winds do shake the darling buds of May, And summer’s lease hath all too short a date; Sometime too hot the eye of heaven shines, And often is his gold complexion dimm'd; And every fair from fair sometime declines, By chance or nature’s changing course untrimm'd; But thy eternal summer shall not fade, Nor lose possession of that fair thou ow’st; Nor shall death brag thou wander’st in his shade, When in eternal lines to time thou grow’st: So long as men can breathe or eyes can see, So long lives this, and this gives life to thee.\"\n\nconst sonnet2 =\n\"Let those who are in favour with their stars Of public honour and proud titles boast, Whilst I, whom fortune of such triumph bars Unlook’d for joy in that I honour most. Great princes’ favourites their fair leaves spread But as the marigold at the sun’s eye, And in themselves their pride lies buried, For at a frown they in their glory die. The painful warrior famoused for fight, After a thousand victories once foiled, Is from the book of honour razed quite, And all the rest forgot for which he toiled: Then happy I, that love and am beloved, Where I may not remove nor be removed.\"\n\nconst sonnet3 = \n\"My tongue-tied Muse in manners holds her still, While comments of your praise richly compiled, Reserve thy character with golden quill, And precious phrase by all the Muses filed. I think good thoughts, whilst others write good words, And like unlettered clerk still cry ‘Amen’ To every hymn that able spirit affords, In polished form of well-refined pen. Hearing you praised, I say ”tis so, ’tis true,’ And to the most of praise add something more; But that is in my thought, whose love to you, Though words come hindmost, holds his rank before. Then others, for the breath of words respect, Me for my dumb thoughts, speaking in effect.\"\n\nconst markovModel = generateModel(sonnet1, sonnet2, sonnet3);\nconst output_text1 = generateText(markovModel);\nconst lineBreak =  output_text1.replace(/,/g, '<br>')\ndocument.head.innerHTML = \n`\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Prata&display=swap\" rel=\"stylesheet\">\n`\n\ndocument.body.innerHTML = \n`\n<style>\n    body {\n        font-family: 'Prata', serif;\n        font-size: 28px;\n        margin-bottom: 30px;  \n    }\n</style>\n    ${lineBreak} \n`\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "comments": []
  },
  {
    "_id": "KJno7oneA339hF6CF",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T01:09:24.837Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "578690d03f11f5494d0c4a4ffa5a0758",
        "public_id": "avalanche2023spring/k5mlcfrywxazqy4oek4o",
        "version": 1675905216,
        "version_id": "2691d3735b7852b439e24aa69ddc3d53",
        "signature": "65b53a2a59aafc403a3f2bc0681e5cf6bd5c5bf6",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T01:13:36Z",
        "tags": [],
        "bytes": 95600,
        "type": "upload",
        "etag": "243d284bf389a668ce53743feb65cc47",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675905216/avalanche2023spring/k5mlcfrywxazqy4oek4o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675905216/avalanche2023spring/k5mlcfrywxazqy4oek4o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "EZGFdZAsGvyhaQ3Gi",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-09T01:19:16.337Z" }
      }
    ],
    "title": "",
    "description": "Worked with Sora on the Pair Challenge, created 10 images that randomly appear in a deck-like fashion. It took us a bit since we had to work through even getting the deck set up, but we finally pulled through and created this.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar deck = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar deckPos = 0;\nvar d;\n\nfunction setup() {\n  createCanvas(800, 800);\n  deck = shuffle(deck);\n  frameRate(.5);\n}\n\nfunction draw() {\n  for(let i = 0; i < 10; i++) {\n    var d = deck[deckPos];\n    drawScenes(d);\n\n    deckPos++;\n    if (deckPos > deck.length - 1) {\n      deck = shuffle(deck);\n      deckPos = 0;\n    }\n\n    return d;\n  }\n}\n\nfunction drawScenes(dVar) {\n  switch(dVar){\n    case 0:\n      scene0();\n      break;\n    case 1:\n      scene1();\n      break;\n    case 2:\n      scene2();\n      break;\n    case 3:\n      scene3();\n      break;\n    case 4:\n      scene4();\n      break;\n    case 5:\n      scene5();\n      break;\n    case 6:\n      scene6();\n      break;\n    case 7:\n      scene7();\n      break;\n    case 8:\n      scene8();\n      break;\n    case 9:\n      scene9();\n      break;\n  }\n}\n\nfunction scene0() {\n  background(\"red\");\n  fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 20;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10)\n      ellipse(x+space/2,y+space/2,10)\n    }\n  }\n}\n\n\nfunction scene1() {\n  background(\"orange\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 25;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene2() {\n  background(\"yellow\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 30;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene3() {\n  background(\"green\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 35;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene4() {\n  background(\"blue\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 40;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene5() {\n  background(\"purple\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 45;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene6() {\n  background(\"black\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 50;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene7() {\n  background('grey');\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 55;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene8() {\n  background(\"lightgreen\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 60;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene9() {\n  background(\"pink\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 65;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "KRAywSaEdu8dTjTbz",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T03:02:22.805Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "78d2932bcfe8752248dbe3e541f6b214",
        "public_id": "avalanche2023spring/v7cotrngkeclm3tuyqyg",
        "version": 1680836555,
        "version_id": "d202c1b480e2fd3f12d5bb883e5d07a1",
        "signature": "fd7feca62231ed7cdc102e86d19034ace9c389e2",
        "width": 792,
        "height": 794,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-07T03:02:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 944964,
        "type": "upload",
        "etag": "403c9b4c4e4567e8352c8ee77456d873",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680836555/avalanche2023spring/v7cotrngkeclm3tuyqyg.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680836555/avalanche2023spring/v7cotrngkeclm3tuyqyg.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680836555/avalanche2023spring/v7cotrngkeclm3tuyqyg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "279431",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 280675,
        "duration": 26.933333,
        "rotation": 0,
        "nb_frames": 809,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:48:11.015Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:59.892Z" }
      }
    ],
    "title": "",
    "description": "Pong with Birdy!\nWant to improve on this but finally figured out how to make animation collides with sprite sheets.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\n\nlet topwall;\nlet leftwall;\nlet rightwall;\nlet wallwidth = 20;\n\nlet object;\nlet objectwidth = 20;\n\n\n// let playerwall;\n// let playerwallwidth = 100;\n\nlet gamespeed = 5;\nlet score = 0;\nlet bouncesound;\n\nlet mode = 0;\n\nlet birdSpriteSheet;\nlet birdAnimation;\nlet birdObj;\n\n\n\nfunction preload() {\n\n  birdSpriteSheet = loadSpriteSheet('assets/flying.png', 182, 150, 8);\n\n // birdAnimation = loadAnimation(birdSpriteSheet);\n\nbirdObj = createSprite(100, 700);\nbirdObj.addAnimation(\"flap\", birdSpriteSheet);\n   birdObj.immovable = true;\n\n\n\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n\n  // background(30);\n\n//drawSprites();\n\n\n  object = createSprite(width / 2, 50, objectwidth, objectwidth);\n  object.setSpeed(gamespeed, random(360));\n\n  walls = new Group();\n  topwall = createSprite(width / 2, wallwidth / 2, width, wallwidth);\n  topwall.immovable = true;\n  walls.add(topwall);\n  leftwall = createSprite(wallwidth / 2, height / 2, wallwidth, height);\n  leftwall.immovable = true;\n  walls.add(leftwall);\n  rightwall = createSprite(width - wallwidth / 2, height / 2, wallwidth, height);\n  rightwall.immovable = true;\n  walls.add(rightwall);\n\n  // playerwall = createSprite(width / 2, height - wallwidth / 2, playerwallwidth, wallwidth);\n  // playerwall.immovable = true;\n\n\n}\n\nfunction draw() {\n\n\n  background(30);\n\n  // Show the animation\n  //animation(birdAnimation, 100, 700);\n\n  //show the Sprite objects \n\n  object.bounce(walls);\n  object.bounce(birdObj);\n\n   drawSprites();\n\n  if (keyIsDown(37)) {\n    birdObj.position.x -= gamespeed;\n  }\n  if (keyIsDown(39)) {\n    birdObj.position.x += gamespeed;\n  }\n  if (birdObj.position.x < birdObj / 2) {\n    birdObj.position.x = birdObj / 2;\n  }\n  if (birdObj.position.x > width - birdObj / 2) {\n    birdObj.position.x = width - birdObj / 2;\n  }\n\n  push();\n  fill(255);\n  textAlign(LEFT);\n  text(\"Score: \" + score, 20, 30);\n  textAlign(RIGHT);\n  //text(\"Use ← → to navigate\", width - 20, 30);\n  pop();\n\n   if (object.position.y >= height - wallwidth - objectwidth / 2 && object.position.y < 1 + height - wallwidth - objectwidth / 2) {\n     console.log(\"bounce\");\n     score++;\n     bouncesound.play();\n   }\n\n   if (object.position.y > height) {\n     push();\n     fill(255);\n     textAlign(CENTER, CENTER);\n     //text(\"Oops\", width / 2, height / 2 - 10);\n     //text(\"Press right arrow to try again\", width / 2, height / 2 + 10);\n     if (keyIsDown(39)) {\n       window.location.reload();\n     }\n     pop();\n  }\n  drawSprites();\n\n}",
    "comments": []
  },
  {
    "_id": "KS69q4uomfGw27wYa",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": { "$date": "2023-04-28T03:30:20.131Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1296779c14b8b41b755bdaa1fd1dbc32",
        "public_id": "avalanche2023spring/enx5ljpnuf12iiftpupl",
        "version": 1682652636,
        "version_id": "dc58061b128d0f02764e6bcb47374695",
        "signature": "cb1d31a11a74590e92696575f5318091b49cbd8e",
        "width": 1528,
        "height": 1236,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:30:36Z",
        "tags": [],
        "bytes": 513475,
        "type": "upload",
        "etag": "0cfbe11ba8f5e9514459f77e018c89be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682652636/avalanche2023spring/enx5ljpnuf12iiftpupl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682652636/avalanche2023spring/enx5ljpnuf12iiftpupl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f0ac4b00a4d91b33c47e5e1ae938ef98",
        "public_id": "avalanche2023spring/owbzbvoett82hur4zeno",
        "version": 1682652665,
        "version_id": "5362fb4fd5935ab8a2f14532b397f948",
        "signature": "fdacb4e4640028ce42455efe8013b820becb6860",
        "width": 1386,
        "height": 1118,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T03:31:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 13545568,
        "type": "upload",
        "etag": "7a3ed14f40841edc66e040078f75cb0e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682652665/avalanche2023spring/owbzbvoett82hur4zeno.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682652665/avalanche2023spring/owbzbvoett82hur4zeno.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682652665/avalanche2023spring/owbzbvoett82hur4zeno.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "5073940",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 5184906,
        "duration": 20.9,
        "rotation": 0,
        "nb_frames": 1253,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T04:09:49.077Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "I was inspired by Shristi and wanted to play around with type. I used a code from generative gestaltung as a starting point to try to get a better feel for OpenType.js",
    "inspiration_name": "generative gestaltung",
    "inspiration_url": "http://www.generative-gestaltung.de/2/sketches/?01_P/P_3_2_5_01",
    "code": "// P_3_2_5_01\n//\n// Generative Gestaltung – Creative Coding im Web\n// ISBN: 978-3-87439-902-9, First Edition, Hermann Schmidt, Mainz, 2018\n// Benedikt Groß, Hartmut Bohnacker, Julia Laub, Claudius Lazzeroni\n// with contributions by Joey Lee and Niels Poldervaart\n// Copyright 2018\n//\n// http://www.generative-gestaltung.de\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n* Animated type using loadPixels() method to get font area\n*\n* MOUSE\n* position x/y             : affect randomness\n*\n* KEYS\n* A-Z                      : type letters\n* Arrow left/right         : toggle through draw modes\n* Arrow up/down            : increase/decrease point density\n* CONTROL                  : save png\n*\n* CONTRIBUTED BY\n* [Joey Lee](http://jk-lee.com)\n*/\n'use strict';\n\nlet cw = window.innerWidth;\nlet ch = window.innerHeight;\n\nvar font;\n\nvar textTyped = 'COMP FORM';\nvar drawMode = 1;\nvar fontSize = 250;\nvar padding = 10;\nvar nOff = 0;\nvar pointDensity = 5;\n\nvar paths;\nvar textImg;\n\nfunction preload() {\n  font = loadFont('assets/ABCGravity-ExtraCondensed-Trial.otf');\n}\n\nfunction setup() {\n  createCanvas(cw, ch);\n  rectMode(CENTER);\n\n  pixelDensity(1);\n\n  setupText();\n}\n\nfunction setupText() {\n  // create an offscreen graphics object to draw the text into\n  textImg = createGraphics(width, height);\n  textImg.pixelDensity(1);\n  textImg.background(255);\n  textImg.textFont(font);\n  textImg.textSize(fontSize);\n  textImg.text(textTyped, 100, fontSize + 50);\n  textImg.loadPixels();\n}\n\nfunction draw() {\n  background(0);\n\n  nOff++;\n\n  for (var x = 0; x < textImg.width; x += pointDensity) {\n    for (var y = 0; y < textImg.height; y += pointDensity) {\n      // Calculate the index for the pixels array from x and y\n      var index = (x + y * textImg.width) * 4;\n      // Get the red value from image\n      var r = textImg.pixels[index];\n\n      if (r < 128) {\n\n        if (drawMode == 1){\n          strokeWeight(.5);\n\n          var noiseFac = map(mouseX, 0, width, 0, .3);\n          var heightFac = 1;\n          var widthFac = 20;\n          var num = noise((x + nOff) * noiseFac, y * noiseFac);\n\n          var num = noise((x + nOff) * noiseFac, y * noiseFac);\n          if (num < 0.6) {\n            fill(color(255,100,200))\n            stroke(color(255,255,255));\n          } else if (num < 0.7) {\n            stroke(color(255,255,255));\n          } else {\n            fill(color(200,200,100))\n            stroke(color(255,255,255));\n          }\n\n          push();\n          translate(x, y);\n          rotate(radians(30));\n          ellipse(0, 0, 12*widthFac, 12*heightFac);\n          pop();\n        }\n      }\n    }\n  }\n}\n\nfunction keyTyped() {\n  if (keyCode >= 32){\n    textTyped += key;\n    setupText();\n  }\n}",
    "comments": []
  },
  {
    "_id": "KdneeJKMxHmiHLmoy",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-19T22:01:52.494Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6bec22c9bf6effe9594d4ee76096e727",
        "public_id": "avalanche2023spring/flpkuupf0ujpfxc4gkle",
        "version": 1681941716,
        "version_id": "a400cc8c696c10e8d5532875326e97be",
        "signature": "63415afd33b43d7bad5c85dfc7026533bfac82ba",
        "width": 600,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-19T22:01:56Z",
        "tags": [],
        "bytes": 201388,
        "type": "upload",
        "etag": "d8f3118e275cd2a8a15a8114a9711b71",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681941716/avalanche2023spring/flpkuupf0ujpfxc4gkle.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681941716/avalanche2023spring/flpkuupf0ujpfxc4gkle.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T06:44:11.966Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T01:01:26.474Z" }
      }
    ],
    "title": "",
    "description": "One of the myriad of things that I experimented with in ChatGPT was developing code for p5.js. I was interested in the coding capabilities of ChatGPT and incrementally created a WebGL sketch. It was interesting to start with small tasks like create a shape that moves and slowly asking the AI to keep incrementing on the previous work until we got to this point. I could've asked it to do more but I wanted to continue with asking ChatGPT other questions and trying out other tasks.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet cubePos, spherePos, conePos, torusPos;\nlet cubeSize = 50;\n\nfunction setup() {\n  createCanvas(400, 400, WEBGL);\n\n  // initialize positions\n  cubePos = createVector(-150, 0, 0);\n  spherePos = createVector(-50, 0, 0);\n  conePos = createVector(50, 0, 0);\n  torusPos = createVector(150, 0, 0);\n}\n\nfunction draw() {\n  background(220);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n\n  // draw cubes\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(cubePos.x + i * 150, cubePos.y + j * 150, cubePos.z);\n      box(cubeSize);\n      pop();\n    }\n  }\n\n  // draw spheres\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(spherePos.x + i * 150, spherePos.y + j * 150, spherePos.z);\n      sphere(50);\n      pop();\n    }\n  }\n\n  // draw cones\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(conePos.x + i * 150, conePos.y + j * 150, conePos.z);\n      cone(50, 100);\n      pop();\n    }\n  }\n\n  // draw tori\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(torusPos.x + i * 150, torusPos.y + j * 150, torusPos.z);\n      torus(50, 10);\n      pop();\n    }\n  }\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    cubePos.x -= 10;\n    spherePos.x -= 10;\n    conePos.x -= 10;\n    torusPos.x -= 10;\n  } else if (keyCode === RIGHT_ARROW) {\n    cubePos.x += 10;\n    spherePos.x += 10;\n    conePos.x += 10;\n    torusPos.x += 10;\n  } else if (keyCode === UP_ARROW) {\n    cubePos.y -= 10;\n    spherePos.y -= 10;\n    conePos.y -= 10;\n    torusPos.y -= 10;\n  } else if (keyCode === DOWN_ARROW) {\n    cubePos.y += 10;\n    spherePos.y += 10;\n    conePos.y += 10;\n    torusPos.y += 10;\n  } else if (key === 'w') {\n    cubePos.z -= 10;\n    spherePos.z -= 10;\n    conePos.z -= 10;\n    torusPos.z -= 10;\n  } else if (key === 's') {\n    cubePos.z += 10;\n    spherePos.z += 10;\n    conePos.z += 10;\n  }\n}",
    "comments": []
  },
  {
    "_id": "KmQSjRfp9PAbHPesz",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T12:03:11.17Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "75f6c442a8dd667ff6271aefc5462e17",
        "public_id": "avalanche2023spring/dasyqckkyvgoybexviia",
        "version": 1677857732,
        "version_id": "1e09922cc848efd4ae131d3815f71ce2",
        "signature": "8cb2745c0b73460814e8c804c25d9b08902df1d7",
        "width": 640,
        "height": 528,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T15:35:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 10312254,
        "type": "upload",
        "etag": "12b641633a4bd665adb451f74438480f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677857732/avalanche2023spring/dasyqckkyvgoybexviia.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677857732/avalanche2023spring/dasyqckkyvgoybexviia.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677857732/avalanche2023spring/dasyqckkyvgoybexviia.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "2600980",
          "dar": "40:33",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2607698,
        "duration": 31.636333,
        "rotation": 0,
        "nb_frames": 1899,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0024a7afd47812555aa1b7afccaf64f2",
        "public_id": "avalanche2023spring/jitbrvh8v1zmtkfq0dra",
        "version": 1677857740,
        "version_id": "8faf6f007028abea71253261810e3927",
        "signature": "f97143259d74d8cac46df9a5cbb44954e934617c",
        "width": 1144,
        "height": 966,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T15:35:40Z",
        "tags": [],
        "bytes": 335848,
        "type": "upload",
        "etag": "7b5186d2166809bc2aed425e4d7826a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677857740/avalanche2023spring/jitbrvh8v1zmtkfq0dra.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677857740/avalanche2023spring/jitbrvh8v1zmtkfq0dra.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "83f0182b4ff17ded220ff2952ec4c601",
        "public_id": "avalanche2023spring/kncpis0zbrbii6cjmjf9",
        "version": 1677857743,
        "version_id": "9d19d5bc85b35052e34fb277d13349e5",
        "signature": "2a25c0b2f3c2bbaef1139a058cf991021a98715f",
        "width": 1156,
        "height": 986,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T15:35:43Z",
        "tags": [],
        "bytes": 155079,
        "type": "upload",
        "etag": "1490f892ebf3229507efbac6487f21a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677857743/avalanche2023spring/kncpis0zbrbii6cjmjf9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677857743/avalanche2023spring/kncpis0zbrbii6cjmjf9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-05T03:00:46.581Z" }
      }
    ],
    "title": "",
    "comments": [],
    "description": "Here's my extension of the second challenge. I used some color and played with the subtleties of the parameters to create this patterning effect. I also removed the option for the user to change some of the parameters (some of them didn't look very pretty!)"
  },
  {
    "_id": "KnZX4aef4Aoc5kEKq",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T20:30:38.162Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "efee9ec0c39c184d44b2a7473f4acdde",
        "public_id": "avalanche2023spring/lpxerc4vsbyb7hso7spa",
        "version": 1682022653,
        "version_id": "60f3a0b0aa2428e1faf00a7ba2fc1207",
        "signature": "12d34ba273527939790dbddb50ce140e6f0caef8",
        "width": 986,
        "height": 988,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T20:30:53Z",
        "tags": [],
        "bytes": 122142,
        "type": "upload",
        "etag": "55286a937f3f05979848f32c6de12fe5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682022653/avalanche2023spring/lpxerc4vsbyb7hso7spa.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682022653/avalanche2023spring/lpxerc4vsbyb7hso7spa.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d8a91d5358515b2881d2083734a909cc",
        "public_id": "avalanche2023spring/xd7k9kkeangj34jhp1z7",
        "version": 1682022656,
        "version_id": "85f959ca2095cceb0f73c7f538b9501a",
        "signature": "eabb0566bc486fe68d33a549dcaa654ca3d661c5",
        "width": 996,
        "height": 992,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T20:30:56Z",
        "tags": [],
        "bytes": 410663,
        "type": "upload",
        "etag": "36289a79de0a183950cce3bf0b23079f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682022656/avalanche2023spring/xd7k9kkeangj34jhp1z7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682022656/avalanche2023spring/xd7k9kkeangj34jhp1z7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3e0e541d7f1e5d64ea78bf981f7e2aa9",
        "public_id": "avalanche2023spring/cy9efhidm7nptyyharbz",
        "version": 1682022659,
        "version_id": "e38ad82a3db3172563fdd78f8e669294",
        "signature": "d443e2c250effbb0599770785242a2c64d71eb46",
        "width": 992,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T20:30:59Z",
        "tags": [],
        "bytes": 45285,
        "type": "upload",
        "etag": "25fc171e5de655b4c347bd8a7cc55d5c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682022659/avalanche2023spring/cy9efhidm7nptyyharbz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682022659/avalanche2023spring/cy9efhidm7nptyyharbz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T01:05:42.175Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T05:16:07.695Z" }
      }
    ],
    "title": "",
    "description": "I went back to our first challenge and asked both Phind and ChatGPT to re-create an artwork in the style of Anni Albers. I specified that they should use p5.js and random values. Some observations: it’s interesting that you can toggle on/off expert, concise, and creative tabs with Phind. Moreover, I like how Phind explains each step - I think it's better at proactively explaining technical terms as opposed to ChatGPT. It also lists sources on the side, which could be helpful for further reading. Overall, I found the quality of work to be roughly as simplistic while regenerating these artworks--but both provided a template from which you can develop a more sophisticated piece of art. Compared to Phind, the ChatGPT interface is more streamlined and better geared for continuously iterating on top of previous commands (having more of a conversation)",
    "comments": []
  },
  {
    "_id": "Kww7QJo6RB79hxsbC",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T15:50:01.827Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "339bdbe025b9ee5cba4028e1402fd765",
        "public_id": "avalanche2023spring/ll6y190rj6xgo3x7j1vc",
        "version": 1681487419,
        "version_id": "4eb0c109936b50c7c960f70f3e9661f1",
        "signature": "4b0506346c9bc359097cbcf808d92187dceb4468",
        "width": 976,
        "height": 241,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:50:19Z",
        "tags": [],
        "bytes": 47359,
        "type": "upload",
        "etag": "ba3977f5c1311f9658e9b80c04707e85",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681487419/avalanche2023spring/ll6y190rj6xgo3x7j1vc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681487419/avalanche2023spring/ll6y190rj6xgo3x7j1vc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a62aa61f2cec88ce07de07d7f420d6a9",
        "public_id": "avalanche2023spring/wvaydm4b4xvbhaozta27",
        "version": 1681487420,
        "version_id": "defd7b1387951390dadfb7b855c29a4e",
        "signature": "7c1650da3e1fcea28595b356c08fafa0f4bcc0a3",
        "width": 1006,
        "height": 257,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:50:20Z",
        "tags": [],
        "bytes": 48719,
        "type": "upload",
        "etag": "02b239b6bfac5cc95d2caf9e310fe569",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681487420/avalanche2023spring/wvaydm4b4xvbhaozta27.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681487420/avalanche2023spring/wvaydm4b4xvbhaozta27.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0e526446c577f654737c009259e0d8de",
        "public_id": "avalanche2023spring/uieqkukbkbmzhuzakzr3",
        "version": 1681487422,
        "version_id": "92baa39b1ddfe64748f2606a2f19cc60",
        "signature": "37d189f8066abee0af6faed872fdc8e287814aaa",
        "width": 1011,
        "height": 249,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:50:22Z",
        "tags": [],
        "bytes": 49262,
        "type": "upload",
        "etag": "b91f8ed307337eaa0d0b11ce098dad5f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681487422/avalanche2023spring/uieqkukbkbmzhuzakzr3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681487422/avalanche2023spring/uieqkukbkbmzhuzakzr3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Tried variations of my earlier dark and stormy night story with Rita.",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\n  start: \"On a dark and stormy night, the $noun1 $verb1 the trees, as $noun1 $verb1 the sky. As I $verb2_1 the $noun2_1, I saw $noun2_2 $verb2_3 in the $noun1, $verb2_1 me. The $noun1 grew stronger. I felt a sense of $noun3, as if something $adjective3 was about to happen.\",\n  \n  noun1: \"wind | storm | rain | darkness | lightning | thunder\",\n  verb1: \"howled through | blew through | flew through | illuminated | darkened | yelled through | shaded | fogged | obscured\",\n  \n  verb2_1: \"looking at | staring at | watching | observing | examining | studying\",\n  verb2_2: \"looked out | peeped through | glanced out | gazed at | stared through | peeked at\",\n  noun2_1: \"window | dor | wall | peephole | skylight | cracks | hole\",\n  noun2_2: \"figure.art | ghost.art | silhouette.art | shape.art | form.art | animal.art | person.art\",\n  verb2_3: \"standing | lingering | crouching | laying | sitting | squatting | pacing | walking\",\n  \n  noun3: \"foreboding | anxiety | apprehension | trepidation | intuition | alarm | dread\",\n  adjective3: \"terrible | awful | outrageous | horrible | appalling\",\n};\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\ndisplay(g.expand());\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 20px; margin: 10%; line-height: 1.5;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}",
    "comments": []
  },
  {
    "_id": "KynKAZQxrcRJ94M5p",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T12:04:23.073Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3695346af37c7b65d5762f4356bb7479",
        "public_id": "avalanche2023spring/trqin3bfojivqp0btwwy",
        "version": 1683288289,
        "version_id": "566d701f47d595e1a712da6b9b5ff446",
        "signature": "a74f1f00bd88428babac52b19a423af2a0de0eec",
        "width": 1648,
        "height": 1442,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T12:04:49Z",
        "tags": [],
        "bytes": 254138,
        "type": "upload",
        "etag": "3826b807427bc8e5473ab2ffbcb318fb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683288289/avalanche2023spring/trqin3bfojivqp0btwwy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683288289/avalanche2023spring/trqin3bfojivqp0btwwy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d882e434fa498cc6802cf295440ffe93",
        "public_id": "avalanche2023spring/yttriybgh1b8ieon5lts",
        "version": 1683288317,
        "version_id": "1a9b31550f6cd71cac2c8677a8ceb32a",
        "signature": "e94596d5047a819639cc02591e2ca4d0a9e68716",
        "width": 1650,
        "height": 1434,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T12:05:17Z",
        "tags": [],
        "bytes": 296420,
        "type": "upload",
        "etag": "ded59df63818d10371fcadb4a424c5d2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683288317/avalanche2023spring/yttriybgh1b8ieon5lts.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683288317/avalanche2023spring/yttriybgh1b8ieon5lts.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:16.023Z" }
      }
    ],
    "title": "",
    "description": "initial versions of the castle sketch",
    "code": "echo(version=version());\n\n// rotate_extrude() rotates a 2D shape around the Z axis. \n// Note that the 2D shape must be either completely on the \n// positive or negative side of the X axis.\n$fn = 80;\n\ncolor(\"gray\")\ntranslate([-15,-50,5])\ncube([200,200,5]);\n//translate([85,45,7])\n//cylinder(h = 5, r = 120, center = true);\n\n\nmodule tower(){\ncolor(\"cyan\")\n \n    union(){\n         translate([40, 0, 20])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n         translate([40, 0, 120])\n    cylinder (h=50, r=16, center = true);\n            color(\"cyan\")\n              translate([40, 0, 90])\n        rotate_extrude($fn = 80)\n            text(\"  J\");\n                translate([40, 0, 60])\n        rotate_extrude($fn = 80)\n            text(\"  T\");\n                 translate([40, 0, 70])\n          cylinder (h=60, r=10, center = true);\n    }\n    color(\"cyan\")\n              translate([40, 0, 30])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n    \n       color(\"cyan\")\n              translate([40, 0, 10])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n            \n            \ncolor(\"cyan\")\n      translate([40, 0, 0])\n        rotate_extrude($fn = 80)\n            text(\"  W\");\n\n// rotate_extrude() uses the global $fn/$fa/$fs settings, but\n// it's possible to give a different value as parameter.\ncolor(\"cyan\")\n    translate([40, 0, -10])\n        rotate_extrude($fn = 80)\n            text(\"  H\");\n\n// Using a shape that touches the X axis is allowed and produces\n// 3D objects that don't have a hole in the center.\ncolor(\"cyan\")\n    translate([40, 00, -35])\n        rotate_extrude($fn = 80)\n            polygon( points=[[0,0],[18,14],[14,18],[14,22],[22,26],[0,20]] );\n        }\n        \n        for (x = [0:1], y = [0:1]) {\n    translate([x * 80, y * 80, 150]) {\n           rotate([0,180,180])\n    tower();\n    }\n}\n\n  \n\n\n// combining both relatively complex shapes can be created\n\nmodule spire(){\n\n    \ncolor(\"orange\")\n   \n    \n    translate([100, 100, 110])\n        linear_extrude(height = 60, twist = -360, scale = 0, center = true, slices = 200)\n            square([20, 10], center = true);\n\ncolor(\"gray\")\n    translate([100, 100, 0])  // Changed y-coordinate from -30 to -40\n        linear_extrude(height = 80)\n            square([20, 10], center = true);\n    \n}\n\ntranslate([-90,-130,10])\nfor (x = [0:1], y = [0:1]) {\n    translate([x * 150, y * 150, 0]) {\n spire();\n    }\n}\n\n\ncolor(\"gray\")\n  translate([160, 120, 30])\n    rotate([0-45,90,90])\ncube([10,210,5]);\ncolor(\"gray\")\n      translate([160, -30, 30])\n    rotate([-45+90,90,90])\ncube([10,210,5]);\n\ncolor(\"gray\")\n  translate([120, -10, 105])\n    rotate([45,90,90])\ncube([10,120,5]);\ncolor(\"gray\")\n  translate([120, 80, 105])\n    rotate([-45,90,90])\ncube([10,120,5]);\n\nmodule walls(){\n  translate([10, 90, 40])\n  rotate([0,90,0])\n  scale([1.5,1.5,1.5])\ndifference() {\n    union() {\n        translate([0, -10, -3]) cube([25, 20, 6]);\n        cylinder(h = 6, r = 10, center = true);\n    }\n    cylinder(h = 10, r = 5, center = true);\n}\n}\n\n//module sidewall(){\n//for (x=[0:4]){\n//color(\"gray\")\n //   translate([0, -105+x*31, 0])\n      //  walls();\n//}\n//}\n\n//sidewall();\n//\n//translate([150, 0, 5])\n//    rotate([0,0,0])\n//sidewall();\n//\n//translate([130, 110, 5])\n//    rotate([0,0,90])\n//sidewall();\n//\n//translate([130, -40, 5])\n//    rotate([0,0,90])\n//sidewall();\n//color(\"gray\")\n  //translate([10, -30, 60])\n    //rotate([90,90,90])\n//cube([10,150,5]);\n\n        \n\n// By default rotate_extrude forms a full 360 degree circle, \n// but a partial rotation can be performed by using the angle \n\n\n// Written in 2015 by Torsten Paul <Torsten.Paul@gmx.de>\n//\n// To the extent possible under law, the author(s) have dedicated all\n// copyright and related and neighboring rights to this software to the\n// public domain worldwide. This software is distributed without any\n// warranty.\n//\n// You should have received a copy of the CC0 Public Domain\n// Dedication along with this software.\n// If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.",
    "comments": []
  },
  {
    "_id": "L3t85gKnyZNjHJCeC",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T06:48:55.612Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "590c34b77f7966ad8bfc714aacc51dd6",
        "public_id": "avalanche2023spring/zdgvmn0zhgec6deqjk1u",
        "version": 1677221365,
        "version_id": "10fdd0972b1fda8e666ae71e0cf061cb",
        "signature": "1ccb2c269dc1161ce9cd465929390b1206efde2d",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T06:49:25Z",
        "tags": [],
        "bytes": 2865783,
        "type": "upload",
        "etag": "6136419f3e7e15c8b369d166fa6b722e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677221365/avalanche2023spring/zdgvmn0zhgec6deqjk1u.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677221365/avalanche2023spring/zdgvmn0zhgec6deqjk1u.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "460f16633ca872a7765bdb4c1e8df489",
        "public_id": "avalanche2023spring/v2cczgetgtxnx6z3qa23",
        "version": 1677221381,
        "version_id": "5d234fa2154e4bdcd6e86a1bee3c019e",
        "signature": "f2158efebe1dd01b59819b647592aade7c7fc3a5",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T06:49:41Z",
        "tags": [],
        "bytes": 3101430,
        "type": "upload",
        "etag": "22e3c1cdd91d677e0b99c9e5517e1e14",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677221381/avalanche2023spring/v2cczgetgtxnx6z3qa23.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677221381/avalanche2023spring/v2cczgetgtxnx6z3qa23.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "28dde083bfcbc58cad1fdca1bd0c6aaf",
        "public_id": "avalanche2023spring/qob3e2unhny5qftik4eu",
        "version": 1677221409,
        "version_id": "fbf7eea6970475bba916bb871196b783",
        "signature": "e322d981bcd04a890b135dbd1cb84e4247abbd51",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T06:50:09Z",
        "tags": [],
        "bytes": 2860773,
        "type": "upload",
        "etag": "2790dd9bc29669769ba00e9a9158d8b7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677221409/avalanche2023spring/qob3e2unhny5qftik4eu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677221409/avalanche2023spring/qob3e2unhny5qftik4eu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T15:41:21.384Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge: Modified Sahiti's sketch by experimenting with a Monet classic via Tweakpane. Major milestone unlocked: I no longer fear angle-based functions in coding woohoo!",
    "inspiration_name": "The Wheat Field: Claude Monet",
    "code": "let img;\n\nconst params = {\n  rotate: 0,\n  radius: 5,\n  size: 10,\n\n};\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"rotate\", { min: 0, max: 90 });\npane.addInput(params, \"radius\", { min: 0, max: 200 });\npane.addInput(params, \"size\", { min: 10, max: 50 });\n// pane.addInput(params, \"color\");\n\nfunction preload() {\n  img = loadImage(\"paint.jpeg\");\n}\n\nfunction setup() {\n  createCanvas(700, 500);\n  angleMode(DEGREES);\n  frameRate(1);\n}\n\nfunction draw() {\n  background(220);\n  imageMode(CENTER);\n  image(img, width / 2, height / 2, width, height);\n \nlet tileSize = params.size;\n  let radius = params.radius;\n  let angle = 0; //change as rotate?\n\n  while (radius < width / 2 - 50) {\n    let portionX = int(random(0, img.width - tileSize));\n    let portionY = int(random(0, img.height - tileSize));\n    let portion = img.get(portionX, portionY, tileSize, tileSize);\n    //I want to console log \"portion\" to know if I am getting the tiles on the image.\n\n    push();\n    translate(width / 2, height / 2);\n    rotate(angle);\n    translate(radius, 0);\n    rotate(params.rotate);\n    image(portion, 0, 0);\n    pop();\n\n    angle = angle + degrees(0.1);\n    radius = radius + 0.2;\n  }\n\n  // noLoop();\n}\n\n//}",
    "comments": []
  },
  {
    "_id": "L6eXigoA2CeoCBXRc",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T21:23:21.821Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f4d7dc19b2de56a2ecfa66b22c63dd3a",
        "public_id": "avalanche2023spring/ejwrsyvtb9uyu5ttflze",
        "version": 1681421040,
        "version_id": "864a2fc0781e34b02fec87fcba811e07",
        "signature": "c214c3415aa73535b5d7fbe51238630447fe50a0",
        "width": 1340,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T21:24:00Z",
        "tags": [],
        "bytes": 116615,
        "type": "upload",
        "etag": "c31df1cbd75a2192eec9c7adb366ec6c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681421040/avalanche2023spring/ejwrsyvtb9uyu5ttflze.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681421040/avalanche2023spring/ejwrsyvtb9uyu5ttflze.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "91468e895b45cc81ee71ce6009c83ab2",
        "public_id": "avalanche2023spring/d11mumjthd1uroprtfm2",
        "version": 1681421061,
        "version_id": "61fac0efbe8961ab63c66aca4dbae2aa",
        "signature": "85d0737ea31d126833770fa57b9bfc2a23e365b6",
        "width": 1340,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T21:24:21Z",
        "tags": [],
        "bytes": 137614,
        "type": "upload",
        "etag": "7e042c3d140f4c99847af407ea0653e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681421061/avalanche2023spring/d11mumjthd1uroprtfm2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681421061/avalanche2023spring/d11mumjthd1uroprtfm2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I tried exploring story generation using tracery to compare with the previous Markov chain to understand how much control you get trying to write stories this way vs how limited the output and structures can be. I used the basic template and modified some parameters for this.",
    "comments": []
  },
  {
    "_id": "LDiMoTkCGDyFEtric",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T16:47:24.506Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "778a608137847807402fc97f14687198",
        "public_id": "avalanche2023spring/hrkgkgb1nzteosz53gz1",
        "version": 1677775958,
        "version_id": "d53aa232b1d956b449661d273e867b72",
        "signature": "4a4959da60b8255b4a5138992f155baa7a25b3d0",
        "width": 464,
        "height": 486,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-02T16:52:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 1271215,
        "type": "upload",
        "etag": "77b5c3665e6f6c31510ddfefa26cbd7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677775958/avalanche2023spring/hrkgkgb1nzteosz53gz1.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677775958/avalanche2023spring/hrkgkgb1nzteosz53gz1.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677775958/avalanche2023spring/hrkgkgb1nzteosz53gz1.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "219630",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 220759,
        "duration": 46.066667,
        "rotation": 0,
        "nb_frames": 1383,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I think there is some miss tuning but I do believe logic seems to work.",
    "code": "let amplitude_slider;\nlet frquency_slider;\nlet timer_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 50);\n\n  createP(\"Timer\");\n  timer_slider = createSlider(0, 100, 50);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n\n  let frequency = frequency_slider.value() * 1000;\n\n  let timer = timer_slider.value()+millis();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = (random() - 0.5) * amplitude * 10;\n    // let offsetY = (random() - 0.5) * amplitude * 10;\n    \n    \n\n     let offsetX = noise(i*frequency+timer) * amplitude *10;\n     let offsetY = noise(i*frequency+timer) * amplitude*10;\n\n    // let offsetX = ((noise(30) +frequency)/ timer *amplitude);\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "comments": []
  },
  {
    "_id": "LDinZe7FfQzq4iP8p",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T08:03:53.749Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "abf81f25ab9263f9318ab7de32140cbc",
        "public_id": "avalanche2023spring/ehhlz2mypoo9ba2l1crq",
        "version": 1683878648,
        "version_id": "88cb4aef731192e9994431aa84491d94",
        "signature": "aedb7726d4cef243a112503cf433233ca02b60d6",
        "width": 900,
        "height": 898,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T08:04:08Z",
        "tags": [],
        "bytes": 52519,
        "type": "upload",
        "etag": "27b5ab63ba1e307916ad9602325bd61c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683878648/avalanche2023spring/ehhlz2mypoo9ba2l1crq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683878648/avalanche2023spring/ehhlz2mypoo9ba2l1crq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  background(50);\n\n  noFill();\n  stroke(255, 0, 0, 200); // red stroke color with 200 alpha\n  strokeWeight(4); // thicker stroke weight\n\n  // move to starting position (without drawing)\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 250); // start at center of canvas\n\n  // put the pen down to draw\n  myTurtle.penDown();\n\n  // draw the hexagon\n  for (let i = 0; i < 6; i++) {\n    myTurtle.moveForward(100);\n    myTurtle.turnRight(60);\n  }\n\n  // draw the circles\n  myTurtle.penUp(); // lift the pen to move to the center of the hexagon\n  myTurtle.moveTo(250, 250);\n  myTurtle.penDown();\n  circle(250, 250, 50); // draw a circle with radius 50 at the center of the hexagon\n  circle(250, 250, 80); // draw a larger circle with radius 80 at the center of the hexagon\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "LGLCKdtM5uGAPyjcn",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T10:17:00.35Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "84d5ff1d2ef6e078adb20856fa40c86f",
        "public_id": "avalanche2023spring/bpuadaygm0nopw6cjl8n",
        "version": 1680257826,
        "version_id": "2cde00b10ee483a93af45f30a58dc5e7",
        "signature": "ecf42d5da2965a4d2476a6fe3dab9df07de0b341",
        "width": 900,
        "height": 900,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T10:17:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 1946805,
        "type": "upload",
        "etag": "95d0e5e13fd8d92f2790f872adb68c4f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680257826/avalanche2023spring/bpuadaygm0nopw6cjl8n.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680257826/avalanche2023spring/bpuadaygm0nopw6cjl8n.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680257826/avalanche2023spring/bpuadaygm0nopw6cjl8n.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316872",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "1117484",
          "dar": "1:1",
          "time_base": "1/25000"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 1439944,
        "duration": 10.76,
        "rotation": 0,
        "nb_frames": 269,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T13:03:00.656Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-02T07:29:40.379Z" }
      }
    ],
    "title": "",
    "description": "Redid the last sketch, but now with motion controlled ellipse(). User ml5.js again to track the x-position of the person in form of the camera, and mapped that to the ellipse so I can play the strings by moving around.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nlet poseNet;\nlet poses = [];\nlet video;\n\nlet rot = 0;\nconst noiseAmp = 50;\n\nlet canvasWidth = 500;\nlet canvasHeight = 500;\n\nlet ellipse0 = {\n    xPos: 0,\n    esize: 20\n};\nlet amplitude;\nlet vibration = 25;\nlet string = [\n    {deceleration: 0, stringX: canvasWidth/2 - 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n    {deceleration: 0, stringX: canvasWidth/2 - 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2, stringYoffset: 50, bezierYoffset: 100, note: \"B4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n  ];\n\nconst synth = new Tone.Synth(\n  {\n    oscillator: {\n      type: \"sine\",\n    },\n    envelope: {\n      attack: 0.1,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 1,\n    },\n  }\n);\nsynth.toMaster();\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  colorMode(HSB);\n  \n  video = createCapture(VIDEO);\n  video.size(width, height);\n  poseNet = ml5.poseNet(video, {multiplier:0.5}, modelReady);\n  poseNet.on('pose', function(results) {\n    poses = results;\n  });\n}\n\nfunction modelReady() {\n  select('#status').html('Model Loaded');\n}\n\nfunction draw() {\n  background(250, 50, 85);\n  \n  let imgsize = 80;\n  image(video, 0, 0, imgsize*1.2, imgsize);\n  \n  let xFactor;\n  let mapFactor;  \n  for (let i = 0; i < poses.length; i++) {\n    let skeleton = poses[i].skeleton;\n    for (let j = 0; j < skeleton.length; j++) {\n      mapFactor = skeleton[0][1]\n      xFactor = map(mapFactor.position.x,0,width,100,700)\n    }\n  }\n  \n  ellipse0.xPos = xFactor;\n\n  fill(0, 0, 100);\n  noStroke();\n  ellipse(xFactor, width/2, ellipse0.esize);\n  \n  for (let i=0; i<string.length; i++) {\n      \n    amplitude = (vibration/2) * sin(TWO_PI * (millis()/1000)) * string[i].deceleration;\n    \n    noFill();\n    stroke(0, 0, 100);\n    strokeWeight(1.75);\n    bezier(\n      string[i].stringX, string[i].stringYoffset,\n      amplitude + string[i].stringX, string[i].stringYoffset + string[i].bezierYoffset, \n      amplitude + string[i].stringX, height - string[i].stringYoffset - string[i].bezierYoffset, \n      string[i].stringX, height - string[i].stringYoffset\n    );\n    \n    string[i].deceleration -= 0.01;\n    if (string[i].deceleration < 0) {\n      string[i].deceleration = 0;\n    }\n    \n    if (\n        ellipse0.xPos > string[i].stringX - 5 && \n        ellipse0.xPos < string[i].stringX + 5 //&& \n    ) {\n      synth.triggerAttackRelease(string[i].note, \"4n\");\n      string[i].deceleration = 1;\n    }\n      \n  }\n   \n}",
    "comments": []
  },
  {
    "_id": "LKhiMErXGQ6nX2Jvn",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T16:08:11.929Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5fe047ae64dd80f2a07a49db21756e5c",
        "public_id": "avalanche2023spring/fjik6rwxiicgieksufgz",
        "version": 1677171192,
        "version_id": "4cd7bf9a637e4d0ba55fa7c511592b20",
        "signature": "3ba39d70f6d994e112b7bbe57c6b1ff29f5365af",
        "width": 1700,
        "height": 1082,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T16:53:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 3073013,
        "type": "upload",
        "etag": "06f71eaec297b096c21317860647e81a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677171192/avalanche2023spring/fjik6rwxiicgieksufgz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677171192/avalanche2023spring/fjik6rwxiicgieksufgz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677171192/avalanche2023spring/fjik6rwxiicgieksufgz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "681217",
          "dar": "850:541",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 690051,
        "duration": 35.6265,
        "rotation": 0,
        "nb_frames": 2091,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T17:12:58.284Z" }
      }
    ],
    "title": "",
    "comments": [],
    "description": "A robotic face generator (with the ability to make it blush). I used a typeface called A. ABF Petit to create the facial features"
  },
  {
    "_id": "LNrBk3EMeR7TsLx3h",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T01:38:03.591Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "46394aacb699291f37b0f4f9409aa93b",
        "public_id": "avalanche2023spring/yevkbvsrsukujzuwno41",
        "version": 1683855589,
        "version_id": "98ec491496ae406de0d047d3d8f38389",
        "signature": "2fc1e54adca458fc2055dae5256e22189588c1de",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T01:39:49Z",
        "tags": [],
        "bytes": 334210,
        "type": "upload",
        "etag": "a62f8edfeffa7b3fa5517d31a3c63254",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683855589/avalanche2023spring/yevkbvsrsukujzuwno41.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683855589/avalanche2023spring/yevkbvsrsukujzuwno41.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T11:44:00.75Z" }
      }
    ],
    "title": "",
    "description": "Inspired by the textbook example using the letter A. I decided to experiment with a decorative B letterform to create this pattern. At first glance it just looks like a pattern, but upon closer review you can see the strokes of the letter B.",
    "comments": []
  },
  {
    "_id": "LQFynk4mhufaiPxQu",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T17:07:43.225Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7126a63d7a07cd0b9c3a313e9cdc120d",
        "public_id": "avalanche2023spring/hvmdjh5uqidfwve7nabb",
        "version": 1675357669,
        "version_id": "5844251bbb05db7c85d889fed7300e94",
        "signature": "c3b882ff445961e865e54e074bae85daf63c0f76",
        "width": 1603,
        "height": 1604,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T17:07:49Z",
        "tags": [],
        "bytes": 742393,
        "type": "upload",
        "etag": "4324a0149082b1cdc156972b5b93b3a1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675357669/avalanche2023spring/hvmdjh5uqidfwve7nabb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675357669/avalanche2023spring/hvmdjh5uqidfwve7nabb.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T17:54:56.695Z" }
      }
    ],
    "title": "",
    "description": "My response to Reshma’s instructions!",
    "comments": []
  },
  {
    "_id": "LTwG7hFpYbN3peh4r",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-03T20:46:43.807Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "913ca269a5a22955c8ca4336fb7d5f2e",
        "public_id": "avalanche2023spring/xibjd8ev3pu4i0wcguoy",
        "version": 1683146815,
        "version_id": "a7e1d8f6dc72330e3e9a1783ce0e3b77",
        "signature": "05905be8e2b54096108d5dea23337a979663331a",
        "width": 1484,
        "height": 902,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T20:46:55Z",
        "tags": [],
        "bytes": 68493,
        "type": "upload",
        "etag": "055175fa1913be73bacbb4f6df923b28",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683146815/avalanche2023spring/xibjd8ev3pu4i0wcguoy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683146815/avalanche2023spring/xibjd8ev3pu4i0wcguoy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:43.18Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-04T05:08:35.216Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T00:54:57.555Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:42.155Z" }
      }
    ],
    "title": "",
    "description": "Just spent time understanding different possible forms that OpenSCAD can create to make this little succulent.",
    "comments": []
  },
  {
    "_id": "LbzcXk3WXXT7mcKT6",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-05T01:19:08.5Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b9a7ca2ff9eac3a78ebb6c5c7f9ddaa5",
        "public_id": "avalanche2023spring/tqpahnhyg9zvcg96pt3y",
        "version": 1680657551,
        "version_id": "f3308ef01d64891e7f1d1c48b1fd2b84",
        "signature": "774ac01ad4f92e79930c7d2e3ce7cff96375a9cd",
        "width": 900,
        "height": 598,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-05T01:19:11Z",
        "tags": [],
        "bytes": 36101,
        "type": "upload",
        "etag": "73f52168fff256df06c25f7d3903ecc5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680657551/avalanche2023spring/tqpahnhyg9zvcg96pt3y.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680657551/avalanche2023spring/tqpahnhyg9zvcg96pt3y.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:00:55.488Z" }
      }
    ],
    "title": "",
    "description": "Second game, took an old concept that I scrapped a long time ago and shrunk it down into a microgame. Goal is to try and lap as many times as possible without hitting the obstacles.\n\nArrow keys to move the car around.",
    "code": "let laps = 0;\n\nfunction setup() {\n  createCanvas(600, 400);\n  \n  // Establish Sprites\n  \n  car = createSprite(50, 50, 450, 700);\n  car.scale *= 0.1;\n  car.img = loadImage(\"Image/Vehicle_SpriteProto.png\");\n  \n  obstacle3 = new Sprite();\n  obstacle3.width = 400;\n  obstacle3.height = 250;\n  obstacle3.collider = 'static';\n  \n  obstacle1 = new Sprite();\n  obstacle1.x = 300;\n  obstacle1.y = 160;\n  obstacle1.width = 350;\n  obstacle1.height = 150;\n  obstacle1.collider = 'kinematic';\n  \n  obstacle2 = new Sprite();\n  obstacle2.x = 300;\n  obstacle2.y = 260;\n  obstacle2.width = 150;\n  obstacle2.collider = 'kinematic';\n  obstacle2.overlap(obstacle1);\n  \n  goal = new Sprite();\n  goal.x = 50;\n  goal.y = 200;\n  goal.width = 100;\n  goal.height = 100;\n  goal.text = \"Finish Line\";\n  //goal.visible = false;\n  //goal.collider = 'static';\n  \n  rectSequence1();\n  rectSequence2();\n}\n\n// Obstacle movement\n\nasync function rectSequence1() {\n  await obstacle1.moveTo(300, 160);\n  await obstacle1.moveTo(300, 360);\n  rectSequence1();\n}\n\nasync function rectSequence2() {\n  await obstacle2.moveTo(300, 260);\n  await obstacle2.moveTo(300, 60);\n  rectSequence2();\n}\n\nfunction draw() {\n  clear();\n  background(107, 255, 122);\n  \n  // Car movement/collision\n  \n  car.speed = 3;\n\n  if(kb.pressing('up')) {\n    car.direction = -90;\n    car.rotation = 180;\n  } else if(kb.pressing('down')) {\n    car.direction = 90;\n    car.rotation = 0;\n  } else if(kb.pressing('left')) {\n    car.direction = 180;\n    car.rotation = 90;\n  } else if(kb.pressing('right')) {\n    car.direction = 0;\n    car.rotation = -90;\n  } else {\n    car.speed = 0;\n  }\n  \n  text('Laps: ' + laps, 10, 30);\n  \n  if(car.overlaps(goal)) {\n      laps++;\n  }\n  \n  if(car.collides(obstacle1) || car.collides(obstacle2) || car.collides(obstacle3)) {\n    gamereset();\n  }\n  \n  /* // Debug collisions\n  \n  car.debug = mouse.pressing();\n  obstacle1.debug = mouse.pressing();\n  obstacle2.debug = mouse.pressing();\n  obstacle3.debug = mouse.pressing();\n  goal.debug = mouse.pressing(); */\n}\n\nfunction gamereset() {\n  car.x = 50;\n  car.y = 50;\n    \n  obstacle1.x = 300;\n  obstacle1.y = 160;\n    \n  obstacle2.x = 300;\n  obstacle2.y = 260;\n}",
    "comments": []
  },
  {
    "_id": "LifYECZvDashfX5Xn",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T07:18:57.653Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ac881dad810c273620858324c773687a",
        "public_id": "avalanche2023spring/rb6ty344xzf8mea10ztg",
        "version": 1677741550,
        "version_id": "c45c33c0f383a64274acfd45731772e9",
        "signature": "8f70f2ad454cf0ac6e5626095f7af264dadb3e95",
        "width": 794,
        "height": 792,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-02T07:19:10Z",
        "tags": [],
        "pages": 0,
        "bytes": 2865639,
        "type": "upload",
        "etag": "2b2f9af3ed8b498c941b4367f1363143",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677741550/avalanche2023spring/rb6ty344xzf8mea10ztg.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677741550/avalanche2023spring/rb6ty344xzf8mea10ztg.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677741550/avalanche2023spring/rb6ty344xzf8mea10ztg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "143704",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "7155873",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7349363,
        "duration": 3.119333,
        "rotation": 0,
        "nb_frames": 188,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "In the spirit of our EOY thesis show, I visualized the theme Entropy on its chaotic extreme, as the extension on Coding Challenge 1",
    "inspiration_name": "Thesis Show",
    "comments": []
  },
  {
    "_id": "LmHbsQ5Wcav75cKS7",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T03:19:38.438Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7583db263ab411fb266bba7fa398213a",
        "public_id": "avalanche2023spring/iqycrcayiohfnonfpoia",
        "version": 1679628072,
        "version_id": "fa9c78546fb288e4186151fb9db16642",
        "signature": "a552f7b653c04082751cd9619a2484e99cbcfe00",
        "width": 2072,
        "height": 1822,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T03:21:12Z",
        "tags": [],
        "bytes": 1942493,
        "type": "upload",
        "etag": "188b5874eef989a906ef51a456a4f904",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679628072/avalanche2023spring/iqycrcayiohfnonfpoia.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679628072/avalanche2023spring/iqycrcayiohfnonfpoia.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e1f274912181723e8b1d590f5dddbe95",
        "public_id": "avalanche2023spring/hhzmtd2srasfhhe1rgie",
        "version": 1679628104,
        "version_id": "0701c8565648a5222df3360102f5d187",
        "signature": "befcf458a102d8c64ec706f22886d93f4eb0cc0e",
        "width": 1280,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-24T03:21:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 6741324,
        "type": "upload",
        "etag": "02ee3c3e1482170a94e1bd19a27270ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679628104/avalanche2023spring/hhzmtd2srasfhhe1rgie.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679628104/avalanche2023spring/hhzmtd2srasfhhe1rgie.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679628104/avalanche2023spring/hhzmtd2srasfhhe1rgie.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "3657480",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3664592,
        "duration": 14.716667,
        "rotation": 0,
        "nb_frames": 883,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T03:49:42.666Z" }
      }
    ],
    "title": "",
    "description": "Playing around with paths and mouse events",
    "comments": []
  },
  {
    "_id": "LoXyPe3cPhPCE5ksr",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T19:55:22.108Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "926a66a58de60d3811120247bda2d128",
        "public_id": "avalanche2023spring/tn3assnkdotypj38vofl",
        "version": 1677182127,
        "version_id": "e5bac757fef8410923901c27c8d6b08d",
        "signature": "cc1e87f0831878f42f3e7f90cb74144f85651aee",
        "width": 895,
        "height": 895,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-23T19:55:27Z",
        "tags": [],
        "bytes": 63625,
        "type": "upload",
        "etag": "aaaa117e8dcfea4fd61c741c646debb1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677182127/avalanche2023spring/tn3assnkdotypj38vofl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677182127/avalanche2023spring/tn3assnkdotypj38vofl.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Pair challenge for this week. This is my modification of Sora's code that I got to work with. Tweaked some settings, added some noise, and I was able to change the general shape of the sketch to what it is now.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  noStroke();\n  \n  createP(\"Circles\");\n  circlecountSlider = createSlider(100, 10000, 500);\n  \n  createP(\"Red Slider\");\n  r_Slider = createSlider(0, 255, 192);\n  \n  createP(\"Green Slider\");\n  g_Slider = createSlider(0, 255, 195);\n  \n  createP(\"Blue Slider\");\n  b_Slider = createSlider(0, 255, 231);\n}\n\nconst radius = Math.sqrt(0.5);\nconst Size = 0.1;\nconst variable = (1 + Math.sqrt(5)) / 2;\n\nfunction draw() {\n  scale(width, height);\n  background(r_Slider.value(), g_Slider.value(), b_Slider.value());\n \n  let count = circlecountSlider.value();\n  \n  for (let i = 1; i < count; i++) {\n    const f = i / count * noise(i);\n    \n    const angle = i * variable + noise(i);\n    const distance = f * radius;\n\n    const x = 0.5 + cos(angle * PI) * distance * noise(i);\n    const y = 0.5 + sin(angle * TWO_PI) * distance;\n\n    const r = f * Size;\n\n    fill(225, 240, 250, 50 * noise(distance));\n    circle(x, y, r);\n  }\n}",
    "comments": []
  },
  {
    "_id": "LuLxxXTbL2gDRT74Q",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-11T19:57:05.389Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "99e0a4829634dc301ff9ffac59e03e64",
        "public_id": "avalanche2023spring/gp6ytwbsg5m4ucnjf3iy",
        "version": 1683835038,
        "version_id": "68bb1b6b74ad9653521a5307b81b8870",
        "signature": "bf2f18703338a80dd6b1ddf854002acba7561841",
        "width": 996,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T19:57:18Z",
        "tags": [],
        "bytes": 1472491,
        "type": "upload",
        "etag": "31f181c5ebe67c2a5b8b80c01ea798e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683835038/avalanche2023spring/gp6ytwbsg5m4ucnjf3iy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683835038/avalanche2023spring/gp6ytwbsg5m4ucnjf3iy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "583733fc9b668976470136dafe56e789",
        "public_id": "avalanche2023spring/gjnnxdstxwudkirncvts",
        "version": 1683835041,
        "version_id": "0dcf623bd8eb17309786f062bc4c5f00",
        "signature": "81444e015bccf4dfef3db99a6877ee94e8a89d9b",
        "width": 994,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T19:57:21Z",
        "tags": [],
        "bytes": 1395000,
        "type": "upload",
        "etag": "cea1c09180207fdc9975a163691b06e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683835041/avalanche2023spring/gjnnxdstxwudkirncvts.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683835041/avalanche2023spring/gjnnxdstxwudkirncvts.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "edc61b32fc5f4736f02dd0f46e6d975a",
        "public_id": "avalanche2023spring/xcjgrjgp42qlaecpgx0w",
        "version": 1683835044,
        "version_id": "447120e7af589ed124c1b0dc39a1853a",
        "signature": "969cf980ae33c369aff2a33c281f1f6a77e01ad8",
        "width": 992,
        "height": 996,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T19:57:24Z",
        "tags": [],
        "bytes": 1525052,
        "type": "upload",
        "etag": "a1ce285c2d85961a771194192f8c1046",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683835044/avalanche2023spring/xcjgrjgp42qlaecpgx0w.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683835044/avalanche2023spring/xcjgrjgp42qlaecpgx0w.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T10:19:57.942Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:12:49.05Z" }
      }
    ],
    "title": "",
    "description": "Getting set up in Visual Studio Code and exploring different organic patterns and visuals with turtle graphics",
    "comments": []
  },
  {
    "_id": "LuTGsCNuFBWTQSP75",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-10T00:13:36.898Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "402870b21648b9fee85e6b2395f48883",
        "public_id": "avalanche2023spring/v2fg2o5wxvozyprqti1a",
        "version": 1683677626,
        "version_id": "b352604201afdc9455e91fb911f2d995",
        "signature": "5930a577d7930e4065ae1448a69f75432a0ed3fe",
        "width": 749,
        "height": 748,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-10T00:13:46Z",
        "tags": [],
        "bytes": 190731,
        "type": "upload",
        "etag": "1430e459a5ffb08f036733260597804c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683677626/avalanche2023spring/v2fg2o5wxvozyprqti1a.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683677626/avalanche2023spring/v2fg2o5wxvozyprqti1a.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T11:44:47.452Z" }
      }
    ],
    "title": "",
    "description": "Experimentation with Turtles. This was from leftover code that I had from class that I wanted to continue experimenting with.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet current_step = 0;\nlet steps = 60;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  frameRate(24);\n}\n\nfunction draw() {\n  background(50);\n  stroke(255);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(235, 385);\n  myTurtle.penDown();\n\n// Draw Circle Path\n\n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(35, 150);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(435, 150);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(35, 625);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(435, 625);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n}\n\nfunction drawCircle() {\n  myTurtle.pushState();\n\n  for (i = 0; i < 10; i++) {\n    myTurtle.moveForward(10);\n    myTurtle.turnLeft(20);\n    stroke(random(0, 255),random(0, 255),random(0, 255));\n  }\n\n  myTurtle.popState();\n}",
    "comments": []
  },
  {
    "_id": "Lw2Ea3kWm35W3mFbF",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T19:26:28.275Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c241fc01a55baf022aca9f2f9246fbd8",
        "public_id": "avalanche2023spring/qrfjjagoc5ywme9ktoqk",
        "version": 1678390084,
        "version_id": "c4112b829c73f7fceee4675a28be7b48",
        "signature": "9aaf49f69cc10074eb05226cab6d05869273eb49",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:28:04Z",
        "tags": [],
        "bytes": 369826,
        "type": "upload",
        "etag": "589d6a2f253853e462427824aeb09a5f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678390084/avalanche2023spring/qrfjjagoc5ywme9ktoqk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678390084/avalanche2023spring/qrfjjagoc5ywme9ktoqk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2999b93d413fb4a7ef2dc5f4368aa326",
        "public_id": "avalanche2023spring/nnyqequatcwzisgbf8va",
        "version": 1678390094,
        "version_id": "2ce88f865d6b3fa5bf031a5a0c8e5601",
        "signature": "3f1d188372b73ffdeb6f04be82b47f598827c536",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:28:14Z",
        "tags": [],
        "bytes": 311715,
        "type": "upload",
        "etag": "6253b226ec627d6b2eb41862bd626bb3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678390094/avalanche2023spring/nnyqequatcwzisgbf8va.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678390094/avalanche2023spring/nnyqequatcwzisgbf8va.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7e33eee638521609214fa5057807fae0",
        "public_id": "avalanche2023spring/vdf1nfzm929ame1megr2",
        "version": 1678391657,
        "version_id": "b95f3c541c2887b6158f9cb39d5ede28",
        "signature": "9f9af8ca846de66db72c37855d9159ad5094c4a8",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:54:17Z",
        "tags": [],
        "bytes": 135230,
        "type": "upload",
        "etag": "4df2d06dfb6f93f1f66b7ad6117029b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678391657/avalanche2023spring/vdf1nfzm929ame1megr2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678391657/avalanche2023spring/vdf1nfzm929ame1megr2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T00:47:09.334Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:04.762Z" }
      }
    ],
    "title": "",
    "description": "**Pixel x Noise x Modular / Division**\nI overwrote this code, but I wished I'd turned off noSmooth",
    "comments": []
  },
  {
    "_id": "M6QvGDETjssksWTM7",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-27T22:31:34.068Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4e644829571026d60e1cdb6abd865de7",
        "public_id": "avalanche2023spring/a1vycsdbwjpcxqzrbi02",
        "version": 1679956563,
        "version_id": "9993d1a1bc65acafebe9ac65d7b1ee39",
        "signature": "e4ca053b6ea34599cb21dcf2a539ac107ebe5503",
        "width": 1800,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-27T22:36:03Z",
        "tags": [],
        "bytes": 1998973,
        "type": "upload",
        "etag": "841fa5464523e0e2a46410241545f6af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679956563/avalanche2023spring/a1vycsdbwjpcxqzrbi02.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679956563/avalanche2023spring/a1vycsdbwjpcxqzrbi02.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3ec75c8007e038afc7a8b61e38946acf",
        "public_id": "avalanche2023spring/ktylwgxih60dxu0c9ilr",
        "version": 1679956567,
        "version_id": "dde577232437f721506e69874658fb33",
        "signature": "1878d2724b80fe897fdb40895f3ab089496b9311",
        "width": 1800,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-27T22:36:07Z",
        "tags": [],
        "bytes": 1912847,
        "type": "upload",
        "etag": "7c4afc1d66d958bd4ebdf23e69e73f89",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679956567/avalanche2023spring/ktylwgxih60dxu0c9ilr.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679956567/avalanche2023spring/ktylwgxih60dxu0c9ilr.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-28T03:25:27.851Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-08T21:57:50.728Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:06.691Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge. Took Inspiration from Isha's sketch, I took the code to illustrator and lasercut some lines in PAPER!!!!",
    "comments": [
      {
        "commenter_id": "aFZYuqXuhejWXg6yv",
        "comment": "This is so pretty!",
        "created_at": { "$date": "2023-03-28T03:25:41.793Z" }
      }
    ]
  },
  {
    "_id": "M8vPAbnw4mCSmM2An",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T05:43:46.027Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "88d79c7102a1fb35b583b1cf9af1c0cf",
        "public_id": "avalanche2023spring/xgqxqbgvl8lnb18cne2p",
        "version": 1680846255,
        "version_id": "963006117e9399fb01bceb8076403dcc",
        "signature": "64f4c422bfe1ce3d0d32c9fb8fe3abd7cdb9980e",
        "width": 588,
        "height": 590,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T05:44:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 1250599,
        "type": "upload",
        "etag": "5fee16ae4f84d79cf3f334a1af8ed60c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680846255/avalanche2023spring/xgqxqbgvl8lnb18cne2p.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680846255/avalanche2023spring/xgqxqbgvl8lnb18cne2p.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680846255/avalanche2023spring/xgqxqbgvl8lnb18cne2p.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "102528",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "642649",
          "dar": "294:295",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 789727,
        "duration": 12.668667,
        "rotation": 0,
        "nb_frames": 782,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T05:48:49.356Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T07:33:27.493Z" }
      }
    ],
    "title": "",
    "description": "p5.play may be all about creating sprites, but in this game we hate sprites. Catch the Cokes, not the Sprites.",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love it!",
        "created_at": { "$date": "2023-04-07T05:49:15.723Z" }
      }
    ]
  },
  {
    "_id": "MAc5LpQ5jJgrxveXh",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-20T19:18:08.308Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ff4a7d3e0edfa42cedcb67188170e4c9",
        "public_id": "avalanche2023spring/k0rdlt4kochkhkl8huxf",
        "version": 1679339898,
        "version_id": "d2d22648a0be33d2a75410441c12df3d",
        "signature": "5d792a3fbb2dd306ad78137a0ff034beaa77a7c1",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-20T19:18:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 6382359,
        "type": "upload",
        "etag": "d5ba14882153efc6db487f206bfd9c23",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679339898/avalanche2023spring/k0rdlt4kochkhkl8huxf.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679339898/avalanche2023spring/k0rdlt4kochkhkl8huxf.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679339898/avalanche2023spring/k0rdlt4kochkhkl8huxf.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316957",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "3605185",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 3917159,
        "duration": 12.979633,
        "rotation": 0,
        "nb_frames": 389,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8c8547806fb23871db51618d2210d5d8",
        "public_id": "avalanche2023spring/xgsa7idi0itss8f4brq1",
        "version": 1679339901,
        "version_id": "60e9681e8b75eed3a289a99dab09979e",
        "signature": "21a286de2f806a5fb314330fa58ba9abbbd8531e",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-20T19:18:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 6794034,
        "type": "upload",
        "etag": "bf6cdfb06a01f23ced5fabd1a1ee7135",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679339901/avalanche2023spring/xgsa7idi0itss8f4brq1.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679339901/avalanche2023spring/xgsa7idi0itss8f4brq1.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679339901/avalanche2023spring/xgsa7idi0itss8f4brq1.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316994",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "3487180",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 3802631,
        "duration": 14.247567,
        "rotation": 0,
        "nb_frames": 427,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "57a43d86b6cf91442f908e9d512543c0",
        "public_id": "avalanche2023spring/gu5zumxhlw6zxia8fc9c",
        "version": 1679339904,
        "version_id": "c6785c2501456667b24573b46baef66d",
        "signature": "6c0ff9cc49f8a5166c4d2b02921b8346cc1324d5",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-20T19:18:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 8671489,
        "type": "upload",
        "etag": "e0fa0bf09641678a96db8e653119c077",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679339904/avalanche2023spring/gu5zumxhlw6zxia8fc9c.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679339904/avalanche2023spring/gu5zumxhlw6zxia8fc9c.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679339904/avalanche2023spring/gu5zumxhlw6zxia8fc9c.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316792",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "7120824",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 7424220,
        "duration": 9.3093,
        "rotation": 0,
        "nb_frames": 279,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T16:36:37.927Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T21:19:12.194Z" }
      }
    ],
    "title": "",
    "description": "Playing around with event handlers on paper.js.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar triangle = [];\nvar num = 50;\nvar offset = 20;\n\nfor (var i=0; i<num; i++) {\n    // var center = [\n    //     view.center + (2*offset*Math.random()) - offset, \n    //     view.center + (2*offset*Math.random()) - offset\n    // ];\n    triangle[i] = new Path.RegularPolygon(view.center, 3, 150);\n    triangle[i].strokeColor = 'black';\n    triangle[i].strokeWidth = 0.5;\n    triangle[i].rotate(i*360/num);\n    triangle[i].onMouseMove = function(event) {\n        // this.strokeWidth+=0.2;\n        this.position.x+=((2*offset*Math.random())-offset);\n        this.position.y+=((2*offset*Math.random())-offset);\n    }\n    triangle[i].onMouseEnter = function(event) {\n        this.strokeWidth = 5;\n        // this.fillColor = new Color(1, 0, 0, 0.25);\n    }\n    triangle[i].onMouseLeave = function(event) {\n        this.strokeWidth = 0.5;\n        // this.fillColor = new Color(1, 0, 0, 0);\n    }\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love these!\n",
        "created_at": { "$date": "2023-03-23T21:19:10.284Z" }
      }
    ]
  },
  {
    "_id": "MKsFWALEmhvvX9ZDE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T01:55:14.089Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "68e55a07cd3775afb005d398d6deff48",
        "public_id": "avalanche2023spring/sqrindzpyf3levjqz51s",
        "version": 1680228114,
        "version_id": "3eace9f5337c594f583440e762cce5de",
        "signature": "184be1ccb0a6a721c920f06872aecfb3fe81fc93",
        "width": 1200,
        "height": 1194,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T02:01:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 4422675,
        "type": "upload",
        "etag": "2372c0d271bfedfa93907c1adaa50451",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680228114/avalanche2023spring/sqrindzpyf3levjqz51s.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680228114/avalanche2023spring/sqrindzpyf3levjqz51s.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680228114/avalanche2023spring/sqrindzpyf3levjqz51s.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125867",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "509204",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 952820,
        "duration": 37.133333,
        "rotation": 0,
        "nb_frames": 2287,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1044a64bf4ee29ae8a4cc3de8fc3690e",
        "public_id": "avalanche2023spring/jugb8lzih7otfn0fckfg",
        "version": 1680228151,
        "version_id": "834c52825b2d26567175dee6faecb78c",
        "signature": "436917c2dbb43d2837433d75bb59572011a7cfa6",
        "width": 1200,
        "height": 1194,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T02:02:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 5365488,
        "type": "upload",
        "etag": "faf607f256ab5894a18d10621c5767b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680228151/avalanche2023spring/jugb8lzih7otfn0fckfg.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680228151/avalanche2023spring/jugb8lzih7otfn0fckfg.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680228151/avalanche2023spring/jugb8lzih7otfn0fckfg.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125438",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "487056",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 920784,
        "duration": 46.616667,
        "rotation": 0,
        "nb_frames": 2856,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:38:34.426Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:14:04.589Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-11T04:56:24.548Z" }
      }
    ],
    "title": "",
    "description": "**Tried to improve Musicality** of Two Bots on Synths in terms of what notes should play together, but I may have made it worse",
    "code": "///////////////////////////////////////////////////////////////////\n// DECLARE ALL VARIABLES\n//\n\nlet Fscale = [\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"F3\", \"8n\"],\n  [\"G3\", \"8n\"],\n  [\"Ab3\", \"8n\"],\n  [\"Bb3\", \"8n\"],\n  [\"C4\", \"8n\"],\n  [\"Db4\", \"8n\"],\n  [\"E4\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"F4\", \"8n\"],\n  [\"G4\", \"8n\"],\n  [\"Ab4\", \"8n\"],\n  [\"Bb4\", \"8n\"],\n  [\"C5\", \"8n\"],\n  [\"Db5\", \"8n\"],\n  [\"E5\", \"8n\"],\n  [\"F5\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n];\n\nlet freq1, freq2;\nlet hue = 0;\nlet x1, y1, x2, y2;\nlet startColor1, endColor1, startColor2, endColor2;\nlet circleWidth = 8;\n\n///////////////////////////////////////////////////////////////////\n//CREATE SYNTHS & CONNECT TO SPEAKERS\n//\n\nconst synth1 = new Tone.Synth({\n  oscillator: {\n    type: \"square\", // sine, square, triangle, sawtooth, fat*\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.4,\n    sustain: 0.1,\n    release: 1,\n  },\n});\n\nconst synth2 = new Tone.Synth({\n  oscillator: {\n    type: \"square\", // sine, square, triangle, sawtooth, fat*\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.1,\n    sustain: 0.1,\n    release: 1,\n  },\n});\n\n// Connect to Speakers\nsynth1.toMaster();\nsynth2.toMaster();\n\n///////////////////////////////////////////////////////////////////\n//SETUP\n//\nfunction setup() {\n  createCanvas(600, 600);\n  background(\"rgb(0,0,0)\");\n  frameRate(3);\n  colorMode(RGB);\n\n  for (let i = 0; i <= Fscale.length; i++) {\n    push();\n    fill(\"#272727\");\n    noStroke();\n    for (let j = 0; j < width; j += 3)\n      rect(j, (height * i) / Fscale.length, 4, 4);\n    pop();\n  }\n\n  x1 = width / 2;\n  y1 = height /2;\n  x2 = width / 2;\n  y2 = height;\n\n  noStroke();\n\n  startColor1 = color(\n    floor(random(255)),\n    floor(random(255)),\n    floor(random(255))\n  );\n  endColor1 = color(floor(random(255)), floor(random(255)), floor(random(255)));\n  startColor2 = color(\n    floor(random(255)),\n    floor(random(255)),\n    floor(random(255))\n  );\n  endColor2 = color(floor(random(255)), floor(random(255)), floor(random(255)));\n}\n\n// function mouseMoved() {\n//   freq = floor(map(mouseY, height, 0, 0, Fscale.length));\n//   synth1.triggerAttackRelease(Fscale[freq], \"8n\");\n//   synth2.triggerAttackRelease(Fscale[15 - freq], \"8n\");\n// }\n\nfunction draw() {\n  background(\"rgba(0,0,0,0.0001)\");\n\n  //Recalibrate in case x or y lies outside the canvas\n  if (x1 < 0) x1 += 24;\n  if (x1 > width - 12) x1 -= 24;\n\n  if (y1 < 0) y1 += 24;\n  if (y1 > height - 12) y1 -= 24;\n\n  if (x2 < 0) x2 += 24;\n  if (x2 > width - 12) x2 -= 24;\n\n  if (y2 < 0) y2 += 24;\n  if (y2 > height - 12) y2 -= 24;\n\n  //Lerp Colors\n  let tempColor1 = lerpColor(startColor1, endColor1, random());\n  let tempColor2 = lerpColor(startColor2, endColor2, random());\n\n  //Create Squares for the two Walkers\n  push();\n  noFill();\n  strokeWeight(2);\n  push();\n  stroke(tempColor1);\n  rect(x1, y1, x1 / 2 + 5, 20);\n  pop();\n  stroke(tempColor2);\n  //rect(x2, y2, x2/2 + 5, 20);\n  pop();\n\n  //Calculate next random adjacent x/y position\n  x1 = randomizePos(x1);\n  x2 = randomizePos(x2);\n  y1 = randomizePos(y1);\n  y2 = randomizePos(y2);\n\n  freq1 = floor(map(y1, height, 0, 0, Fscale.length )); console.log(freq1);\n  freq2 = floor(map(y2, height, 0, 0, Fscale.length - 1));\n\n  if (freq1>Fscale.length-1) freq1 = Fscale.length-1;\n  if (freq1<0) freq1 = 0;\n  \n  let n2 = random();\n  if (n2 > 0.3 && Fscale[freq1][0] != \"rest\") {\n    synth1.triggerAttackRelease(Fscale[freq1][0], \"4n\");\n    console.log(\"a\");\n  }\n\n  let n = random();\n  if (n < 0.33) {\n    if (freq1 > 6 && Fscale[freq1 - 2][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 - 2][0], \"4n\");\n      console.log(\"b\");\n    } else if (freq1 < Fscale.length - 3 && Fscale[freq1 + 2][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 + 2][0], \"2n\");\n      console.log(\"c\");\n    }\n  } else if (n < 0.66) {\n    if (freq1 > 6 && Fscale[freq1 - 3][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 - 3][0], \"8n\");\n      console.log(\"d\");\n    } else if (freq1 < Fscale.length - 4 && Fscale[freq1 + 3][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 + 3][0], \"2n\");\n      console.log(\"e\");\n    }\n  } else {\n    if (freq1 > 6 && Fscale[freq1 - 4][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 - 4][0], \"4n\");\n      console.log(\"f\");\n    } else if (freq1 < Fscale.length - 5 && Fscale[freq1 + 5][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 + 4][0], \"8n\");\n      console.log(\"g\");\n    }\n  }\n\n  //makeVisualizer();\n}\n\nfunction randomizePos(z) {\n  let a = random();\n  if (a < 0.33 && frameCount != 0) {\n    z -= height / Fscale.length;\n  } else if (a < 0.66) {\n    z += height / Fscale.length;\n  }\n  return z;\n}",
    "comments": []
  },
  {
    "_id": "MNEWjA8Avwmvmu626",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:40:23.116Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4527d34464dc4de2e6a43b4182e5a20e",
        "public_id": "avalanche2023spring/cxd77arc2tbv3njpky7p",
        "version": 1683301347,
        "version_id": "10ff199c50ffbc8b89384e7280c30795",
        "signature": "9c18babe31ab04860b98e206117ecd865b13e33f",
        "width": 656,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:42:27Z",
        "tags": [],
        "bytes": 36714,
        "type": "upload",
        "etag": "ca1c37f0250e2b446ab9b07cc652d87c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683301347/avalanche2023spring/cxd77arc2tbv3njpky7p.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683301347/avalanche2023spring/cxd77arc2tbv3njpky7p.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:53.459Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:18:12.553Z" }
      }
    ],
    "title": "",
    "description": "Abstract 3D Tree",
    "code": "// Define tree module\nmodule tree(height, radius, angle, iteration) {\n  if (iteration > 0) {\n    cylinder(h=height, r1=radius, r2=radius * 0.7, center=true);\n    translate([0, 0, height]) {\n      rotate([0, angle, 0]) {\n        scale(0.7) tree(height * 0.7, radius * 0.7, angle, iteration - 1);\n      }\n      rotate([0, -angle, 0]) {\n        scale(0.7) tree(height * 0.7, radius * 0.7, angle, iteration - 1);\n      }\n    }\n  } else {\n    sphere(r=height/5);\n  }\n}\n\n// Draw tree\ntree(50, 5, 20, 5);",
    "comments": []
  },
  {
    "_id": "MPDrXvJwhYs488oZe",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-06T21:47:34.349Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a218f3c66844b3fb962cf23cea5ee839",
        "public_id": "avalanche2023spring/gkk35y5jwprttiwjlb7o",
        "version": 1678139257,
        "version_id": "5038a1696264cdaccc0694cda1f9e389",
        "signature": "fbf832b58535e36074f37218e52dec4d21983bde",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-06T21:47:37Z",
        "tags": [],
        "bytes": 25757,
        "type": "upload",
        "etag": "86914beffc4741962a176b73c95c6990",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678139257/avalanche2023spring/gkk35y5jwprttiwjlb7o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678139257/avalanche2023spring/gkk35y5jwprttiwjlb7o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "08b1add2778d3a045cee6ada9a0b9e58",
        "public_id": "avalanche2023spring/x6ny11awk1cdzrodnsfs",
        "version": 1678139259,
        "version_id": "2463af54c756e10ea6b2a5e89ebcb864",
        "signature": "ea890cfb2ce0a83a5e102c0d80e5e545682763a8",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-06T21:47:39Z",
        "tags": [],
        "bytes": 24327,
        "type": "upload",
        "etag": "90971f49771451c85349bee553e94705",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678139259/avalanche2023spring/x6ny11awk1cdzrodnsfs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678139259/avalanche2023spring/x6ny11awk1cdzrodnsfs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T00:53:08.988Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:45:59.322Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T10:36:07.788Z" }
      }
    ],
    "title": "",
    "description": "Figure out a way to use createGraphics() and copy() to make text into an image and then sampled the pixels from that image. Positioning is wonky though, wish there was a better way to do this. (Custom font may not work in preview!)",
    "code": "class Square {\n  constructor(x, y, imgWidth, imgHeight) {\n    this.x = x;\n    this.y = y;\n    this.color = noise(x*.3,y *.3)*360;\n    this.sideLength = 20;\n    this.width = imgWidth;\n    this.height = imgHeight;\n\n  }\n  draw() {\n    \n    push();\n    rectMode(CENTER);\n    angleMode(DEGREES);\n\n    fill(this.color);\n    strokeWeight(0);\n    rect(this.x *5 - this.width/2, this.y * 5, this.sideLength, this.sideLength);\n       \n    pop();\n  }\n}\n\nfunction dataDraw(img) {\n  img.loadPixels();\n    \n  for (let y = 0; y < img.height; y+=3) {\n      for (let x = 0; x < img.width; x+=3) {\n\n        \n        const c = getQuick(img, x, y)[0];\n        if (c === 0) {\n          var currentSquare = new Square(x,y, img.width, img.height);\n           \n          currentSquare.draw();\n          \n        }\n     \n        setQuick(img, x, y, c);\n      }\n    }\n  img.updatePixels();\n  }\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n\n\n}\n\nfunction draw() {\n  background(0);\n  textCanvas = createGraphics(200, 200)\n  textCanvas.background(255);\n  textCanvas.fill(0);\n  textCanvas.textSize(textCanvas.width);\n  textCanvas.textAlign(CENTER, CENTER)\n  textCanvas.textFont('UnifrakturMaguntia')\n  textCanvas.text('g', textCanvas.width/2,     textCanvas.height/3.5);\n  textImage = createImage(textCanvas.width,textCanvas.height)\n  textImage.copy(textCanvas, 0, 0, textCanvas.width, textCanvas.height, 0, 0, textCanvas.width, textCanvas.height);\n  dataDraw(textImage);\n\n}",
    "comments": []
  },
  {
    "_id": "MPefN7onpDK2iRPZ9",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T11:38:45.784Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9cd2f0460b6d2423c59e5329f33ef3a5",
        "public_id": "avalanche2023spring/awaqmzxcujmhstu1hqx6",
        "version": 1683891703,
        "version_id": "309b53573475221b1bf2d7830fb6653c",
        "signature": "e8bdd3b9c9af54802cb7dd29f3a88649e1838508",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T11:41:43Z",
        "tags": [],
        "bytes": 122893,
        "type": "upload",
        "etag": "a6865545bd1fd2ad001130abef854b5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683891703/avalanche2023spring/awaqmzxcujmhstu1hqx6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683891703/avalanche2023spring/awaqmzxcujmhstu1hqx6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c39e975adc63082bd9ce68a7521eb3fe",
        "public_id": "avalanche2023spring/fr6qr2bxt9qda8zhr3ox",
        "version": 1683891734,
        "version_id": "1bd4117625336b7b622c6f9285bd64f5",
        "signature": "f2beb4236959b8a48674dcb07b9aff3389661d0f",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T11:42:14Z",
        "tags": [],
        "bytes": 97724,
        "type": "upload",
        "etag": "850096c86b3aeb0feb114971936fda4e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683891734/avalanche2023spring/fr6qr2bxt9qda8zhr3ox.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683891734/avalanche2023spring/fr6qr2bxt9qda8zhr3ox.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "fee93eb9020c8a9d1c86953b4566a57b",
        "public_id": "avalanche2023spring/dcely2koo3odga7svp61",
        "version": 1683892317,
        "version_id": "a50b1eb81f8553568227db4f21500629",
        "signature": "054d2930019757de4e1d5b949acb823b154a6da3",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T11:51:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 4066486,
        "type": "upload",
        "etag": "e7d2f1c34d31d88e577a1cea2ed870a3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683892317/avalanche2023spring/dcely2koo3odga7svp61.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683892317/avalanche2023spring/dcely2koo3odga7svp61.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683892317/avalanche2023spring/dcely2koo3odga7svp61.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125552",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3083285",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3943259,
        "duration": 8.25,
        "rotation": 0,
        "nb_frames": 554,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T14:11:12.967Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T14:36:15.573Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:12.661Z" }
      }
    ],
    "title": "",
    "description": "**Parametric Flowers** using Turtle Graphics. Should have named the parameters *number of petals* and *size*. Yet to figure out how to center the flower, so that I can then begin to build a garden. Also need to fine tune the detailing",
    "code": "let myTurtle;\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Length: 20,\n  Sides: 9,\n}\n\npane.addInput(params, \"Length\", { min: 10, max: 30 });\npane.addInput(params, \"Sides\", { min: 3, max: 12 });\n\n\nfunction setup() {\n  \n  createCanvas(500, 500);\n  myTurtle = new Turtle(width*0.5, height*0.5);\n  \n  noFill();\n  stroke(255, 160, 180);\n  strokeWeight(3);\n  background(40);\n  frameRate(6);\n  //noLoop();\n}\n\nfunction draw() {\n  background(70);\n  \n  let length = params.Length;\n  let sides = params.Sides;\n  \n  translate(sides*5 + (9-sides), sides*2);\n  scale(0.8);\n  \n  for (let i = 0; i < sides; i++) {\n    \n    myTurtle.moveForward(length);\n    \n    for (let j=0; j<4; j++) {\n      \n      myTurtle.penUp();\n      myTurtle.pushState();\n      \n      strokeWeight(4-j);\n\n        myTurtle.moveBackward(length - j*8);\n        myTurtle.turnLeft(120);\n\n        for (let k=0; k < 9+((9-sides)/3)-(j*1); k++) {\n\n          myTurtle.penDown();\n          myTurtle.moveForward(25 - 3*j);\n          myTurtle.turnRight(22.75 + 0.75*j);\n\n        }\n    \n      myTurtle.popState();\n      myTurtle.penDown();\n      \n    }\n    \n    myTurtle.turnRight(360/sides);\n    \n  }\n  \n  console.log(360 - (360/sides));\n}",
    "comments": []
  },
  {
    "_id": "MXKP7oQdeAZw83gCC",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-03T08:52:33.547Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c59b7934b6ee44e08c27ce570dc2f04c",
        "public_id": "avalanche2023spring/ihbigaahdgep4pniu7bk",
        "version": 1683103979,
        "version_id": "7bd9275dd55bc37172af2e2b85853184",
        "signature": "f7f7f5f1c6889142bc7c027f5a7344ba8d2b126a",
        "width": 1505,
        "height": 1249,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T08:52:59Z",
        "tags": [],
        "bytes": 78118,
        "type": "upload",
        "etag": "0d13614fdb797d8dd5e5cefef9a9aae2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683103979/avalanche2023spring/ihbigaahdgep4pniu7bk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683103979/avalanche2023spring/ihbigaahdgep4pniu7bk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8540734cfb1017ca35324ebffff63d70",
        "public_id": "avalanche2023spring/kannpcdwfxpjffjxso2q",
        "version": 1683103982,
        "version_id": "444cce0bb683faabc446d602e149a551",
        "signature": "1d73b277fe49698959b13cb6ff03c4643b7eee7b",
        "width": 1375,
        "height": 1177,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T08:53:02Z",
        "tags": [],
        "bytes": 131172,
        "type": "upload",
        "etag": "96a813a157cc0bf5f9e76bca23ace6b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683103982/avalanche2023spring/kannpcdwfxpjffjxso2q.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683103982/avalanche2023spring/kannpcdwfxpjffjxso2q.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b6f28f6a5bd8ddbea7086a7a0bd269c3",
        "public_id": "avalanche2023spring/hnzqytgeargw7jiz5trt",
        "version": 1683103985,
        "version_id": "1b2119d09ead6aac435ab0d00c9fc1df",
        "signature": "ce5b49f4137adcc5e9b208d093cc6adf59e36d5e",
        "width": 1708,
        "height": 1265,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T08:53:05Z",
        "tags": [],
        "bytes": 287908,
        "type": "upload",
        "etag": "b328b35bcbe9defec0baceeca7d820ed",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683103985/avalanche2023spring/hnzqytgeargw7jiz5trt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683103985/avalanche2023spring/hnzqytgeargw7jiz5trt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T22:37:22.659Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-04T14:44:13.942Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-04T23:59:17.981Z" }
      }
    ],
    "title": "",
    "description": "Trial 1 for the Castle challenge. Building the primitives took a while this time.",
    "code": "floorheight = 4;\nwallwidth = 0.25;\nmiddleroom = 3.5;\nturretsize = 0.5;\nwindowsize = 1.2;\nwindowjamb = 0.15;\nmiddlewindowheight = 5;\nouterwallsize = middleroom*3;\ntowerheight = floorheight*2;\ntowersize = 1;\ndoorsize = 2;\n\n///////////////////////////////////\n\n//WINDOW\n\nmodule window () {\n    difference () {\n        //window outer shell\n        union () {\n            cube([windowsize, wallwidth*2, windowsize], true);\n\n            rotate([90, 0, 0])\n            translate([0,windowsize/2,0])\n            cylinder($fn = 30, h=wallwidth*2, r=windowsize/2, center=true); \n        }\n\n        //window inner shell, cutout\n        union () {\n            translate([0, 0, windowjamb/2])\n            cube([windowsize - windowjamb*2, wallwidth*2 + 1, windowsize - windowjamb*2 + windowjamb], true);\n\n            rotate([90, 0, 0])\n            translate([0,windowsize/2,0])\n            cylinder($fn = 30, h=wallwidth*2 +1, r=windowsize/2 - windowjamb, center=true); \n        }\n    }\n\n    //window bars\n    for (i=[-windowsize/6:windowsize/3:windowsize/6]) {\n        translate([i,0,windowjamb*2])\n        cylinder($fn = 50, h=windowsize*1.3, r=windowjamb/2, center=true);\n    }\n}\n\n//window shell\nmodule window_outer () {\n    union () {\n        cube([windowsize, wallwidth*2, windowsize], true);\n\n        rotate([90, 0, 0])\n        translate([0,windowsize/2,0])\n        cylinder($fn = 30, h=wallwidth*2, r=windowsize/2, center=true); \n    }\n}\n\n///////////////////////////////////\n\n//MIDDLE TOWER\n\nmodule middle_tower () {\n    //tower with inner cutout\n    translate ([0, 0, floorheight]) \n    difference () {\n        cube([middleroom, middleroom , floorheight*2], true);\n        cube([middleroom - (wallwidth*2), middleroom - (wallwidth*2) , floorheight*2 + 1], true);\n    }\n}\n\nmodule middle_top () {\n    //inverted cut pyramid shape\n    translate ([0, 0, floorheight*2])\n    rotate ([0, 0, 45])\n    cylinder(wallwidth*3, middleroom*0.71,middleroom,$fn=4); //z, bottom, top\n\n    //roof parapet\n    translate ([0, 0, floorheight*2 + wallwidth*3 + wallwidth*2.5]) {\n        difference () {\n            cube([middleroom*1.45, middleroom*1.45 , wallwidth*5], true);\n            cube([middleroom*1.45 - (wallwidth*2), middleroom*1.45 - (wallwidth*2) , floorheight*2 + 1], true);\n        }\n    }\n}\n\nmodule middle_turret_cut () {\n    union () {\n        for (i=[-1.5:turretsize*2:1.5]) {\n            //y axis turret cutouts\n            translate([0,i,floorheight*2 + wallwidth*3 + wallwidth*5 - turretsize/2])\n            cube([10,turretsize,turretsize*1.1], true);\n            \n            //y axis turret cutouts\n            translate([i,0,floorheight*2 + wallwidth*3 + wallwidth*5 - turretsize/2]) \n            cube([turretsize,10,turretsize*1.1], true);\n        }\n    }\n}\n\nmodule middle_roof () {\n    difference () {\n        middle_top ();\n        middle_turret_cut ();\n    }\n}\n\nmodule middle_window_cutouts () {\n    union () {\n        translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n        window_outer ();\n\n        translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n        window_outer ();\n\n        rotate([0,0,90]) {\n            translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n            window_outer ();\n                \n            translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n            window_outer ();\n        }\n    }\n}\n\nmodule middle_windows () {\n    translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n    window ();\n\n    translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n    window ();\n\n    rotate([0,0,90]) {\n        translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n        window ();\n            \n        translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n        window ();\n    }\n}\n\n///////////////////////////////////\n\n//OUTER WALL\n\nmodule outer_wall () {\n    //wall with inner cutout\n    translate ([0, 0, floorheight/2]) \n    difference () {\n        cube([outerwallsize, outerwallsize , floorheight], true);\n        cube([outerwallsize - (wallwidth*2), outerwallsize - (wallwidth*2) , floorheight + 1], true);\n    }\n}\n\nmodule outer_turret_cut () {\n    union () {\n        for (i=[-4.5:turretsize*2:4.5]) {\n            //y axis turret cutouts\n            translate([0,i,floorheight - turretsize/2])\n            cube([15,turretsize,turretsize*1.1], true);\n            \n            //y axis turret cutouts\n            translate([i,0,floorheight - turretsize/2]) \n            cube([turretsize,15,turretsize*1.1], true);\n        }\n    }\n}\n\n///////////////////////////////////\n\n//OUTER TOWERS\n\nmodule outer_tower_structure () {   \n    //tower\n    difference () {\n        cylinder($fn=75, h=towerheight, r=towersize, center=true);\n        cylinder($fn=75, h=towerheight + 1, r=towersize - wallwidth, center=true);\n    }\n\n    //roof\n    translate ([0, 0, towerheight/2])\n    cylinder(towerheight*0.4, towersize*1.75, 0, $fn=100); \n}\n\nmodule outer_tower () {\n    //cutting out window\n    color(\"grey\") difference () {\n        translate ([0, 0, towerheight/2])\n        outer_tower_structure ();\n\n        translate ([0, towersize*0.8, towerheight*0.7])\n        window_outer ();\n    }\n\n    //adding window\n    translate ([0, towersize*0.8, towerheight*0.7])\n    color([140/255, 105/255, 30/255])\n    window ();\n}\n\n//drawing all windows\nmodule all_towers () {\n    translate ([outerwallsize/2, outerwallsize/2, 0])\n    outer_tower ();\n    \n    translate ([-outerwallsize/2, outerwallsize/2, 0])\n    outer_tower ();\n    \n    translate ([-outerwallsize/2, -outerwallsize/2, 0])\n    rotate([0, 0, 180])\n    outer_tower ();\n    \n    translate ([outerwallsize/2, -outerwallsize/2, 0])\n    rotate([0, 0, 180])\n    outer_tower ();\n}\n\n///////////////////////////////////\n\n//DOOR\n\nmodule door () {\n    union () {\n        cube([doorsize, wallwidth*2, doorsize], true);\n\n        rotate([90, 0, 0])\n        translate([0,doorsize/2,0])\n        cylinder($fn = 30, h=wallwidth*2, r=doorsize/2, center=true); \n    }\n}\n\n///////////////////////////////////\n\n//middle tower\ncolor(\"grey\") {\n    difference () {\n        middle_tower ();\n        middle_window_cutouts ();\n    }\n    middle_roof ();\n}\ncolor([140/255, 105/255, 30/255]) middle_windows ();\n\n//outer boundary wall\ncolor(\"grey\") difference () {\n    outer_wall ();\n    outer_turret_cut ();\n}\ntranslate([0, outerwallsize/2 - wallwidth/2, doorsize/2]) color([140/255, 105/255, 30/255]) door ();\n\n//towers\nall_towers ();",
    "comments": []
  },
  {
    "_id": "MYN8tpLL7DY8Ggp4D",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": { "$date": "2023-04-28T16:04:06.561Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "01d8cb3255ccc3ef46e5413b3f905ed2",
        "public_id": "avalanche2023spring/bpaxpor8y0ocfu3puqfb",
        "version": 1682697859,
        "version_id": "93fe48c632a7e6bfe9d1bec75986e853",
        "signature": "08ed1a9b344703545baf1d5a13c3c322d7f25b78",
        "width": 767,
        "height": 766,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T16:04:19Z",
        "tags": [],
        "bytes": 89167,
        "type": "upload",
        "etag": "525665cf6ddc801ca3d03111a6994c41",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682697859/avalanche2023spring/bpaxpor8y0ocfu3puqfb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682697859/avalanche2023spring/bpaxpor8y0ocfu3puqfb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2916c548d1942ce352a4f61792e6a7e1",
        "public_id": "avalanche2023spring/rque6anshxddhrohsjlv",
        "version": 1682697862,
        "version_id": "886f45b198e373ae1e94eb5abc97bab1",
        "signature": "1f19b808fa770781f9ff5782c29b854275677d50",
        "width": 762,
        "height": 766,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T16:04:22Z",
        "tags": [],
        "bytes": 85313,
        "type": "upload",
        "etag": "02d7bca02ca44f8eb67612ccd4742ebd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682697862/avalanche2023spring/rque6anshxddhrohsjlv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682697862/avalanche2023spring/rque6anshxddhrohsjlv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "I wanted to recreate the garden sketch I made in parameters week in paper.js. I've been planning to print this sketch on the risograph, and I thought paper.js would work well because it will allow me to easily separate the different colored layers in illustrator. I am still working out how to change some of the petal colors, but I think it might be easier to do that in illustrator.",
    "comments": []
  },
  {
    "_id": "Mc7Prh4CCPubd5w2N",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T03:07:32.942Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "46e313675750373b7a6f1056930d510f",
        "public_id": "avalanche2023spring/ppr5u3zuymfg7iamjxnq",
        "version": 1678417731,
        "version_id": "0697fcbdbe544c62d0e795a943f4c1bf",
        "signature": "0de6f7893ba53783912f2e8007411a1bde451fc1",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-10T03:08:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 18004338,
        "type": "upload",
        "etag": "b7c8018bb9eac10234be3416166af283",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678417731/avalanche2023spring/ppr5u3zuymfg7iamjxnq.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678417731/avalanche2023spring/ppr5u3zuymfg7iamjxnq.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678417731/avalanche2023spring/ppr5u3zuymfg7iamjxnq.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "91267",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "7052158",
          "dar": "16:9",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 59.94005994005994,
        "bit_rate": 7248907,
        "duration": 19.86985,
        "rotation": 0,
        "nb_frames": 1191,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:41.522Z" }
      }
    ],
    "title": "",
    "description": "Building on a previous sketch - ouroboros using HSL colors and noise",
    "code": "var img2;\nlet imgCheck = true;\n\nfunction preload() {\n  treeImg = loadImage(\"/trees.jpg\");\n}\n\nfunction setup() {\n  createCanvas(450, 600);\n  \n  colorMode(HSL)\n  \n  frameRate(1);\n  \n  img2 = createImage(width, height)\n  // noLoop();\n}\n\nfunction draw() {\n  background(240);\n  \n  if(imgCheck){\n  treeImg.loadPixels();\n    ref = treeImg\n    imgCheck = false\n  }\n  else{\n    img2.loadPixels();\n    ref = img2\n  }\n  \n  noStroke();\n\n  for (let y = 0; y < ref.height; y+=5) {\n    for (let x = 0; x < ref.width; x+=5) {\n\n      const in_color = ref.get(x, y);\n  \n      \n      const dot_size = (in_color[0] + in_color[1] + in_color[2])/90;\n      \n      p = map(x, 0, ref.width, 0, img2.width)\n      q = map(y, 0, ref.height, 0, img2.height)\n      \n      c = (noise(x, y+frameCount)-0.5)*200-100\n      \n      colorNewH = abs(in_color[0]-c)\n      colorNewS = abs(in_color[0]-50)\n      colorNewL = abs(in_color[0]-50)\n      \n      out_color = color(colorNewH, colorNewS, colorNewL)\n      \n      img2.set(p, q, out_color);\n      \n      // fill(in_color)\n      \n      // ellipse(\n      //   x,\n      //   y,\n      //   dot_size,\n      //   dot_size\n      // );\n    }\n  }\n  \n  img2.updatePixels();\n\n  noSmooth();\n  image(img2, 0, 0, width, height);\n  \n  // noLoop();\n  \n}",
    "comments": []
  },
  {
    "_id": "MgSceni5dXsv28Eb2",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T02:10:14.192Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2ef1a36e652dc55fd01297c8a8ef5b63",
        "public_id": "avalanche2023spring/zqjb8ypwmunnlxaxkebi",
        "version": 1680833453,
        "version_id": "21c3566c6ed0e1a4d41403a46eb41a74",
        "signature": "7dd97d6f699dc9233913b293ef65ba9f4b75751c",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T02:10:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 952828,
        "type": "upload",
        "etag": "68354360686391070178e53e645775a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680833453/avalanche2023spring/zqjb8ypwmunnlxaxkebi.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680833453/avalanche2023spring/zqjb8ypwmunnlxaxkebi.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680833453/avalanche2023spring/zqjb8ypwmunnlxaxkebi.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125572",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "153917",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 613902,
        "duration": 12.416667,
        "rotation": 0,
        "nb_frames": 804,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:47:20.201Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T04:17:55.923Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:31:29.59Z" }
      }
    ],
    "title": "",
    "description": "**Couch Co-op Pong Golf with Aabha:** We made pong, with the goal to push the ball into the black hole to score. W-S controls the left paddle, UP/DOWN arrow controls the right paddle. The hole is positioned in a random point in the play-space every round. Right now, we need to refine the mechanic though, the ball is hard to control, and you can score through luck very often",
    "code": "let topWall, bottomWall, leftWall, rightWall, ball, racketLeft, racketRight, basket;\nlet hole;\nlet holeX=250, holeY=250;\nlet score = 0;\nlet ballSpeed=10;\n\nlet leftPos = 250;\nlet rightPos = 250;\n\nfunction setup() {\n    createCanvas(500, 500);\n    noStroke();\n\n    topWall = createSprite(250, 10, 500, 20);\n    bottomWall = createSprite(250, 490, 500, 20);\n    leftWall = createSprite(10, 250, 20, 500);\n    rightWall = createSprite(490, 250, 20, 500);\n    racketLeft = createSprite(40, leftPos, 20, 70);\n    racketRight = createSprite(460, 250, 20, 70);\n\n    holeX = random(60, 440);\n    holeY = random(20, 480);\n    hole = createSprite(holeX, holeY, 30, 30);\n \n hole.shapeColor = color(0, 0, 0);\n  leftWall.shapeColor = color(100, 100, 100);\n  rightWall.shapeColor = color(100, 100, 100);\n  topWall.shapeColor = color(100, 100, 100);\n  bottomWall.shapeColor = color(100, 100, 100);\n  racketLeft.shapeColor = color(255, 0, 0);\n    racketRight.shapeColor = color(0, 0, 255);\n\n    // basket = createSprite(250, 455, 100, 81);\n    // basket.addAnimation('normal', 'assets/basket.png');\n\n    topWall.immovable = true;\n    bottomWall.immovable = true;\n    leftWall.immovable = true;\n    rightWall.immovable = true;\n    racketLeft.immovable = true;\n    racketRight.immovable = true;\n    hole.immovable = true;\n    // basket.immovable = true;\n\n    ball = createSprite(30, 30, 20, 20);\n    ball.setVelocity(setBiasedVelocity(), setBiasedVelocity());\n    ball.shapeColor = color(252, 169, 3);\n\n\n  }\n\n  function setBiasedVelocity() {\n    let a;\n    if (random()<0.5)\n        {a = min(random(-7, 7), random(-7, 7), random(-7, 7), random(-7, 7));}\n    else\n        {a = max(random(-ballSpeed, ballSpeed), random(-ballSpeed,ballSpeed), random(-ballSpeed, ballSpeed), random(-ballSpeed, ballSpeed));}\n    \n    \n    return a;\n  }\n \n \nfunction draw() {\n    background(220);\n       \n    ball.bounce(topWall);\n    ball.bounce(bottomWall);\n    ball.bounce(leftWall);\n    ball.bounce(rightWall);\n\n    ball.bounce(racketLeft);\n    ball.bounce(racketRight);\n\n    racketLeft.bounce(topWall);\n    racketLeft.bounce(bottomWall);\n    racketRight.bounce(topWall);\n    racketRight.bounce(bottomWall);\n\n    if (ball.overlap(hole)) {\n        score++;\n\n        ball.position.x = 250;\n        ball.position.y = 250;\n        ball.setVelocity(setBiasedVelocity(), setBiasedVelocity());\n\n        holeX = random(60, 440);\n        holeY = random(20, 480);\n        hole.position.x = holeX;\n        hole.position.y = holeY;\n\n        console.log(score);\n    }\n    textSize(25);\n  text(\"Score:\", 200, 250);\n \n    text(score, 280, 250);\n\n    racketLeft.position.y = constrain(leftPos, racketLeft.height / 2 + 20, height - 20 - racketLeft.height / 2);\n    racketRight.position.y = constrain(rightPos, racketRight.height / 2 + 20, height - 20 - racketRight.height / 2);\n\n    if (keyDown('w')) {\n        leftPos -=10;\n    }\n\n    if (keyDown('s')) {\n        leftPos +=10;\n    }\n\n    if (keyDown(DOWN_ARROW)) {\n        rightPos +=10;\n    }\n\n    if (keyDown(UP_ARROW)) {\n        rightPos -=10;\n    }\n\n   \n\n    drawSprites();\n\n\n  }",
    "comments": []
  },
  {
    "_id": "MhqLK8MXnTwLBfiip",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T06:17:59.493Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ccd84112c736647be8b977082ab66094",
        "public_id": "avalanche2023spring/rl0mahfy4bf92e9sqadp",
        "version": 1679638949,
        "version_id": "e7176d6cf6dd544b1fa0eb30ceb3304d",
        "signature": "f1b001cc9c37860c8b480626140468484037593f",
        "width": 1335,
        "height": 1268,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T06:22:29Z",
        "tags": [],
        "bytes": 1612368,
        "type": "upload",
        "etag": "7925598f2186beb650da4d9f5393f1e8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679638949/avalanche2023spring/rl0mahfy4bf92e9sqadp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679638949/avalanche2023spring/rl0mahfy4bf92e9sqadp.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "142fbbd7f9d04861576c37ba0bce4e4a",
        "public_id": "avalanche2023spring/wj4sf17ceiwfof1rhqp2",
        "version": 1679638952,
        "version_id": "1901063608bad189052fa3ff98aad47d",
        "signature": "a7490be49c9a2ee5c556ae53391af8ffe8b35f14",
        "width": 1335,
        "height": 1268,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T06:22:32Z",
        "tags": [],
        "bytes": 632548,
        "type": "upload",
        "etag": "b7d610412708da806d6e18170096d3c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679638952/avalanche2023spring/wj4sf17ceiwfof1rhqp2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679638952/avalanche2023spring/wj4sf17ceiwfof1rhqp2.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "be53c436039b7cbedbb9f9db628281af",
        "public_id": "avalanche2023spring/a62xucejhcnj34hj0j3y",
        "version": 1679638959,
        "version_id": "68847994bbc0e4e9f6653c43fc67c62e",
        "signature": "8ca98ba23c05ef67f32cdc63520e108377644638",
        "width": 1335,
        "height": 1268,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T06:22:39Z",
        "tags": [],
        "bytes": 1600149,
        "type": "upload",
        "etag": "966c721e019b13b2ab716178e56c4123",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679638959/avalanche2023spring/a62xucejhcnj34hj0j3y.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679638959/avalanche2023spring/a62xucejhcnj34hj0j3y.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-03-26T19:06:08.504Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-08T21:58:07.275Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:33:05.126Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge: worked on rama's svg file in illustrator",
    "comments": []
  },
  {
    "_id": "Mk4JCM3EiCpyjxyA4",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T03:40:03.866Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7fa41ecf39af13519160d389e9248e2b",
        "public_id": "avalanche2023spring/hv7cwf8zkewg2aelyhhw",
        "version": 1683258017,
        "version_id": "006236a6f4bbf832e67e36115985dd25",
        "signature": "55392ade25bb568457dbaad15e2a526c8e0f7a65",
        "width": 976,
        "height": 631,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T03:40:17Z",
        "tags": [],
        "bytes": 172733,
        "type": "upload",
        "etag": "ce1e0bf2bb234bd4e1af6d4826e64534",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683258017/avalanche2023spring/hv7cwf8zkewg2aelyhhw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683258017/avalanche2023spring/hv7cwf8zkewg2aelyhhw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T04:31:15.693Z" }
      }
    ],
    "title": "",
    "description": "Here is my unrendered sandcastle! I made the shells in Blender, but everything else was created in OpenScad",
    "comments": []
  },
  {
    "_id": "Mpid3BSFhiJW4zRjD",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T14:07:37.326Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0ef63b81ab6c03f750645bdf2df1f067",
        "public_id": "avalanche2023spring/o06f31nyxxdis70uf6tw",
        "version": 1680876823,
        "version_id": "8e1acbb2139c8429c445b78b9db537b8",
        "signature": "62f656930a65c4bd3238220d6932d3e531bac420",
        "width": 650,
        "height": 518,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T14:13:43Z",
        "tags": [],
        "bytes": 182135,
        "type": "upload",
        "etag": "0ae03deb462acc8bd081072735f604f7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680876823/avalanche2023spring/o06f31nyxxdis70uf6tw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680876823/avalanche2023spring/o06f31nyxxdis70uf6tw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ee17086b44bd36710d41ddc7a41ff95b",
        "public_id": "avalanche2023spring/b6kb7e6llzwuvm0cvezd",
        "version": 1680876831,
        "version_id": "99e328556217d67fc4153a8954a9b4c1",
        "signature": "06dba3f33e2dc492a54fb34574df7522dd377624",
        "width": 1912,
        "height": 1142,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T14:13:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 3654240,
        "type": "upload",
        "etag": "f65a22510eed0dde5af15e31d1d926af",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680876831/avalanche2023spring/b6kb7e6llzwuvm0cvezd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680876831/avalanche2023spring/b6kb7e6llzwuvm0cvezd.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680876831/avalanche2023spring/b6kb7e6llzwuvm0cvezd.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126199",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "862241",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1362886,
        "duration": 21.45,
        "rotation": 0,
        "nb_frames": 1346,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 9 (1/4): I did not like using p5play.org at all, this was one of the worst weeks for me and I just couldn't figure anything out. So in light of that, here is a game I made using sprites through unity :D. It is like pacman. https://levtrix3.itch.io/cheese-chaser",
    "comments": []
  },
  {
    "_id": "MsideZJ957Sz7QQyC",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-11T19:41:02.409Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4c95d1df05fddb9376134b475c2723d8",
        "public_id": "avalanche2023spring/beqzsoghg9mdp4r0fc1a",
        "version": 1683834098,
        "version_id": "9b2b3f6eb86b9e3359c5bda0f2591752",
        "signature": "7a3994700b662fd863db9a5e43bcecaca562d85f",
        "width": 1220,
        "height": 1220,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-11T19:41:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 18562927,
        "type": "upload",
        "etag": "f3df1b9335975853d766258c210f3544",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683834098/avalanche2023spring/beqzsoghg9mdp4r0fc1a.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683834098/avalanche2023spring/beqzsoghg9mdp4r0fc1a.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683834098/avalanche2023spring/beqzsoghg9mdp4r0fc1a.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128162",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "11947097",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 13561955,
        "duration": 10.95,
        "rotation": 0,
        "nb_frames": 718,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "93ce3ef007e31a98aa3faaa8184ffb4d",
        "public_id": "avalanche2023spring/pkcqfklostkol3wp0mi6",
        "version": 1683834128,
        "version_id": "5ec1379a8797df3b262a24f44497d083",
        "signature": "ce0f8bc6ea5cb4166770056bd51ecb7d9d2b547a",
        "width": 1220,
        "height": 1220,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T19:42:08Z",
        "tags": [],
        "bytes": 117330,
        "type": "upload",
        "etag": "69663bc7265b480746b87f24cc3b3858",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683834128/avalanche2023spring/pkcqfklostkol3wp0mi6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683834128/avalanche2023spring/pkcqfklostkol3wp0mi6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "80f0a21d07e49d1e43fbb311479dbeb1",
        "public_id": "avalanche2023spring/az5njrijmzdcptsuwfwk",
        "version": 1683834211,
        "version_id": "b3b7554ad7a8b943fb37954f7c03a3e4",
        "signature": "873e44cfacfaf1f0309ee71375876b6fca31f5c9",
        "width": 1220,
        "height": 1220,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-11T19:43:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 18889411,
        "type": "upload",
        "etag": "3bd77de27abd7587f9409b3992b97ae2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683834211/avalanche2023spring/az5njrijmzdcptsuwfwk.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683834211/avalanche2023spring/az5njrijmzdcptsuwfwk.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683834211/avalanche2023spring/az5njrijmzdcptsuwfwk.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127120",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "12923977",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 14695166,
        "duration": 10.283333,
        "rotation": 0,
        "nb_frames": 678,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:18.703Z" }
      }
    ],
    "title": "",
    "description": "**Pavilion** in progress on OpenSCAD.",
    "code": "for (i=[0: 4: 1000]) { \n    \n    translate ([i/1.5, sin(i)*90, cos(i)*90]) {\n        color(c = [(sin(i) + 1)/2, (cos(i) + 1)/2, 0.8]) \n        cube([i/50, i/5, i/50]);\n        if (i%20 == 0) {  color(c = [(sin(i) + 1)/2, (cos(i) + 1)/2, 0.8]) cube([4, 2, 200]); }\n    }\n   \n}\n\ntranslate([-50, -100, 100]) {\n    color(\"white\") cube([800, 300, 5]);\n}",
    "comments": []
  },
  {
    "_id": "MvpcpoRgE8TsqpyT9",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T17:28:34.173Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2a9b433b157b02e5eee3db136b65fba2",
        "public_id": "avalanche2023spring/qgojwea3ap81lse0fp87",
        "version": 1676568531,
        "version_id": "9818694662720d316b0fd690926381ba",
        "signature": "298f55ec812e912b7777910d241f135734b6c6db",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T17:28:51Z",
        "tags": [],
        "bytes": 3569305,
        "type": "upload",
        "etag": "c38155d0fa56674a4d1946df6ee1cfca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676568531/avalanche2023spring/qgojwea3ap81lse0fp87.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676568531/avalanche2023spring/qgojwea3ap81lse0fp87.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T18:31:09.526Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:35.687Z" }
      }
    ],
    "title": "",
    "description": "My attempt at a \"treasure map\" - I ran out of time, but I like how the river was starting to look as I was manipulating noise",
    "comments": []
  },
  {
    "_id": "N4NjbvmriAGLPMjSR",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "API",
    "created_at": { "$date": "2023-04-27T23:20:40.707Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37c2808dd86f5ad6d2dd8e6981e27267",
        "public_id": "avalanche2023spring/iwiwuzao4ypxx9vzinsk",
        "version": 1682637647,
        "version_id": "3833df7871ae237686a49833d6f9e8ef",
        "signature": "3016bf091029d45058d775de8fdaa06bc3f0cd3a",
        "width": 992,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-27T23:20:47Z",
        "tags": [],
        "bytes": 379433,
        "type": "upload",
        "etag": "2bfa5f1ae6f29c6b04b9a5d42d73cee3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682637647/avalanche2023spring/iwiwuzao4ypxx9vzinsk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682637647/avalanche2023spring/iwiwuzao4ypxx9vzinsk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Going back to vectors to play around for some practice - still having a hard time with it",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar rects = [];\n\n// #822362\n\nvar bgRect = new Rectangle([0, 0],[500,500]);\nvar bgPath = new Path.Rectangle(bgRect);\n// bgPath.fillColor = \"#ebe6c7\";\n// bgPath.fillColor = \"white\";\nbgPath.fillColor = \"#822362\"\n\nvar col = [\n    '#f4c7ff',\n    '#c592d1',\n    '#9c61ab',\n    '#6d387a',\n    '#531b61',\n    '#4a0c59',\n    '#410152',\n    '#fbebff'\n];\n\nvar num = col.length;\n\nfor (i= 0; i<500; i+=40){\n    for(var j=0; j<500; j+=40){\n    var rect = new Rectangle([i, j], [50, 50]);\n    rects[i*j] = new Path.Rectangle(rect);\n    // rects[i*j].strokeColor = 'red';\n    \n    rects[i*j].rotate(i*j+10);\n    \n    rects[i*j].style = {\n  strokeColor: col[i%7],\n  strokeWidth: 2,\n  dashArray: [4, 4],\n};\n    }\n    \n}",
    "comments": []
  },
  {
    "_id": "N5rXqR6oqTBR4GPNg",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T22:26:01.865Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6af3798ef0d3e48509759a1f5af13733",
        "public_id": "avalanche2023spring/ephea7uoh0irfoqjcbin",
        "version": 1675981685,
        "version_id": "9e2011cd4058ef2b226bda34d0172156",
        "signature": "7017ff88fcb35e3d25a29baf65fa2fba4e6f60f5",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T22:28:05Z",
        "tags": [],
        "bytes": 587133,
        "type": "upload",
        "etag": "cb23f976e5814dc421de0696e4ee61f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675981685/avalanche2023spring/ephea7uoh0irfoqjcbin.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675981685/avalanche2023spring/ephea7uoh0irfoqjcbin.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cb580d2bed696633450168436968b592",
        "public_id": "avalanche2023spring/bsta158zdwr5ozelvysg",
        "version": 1675981688,
        "version_id": "2a0c14f072754f019d87d8860332f485",
        "signature": "7974137c2a4cc2e51102dd4993f0b7b7d690d000",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T22:28:08Z",
        "tags": [],
        "bytes": 525531,
        "type": "upload",
        "etag": "f4a4207a43ef317254b2a8861235ad53",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675981688/avalanche2023spring/bsta158zdwr5ozelvysg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675981688/avalanche2023spring/bsta158zdwr5ozelvysg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:44:36.965Z" }
      }
    ],
    "title": "",
    "description": "For the pair challenge, Chris and I created a sketch that generates random images using a decorative typeface from Ohno called Casual Textile using the deck tactic",
    "comments": []
  },
  {
    "_id": "N88cCyBZavY8botCZ",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T00:00:04.165Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e8d2d6349e3a81f579fca02650f86237",
        "public_id": "avalanche2023spring/sw7jvfibi6s1siqggart",
        "version": 1683849609,
        "version_id": "083e88b5b6578987a966abc8ff4fbab9",
        "signature": "f80b99d6012a3773bc389e54d1a5c13558846870",
        "width": 856,
        "height": 858,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T00:00:09Z",
        "tags": [],
        "bytes": 103826,
        "type": "upload",
        "etag": "61df9b92ef14693e0dab38a370018875",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683849609/avalanche2023spring/sw7jvfibi6s1siqggart.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683849609/avalanche2023spring/sw7jvfibi6s1siqggart.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T16:17:05.662Z" }
      }
    ],
    "title": "",
    "description": "Highly derivative SNAIL from Justin's drawLeaf()",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noFill();\n  stroke(255);\n  background(50);\n  noLoop();\n\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 255);\n  myTurtle.penDown();\n\n  for (let i = 0; i < 150; i++) {\n    myTurtle.moveForward(5 + i * 0.1);\n    myTurtle.turnLeft(10);\n    drawLeaf();\n  }\n    myTurtle.penUp();\n    myTurtle.moveTo(200, 325);\n    myTurtle.penDown();\n    myTurtle.turnTo(0);\n    myTurtle.moveBackward(80);  \n    drawLeaf();\n      myTurtle.penUp();\n    myTurtle.moveTo(110, 325);\n      myTurtle.penDown();\n      drawLeaf();\n    //  myTurtle.turnTo(20);\n    //   myTurtle.moveBackward(40);  \n}\n\nfunction drawLeaf() {\n  myTurtle.pushState();\n\n  for (i = 0; i < 15; i++) {\n    myTurtle.moveForward(2);\n    myTurtle.turnLeft(8);\n  }\n\n  myTurtle.popState();\n  \n\n  \n}",
    "comments": []
  },
  {
    "_id": "NSfhXRZuQQP5kcwgj",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T17:09:04.348Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6ef725d8ea287959bdea4016d5304dc9",
        "public_id": "avalanche2023spring/n2kxpfaww3b0bons0dde",
        "version": 1675876161,
        "version_id": "48420cc0caf225d4fdc32e3fbb226f8a",
        "signature": "b5d014e3454a7e94bf44c2345e1f29d19a3a9e48",
        "width": 498,
        "height": 497,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T17:09:21Z",
        "tags": [],
        "bytes": 18713,
        "type": "upload",
        "etag": "e1feb6b49304512e0c01c81c02727f1c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675876161/avalanche2023spring/n2kxpfaww3b0bons0dde.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675876161/avalanche2023spring/n2kxpfaww3b0bons0dde.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "916d97a4ae95ac81d5af7a98f20e5c70",
        "public_id": "avalanche2023spring/k2wltkbeqc0wresmdxxd",
        "version": 1675876165,
        "version_id": "f4dd1617ad7c951d6df3c84bcff08d87",
        "signature": "42767ab07bfb3d9c0caf688713747d72a8f53960",
        "width": 750,
        "height": 741,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T17:09:25Z",
        "tags": [],
        "bytes": 23401,
        "type": "upload",
        "etag": "83f9011a097cd62a903ef7af9b55f0a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675876165/avalanche2023spring/k2wltkbeqc0wresmdxxd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675876165/avalanche2023spring/k2wltkbeqc0wresmdxxd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "73fdb0f61d9f2c612b980306769e1371",
        "public_id": "avalanche2023spring/ho8jdwdzpqoolotpwpjb",
        "version": 1675876170,
        "version_id": "c743e55fb0007b7c817993003fadc4b4",
        "signature": "044e837e9c83e96589ca1f4e95cbb7710cfa7e7d",
        "width": 756,
        "height": 747,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T17:09:30Z",
        "tags": [],
        "bytes": 22866,
        "type": "upload",
        "etag": "ce374cabc2b3dfe31bc1825fcb3e0e0b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675876170/avalanche2023spring/ho8jdwdzpqoolotpwpjb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675876170/avalanche2023spring/ho8jdwdzpqoolotpwpjb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T21:24:40.278Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:46:45.846Z" }
      }
    ],
    "title": "",
    "description": "Recreation of Piet Mondrian's Composition with Yellow, Blue and Red 1937–42.",
    "comments": []
  },
  {
    "_id": "NTh7WDFkipFpEaWZM",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T00:35:13.913Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0abd480d1c6577dc9bd2ff052922887c",
        "public_id": "avalanche2023spring/tpzgf5au6qe6gabcqr2t",
        "version": 1676594413,
        "version_id": "79149afb52ea020926873490662d3aaf",
        "signature": "efb1bb78c29988bd2b5fef54e3997f1ae81a58b5",
        "width": 2480,
        "height": 2404,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T00:40:13Z",
        "tags": [],
        "bytes": 4651974,
        "type": "upload",
        "etag": "edc508bfea5863ae0a239a4c6e59d624",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676594413/avalanche2023spring/tpzgf5au6qe6gabcqr2t.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676594413/avalanche2023spring/tpzgf5au6qe6gabcqr2t.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e7b83f4d2083da7c6bf127bc8fe9488c",
        "public_id": "avalanche2023spring/vrjrjk2eg7qzrfa51uax",
        "version": 1676594485,
        "version_id": "e4c14d1aa351d426026c429761d40d65",
        "signature": "532c173927f196155d6680721fb0d387ecd4c7f1",
        "width": 2480,
        "height": 2404,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T00:41:25Z",
        "tags": [],
        "bytes": 2527685,
        "type": "upload",
        "etag": "6e8ca662a841e56da522636478f4c768",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676594485/avalanche2023spring/vrjrjk2eg7qzrfa51uax.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676594485/avalanche2023spring/vrjrjk2eg7qzrfa51uax.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:37:11.631Z" }
      }
    ],
    "title": "",
    "description": "The final piece for the pair challenge. For this piece, I used my random noise lines sketch and keren's piece that was inspired by grass",
    "comments": []
  },
  {
    "_id": "NWBenLXw8ijNZJrtP",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-12T08:56:17.278Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1594b6cc2333dbacba0390bf3123d2cb",
        "public_id": "avalanche2023spring/cmgaaffkxmggkqqcca6e",
        "version": 1681289783,
        "version_id": "66e923484a9778ae1963f4eaa097337d",
        "signature": "dc9c4164337e30a51d69a0f4ae767719adef7916",
        "width": 1055,
        "height": 434,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T08:56:23Z",
        "tags": [],
        "bytes": 91479,
        "type": "upload",
        "etag": "5ba17359bdb252967a1be6634e61d03e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681289783/avalanche2023spring/cmgaaffkxmggkqqcca6e.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681289783/avalanche2023spring/cmgaaffkxmggkqqcca6e.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a4b854d6520d335bc3ab924e7a500a37",
        "public_id": "avalanche2023spring/ts6g1nqrh81db0kwqcym",
        "version": 1681289786,
        "version_id": "240eb9b3bb6dc0dbae1487b4b3671ee8",
        "signature": "20c9ec5a85cbd3f0f44b3336de44f31fd7300bdb",
        "width": 1055,
        "height": 434,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T08:56:26Z",
        "tags": [],
        "bytes": 91368,
        "type": "upload",
        "etag": "1470f0bea87160b3eacdbbb42537bec8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681289786/avalanche2023spring/ts6g1nqrh81db0kwqcym.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681289786/avalanche2023spring/ts6g1nqrh81db0kwqcym.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Take 1 on the text challenge. The program doesn't generate the story yet, but it reorders the sentences to create different narratives.",
    "code": "// require https://cdn.jsdelivr.net/npm/tracery@1.0.3/\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet story = [\n    \"The wind howled through the trees, as lightning illuminated the sky.\",\n    \"The darkness outside was palpable, and it felt like anything could be lurking in the shadows.\",\n    \"I heard a creaking sound, and my heart raced as I imagined what could be making it.\",\n    \"It was a night that made me feel like I was in a horror movie, and I couldn't wait for it to be over.\",\n    \"As I looked out the window, I saw a figure standing in the darkness, watching me.\",\n    \"The storm grew stronger, and the trees outside began to sway ominously.\",\n    \"I felt a sense of foreboding, as if something terrible was about to happen.\",\n    \"The lightning illuminated a nearby mirror, and for a moment, I saw a face that wasn't mine.\",\n    \"The thunder was so loud, I thought the roof was going to cave in.\",\n];\nlet sentence = 0;\n\nfunction setup() { story = shuffle(story) }\n\nfunction main() {\n    display(\"It was a dark and stormy night.\")\n    for (let i=0; i<story.length; i++) {\n        let order = story[sentence];\n        sentence++;\n        display(order);\n    }\n}\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 15px; margin: 1%; line-height: 1;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}\nsetTimeout(main, 10);",
    "comments": []
  },
  {
    "_id": "NY4KG3mhQRxbfageA",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-28T03:13:58.049Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e4a060f047d2faaa58056b5e7713254e",
        "public_id": "avalanche2023spring/smjzeamu5djkinvssv8m",
        "version": 1677554040,
        "version_id": "79fb1b308fdbb90f898a1d474dc43d34",
        "signature": "4cd28c6ef49cf88972ebbb42611e826a4eb51c46",
        "width": 596,
        "height": 601,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-28T03:14:00Z",
        "tags": [],
        "bytes": 46913,
        "type": "upload",
        "etag": "6410646af61d996337fb5281021bee3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677554040/avalanche2023spring/smjzeamu5djkinvssv8m.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677554040/avalanche2023spring/smjzeamu5djkinvssv8m.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Extension of Challenge 1. Threw in some squares into the mix and proceeded to mix my attempt with the starting sketch. Also turned off the noLoop() function so I can have this sketch continually produce randomly generated arrangements.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(50);\n\n  noStroke();\n  ellipseMode(CENTER);\n  rectMode(CENTER);\n\n  let noiseFrequency = 1;\n  let r = float(random(0, 255));\n  let g = float(random(0, 255));\n  let b = float(random(0, 255));\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    \n    //let x = noise(i * noiseFrequency, 0) * width;\n    //let y = noise(i * noiseFrequency, 1000) * height;\n    \n    let x1 = random(width);\n    let y1 = random(height);\n    \n    let x2 = noise(i * noiseFrequency, 0) * width;\n    let y2 = noise(i * noiseFrequency, 1000) * height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    let diameter = float(random(1, 20));\n    let Size = float(random(1, 20));\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    //fill(r, g, b);\n\n    colorMode(HSB, 100);\n    \n    for (let j = 0; j < 100; j++) {\n      for (let k = 0; k < 100; k++) {\n        fill(i, j, k, random(0, 256));\n      }\n    }\n    ellipse(x1, y1, diameter, diameter);\n    rect(x2, y2, Size, Size);\n  }\n\n  //noLoop();\n}",
    "comments": []
  },
  {
    "_id": "Ncs3wjSfKRb8snRGE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-31T13:54:19.266Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0d71a08df8da53e2bc23c9083824787b",
        "public_id": "avalanche2023spring/brpfaobaysjlo0xwo1du",
        "version": 1675173284,
        "version_id": "7adaf54a7f6873dab241e872ad2ca131",
        "signature": "fceab55bfb108c89fa2db9f26847b1ceb9663c3e",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-31T13:54:44Z",
        "tags": [],
        "bytes": 791874,
        "type": "upload",
        "etag": "275d5a42daee94662193430994972637",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675173284/avalanche2023spring/brpfaobaysjlo0xwo1du.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675173284/avalanche2023spring/brpfaobaysjlo0xwo1du.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T18:59:23.789Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T22:40:07.94Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T06:51:00.675Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:21.416Z" }
      }
    ],
    "title": "",
    "description": "Response to Shristi's instructions",
    "comments": []
  },
  {
    "_id": "Ndp9uJ6WYMWkxupyj",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T14:14:54.38Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9b6327b22b626d156fe00da6f40102ab",
        "public_id": "avalanche2023spring/b03cjjbku40gde0rvnlt",
        "version": 1680272256,
        "version_id": "dcbcaddc50647231e4b0c7507bb364f5",
        "signature": "e3f3fd07f41fd99c42b2f48b620e1d6f0179e9c6",
        "width": 2248,
        "height": 1310,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T14:17:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 3463437,
        "type": "upload",
        "etag": "eee5626512cb8778cdccbc2dc3d1296b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680272256/avalanche2023spring/b03cjjbku40gde0rvnlt.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680272256/avalanche2023spring/b03cjjbku40gde0rvnlt.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680272256/avalanche2023spring/b03cjjbku40gde0rvnlt.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "124924",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "1574208",
          "dar": "1124:655",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1710849,
        "duration": 16.195167,
        "rotation": 0,
        "nb_frames": 973,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I've always known this song but I was today years old when I learned that it's called Heart and Soul.",
    "comments": []
  },
  {
    "_id": "NgkRsbnAoZEf6NXNz",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T06:39:14.27Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ebdbce3cbfacbe12ec1babbdf64d7151",
        "public_id": "avalanche2023spring/dullvwe2nyhovrqjqy4n",
        "version": 1683873570,
        "version_id": "2686b268eb6360d9e1a3bb583d946e8a",
        "signature": "aceecfc7f9f08e7bda609692a190d4b69d3b2f85",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-12T06:39:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 15306781,
        "type": "upload",
        "etag": "b168d4e6365e883eb8edc24c0fa490a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683873570/avalanche2023spring/dullvwe2nyhovrqjqy4n.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683873570/avalanche2023spring/dullvwe2nyhovrqjqy4n.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683873570/avalanche2023spring/dullvwe2nyhovrqjqy4n.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "9752444",
          "dar": "16:9",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10610079,
        "duration": 11.541313,
        "rotation": 0,
        "nb_frames": 317,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "playing with the spirograph example",
    "comments": []
  },
  {
    "_id": "Nq88xuhBGzEvwak3w",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-28T19:23:35.672Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a7ee1a15dbac6f1121294ecbfa7b47a0",
        "public_id": "avalanche2023spring/veotzwzg8opnbm4gwu3t",
        "version": 1674934108,
        "version_id": "d946636a23b01f8c99091f49e0b103f6",
        "signature": "163ce6e1f6bb24c04302627181b41af2e40eb4af",
        "width": 1141,
        "height": 581,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-28T19:28:28Z",
        "tags": [],
        "bytes": 134135,
        "type": "upload",
        "etag": "79debd4cb05055ca39a81d0a12d674f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674934108/avalanche2023spring/veotzwzg8opnbm4gwu3t.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674934108/avalanche2023spring/veotzwzg8opnbm4gwu3t.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-28T19:52:17.071Z" }
      }
    ],
    "title": "",
    "description": "Instruction set for my group. Let me know if there's anything that needs clarification.",
    "inspiration_name": "Instruction set",
    "comments": []
  },
  {
    "_id": "NuDLG5axTB6sTCxem",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T12:45:10.543Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7c6f8d96dd3bf1ad8d9119296d5118fc",
        "public_id": "avalanche2023spring/wr50prxlg5rw3jkcecyy",
        "version": 1683290730,
        "version_id": "a9b060f69b3119cf030299e9fe917965",
        "signature": "c1cd373ae88e9c912ea6685b3d78b288c18886ce",
        "width": 1198,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T12:45:30Z",
        "tags": [],
        "bytes": 64102,
        "type": "upload",
        "etag": "e578282745ceca2cc9a0965d93c41878",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683290730/avalanche2023spring/wr50prxlg5rw3jkcecyy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683290730/avalanche2023spring/wr50prxlg5rw3jkcecyy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "27cc0adde0c810d48cdbacca60cdcc90",
        "public_id": "avalanche2023spring/ddww8oiemo4ojf8nl0lx",
        "version": 1683290775,
        "version_id": "5670fe731d470e5c1b911a6f7102e180",
        "signature": "6beeb9c513cff199be76ab757f7ffe4707e33c1b",
        "width": 1198,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T12:46:15Z",
        "tags": [],
        "bytes": 67722,
        "type": "upload",
        "etag": "e3a0081fed366062caa9a94c4e4cac64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683290775/avalanche2023spring/ddww8oiemo4ojf8nl0lx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683290775/avalanche2023spring/ddww8oiemo4ojf8nl0lx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b320156b4a99907ab046fb69c1ddbb28",
        "public_id": "avalanche2023spring/ig8jdydbotb2sci0bprh",
        "version": 1683292860,
        "version_id": "8fa09bae40cd54ca7a9c50d26ba55e2a",
        "signature": "c669ff2ea1d75ec03d58eadaa302fd885464d1ee",
        "width": 1276,
        "height": 1274,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T13:21:00Z",
        "tags": [],
        "bytes": 199709,
        "type": "upload",
        "etag": "d97ed30f55bd99858459059137293886",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683292860/avalanche2023spring/ig8jdydbotb2sci0bprh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683292860/avalanche2023spring/ig8jdydbotb2sci0bprh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:09.307Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:46:02.245Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T22:55:11.092Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:20.86Z" }
      }
    ],
    "title": "",
    "description": "**Working with Difference, Loops & Procedural Generation in OpenSCAD:** One unit in a weird staircase that took too long to render",
    "comments": [],
    "code": "//Base\nfor (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\ntranslate([0, -50+j, -5 + j]) {\n    cube([250, 100, 5]);\n}\n}\n}\n\n\nrotate([0, 0, -90]){\n    translate([-250, 0, 0]) {\nfor (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\ntranslate([0, -50+j, -5 + j]) {\n    cube([250, 100, 5]);\n}\n}\n}\n}\n}\n\n\ndifference() {\n    for (a = [0: 50: 200]) {\n        for (b = [0: 50: 600]) {\n            if (rands(0, 1, 1)[0] < 0.8) {\n                translate ([a, b, b]) {\n                    //Cube\n                    difference() {\n                        cube ([50, 20, 50]);\n                        translate([25, 0, 25]) {\n                            rotate([0, 90, 90]) {\n                                cylinder(20, 20, 12);\n                            }\n                        }\n                    }\n                \n                    //Sphere\n                    translate([25, 10, 25]) {\n                        sphere(8);\n                    }\n                \n                    //Rod through sphere\n                    translate([25, 10, 25]) {\n                        rotate([0, 10, 0]) {\n                            cylinder(50, 1, 1, center=true); \n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\n            translate([i, j, j]) {\n                if (rands(0, 1, 1)[0] < 0.8) {\n                    sphere(rands(10, 24, 1)[0]);\n                }\n            }\n        }\n    }\n}\n\nrotate([0, 0, -90]){\n    translate([-250, 0, 0]) {\n        difference() {\n            for (a = [0: 50: 200]) {\n                for (b = [0: 50: 600]) {\n                    if (rands(0, 1, 1)[0] < 0.8) {\n                        translate ([a, b, b]) {\n                            //Cube\n                            difference() {\n                                cube ([50, 20, 50]);\n                                translate([25, 0, 25]) {\n                                    rotate([0, 90, 90]) {\n                                        cylinder(20, 20, 12);\n                                    }\n                                }\n                            }\n                        \n                            //Sphere\n                            translate([25, 10, 25]) {\n                                sphere(8);\n                            }\n                        \n                            //Rod through sphere\n                            translate([25, 10, 25]) {\n                                rotate([0, 10, 0]) {\n                                    cylinder(50, 1, 1, center=true); \n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            for (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\n            translate([i, j, j]) {\n                if (rands(0, 1, 1)[0] < 0.8) {\n                    sphere(rands(10, 24, 1)[0]);\n                }\n            }\n        }\n    }\n        }\n    }\n}\n\n\n//sphere(16);\n                //translate([50, 20, 0]) {\n                    //sphere(16);\n                //}\n                \n                //translate ([50, 0, 50]) {\n                    //sphere(18);\n                //}\n                \n                //translate ([0, 20, 50]) {\n                    //sphere(16);\n                //}//sphere(16);\n                //translate([50, 20, 0]) {\n                    //sphere(16);\n                //}\n                \n                //translate ([50, 0, 50]) {\n                    //sphere(18);\n                //}\n                \n                //translate ([0, 20, 50]) {\n                    //sphere(16);\n                //}\n// Legs\n// translate ([0, 0, 0]) {\n// cylinder (20, 8, 2);\n// }\n// translate ([50, 0, 0]) {\n// cylinder (20, 8, 2);\n// }\n// translate ([50, 20, 0]) {\n// cylinder (20, 8, 2);\n// }\n// translate ([0, 20, 0]) {\n// cylinder (20, 8, 2);\n// }"
  },
  {
    "_id": "P4mTPm7hdn4kXaLBW",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T12:46:35.229Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e2bb87d7c2e76380a99a2e46fd0d98ba",
        "public_id": "avalanche2023spring/dswwo4kbfn2vbcpb9w00",
        "version": 1677164962,
        "version_id": "07ff98051c3b41b745e5e1296e3f284c",
        "signature": "2e3215252f1e2ba25126f82b2286c32ef6d7f0f1",
        "width": 798,
        "height": 734,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T15:09:22Z",
        "tags": [],
        "bytes": 32084,
        "type": "upload",
        "etag": "a8ea5e997d8509ed9bb3fd570c475e64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677164962/avalanche2023spring/dswwo4kbfn2vbcpb9w00.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677164962/avalanche2023spring/dswwo4kbfn2vbcpb9w00.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 4 (2/4): This is what I made of Johnnys code for the pair challenge.",
    "code": "function setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  noStroke();\n\n\n\n  createP(\"Circle Size\");\n  circlesizeSlider = createSlider(0, 200, 10);\n\n \n}\nfunction draw() {\n  background(\"black\");\n  fill(\"white\");\n  drawShapes(); \n}\n\nfunction drawShapes() {\n\n  circleSize = circlesizeSlider.value();\n\n\n  ellipse(0, 0, circleSize, circleSize);\n\n  // noprotect\n  for(y = 0; y < 35; y++) {\n    for(x = 0; x < 30; x++) {\n      translate(x + 10, y + 20);\n      \n      \n  \n\n  //Center Line\n      ellipse(x , y, circleSize, circleSize)\n        fill(\"rgb(255,6,6)\");\n  \n   //Topper Line\n      ellipse(x + 300 , y - 55, circleSize, circleSize);\n      fill(\"rgb(255,129,0)\");\n    \n  //Top Line\n      ellipse(x + 150 , y - 55, circleSize, circleSize);\n      fill(\"rgb(111,255,0)\");\n      \n  //Bottom Line\n      ellipse(x -150 , y + 55, circleSize, circleSize);\n      fill(\"rgb(4,96,255)\");\n      \n  // Bottomer Line\n      ellipse(x -300 , y + 55, circleSize, circleSize);\n      fill(\"rgb(255,229,23)\");\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "P58YSvCtYN2BwFWys",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-06T19:40:12.292Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4d827b11003436f55cd5d23f3bd64888",
        "public_id": "avalanche2023spring/ld0qm84vtkqmypeo2exi",
        "version": 1678131697,
        "version_id": "39c9765e031c55749f4ec6cf0e93850a",
        "signature": "5134de970b9f50f97cb4d2541fbf681068919107",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-06T19:41:37Z",
        "tags": [],
        "bytes": 67666,
        "type": "upload",
        "etag": "1d3e16284aba54aaee4cb2752352060e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678131697/avalanche2023spring/ld0qm84vtkqmypeo2exi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678131697/avalanche2023spring/ld0qm84vtkqmypeo2exi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "46f64c7751a6bf0d66d07837cad1c7b6",
        "public_id": "avalanche2023spring/rx7haupad54nhiguy1ra",
        "version": 1678131701,
        "version_id": "b2a2d01ba559ede73591aedcd3719517",
        "signature": "1b9ba101606106462756f88311a8cd260abaaa56",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-06T19:41:41Z",
        "tags": [],
        "bytes": 687985,
        "type": "upload",
        "etag": "5397e1e8d4f71555269053b09545bcf4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678131701/avalanche2023spring/rx7haupad54nhiguy1ra.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678131701/avalanche2023spring/rx7haupad54nhiguy1ra.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-06T22:47:24.88Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T00:53:13.215Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:45:53.662Z" }
      }
    ],
    "title": "",
    "description": "Smooth vs noSmooth experiments",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "noSmooth>>>>>",
        "created_at": { "$date": "2023-03-06T22:47:22.635Z" }
      },
      {
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "comment": "I usually use noSmooth, but the smoothing has some merit here\n\nseeing so many ways to roll with this\nwhat if you exported the tiny pixel perfect image and then tried different upscalers (like some of the AI ones, which might add in unexpected details)\nOr take this smoothed result and \"postererize\" it in PSP.\nOr take the smoothed one, and feed it back in to an oroborus sketc\n",
        "created_at": { "$date": "2023-03-07T00:58:09.297Z" }
      }
    ]
  },
  {
    "_id": "P8Rjrym9SWAHPtSef",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T14:18:12.837Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a6dee6a20533abe06da2df1c1da7a12f",
        "public_id": "avalanche2023spring/gnkwh1ce5nmgccfxowse",
        "version": 1675865937,
        "version_id": "8b9dacc8f55e39352a783683fdda9d38",
        "signature": "4aee749939611f609f2b9dd501d6f4f337a33dac",
        "width": 1300,
        "height": 1300,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-08T14:18:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 17408266,
        "type": "upload",
        "etag": "e21363787661a91eae0703a66cb7ada2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675865937/avalanche2023spring/gnkwh1ce5nmgccfxowse.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675865937/avalanche2023spring/gnkwh1ce5nmgccfxowse.mp4",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316769",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "15242259",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 15506175,
        "duration": 8.942271,
        "rotation": 0,
        "nb_frames": 268,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T14:31:13.602Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T19:32:41.992Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:50:05.66Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:57:49.423Z" }
      }
    ],
    "title": "",
    "description": "Played around with combining different biased random values. Flowers near mouseX are smaller and darker, turning larger and lighter the further they get. The proportion and size of the petals is controlled by a combination of different high and low biases.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 10;\nlet eMax = 30;\nlet eMin = 5;\nlet colHue = 285;\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n  noStroke();\n  frameRate(3);\n  colorMode(HSB)\n}\n\nfunction draw() {\n  background(220);\n\n  for (let i = 2 * num; i < width; i += 4 * num) {\n    for (let j = 2 * num; j < height; j += 4 * num) {\n      \n      let inner;\n      let outer;\n      let d = dist(i, j, mouseX, mouseY);\n      let c = map(d, 0, width, 100, 0);\n\n      if (d < width / 4) {\n        inner = min(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = min(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      } else if (d < width / 2) {\n        inner =\n          (random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin)) /\n          5;\n        outer =\n          (random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax)) /\n          5;\n      } else {\n        inner = max(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = max(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      }\n\n      push();\n\n      translate(i, j);\n\n      for (let a = 0; a < 8; a++) {\n        rotate((a * 360) / 8);\n        fill(colHue, c, 100);\n        beginShape();\n        curveVertex(0, 0);\n        curveVertex(inner, 0);\n        curveVertex(outer + inner, outer - inner);\n        curveVertex(outer + inner, outer + inner);\n        curveVertex(outer - inner, outer + inner);\n        curveVertex(0, inner);\n        curveVertex(0, 0);\n        endShape();\n      }\n      fill(colHue, c, 50);\n      ellipse(0, 0, 2*inner, 2*inner);\n\n      pop();\n      \n    }\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "PAXDjfymv3NNRyvXm",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T16:31:02.506Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5d87a3d62a642b6b6ec6cf869f0e159a",
        "public_id": "avalanche2023spring/cxtjiemeovgo26vix9cj",
        "version": 1678465910,
        "version_id": "49595ad6ca8883ff58a5ba3ec4a4ab8d",
        "signature": "c63813fc0cfab35a166eb52c232fa87a30320539",
        "width": 1196,
        "height": 802,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-10T16:31:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 12833317,
        "type": "upload",
        "etag": "8cc168c4610e1528f862fe1b7e661afc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678465910/avalanche2023spring/cxtjiemeovgo26vix9cj.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678465910/avalanche2023spring/cxtjiemeovgo26vix9cj.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678465910/avalanche2023spring/cxtjiemeovgo26vix9cj.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "123519",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "10679399",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11423258,
        "duration": 8.9875,
        "rotation": 0,
        "nb_frames": 556,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e980f11a3998736a777f8671a39e0df1",
        "public_id": "avalanche2023spring/tyvuwyz1f2rhz5cr3vxb",
        "version": 1678465957,
        "version_id": "27c621b80fb02e8626aca022474419dc",
        "signature": "692259fe934db954acbf7da7b2a2d51c306aafac",
        "width": 900,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T16:32:37Z",
        "tags": [],
        "bytes": 699101,
        "type": "upload",
        "etag": "7e3697cf860c23b6c64a5545ff575047",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678465957/avalanche2023spring/tyvuwyz1f2rhz5cr3vxb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678465957/avalanche2023spring/tyvuwyz1f2rhz5cr3vxb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "66e108957b0d6d363a1808f1e15f6e7e",
        "public_id": "avalanche2023spring/awrwxabytgmaebbscftl",
        "version": 1678468114,
        "version_id": "a4fef12b9d7443ebef343cff7c4a946c",
        "signature": "a5d0cbb6190ac584a35d74bf25b9d5865502cf58",
        "width": 1200,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T17:08:34Z",
        "tags": [],
        "bytes": 543482,
        "type": "upload",
        "etag": "7880b0e19304adb4bbe8a53b502c79a4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678468114/avalanche2023spring/awrwxabytgmaebbscftl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678468114/avalanche2023spring/awrwxabytgmaebbscftl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Combining the Pixel Ouroboros with the pair challenge. Fed the \"pixelated\" screenCapture video sketch I made into Rama's code. And then put that image into my tapestry code.",
    "comments": []
  },
  {
    "_id": "PG6htc4doo99MJHMt",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T12:27:14.654Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "PLXQpjTWGc5mwoKZn",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-28T02:38:43.125Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5fc64bd604579c1a89c19b75dfab0ea1",
        "public_id": "avalanche2023spring/imwat6xouurqmqqidyot",
        "version": 1679974632,
        "version_id": "383f6bc04ceb9bd4c3bb5b42961d5bf6",
        "signature": "32282b49d4d693832066a511827f206d0661eb92",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-28T03:37:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 947683,
        "type": "upload",
        "etag": "d8b23a42615d86be451f5ca90bdb5729",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679974632/avalanche2023spring/imwat6xouurqmqqidyot.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679974632/avalanche2023spring/imwat6xouurqmqqidyot.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679974632/avalanche2023spring/imwat6xouurqmqqidyot.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "115245",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "266997",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 391806,
        "duration": 19.35,
        "rotation": 0,
        "nb_frames": 1161,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T00:11:42.344Z" }
      }
    ],
    "title": "",
    "description": "Working on a good way to do chord progressions. I guess this would count as my individual but I want to improve it. I really want to work on the sound design for the synths as I'm curious about how far Tone.js can go!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\nconst synth = new Tone.PolySynth(11, Tone.Synth).toMaster();\nconst synth2 = new Tone.PolySynth(11, Tone.Synth).toMaster();\n\nconst chord1 = {\n    notes:[\"B4\", \"G4\", \"E4\", \"C4\"],\n    length: 2\n}\n\nconst chord2 = {\n    notes:[\"C5\", \"A4\", \"F4\", \"D4\"],\n    length: 2\n}\n\nconst chord3 = {\n    notes:[\"A4\", \"G4\", \"C4\", \"D#4\"],\n    length: 1\n}\n\nconst chord4 = {\n    notes:[\"G4\", \"C4\", \"D#4\", \"G#3\",],\n    length: 1\n}\n\nconst chordProg = [chord1, chord2, chord1, chord3, chord4, chord1, chord2, chord1, chord3, chord4];\nwindow.onmousedown = () => {\n\n  let t = Tone.now();\n  for (const chord of chordProg) {\n    if (chord.notes !== \"rest\") {\n      synth.triggerAttackRelease(chord.notes, Tone.Time(chord.length), t);\n    }\n    t += Tone.Time(chord.length);\n  }\n};",
    "comments": []
  },
  {
    "_id": "PYnFWbXbGzCNkDh52",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T16:05:25.04Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "39d4e7e66969520e3d9d7635d3264176",
        "public_id": "avalanche2023spring/yxs8ikthpzo72ji6rkrw",
        "version": 1675959835,
        "version_id": "44123ea731217a5b954d141ff9907080",
        "signature": "68dd964b32510bd39eb722fc31547dec94a4de61",
        "width": 1174,
        "height": 1410,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T16:23:55Z",
        "tags": [],
        "bytes": 170875,
        "type": "upload",
        "etag": "746396f94f52af289fc91d64af79c3e0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675959835/avalanche2023spring/yxs8ikthpzo72ji6rkrw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675959835/avalanche2023spring/yxs8ikthpzo72ji6rkrw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T17:16:54.145Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:39:27.875Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:51:12.247Z" }
      }
    ],
    "title": "",
    "description": "Bridget Riley-inspired artwork. I experimented with how the random colors appear, including the way the colors repeat to create larger blocks of color",
    "comments": []
  },
  {
    "_id": "PZSNQwAuhRLPxB2oF",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T23:04:30.275Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9844ecc31a9cea5b28fb887d837c41a6",
        "public_id": "avalanche2023spring/han0k58y5tqctaxty7iz",
        "version": 1678403097,
        "version_id": "32b1dd28b1e680390285f586021fe80a",
        "signature": "f86777a186425ce2575ae664fe29ea2a0fd4e3df",
        "width": 558,
        "height": 560,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-09T23:04:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 2193016,
        "type": "upload",
        "etag": "b9a5e71619c57774e2273c932418ee35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678403097/avalanche2023spring/han0k58y5tqctaxty7iz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678403097/avalanche2023spring/han0k58y5tqctaxty7iz.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678403097/avalanche2023spring/han0k58y5tqctaxty7iz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "236330",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 237403,
        "duration": 73.9,
        "rotation": 0,
        "nb_frames": 2218,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:11.785Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:16.852Z" }
      }
    ],
    "title": "",
    "description": "Started with an easy one!",
    "code": "var angle = 2.0;\nvar offset = 300;\nvar scalar = 3.5;\nvar speed = 0.1;\nvar col = {\n  r: 255,\n  g: 0,\n  b: 0\n};\n\nfunction setup() { \n  createCanvas(600, 600);\n  noStroke();\n  background (0);\n} \n\nfunction draw() { \n  \n // loadPixels();\n  \n  \n  \n  col.r = random(0, 200);\n  col.g = random(0, 250);\n  col.b = random(100, 250);\n  var x = offset + cos(angle) * scalar;\n  var y = offset + sin(angle) * scalar;\n  fill(col.r, col.g, col.b);\n  noStroke();\n  rect(x, y, 20, 20);\n  angle += speed;\n  scalar += speed;\n  \n  //updatePixels();\n  \n}",
    "comments": []
  },
  {
    "_id": "Pc6c6b3Qdoz6vWnSB",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T04:44:25.885Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "60949dca0def090d3a91c509a44fe2e2",
        "public_id": "avalanche2023spring/byu1dcnzfrqyvnpxkllc",
        "version": 1677732284,
        "version_id": "a023b3589836a833112845abdafde2eb",
        "signature": "09730f610764139fdcf397a50eb8776225f62011",
        "width": 1000,
        "height": 1102,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-02T04:44:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 5586695,
        "type": "upload",
        "etag": "2da118d2834374a818e68f2db98e1d5e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677732284/avalanche2023spring/byu1dcnzfrqyvnpxkllc.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677732284/avalanche2023spring/byu1dcnzfrqyvnpxkllc.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677732284/avalanche2023spring/byu1dcnzfrqyvnpxkllc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1918496",
          "dar": "500:551",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 1925063,
        "duration": 23.216667,
        "rotation": 0,
        "nb_frames": 1393,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Challenge 2 - I struggled with figuring out where to place frameCount in the code",
    "comments": []
  },
  {
    "_id": "Q2aaQozk449CotCFM",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T03:36:54.887Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "adddd65e2697d881f14c8dbbdcf81c37",
        "public_id": "avalanche2023spring/zjwknspkf70q1pfwh0qr",
        "version": 1674963425,
        "version_id": "0ff0d71a41082020d2b93e0c688f2eff",
        "signature": "e54dd0c4761ad79959ffb761319d64b439b99cfd",
        "width": 2142,
        "height": 1208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-29T03:37:05Z",
        "tags": [],
        "bytes": 170790,
        "type": "upload",
        "etag": "6946fbee0d99a6adc9c035b974b19ddf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674963425/avalanche2023spring/zjwknspkf70q1pfwh0qr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674963425/avalanche2023spring/zjwknspkf70q1pfwh0qr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T23:04:26.347Z" }
      }
    ],
    "title": "",
    "description": "Sketch instructions for Julia! I hope this is clear enough, have fun trying it out :)",
    "comments": []
  },
  {
    "_id": "QBR7K8ygu6our6q3a",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T15:50:03.3Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c863b7f991285509dd9f09187d6393f4",
        "public_id": "avalanche2023spring/nrqmnjaqfoo2mv3jsrsi",
        "version": 1682092213,
        "version_id": "6af218e94c52a98f9a569980ba955f1a",
        "signature": "95c8ea46ed7d646516e76a076c60d2a561e1d241",
        "width": 1262,
        "height": 1256,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T15:50:13Z",
        "tags": [],
        "bytes": 623977,
        "type": "upload",
        "etag": "3d62d34cc0f07d32d980205579129aa7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682092213/avalanche2023spring/nrqmnjaqfoo2mv3jsrsi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682092213/avalanche2023spring/nrqmnjaqfoo2mv3jsrsi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b5b7b31cca5414ed63e52c9a2f679993",
        "public_id": "avalanche2023spring/j4s0l7ihqt526lulovbz",
        "version": 1682092228,
        "version_id": "16469e22301670e151564c787ad96e35",
        "signature": "9343089eb563342fb73710bdaf191216c605a408",
        "width": 1262,
        "height": 1256,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T15:50:28Z",
        "tags": [],
        "bytes": 130412,
        "type": "upload",
        "etag": "9327fc123493a9a55cab36dd388e3eeb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682092228/avalanche2023spring/j4s0l7ihqt526lulovbz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682092228/avalanche2023spring/j4s0l7ihqt526lulovbz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "752de2e0a7e3fc4c67b0f8f792921a39",
        "public_id": "avalanche2023spring/wa1bbuhwdukr0nk74daf",
        "version": 1682092974,
        "version_id": "acb9064d2965b36d9e13b9afaef445c0",
        "signature": "19f0065ec8aa129ef69f7cda00690f880db81c7f",
        "width": 1204,
        "height": 1204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T16:02:54Z",
        "tags": [],
        "bytes": 53574,
        "type": "upload",
        "etag": "0cf494cff37d3de301a4cc8dd2136b61",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682092974/avalanche2023spring/wa1bbuhwdukr0nk74daf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682092974/avalanche2023spring/wa1bbuhwdukr0nk74daf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:29.671Z" }
      }
    ],
    "title": "",
    "description": "**Phind & ChatGPT attempts Spirals on p5.js, no code input:** I tried to recreate a spiral's sketch from Strategies week. The prompts were a variation of \"Using p5.js, how might we create three large loosely spaced spirals with the same center and starting point, spiraling outward clockwise, while each point on each spiral is slightly displaced by perlin noise.\" Phind gave the first two results (without any modifications by me, at this point). Chat GPT generated the third image for the same prompt. I think I'd need to refine the prompts much more, to get something closer to the original sketch",
    "comments": []
  },
  {
    "_id": "QDB4s6HhzmrceR9oL",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T21:42:29.69Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2a7c09da4dcb68b78ecc1274e419ea2d",
        "public_id": "avalanche2023spring/wkawb4n5ynel1gjfjm5n",
        "version": 1676497392,
        "version_id": "9708b755c6748694cfb94fe71b1728ff",
        "signature": "645aa4d8c502ef27ea5f6d865a0b2d0f1852dce8",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-15T21:43:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 5229199,
        "type": "upload",
        "etag": "eef4d66218f88e614f8463955e01ea47",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676497392/avalanche2023spring/wkawb4n5ynel1gjfjm5n.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676497392/avalanche2023spring/wkawb4n5ynel1gjfjm5n.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676497392/avalanche2023spring/wkawb4n5ynel1gjfjm5n.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "5484009",
          "dar": "794:797",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 5503333,
        "duration": 7.6015,
        "rotation": 0,
        "nb_frames": 457,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T00:12:24.513Z" }
      }
    ],
    "title": "",
    "description": "Tried to do an ancient map with an ink-like path towards the treasure.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\n let homeStartX, homeStartY;\n\nlet treasureX, treasureY;\n\n let dispX;\n   let dispY;\n\nlet x = 30;\nlet y=30;\n\nfunction setup() {\n  createCanvas(800, 800);\n  // noLoop();\n  rectMode(CENTER);\n  \n   background(237, 226, 202);\n\n  noStroke();\n\n  for (let x = 5; x < width; x += 10) {\n    let r, g, b, t;\n    r = 30;\n    g = 20;\n    b = 10;\n    t = 150;\n    let c;\n\n    for (let y = 5; y < height; y += 10) {\n      let n;\n      n = noise(x * 0.01, y * 0.01) * 50 - 25;\n\n      c = noise(x * 0.1, y * 0.1) * 200 - 100;\n\n      fill(r + c, g + c, b + c, t + c);\n      // ellipse(x+ n , y+ n , 10 + n, 10 + n);\n      rect(x, y, 12 + n, 12 + n);\n    }\n\n    r -= c;\n    g -= c;\n    b -= c;\n  }\n  \n  homeStartX = random(width);\n  homeStartY = random(height);\n  \n  push()\n  fill(0, 0, 255)\n  ellipse(homeStartX, homeStartY, 30, 30);\n  pop\n  \n  treasureX = random(width);\n  treasureY = random(height);\n  \n  push()\n    stroke(255, 0, 0)\n  noFill();\n  strokeWeight(3)\n  ellipse(treasureX, treasureY, 40, 40);\n  pop()\n  \n  push()\n  fill(255,0,0)\n  ellipse(treasureX, treasureY, 20, 20);\n  pop()\n\n\n}\n\nfunction draw() {\n  \n  fill(0, 0, 255)\n  if (homeStartX < treasureX){\n    homeStartX = homeStartX+1;\n  }\n  else{\n    homeStartX = homeStartX-1\n  }\n  \n  if(homeStartY<treasureY){\n    homeStartY = homeStartY+1\n  }\n  else{\n    homeStartY = homeStartY-1\n  }\n  \n  let movement;\n  \n  movement = noise(frameCount*0.01) * 20 - 10;\n  noiseDetail(0)\n  \n  ellipse(homeStartX - movement, homeStartY + movement, 6 + movement, 6+ movement)\n\n}",
    "comments": []
  },
  {
    "_id": "QFxpQGy4tiXwXfdrY",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T16:02:49.43Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ce9ae5c9c6ff4824036f427e3aa841be",
        "public_id": "avalanche2023spring/tmjbl6uwlfync8nyu8lr",
        "version": 1683907376,
        "version_id": "bafc2e56bf7932ed9cdbf769da013b2e",
        "signature": "5bc2dcae2a00c896b73cc5bd261f7b5dbf3ec1a3",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T16:02:56Z",
        "tags": [],
        "bytes": 116084,
        "type": "upload",
        "etag": "29b68d195585a579c94abc40a67b8aa1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683907376/avalanche2023spring/tmjbl6uwlfync8nyu8lr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683907376/avalanche2023spring/tmjbl6uwlfync8nyu8lr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4dd6ef63c32794695e21550a052e6f19",
        "public_id": "avalanche2023spring/begboc8xdmkkspzlqway",
        "version": 1683907381,
        "version_id": "9241d404aa108eab024b44d6237f9a6a",
        "signature": "6e248c89605efa89d12d2dab6f73619afefd38c5",
        "width": 908,
        "height": 902,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T16:03:01Z",
        "tags": [],
        "bytes": 109243,
        "type": "upload",
        "etag": "c4c279ed3a4d4971b9ff78636b1a4851",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683907381/avalanche2023spring/begboc8xdmkkspzlqway.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683907381/avalanche2023spring/begboc8xdmkkspzlqway.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Last sketch ever",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup(){\n    createCanvas(600, 600);\n    noFill();\n    stroke(255);\n    background(0);\n    // noLoop();\n    myTurtle = new Turtle();\n}\n\nfunction draw(){\n  myTurtle.penUp();\n    myTurtle.moveTo(300, 300);\n\n      myTurtle.penDown();\n      for(let i =0; i<20; i++){\n          myTurtle.moveForward(50);\n          myTurtle.turnLeft(20);\n           myTurtle.pushState();\n\n      myTurtle.penDown();\n  myTurtle.turnLeft(20);\n  myTurtle.moveBackward(30);\n  myTurtle.pushState();\n\n      myTurtle.penDown();\n  myTurtle.turnLeft(40);\n  myTurtle.moveForward(40);\n  \n  myTurtle.popState();\n  myTurtle.popState();\n      }\n   \n}",
    "comments": []
  },
  {
    "_id": "QH6FowSNScGaAH4t2",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T14:39:39.441Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f5b731bb0589b07a1ca62b698a1f19e1",
        "public_id": "avalanche2023spring/mnliqseoz9gcg3n5qeun",
        "version": 1680189291,
        "version_id": "258e20cd2d27ea81d365d42748a1b8e5",
        "signature": "1c76790067dbeca91345e2da1924b231bffdcece",
        "width": 3456,
        "height": 1850,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-30T15:14:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 20139519,
        "type": "upload",
        "etag": "4cc7036d27e1f8badf03c2789e474622",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680189291/avalanche2023spring/mnliqseoz9gcg3n5qeun.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680189291/avalanche2023spring/mnliqseoz9gcg3n5qeun.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680189291/avalanche2023spring/mnliqseoz9gcg3n5qeun.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128000",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "High",
          "bit_rate": "3752822",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3892916,
        "duration": 41.387,
        "rotation": 0,
        "nb_frames": 2486,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6298ce27de12844bc74e1c448f13fcc0",
        "public_id": "avalanche2023spring/ilm5ompv2ilqjgc5vg6j",
        "version": 1680189300,
        "version_id": "bca461c12cbee53566583b9a6b65d749",
        "signature": "05273cd7a8cc69e2a3150156b07a0809b5016621",
        "width": 998,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-30T15:15:00Z",
        "tags": [],
        "bytes": 317290,
        "type": "upload",
        "etag": "2a9ace59cdea0343a9aa75ddb3a24420",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680189300/avalanche2023spring/ilm5ompv2ilqjgc5vg6j.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680189300/avalanche2023spring/ilm5ompv2ilqjgc5vg6j.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T17:20:22.38Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:11:59.728Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:35:40.103Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:38:26.158Z" }
      }
    ],
    "title": "",
    "description": "starting with some sound visualization via my ukulele. i say \"sound\" because whatever is being strummed, isn't music yet! Stay \"tuned\"",
    "code": "let mic;\nlet n = 0;\nlet c = 6;\nlet fft;\n\nfunction setup() {\n  createCanvas(500, 500);\n  //variable will carry the input audio\n  mic = new p5.AudioIn();\n    mic.start();\n  fft = new p5.FFT();\n  fft.setInput(mic);\nbackground(0);\n\n  angleMode(DEGREES);\n    colorMode(RGB);\n\n}\n\nfunction draw() {\n  let vol = mic.getLevel();\n  let spectrum = fft.analyze();\n   console.log(spectrum);\nlet a = n * 137.5;\n  let r = c * sqrt(n) ;\n  let x = r * cos(a)+width/2;\n  let y = r *sin(a)+width/2;\n  // noStroke();\n  stroke(n%255,x%255,y%255);\n    // line(x,y,x+vol*150,y+vol*150);\n  strokeWeight(1);\n  noFill();\n  ellipse(x,y,200*vol,200*vol);\n\n n++;",
    "comments": [
      {
        "commenter_id": "me69bqQXDu4jtokwu",
        "comment": "so good!",
        "created_at": { "$date": "2023-03-31T04:47:05.548Z" }
      }
    ]
  },
  {
    "_id": "QK6xFTFEZWen3i5Wz",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-01T05:51:11.944Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "66b26a34575e9e41e66ec04f99432c90",
        "public_id": "avalanche2023spring/n9a7lcnutqzsazyt3r9r",
        "version": 1677649943,
        "version_id": "d030b5e47258e9d4900d31e216382857",
        "signature": "1eb7c902f8f2923697b86c8aabf4318a56074d43",
        "width": 784,
        "height": 794,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-01T05:52:23Z",
        "tags": [],
        "bytes": 31027,
        "type": "upload",
        "etag": "b3a085e65ea9c41db06b2fd4230c0e25",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677649943/avalanche2023spring/n9a7lcnutqzsazyt3r9r.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677649943/avalanche2023spring/n9a7lcnutqzsazyt3r9r.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Expanding on challenge one to create a glitch-type visual with rectangles",
    "code": "function setup() {\n  createCanvas(400, 400);\n  colorMode(HSB); // setting color mode to HSB\n}\n\nfunction draw() {\n  background(50, 0, 10);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  // let noiseFrequency = 0.9;\n\n  for (let i = 0; i < 100; i++) {\n    // using randomGaussian() to concentrate the ellipses towards the center\n    let x = randomGaussian(width/2, 100);\n    let y = randomGaussian(height/2, 150);\n\n    // varying the diameter\n    let rectHeight = random(5, 25);\n\n    // generating a random hue value\n    let hue = random(0, 360);\n  \n    // using the random hue value and fixed saturation and brightness values to create a colorful ellipse\n    fill(hue, 80, 80);\n    \n    // ellipse(x, y, diameter, diameter);\n    rect(x, y, 100, rectHeight);\n  }\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "QKJvJMJ24ZhZbX3BG",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": { "$date": "2023-02-05T06:46:35.424Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cbd214790cec82eb1b0156f9da9c2521",
        "public_id": "avalanche2023spring/kjvfhj1dwcapl14gsxhw",
        "version": 1675579603,
        "version_id": "30e1c951728fa16ab07d78af8fca9adb",
        "signature": "e7dde49d8d97d005bbecd999cbab77e6978ce466",
        "width": 375,
        "height": 925,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-05T06:46:43Z",
        "tags": [],
        "bytes": 8959,
        "type": "upload",
        "etag": "6ce7e6e7ccbea1c937c609489eee2b1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675579603/avalanche2023spring/kjvfhj1dwcapl14gsxhw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675579603/avalanche2023spring/kjvfhj1dwcapl14gsxhw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T05:59:50.634Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Based on my own instructions",
    "comments": []
  },
  {
    "_id": "QSMF4s76AiNEibaBW",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T22:32:00.413Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "006615b79532ed3263144f7f43b6cf7c",
        "public_id": "avalanche2023spring/dxuzlieh8zcncbwfv84s",
        "version": 1675031526,
        "version_id": "6eb1efdb447ce95f1efa3c21cf52fa3d",
        "signature": "b21f5fe61c5c280754903d1a44072a6a667bbe55",
        "width": 3049,
        "height": 2665,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-29T22:32:06Z",
        "tags": [],
        "bytes": 1186639,
        "type": "upload",
        "etag": "1a012b4b298c7f4b2b35320da57cd8dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675031526/avalanche2023spring/dxuzlieh8zcncbwfv84s.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675031526/avalanche2023spring/dxuzlieh8zcncbwfv84s.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-30T01:55:06.053Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T15:25:06.381Z" }
      }
    ],
    "title": "",
    "description": "My interpretation of Rama's instructions!",
    "comments": []
  },
  {
    "_id": "Qi4X8JJyJLrqqYShW",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T15:26:09.137Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "QnZoWAb3cMYwnwRwt",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T04:20:01.693Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "94b7d828ccedffe5b2b64b3f1e812d11",
        "public_id": "avalanche2023spring/txzlbynt4ik4tbdfqfnb",
        "version": 1680933007,
        "version_id": "4da4459b1d5fb9f62a80d156aadb801c",
        "signature": "de10b2c87d0432b356a4c0b9d263dc80d47159e6",
        "width": 1650,
        "height": 1027,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-08T05:50:07Z",
        "tags": [],
        "bytes": 485568,
        "type": "upload",
        "etag": "bfe526d673a57e7eace5065b041fe1c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680933007/avalanche2023spring/txzlbynt4ik4tbdfqfnb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680933007/avalanche2023spring/txzlbynt4ik4tbdfqfnb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "078ae0408c808edc375ebe13fd5ff8de",
        "public_id": "avalanche2023spring/r4hfplqzdq9yaqo1674w",
        "version": 1680933015,
        "version_id": "9b8a2433c9d4ce7eb353fe8bee09f6cd",
        "signature": "ac6653a35fc57a18e8d71bf0b829327502a8f0f6",
        "width": 720,
        "height": 1280,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-08T05:50:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 5876076,
        "type": "upload",
        "etag": "ba7ac4ab3d7d66e15392821916955647",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680933015/avalanche2023spring/r4hfplqzdq9yaqo1674w.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680933015/avalanche2023spring/r4hfplqzdq9yaqo1674w.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680933015/avalanche2023spring/r4hfplqzdq9yaqo1674w.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128528",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "972980",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1110422,
        "duration": 42.333333,
        "rotation": 0,
        "nb_frames": 1270,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6b711cd0f85cc100bd47b92cbc21f3bc",
        "public_id": "avalanche2023spring/pjllr6bxrimbaocylezs",
        "version": 1680933019,
        "version_id": "c53223b23f674f6d4828636eba087fb5",
        "signature": "4e011dba5762a0c0424935c477a93bd14eb54708",
        "width": 1274,
        "height": 794,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-08T05:50:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 5379985,
        "type": "upload",
        "etag": "5e98d052c8c0ff6f910cac5bc42a3864",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680933019/avalanche2023spring/pjllr6bxrimbaocylezs.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680933019/avalanche2023spring/pjllr6bxrimbaocylezs.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680933019/avalanche2023spring/pjllr6bxrimbaocylezs.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2283",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "2312709",
          "dar": "637:397",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 2321585,
        "duration": 18.538,
        "rotation": 0,
        "nb_frames": 555,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T04:36:27.08Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T05:24:01.973Z" }
      }
    ],
    "title": "",
    "description": "Worked on a couch co-op with Shrishti! The player (arrow keys) has to get to the ice cream truck while avoiding fire and the broccoli (WASD) has to stop them. Still has bugs but we've spent a combined total of about 6 hours on this so far so it's done lol",
    "code": "// images sourced from:\n// player: https://dinopixel.com/preload/0223/Player.png\n// rock: https://e7.pngegg.com/pngimages/851/410/png-clipart-rock-stone-pixel-art-nature-hard-pixel-8-bit.png\n// ice cream truck: https://www.vecteezy.com/vector-art/20416376-cute-ice-cream-car-pixel-art-style-perfect-for-stickers-and-decorations\n\nlet blocker, player;\nlet playerdoor;\nlet rightwall = []; \nlet topwall = []; \nlet bottomwall = [];\nlet leftwall = [];\nlet rocknumwidth, rocknumheight, rockheight, rockwidth;\nlet wallwidth = 10;\nlet playerwidth = 50;\nlet playerheight = playerwidth*354/483;\nlet gamespeed = 2;\nlet mode = 0;\n\nlet fire;\nlet fires;\n\nfunction setup() {\n  createCanvas(800, 500);\n  textAlign(CENTER, CENTER);\n  fill(255);\n  textSize(15);\n  imageMode(CENTER);\n\n  font = loadFont('dogicapixelbold.otf');\n  \n  let playerImg = loadImage('player.png');\n  let boundaryImg = loadImage('rock.png');\n\n  blocker = createSprite(width/2, height/2, playerwidth, playerwidth);\n  blocker.addAnimation(\n    'normal', \n    'broccoli.png'\n  );\n  blocker.scale = 0.15;\n\n  player = createSprite(width-60, 50, playerwidth, playerwidth);\n  player.addImage('main', playerImg);\n  player.scale = playerwidth/483;\n  player.mirrorX(-1);\n\n  rocknumwidth = 14;\n  rocknumheight = 18;\n  rockwidth = width/rocknumwidth;\n  rockheight = 158*rockwidth/295;\n  for (let i=0; i<rocknumwidth; i++) {\n    bottomwall[i] = createSprite((rockwidth/2) + i*rockwidth, height - rockheight/2, rockwidth, rockheight);\n    bottomwall[i].addImage('main', boundaryImg);\n    bottomwall[i].scale = rockwidth/295;\n    bottomwall[i].immovable = true;\n    topwall[i] = createSprite((rockwidth/2) + i*rockwidth, rockheight/2, rockwidth, rockheight);\n    topwall[i].addImage('main', boundaryImg);\n    topwall[i].scale = rockwidth/295;\n    topwall[i].immovable = true;\n  }\n  for (let i=0; i<rocknumheight; i++) {\n    rightwall[i] = createSprite(width - rockwidth/2, (rockheight/2) + i*rockheight, rockwidth, rockheight);\n    rightwall[i].addImage('main', boundaryImg);\n    rightwall[i].scale = rockwidth/295;\n    rightwall[i].immovable = true;\n    leftwall[i] = createSprite(rockwidth/2, (rockheight/2) + i*rockheight, rockwidth, rockheight);\n    leftwall[i].addImage('main', boundaryImg);\n    leftwall[i].scale = rockwidth/295;\n    leftwall[i].immovable = true;\n  }\n\n  let icecreamImg = loadImage('icecream.png');\n  let leftheightfactor = (height- 2*rockheight)/3;\n  playerdoor = createSprite(wallwidth*13, (height/2) + leftheightfactor + 15, wallwidth, leftheightfactor);\n  playerdoor.addImage('main', icecreamImg);\n  playerdoor.scale = 0.09;\n\n  fire = new Group();\n\n  for (let i=0; i<5; i++) {\n    fires = createSprite(random(rockwidth+50+playerwidth, width-rockwidth-50-playerwidth), random(rockheight+100, height-rockheight-100), wallwidth, leftheightfactor);\n    fires.addAnimation('normal', 'fire1.png', 'fire2.png', 'fire2.png', 'fire1.png');\n    fire.add(fires);\n  }\n\n}\n\nfunction draw() {\n  switch(mode){\n    case 0:\n      gameplay();\n      break;\n    case 1:\n      playerwin();\n      break;\n    case 2:\n      playerlose();\n      break;\n  }\n}\n\nfunction gameplay() {\n  background(212,197,226);\n  drawSprites();\n\n  push();\n    fill(154, 137, 171);\n    textFont(font);\n    textSize(30);\n    text('BROCC-ATTACK', width/2, 60);\n  pop();\n\n  if(keyIsDown(65)){\n    blocker.position.x-=gamespeed;\n    blocker.mirrorX(-1);\n  }\n  if(keyIsDown(87)){\n    blocker.position.y-=gamespeed;\n  }\n  if(keyIsDown(68)){\n    blocker.position.x+=gamespeed;\n    blocker.mirrorX(1);\n  }\n  if(keyIsDown(83)){\n    blocker.position.y+=gamespeed;\n  }\n  \n  if(keyIsDown(37)){\n    player.position.x-=gamespeed;\n    player.mirrorX(-1);\n  }\n  if(keyIsDown(38)){\n    player.position.y-=gamespeed;\n  }\n  if(keyIsDown(39)){\n    player.position.x+=gamespeed\n    player.mirrorX(1);\n  }\n  if(keyIsDown(40)){\n    player.position.y+=gamespeed;\n  }\n\n  for (let i=0; i<rocknumheight; i++) {\n    blocker.collide(rightwall[i]);\n    player.collide(rightwall[i]);\n    blocker.collide(leftwall[i]);\n    player.collide(leftwall[i]);\n  }\n  for (let i=0; i<rocknumwidth; i++) {\n    blocker.collide(topwall[i]);\n    player.collide(topwall[i]);\n    blocker.collide(bottomwall[i]);\n    player.collide(bottomwall[i]);\n  }\n  \n  // player.displace(blocker);\n  blocker.displace(player);\n  \n  blocker.collide(playerdoor);\n  blocker.collide(fire);\n  fire.collide(fire);\n  \n  if (player.collide(playerdoor)) {\n    mode=1;\n  }\n  if (player.collide(fires)) {\n    mode=2;\n  }\n}\n\nfunction playerwin() {\n  background(0);\n  text(\"yay! player escaped the burning flames\", width/2, height/2 - 8);\n  text(\"press A to play again\", width/2, height/2 + 8);\n  if(keyIsDown(65)){\n    window.location.reload();\n  }\n}\n\nfunction playerlose() {\n  background(0);\n  text(\"oops. player was engulfed in fire\", width/2, height/2 - 8);\n  text(\"press A to play again\", width/2, height/2 + 8);\n  if(keyIsDown(65)){\n    window.location.reload();\n  }\n}",
    "comments": []
  },
  {
    "_id": "QoxgbXCHKFQHh6P8q",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-14T03:15:01.842Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "13e9b98cd46e3699ef5c24f866e37f6e",
        "public_id": "avalanche2023spring/jnwpgxisxonqj4mqgonc",
        "version": 1676344539,
        "version_id": "b4db816ef0a22c3d8920075969a32291",
        "signature": "993b939d8022ac7ca736c54daccc195e0e33ccef",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-14T03:15:39Z",
        "tags": [],
        "bytes": 307684,
        "type": "upload",
        "etag": "3ef5d71996f5f5b7a03034996a330abd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676344539/avalanche2023spring/jnwpgxisxonqj4mqgonc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676344539/avalanche2023spring/jnwpgxisxonqj4mqgonc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:43:05.45Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:43:41.815Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T07:05:20.538Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T20:46:33.773Z" }
      }
    ],
    "title": "",
    "description": "I was inspired by my friend's colorful sweater. I tried using noise to create some dimensionality.",
    "comments": []
  },
  {
    "_id": "QpgX7g289jeGeJ7EQ",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T02:45:44.007Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "598a1d061da0844d7993d9d415c99b96",
        "public_id": "avalanche2023spring/szbvzgktwocavialvtif",
        "version": 1677811565,
        "version_id": "cbb8a1cfd40135d3d0ac2d6bd2064766",
        "signature": "593dc5e0c8ac624ce824866998c70f9d0866d629",
        "width": 814,
        "height": 814,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T02:46:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 10496267,
        "type": "upload",
        "etag": "3b0d06350b8619a1c7c9f4f53976cc82",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677811565/avalanche2023spring/szbvzgktwocavialvtif.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677811565/avalanche2023spring/szbvzgktwocavialvtif.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677811565/avalanche2023spring/szbvzgktwocavialvtif.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125073",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "3311354",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3923838,
        "duration": 21.4,
        "rotation": 0,
        "nb_frames": 1343,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-05T03:01:00.202Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:19.839Z" }
      }
    ],
    "title": "",
    "description": "**Challenge 1 Extended** Pardon the double posting, was unwell early this week",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n  noStroke();\n  frameRate(1);\n}\n\nfunction draw() {\n  noiseSeed(frameCount);\n  drawPattern();\n  //noLoop();\n}\n\nfunction drawPattern() {\n  ellipseMode(CENTER);\n  background(\"rgb(246,246,246)\");\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 120; i++) \n  {\n    // POSITION\n    let x = noise(i*10, 0)*(width);\n    let y = noise(i*40, 5)*(height);\n\n    // DIAMETER\n    let diameterNoise = max(noise(i, 1), noise(i, 5));\n    let diameter = diameterNoise*i/4.5 + 6;\n\n    // COLOUR\n    let hue = diameter*15;\n    fill(hue, 50, 100);\n    \n    // DRAW \n    ellipse(x, y, diameter, diameter);\n    ellipse(width-x, y, diameter, diameter);\n    ellipse(x, height-y, diameter, diameter);\n    ellipse(width-x, height-y, diameter, diameter);\n    ellipse(y, x, diameter, diameter);\n    ellipse(y, height-x, diameter, diameter);\n    ellipse(width-y, x, diameter, diameter);\n    ellipse(width-y, height-x, diameter, diameter);\n    \n  }\n}\n\nfunction mouseClicked() {\n  noiseSeed(random(200));\n  drawPattern();\n}",
    "comments": []
  },
  {
    "_id": "QqePzhtk9zEsu22PM",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-28T14:52:24.009Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6f3b4062c5a9834141ed8d9aa3302ecb",
        "public_id": "avalanche2023spring/gxxzwy7ecn38tmitl7yf",
        "version": 1680015156,
        "version_id": "65399bf80ce4d70b3a8bd405914f4465",
        "signature": "71998f57240f04f29fbf97f9b1103e072d22a74d",
        "width": 1200,
        "height": 1202,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-28T14:52:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 4164827,
        "type": "upload",
        "etag": "51e4434a48f113baf321ce90a4629908",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680015156/avalanche2023spring/gxxzwy7ecn38tmitl7yf.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680015156/avalanche2023spring/gxxzwy7ecn38tmitl7yf.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680015156/avalanche2023spring/gxxzwy7ecn38tmitl7yf.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125677",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1718956",
          "dar": "600:601",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2058822,
        "duration": 16.183333,
        "rotation": 0,
        "nb_frames": 1031,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a55a83af52669d10ba73b8ecc33e5446",
        "public_id": "avalanche2023spring/qqdikawz67bppoo25hh3",
        "version": 1680021391,
        "version_id": "2cb6dde764c057829109b5d0393f537c",
        "signature": "bd20caaf5f8e2704699cfda5bff7df9916631751",
        "width": 1200,
        "height": 1202,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-28T16:36:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 1547331,
        "type": "upload",
        "etag": "14116ce32d5728aaab6df55f18a5ea9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680021391/avalanche2023spring/qqdikawz67bppoo25hh3.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680021391/avalanche2023spring/qqdikawz67bppoo25hh3.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680021391/avalanche2023spring/qqdikawz67bppoo25hh3.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "131107",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1215008",
          "dar": "600:601",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1618123,
        "duration": 7.65,
        "rotation": 0,
        "nb_frames": 519,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T00:12:06.214Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T21:04:28.168Z" }
      }
    ],
    "title": "",
    "description": "Worked with the example code to visualize by mapping the sizes on p5 - still trying to understand and experiment with envelope and oscillator to understand tone.js",
    "comments": []
  },
  {
    "_id": "QquAPwx5MyEWZF3By",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T12:33:32.407Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "80d89f92eef5a74c1168679105842ebe",
        "public_id": "avalanche2023spring/yqwbbswqw60q3fnhdp6y",
        "version": 1681475616,
        "version_id": "6f9f44cdb945c4507c8e264399e5111a",
        "signature": "d537976f111de76e93d65c1c2829ff5349d974ff",
        "width": 788,
        "height": 786,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T12:33:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 286733,
        "type": "upload",
        "etag": "de0e22c6e2bd7799fa81437784dd820a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681475616/avalanche2023spring/yqwbbswqw60q3fnhdp6y.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681475616/avalanche2023spring/yqwbbswqw60q3fnhdp6y.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681475616/avalanche2023spring/yqwbbswqw60q3fnhdp6y.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "84856",
          "dar": "394:393",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 122014,
        "duration": 18.8,
        "rotation": 0,
        "nb_frames": 1131,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-14T16:12:20.442Z" }
      }
    ],
    "title": "",
    "description": "Uber for X",
    "code": "let variations = ['dogs', 'cats', 'birds', 'snakes', 'rabbits', 'hamsters', 'doctors', 'chef', 'artists', 'teachers', 'lawyers', 'drivers','plumbers', 'electricians', 'gardeners', 'cleaners', 'photographers'];\n\nfunction setup() {\n  createCanvas(400, 400);\n  textSize(20);\n  textAlign(CENTER);\n  noLoop();\n}\n\nfunction draw() {\n  background(220);\n  fill(0);\n  let variation = random(variations)\n  text(`Uber for ${variation}`, width/2, height/2);\n}",
    "comments": []
  },
  {
    "_id": "QuBfic2CcBDPR7SFH",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T11:34:50.579Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c886590302b4e7afe085e03699011a68",
        "public_id": "avalanche2023spring/ckzzvtmauxg7irhxcmqy",
        "version": 1680265420,
        "version_id": "f39d4804dd08a9f168b54cb1b3d7ad7c",
        "signature": "f44760f9e0466db8559a5ba9769eedd22a337edc",
        "width": 2896,
        "height": 1604,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T12:23:40Z",
        "tags": [],
        "bytes": 1009725,
        "type": "upload",
        "etag": "063ecda96aeb5b30c81cd32232fbfdc1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680265420/avalanche2023spring/ckzzvtmauxg7irhxcmqy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680265420/avalanche2023spring/ckzzvtmauxg7irhxcmqy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 8 (1/4): PAIR CHALLENGE WITH JOHN. THIS SOUNDS LIKE MORSE CODE. We tried to change quite a bit here but decided against changing EVERYTHING.",
    "comments": []
  },
  {
    "_id": "QyC9tjLM6FfvQbAbE",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-20T18:31:17.228Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6fcaa795093560c57e35749210350496",
        "public_id": "avalanche2023spring/knbzfvpzorzdogc9achj",
        "version": 1679337090,
        "version_id": "82e3a07ae20d13d4776bacb4567254ca",
        "signature": "e04d231cbff2103b39a707b4d499c7862b1b9117",
        "width": 994,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-20T18:31:30Z",
        "tags": [],
        "bytes": 1102476,
        "type": "upload",
        "etag": "7c20accb433d3bbc37142987f0d9e324",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679337090/avalanche2023spring/knbzfvpzorzdogc9achj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679337090/avalanche2023spring/knbzfvpzorzdogc9achj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T05:16:19.544Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T16:36:28.885Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:57:31.878Z" }
      }
    ],
    "title": "",
    "description": "I spent a good amount of time trying to set up a paper js file from scratch in vscode. But here is where I got within the time limit! It's inspired by one of the challenges from the textbook.",
    "comments": []
  },
  {
    "_id": "R6hoYqmRNZcnLYeJW",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-01T20:52:10.424Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "df632c0ba02449ecd93a9e3ef18d2884",
        "public_id": "avalanche2023spring/ofxnikiw61jsvz6uf3jf",
        "version": 1682974333,
        "version_id": "b070b90dbba1b01f40824918ae5bd68b",
        "signature": "90020f125718a522105fd761f4f3427fd2b14a94",
        "width": 961,
        "height": 699,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-01T20:52:13Z",
        "tags": [],
        "bytes": 211096,
        "type": "upload",
        "etag": "146372b3e2538d662340bd02b5b5afd7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682974333/avalanche2023spring/ofxnikiw61jsvz6uf3jf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682974333/avalanche2023spring/ofxnikiw61jsvz6uf3jf.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T00:03:00.011Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T04:18:34.134Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:52.805Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T22:59:02.743Z" }
      }
    ],
    "title": "",
    "description": "Started this alongside the helicopter sketch. I wanted to see if I could push the amount of objects through repeating patterns while also messing around with union() and difference() as well. The code could've been optimized a bit better but I wanted to manually place each pattern to create a system of pipes and cubes at specific spots of my choosing.",
    "code": "// Framework\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n\n// Repeat 1\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 2\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 3\n\ntranslate([40, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 4\n\ntranslate([40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 5\n\ntranslate([-40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Duplicate\n\nrotate([0, 180, 0]){\n    // Framework\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n\n// Repeat 1\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 2\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 3\n\ntranslate([40, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 4\n\ntranslate([40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 5\n\ntranslate([-40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n}\n\n// Duplicate 2\n\ntranslate([40, 0, 0]){\n// Framework\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n\n// Repeat 1\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 2\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 3\n\ntranslate([40, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 4\n\ntranslate([40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 5\n\ntranslate([-40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n}",
    "comments": []
  },
  {
    "_id": "RCLDttdWRsMPWciPM",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T17:05:27.344Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2bed6846d2b9ca19a9dc90ee7ec8e8be",
        "public_id": "avalanche2023spring/jjkbdzmy0b7u0yrltwx6",
        "version": 1676653536,
        "version_id": "635930ad88aae1bc4efe5de280c6e7fb",
        "signature": "a5287ad703a1ed24bd27ee5e8ac57292968f3281",
        "width": 828,
        "height": 826,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T17:05:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 8970869,
        "type": "upload",
        "etag": "755e8e726a0c1f7bbe560f2a0d887b6f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676653536/avalanche2023spring/jjkbdzmy0b7u0yrltwx6.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676653536/avalanche2023spring/jjkbdzmy0b7u0yrltwx6.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676653536/avalanche2023spring/jjkbdzmy0b7u0yrltwx6.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3736409",
          "dar": "414:413",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3780524,
        "duration": 18.983333,
        "rotation": 0,
        "nb_frames": 1143,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "296aabb8ffedc79ebcbdc2d0fc632bd4",
        "public_id": "avalanche2023spring/dubv8l0rezhc9vetphpn",
        "version": 1676655428,
        "version_id": "c231ed676762d130ca506441072a9596",
        "signature": "de984bb6a35e5c1ca29fea335e72db3140851c0c",
        "width": 800,
        "height": 798,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T17:37:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 12734468,
        "type": "upload",
        "etag": "837e7926b0b396e8c66f936cf582c2fb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676655428/avalanche2023spring/dubv8l0rezhc9vetphpn.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676655428/avalanche2023spring/dubv8l0rezhc9vetphpn.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676655428/avalanche2023spring/dubv8l0rezhc9vetphpn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7371616",
          "dar": "400:399",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 7436185,
        "duration": 13.7,
        "rotation": 0,
        "nb_frames": 817,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:17.336Z" }
      }
    ],
    "title": "",
    "description": "Heartbeat visualizer with noise in response to Justin's heart sketch",
    "comments": [],
    "code": "let t = 0;\nlet x = 0;\nlet y = 0;\nlet heartRate = 60; // in beats per minute\n\nfunction preload () {\n  heart = loadImage('heart.png');\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(0);\n  stroke(0);\n  fill(255);\n}\n\nfunction draw() {\n  background(0);\n  image(heart, 0, 0, 400, 400);\n  stroke(255);\n  noFill();\n  beginShape();\n  for (let i = 0; i < width; i++) {\n    let noiseVal = noise(t) * height/2;\n    let y = map(noiseVal, 0, height/2, height/2, 0);\n    vertex(i, y);\n    t += 0.01;\n  }\n  endShape();\n\n  stroke(255);\n  fill(255);\n  let heartRateInSecs = 60 / heartRate;\n  let beatTime = map(sin(frameCount / (heartRateInSecs * 60)), -1, 1, 0, 1);\n  x = beatTime * width;\n  y = map(noise(beatTime), 0, 1, height/2, 0);\n  ellipse(x, y, 20, 20);\n\n  // Draw the lines of the graph\n  stroke(255, 50);\n  for (let i = 0; i < width; i += 10) {\n    let noiseVal = noise(t + i / 100) * height/2;\n    let y1 = map(noiseVal, 0, height/2, height/2, 0);\n    let y2 = map(noiseVal, 0, height/2, height/2, height);\n    line(i, y1, i, y2);\n  }\n}"
  },
  {
    "_id": "REzHWbBR4hFASqDGB",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T20:36:27.906Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dc70d07f51c9ac3f8da3738a17f79ddc",
        "public_id": "avalanche2023spring/jizprc2fitwdg2hmggtu",
        "version": 1677184603,
        "version_id": "b2cb90f9557ce9d901edcf32b0be25bf",
        "signature": "040120512f5331d0529cfaad1ef08d010e70cfb3",
        "width": 784,
        "height": 790,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T20:36:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 5569909,
        "type": "upload",
        "etag": "383bc1fb77ea725e4a4ba8ccd93441fb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677184603/avalanche2023spring/jizprc2fitwdg2hmggtu.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677184603/avalanche2023spring/jizprc2fitwdg2hmggtu.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677184603/avalanche2023spring/jizprc2fitwdg2hmggtu.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "6970080",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 7110521,
        "duration": 6.266667,
        "rotation": 0,
        "nb_frames": 379,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T00:24:14.571Z" }
      }
    ],
    "title": "",
    "description": "WEEK 4 (4/4):  I wanted to try to recreate the noise p5.js thing where it follows your mouse but I don't know how you got that shape so here is a circle.",
    "comments": []
  },
  {
    "_id": "Rda55SpyapsqhW9M6",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-14T06:45:28.674Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5bb435b25bcf35a76bf275fb1b48de84",
        "public_id": "avalanche2023spring/gtlrjag46rawgjwli1fm",
        "version": 1676579971,
        "version_id": "c04d9a2f2d0a36ffc1bfb50ba34c81fa",
        "signature": "79993acdb6e14689c1caafc38a44a28c02b30779",
        "width": 1442,
        "height": 904,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-16T20:39:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 18501213,
        "type": "upload",
        "etag": "03b909f947d7df5e55cc207d71d48df5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676579971/avalanche2023spring/gtlrjag46rawgjwli1fm.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676579971/avalanche2023spring/gtlrjag46rawgjwli1fm.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676579971/avalanche2023spring/gtlrjag46rawgjwli1fm.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125366",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "14815670",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 17110948,
        "duration": 8.65,
        "rotation": 0,
        "nb_frames": 580,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a130d1f835610aba111d80403870e935",
        "public_id": "avalanche2023spring/nnmb2vllhrukce2bzg2h",
        "version": 1676580012,
        "version_id": "d2084aad2565dcac12d1aebcb57ac7e1",
        "signature": "b71e83a9901cfb3e19d2bfc85ee5061f24d2d128",
        "width": 1528,
        "height": 840,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-16T20:40:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 18297474,
        "type": "upload",
        "etag": "8f0711a46b25f6a6adfd83bc7f31060c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676580012/avalanche2023spring/nnmb2vllhrukce2bzg2h.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676580012/avalanche2023spring/nnmb2vllhrukce2bzg2h.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676580012/avalanche2023spring/nnmb2vllhrukce2bzg2h.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126428",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "13761528",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 15739762,
        "duration": 9.3,
        "rotation": 0,
        "nb_frames": 617,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "01d38569eb996722cee21893e4058e9b",
        "public_id": "avalanche2023spring/s9wiuznigwzwqxjhj4tn",
        "version": 1676580078,
        "version_id": "6063a736c396132d5777b0f07026b4bb",
        "signature": "20b68971c07f8c25cd25a312d38be4f26945320a",
        "width": 1648,
        "height": 856,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T20:41:18Z",
        "tags": [],
        "bytes": 377785,
        "type": "upload",
        "etag": "1820a5db7408fc72d419f55f62b53918",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676580078/avalanche2023spring/s9wiuznigwzwqxjhj4tn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676580078/avalanche2023spring/s9wiuznigwzwqxjhj4tn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T14:37:46.894Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T04:10:09.768Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-24T03:54:35.207Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:05.511Z" }
      }
    ],
    "title": "",
    "description": "**Manipulating Object Rotations with Perlin Noise on Unity** [View project more clearly  on Itch.io here.](https://reshmarosethomas.itch.io/cuboids-in-love) Because of the structure of the for loops used to position the objects, there is a similarity in rotation of objects in the same column - would like to figure out how to manipulate that. The last image is a picture of when where I was trying to manipulate position instead of rotation with Noise.",
    "code": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CubeNoise : MonoBehaviour\n{\n    private float timer;\n    void Start()\n    {\n        timer = 0f; \n    }\n    \n    void Update()\n    {\n        int childCounter = 0;\n        timer += Time.deltaTime;\n\n        foreach (Transform child in this.transform)\n        {\n            GameObject obj = child.gameObject;\n            childCounter++;\n\n            float angX = Mathf.PerlinNoise(timer * 0.33f, childCounter * 0.1f) * 90;\n            Vector3 newRotation = new(angX, angX, angX);\n            obj.transform.eulerAngles = newRotation;\n\n        }\n    }\n}",
    "comments": []
  },
  {
    "_id": "Rf4JSPQz7k6aFqnRz",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-05T15:16:27.212Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "df2e07a76b5769e49e5105ca55c931ab",
        "public_id": "avalanche2023spring/zhk1xehd8mc034nvsyy0",
        "version": 1680707794,
        "version_id": "2791e64279051c65756a71f4fbb00d1e",
        "signature": "c3ca43c4289fd3cbda01dbbb8bfe3f1c2b1f0cb0",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-05T15:16:34Z",
        "tags": [],
        "pages": 0,
        "bytes": 3022574,
        "type": "upload",
        "etag": "a448684eab8b2c1317cd2f056b804699",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680707794/avalanche2023spring/zhk1xehd8mc034nvsyy0.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680707794/avalanche2023spring/zhk1xehd8mc034nvsyy0.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680707794/avalanche2023spring/zhk1xehd8mc034nvsyy0.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2274",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "604538",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 616003,
        "duration": 39.253333,
        "rotation": 0,
        "nb_frames": 2355,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:45:41.239Z" }
      }
    ],
    "title": "",
    "description": "Building off my Pong sketch, I wanted to implement a system where player paddles impart their speed onto the ball. That way, a paddle moving down causes the ball to gain negative y velocity. I kinda got it to work but it is a bit buggy. It definitely should not have taken as long as it did for me to figure out how to remove the sprite trails but here we are.",
    "code": "let ball, topBox, leftBox, rightBox, bottomBox;\nlet leftScore = 0, rightScore = 0;\n\nfunction setup() {\n  createCanvas(800, 800)\n\n\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start = createSprite(250, 300, 200, 200) \n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n  \n}\nlet impartSpeed = 0\nlet ballHue = 0 \nlet resetState = true;\nfunction draw() {\n  if (resetState === true)  {  \n    \n    if (keyWentUp(32)) {\n    serve()  \n    resetState = false\n    start.draw = function () {\n      rect(0,0,300, 100)\n    }\n  }\n\n}\ndrawSprites() \n  background(255 )\n  textSize(32)\n  drawSprites()\n  textAlign(CENTER)\n  ballHue++\n  if (ballHue > 200) {\n    ballHue = 0\n  }\n  ball.shapeColor = [ballHue, ballHue, ballHue + 800]\n  ball.bounce(topBox);\n  ball.bounce(bottomBox); \n  ball.bounce(leftBox);\n  ball.bounce(rightBox);\n   if (ball.touching.right) {\n    scoreUp('right')\n   }\n\n   if (ball.touching.left) {\n    scoreUp('left')\n   }\n\n   if (keyWentDown(38)) {\n    rightPaddle.position.y -= 80;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed -= 1\n    impartSpeed = Math.max(impartSpeed, -2)\n\n  }\n\n  if (keyWentDown(40)) {\n    rightPaddle.position.y += 80;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed += 1\n    impartSpeed = Math.max(impartSpeed, 2)\n\n  }\n\n  \n  if (keyWentDown(87)) {\n    leftPaddle.position.y -= 80;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed -= 1\n    impartSpeed = Math.max(impartSpeed, - 1)\n\n  }\n\n  if (keyWentDown(83)) {\n    leftPaddle.position.y += 80;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed += 1\n    impartSpeed = Math.max(impartSpeed, 1)\n  }\n\n \n\n  \n\n  if (ball.bounce(leftPaddle)) {\n    console.log(leftPaddle.getSpeed)\n    ball.velocity.y += impartSpeed \n  }\n\n  if (ball.bounce(rightPaddle)) {\n    console.log(leftPaddle.getSpeed)\n    ball.velocity.y += impartSpeed \n  }\n  \n\n\n\n\n\n\n\n\n  rect(40, 30, 80, 80)\n \n  text(leftScore + '', 80, 80)\n  rect(660, 30, 80, 80)\n  text(rightScore + '', 700, 80) \n}\n\nfunction scoreUp(side) {\n  if (side === 'left') {\n    rightScore++\n    resetGame()\n  } else {\n    leftScore++\n    resetGame()\n  }\n\n}\n\nfunction serve() {\n  ball.position.x = 400;\n  ball.position.y = 400;\n\n  let dir = Math.random();\n  let ang = (Math.random() - 0.5) * 60 + 10\n  if (dir <= 0.5) {\n    ball.setSpeed(8, ang )\n  } else {\n    ball.setSpeed(-8  , ang)\n  }\n\n}\n\nfunction resetGame() {\n  serve()\n  resetState = true\n  ball.velocity.x = 0;\n  ball.velocity.y = 0;\n  allSprites.removeSprites();\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n}",
    "comments": []
  },
  {
    "_id": "RjB79Rsi6pdFroecQ",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T18:09:19.259Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d08204493cadaa94c9b51b799733d778",
        "public_id": "avalanche2023spring/aua5kgndrr8neve7kmpt",
        "version": 1678385427,
        "version_id": "c41b004234748dc9c6a8914ce088ed40",
        "signature": "498983d1269ff1b1306bad69a923af54248d24fb",
        "width": 2000,
        "height": 2000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T18:10:27Z",
        "tags": [],
        "bytes": 6409595,
        "type": "upload",
        "etag": "67f5bfa73c240f61262bc58baa36c3d7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678385427/avalanche2023spring/aua5kgndrr8neve7kmpt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678385427/avalanche2023spring/aua5kgndrr8neve7kmpt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "27fc2fb187ab93a24226a5a6eb1ac337",
        "public_id": "avalanche2023spring/mhcywbamrz5gidk4ptgs",
        "version": 1678385513,
        "version_id": "d88ebb0e29199a12d3bf28f60d88b414",
        "signature": "b1b6b5d6b2ec049e05e77db55c8fe7da6dd91b31",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-09T18:11:53Z",
        "tags": [],
        "bytes": 168645,
        "type": "upload",
        "etag": "a865ef3b0c20c3be88cf1b8ad851739f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678385513/avalanche2023spring/mhcywbamrz5gidk4ptgs.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678385513/avalanche2023spring/mhcywbamrz5gidk4ptgs.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T18:59:15.605Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T00:22:40.016Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:50.412Z" }
      }
    ],
    "title": "",
    "description": "My extension of Keren's pixel image for the pair challenge - I pulled the colors from Keren's original piece (second image) and reinterpreted it into a space-like image",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love the space effect!\n",
        "created_at": { "$date": "2023-03-09T19:29:40.676Z" }
      }
    ]
  },
  {
    "_id": "Rkxm7j42tpHgRLQC9",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": { "$date": "2023-02-03T15:43:04.943Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8034b387db9aaae70f4f26b1d061bc21",
        "public_id": "avalanche2023spring/ifokhmmvmtsg7mkixw35",
        "version": 1675438989,
        "version_id": "3805697a7febf5294e3a66dc456d9b01",
        "signature": "af730259167187693335e5443a58cd1158b93276",
        "width": 1236,
        "height": 920,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T15:43:09Z",
        "tags": [],
        "bytes": 1973049,
        "type": "upload",
        "etag": "73827bde4c63b44044903ad0f3dd8d13",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675438989/avalanche2023spring/ifokhmmvmtsg7mkixw35.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675438989/avalanche2023spring/ifokhmmvmtsg7mkixw35.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T16:25:10.258Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T17:22:27.756Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Sketch based on Rama's instructions :) The show is New Girl!",
    "comments": []
  },
  {
    "_id": "S3BcBbAJC9yiN98hN",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T09:36:26.238Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "66118ab83b45c387e38e017a9e1b23b1",
        "public_id": "avalanche2023spring/pcgmyb7t9eybzvijcuzm",
        "version": 1678443729,
        "version_id": "f8e9a669b0261376bf8ce7a00950d631",
        "signature": "b720c8dd946712850dbbb095e930c807d5a82f09",
        "width": 1368,
        "height": 1370,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T10:22:09Z",
        "tags": [],
        "bytes": 992924,
        "type": "upload",
        "etag": "3564422c60197a39a9043b3d62f95a4f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678443729/avalanche2023spring/pcgmyb7t9eybzvijcuzm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678443729/avalanche2023spring/pcgmyb7t9eybzvijcuzm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0045088268ee41c558551c42cf383108",
        "public_id": "avalanche2023spring/jb2hnyy2lolexcyte51c",
        "version": 1678443760,
        "version_id": "23e0d89a8fcc515b6583d2b0cf898d67",
        "signature": "07ffe09e0d093b8414c1879974ed299088de96fa",
        "width": 1368,
        "height": 1370,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T10:22:40Z",
        "tags": [],
        "bytes": 1386890,
        "type": "upload",
        "etag": "0cd1908dedfb59fcab106f0176c7e4cf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678443760/avalanche2023spring/jb2hnyy2lolexcyte51c.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678443760/avalanche2023spring/jb2hnyy2lolexcyte51c.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "968f04063c67657c4de3b13722cd118a",
        "public_id": "avalanche2023spring/dh9mrwak0qet6wgigupw",
        "version": 1678443780,
        "version_id": "0f4a3d8963d00e9dc93483c638cff0ee",
        "signature": "70b70ac23b10671b4447be8a845802c6e3fe8bad",
        "width": 1368,
        "height": 1370,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T10:23:00Z",
        "tags": [],
        "bytes": 1113333,
        "type": "upload",
        "etag": "39adb2e2a857d176949d436bcfeca09d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678443780/avalanche2023spring/dh9mrwak0qet6wgigupw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678443780/avalanche2023spring/dh9mrwak0qet6wgigupw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T15:50:09.286Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T16:58:11.078Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T17:09:05.274Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:25.561Z" }
      }
    ],
    "title": "",
    "description": "**Raja Ravi Verma's painting as Input**",
    "comments": [
      {
        "commenter_id": "eeksZiGaSD3xMNF54",
        "comment": "YAy!",
        "created_at": { "$date": "2023-03-10T15:50:16.378Z" }
      }
    ],
    "inspiration_name": "Damayanti talks to the Celestial Swan about Nala",
    "inspiration_url": "https://en.wikipedia.org/wiki/Damayanti#/media/File:Ravi_Varma-Princess_Damayanthi_talking_with_Royal_Swan_about_Nala.jpg"
  },
  {
    "_id": "S3ssAwJ6oN73QQBa9",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T03:33:45.466Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "60705f773915165b1a88875fe583604f",
        "public_id": "avalanche2023spring/shwh98yqpcmj5b1hn1j0",
        "version": 1677123398,
        "version_id": "223c9c82569a999c86703b2279b70aa7",
        "signature": "a14ad86a2053ae225dda2ce4786058c0a27982f0",
        "width": 1280,
        "height": 712,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T03:36:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 17706288,
        "type": "upload",
        "etag": "442178cbd68938d10d217c64160c87e1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677123398/avalanche2023spring/shwh98yqpcmj5b1hn1j0.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677123398/avalanche2023spring/shwh98yqpcmj5b1hn1j0.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677123398/avalanche2023spring/shwh98yqpcmj5b1hn1j0.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "6483152",
          "dar": "160:89",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6495634,
        "duration": 21.807,
        "rotation": 0,
        "nb_frames": 495,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T04:12:42.116Z" }
      }
    ],
    "title": "",
    "description": "My starting place for this week's pair challenge - curious to see how this will be interpreted!",
    "comments": []
  },
  {
    "_id": "S6yTqa2JN4dqzgewF",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T18:26:47.567Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8a575036bde07d169878b4e39862a706",
        "public_id": "avalanche2023spring/mpl2pj9ftfr2expz0byr",
        "version": 1678386440,
        "version_id": "e2ad3b4185c90ea950ad76fd3e3cce12",
        "signature": "e0df7d0567ca7707a7ec0593107660728538b861",
        "width": 720,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-09T18:27:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 2540503,
        "type": "upload",
        "etag": "cd73451de6c4c3d1cf382a65f65323fa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678386440/avalanche2023spring/mpl2pj9ftfr2expz0byr.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678386440/avalanche2023spring/mpl2pj9ftfr2expz0byr.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678386440/avalanche2023spring/mpl2pj9ftfr2expz0byr.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Constrained Baseline",
          "bit_rate": "5748855",
          "dar": "2:3",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 5750997,
        "duration": 3.533333,
        "rotation": 0,
        "nb_frames": 106,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T18:59:13.197Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:00.127Z" }
      }
    ],
    "title": "",
    "description": "Recolouring one of my own illustrations",
    "comments": []
  },
  {
    "_id": "S7tqfesJ38NxS85kv",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-11T01:28:05.379Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "de7e84fe0049dca59115591c7cd76fb6",
        "public_id": "avalanche2023spring/xpog2dbxsiab6bsybhiy",
        "version": 1681176493,
        "version_id": "46556db8376e375cbe553ffe58e868d0",
        "signature": "333122ac3fd0cb557e8e6f79b19c6147e46ada91",
        "width": 758,
        "height": 500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-11T01:28:13Z",
        "tags": [],
        "bytes": 16996,
        "type": "upload",
        "etag": "2e59bf2a70f2c152b01d8bde3c197f0a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681176493/avalanche2023spring/xpog2dbxsiab6bsybhiy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681176493/avalanche2023spring/xpog2dbxsiab6bsybhiy.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-11T17:04:28.249Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T05:58:55.44Z" }
      }
    ],
    "title": "",
    "description": "Drew upon the book title generator example from the textbook for this sketch. I wanted to see if I could make a generator that would plug in random values from an array of numbers and do math. I don't think I was able to hit that as many of the equations came out wrong or my code is incapable of understanding PEDMAS.",
    "code": "// Partially adapted from https://compform.net/js_lab/js_lab.html?/text/sketches/title/title.js\n\ninjectInterface();\ndocument.getElementById(\"equation\").textContent = generateEquation();\n\n// Equation: v1 + v2 - v3 * v4\n\nfunction generateEquation() {\n  var numbers = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n  ];\n  \n  var number1 = sample(numbers);\n  var number2 = sample(numbers);\n  var number3 = sample(numbers);\n  var number4 = sample(numbers);\n  \n  var a = number3 * number4;\n  var b = number1 + number2;\n  \n  var equation = `${number1} + ${number2} - ${number3} * ${number4} = ${b - a}`;\n  \n  console.log(number1);\n  console.log(number2);\n  console.log(number3);\n  console.log(number4);\n  \n  return equation;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#equation {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"equation\">Equation</div>\n\t</div>\n`\n  );\n}",
    "comments": []
  },
  {
    "_id": "SAQrtkLeyHNC2b7wv",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-27T17:58:49.975Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "02fb04a8d76f8ad5fb56b5dfd52660a7",
        "public_id": "avalanche2023spring/rfljylgtxl5xemjlrr0j",
        "version": 1679939945,
        "version_id": "1c47a6b006be99c43c2a5447b7dbf718",
        "signature": "4d541b07a8d1d85af08f66320645f9f8e4fa797c",
        "width": 850,
        "height": 880,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-27T17:59:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 2986562,
        "type": "upload",
        "etag": "9bd8555864e176f6114014ddccff1d8f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679939945/avalanche2023spring/rfljylgtxl5xemjlrr0j.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679939945/avalanche2023spring/rfljylgtxl5xemjlrr0j.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679939945/avalanche2023spring/rfljylgtxl5xemjlrr0j.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317121",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "793298",
          "dar": "85:88",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 1115498,
        "duration": 21.354667,
        "rotation": 0,
        "nb_frames": 640,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-27T22:06:56.191Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:17:01.922Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:14:14.756Z" }
      }
    ],
    "title": "",
    "description": "Individual challenge. Creating different melodies using the mouse, with notes mapped to positions on the canvas. Added visuals using p5.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n//partly adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/synth.js\n\nvar canvasWidth = 500;\nvar canvasHeight = 500;\n\nconst synth = new Tone.Synth();\nsynth.toMaster();\n\nwindow.onpointermove = (e) => {\n  let freq = map(e.clientX+e.clientY, 0, canvasWidth+canvasHeight, 36, 83);\n  synth.triggerAttackRelease(Tone.Midi(freq), \"8n\");\n};\n\nfunction map(value, min1, max1, min2, max2) {\n  const n = (value - min1) / (max1 - min1);\n  return n * (max2 - min2) + min2;\n}\n\nlet button;\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  colorMode(HSB);\n  background(0, 0, 95);\n  button = createButton('reset');\n  button.mousePressed(redrawBG);\n}\n\nfunction draw() {\n  let hue = map(mouseY, 0, height, 0, 300);\n  let brt = map(mouseX, 0, width, 30, 100);\n  let size = map(mouseX, 0, height, 20, 60);\n  fill(hue, 100, brt);\n  noStroke();\n  ellipse(mouseX, mouseY, size);\n}\n\nfunction redrawBG() {\n  push();\n  fill(0, 0, 95);\n  rect(0, 0, width, height);\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "SAeEWXuM5iBQk7zno",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-27T02:39:50.216Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "75e1f4ca7ac170b4c2b1791ed044cb89",
        "public_id": "avalanche2023spring/lxtgfnercbwdfpfh5whb",
        "version": 1677465652,
        "version_id": "fe59b19ac498b5b7607520dec316a817",
        "signature": "1a9ca5b37a8c3b6f89ebca7513307ec02b29ae3f",
        "width": 814,
        "height": 812,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-27T02:40:52Z",
        "tags": [],
        "bytes": 70402,
        "type": "upload",
        "etag": "605857b7a761d4985d1bb047606978be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677465652/avalanche2023spring/lxtgfnercbwdfpfh5whb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677465652/avalanche2023spring/lxtgfnercbwdfpfh5whb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I'm sure there's more elegant code to achieve this, but this is where I got to within the time limit for the first challenge! I used a lot of arrays, if statements + played around with noise",
    "comments": []
  },
  {
    "_id": "SCCznPDKE2Xtwm8Br",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T03:44:26.901Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ce7dd708db25c5e142c8e77da5f8cbea",
        "public_id": "avalanche2023spring/qrrf1g5nercf5bmjsnqc",
        "version": 1680234277,
        "version_id": "bd9c3ea6aa0a670e1b073ec83c98660d",
        "signature": "da626cd4e344e5f7fb28291f11a8a44c6cb87ea4",
        "width": 0,
        "height": 0,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T03:44:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 1125924,
        "type": "upload",
        "etag": "02ba2829871960af5a9cd583dd69b880",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680234277/avalanche2023spring/qrrf1g5nercf5bmjsnqc.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680234277/avalanche2023spring/qrrf1g5nercf5bmjsnqc.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680234277/avalanche2023spring/qrrf1g5nercf5bmjsnqc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "124068",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {},
        "is_audio": true,
        "bit_rate": 125662,
        "duration": 71.678,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b622861f10459e1a9dd5ea0e6cf1ed69",
        "public_id": "avalanche2023spring/u6twgjme1r7zaeymlt1x",
        "version": 1680234297,
        "version_id": "39e2b34476d2dcdf229ea00c2c919a05",
        "signature": "e596ea0f7dd3b4a0325197a1d54ca3f507c26573",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T03:44:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 524315,
        "type": "upload",
        "etag": "404876bfd1a302b69b0fda7046216254",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680234297/avalanche2023spring/u6twgjme1r7zaeymlt1x.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680234297/avalanche2023spring/u6twgjme1r7zaeymlt1x.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680234297/avalanche2023spring/u6twgjme1r7zaeymlt1x.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "199715",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "32017",
          "dar": "801:413",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 241573,
        "duration": 17.363333,
        "rotation": 0,
        "nb_frames": 1043,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "This was a fun one - I experimented with Tone.MembraneSynth to create a looping beat sound effect using the chords in C minor. Then, I used After Effects to combine the beat soundtrack with an instrumental sample of Moth to a Flame (by Swedish House Mafia & The Weeknd).",
    "comments": []
  },
  {
    "_id": "SG5AHBJn2z6Tft5Tn",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-12T01:31:37.631Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e91e21a27e9173f59cb930d15887acb9",
        "public_id": "avalanche2023spring/afy4jozejk4oavqmoi4y",
        "version": 1681263135,
        "version_id": "0adc3543d0329b6c34baa2502e81ad8c",
        "signature": "b974560e4dc38c1bef314cdff212b3397ab7135e",
        "width": 1918,
        "height": 956,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-12T01:32:15Z",
        "tags": [],
        "bytes": 164808,
        "type": "upload",
        "etag": "189547208113e9a78fe4f6303d7da526",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681263135/avalanche2023spring/afy4jozejk4oavqmoi4y.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681263135/avalanche2023spring/afy4jozejk4oavqmoi4y.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Reworked my incorrect Math Equation generating sketch to have it instead generate responses. As of now it just spawns a message when you press play. I want to expand on this for another sketch, hopefully adding more messages and letting the user pick a question to prompt a response.",
    "code": "// Partially adapted from https://compform.net/js_lab/js_lab.html?/text/sketches/title/title.js\n\n//Thinking about those Magic 8 ball messages, thinking about messages in that vein\n//Can spend some more time on this now that I have the foundation\n\ninjectInterface();\ndocument.getElementById(\"message\").textContent = generateMessage();\n\nfunction generateMessage() {\n  \n  var emotions = [\n    \"content\",\n    \"happy\",\n    \"thoughtful\",\n    \"provoked\",\n    \"sad\",\n    \"scared\",\n    \"angry\",\n    \"tired\",\n    \"suprised\",\n    \"out of it\",\n  ];\n  \n  var thought = [\n    \"getting some homework done\",\n    \"grabbing lunch\",\n    \"check my email soon\",\n    \"getting back home soon\",\n    \"checking out the new book store\",\n    \"going home\",\n    \"taking a walk in the park\",\n  ];\n  \n  var action = [\n    \"go home\",\n    \"grab a snack\",\n    \"go for a run\",\n    \"take a break\",\n    \"play some games\",\n    \"read a book\",\n    \"take a nap\",\n  ];\n  \n  var emotionalstate = sample(emotions);\n  var thoughts = sample(thought)\n  var actions = sample(action)\n  \n  var message = \"\";\n  if(Math.random(0, 1) < 0.4) {\n    message = `Hello, right now I'm ${emotionalstate}.`;\n  } else if(Math.random(0, 1) < 0.3) {\n    message = `I'm thinking about ${thoughts}.`;\n  } else if(Math.random(0, 1) < 0.3) {\n    message = `I want to ${actions}.`;\n  }\n  \n  return message;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#message {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"message\">Message</div>\n\t</div>\n`\n  );\n}",
    "comments": []
  },
  {
    "_id": "SJPurW9kMh8LFiRFa",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T23:31:55.348Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a33243fbbe7e48722b30c487ef441a21",
        "public_id": "avalanche2023spring/hwxlcg7vwb9lppsgaqr8",
        "version": 1675297142,
        "version_id": "0370ee8ec5aef8e2cfaabb0450a81455",
        "signature": "9f1f462b3b51062033cab774823098a7078e8cff",
        "width": 382,
        "height": 378,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-02T00:19:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 288435,
        "type": "upload",
        "etag": "d3a2b40d19100100edbb28a21fc3bb27",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675297142/avalanche2023spring/hwxlcg7vwb9lppsgaqr8.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675297142/avalanche2023spring/hwxlcg7vwb9lppsgaqr8.mp4",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "339304",
          "time_base": "1/12288"
        },
        "frame_rate": 24,
        "bit_rate": 341848,
        "duration": 6.75,
        "rotation": 0,
        "nb_frames": 162,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T02:02:01.674Z" }
      },
      {
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T04:07:52.876Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T04:29:36.001Z" }
      }
    ],
    "title": "",
    "description": "My own instruction set.\nCoded a small interaction from the book \"Like Water for Chocolate\"",
    "code": "//Instruction set Sahiti\n\n//book:\n//characters colour mix\n//Like water for chocolate\n//2 circles\n//changing sides mousemove\n//merging in the centre\n\n//Introduction to WebGL in p5.js - WebGL and p5.js Tutorial(coding train)\nlet colX;\nlet colY;\nlet angle=0\n\nfunction setup() {\n  createCanvas(400, 400, WEBGL);\n  //noStroke();\n}\n\nfunction draw() {\n  background(0);\n\n//   push();\n//   let dirX = (mouseX / width - 0.5) * 2;\n//   let dirY = (mouseY / height - 0.5) * 2;\n//   directionalLight(250, 250, 250, -dirX, -dirY, -1);\n//    noStroke();\n  \n//     for (let i = 0; i < width; i=i+40) {\n//   for (let j = 0; j < height; j=j+40){\n//     fill(255);\n//     sphere(i);\n// rotateX(-angle)\n//   }\n//     }\n// angle+=0.01\n//    pop();\n    noStroke();\n  for(let x = 0; x < width; x += 20) {\n    fill(random(255), random(255), random(255));\n    rect(x, 0, 10, height);\n    \n    \n   push();\n  colX = mouseX + 2;\n  colY = mouseY + 2;\n\n  for (var gridY = -height / 2; gridY < height; gridY += colY) {\n    for (var gridX = -width / 2; gridX < width; gridX += colX) {\n      fill(gridX, -height / 2 - gridY, 100);\n\n      noStroke();\n      rect(\n        mouseX - width / 2 + gridX,\n        mouseY + gridY,\n        mouseX + width / 2,\n        mouseY\n      );\n      //fill(51);\n      // ellipse(200, 200, 200, height-mouseY);\n    }\n  }\n   pop();\n}\n}",
    "comments": []
  },
  {
    "_id": "SLGZRxgdDjNkw5qrG",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Noise",
    "created_at": { "$date": "2023-05-05T15:29:28.966Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "086db503c3a83dcdfe67575fb1217bae",
        "public_id": "avalanche2023spring/khga4tnodpofgnuxolqc",
        "version": 1683300605,
        "version_id": "e929078b1aa7ac8786bfbd8d58387618",
        "signature": "ae0ba2cb15512e0bb9b5848fa5b9f791da7c57ed",
        "width": 796,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T15:30:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 3009626,
        "type": "upload",
        "etag": "250459ec4a198c4cb2a8b9e1fbd5f369",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683300605/avalanche2023spring/khga4tnodpofgnuxolqc.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683300605/avalanche2023spring/khga4tnodpofgnuxolqc.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683300605/avalanche2023spring/khga4tnodpofgnuxolqc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3842287",
          "dar": "1:1",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3925599,
        "duration": 6.133333,
        "rotation": 0,
        "nb_frames": 367,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Revisiting noise for some extra sketching - made a particle field animation",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet particles = [];\nlet numParticles = 50;\nlet gravity = 0.5;\nlet repulsion = 50;\nlet noiseScale = 0.02;\n\nfunction setup() {\n  createCanvas(400, 400);\n  for (let i = 0; i < numParticles; i++) {\n    particles.push(new Particle(random(width), random(height)));\n  }\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < particles.length; i++) {\n    particles[i].update();\n    particles[i].display();\n    particles[i].attract(particles);\n    particles[i].repel(particles);\n  }\n}\n\nclass Particle {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(0, 0);\n    this.acc = createVector(0, 0);\n    this.size = random(5, 10);\n    this.color = color(random(255), random(255), random(255));\n    this.noiseOffset = createVector(random(1000), random(1000));\n  }\n\n  update() {\n    let noiseVal = noise(this.noiseOffset.x, this.noiseOffset.y);\n    let angle = map(noiseVal, 0, 1, 0, TWO_PI);\n    let mag = map(noiseVal, 0, 1, 0, 5);\n    let noiseVec = p5.Vector.fromAngle(angle);\n    noiseVec.setMag(mag);\n    this.acc.add(noiseVec);\n    this.vel.add(this.acc);\n    this.vel.limit(5);\n    this.pos.add(this.vel);\n    this.acc.mult(0);\n    if (this.pos.x < 0) {\n      this.pos.x = width;\n    }\n    if (this.pos.x > width) {\n      this.pos.x = 0;\n    }\n    if (this.pos.y < 0) {\n      this.pos.y = height;\n    }\n    if (this.pos.y > height) {\n      this.pos.y = 0;\n    }\n    this.noiseOffset.add(this.vel.copy().mult(noiseScale));\n  }\n\n  display() {\n    noStroke();\n    fill(this.color);\n    ellipse(this.pos.x, this.pos.y, this.size, this.size);\n  }\n\n  attract(particles) {\n    for (let i = 0; i < particles.length; i++) {\n      if (particles[i] !== this) {\n        let force = p5.Vector.sub(particles[i].pos, this.pos);\n        let distanceSq = force.magSq();\n        if (distanceSq < 40000) {\n          force.setMag(gravity);\n          this.acc.add(force);\n        }\n      }\n    }\n  }\n\n  repel(particles) {\n    for (let i = 0; i < particles.length; i++) {\n      if (particles[i] !== this) {\n        let force = p5.Vector.sub(this.pos, particles[i].pos);\n        let distanceSq = force.magSq();\n        if (distanceSq < 1000) {\n          force.setMag(repulsion);\n          this.acc.add(force);\n        }\n      }\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "Sd2nMpdLpJoTGhnTL",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-30T21:21:02.818Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "47d9c84b2c43602813d9055ff2e862e4",
        "public_id": "avalanche2023spring/ztmrhjh1kp0vgrtagpvu",
        "version": 1675113992,
        "version_id": "579cf0e78813af309b03ba1eccada2fc",
        "signature": "57e73855d2fb35f7728ca5a234fd69b4c1eaab74",
        "width": 648,
        "height": 803,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-30T21:26:32Z",
        "tags": [],
        "bytes": 95572,
        "type": "upload",
        "etag": "d0db0a531d96c947535e02f64f38cde7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675113992/avalanche2023spring/ztmrhjh1kp0vgrtagpvu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675113992/avalanche2023spring/ztmrhjh1kp0vgrtagpvu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T22:40:22.196Z" }
      }
    ],
    "title": "",
    "description": "Good luck and let me know if you have any questions!",
    "comments": []
  },
  {
    "_id": "SdJx5tfGdbFEFCvw9",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-22T10:35:32Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "77b84bcc650d14ef1c83cc3d96c79b15",
        "public_id": "avalanche2023spring/ins5b1ixosty6aek41fh",
        "version": 1677062157,
        "version_id": "c4fa468bb20c907ff58b5a4a85e47146",
        "signature": "4d8e3f76416d96f134b0056ff2d5805438b277ac",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-22T10:35:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 15057279,
        "type": "upload",
        "etag": "72cad48ac92ae2c2b9069b5772b3f09f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677062157/avalanche2023spring/ins5b1ixosty6aek41fh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677062157/avalanche2023spring/ins5b1ixosty6aek41fh.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677062157/avalanche2023spring/ins5b1ixosty6aek41fh.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2279",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "4689217",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 4697509,
        "duration": 25.642,
        "rotation": 0,
        "nb_frames": 768,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T02:49:14.951Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T00:25:53.2Z" }
      }
    ],
    "title": "",
    "description": "Was experimenting with ML libraries for MS2, so tried to play with them for this parameters sketch. Modification of Reshma's sketch where instead of Tweakpane sliders, the size and angle are controlled by the user's x and y position, as seen in the video. It glitches a little bit, but works overall. \n   \n[Reference](https://editor.p5js.org/bestesaylar/sketches/QW8GKt6s_).",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "So cool!",
        "created_at": { "$date": "2023-02-24T00:25:59.103Z" }
      }
    ],
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n\nlet poseNet;\nlet poses = [];\nlet video;\n\nlet rot = 0;\nconst noiseAmp = 50;\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  strokeWeight(2);\n  \n  video = createCapture(VIDEO);\n  video.size(width, height);\n  poseNet = ml5.poseNet(video, {multiplier:0.5}, modelReady);\n  poseNet.on('pose', function(results) {\n    poses = results;\n  });\n}\n\nfunction modelReady() {\n  select('#status').html('Model Loaded');\n}\n\nfunction draw() {\n  background(240);\n  \n  let imgsize = 80;\n  image(video, 0, 0, imgsize*1.2, imgsize);\n  \n  let sizeFactor;\n  let angleFactor;\n  let mapFactor;  \n  for (let i = 0; i < poses.length; i++) {\n    let skeleton = poses[i].skeleton;\n    for (let j = 0; j < skeleton.length; j++) {\n      mapFactor = skeleton[0][1]\n      sizeFactor = map(mapFactor.position.x,0,width,75,400)\n      angleFactor = map(mapFactor.position.y,0,width,1,4)\n    }\n  }\n  \n  noStroke();\n  fill(\"rgba(218,38,38,0.42)\");\n  //noFill();\n  drawSpiral(width / 2, height / 2, sizeFactor, angleFactor, 0);\n  let flag = 2\n  rot += flag;\n  if (rot >= 360) rot=0;\n   \n}\n\nfunction drawSpiral(x, y, radiusMax, angleFactor) {\n  push();\n  translate(x, y);\n  rotate(rot);\n  scale(1.2);\n  for (\n    let angle = 0, radius = 0;\n    radius < radiusMax;\n    angle += noise(radius) * angleFactor\n  ) {\n    ellipse(sin(angle) * radius, cos(angle) * radius, 5);\n    radius +=\n      noise(sin(angle) * radius * noiseAmp, cos(angle) * radius * noiseAmp) *\n      0.1;\n    if (angle > 360) angle = 0;\n  }\n  pop();\n}"
  },
  {
    "_id": "SjNh8nFYS3rDB2EpX",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-04T19:53:54.461Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "871647c9208ba17030ff43822b85e779",
        "public_id": "avalanche2023spring/h94mv7xqwe6g9mxqcepq",
        "version": 1683230048,
        "version_id": "b2a4b720b16b1b2af6e6d23b645aa5d9",
        "signature": "2effbc47407709e81baf6f7ff1583d6b206571dc",
        "width": 1432,
        "height": 612,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-04T19:54:08Z",
        "tags": [],
        "bytes": 82125,
        "type": "upload",
        "etag": "c729677ca0ab961fe8c3979a5d01f4b7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683230048/avalanche2023spring/h94mv7xqwe6g9mxqcepq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683230048/avalanche2023spring/h94mv7xqwe6g9mxqcepq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6f8aabbe4a26d48a0eb17351d559026b",
        "public_id": "avalanche2023spring/af0iabfl80txss9j7syv",
        "version": 1683230054,
        "version_id": "94979b2afaaec7ec9c838ede65a93431",
        "signature": "1753e0a2b0d61d93d22cdd6921633e3cd05453c8",
        "width": 1156,
        "height": 732,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-04T19:54:14Z",
        "tags": [],
        "bytes": 74124,
        "type": "upload",
        "etag": "7dc060bea212ce8b8ef1675cbac89b4d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683230054/avalanche2023spring/af0iabfl80txss9j7syv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683230054/avalanche2023spring/af0iabfl80txss9j7syv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "42a8eaaa7e14a90b714ca83734d1b479",
        "public_id": "avalanche2023spring/t9ozvq7yhqomcttpyjxg",
        "version": 1683230059,
        "version_id": "e1a2150b4cda2e17d8bcd1a9082a8a21",
        "signature": "f85de6d50527d5448b74d9213cca38008328f201",
        "width": 1470,
        "height": 502,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-04T19:54:19Z",
        "tags": [],
        "bytes": 85460,
        "type": "upload",
        "etag": "971fa2aa2ef90a2acb5c88cfb24fbbfd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683230059/avalanche2023spring/t9ozvq7yhqomcttpyjxg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683230059/avalanche2023spring/t9ozvq7yhqomcttpyjxg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T00:41:12.813Z" }
      }
    ],
    "title": "",
    "description": "I recreated the MoMA Bubble pots and pans!",
    "inspiration_name": "Bubble Pot",
    "inspiration_url": "https://store.moma.org/products/bubble-casserole-pot?currency=USD?variant=42994325455078&gclid=Cj0KCQjwr82iBhCuARIsAO0EAZzTByXF77BL4yV5ciSZjs7h-uvdBenFp4E5dCXQnezC3gUdTdbIUdAaArw3EALw_wcB",
    "comments": []
  },
  {
    "_id": "SkeWmtfNGyJveTXx4",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T04:01:36.501Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c42abce43db87da520deb89b3a711139",
        "public_id": "avalanche2023spring/ivz2wgwuinjsebog8aww",
        "version": 1677816105,
        "version_id": "90ce800039ef69ad19a7ba719e4298cb",
        "signature": "f86f7298aa0213acdc80314857ed3f63e9e4ac0c",
        "width": 1598,
        "height": 1596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T04:01:45Z",
        "tags": [],
        "bytes": 1695975,
        "type": "upload",
        "etag": "b8fdefa830e33f7aa0304f51203f425e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677816105/avalanche2023spring/ivz2wgwuinjsebog8aww.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677816105/avalanche2023spring/ivz2wgwuinjsebog8aww.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T04:11:46.304Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T04:14:35.91Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T04:14:40.024Z" }
      }
    ],
    "title": "",
    "description": "Extension of Challenge 1",
    "comments": []
  },
  {
    "_id": "SqLdXqXH9YdFTGKMu",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T20:11:00.595Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f326307f4caef642fbe46d616e999d7a",
        "public_id": "avalanche2023spring/h3xqaau3dhwz4nzb32wk",
        "version": 1675368754,
        "version_id": "14496e7b5d35808bf7df814c5e98a857",
        "signature": "e62cf7dc8975b84fa1775f08f35fe8e3b5c4a2a3",
        "width": 1970,
        "height": 2788,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T20:12:34Z",
        "tags": [],
        "bytes": 684848,
        "type": "upload",
        "etag": "1d7aa72df1a654100ca9e7e256dabe8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675368754/avalanche2023spring/h3xqaau3dhwz4nzb32wk.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675368754/avalanche2023spring/h3xqaau3dhwz4nzb32wk.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 1 SKETCH (2/4) : INSTRUCTION MANUAL",
    "inspiration_name": "HALF & HALF",
    "comments": []
  },
  {
    "_id": "SqtW9E2aZykshs2Mz",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-11T23:27:24.662Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2eda6be9a1f4eff5c1c2f7430e152665",
        "public_id": "avalanche2023spring/tlwqq87mg9xfco8mxxvt",
        "version": 1681255836,
        "version_id": "2b147e938955795fda74060b6d800ff4",
        "signature": "3688aa1516f4a9456c138551ceffdea2980183ec",
        "width": 797,
        "height": 879,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-11T23:30:36Z",
        "tags": [],
        "bytes": 39936,
        "type": "upload",
        "etag": "f172e8cc5bb12f411077370f7efadc65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681255836/avalanche2023spring/tlwqq87mg9xfco8mxxvt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681255836/avalanche2023spring/tlwqq87mg9xfco8mxxvt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ce223ab2361fb5db188daa74dd3aabe2",
        "public_id": "avalanche2023spring/fn9onjw1iluruh99htz6",
        "version": 1681255838,
        "version_id": "b612067bf15b13cbfc2d0cf95c79b2e8",
        "signature": "cd03e93f9b632b0af252d6c452f54c056992ffc7",
        "width": 797,
        "height": 879,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-11T23:30:38Z",
        "tags": [],
        "bytes": 36886,
        "type": "upload",
        "etag": "d2040a66385dcbffb32aeda8c5a867d5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681255838/avalanche2023spring/fn9onjw1iluruh99htz6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681255838/avalanche2023spring/fn9onjw1iluruh99htz6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a6bdf53e84f72799c0b8d3ede31afa63",
        "public_id": "avalanche2023spring/qeuxtuyihplcmarekd0q",
        "version": 1681255840,
        "version_id": "44d38e1c295f96cd359d1eb8d680fa11",
        "signature": "c07c42134da3f3c5e2403f9eac23583220fe24b3",
        "width": 797,
        "height": 879,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-11T23:30:40Z",
        "tags": [],
        "bytes": 35800,
        "type": "upload",
        "etag": "1768f87ebdba88f7d154587ce7911431",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681255840/avalanche2023spring/qeuxtuyihplcmarekd0q.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681255840/avalanche2023spring/qeuxtuyihplcmarekd0q.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T19:05:40.184Z" }
      }
    ],
    "title": "",
    "description": "I saw this on the course page where you can get randomly generated items for Dungeons & Dragons campaigns. I tried to make my own version to generate titles for mythical tomes.",
    "inspiration_name": "donjon D&D 5e Generator",
    "inspiration_url": "https://donjon.bin.sh/5e/random/#type=trinket",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\n  start: \"The $title of $subject | $people's $title of $subject \",\n  title: \"$type | $adjective $type\",\n  subject: \"$topic | $adjective $topic\",\n  type: \"Compendium | Tome | Articles | Apocrypha | Leaves | Scroll | Libram | Book | Scripture | Manuscripts | Parchments | Shards | Tablets | Slates | Codex\",\n  topic: \"Necromancy | Metallurgy | Alchemy | Malaise | Astronomy | Geomancy | Clairvoyance | Sorcery | Magic | Rites | Spells | Potions\",\n  adjective: \"Eternal | Demonic | Astral | Celestial | True | Abbhorent | Sacred | Accursed | Vile | Grandiose | Infernal |\",\n  people: \"Musosil | Thelmior | Agrandir | Hamir | Melchior | Spongebob | Mario | Squidward | Bill | Kevin | Greg | John\",\n};\n\nconst listBkgColor = [\n    \"#5F2E4C\",\n    \"#2E4C5F\",\n    \"#4C5F2E\",\n    \"#b32b2b\"\n    ]\n\nconst randBkg =  pick(listBkgColor);\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\ndocument.head.innerHTML = \n`\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Viaoda+Libre&display=swap\" rel=\"stylesheet\">\n`\n\ndocument.body.innerHTML = \n`\n<style>\n    body {\n        font-family: 'Viaoda Libre', cursive;\n        font-size: 48px;\n        margin: 10%; \n        line-height: 1.5; \n        text-transform: uppercase;\n        text-align: center;\n        word-spacing: .15rem;\n        background-color : ${randBkg}\n\n    }\n</style>\n    ${g.expand()} \n`",
    "comments": []
  },
  {
    "_id": "SqzecbhxGMbBcm3Pr",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T01:52:23.986Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b355dee309dd1d5d2dea574a7a223152",
        "public_id": "avalanche2023spring/fzfdygnj7jtrekz82vvo",
        "version": 1678413151,
        "version_id": "d323dfd120cf378ffdac724c7df7bdaa",
        "signature": "d016310bf337d91dfabdc425cefcb46dcdb1574b",
        "width": 1427,
        "height": 1427,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T01:52:31Z",
        "tags": [],
        "bytes": 62547,
        "type": "upload",
        "etag": "5a109b771521ee2819224de5e2dc471f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678413151/avalanche2023spring/fzfdygnj7jtrekz82vvo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678413151/avalanche2023spring/fzfdygnj7jtrekz82vvo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:25.248Z" }
      }
    ],
    "title": "",
    "description": "Built off of my first sketch to create a logo for CodeLab!",
    "comments": []
  },
  {
    "_id": "Srxda8qcp9tpnbEgx",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T06:52:20.075Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "24cbb4ad413631c5fb5424d0ad86269b",
        "public_id": "avalanche2023spring/lnugptfi5avitynsgogx",
        "version": 1683874569,
        "version_id": "367488383d3595b23970cdbb4161b17a",
        "signature": "ab66821fd7039359f8781c36ef213400dbee4aca",
        "width": 852,
        "height": 480,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-12T06:56:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 15569302,
        "type": "upload",
        "etag": "bb43518b91ef0bd9a88be5f575a3184b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683874569/avalanche2023spring/lnugptfi5avitynsgogx.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683874569/avalanche2023spring/lnugptfi5avitynsgogx.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683874569/avalanche2023spring/lnugptfi5avitynsgogx.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192080",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "3407377",
          "dar": "71:40",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 3602754,
        "duration": 34.533333,
        "rotation": 0,
        "nb_frames": 1036,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I took animations I made using turtles and p5.js and added them to my aftereffects animation! This became a part of my cyber jellyfish project for studio!",
    "comments": []
  },
  {
    "_id": "SuyZB2xE85c2yQGpR",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T20:28:53.924Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c8c2896ca71f86cd674dcb63e40eb856",
        "public_id": "avalanche2023spring/itcv7ctx0mcqkflbny7s",
        "version": 1679603636,
        "version_id": "b6c7a20909e5fb4480be8921b1134a94",
        "signature": "1960e6aae5b3fc46c4972de4b8289369dab0b528",
        "width": 834,
        "height": 769,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:33:56Z",
        "tags": [],
        "bytes": 904891,
        "type": "upload",
        "etag": "9d8c0f7aa779c40a632473acc1806f69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603636/avalanche2023spring/itcv7ctx0mcqkflbny7s.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603636/avalanche2023spring/itcv7ctx0mcqkflbny7s.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "43dd6525c63d85ddf74d020532a47a13",
        "public_id": "avalanche2023spring/xycbuehhp46vsh4bdvqp",
        "version": 1679603932,
        "version_id": "a12ba4da23db636559a0b15b04d04d1d",
        "signature": "48015f866e365ce4f43086fb43bff9651a0c089a",
        "width": 834,
        "height": 769,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:38:52Z",
        "tags": [],
        "bytes": 726666,
        "type": "upload",
        "etag": "d3a886aa92dc0dcbf2d5a67cfa132462",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603932/avalanche2023spring/xycbuehhp46vsh4bdvqp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603932/avalanche2023spring/xycbuehhp46vsh4bdvqp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4e8eda19f8002d973dd0a9c8291e46bb",
        "public_id": "avalanche2023spring/z2i3jc9srsamzdqa7bbh",
        "version": 1679603956,
        "version_id": "2e027b95ec17afef915f82c97685591c",
        "signature": "72d5c90ecb29d67cd727049f5f0f9a11e859f3cc",
        "width": 834,
        "height": 769,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:39:16Z",
        "tags": [],
        "bytes": 967830,
        "type": "upload",
        "etag": "a5ddcf1b8e76248dafde212bf395c840",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603956/avalanche2023spring/z2i3jc9srsamzdqa7bbh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603956/avalanche2023spring/z2i3jc9srsamzdqa7bbh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:34:17.978Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:39:53.549Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:39:58.609Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T16:19:15.826Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-03-31T14:33:39.594Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T14:33:41.196Z" }
      }
    ],
    "title": "",
    "description": "**Pair Challenge:** Manipulated Isha's pretty spiral SVGs on Figma",
    "comments": []
  },
  {
    "_id": "T4DnhtJRYJg9QS7mo",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T22:36:08.903Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "eec2f330f1aa8277ba906d54b7f74c56",
        "public_id": "avalanche2023spring/kl7jak8ofoifapuaa0ij",
        "version": 1675722996,
        "version_id": "b900120d7d10ac9e6fd1fb9fec534121",
        "signature": "99c2691a694b8ee3973a6b01ee88f76c498d7039",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-06T22:36:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 14772423,
        "type": "upload",
        "etag": "c9c6f50f2e7605907c71d3af25279c55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675722996/avalanche2023spring/kl7jak8ofoifapuaa0ij.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675722996/avalanche2023spring/kl7jak8ofoifapuaa0ij.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "5377440",
          "dar": "805:809",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 5384026,
        "duration": 21.95,
        "rotation": 0,
        "nb_frames": 1317,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T00:15:56.427Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T02:40:12.565Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T20:15:19.211Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T21:45:08.123Z" }
      }
    ],
    "title": "",
    "description": "Just some random squiggles using the Brownian Path as a reference",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\nlet segmentLength = 10;\nlet nextX, nextY, x, y;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // noLoop();\n  // frameRate(6);\n  noStroke();\n  noFill();\n  angleMode = DEGREES;\n  \n  x = random(0, width);\n  y = random (0, height);\n  \n}\n\nfunction draw() {\n  \n  background(40, 40, 40, 15);\n\n  stroke(random(100, 255), random(100,255), random(100, 255))\n  // drawBrownianPath(0 , 0, segmentLength, steps);\n  \n  nextX = x + random(-segmentLength, segmentLength);\n  nextY = y + random(-segmentLength, segmentLength);\n  \n  x2 = mouseX;\n  y2 = mouseY\n  \n  CPx = (nextX - x)/2;\n  CPy = (nextY - y)/2;\n  \n    // arc(x, y, 30, 30, 135, 0);\n    curve(CPx, CPy, x, y, x2, y2, nextX, nextY);\n      // arc(nextX, nextY, 60, 60, 0, 135);\n      // line(x, y, nextX, nextY);\n      x = x2;\n      y = y2;\n\n}",
    "comments": []
  },
  {
    "_id": "TD4Amc2fSDW4dG297",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T20:19:45.649Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "72a66386ee2b87f125498c4e70a3a6e3",
        "public_id": "avalanche2023spring/vwsto1fkmhtdsyvdynga",
        "version": 1676579488,
        "version_id": "cdb0c0d4ccfb537e2fa79255ede9759a",
        "signature": "8e6b44f8d12f974733e3dc9b6411a04b63a23165",
        "width": 1208,
        "height": 1182,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-16T20:31:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 19860040,
        "type": "upload",
        "etag": "1ad75feaf7a179ea435c79e53c7af5c0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676579488/avalanche2023spring/vwsto1fkmhtdsyvdynga.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676579488/avalanche2023spring/vwsto1fkmhtdsyvdynga.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676579488/avalanche2023spring/vwsto1fkmhtdsyvdynga.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "123964",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "18721163",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 21864263,
        "duration": 7.266667,
        "rotation": 0,
        "nb_frames": 495,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "be714252f7859f24cb78a0f03d32094e",
        "public_id": "avalanche2023spring/pqdwuxtr4yxjvcnow69u",
        "version": 1676579613,
        "version_id": "7e2ea72bc118b45e97f09c30a98e0cc7",
        "signature": "5bf88f795312edc6081f71316bdf6aed64568c82",
        "width": 1208,
        "height": 1182,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-16T20:33:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 19697327,
        "type": "upload",
        "etag": "ae4d0e94ab326289abfdd68049d5b4ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676579613/avalanche2023spring/pqdwuxtr4yxjvcnow69u.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676579613/avalanche2023spring/pqdwuxtr4yxjvcnow69u.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676579613/avalanche2023spring/pqdwuxtr4yxjvcnow69u.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "123313",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "16241358",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 18648356,
        "duration": 8.45,
        "rotation": 0,
        "nb_frames": 566,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T23:42:48.941Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:38:01.96Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:47:36.523Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:35.756Z" }
      }
    ],
    "title": "",
    "description": "**A basic Perlin noise based sketch on p5** Back to p5, a piece with very little technical complexity that I used to revise Noise on p5, but just loved the visual effect achieved with so little effort.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(600, 600);\n\n  strokeWeight(1);\n  noFill();\n}\n\nfunction draw() {\n  background(0);\n\n  for (let j = 1; j < 25; j++) {\n    for (let i = 1; i < 25; i++) {\n      let w =\n        noise(i * 0.1 * millis() * 0.0001, j * 0.1 * millis() * 0.0001) * 80;\n\n      stroke(0, 0, 255);\n      ellipse(i * 24, j * 24, w, w);\n\n      stroke(255, 0, 0);\n      ellipse(i * 24, j * 24, w - 10, w - 10);\n\n      stroke(0, 255, 0);\n      ellipse(i * 24, j * 24, w - 20, w - 20);\n\n      stroke(0, 0, 255);\n      ellipse(i * 24, j * 24, w - 30, w - 30);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "TPaQL3g4xtYeRwfye",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-30T19:12:47.904Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "907e7bfd913a71cad5a8e2eb741867d4",
        "public_id": "avalanche2023spring/p4i7xrn8rixxnvkygwcl",
        "version": 1675105995,
        "version_id": "e6349a168fb1badd173efcbea7eea297",
        "signature": "7f8e3baed789ca09c2596da579990f7e2fa23a39",
        "width": 2207,
        "height": 2327,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-30T19:13:15Z",
        "tags": [],
        "bytes": 2766557,
        "type": "upload",
        "etag": "e3038702485284cf0be59e1b94d5a61d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675105995/avalanche2023spring/p4i7xrn8rixxnvkygwcl.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675105995/avalanche2023spring/p4i7xrn8rixxnvkygwcl.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-01-30T22:31:19.149Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T00:23:30.286Z" }
      }
    ],
    "title": "",
    "description": "My sketch for Sahiti's instructions. Doubt this class will have a hard time guessing who's who",
    "comments": []
  },
  {
    "_id": "TPkdR7Qo96mufT2ou",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T07:56:54.334Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "176bd01c7065c48b404ed3347ca5f5ba",
        "public_id": "avalanche2023spring/gquihcxht1rlkpe2itch",
        "version": 1683273428,
        "version_id": "015eca77d654626c6a720d4e9ee78f2a",
        "signature": "6119a123558cff238800198a68131744fd90bf99",
        "width": 1592,
        "height": 976,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T07:57:08Z",
        "tags": [],
        "bytes": 1065211,
        "type": "upload",
        "etag": "574a0f9999652835554a5a956267425e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683273428/avalanche2023spring/gquihcxht1rlkpe2itch.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683273428/avalanche2023spring/gquihcxht1rlkpe2itch.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e24ed24e0be58394ffb6f5d974226004",
        "public_id": "avalanche2023spring/ltv5f7wzjzq7d2ajpbao",
        "version": 1683273433,
        "version_id": "fa8b8dca6d5335cd521ce2990601fc45",
        "signature": "9b02e557f711a44b50d86580409187164b2fcbe5",
        "width": 1588,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T07:57:13Z",
        "tags": [],
        "bytes": 950616,
        "type": "upload",
        "etag": "fea24905bd5d8e91bcb6570a61ef772a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683273433/avalanche2023spring/ltv5f7wzjzq7d2ajpbao.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683273433/avalanche2023spring/ltv5f7wzjzq7d2ajpbao.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:22.279Z" }
      }
    ],
    "title": "",
    "description": "My little foot soldiers for a castle that may or may not exist 👀 The rendering of the seemingly simple shapes took way longer than i expected and it was interesting to note how the boolean operators glitch.",
    "code": "//cylinder(h = 30, r = 8);\n\n\n$fn = 100;\n\n\n\n\n//disc\nmodule unit_brick (){\n    \n    //pillar\n  //  color(\"#F75C03\")\nunion() {\n  cylinder(h = 30, r = 8);\n  translate([0, 0, 40]) sphere(10);\n}\ntranslate([0, 0, 30]) //place translate outside the operator\ndifference() { //operator\n// color(\"#F896D8\")\n    cylinder (h=5, r=16, center = true); //action\n    cylinder (h=5, r=14, center = true);\n}\n\ntranslate([0, 0, 20]) //place translate outside the operator\ndifference() { //operator\n // color(\"#F896D8\")\n    cylinder (h=5, r=16, center = true); //action\n    cylinder (h=5, r=14, center = true);\n}\n\n\ntranslate([0, 0, 10]) //place translate outside the operator\ndifference() { //operator\n  //  color(\"#F896D8\")\n    cylinder (h=5, r=16, center = true); //action\n    cylinder (h=5, r=14, center = true);\n}\n}\n\nfor (x = [0:3], y = [0:3]) {\n    translate([x * 50, y * 50, 0]) {\n        unit_brick();\n    }\n}\n\n//cross\n//translate([0, 0, 60])\n//rotate ([0,90,90])\n\n//union() {\n   // cylinder (h=8, r=2, center = true);\n  //  rotate ([90,0,0]) cylinder (h=8, r=2, center=true);\n//}",
    "comments": []
  },
  {
    "_id": "TT5Tx4etXZHzLS6vt",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T16:13:51.99Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e5f63d4258c745071d10044e96e65d6c",
        "public_id": "avalanche2023spring/je1nxuvduqo0lgtjfv6b",
        "version": 1675268053,
        "version_id": "d0f65ae7db5772bcdd5a7636e817f23a",
        "signature": "8183546c312c800b645138c1a97633d4c25044eb",
        "width": 1800,
        "height": 1800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-01T16:14:13Z",
        "tags": [],
        "bytes": 352381,
        "type": "upload",
        "etag": "051cc23e0a0542302d68c238da71d0c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675268053/avalanche2023spring/je1nxuvduqo0lgtjfv6b.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675268053/avalanche2023spring/je1nxuvduqo0lgtjfv6b.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "THfyBvW9hRLZSLcRy",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T17:34:09.016Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:27:17.293Z" }
      }
    ],
    "title": "",
    "description": "Custom typeface from Brian's instructions :)",
    "comments": []
  },
  {
    "_id": "TYDFX3uekdK8bjGWS",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T19:28:20.066Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "96e8ea38ef0594a8ba926588473fef35",
        "public_id": "avalanche2023spring/zcd5hzcwhyqd1v8tjr51",
        "version": 1681414117,
        "version_id": "782c1f835ee6f9c34f7ee3321462353b",
        "signature": "90d33dca49e0df687275169bd2d1324397d4cbac",
        "width": 837,
        "height": 882,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T19:28:37Z",
        "tags": [],
        "bytes": 136058,
        "type": "upload",
        "etag": "e597960a9a4c90a0c4edda2203cb2167",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681414117/avalanche2023spring/zcd5hzcwhyqd1v8tjr51.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681414117/avalanche2023spring/zcd5hzcwhyqd1v8tjr51.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T19:34:48.924Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T20:56:27.849Z" }
      }
    ],
    "title": "",
    "description": "Shristi, Rama and I used Markov chains to write this \"bad\" story.",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "simply...compelling storytelling *applause*",
        "created_at": { "$date": "2023-04-13T20:56:50.549Z" }
      }
    ]
  },
  {
    "_id": "TYk6zN7Jg6gvK7aH7",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-21T07:06:20.433Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bc54d2af5daa06d9b10e079f80aff779",
        "public_id": "avalanche2023spring/piusmofn6xhy3qf27k8o",
        "version": 1679382407,
        "version_id": "b38da6e7dbd426c53855b127582d03d4",
        "signature": "89636dfe6d8b19ecd81ed16bf49f7fd1f8d24076",
        "width": 1006,
        "height": 1004,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-21T07:06:47Z",
        "tags": [],
        "bytes": 513126,
        "type": "upload",
        "etag": "0ad0fa309993090efa87ba6d85eed710",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679382407/avalanche2023spring/piusmofn6xhy3qf27k8o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679382407/avalanche2023spring/piusmofn6xhy3qf27k8o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7e01f0247c17412dc9e3e842a8f729c8",
        "public_id": "avalanche2023spring/gogwemgeet6qc65iw7ud",
        "version": 1679382460,
        "version_id": "f57a0899076179b6e4da723bac74add6",
        "signature": "aff0216d4b5efc7ca40caa27bbb20bd5afa3d7af",
        "width": 2880,
        "height": 1406,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-21T07:07:40Z",
        "tags": [],
        "bytes": 1174416,
        "type": "upload",
        "etag": "cd7c43ceb04b1fe827063c1a8583dfc5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679382460/avalanche2023spring/gogwemgeet6qc65iw7ud.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679382460/avalanche2023spring/gogwemgeet6qc65iw7ud.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T08:20:17.097Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T14:53:32.293Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T16:21:19.484Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:26.91Z" }
      }
    ],
    "title": "",
    "description": "**Paper.js Set Up on VS Code + Lines and Rects:** When you look closely, some lines seem to be bending",
    "code": "window.onload = function () {\n    // Get a reference to the canvas object\n    const canvas = document.getElementById(\"myCanvas\");\n    // Create an empty project and a view for the canvas:\n    paper.setup(canvas);\n    \n    const paths = [];\n    const rectPaths = [];\n    const rects = [];\n\n    for (let i = 0; i < 200; i++) {\n        // Create a Paper.js Path to draw a line into it:\n        paths.push(new paper.Path());\n        rects.push(new paper.Point(i*10, i*12+10), new paper.Size(500, i*20));\n        rectPaths.push(new paper.Path.Rectangle(rects[i]));\n        // Give the stroke a color\n        paths[i].strokeColor = \"#702099\";\n        rectPaths[i].strokeColor = \"#209907\";\n\n        const start = new paper.Point(i*2, i*2 +100);\n\n        // Move to start and draw a line from there\n        paths[i].moveTo(start);\n\n        // Note that the plus operator on Point objects does not work\n        // in JavaScript. Instead, we need to call the add() function:\n        paths[i].lineTo(start.add([i*12 - 200, i*2 - 300]));\n    }\n    \n    // Draw the view now:\n    paper.view.draw();\n};",
    "comments": []
  },
  {
    "_id": "Tcgfz7uitryZA3j8g",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": { "$date": "2023-02-03T06:31:05.137Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c15e22199a1d76007757c109d35b9e7a",
        "public_id": "avalanche2023spring/fsh4hgu1s2o52m4pju0p",
        "version": 1675405931,
        "version_id": "70c0c2ecd1335d3dbe087b6b22e9640a",
        "signature": "8fd1dd633e7a9076b5980f72664cacece43492ef",
        "width": 2752,
        "height": 1428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T06:32:11Z",
        "tags": [],
        "bytes": 707578,
        "type": "upload",
        "etag": "1500faf51ff6a918d38232fd7ef9d5cc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675405931/avalanche2023spring/fsh4hgu1s2o52m4pju0p.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675405931/avalanche2023spring/fsh4hgu1s2o52m4pju0p.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "92445810ec3123a82f3912c2e4d13a0d",
        "public_id": "avalanche2023spring/anh123fttnl9bbxi5ywf",
        "version": 1675405936,
        "version_id": "f355bc6cc2c8286813995305fb3eb73f",
        "signature": "c1c7c6e9999d4370e38aad08132d350de2dcf6a4",
        "width": 2758,
        "height": 1420,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T06:32:16Z",
        "tags": [],
        "bytes": 1186371,
        "type": "upload",
        "etag": "35f577e836a02f3beec526f28f5ec95b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675405936/avalanche2023spring/anh123fttnl9bbxi5ywf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675405936/avalanche2023spring/anh123fttnl9bbxi5ywf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "10a43ef0685c17849811e232d3ea2eb1",
        "public_id": "avalanche2023spring/aooia2lw0fnkqlaot0ty",
        "version": 1675405942,
        "version_id": "307ef2c5c1ef200319b10d1f471f907e",
        "signature": "99d7d4c91ee6b2c3d12b7a583eaf3acf88b46bbe",
        "width": 2754,
        "height": 1432,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T06:32:22Z",
        "tags": [],
        "bytes": 436756,
        "type": "upload",
        "etag": "7a76552144c77d90f5ccefec3486008c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675405942/avalanche2023spring/aooia2lw0fnkqlaot0ty.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675405942/avalanche2023spring/aooia2lw0fnkqlaot0ty.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:18:57.984Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T16:25:20.644Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "For these sketches, I was very inspired by Reshma’s instructions, and by those little colourful translucent circles I used as a kid (did anyone else use these…?)",
    "inspiration_url": "https://www.amazon.com/Hebayy-Transparent-Counting-Measures-Diameter/dp/B07PJNDG86?th=1",
    "comments": [],
    "inspiration_name": "Translucent Counting Chips"
  },
  {
    "_id": "TgcDhgqYCgcQFcFc8",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T06:40:42.557Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4f006c5504bd0550e472631fa1651fe7",
        "public_id": "avalanche2023spring/rntcaf8h8pmfi1ag0v8y",
        "version": 1683873665,
        "version_id": "e176c3c65c334f3a4797b4965808bf01",
        "signature": "430bef364ac1fefe44a14f2540e6f2f9a8b36bd6",
        "width": 1080,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-12T06:41:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 15041538,
        "type": "upload",
        "etag": "eeaee3d3a2dec3416b198f9fc120b432",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683873665/avalanche2023spring/rntcaf8h8pmfi1ag0v8y.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683873665/avalanche2023spring/rntcaf8h8pmfi1ag0v8y.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683873665/avalanche2023spring/rntcaf8h8pmfi1ag0v8y.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192244",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Constrained Baseline",
          "bit_rate": "9771651",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 9939889,
        "duration": 12.066667,
        "rotation": 0,
        "nb_frames": 362,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Made a wheel using turtles and continued in p5.js and played around with p5's 3D functions.",
    "comments": []
  },
  {
    "_id": "Tgs4anQiuEJdMFFpW",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T16:03:05.56Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a898d68b08d6ba59fe2f5d31618e76aa",
        "public_id": "avalanche2023spring/kgzfhqzrnlegkrygdif8",
        "version": 1683907444,
        "version_id": "4f9c2abe362fb07d2e2af012ec19c19c",
        "signature": "42ac9ded0c6accaa7d5ef4b79d522349cd5dc9a6",
        "width": 502,
        "height": 498,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T16:04:04Z",
        "tags": [],
        "bytes": 3729,
        "type": "upload",
        "etag": "fad1c6296ab60c13447b41f60eb5f412",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683907444/avalanche2023spring/kgzfhqzrnlegkrygdif8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683907444/avalanche2023spring/kgzfhqzrnlegkrygdif8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-09-12T18:46:40.348Z" }
      }
    ],
    "title": "",
    "description": "Was trying to animate 2 turtles!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\n// let tess = myTurtle;\n\nnames = [\"Tess\", \"Alia\"]\n\nlet tess;\n\n let alia;\n\n\nfunction setup() {\n  createCanvas(500, 500);\n  tess  = new Turtle();\n  alia = new Turtle();\n  stroke(255);\n  \n  // create tess and set some attributes\n// tess.color(\"hotpink\")\n// tess.pensize(5)\n}\n\nfunction draw() {\n  background(\"lightgreen\");\n  // Let tess draw an equilateral triangle\n   tess.penUp();\n  tess.moveTo(200, 200);\n   tess.penDown();\ntess.moveForward(80);\ntess.turnLeft(120);\ntess.moveForward(80);\ntess.turnLeft(120);\ntess.moveForward(80);\ntess.turnLeft(120);\n\n// turn tess around, and move her away from the origin\ntess.turnRight(180);\ntess.moveForward(80);\n\n// // make alia draw a square\nalia.moveForward(50)\nalia.turnLeft(90)\nalia.moveForward(50)\nalia.turnLeft(90)\nalia.moveForward(50)\nalia.turnLeft(90)\nalia.moveForward(50)\nalia.turnLeft(90)\n\nwn.exitonclick()\n  \n}",
    "comments": []
  },
  {
    "_id": "Tjv6d7WiqMnBqSAng",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": { "$date": "2023-04-28T02:56:56.182Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "69f176dad9cbddd3562fb933d45ec935",
        "public_id": "avalanche2023spring/w6hvut8f7tu76epejvqm",
        "version": 1682651013,
        "version_id": "44131f216ab717fba5017afbce488ca8",
        "signature": "6708bdd5745901b44f7207a6db42b638f2152703",
        "width": 2374,
        "height": 1128,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:03:33Z",
        "tags": [],
        "bytes": 90441,
        "type": "upload",
        "etag": "68152fb45f37b8772ec522df3c858a16",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682651013/avalanche2023spring/w6hvut8f7tu76epejvqm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682651013/avalanche2023spring/w6hvut8f7tu76epejvqm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2e309284ced4332d1f6c53c3cfcf9707",
        "public_id": "avalanche2023spring/m5cjt06jjqesltcfrisf",
        "version": 1682651016,
        "version_id": "49c4eba6186f3209c7fba0986994ded1",
        "signature": "1f5bead947f3547f1f3c63adbb6da01c6596a602",
        "width": 2012,
        "height": 418,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:03:36Z",
        "tags": [],
        "bytes": 125242,
        "type": "upload",
        "etag": "b09326647d1fc29d37041dcc614aa68c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682651016/avalanche2023spring/m5cjt06jjqesltcfrisf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682651016/avalanche2023spring/m5cjt06jjqesltcfrisf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "I was finally able to get another API to work - this one pulls data from the Alpha Vantage API and displays the latest CAD/USD exchange rate. I'd love to be able to add a drop-down menu so the user can view historical data from other dates",
    "comments": []
  },
  {
    "_id": "TjvxyJHGW4t6epNaL",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T23:42:53.213Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3bcad4c7ebb183049fb10b63d11e1212",
        "public_id": "avalanche2023spring/fshbiwzlpcax1h3witat",
        "version": 1676590978,
        "version_id": "d556d404c20fd270916a6d09dac184fc",
        "signature": "f3adb4303000c7dd59f473605cdc06fa56aadd3b",
        "width": 487,
        "height": 492,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T23:42:58Z",
        "tags": [],
        "bytes": 179737,
        "type": "upload",
        "etag": "b0a937ecd715d8069d2c55c70ba5bff4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676590978/avalanche2023spring/fshbiwzlpcax1h3witat.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676590978/avalanche2023spring/fshbiwzlpcax1h3witat.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:25.484Z" }
      }
    ],
    "title": "",
    "description": "I made a sketch for the pair challenge inspired by Keren's sketch. As her sketch was inspired by the grass example provided, I did the same",
    "inspiration_name": "Keren's grass inspired piece",
    "comments": []
  },
  {
    "_id": "ToKG2HgSgzpf52LeK",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T08:19:15.218Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "42a72185dbeed990efdb6671aa1c4737",
        "public_id": "avalanche2023spring/xgtocnmudy8jspwlbmvk",
        "version": 1677226772,
        "version_id": "8733a687ed876f8e5f89485af2add8d5",
        "signature": "3190d5655f2ea3cf5dd1605e1ab64d0e1b41cc01",
        "width": 370,
        "height": 370,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-24T08:19:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 1305896,
        "type": "upload",
        "etag": "4ecc996c7637aae187a6a2900418b873",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677226772/avalanche2023spring/xgtocnmudy8jspwlbmvk.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677226772/avalanche2023spring/xgtocnmudy8jspwlbmvk.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677226772/avalanche2023spring/xgtocnmudy8jspwlbmvk.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "627948",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 629347,
        "duration": 16.6,
        "rotation": 0,
        "nb_frames": 499,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T16:28:18.648Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T16:36:28.502Z" }
      }
    ],
    "title": "",
    "description": "Tried some pixel swapping to create a dramatic  effect.",
    "code": "//declaring variable\nlet img;\n\nfunction preload() {\n  img = loadImage('scene.jpg');\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  noSmooth();\n  img.resize(width, height);\n}\n\nfunction draw() {\n  img.loadPixels();\n  for (let i = 0; i < 100; i++) {\n    swapPixels();\n    //Calling written func\n  }\n  img.updatePixels();\n\n  image(img, 0, 0, width, height);\n}\n\n\nfunction swapPixels() {\n  const xone = random(img.width);\n  const yone = random(img.height);\n  const colorOne = img.get(xone, yone);\n  averageColOne = color(random(255), random(255), random(255));\n\n\n  const xTwo = random(img.width);\n  const yTwo = random(img.height);\n  const colorTwo = img.get(xTwo, yTwo);\n  averageColTwo = color(random(255), random(255), random(255));\n\n\n  img.set(xone, yone, colorTwo);\n  img.set(xTwo, yTwo, colorOne);\n}",
    "comments": []
  },
  {
    "_id": "TrbJF4zNZjBrTedsf",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-22T19:27:11.364Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "10d186606bfa20b275a9653ee5780351",
        "public_id": "avalanche2023spring/rnawok7wclmqjz0cehuz",
        "version": 1679513236,
        "version_id": "5efb21c2dc92c96d25feddcea7ef8268",
        "signature": "7c1ea4091f4ca6c7a6c29cf379a34437536b44ba",
        "width": 4000,
        "height": 3000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-22T19:27:16Z",
        "tags": [],
        "bytes": 3167407,
        "type": "upload",
        "etag": "a3a9e50726edd0bf5854a15045d1819b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679513236/avalanche2023spring/rnawok7wclmqjz0cehuz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679513236/avalanche2023spring/rnawok7wclmqjz0cehuz.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ce2e299d15abb7997ad3c105e1286d00",
        "public_id": "avalanche2023spring/g9xcht9f4plunrivrtvt",
        "version": 1679513238,
        "version_id": "a5df28fee8447da80f6bdc3364f0c2ba",
        "signature": "9abcfabf963a363e46618664e6659f77385408ac",
        "width": 3000,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-22T19:27:18Z",
        "tags": [],
        "bytes": 2436353,
        "type": "upload",
        "etag": "ef00a3ab4e0db2b0ef958a22f0b02f40",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679513238/avalanche2023spring/g9xcht9f4plunrivrtvt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679513238/avalanche2023spring/g9xcht9f4plunrivrtvt.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T17:00:08.549Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:26.477Z" }
      }
    ],
    "title": "",
    "description": "WIP. Started cutting the panels, but had to pause in the middle because the tech at the D12 shop had to leave. Will finish this up next week when the tech comes back (can't move it to the main laser lab because of an alignment issue). Will update when done.",
    "comments": []
  },
  {
    "_id": "TvKuSFSGJhsd8BA7R",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-27T14:58:33.804Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b2cb9c6e7e5ba1aea3414501a8e32797",
        "public_id": "avalanche2023spring/soobi6nd4cemcbv6ltan",
        "version": 1677509925,
        "version_id": "701ec379523ae44835d773a7759f9c81",
        "signature": "23843af584293c3c346b7814dd8abfecad8fbcb2",
        "width": 824,
        "height": 824,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-27T14:58:45Z",
        "tags": [],
        "bytes": 62674,
        "type": "upload",
        "etag": "c470b68325f322fb92bbf79ad943099c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677509925/avalanche2023spring/soobi6nd4cemcbv6ltan.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677509925/avalanche2023spring/soobi6nd4cemcbv6ltan.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Recreating the first challenge. Still want to figure out how to place similarly sized points closer together.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  noStroke();\n  ellipseMode(CENTER);\n  colorMode(HSB);\n  noLoop();\n}\n\nfunction draw() {\n  background(60,0,20);\n\n  let circlesNum = 100;\n  for (let i = 0; i < circlesNum; i++) {\n    let x = (random(width)+random(width)+random(width))/3;\n    let y = (random(height)+random(height)+random(height))/3;\n    let dMin = 5;\n    let dMax = 18;\n    let dSize = map(i,0,circlesNum,dMin,dMax);\n    let colH = map(dSize,dMin,dMax,30,285);\n\n    fill(colH,100,100);\n    ellipse(x, y, dSize);\n  }\n\n}",
    "comments": []
  },
  {
    "_id": "W57eYeATyDz32h7ir",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "created_at": { "$date": "2023-02-03T17:13:59.548Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b8b59c18016abaf5d90b605b38cdd0a4",
        "public_id": "avalanche2023spring/niftj9b21a8yfhamnozx",
        "version": 1675444509,
        "version_id": "164592fb663acc53c9abe283715cc394",
        "signature": "fd54d4989c38ab27bc6cfa91a9119d6f63f2f371",
        "width": 616,
        "height": 876,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T17:15:09Z",
        "tags": [],
        "bytes": 612352,
        "type": "upload",
        "etag": "d67e5864c0179ac5c49a9583ced7590f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675444509/avalanche2023spring/niftj9b21a8yfhamnozx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675444509/avalanche2023spring/niftj9b21a8yfhamnozx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T17:15:40.358Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T18:01:58.254Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "funny",
        "created_at": { "$date": "2023-02-03T18:01:59.03Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-03T18:01:59.724Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Followed my own instructions haha",
    "comments": [
      {
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "comment": "Hi!",
        "created_at": { "$date": "2023-02-03T18:02:20.492Z" }
      }
    ]
  },
  {
    "_id": "WAvWkL9zt38p5eGrL",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T06:12:31.57Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3b3b1fd5cc419235908cf7d4560057c3",
        "public_id": "avalanche2023spring/gormseq3h9itidlebrf0",
        "version": 1681366363,
        "version_id": "594a8fb5634583f5eaf905fbdb95daee",
        "signature": "1cf696d1456c9d456699c37d922b8d1fb81aedf9",
        "width": 1218,
        "height": 526,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T06:12:43Z",
        "tags": [],
        "bytes": 110086,
        "type": "upload",
        "etag": "79c4fbffd52d78bd5afe828251ea9d0d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681366363/avalanche2023spring/gormseq3h9itidlebrf0.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681366363/avalanche2023spring/gormseq3h9itidlebrf0.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d7cd7ddaf513b6b19b35691f28fbf149",
        "public_id": "avalanche2023spring/hlbpozkwk00sr9sqxxeg",
        "version": 1681366366,
        "version_id": "09bf84755bc3bdd88363482d9a78c7ce",
        "signature": "0dcb6747b22ca36ac75cd78aeb8ffae4e5611ab8",
        "width": 1180,
        "height": 416,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T06:12:46Z",
        "tags": [],
        "bytes": 86349,
        "type": "upload",
        "etag": "495c644c9aaa624227036fd055095802",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681366366/avalanche2023spring/hlbpozkwk00sr9sqxxeg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681366366/avalanche2023spring/hlbpozkwk00sr9sqxxeg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d9eb198ef4eef6ed15dbbae002adae94",
        "public_id": "avalanche2023spring/dlxknrok8tuhybrquk4h",
        "version": 1681366371,
        "version_id": "10b068cd1d218840026213f58391a2d0",
        "signature": "ce921480dcf2ab8e6344118f2e13fa8e097cc761",
        "width": 1218,
        "height": 542,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T06:12:51Z",
        "tags": [],
        "bytes": 108772,
        "type": "upload",
        "etag": "a6dc452c043bb4c38a3461e108fb5299",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681366371/avalanche2023spring/dlxknrok8tuhybrquk4h.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681366371/avalanche2023spring/dlxknrok8tuhybrquk4h.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T16:16:10.546Z" }
      }
    ],
    "title": "",
    "description": "Extending the Random bio generator using context-free grammar. Note to self: do not try this at 1 in the morning the nesting melts your brain. But I am wondering if the structure could be refined further? Right now, it still takes nearly as much work as templates and I want to use as few lines of code as possible. Suggestions are welcome!",
    "code": "// require /text/tracery.min.js //\n\nconst storyGrammar = {\n    story: [\"I am #phrase1# working at the intersection of #phrase2#. My practice explore themes of #phrase3#.\"],\n    phrase1: [\"#discipline.a# #adjective# #noun#\", \"#discipline# #noun#\", \"#adjective# #noun#\"],\n    phrase2:[\"#medium# and #medium#\"],\n    phrase3:[\"#theme# and #theme#\", \"#theme#, #theme#, and #theme#\"],\n    discipline: [\n        \"multidisciplinary\",\n        \"cross-disciplinary\",\n        \"interdiscilinary\",\n        \"transdisciplinary\",\n        \"innovation-driven\",\n        \"research-based\",\n        \"human-centered\",\n        \"award-winning\",\n        \"ambient\",\n        \"new media\"\n    ],\n    adjective: [ \"poetic\",\n    \"computational\",\n    \"technical\",\n    \"graphic\",\n    \"creative\",\n    \"experience\",\n    \"interaction\",\n    \"communication\",\n    \"UI/UX\",\n    \"product\"],\n    noun: [\n        \"storyteller\",\n        \"designer\",\n        \"director\",\n        \"coder\",\n        \"technologist\",\n        \"researcher\",\n        \"prototyper\",\n        \"artist\",\n        \"developer\",\n        \"problem solver\"\n      ],\n\n    medium: [ \"AR/VR/XR\",\n    \"Film\",\n    \"Multimedia art\",\n    \"the physical\",\n    \"UI/UX\",\n    \"analog structures\",\"electronics\",\n    \"web\",\n    \"machine learning and AI\",\n    \"digital technolgies\",\n    \"interactive installations\",\n    \"motion design\"],\n\n    theme: [\"social justice\",\n    \"feminism\",\n    \"journalism\",\n    \"political science\",\n    \"identities\",\n  \"social justice\",\n\"feminism\",\n\"journalism\",\n\"political science\",\n\"identities\",\n\"data-driven\",\n\"spatial immersions\",   \"data bias\",\n\"privacy\",\n\"trust and safety\",\n\"digital democracies\",\n\"media and culture\",\n\"data-driven\",\n\"gamification\",\n\"playful experiences\"\n    ]\n};\n  \n  function main() {\n    const grammar = tracery.createGrammar(storyGrammar);\n    const story = grammar.flatten(\"#story#\");\n    display(story);\n  }\n  \n  function display(...strings) {\n    const div = document.createElement(\"div\");\n    div.style = \"font-size: 30px; margin: 10%; line-height: 1.5; font-family: 'Roboto', sans-serif;\";\n    div.innerText = strings.join(\"\\n\");\n    document.body.append(div);\n  }\n  \n  // tracery doesn't load immediately, not sure why, so kludge it\n  setTimeout(main, 10);",
    "comments": []
  },
  {
    "_id": "WM4Z2dKKqTsDmZGqn",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T02:14:35.181Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "779ed82cfb74b4d1dffa5751ee450c1a",
        "public_id": "avalanche2023spring/lwqgu0tjmr3f4ovenngr",
        "version": 1677204886,
        "version_id": "58ad1c6da3b4cd9034be4a86d67217ff",
        "signature": "741f20be1f0b1fae959b689cc3fcb01f2487f959",
        "width": 991,
        "height": 1182,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T02:14:46Z",
        "tags": [],
        "bytes": 477876,
        "type": "upload",
        "etag": "e90ab8778c6ef88c7d8389aebd5ee930",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677204886/avalanche2023spring/lwqgu0tjmr3f4ovenngr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677204886/avalanche2023spring/lwqgu0tjmr3f4ovenngr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:51:15.115Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:55:14.099Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge based on Alex's code!",
    "comments": []
  },
  {
    "_id": "WNJKDnPHSAoyfFWG5",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-27T19:21:39.179Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b49f050979c90a0db29465fe0b05c570",
        "public_id": "avalanche2023spring/fxro1xnbmuvgbrdvll1u",
        "version": 1677525705,
        "version_id": "76cd6c05ca2a88847215dbe882c9592f",
        "signature": "1762b4e0554e0f40849a26095e1a3d6ca97d5ae7",
        "width": 702,
        "height": 706,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-27T19:21:45Z",
        "tags": [],
        "bytes": 74991,
        "type": "upload",
        "etag": "c526b0203319f2a79c58522767d7ac03",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677525705/avalanche2023spring/fxro1xnbmuvgbrdvll1u.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677525705/avalanche2023spring/fxro1xnbmuvgbrdvll1u.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My attempt at the first challenge",
    "comments": []
  },
  {
    "_id": "WP4fqHsY5MN6GcPm9",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": { "$date": "2023-02-10T01:09:57.75Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cc6149f5a68b87c4b7027e6d9e19895a",
        "public_id": "avalanche2023spring/hid7okbzsif6wwxvhjeh",
        "version": 1675991405,
        "version_id": "f6174a61a093bfcd85fc1b64655fa7f5",
        "signature": "a2e929e33acbfa13b4cc32d0c5f13258437425c8",
        "width": 370,
        "height": 374,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-10T01:10:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 3238459,
        "type": "upload",
        "etag": "2f8163e905c177e2920ec398f23be3db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675991405/avalanche2023spring/hid7okbzsif6wwxvhjeh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675991405/avalanche2023spring/hid7okbzsif6wwxvhjeh.mp4",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "658629",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 659782,
        "duration": 39.266667,
        "rotation": 0,
        "nb_frames": 1179,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T02:02:52.277Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T04:29:25.412Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T03:50:51.979Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:29.369Z" }
      }
    ],
    "lesson": "Random",
    "title": "",
    "description": "For the pair challenge, Ishan and I created a sketch that generates happy/sad faces while also introducing a glitch.",
    "comments": []
  },
  {
    "_id": "WQhgwQ6texJzYWaRL",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T23:44:48.446Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0e46f36236c872741fd4faeed8b62c5b",
        "public_id": "avalanche2023spring/mz997ueo9zwwmdkhewky",
        "version": 1676591156,
        "version_id": "826c9f8f5a24ef58019db9e702449407",
        "signature": "97f3b965b5e58ba33f6323c5be069605c2950542",
        "width": 464,
        "height": 364,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-16T23:45:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 1640412,
        "type": "upload",
        "etag": "4ef62341e220eb40c5b7c284f28e860d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676591156/avalanche2023spring/mz997ueo9zwwmdkhewky.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676591156/avalanche2023spring/mz997ueo9zwwmdkhewky.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676591156/avalanche2023spring/mz997ueo9zwwmdkhewky.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 22,
          "profile": "High",
          "bit_rate": "228199",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 229291,
        "duration": 57.233333,
        "rotation": 0,
        "nb_frames": 1718,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T00:57:26.559Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:37:49.226Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:47:21.179Z" }
      }
    ],
    "title": "",
    "description": "Tried a \"rangoli pattern\" with P5js.",
    "comments": []
  },
  {
    "_id": "WXKaCtqgDm6EaK8ZC",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T02:39:27.421Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6496c562e1653c19a9ade396a087612d",
        "public_id": "avalanche2023spring/uytkry9mcgka9kycwupz",
        "version": 1676601592,
        "version_id": "e938c76b4a023f8b4c3fc7b7d9b1820a",
        "signature": "8a053847912b30507f907550e8e2a6f71b71b17e",
        "width": 2481,
        "height": 3508,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T02:39:52Z",
        "tags": [],
        "bytes": 853024,
        "type": "upload",
        "etag": "38220294a8439210e82763ff270c259a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676601592/avalanche2023spring/uytkry9mcgka9kycwupz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676601592/avalanche2023spring/uytkry9mcgka9kycwupz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e30761cf96f81539277a4750ae392446",
        "public_id": "avalanche2023spring/miy4jvkluungcgo9uhu1",
        "version": 1676601595,
        "version_id": "46ff2dce98712c04e5239e72c22790a3",
        "signature": "62ba4515001be3ef5a57afe061fa30d2a905d061",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T02:39:55Z",
        "tags": [],
        "bytes": 197983,
        "type": "upload",
        "etag": "77f63fd95ffbf5b08562cc9c9b216416",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676601595/avalanche2023spring/miy4jvkluungcgo9uhu1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676601595/avalanche2023spring/miy4jvkluungcgo9uhu1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:37:00.123Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:00:36.445Z" }
      }
    ],
    "title": "",
    "description": "Here's my response to Brian's sketch (second image)! Thought about expanding his design language to also incorporate squares and triangles.",
    "code": "let canvasHeight = 1700;\nfunction setup() {\n  createCanvas(1000, canvasHeight);\n  noLoop();\n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(0);\n  let x = 60;\n  let squareY = 60;\n  let triY = canvasHeight - 60;\n  let triLength = 100;\n  noStroke();\n  blendMode(DIFFERENCE)\n  for (let i = 0; i < 12; i++) {\n    let h = noise(x+i)*30+00;\n    let s = noise(x+i)*100+20;\n    let l = noise(x+i)*100+10;\n    fill(h, s, l);\n    square(x+i*65, squareY, 100+(noise(x+i)*280));\n  }\n  \n  for (let i = 0; i < 24; i++) {\n    let h = noise(x+i)*30+00;\n    let s = noise(x+i)*100+20;\n    let l = noise(x+i)*100+10;\n    fill(h, s, l);\n    triangle(\n      x+i*35, \n      triY, \n      x + i * 35 + (triLength-noise(x+i)*40+20), \n      triY, \n      x + i * 35 + (triLength/2-noise(x+i)*40+20),\n      triY-180-noise(x+i)*280\n    );\n  }\n}",
    "comments": []
  },
  {
    "_id": "WbuLmFb6QjxeJmajd",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-16T02:38:47.916Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a030ae471d13f6da8cbb6b2eb39e74e9",
        "public_id": "avalanche2023spring/j8ichlacx73qhomfxjiu",
        "version": 1676515138,
        "version_id": "3c8473094b7e5dafafa5abcf53e9a440",
        "signature": "6f16753e627d4211ec9e31911ab438c3ee065b99",
        "width": 1379,
        "height": 1348,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T02:38:58Z",
        "tags": [],
        "bytes": 1745578,
        "type": "upload",
        "etag": "7e428a8761c6ae1df5ca7a022222a4fd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676515138/avalanche2023spring/j8ichlacx73qhomfxjiu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676515138/avalanche2023spring/j8ichlacx73qhomfxjiu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "PAIR LOVECHALLENGE",
    "comments": []
  },
  {
    "_id": "WctZijf9iCFcEN7MT",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T20:48:52.321Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8d16977a941857321c40a3ccf5bae1b4",
        "public_id": "avalanche2023spring/arpu7j20cmubeplj5co6",
        "version": 1675370946,
        "version_id": "afa3bf4ad4bba513335806dbbdf09ede",
        "signature": "9935ef21e48ff19967d6a3908c361611ed435b8b",
        "width": 1686,
        "height": 1770,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T20:49:06Z",
        "tags": [],
        "bytes": 136749,
        "type": "upload",
        "etag": "99df6ad8391c2691cee0cd3817ddde62",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675370946/avalanche2023spring/arpu7j20cmubeplj5co6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675370946/avalanche2023spring/arpu7j20cmubeplj5co6.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T21:33:04.969Z" }
      },
      {
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T23:53:38.981Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T00:24:25.097Z" }
      }
    ],
    "title": "",
    "description": "WEEK 1 SKETCH (3/4) : ALEX'S INSTRUCTIONS",
    "inspiration_name": "I AM SO CONFUSED",
    "comments": []
  },
  {
    "_id": "WmdCTTMmdmfTRsMrD",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-21T02:57:14.212Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "729925979a40e04ec61ff891c793616a",
        "public_id": "avalanche2023spring/tx9pzwfa9pdtuuothuc2",
        "version": 1676948242,
        "version_id": "06f38c6f03a80c3f819e149367f33ec7",
        "signature": "c542d13494ef2aba40bd03f12a6150039e4dadb3",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-21T02:57:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 2479354,
        "type": "upload",
        "etag": "9829e0edb3ffe6f2700bca50ff1b153c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676948242/avalanche2023spring/tx9pzwfa9pdtuuothuc2.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676948242/avalanche2023spring/tx9pzwfa9pdtuuothuc2.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676948242/avalanche2023spring/tx9pzwfa9pdtuuothuc2.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316882",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "1476879",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 1798370,
        "duration": 10.977633,
        "rotation": 0,
        "nb_frames": 329,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d5a9f2ecb08f417826d1e9bf7c3db735",
        "public_id": "avalanche2023spring/ph6yma1ap8sxxbu08aba",
        "version": 1676948248,
        "version_id": "dd39ec0d25b3479a6ffdfc54b099682d",
        "signature": "f0951181a5fbe1500db751b1bacfe22786d2b26e",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-21T02:57:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 5840571,
        "type": "upload",
        "etag": "f6ca283d5c0258f46580fff09aa52744",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676948248/avalanche2023spring/ph6yma1ap8sxxbu08aba.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676948248/avalanche2023spring/ph6yma1ap8sxxbu08aba.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676948248/avalanche2023spring/ph6yma1ap8sxxbu08aba.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317134",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "1749507",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 2070145,
        "duration": 22.5225,
        "rotation": 0,
        "nb_frames": 675,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:20.791Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T03:30:17.472Z" }
      }
    ],
    "title": "",
    "description": "Partly inspired by the cursor on the parameters site page. I came up with two iterations, but I still  couldn't quite make it do what I wanted it to before time was up.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet circles = [];\nconst numCircles = 8;\nconst radius = 40;\nconst spacing = 75;\nconst easing = 0.02;\n\nlet r = 0;\nlet theta = 0;\nlet inc = 0.02;\n\nlet colours = [\n  \"red\",\n  \"green\",\n  \"blue\",\n  \"yellow\",\n  \"purple\",\n  \"orange\",\n  \"cyan\",\n  \"magenta\",\n];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noStroke();\n  for (let i = 0; i < numCircles; i++) {\n    const x = mouseX + spacing * (i - 2);\n    const y = mouseY;\n    circles.push({ x, y });\n  }\n}\n\nfunction draw() {\n  background(230);\n  for (let i = 0; i < numCircles; i++) {\n    let circle = circles[i];\n    const dx = mouseX - circle.x;\n    const dy = mouseY - circle.y;\n    circle.x += dx * easing;\n    circle.y += dy * easing;\n\n    r = 50;\n    let a = r * cos(theta);\n    let b = r * sin(theta);\n    theta = theta += inc;\n\n    // let ex = noise(i * dx * 5) * 100;\n    // let ey = noise(i * dy * 5) * 100;\n    let ex = noise(i) * dx * 5;\n    let ey = noise(i) * dy * 5;\n\n    fill(colours[i]);\n    ellipse(circle.x + ex + a, circle.y + ey + b, radius);\n  }\n}",
    "comments": []
  },
  {
    "_id": "WpERg24pSifLMGCJk",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-14T05:54:10.935Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "X3r73GjsEg7e7ZeW2",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-05-10T00:31:12.261Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "03320dd493a4576d86c5fcd4ad019e0d",
        "public_id": "avalanche2023spring/l67sudlidpdv0wodisqm",
        "version": 1683678718,
        "version_id": "726389da815eb085c17c880f1470cc4f",
        "signature": "5241e12688db56f7cd9f4675850384c89e45c4a1",
        "width": 1776,
        "height": 1002,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-10T00:31:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 17058617,
        "type": "upload",
        "etag": "8385f11c1d4f758b8b49da70e8b22aec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683678718/avalanche2023spring/l67sudlidpdv0wodisqm.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683678718/avalanche2023spring/l67sudlidpdv0wodisqm.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683678718/avalanche2023spring/l67sudlidpdv0wodisqm.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125710",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "15226838",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 17723238,
        "duration": 7.7,
        "rotation": 0,
        "nb_frames": 521,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b7cbf08604086731101d91f977d8f4f6",
        "public_id": "avalanche2023spring/bztvg3dx6n3mphwumgem",
        "version": 1683678821,
        "version_id": "a60b5eb22618ee10e500e7f43178caee",
        "signature": "33ec2c6b29d19b763455c6d4ee1cd2720876017c",
        "width": 1776,
        "height": 1002,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-10T00:33:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 19121386,
        "type": "upload",
        "etag": "fe2f65401109bb4edc7fc1ebaff3569b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683678821/avalanche2023spring/bztvg3dx6n3mphwumgem.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683678821/avalanche2023spring/bztvg3dx6n3mphwumgem.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683678821/avalanche2023spring/bztvg3dx6n3mphwumgem.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125450",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "15549598",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 17821875,
        "duration": 8.583333,
        "rotation": 0,
        "nb_frames": 574,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "33043f17bf19e86780828e0e92ec287c",
        "public_id": "avalanche2023spring/sbvco6jed6me9myj0wk8",
        "version": 1683679074,
        "version_id": "91f868554407ffb883227b9cd0e468e7",
        "signature": "1d30301f7521332bf0d558f94091d8d6bb5512b6",
        "width": 1776,
        "height": 1002,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-10T00:37:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 19384509,
        "type": "upload",
        "etag": "5ba906f2b05149f54aabafccf5128ad8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683679074/avalanche2023spring/sbvco6jed6me9myj0wk8.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683679074/avalanche2023spring/sbvco6jed6me9myj0wk8.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683679074/avalanche2023spring/sbvco6jed6me9myj0wk8.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127813",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "16628693",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 19184669,
        "duration": 8.083333,
        "rotation": 0,
        "nb_frames": 544,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-10T02:25:16.794Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-11T16:42:39.063Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:08.332Z" }
      }
    ],
    "title": "",
    "description": "**Methodology Manipulative on Unity** Projects float around based on Perlin Noise, and placing the verbs in a specific order picks real world projects to explore.",
    "comments": []
  },
  {
    "_id": "X6wTkvfPcqLTJgkL2",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-27T22:30:21.342Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "10cc33176450acb35f36e5cd1357e1ac",
        "public_id": "avalanche2023spring/blyb6twicl7frikvnmaf",
        "version": 1679956233,
        "version_id": "be1de8ed20fa90d96f61d0adec327aaa",
        "signature": "df55d492c39769dc33006116c0df907c09bef49c",
        "width": 824,
        "height": 754,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-27T22:30:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 1931443,
        "type": "upload",
        "etag": "fbfcf2914f150e7db965217387bb223f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679956233/avalanche2023spring/blyb6twicl7frikvnmaf.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679956233/avalanche2023spring/blyb6twicl7frikvnmaf.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679956233/avalanche2023spring/blyb6twicl7frikvnmaf.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "1059267",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 1060722,
        "duration": 14.566667,
        "rotation": 0,
        "nb_frames": 438,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-28T03:26:12.516Z" }
      }
    ],
    "title": "",
    "description": "A small animation.",
    "code": "// // Create a circle shaped path at {x: 80, y: 50}\n// // with a radius of 30.\n// var circle = new Path.Circle(new Point(80, 50), 30);\n\n// // Pass a color name to the fillColor property, which is internally\n// // converted to a Color.\n// circle.fillColor = 'green';\n\nvar mousePoint = view.center;\n\nvar amount = 40;\n\n// function onMouseDown(event) {\n// \tconsole.log('You pressed the mouse!');\n\n// for (var i = 0; i < amount; i++) {\n// \tvar rect = new Rectangle([0, 0], [25, 25]);\n// \trect.center = mousePoint;\n// \tvar path = new Path.Rectangle(rect,1);\n// \tpath.fillColor = Color.random();\n// \tvar scale = (1 - i / amount) * 20;\n// \tpath.scale(scale);\n// }\n// }\n\nfunction onMouseDrag(event) {\n\t// The amount of drag events fired since the mouse\n\t// was pressed:\n\tconsole.log(event.count);\n\tfor (var i = 0; i < amount; i++) {\n\tvar rect = new Rectangle([0, 0], [25, 25]);\n\trect.center = mousePoint;\n\tvar path = new Path.Rectangle(rect,1);\n\tpath.fillColor = Color.random();\n\tvar scale = (1 - i / amount) * 20;\n\tpath.scale(scale);\n}\n}",
    "comments": []
  },
  {
    "_id": "XDxa3nbQfHva84kye",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T20:34:47.513Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f2d3d7d5ee407a2d90668e6c888f56e5",
        "public_id": "avalanche2023spring/ubz0flrc33x7epqbn92q",
        "version": 1679603756,
        "version_id": "3285530e7d0f7c2c915de9d8405f63a6",
        "signature": "8045e11f853c44b8ffa53a76f2432fe6b6c41d0b",
        "width": 996,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:35:56Z",
        "tags": [],
        "bytes": 189623,
        "type": "upload",
        "etag": "08e9475444ef9e515653c730dcc06a38",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603756/avalanche2023spring/ubz0flrc33x7epqbn92q.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603756/avalanche2023spring/ubz0flrc33x7epqbn92q.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5ff6cdc125a98777b892de7108452f57",
        "public_id": "avalanche2023spring/pdwsseelksb2gzt5pl2v",
        "version": 1679603762,
        "version_id": "4484e261c7ef0755ee2b7a3a0bdf2975",
        "signature": "9b71c6ad4b6f52781a38ba0c83a96d31e6ae852c",
        "width": 1004,
        "height": 1002,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T20:36:02Z",
        "tags": [],
        "bytes": 271170,
        "type": "upload",
        "etag": "770b10850c71c56dd8efb1162b4b092b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679603762/avalanche2023spring/pdwsseelksb2gzt5pl2v.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679603762/avalanche2023spring/pdwsseelksb2gzt5pl2v.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "64973ce6167357ca396f04aefde281bb",
        "public_id": "avalanche2023spring/onixpdttb1qqsedxmtvv",
        "version": 1679604737,
        "version_id": "c0929b095e3eb9b148efa9ea64991375",
        "signature": "86ad6445e11333760cd438fcc38a222e8daf6a02",
        "width": 1080,
        "height": 1920,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-23T20:52:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 17135302,
        "type": "upload",
        "etag": "4d26a36757be4881f77a99a888d20b49",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679604737/avalanche2023spring/onixpdttb1qqsedxmtvv.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679604737/avalanche2023spring/onixpdttb1qqsedxmtvv.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679604737/avalanche2023spring/onixpdttb1qqsedxmtvv.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "109428",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "3664718",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 3782001,
        "duration": 36.245,
        "rotation": 0,
        "nb_frames": 1087,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T21:01:31.013Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T21:21:20.708Z" }
      }
    ],
    "title": "",
    "description": "using paperscript's keyboard interactions tutorial to make a simple drawing tool. made a little game out of it by asking my clearly unamused brother to try and draw a few prompts without literally stepping out of line.",
    "code": "var position = new Point(250, 350);\nvar path = new Path();\npath.strokeColor = '#FEFEFF';\npath.strokeWidth = 8;\npath.add(position);\n\nfunction onKeyDown(event) {\n\tif(event.key == 'a') {\n\t\tposition.x -= step;\n\t}\n\n\tif(event.key == 'd') {\n\t\tposition.x += step;\n\t}\n\n\tif(event.key == 'w') {\n\t\tposition.y -= step;\n\t}\n\n\tif(event.key == 's') {\n\t\tposition.y += step;\n\t}\n\tpath.add(position);\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love the second drawing! ",
        "created_at": { "$date": "2023-03-23T21:02:58.099Z" }
      },
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "that one's mine haha. gonna tell my brother i won XD",
        "created_at": { "$date": "2023-03-23T21:13:06.464Z" }
      }
    ]
  },
  {
    "_id": "XPc4pEJda3q8NmBiY",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T07:14:18.938Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "00518e96378e56e3c97d56da289674f0",
        "public_id": "avalanche2023spring/bt8uk0tmixzhllcqe0xm",
        "version": 1683875670,
        "version_id": "f28c733774b28422208079f846ce2d3c",
        "signature": "904828248fe177ff7f29edf0d227f583c345a878",
        "width": 1350,
        "height": 848,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T07:14:30Z",
        "tags": [],
        "bytes": 867100,
        "type": "upload",
        "etag": "18bb88c316f78373432c7fe119f7dd62",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683875670/avalanche2023spring/bt8uk0tmixzhllcqe0xm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683875670/avalanche2023spring/bt8uk0tmixzhllcqe0xm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:16:44.114Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge: Rama and I made this",
    "comments": []
  },
  {
    "_id": "XR7RfYMcDmnvcvSNG",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T02:08:57.452Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7541077566d6bec3a3f00d9e5071c093",
        "public_id": "avalanche2023spring/bbyzcqgz5pwbqag8nlzt",
        "version": 1682042950,
        "version_id": "aec4b55770a710d4bcab580c446b1e90",
        "signature": "f2a6962f4c8bb7ece208821ff1abe8e196d07903",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T02:09:10Z",
        "tags": [],
        "bytes": 177750,
        "type": "upload",
        "etag": "690210e4be6666409d5732e8dec829d1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682042950/avalanche2023spring/bbyzcqgz5pwbqag8nlzt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682042950/avalanche2023spring/bbyzcqgz5pwbqag8nlzt.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "866f1a53489cc6ae202d585d5097b1eb",
        "public_id": "avalanche2023spring/zefvbanrejskjzr3pejv",
        "version": 1682042958,
        "version_id": "29a01cf0f7358c7d58467874ecc7b6cf",
        "signature": "7fb5fb8d67b6c6ffe98be3ec2a12aff0c3b6093d",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T02:09:18Z",
        "tags": [],
        "bytes": 201832,
        "type": "upload",
        "etag": "4fdfc59293f3234d0a591980c4c8aa1e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682042958/avalanche2023spring/zefvbanrejskjzr3pejv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682042958/avalanche2023spring/zefvbanrejskjzr3pejv.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "67c840525ab09af3f4a5f65e9284dbcf",
        "public_id": "avalanche2023spring/pzuyu7dbohreo4jhacn4",
        "version": 1682042970,
        "version_id": "e6ed978c8ddcc77751844b66f06849a2",
        "signature": "782fb4d2e09ab492fd1209ecea9aa5b16c23259f",
        "width": 1382,
        "height": 1382,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T02:09:30Z",
        "tags": [],
        "bytes": 4366039,
        "type": "upload",
        "etag": "86b75fcf4a7479d38a9bd082c4422bee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682042970/avalanche2023spring/pzuyu7dbohreo4jhacn4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682042970/avalanche2023spring/pzuyu7dbohreo4jhacn4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:43:54.087Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:02:09.591Z" }
      }
    ],
    "title": "",
    "description": "I tried using Hugging Face to recreate the treasure map challenge with specific prompt related to styles and elements. I want to try the same with Midjourney to see the difference and range of output.",
    "comments": []
  },
  {
    "_id": "XRpq7gZqis24GWTmj",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T23:43:59.04Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c4dfbb9a8403b58eb8332df16143a156",
        "public_id": "avalanche2023spring/gycox4fpr2wbmecj3ew5",
        "version": 1676591059,
        "version_id": "bbbc508a009c58430cf28e37896b89f7",
        "signature": "1cc113a9e9b62c137c0b1af3846e6b0114328269",
        "width": 1598,
        "height": 1606,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T23:44:19Z",
        "tags": [],
        "bytes": 2778408,
        "type": "upload",
        "etag": "42562b39264176ab8a110c2002dafbb0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676591059/avalanche2023spring/gycox4fpr2wbmecj3ew5.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676591059/avalanche2023spring/gycox4fpr2wbmecj3ew5.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T23:44:38.229Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T00:57:36.629Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:37:52.975Z" }
      }
    ],
    "title": "",
    "description": "Wanted to play around with noise fields!",
    "comments": []
  },
  {
    "_id": "XSBnKznwNSTCmuALX",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-08T05:42:46.074Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e616bd7e76e28b392e035e0fc675a141",
        "public_id": "avalanche2023spring/wxaakmwkqdqhbnwglh6d",
        "version": 1678254200,
        "version_id": "d6681d060ad2a13abf3aa5da1b157c0a",
        "signature": "fa0763cfd10f1716826d73d8780508d533ab728a",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-08T05:43:20Z",
        "tags": [],
        "bytes": 38301,
        "type": "upload",
        "etag": "db24994e79440f545e9babbfd2813bbd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678254200/avalanche2023spring/wxaakmwkqdqhbnwglh6d.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678254200/avalanche2023spring/wxaakmwkqdqhbnwglh6d.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "16f64cc31c8522e2983c57e536f795f6",
        "public_id": "avalanche2023spring/cbdbb997gapin3wzvcfg",
        "version": 1678254204,
        "version_id": "592b7be8b2faa920f3f0b40b88743b58",
        "signature": "3951c7386b5b4631ca7199ec3536e5ea4e696fcf",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-08T05:43:24Z",
        "tags": [],
        "bytes": 41883,
        "type": "upload",
        "etag": "3c1ae370679e0d18c2b781473b1567ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678254204/avalanche2023spring/cbdbb997gapin3wzvcfg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678254204/avalanche2023spring/cbdbb997gapin3wzvcfg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0a82103c3ddb6bfcaf53f426ce28cd4c",
        "public_id": "avalanche2023spring/qtov7i7tqpmrw6y7mc9l",
        "version": 1678254615,
        "version_id": "6471089025c0b4c77efeaab07464c922",
        "signature": "8c461dccc43203c39828dcd9c4ce29535a285ca3",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-08T05:50:15Z",
        "tags": [],
        "bytes": 21112,
        "type": "upload",
        "etag": "b90123207f96ebd8dc23b2b4d3949bb1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678254615/avalanche2023spring/qtov7i7tqpmrw6y7mc9l.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678254615/avalanche2023spring/qtov7i7tqpmrw6y7mc9l.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T07:51:21.185Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:25.701Z" }
      }
    ],
    "title": "",
    "description": "Think I understand how Photoshop blending modes work now. Using some sketches from noise week.",
    "inspiration_name": "Me",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n/* exported preload setup draw*/\nlet worldImage;\n\nfunction preload() {\n  worldImage = loadImage(\"grad.jpg\");\n}\n\nfunction setup() {\n  createCanvas(500, 500);\n  pixelDensity(1);\n}\n\nfunction draw() {\n  background(0);\n\n  worldImage.loadPixels();\n\n  for (let y = 0; y < worldImage.height; y++) {\n    for (let x = 0; x < worldImage.width; x++) {\n      const in_color = worldImage.get(x, y);\n\n      const r = red(in_color);\n      const g = green(in_color);\n       const b = blue(in_color);\n\n      let out_color;\n      if (r < 120) {\n        out_color = color(\"pink\");\n      } else if (g < 200 && b >130) {\n        out_color = color(\"teal\");\n      }\n      // else{\n      //   out_color = color(\"#34E3EB\");\n      // }\n\n      worldImage.set(x, y, out_color);\n    }\n  }\n\n  worldImage.updatePixels();\n\n  noSmooth();\n  image(worldImage, 0, 0, width, height);\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "Xa8dtG5X6tiY7JzMH",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-29T21:25:23.175Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a84582feec3138f23251e5d4949fe75a",
        "public_id": "avalanche2023spring/f05jns6ag1tpoixafozl",
        "version": 1680125133,
        "version_id": "790d537fb299c4641a56d8d8f8284539",
        "signature": "446a857534073db556aaf88b91ce5594ed9b7c0d",
        "width": 818,
        "height": 816,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-29T21:25:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 1709617,
        "type": "upload",
        "etag": "5604fb9a28ef5ffd92e50ab8c6d5a1cb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680125133/avalanche2023spring/f05jns6ag1tpoixafozl.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680125133/avalanche2023spring/f05jns6ag1tpoixafozl.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680125133/avalanche2023spring/f05jns6ag1tpoixafozl.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317030",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "543195",
          "dar": "409:408",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 867532,
        "duration": 15.715708,
        "rotation": 0,
        "nb_frames": 471,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:30.23Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:12:23.738Z" }
      }
    ],
    "title": "",
    "description": "Endlessly fascinated with Alexander Chen's music visualisations. Tried to mimic one of them, although it's obviously much less sophisticated. The ellipse moves randomly with noise().",
    "inspiration_name": "Alexander Chen",
    "inspiration_url": "https://www.chenalexander.com/Bach",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n//partly adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/synth.js\n\nlet canvasWidth = 500;\nlet canvasHeight = 500;\n\nlet ellipse0 = {\n    xoffset: 0,\n    yoffset: 0,\n    xPos: 0,\n    yPos: 0,\n    esize: 20\n};\nlet amplitude;\nlet vibration = 25;\nlet string = [\n    {deceleration: 0, stringX: canvasWidth/2 - 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n    {deceleration: 0, stringX: canvasWidth/2 - 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2, stringYoffset: 50, bezierYoffset: 100, note: \"B4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n  ];\n\nconst synth = new Tone.Synth(\n  {\n    oscillator: {\n      type: \"sine\",\n    },\n    envelope: {\n      attack: 0.1,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 1,\n    },\n  }\n);\nsynth.toMaster();\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(250, 50, 85);\n  \n  ellipse0.xPos = map(noise(ellipse0.xoffset), 0, 1, 0, width);\n  ellipse0.yPos = map(noise(ellipse0.yoffset), 0, 1, 0, height);\n  \n  fill(0, 0, 100);\n  noStroke();\n  ellipse(ellipse0.xPos, ellipse0.yPos, ellipse0.esize);\n  \n  ellipse0.xoffset+=0.01;\n  ellipse0.yoffset+=0.001;\n  \n  for (let i=0; i<string.length; i++) {\n      \n    amplitude = (vibration/2) * sin(TWO_PI * (millis()/1000)) * string[i].deceleration;\n    \n    noFill();\n    stroke(0, 0, 100);\n    strokeWeight(1.75);\n    bezier(\n      string[i].stringX, string[i].stringYoffset,\n      amplitude + string[i].stringX, string[i].stringYoffset + string[i].bezierYoffset, \n      amplitude + string[i].stringX, height - string[i].stringYoffset - string[i].bezierYoffset, \n      string[i].stringX, height - string[i].stringYoffset\n    );\n    \n    string[i].deceleration -= 0.01;\n    if (string[i].deceleration < 0) {\n      string[i].deceleration = 0;\n    }\n    \n    if (\n        ellipse0.xPos > string[i].stringX - 5 && \n        ellipse0.xPos < string[i].stringX + 5 && \n        ellipse0.yPos > string[i].stringYoffset && \n        ellipse0.yPos < height - string[i].stringYoffset\n    ) {\n      synth.triggerAttackRelease(string[i].note, \"4n\");\n      string[i].deceleration = 1;\n    }\n      \n  }\n  \n};",
    "comments": []
  },
  {
    "_id": "XwoLSwJbnM6rJjmLd",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": { "$date": "2023-04-28T03:58:28.789Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "19a7f1ab42ab921fc85e0c7293a574ad",
        "public_id": "avalanche2023spring/ecjferxqox0mseolz3xp",
        "version": 1682654336,
        "version_id": "1677bfa675df73d67a1155a106b7d5de",
        "signature": "ecd5b9fa833b83d984ba0038c2c471d9c42141ea",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:58:56Z",
        "tags": [],
        "bytes": 1530277,
        "type": "upload",
        "etag": "74c29d402a962ad99d68f28791a40167",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682654336/avalanche2023spring/ecjferxqox0mseolz3xp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682654336/avalanche2023spring/ecjferxqox0mseolz3xp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e870b518a3275327b9729b68f159e4e0",
        "public_id": "avalanche2023spring/kaycrvqsby5ttovsd5fb",
        "version": 1682654359,
        "version_id": "4dac9435d42cb0e482b2fba1be5afb66",
        "signature": "118c1f0dd301ae31ce3274030cfd1040ab360cbd",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T03:59:19Z",
        "tags": [],
        "bytes": 1963849,
        "type": "upload",
        "etag": "5f5eb33e65bcf6dd0ac0e830534ae893",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682654359/avalanche2023spring/kaycrvqsby5ttovsd5fb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682654359/avalanche2023spring/kaycrvqsby5ttovsd5fb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "33420f355ad11b91f986a876ff2ce73a",
        "public_id": "avalanche2023spring/phvqjor1se8imw92gsvh",
        "version": 1682654393,
        "version_id": "951c6c192f4cf477dcc75fa30c5124ee",
        "signature": "58525906c1136fe380a12796ee02d198546ccbb7",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-28T03:59:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 5554477,
        "type": "upload",
        "etag": "0fd6423a1d86dd88be8c3ffbfe612c81",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682654393/avalanche2023spring/phvqjor1se8imw92gsvh.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682654393/avalanche2023spring/phvqjor1se8imw92gsvh.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682654393/avalanche2023spring/phvqjor1se8imw92gsvh.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "7403372",
          "dar": "16:9",
          "time_base": "1/10240"
        },
        "frame_rate": 20,
        "bit_rate": 7405969,
        "duration": 6,
        "rotation": 0,
        "nb_frames": 120,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T13:22:03.041Z" }
      }
    ],
    "lesson": "Creative AI",
    "title": "",
    "description": "I used dall-e to generate an hdri background for my 3D illustration and animation (last image). I wanted very specific images with specific colours so I spent a lot of time on generating these images for my project!",
    "comments": []
  },
  {
    "_id": "Xx8XZ6TcwsWtCevi7",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T13:04:40.373Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "53704348a1fb09c8dd40597fca4c4aef",
        "public_id": "avalanche2023spring/myhygs31azxfzoje1zoz",
        "version": 1680267962,
        "version_id": "3f7ba103c1f569b91dd958dedd137aaf",
        "signature": "163768ef08b85536e6c03a0f61f5542cc90fddaa",
        "width": 756,
        "height": 812,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T13:06:02Z",
        "tags": [],
        "bytes": 256512,
        "type": "upload",
        "etag": "05985f397293abe3f2143e91b68edd1a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680267962/avalanche2023spring/myhygs31azxfzoje1zoz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680267962/avalanche2023spring/myhygs31azxfzoje1zoz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 8 (2/4): Had to fix it as I forgot the half or quarter notes but i just kept these as halfnotes This is the song from Maleficent",
    "comments": []
  },
  {
    "_id": "Y32Rptj7bwpiTEYGC",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-22T04:51:36.191Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5e1310daa5a5c95e7bf9be64ce52eada",
        "public_id": "avalanche2023spring/kgygpy3a3tcphr0dsiyz",
        "version": 1677041552,
        "version_id": "ab61a169aeecc954c5f3b6e63f77be48",
        "signature": "1d8f4a6355b37edf40d5eff9794776b26d94b7d0",
        "width": 1228,
        "height": 958,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-22T04:52:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 3865734,
        "type": "upload",
        "etag": "fb697cb58597bb3299c3bcc276aa2b2b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677041552/avalanche2023spring/kgygpy3a3tcphr0dsiyz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677041552/avalanche2023spring/kgygpy3a3tcphr0dsiyz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677041552/avalanche2023spring/kgygpy3a3tcphr0dsiyz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2033965",
          "dar": "614:479",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2073242,
        "duration": 14.916667,
        "rotation": 0,
        "nb_frames": 893,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3f90191075584702ec08057ae5193d4c",
        "public_id": "avalanche2023spring/wpllchglv0vnasfm4ake",
        "version": 1677041557,
        "version_id": "067d5d49e8ad36de0ea8735b3016b2fc",
        "signature": "b171ed5a054bef31b3b2249a84dcf966523f0a21",
        "width": 1726,
        "height": 804,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-22T04:52:37Z",
        "tags": [],
        "bytes": 216581,
        "type": "upload",
        "etag": "130bd3872360c988c05087af851468cf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677041557/avalanche2023spring/wpllchglv0vnasfm4ake.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677041557/avalanche2023spring/wpllchglv0vnasfm4ake.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T10:26:36.85Z" }
      }
    ],
    "title": "",
    "description": "Made a grid generator based on parameters HTML dom elements. Wasn't able to get the updateCanvasSize to work in time, it throws this error",
    "comments": []
  },
  {
    "_id": "Y9tH3doeQBfiLtqwo",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": { "$date": "2023-04-28T15:05:48.611Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "19c5c3ae83c26afedab935143a3b0d95",
        "public_id": "avalanche2023spring/teuom8xwjlgjlinnykn0",
        "version": 1682694358,
        "version_id": "74bdb7c71587fc3358f6227e4911c1b2",
        "signature": "1248e1d7c98811d6771592026e106349e8ea49b6",
        "width": 1757,
        "height": 842,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T15:05:58Z",
        "tags": [],
        "bytes": 142736,
        "type": "upload",
        "etag": "dde963654e952e16bb0082b62d03d838",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682694358/avalanche2023spring/teuom8xwjlgjlinnykn0.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682694358/avalanche2023spring/teuom8xwjlgjlinnykn0.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "tried writing a small code for weather API, seems like no luck.",
    "comments": []
  },
  {
    "_id": "YFy88kWksx9aEkAEL",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T23:19:54.42Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "67ee47af19fdb0796304646768245cae",
        "public_id": "avalanche2023spring/eiluempzxrvhp2wgdbqf",
        "version": 1678404036,
        "version_id": "3fed844648e59478736b988177a2ce99",
        "signature": "f15df1a01f3eceed3680bc7035401e1d71033b52",
        "width": 1818,
        "height": 1262,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-09T23:20:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 17274546,
        "type": "upload",
        "etag": "457df713f4351a99734a33f3072e90f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678404036/avalanche2023spring/eiluempzxrvhp2wgdbqf.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678404036/avalanche2023spring/eiluempzxrvhp2wgdbqf.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678404036/avalanche2023spring/eiluempzxrvhp2wgdbqf.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "131552",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "18448059",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 18591855,
        "duration": 7.433167,
        "rotation": 0,
        "nb_frames": 446,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8a2b2eb9a6698f04bd8fde2840df1ba0",
        "public_id": "avalanche2023spring/mwemyp2yzhjdzttn6ikd",
        "version": 1678404261,
        "version_id": "33c12ea5a603aea961c3c488165ab321",
        "signature": "f149c15ea0e192bbff4662e1550d478a30eac460",
        "width": 2470,
        "height": 1366,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-09T23:24:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 9030325,
        "type": "upload",
        "etag": "e85f3f1e27b97715ea985590bda463c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678404261/avalanche2023spring/mwemyp2yzhjdzttn6ikd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678404261/avalanche2023spring/mwemyp2yzhjdzttn6ikd.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678404261/avalanche2023spring/mwemyp2yzhjdzttn6ikd.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "131836",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "10857144",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11025477,
        "duration": 6.552333,
        "rotation": 0,
        "nb_frames": 389,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "247f8751e12011121c4412587d9b61eb",
        "public_id": "avalanche2023spring/pplw5aftxs8ryqvmvlst",
        "version": 1678404298,
        "version_id": "90a0e83c15adb5294ee3d669c8483783",
        "signature": "ebad99beaf4fd0974d6626260a32adf78c7c3fde",
        "width": 1710,
        "height": 1326,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T23:24:58Z",
        "tags": [],
        "bytes": 410072,
        "type": "upload",
        "etag": "e024d04e424e4d7f755d0c2588c1e78c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678404298/avalanche2023spring/pplw5aftxs8ryqvmvlst.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678404298/avalanche2023spring/pplw5aftxs8ryqvmvlst.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T00:44:32.893Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:45:45.658Z" }
      }
    ],
    "title": "",
    "description": "interactive letterforms using characters built pixel-by-pixel. why did I do this to myself",
    "inspiration_name": "Defne Kaynak",
    "comments": []
  },
  {
    "_id": "YGENfnaa7Ff2fNXNY",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": { "$date": "2023-04-28T12:01:39.763Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9d6cb139f0cdc2d67a4c64ba97415e16",
        "public_id": "avalanche2023spring/wvs718s4qhipbg27a4sv",
        "version": 1682683362,
        "version_id": "3d2522805af8e175d721380749cb4ca8",
        "signature": "70501f59fb8ace8eab3542eb9a62a7584f42faad",
        "width": 716,
        "height": 702,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T12:02:42Z",
        "tags": [],
        "bytes": 30982,
        "type": "upload",
        "etag": "2cdeb6c11b1cc47edb9685b90b67cca3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682683362/avalanche2023spring/wvs718s4qhipbg27a4sv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682683362/avalanche2023spring/wvs718s4qhipbg27a4sv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "WEEK 12 (4/4): Originally I was playing with midjourney and other image generating AI's but I wanted to see if CHATGPT is image literate and i asked it to generate a coded cat image AND LOOK AT WHAT IT MADE AHAHAHHA. I did several of these but I think this one is the funniest one.",
    "comments": []
  },
  {
    "_id": "YQu3e9CwWv49vo5kJ",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T08:44:27.652Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f2162b98452ec6e0a517035cecf2b62e",
        "public_id": "avalanche2023spring/b6rbvhfro23ya42oavo8",
        "version": 1682066679,
        "version_id": "eabab84d302e94e685baad4c342dbc37",
        "signature": "dc109a944a5991d64c7c3af25c2b7cd118cf166d",
        "width": 1654,
        "height": 1428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T08:44:39Z",
        "tags": [],
        "bytes": 492666,
        "type": "upload",
        "etag": "23a687c8c8ede5f235b40cf75cf605fb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682066679/avalanche2023spring/b6rbvhfro23ya42oavo8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682066679/avalanche2023spring/b6rbvhfro23ya42oavo8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:42:58.731Z" }
      }
    ],
    "title": "",
    "description": "Asking ChatGPT for business ideas (using GPT-3) -\nAI-powered content creation platform: A SaaS platform that leverages the power of GPT-3/GPT-4 to generate high-quality, engaging content for businesses across various industries. The platform could offer features such as content optimization, topic research, and keyword analysis to help businesses improve their online presence.\n\nAI chatbot builder: A SaaS platform that allows businesses to build their own AI chatbots using GPT-3/GPT-4. The platform could offer various templates and customization options to help businesses create chatbots that are tailored to their specific needs.\n\nAI-powered customer service platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized customer service to businesses. The platform could offer features such as automated responses, real-time chat, and voice recognition to help businesses improve their customer experience.\n\nAI-powered job matching platform: A SaaS platform that uses GPT-3/GPT-4 to match job seekers with relevant job openings. The platform could analyze job descriptions and applicant resumes to provide personalized job recommendations to job seekers.\n\nAI-powered lead generation platform: A SaaS platform that uses GPT-3/GPT-4 to generate high-quality leads for businesses. The platform could analyze customer data and behavior to provide personalized lead recommendations to businesses.\n\nAI-powered language translation platform: A SaaS platform that uses GPT-3/GPT-4 to translate languages in real-time. The platform could offer features such as text-to-speech, speech-to-text, and multi-language support to help businesses communicate with customers around the world.\n\nAI-powered virtual assistant platform: A SaaS platform that uses GPT-3/GPT-4 to provide virtual assistant services to businesses. The platform could offer features such as appointment scheduling, email management, and task automation to help businesses streamline their operations.\n\nAI-powered data analysis platform: A SaaS platform that uses GPT-3/GPT-4 to analyze large datasets and provide insights to businesses. The platform could offer features such as predictive analytics, data visualization, and machine learning to help businesses make data-driven decisions.\n\nAI-powered e-commerce platform: A SaaS platform that uses GPT-3/GPT-4 to personalize the online shopping experience for customers. The platform could offer features such as product recommendations, personalized messaging, and targeted advertising to help businesses increase sales.\n\nAI-powered social media platform: A SaaS platform that uses GPT-3/GPT-4 to optimize social media content for businesses. The platform could offer features such as post scheduling, content curation, and social media analytics to help businesses improve their social media presence.\n\nAI-powered medical diagnosis platform: A SaaS platform that uses GPT-3/GPT-4 to analyze medical data and provide accurate diagnoses. The platform could offer features such as symptom analysis, medical record analysis, and personalized treatment recommendations to help healthcare providers make informed decisions.\n\nAI-powered financial forecasting platform: A SaaS platform that uses GPT-3/GPT-4 to analyze financial data and provide accurate forecasts for businesses. The platform could offer features such as cash flow analysis, financial modeling, and scenario planning to help businesses make informed financial decisions.\n\nAI-powered cybersecurity platform: A SaaS platform that uses GPT-3/GPT-4 to detect and prevent cyber threats for businesses. The platform could offer features such as threat detection, real-time monitoring, and automated response to help businesses protect their sensitive data.\n\nAI-powered project management platform: A SaaS platform that uses GPT-3/GPT-4 to manage projects for businesses. The platform could offer features such as task assignment, project timelines, and automated reporting to help businesses stay organized and on track.\n\nAI-powered personal shopping assistant platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized shopping recommendations to consumers. The platform could offer features such as product recommendations, price comparison, and personalized deals to help consumers make informed purchasing decisions.\n\nAI-powered legal research platform: A SaaS platform that uses GPT-3/GPT-4 to provide legal research services to businesses and individuals. The platform could offer features such as case analysis, legal document drafting, and contract review to help businesses and individuals navigate the legal system.\n\nAI-powered real estate platform: A SaaS platform that uses GPT-3/GPT-4 to provide real estate data and insights to businesses and individuals. The platform could offer features such as property valuation, market analysis, and investment recommendations to help businesses and individuals make informed real estate decisions.\n\nAI-powered language learning platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized language learning services to individuals. The platform could offer features such as language assessment, personalized curriculum, and conversation practice to help individuals learn a new language.\n\nAI-powered HR platform: A SaaS platform that uses GPT-3/GPT-4 to provide HR services to businesses. The platform could offer features such as employee engagement analysis, recruitment automation, and performance management to help businesses manage their workforce more effectively.\n\nAI-powered online education platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized online education services to individuals. The platform could offer features such as personalized curriculum, automated grading, and real-time feedback to help individuals learn more effectively.",
    "comments": []
  },
  {
    "_id": "YaPwjMSwgK6LCBzTN",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-30T16:39:49.125Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "be698ebf8ba552742a6fd3b1a58f91df",
        "public_id": "avalanche2023spring/md9lrzuut9rmufnm0k9r",
        "version": 1675121962,
        "version_id": "59bac7ea519f8ce0cec2cd5ebddc6526",
        "signature": "ba520c1d05f1b2aded607fd71f7cc0e91df4ff2c",
        "width": 1125,
        "height": 1835,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-30T23:39:22Z",
        "tags": [],
        "bytes": 495387,
        "type": "upload",
        "etag": "4217793e27a09939ae0b14a99048cb7d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675121962/avalanche2023spring/md9lrzuut9rmufnm0k9r.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675121962/avalanche2023spring/md9lrzuut9rmufnm0k9r.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T20:45:38.986Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "funny",
        "created_at": { "$date": "2023-02-10T01:59:51.352Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T02:00:24.55Z" }
      }
    ],
    "title": "",
    "description": "Group Sketch Challenge Instructions. Have fun!",
    "comments": []
  },
  {
    "_id": "YbHjdCoAyPuNnNjfC",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T15:22:26.955Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "19b76ee416babd9068c067fffbb8ae09",
        "public_id": "avalanche2023spring/t3tq8i6qsaefyrmpz0bg",
        "version": 1677770590,
        "version_id": "fa7de2873c86f21d7576e2bdce8ad18e",
        "signature": "53f73d2999e5c38964ee8097220928b74a3db002",
        "width": 1130,
        "height": 1044,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T15:23:10Z",
        "tags": [],
        "bytes": 63030,
        "type": "upload",
        "etag": "d03fcb2a0b29f40231b2844c9d113d90",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677770590/avalanche2023spring/t3tq8i6qsaefyrmpz0bg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677770590/avalanche2023spring/t3tq8i6qsaefyrmpz0bg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "64a84f6b47965e0789593f9629d178cc",
        "public_id": "avalanche2023spring/e02xmmdmkem02jux7k8n",
        "version": 1677770600,
        "version_id": "454caa39649a6476d56765b09a1f8b36",
        "signature": "8b73640390edd6fe93ee4e3b67da63bd935a66f2",
        "width": 1010,
        "height": 1076,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-02T15:23:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 2451749,
        "type": "upload",
        "etag": "f512e8c4b0cfa52489376345268bb37f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677770600/avalanche2023spring/e02xmmdmkem02jux7k8n.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677770600/avalanche2023spring/e02xmmdmkem02jux7k8n.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677770600/avalanche2023spring/e02xmmdmkem02jux7k8n.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2490308",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2592157,
        "duration": 7.566667,
        "rotation": 0,
        "nb_frames": 456,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 5 ( 2/4): Now, I fixed the time thing but this took me so long for no reason, its a bit jank but I think I can fix the range of speed it actually has. I had to play around with the arrangement of the equation but I got it.",
    "comments": []
  },
  {
    "_id": "YczxKvCEM8J594BaJ",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T03:13:41.401Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "74ace464cfc97a0eefffe45dd6be8d0e",
        "public_id": "avalanche2023spring/gqddy2meoe9fegwvwgwv",
        "version": 1681444192,
        "version_id": "92407cbb8bfb48f9daf09a6eb751670d",
        "signature": "136bd32005cc8b904c1faaae5e672d8ca6b4cb06",
        "width": 2560,
        "height": 1236,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T03:49:52Z",
        "tags": [],
        "bytes": 1004679,
        "type": "upload",
        "etag": "386b3627bd064fbb64491c2b628bb6b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681444192/avalanche2023spring/gqddy2meoe9fegwvwgwv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681444192/avalanche2023spring/gqddy2meoe9fegwvwgwv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d5eb92e51bd9ac9adb674c523ca24c8c",
        "public_id": "avalanche2023spring/c0wypkcdctd6afdvw0e0",
        "version": 1681444202,
        "version_id": "316d6f4874e8bafd5dacad468eb61f5a",
        "signature": "398936f6a2743a4fb91d0ececbe8acccaede0fea",
        "width": 2560,
        "height": 1236,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T03:50:02Z",
        "tags": [],
        "bytes": 472246,
        "type": "upload",
        "etag": "12bae0177bad9fa7226c45e7880c74a2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681444202/avalanche2023spring/c0wypkcdctd6afdvw0e0.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681444202/avalanche2023spring/c0wypkcdctd6afdvw0e0.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7107afd9500137ed0856b2618deb3f00",
        "public_id": "avalanche2023spring/as52unk0381d1bfzuijh",
        "version": 1681444209,
        "version_id": "b2e3201cdc3f7d293971cbe57fbb27d9",
        "signature": "dc9cd506ebbfaac6399103b81e814710d6098d79",
        "width": 2560,
        "height": 1236,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T03:50:09Z",
        "tags": [],
        "bytes": 923040,
        "type": "upload",
        "etag": "12e606bd68b400ad8ffdf031f2d94382",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681444209/avalanche2023spring/as52unk0381d1bfzuijh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681444209/avalanche2023spring/as52unk0381d1bfzuijh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T03:55:19.453Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "funny",
        "created_at": { "$date": "2023-04-14T16:19:05.412Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:19:06.403Z" }
      }
    ],
    "title": "",
    "description": "I was analyzing the work of Aaron Marcus for inspiration and ended up with these poetic letterforms",
    "comments": []
  },
  {
    "_id": "Yfrr869pPBEvWbnFv",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-11T03:22:56.27Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ff0e55d1af0833786ab73f9224504bcf",
        "public_id": "avalanche2023spring/u1fujs39oe2lwqm7k6jd",
        "version": 1676085807,
        "version_id": "63b5e4a55097ad5ff5411e81dc453b0d",
        "signature": "c708c929ba209bbf85b9ed9c455d624cdc81b0ab",
        "width": 802,
        "height": 836,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-11T03:23:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 3356262,
        "type": "upload",
        "etag": "c4ac980e1075f558b6b177f05cf62bca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676085807/avalanche2023spring/u1fujs39oe2lwqm7k6jd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676085807/avalanche2023spring/u1fujs39oe2lwqm7k6jd.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2412525",
          "dar": "401:418",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2470867,
        "duration": 10.866667,
        "rotation": 0,
        "nb_frames": 655,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-12T03:09:29.957Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:08.853Z" }
      }
    ],
    "title": "",
    "description": "Building upon the pair sketch done with Sahiti a bit further to add more randomness biased to have more :) than :(",
    "code": "let images = [];\nlet pos = 0;\nlet array = [5,7,8,9,11,10]\n\nfunction preload(){\n  images = [\n            loadImage('sad.png'), \n            loadImage('happy.png'),\n           ];\n}\nfunction setup() {\n  createCanvas(400, 400);\n  background(255);\n  \n\n  frameRate(1);\n}\nfunction draw() {\n drawFace();\n }\n\n\n//function to draw a face\nfunction drawFace() {\n  background(\"white\");\n  // const chosenImage =  valueFromDeck();\n  for (let i=0; i<400; i+=50) {\n    for (let j=0; j<400; j+=50) {    \n      let randomElement = array[Math.floor(Math.random() * array.length)];\n      if (randomElement%2 != 0) {\n        choosenImage = images[1]\n      } else {\n        choosenImage = images[0]\n      }\n      image(choosenImage, i, j, 48, 48);\n    }\n  }\n  \n}\n\n\n//return a number from the deck\nfunction valueFromDeck() {\n  let v = images[pos];\n  pos++;\n  if (pos >= images.length) {\n    shuffle(images, true);\n    pos = 0;\n  }\n  return v;\n}",
    "comments": []
  },
  {
    "_id": "Yg9hxYZJEhC7kBvXw",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T15:25:08.276Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "64f2c56709a7c3d65332068773494bc0",
        "public_id": "avalanche2023spring/lebh7gmviji3rdewigod",
        "version": 1682004316,
        "version_id": "0b9cb98b083ab9911a219e55c223783c",
        "signature": "a51684fb71e4b1a3b445f3cbef4787eb13003cbe",
        "width": 1968,
        "height": 1672,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T15:25:16Z",
        "tags": [],
        "bytes": 533068,
        "type": "upload",
        "etag": "eb02bec037f9e105462c62f50cf4e9a2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682004316/avalanche2023spring/lebh7gmviji3rdewigod.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682004316/avalanche2023spring/lebh7gmviji3rdewigod.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "215dfb696c55887ecfa0ce4c0cc08b86",
        "public_id": "avalanche2023spring/lpl8y1xyuq4p3o2g1vmn",
        "version": 1682004320,
        "version_id": "ba568ae4839693482734187610bf79d5",
        "signature": "552ef48d5707bd3b7b90235f50c17965240d0c09",
        "width": 1968,
        "height": 1186,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T15:25:20Z",
        "tags": [],
        "bytes": 287138,
        "type": "upload",
        "etag": "41038ac824191feec1b0c579d8c54ca0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682004320/avalanche2023spring/lpl8y1xyuq4p3o2g1vmn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682004320/avalanche2023spring/lpl8y1xyuq4p3o2g1vmn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5cf77ab881049e7a76138826fe65642e",
        "public_id": "avalanche2023spring/lvkhralppbzdkw6ivvns",
        "version": 1682004323,
        "version_id": "76e279712d7e7d6c8987f03d3f8978a3",
        "signature": "6a0a5f7c77891f6138be36408c362c071070ca37",
        "width": 1968,
        "height": 1186,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T15:25:23Z",
        "tags": [],
        "bytes": 222900,
        "type": "upload",
        "etag": "555b9bdb13dd919a5d67fdf9dde12603",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682004323/avalanche2023spring/lvkhralppbzdkw6ivvns.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682004323/avalanche2023spring/lvkhralppbzdkw6ivvns.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "It was very interesting to use ChatGPT for film recommendations, especially films in another language. It was funny because I was recommending the film The Lunchbox to someone repeatedly but they thought it would be wiser to ask ChatGPT for suggestions. And it was quite funny how that film was right up there in the suggestions. So am I as smart as ChatGPT? 👀\nAsking ChatGPT about opinions made me think about how AI, although very well trained with all the information available, still doesn't really have it's own \"self\" . I wonder how this all fits into the discussions and debates around AI.\nAnyway, if anyone needs movie recommendations, definitely ask ChatGPT.",
    "comments": [
      {
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "comment": "did you do any fact checking?\neven just \"does this match what i already know\"?\n",
        "created_at": { "$date": "2023-04-20T15:35:25.876Z" }
      }
    ]
  },
  {
    "_id": "YjjfqRJJCfFerM9iJ",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T08:48:36.979Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "db83a8dd5956dbf214dc18ac7b2c6603",
        "public_id": "avalanche2023spring/ubrqxvhokqmce6klkcsu",
        "version": 1675243356,
        "version_id": "a647c917a49319b756a17bbf46a6e961",
        "signature": "85a24ceb337e2b72fb9df37f96078a79151363f6",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-01T09:22:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 3513707,
        "type": "upload",
        "etag": "59cdf820fe1a16d877b7422d1ea0b1a7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675243356/avalanche2023spring/ubrqxvhokqmce6klkcsu.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675243356/avalanche2023spring/ubrqxvhokqmce6klkcsu.mp4",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317225",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "449764",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 772356,
        "duration": 36.369667,
        "rotation": 0,
        "nb_frames": 1090,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T02:08:07.907Z" }
      }
    ],
    "title": "",
    "description": "Inspired by the discussion in class vis a vis Lego & building blocks. It works kind of the way I wanted it to, but not exactly.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet lego = [];\nlet legoX = [0,50,100,150,200,250,300];\nlet legoY = 0;\nlet legoNum = legoX.length*8;\n\nfunction setup() {\n  createCanvas(400, 400);\n  for (let i=0; i<legoNum; i++) {\n    lego[i] = new Lego(random(legoX),legoY-(400*i));\n  }\n}\n\nfunction draw() {\n  background(220);\n  let colour = [color('red'),color('yellow'),color('green'),color('blue')];\n  for (let i=0; i<legoNum; i++) {\n    lego[i].drawLego(colour[i%4]);\n    lego[i].moveLego();\n    lego[i].collision(lego);\n    lego[i].reloadScreen();\n  }\n}\n\nclass Lego {\n  constructor(LegoX, LegoY) {\n    this.x = LegoX;\n    this.y = LegoY;\n    this.legoWidth = 100;\n    this.speed = 3;\n  }\n  drawLego(LegoColour) {\n    noStroke();\n    fill(LegoColour);\n    rect(this.x, this.y, this.legoWidth, this.legoWidth/2);\n    rect(this.x+(this.legoWidth/8),this.y-(this.legoWidth/8),this.legoWidth/4,this.legoWidth/8);\n    rect(this.x+((5*this.legoWidth)/8),this.y-(this.legoWidth/8),this.legoWidth/4,this.legoWidth/8);\n  }\n  moveLego() {\n    this.y+=this.speed;\n    if (this.y > (height-(this.legoWidth/2))) {\n      this.speed=0;\n    }\n  }\n  collision(array) {\n    for (let i=0;i<legoNum;i++) {\n      if ( ((array[i].x-this.x)>=0) && ((array[i].x-this.x)<70) && ((array[i].y-this.y)>0) && ((array[i].y-this.y)<50)  ) {\n        this.speed = 0;\n      }\n    }\n  }\n  reloadScreen() {\n    if(this.y>0 && this.y<=50 && (this.speed<0.5)) {\n      window.location.reload();\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "YjkBkjfgZ7pFQrJKr",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T08:55:14.993Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "03a6b70a468dbec8d559060e74b95c93",
        "public_id": "avalanche2023spring/oyyiglxy7nug0rleb8td",
        "version": 1675241753,
        "version_id": "42f01b61819a0fc5a15ebbbd749770d8",
        "signature": "bb59884e499320c68fc12296e7f4d4e49e3dc692",
        "width": 1500,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T08:55:53Z",
        "tags": [],
        "bytes": 159972,
        "type": "upload",
        "etag": "5cc39eee36f077cea21a6f9cad8751bb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675241753/avalanche2023spring/oyyiglxy7nug0rleb8td.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675241753/avalanche2023spring/oyyiglxy7nug0rleb8td.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3871be6e6ebcefbf55ffd2d66f2d4a85",
        "public_id": "avalanche2023spring/qhvmeoak3zptyp0usawa",
        "version": 1675241768,
        "version_id": "32079b70fea2c71c2ff3daf8c3c18e19",
        "signature": "4645ae4d6079b1c33a79dd665255e1efc55ad294",
        "width": 1504,
        "height": 1504,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-01T08:56:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 103647,
        "type": "upload",
        "etag": "390e8216f47b6d3e35eebf1eb1f1e534",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675241768/avalanche2023spring/qhvmeoak3zptyp0usawa.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675241768/avalanche2023spring/qhvmeoak3zptyp0usawa.mp4",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "74769",
          "time_base": "1/600"
        },
        "frame_rate": 1,
        "bit_rate": 75379,
        "duration": 11,
        "rotation": 0,
        "nb_frames": 11,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T14:42:20.006Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T02:08:04.745Z" }
      }
    ],
    "title": "",
    "description": "Response to Alex's instructions.",
    "comments": []
  },
  {
    "_id": "YsJDS5z9CqZWsYEFX",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-01T20:49:48.863Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "06dea4ffba5af107b843decc534b3f4e",
        "public_id": "avalanche2023spring/hulspociyd6khdw2jtph",
        "version": 1682974206,
        "version_id": "bb007928ae4d9dbd447f5a74d883711e",
        "signature": "7cd39303a76dad53acac656161fd3c72f854b621",
        "width": 964,
        "height": 701,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-01T20:50:06Z",
        "tags": [],
        "bytes": 54910,
        "type": "upload",
        "etag": "9528a7ad4e1b03259bdaec0eeb0ee78e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682974206/avalanche2023spring/hulspociyd6khdw2jtph.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682974206/avalanche2023spring/hulspociyd6khdw2jtph.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T00:02:40.936Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T04:18:40.745Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:54.01Z" }
      }
    ],
    "title": "",
    "description": "Had this done over the weekend. This was moreso a warmup for experimenting with OpenSCAD to see if I could build objects using basic shapes and using the translate() and rotate() modifiers while also getting myself into the new flow of code.",
    "code": "//Helicopter Blades\n\ncolor(\"white\"){\n    translate([0, 0, 20]){\n    cube([5, 50, 2], center = true);\n        \n    rotate([0, 0, 90]){    \n    cube([5, 50, 2], center = true);\n        }    \n    }\n}\n\ncolor(\"white\"){\n    translate([5, 40, 8]){\n    rotate([0, 90, 0]){\n    cube([3, 10, 1], center = true);\n        \n    rotate([0, 0, 90]){    \n    cube([3, 10, 1], center = true);\n    }\n        }    \n    }\n}\n\ncolor(\"white\"){\n    translate([0, 0, 10]){\n    cylinder(10, 2, 2);\n    }\n}\n\ncolor(\"white\"){\n    translate([0, 40, 8]){\n    rotate([0, 90, 0]){\n    cylinder(6, 1, 1);\n    }\n    }\n}\n\n// Body\n\ncolor(\"blue\"){\n    translate([0, 0, 5]){\n    cube([20, 20, 20], center = true);\n    }\n}\n\ncolor(\"blue\"){\n    translate([0, 20, 8]){\n    cube([5, 40, 5], center = true);\n    }\n}\n\ncolor(\"blue\"){\n    translate([0, 40, 8]){\n    cube([5, 10, 10], center = true);\n    }\n}\n\n// Base\n\ncolor(\"grey\"){\n    translate([7, 0, -10]){\n    cube([4, 20, 2], center = true);\n    }\n        \n    translate([-7, 0, -10]){\n    cube([4, 20, 2], center = true);\n    }\n}\n\ncolor(\"grey\"){\n    translate([7, 5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n    \n    translate([-7, 5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n    \n    translate([7, -5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n    \n    translate([-7, -5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n}",
    "comments": []
  },
  {
    "_id": "YswdACKXFzjcJ3JNS",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "API",
    "created_at": { "$date": "2023-04-25T02:54:06.53Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cd09a2d3f830a86557e9b0a4a5e56ae1",
        "public_id": "avalanche2023spring/esobnp3h5ow4nmu7df2u",
        "version": 1682391350,
        "version_id": "bfcbf634a43399fa41b65591f08f3056",
        "signature": "1c87ddcbef414c133a8eda9aa48be8de345312b7",
        "width": 1552,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-25T02:55:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 2060700,
        "type": "upload",
        "etag": "5449c70c2b90b300572bacbc8c0b271e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682391350/avalanche2023spring/esobnp3h5ow4nmu7df2u.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682391350/avalanche2023spring/esobnp3h5ow4nmu7df2u.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682391350/avalanche2023spring/esobnp3h5ow4nmu7df2u.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2280",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "648968",
          "dar": "97:90",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 660507,
        "duration": 24.958267,
        "rotation": 0,
        "nb_frames": 748,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "fea5060a6b43554c0c3b6dc98ee78c03",
        "public_id": "avalanche2023spring/pjtvs3hm4bimx62j5rdz",
        "version": 1682391354,
        "version_id": "816a4e3b6306608e61412e67d8df4ba8",
        "signature": "7e8117111fc6b866ac5d181c1ae5838adf8aa69e",
        "width": 549,
        "height": 187,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-25T02:55:54Z",
        "tags": [],
        "bytes": 30168,
        "type": "upload",
        "etag": "ea2374e32e2b679076d4f283a87c4912",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682391354/avalanche2023spring/pjtvs3hm4bimx62j5rdz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682391354/avalanche2023spring/pjtvs3hm4bimx62j5rdz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T03:10:19.961Z" }
      }
    ],
    "title": "",
    "description": "Have been experimenting with AI & songs for a few months, so tried to use GPT to come up with lyrics for songs based on the format in the image. It doesn't really understand the genre or artist or any of the other prompts, it just puts all of the words in the prompt into the song in one specific order it recognises - verse 1, chorus, verse 2, chorus, optionally verse 3 and chorus, bridge, chorus. Increasing the temperature above 1.3 breaks out of this rigid format but makes everything nonsensical.",
    "comments": []
  },
  {
    "_id": "YtwkogWMNGttZ7v3g",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-04T03:23:05.039Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cb6db13e0009c1551ddb96fe91b7d27b",
        "public_id": "avalanche2023spring/jfz2bhb78y2lbll34hbr",
        "version": 1680578604,
        "version_id": "5e2c183cf3cd86b1c193b2d73d1696f7",
        "signature": "63fac6866feea66e8449cc826215ce4db397e2d5",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-04T03:23:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 3483818,
        "type": "upload",
        "etag": "9f2947a07a3f3f07bb6d5870ee6ee77e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680578604/avalanche2023spring/jfz2bhb78y2lbll34hbr.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680578604/avalanche2023spring/jfz2bhb78y2lbll34hbr.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680578604/avalanche2023spring/jfz2bhb78y2lbll34hbr.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2274",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "833402",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 844971,
        "duration": 32.983333,
        "rotation": 0,
        "nb_frames": 1979,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T22:57:02.116Z" }
      }
    ],
    "title": "",
    "description": "First attempt at a microgame, decided to try and recreate the OG Pong. Was able to get collisions, bouncing, two user input, angle variation, score system, and game resetting. For some reason p5.play has this weird thing where changing the position or speed of a sprite leaves behind this weird trail. Couldn't figure  out how to fix it",
    "code": "let ball, topBox, leftBox, rightBox, bottomBox;\nlet leftScore = 0, rightScore = 0;\n\nfunction setup() {\n  createCanvas(800, 800)\n\n\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start = createSprite(400, 300, 400, 200) \n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n\n}\nlet ballHue = 0 \nlet resetState = true;\nfunction draw() {\n  if (resetState === true)  {  \n    \n    if (keyWentUp(32)) {\n    serve()\n    resetState = false\n    start.draw = function () {\n      rect(0,0,300, 100)\n    }\n  }\n  \n}\n  textSize(32)\n\n  textAlign(CENTER)\n  ballHue++\n  if (ballHue > 200) {\n    ballHue = 0\n  }\n  ball.shapeColor = [ballHue, ballHue, ballHue + 800]\n  ball.bounce(topBox);\n  ball.bounce(bottomBox); \n  ball.bounce(leftBox);\n  ball.bounce(rightBox);\n   if (ball.touching.right) {\n    scoreUp('right')\n   }\n\n   if (ball.touching.left) {\n    scoreUp('left')\n   }\n\n   if (keyWentDown(38)) {\n    rightPaddle.position.y -= 60;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n  }\n\n  if (keyWentDown(40)) {\n    rightPaddle.position.y += 60;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n  }\n\n  \n  if (keyWentDown(87)) {\n    leftPaddle.position.y -= 60;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n\n  }\n\n  if (keyWentDown(83)) {\n    leftPaddle.position.y += 60;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n\n  }\n\n \n \n  ball.bounce(leftPaddle);\n  ball.bounce(rightPaddle);\n\n  \n\n\n\n\n\n\n  drawSprites()\n\n  rect(40, 30, 80, 80)\n \n  text(leftScore + '', 80, 80)\n  rect(660, 30, 80, 80)\n  text(rightScore + '', 700, 80) \n}\n\nfunction scoreUp(side) {\n  if (side === 'left') {\n    rightScore++\n    resetGame()\n  } else {\n    leftScore++\n    resetGame()\n  }\n\n}\n\nfunction serve() {\n  ball.position.x = 400;\n  ball.position.y = 400;\n\n  let dir = Math.random();\n  let ang = (Math.random() - 0.5) * 60 + 10\n  if (dir <= 0.5) {\n    ball.setSpeed(10, ang )\n  } else {\n    ball.setSpeed(-10, ang)\n  }\n\n}\n\nfunction resetGame() {\n  serve()\n  resetState = true\n  ball.velocity.x = 0;\n  ball.velocity.y = 0;\n  allSprites.removeSprites();\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n}",
    "comments": []
  },
  {
    "_id": "Ywg82F24yvp6okEnw",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-14T06:37:22.747Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1caf9b0b11eb130e0ab2363663baaccb",
        "public_id": "avalanche2023spring/jpq1seqvfuqx7fqymkhb",
        "version": 1676356977,
        "version_id": "4de1b43e149435ff1bc9109f6bcbf030",
        "signature": "9b0913823ffbdb03a9b026b40c4550f891f80c08",
        "width": 1348,
        "height": 1346,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-14T06:42:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 19185537,
        "type": "upload",
        "etag": "ef7379948114e1101b1a4084131fdfe4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676356977/avalanche2023spring/jpq1seqvfuqx7fqymkhb.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676356977/avalanche2023spring/jpq1seqvfuqx7fqymkhb.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676356977/avalanche2023spring/jpq1seqvfuqx7fqymkhb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "15627435",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 15692354,
        "duration": 9.780833,
        "rotation": 0,
        "nb_frames": 585,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:44:01.388Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T16:16:37.901Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T08:35:25.751Z" }
      }
    ],
    "title": "",
    "description": "I came across this sketch on Reddit and I was really curious how it was done. I tried to recreate it but... It needs more work! I would like to figure out how to parameterize it so I can fine tune it more..",
    "inspiration_name": "veravandeseyp",
    "inspiration_url": "https://www.reddit.com/r/generative/comments/nmyy9d/perlin_noise_grid_filled_with_rounded_rectangles/",
    "comments": []
  },
  {
    "_id": "Z3kLCvwYJsevRMtZa",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T15:21:01.72Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e6eb5304e4dbc951b355b013429f4b01",
        "public_id": "avalanche2023spring/fvb2jvkmkasnmv0adm6s",
        "version": 1677770513,
        "version_id": "425598ab7f7595b91b35331f6e086067",
        "signature": "884760b8382f914223b24c6ef90faba649181c09",
        "width": 1010,
        "height": 1076,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-02T15:21:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 959560,
        "type": "upload",
        "etag": "a1c73def9324a3f48d3554541c7fbe1f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677770513/avalanche2023spring/fvb2jvkmkasnmv0adm6s.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677770513/avalanche2023spring/fvb2jvkmkasnmv0adm6s.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677770513/avalanche2023spring/fvb2jvkmkasnmv0adm6s.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "835158",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 955578,
        "duration": 8.033333,
        "rotation": 0,
        "nb_frames": 485,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 5 ( 1/4) : I had sort of figured out how to do the noise thing but I somehow made it stop moving...",
    "comments": []
  },
  {
    "_id": "Z7GGYazgdN5zcryKK",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T00:00:03.1Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "Z96GsF5ch3PusT6mT",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T17:32:37.095Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7c6fc2af29650b75688f25f3543911eb",
        "public_id": "avalanche2023spring/ghgwwdrxil4h1uugwvnt",
        "version": 1675705163,
        "version_id": "9c00abf4c79910570bf3d810d0c43c94",
        "signature": "f236f5022ade9fd1250bbbbf030d5937b2804794",
        "width": 1610,
        "height": 1618,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-06T17:39:23Z",
        "tags": [],
        "bytes": 2676057,
        "type": "upload",
        "etag": "b2a281589ea4fe7baa9606301764ba80",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675705163/avalanche2023spring/ghgwwdrxil4h1uugwvnt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675705163/avalanche2023spring/ghgwwdrxil4h1uugwvnt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "368158e7109c0331ca87a6a1cb0e0a79",
        "public_id": "avalanche2023spring/guaemektfeahrs64ypx8",
        "version": 1675705171,
        "version_id": "b341363d75002903c11f04f7b897f2cb",
        "signature": "0fc128e03b517d9f47a75d927d75cc35299a8086",
        "width": 550,
        "height": 644,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-06T17:39:31Z",
        "tags": [],
        "bytes": 32275,
        "type": "upload",
        "etag": "f32a4f1e0f60d25386fa9eeef0f452e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675705171/avalanche2023spring/guaemektfeahrs64ypx8.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675705171/avalanche2023spring/guaemektfeahrs64ypx8.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:03:03.856Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:08:28.001Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T00:15:13.194Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T02:40:10.438Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Mark Rothko - along with the reference image",
    "inspiration_name": "Mark Rothko – Yellow Over Purple (1956)",
    "inspiration_url": "https://blog.artsper.com/wp-content/uploads/2015/05/12ROTHKO-articleLarge.jpg",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(windowHeight, windowHeight);\n  \n  noLoop();\n  \n  background(255, 201, 173);\n  \n  let c1 = color(237, 108, 43);\n  let c2 = color(107, 47, 16);\n  \n  for (let i = 0; i <= height; i++) {\n      a = random(0, 255);\n      let inter = map(i, 0, height, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c, a);\n      line(0, i, width, i);\n    }\n}\n\nfunction draw() {\n  \n    for (row = height-350; row < height-50; row++) {\n    for (col = 50; col < width-50; col++) {\n     \n      a = random(-5,20);\n      b = random(-20, 20);\n      \n      if(row<height-300 || col <100 || col > width - 100 || row > height - 80){\n        opacity2 = min(random(0, 15), random(0, 15), random(0, 15), random(0, 15), random(0, 15));\n      }\n      else if(row<height-150 || col <250 || col > width - 250){\n        opacity2 = min(random(0, 40),random(0, 40),random(0, 40),random(0, 40), random(0, 40));\n      }\n      else{\n        opacity2 = min(random(0, 30), random(0, 30), random(0, 30), random(0, 30), random(0, 100))\n      }\n      \n      let shape2 = color(191, random(20, 40), random(60, 70), opacity2);\n      fill(shape2);\n      noStroke();\n      ellipse(col + b, row + b, 5 +a, 5+a);\n    }\n  }\n  \n  for (row = 50; row < height-300; row++) {\n    for (col = 50; col < width-50; col++) {\n      \n      if(row<100 || col <100 || col > width - 100){\n        opacity1 = min(random(0, 20), random(0, 20), random(0, 20), random(0, 20), random(0, 20));\n      }\n      \n      else if(row>height-350){\n        opacity1 = min(random(0, 10), random(0, 10), random(0, 10), random(0, 10), random(0, 10));\n      }\n      else{\n        opacity1 = min(random(0, 30),random(0, 30),random(0, 40),random(0, 40), random(0, 100));\n      }\n      \n      a = random(-5,20);\n      b = random(-20, 20);\n      \n      let shape1 = color(255, random(160, 200), random(0, 20), opacity1);\n      fill(shape1);\n      noStroke();\n      \n      ellipse(col + b, row + b, 5 +a, 5+a);\n     \n    }\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "ZGjG64fpceSBqCToy",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T08:13:41.486Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "be17ebeda5903c72c62890e6efb82ea4",
        "public_id": "avalanche2023spring/yt4g1qnsupfhwdk22kl4",
        "version": 1683879253,
        "version_id": "62510e55ed313a66fcf36a527a47f583",
        "signature": "5f3769cbb5ebe9b26f2a2ffe1a6b3e74650ed6f2",
        "width": 1153,
        "height": 1152,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T08:14:13Z",
        "tags": [],
        "bytes": 184118,
        "type": "upload",
        "etag": "d20aa9568c1d05de413032b254b9769c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683879253/avalanche2023spring/yt4g1qnsupfhwdk22kl4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683879253/avalanche2023spring/yt4g1qnsupfhwdk22kl4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T10:21:39.495Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:16:51.621Z" }
      }
    ],
    "title": "",
    "description": "Animal challenge. Was thinking about horses the other day. Used turtles to make the horse's mane.",
    "comments": []
  },
  {
    "_id": "ZGvTWa9sdm6MYhWnb",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-01T22:43:47.61Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ce7138e88d80354237bcb19eaa908b5f",
        "public_id": "avalanche2023spring/iojnbxuwmofrctg7mzf0",
        "version": 1682981036,
        "version_id": "398b5645e7b92fc36ce0b8361ee6b935",
        "signature": "ce166abdf7156738f5588730abb641fe420dddd1",
        "width": 573,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T22:43:56Z",
        "tags": [],
        "bytes": 45487,
        "type": "upload",
        "etag": "ae2dbc026a323e34598cbfda15b7f64e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682981036/avalanche2023spring/iojnbxuwmofrctg7mzf0.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682981036/avalanche2023spring/iojnbxuwmofrctg7mzf0.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T00:02:58.926Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T04:18:24.99Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:50.715Z" }
      }
    ],
    "title": "",
    "description": "Wasn't sure what to make so I decided to recreate the Breuer chair in OpenSCAD! It was pretty finicky to get all the rotations and translations but I liked how it came out!",
    "code": "$fn = 100;\ncylHeight = 70;\ncylRadius = 3;\n\n\nmodule tubeJoint () {\n    rotate_extrude(angle=90, convexity = 10, $fn = 100)\n     translate([10, 0, 0])\n     circle(r = cylRadius, $fn = 100);\n}\n\nmodule mainConnector () {\n    rotate ([0,90,0]) {\n        cylinder( h = cylHeight, r =  cylRadius, center = false);\n    }\n\n\n    translate([cylHeight,0,10]) {\n        rotate([90,90,0]) {\n        \n        tubeJoint();\n        }\n    }\n}\n\nmodule bottomCushion () {\n    cylinder( h = cylHeight, r =  cylRadius, center = false);\n    \n    translate([-10,0,0]) {\n    rotate([90,90,0]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([-10,0,70]) {\n    rotate([90,0,0]) {\n        tubeJoint();\n        }\n    }\n    translate([-70,0,0]) {\n        cylinder( h = cylHeight, r =  cylRadius, center = false);\n            translate([10,0,0]) {\n    rotate([90,90,180]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([10,0,70]) {\n    rotate([90,0,180]) {\n        tubeJoint();\n        }\n    }\n    }\n    \n    translate([-60,0,80]) {\n    rotate([0,90,0]) {\n        cylinder( h = 50, r =  cylRadius, center = false);\n        }\n    }\n    \n    translate([-60,0,-10]) {\n    rotate([0,90,0]) {\n        cylinder( h = 50, r =  cylRadius, center = false);\n        }\n    }\n    \n}\n   \n\nmodule backCushion () {\n    cylinder( h = cylHeight, r =  cylRadius, center = false);\n    \n    translate([-10,0,0]) {\n    rotate([90,90,0]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([-10,0,70]) {\n    rotate([90,0,0]) {\n        tubeJoint();\n        }\n    }\n    translate([-45,0,0]) {\n        cylinder( h = cylHeight, r =  cylRadius, center = false);\n            translate([10,0,0]) {\n    rotate([90,90,180]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([10,0,70]) {\n    rotate([90,0,180]) {\n        tubeJoint();\n        }\n    }\n    }\n    \n    translate([-35,0,80]) {\n    rotate([0,90,0]) {\n        cylinder( h = 25, r =  cylRadius, center = false);\n        }\n    }\n    \n    translate([-35,0,-10]) {\n    rotate([0,90,0]) {\n        cylinder( h = 25, r =  cylRadius, center = false);\n        }\n    }\n    \n}\n   \n\n\n\n\ncolor (\"grey\") {\nmainConnector();\ntranslate([-10,0,100]) {\n    cylinder( h = cylHeight, r =  cylRadius, center = false);\n}\n\ntranslate([80,0,10]) {\n    rotate([0,-90,0]) {\n        mainConnector();\n    }\n}\n\ntranslate([70,0,90]) {\n    rotate([0,0,180]) {\n        mainConnector();\n   }\n}\n\ntranslate([-10,80,0]) {\n    rotate([-90,0,-90]) {\n        mainConnector();\n    }\n}\n\ntranslate([70,90,0]) {\n    rotate([-90,0,180]) {\n        mainConnector();\n    }\n}\n\ntranslate([80,90,80]) {\n    rotate([0,90,180]) {\n        mainConnector();\n    }\n}\n\ntranslate([0,90,90]) {\n    rotate([180,0,0]) {\n        mainConnector();\n    }\n}\n\ntranslate([-10,90,170]) {\n    rotate([0,90,0]) {\n        mainConnector();\n    }\n}\n\n\ntranslate([70,10,95.5]) {\n    rotate([-90,0,0]) {\n        bottomCushion();\n    }\n}\n\ntranslate([-5,10,135]) {\n    \n    rotate([0,90,90]) {\n        backCushion(); \n    }\n}\n}\n\ntranslate([2.5,0,95.5]) {\n    rotate([-90,0,0]) {\n        cube([65,1,88], center = false);\n    }\n}\n\ntranslate([-5,02.5,180]) {\n    \n    rotate([0,90,90]) {\n        cube([45,1,86], center = false); \n    }\n}",
    "comments": []
  },
  {
    "_id": "ZJ3eBRgkpGWugQdEA",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T19:13:35.877Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f05ea8609f05c75d693d64def30dbda6",
        "public_id": "avalanche2023spring/r1k4mri7lrtnazz5z4tf",
        "version": 1677784435,
        "version_id": "67d741f178135d3543e163ea5d00f683",
        "signature": "84b345be6ac58dce5880bfc0ea98e0835d6caf90",
        "width": 800,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T19:13:55Z",
        "tags": [],
        "bytes": 49316,
        "type": "upload",
        "etag": "336cc9f8ee65030435c0ae366fb8ad67",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677784435/avalanche2023spring/r1k4mri7lrtnazz5z4tf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677784435/avalanche2023spring/r1k4mri7lrtnazz5z4tf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3878b4e8e2257788db2100c060f6c534",
        "public_id": "avalanche2023spring/yanbpbqcclueusx0rzaz",
        "version": 1677784440,
        "version_id": "73c75716d7a2dbd33bcd8d83a82e9b91",
        "signature": "0b817767d5e886f228041358b99ae9048c360c56",
        "width": 800,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T19:14:00Z",
        "tags": [],
        "bytes": 48641,
        "type": "upload",
        "etag": "c837d03193852ce44aab3b826535e77f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677784440/avalanche2023spring/yanbpbqcclueusx0rzaz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677784440/avalanche2023spring/yanbpbqcclueusx0rzaz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d43f9d4de197ccf8d952a830f8ed06b4",
        "public_id": "avalanche2023spring/kb0onk153djsxqsbsroz",
        "version": 1677784444,
        "version_id": "656f18ee53d98ae9ca2a91b1f36358e5",
        "signature": "ba0a4d45e05eee69b91709b6788d11b389e90241",
        "width": 800,
        "height": 798,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T19:14:04Z",
        "tags": [],
        "bytes": 44208,
        "type": "upload",
        "etag": "2f79efd0f4bc0db858d5e9e490e8cefc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677784444/avalanche2023spring/kb0onk153djsxqsbsroz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677784444/avalanche2023spring/kb0onk153djsxqsbsroz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T00:56:17.81Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T04:17:25.25Z" }
      }
    ],
    "title": "",
    "description": "Playing around with HSL and transparency",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nlet points = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  noLoop()\n  \n  ellipseMode(CENTER);\n  \n  rectMode(CENTER)\n}\n\nfunction draw() {\n  background(50);\n\n  noStroke();\n  \n\n  let noiseFrequency = 1;\n  \n  placePointsCullRange(50, width, height, 20, 100)\n  \n  for (let i = 0; i < points.length; i++) {\n    // pull the coordianates from the current point in array\n    let x = points[i].x;\n    let y = points[i].y;\n    \n    let n=noise(i*0.1) *60 - 30;\n\n       let colorPick = noise(i) \n       colorPick = map(colorPick, 0, 1, 90, 200)\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    colorMode(HSL, 360, 100, 100, 1)\n    // noFill()\n    stroke(colorPick, 100, 50);\n    \n    fill(colorPick, 100, 50, noise(i)-0.5)\n\n    rect(x, y, 50 - n, 50 + n);\n  }\n\n  // noLoop();\n}\n\nfunction placePointsCullRange(count, w, h, min_distance, max_distance) {\n\n  let current_try = 0;\n  let max_tries = count * 10;\n\n  // init with one point in center\n  points.push({\n    x: w * 0.5,\n    y: h * 0.5,\n  });\n\n  while (points.length < count && current_try < max_tries) {\n    current_try++;\n\n    let x = random() * w;\n    let y = random() * h;\n\n    let isTooClose = checkClose(x, y, points, min_distance);\n    let isCloseEnough = checkClose(x, y, points, max_distance);\n\n    if (!isTooClose && isCloseEnough) {\n      points.push({\n        x: x,\n        y: y,\n      });\n    }\n  }\n\n  return points;\n}\n\nfunction checkClose(x, y, points, min_distance) {\n  for (let i = 0; i < points.length; i++) {\n    if (dist(points[i].x, points[i].y, x, y) < min_distance) {\n      return true;\n    }\n  }\n  return false;\n}",
    "comments": []
  },
  {
    "_id": "ZNJoovMQqLXoB4Gmx",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T19:59:49.989Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7b602bc63dac45c748f406e2742702db",
        "public_id": "avalanche2023spring/swpkixwgu9voocfxcoep",
        "version": 1680811622,
        "version_id": "275c611869b4d07f90974ac7c0d54f38",
        "signature": "2f37e906424b70633efdb1b60679593f12a73b51",
        "width": 720,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T20:07:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 14167600,
        "type": "upload",
        "etag": "7eb3a6e6394bca42244fcc2f080569de",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680811622/avalanche2023spring/swpkixwgu9voocfxcoep.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680811622/avalanche2023spring/swpkixwgu9voocfxcoep.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680811622/avalanche2023spring/swpkixwgu9voocfxcoep.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "176763",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2496534",
          "time_base": "1/600"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 2678712,
        "duration": 42.311667,
        "rotation": 90,
        "nb_frames": 1270,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5a13f38b6c6fb6b0c8c4ec98ae925577",
        "public_id": "avalanche2023spring/sgbqistthge01sfcagmz",
        "version": 1680811632,
        "version_id": "6e0d850373a5f291060f162aa3d88769",
        "signature": "28cb1c10852deb8ad0cfa562aef54c848a2c19ad",
        "width": 1650,
        "height": 1027,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-06T20:07:12Z",
        "tags": [],
        "bytes": 423226,
        "type": "upload",
        "etag": "82563259b8f92a375682576594a105a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680811632/avalanche2023spring/sgbqistthge01sfcagmz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680811632/avalanche2023spring/sgbqistthge01sfcagmz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a53ac42119ded045300ef9af15a53a80",
        "public_id": "avalanche2023spring/bg17nnnvm0zycpu9qi5g",
        "version": 1680811640,
        "version_id": "1a3cf25e9a767b70cdb0eea4db557db3",
        "signature": "d33a7d3ffe678f36f87ab63edf04b901eb6102d8",
        "width": 720,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T20:07:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 4740581,
        "type": "upload",
        "etag": "1cd32c3b89a0c8b1254163df9e08d446",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680811640/avalanche2023spring/bg17nnnvm0zycpu9qi5g.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680811640/avalanche2023spring/bg17nnnvm0zycpu9qi5g.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680811640/avalanche2023spring/bg17nnnvm0zycpu9qi5g.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "169786",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "2531561",
          "time_base": "1/600"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 2707936,
        "duration": 14.005,
        "rotation": 90,
        "nb_frames": 421,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:46:14.642Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T14:10:14.079Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:55.979Z" }
      }
    ],
    "title": "",
    "description": "Couch Game Pair Challenge: Isha and I worked on Brocc-Attack—a two-player game about helping our main character reach the ice-cream truck as an annoyingly nosy broccoli tries to block him. And there’s fire too. We did hit a snag with the displace function overriding the immovable states of the walls (captured in the second, short clip). Play testing was fun though!!",
    "comments": []
  },
  {
    "_id": "ZPY87fiWBZEXcHbCh",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T03:16:51.245Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "18da00a7dc73bba7b8f1b86339055993",
        "public_id": "avalanche2023spring/ufpym6h10blsjkt9bmqa",
        "version": 1675307822,
        "version_id": "db0ba42ca94a8e8850ecb0a615b60b33",
        "signature": "55cda685abc49a744dd4e04524b2a7431d0af919",
        "width": 1814,
        "height": 2268,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T03:17:02Z",
        "tags": [],
        "bytes": 2732866,
        "type": "upload",
        "etag": "aef560060eb67d608c1d6a66bc20073a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675307822/avalanche2023spring/ufpym6h10blsjkt9bmqa.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675307822/avalanche2023spring/ufpym6h10blsjkt9bmqa.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T17:55:26.298Z" }
      }
    ],
    "title": "",
    "description": "Sketch made using Sahiti's Instructions.",
    "comments": [],
    "inspiration_name": "Sketch using Sahiti's Instructions"
  },
  {
    "_id": "ZcaCYDoTmgHxsbB9v",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-06T03:31:30.247Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "21c346e108e215440aa1a1265efa4f7d",
        "public_id": "avalanche2023spring/dtgwjwv3qgwtd5yt32hc",
        "version": 1678073509,
        "version_id": "e9b2e6c13aa948bc4f9a84c060bd20cb",
        "signature": "9f12ae655926e0b36d70413d18badd9f21528594",
        "width": 596,
        "height": 596,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-06T03:31:49Z",
        "tags": [],
        "bytes": 124297,
        "type": "upload",
        "etag": "c8a699e67fdfa10e19f309526f24561d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678073509/avalanche2023spring/dtgwjwv3qgwtd5yt32hc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678073509/avalanche2023spring/dtgwjwv3qgwtd5yt32hc.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T04:44:10.158Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:45:52.203Z" }
      }
    ],
    "title": "",
    "description": "Took a shot at one of the prompts for this week's sketches. Experimented with making an image purely from pixels and I tried my hand at making a beach landscape from my experimentation.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  //background(220);\n  \n  img = createImg(1000, 1000);\n  loadPixels();\n  \n  // Beach color\n  \n  for(y = 0; y < height; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(230, 255)), floor(random(227, 255)), floor(random(120, 200)));\n      set(x, y, c);\n    }\n  }\n  \n  // Water Foam color\n  \n  for(y = 0; y < 250; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(220, 230)), floor(random(240, 255)), floor(random(230, 255)));\n      set(x, y, c);\n    }\n  }\n  \n  //Water color\n  \n  for(y = 0; y < 200; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(110, 120)),floor(random(210, 230)), floor(random(220, 230)));\n      set(x, y, c);\n    }\n  }\n  \n  // Sky color\n  \n  for(y = 0; y < 150; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(150, 160)), floor(random(220, 230)), 255);\n      set(x, y, c);\n    }\n  }\n  \n  /* for(y = 0; y < 150; y++) {\n    for(x = 0; x < width; x++) {\n      //let c = color(255);\n      //set(x, y, c);\n    }\n  } */\n  \n  for(i = 0; i < 2500; i++) {\n    let c = color(255);\n    //let w = random(width) + random(width) + random(width) /3;\n    let w = noise(i * width, 0) * 200 + 200;\n    set(w, random(75, 150), c);\n  }\n  \n  // Cloud set\n  \n  for(i = 0; i < 2500; i++) {\n    let c = color(255);\n    //let w = random(width) + random(width) + random(width) /3;\n    let w = noise(i * width, 0) * 200 + 100;\n    set(w, random(50, 125), c);\n  }\n  \n  for(i = 0; i < 2500; i++) {\n    let c = color(255);\n    //let w = random(width) + random(width) + random(width) /3;\n    let w = noise(i * width, 0) * 200 + 250;\n    set(w, random(25, 100), c);\n  }\n  \n  updatePixels();\n  \n  noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "ZdoZEWnkhG7aKDC5N",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-19T20:35:43.189Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "86cd756b4b6325a3526cdbce92cdc8a0",
        "public_id": "avalanche2023spring/uudkrczerd23y9bq5o5b",
        "version": 1681936560,
        "version_id": "c8f758a6b7ade2244f9bd4f8cfa5840b",
        "signature": "92c178a1b07789edad20c28f90fdb15f2bfcc54d",
        "width": 432,
        "height": 725,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T20:36:00Z",
        "tags": [],
        "bytes": 16548,
        "type": "upload",
        "etag": "a44330dd8b5040c1986b2672e1ac857c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681936560/avalanche2023spring/uudkrczerd23y9bq5o5b.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681936560/avalanche2023spring/uudkrczerd23y9bq5o5b.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T17:58:52.355Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T19:40:19.183Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "nerdy",
        "created_at": { "$date": "2023-04-21T03:59:55.219Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:29:43.122Z" }
      }
    ],
    "title": "",
    "description": "Chat GPT made a circuit diagram for me. I gave it a very very random prompt and sensors that does not exist but it could create a diagram.",
    "comments": []
  },
  {
    "_id": "ZfbCw8xfZQuGLY47Y",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-28T20:40:26.084Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3879d84b4b3000579dc536eb05677451",
        "public_id": "avalanche2023spring/uvsn74ogknquangrpp3d",
        "version": 1674938450,
        "version_id": "b942d23c102462aaae30b7e6b07a09cb",
        "signature": "a1497bcbbcc5e83a30d8531c7ad278652b6ed6b9",
        "width": 1144,
        "height": 1246,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-28T20:40:50Z",
        "tags": [],
        "bytes": 697249,
        "type": "upload",
        "etag": "4200b0afadde1b8208a429c98b1d86ac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674938450/avalanche2023spring/uvsn74ogknquangrpp3d.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674938450/avalanche2023spring/uvsn74ogknquangrpp3d.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T23:04:11.907Z" }
      }
    ],
    "title": "",
    "description": "Instructions for my group, let me know if something doesn't make sense!",
    "comments": []
  },
  {
    "_id": "ZtPmjomioJQmLCdcM",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T04:07:47.682Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8ab3253fab6706b0818055c3cb1f6008",
        "public_id": "avalanche2023spring/g2qdnb7bwhuyclpy57zz",
        "version": 1683259685,
        "version_id": "3ebb5c262a13b174980cbbe576e95425",
        "signature": "2053e71191fc2e4dba05fa8c24be6f3fd44767c4",
        "width": 958,
        "height": 888,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T04:08:05Z",
        "tags": [],
        "bytes": 34958,
        "type": "upload",
        "etag": "2dbc7367279f03dfc9bd0b9f86605d21",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683259685/avalanche2023spring/g2qdnb7bwhuyclpy57zz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683259685/avalanche2023spring/g2qdnb7bwhuyclpy57zz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:26.202Z" }
      }
    ],
    "title": "",
    "description": "Cube-based Fractal shape",
    "code": "// Define the parameters of the fractal shape\nDEPTH = 4;\nTHETA = 60;\nSCALE = 0.7;\n\n// Define the recursive function to create the fractal shape\nmodule fractal(depth, size, color1, color2, color3) {\n  if (depth > 0) {\n    color(color1) cube(size = size, center = true);\n    translate([0, 0, size/2]) {\n      rotate([0, 0, THETA]) {\n        color(color2) fractal(depth - 1, size * SCALE, color1, color2, color3);\n      }\n    }\n    translate([0, 0, -size/2]) {\n      rotate([0, 0, -THETA]) {\n        color(color3) fractal(depth - 1, size * SCALE, color1, color2, color3);\n      }\n    }\n  }\n}\n\n// Draw the fractal shape\nfractal(DEPTH, 40, \"Red\", \"Green\", \"Blue\");",
    "comments": []
  },
  {
    "_id": "ZwjqbGRkKFNLTCotv",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T03:23:59.348Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "037c8398013186390e14090446373cee",
        "public_id": "avalanche2023spring/pik2pqolpkqg1es0q1w9",
        "version": 1679628254,
        "version_id": "2c3806f92474ed72ef4f0c85f590a696",
        "signature": "da59839918f5db5d600329d7f1332fbed69492f0",
        "width": 2142,
        "height": 1770,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T03:24:14Z",
        "tags": [],
        "bytes": 9928310,
        "type": "upload",
        "etag": "7d88db4a60188c1b9d18b1b67742cc3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679628254/avalanche2023spring/pik2pqolpkqg1es0q1w9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679628254/avalanche2023spring/pik2pqolpkqg1es0q1w9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I was playing around with trying to make an image filter...\n\nit looks kind of creepy 😶",
    "comments": []
  },
  {
    "_id": "ZxvjNuZnncJnXMagJ",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T04:26:04.494Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c0a7834422db85d4ff6a67afc3cbc490",
        "public_id": "avalanche2023spring/dfowjvrotggprlqy3zle",
        "version": 1675312707,
        "version_id": "dade365e9291ac1c639f826d4f32632c",
        "signature": "41f3f291c8bcd32958393acacb0b884f91acf150",
        "width": 1594,
        "height": 602,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-02T04:38:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 9789405,
        "type": "upload",
        "etag": "e71432b882a43b5ac6a1cbdfb53a2feb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675312707/avalanche2023spring/dfowjvrotggprlqy3zle.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675312707/avalanche2023spring/dfowjvrotggprlqy3zle.mp4",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "124939",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "5323217",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5466379,
        "duration": 14.283333,
        "rotation": 0,
        "nb_frames": 857,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T18:08:44.538Z" }
      }
    ],
    "title": "",
    "description": "Last Sketch for this week!! In this p5 sketch I used Perlin noise to move points generated using the textToPoints() function!",
    "code": "// horrible code - symbolisyng system falling apart\n\nlet font_one;\nlet fontSize = 100;\nlet point_amount = 0.3;\n\nlet e_letter;\nlet d_letter;\nlet u_letter;\nlet c_letter;\nlet a_letter;\nlet t_letter;\nlet i_letter;\nlet o_letter;\nlet n_letter;\nlet number = 1;\n\nlet t = 1;\nlet r = -1;\n\nlet x_location;\nlet y_location;\n\nlet perlin_1 = 1;\nlet perlin_2 = 2;\nlet perlin_3 = 3;\nlet perlin_4 =4;\nlet perlin_5 =5;\nlet perlin_6 = 6;\nlet perlin_7 = 7;\nlet perlin_8 = 8;\nlet perlin_9 = 9;\nlet perlin_10 = 10;\nlet perlin_11 = 11;\nlet perlin_12 = 12;\nlet perlin_13 = 13;\nlet perlin_14 = 14;\nlet perlin_15 = 15;\nlet perlin_16 = 16;\nlet perlin_17 = 17;\nlet perlin_18 = 18;\n\nfunction preload(){\n  font_one = loadFont(\"Fonts/CaslonOS-Regular.otf\")\n}\n\nfunction setup() {\n  \n  createCanvas(800, 300);\n  textFont(font_one)\n  textSize(fontSize)\n  \n  x = width/2-80;\n  y = height/2 +65;\n  \n  // the amount of points have to be exactly the same for both letters, therefore we need to make the SampleFactor different for both letters (match it perfectly)\n  \n  e_letter = font_one.textToPoints(\"E\", 61, 187, fontSize, {sampleFactor :0.35})\n  d_letter = font_one.textToPoints(\"D\", 128, 187, fontSize, {sampleFactor : 0.365})\n  u_letter = font_one.textToPoints(\"U\", 195, 187, fontSize, {sampleFactor : 0.383})\n  c_letter = font_one.textToPoints(\"C\", 262, 187, fontSize, {sampleFactor : 0.405})\n  a_letter = font_one.textToPoints(\"A\", 329, 187, fontSize, {sampleFactor : 0.395})\n  t_letter = font_one.textToPoints(\"T\", 396, 187, fontSize, {sampleFactor : 0.438})\n  i_letter = font_one.textToPoints(\"I\", 463, 187, fontSize, {sampleFactor : 0.76})\n  o_letter = font_one.textToPoints(\"O\", 530, 187, fontSize, {sampleFactor : 0.3745})\n  n_letter = font_one.textToPoints(\"N\", 597, 187, fontSize, {sampleFactor : 0.322})\n}\n\n\nfunction draw() {\n  background(220);\n  textAlign(CENTER)\n  // text(\"EDUCATION\", width/2, 187)\n  strokeWeight(0.1)\n  push()\n  noFill();\n  \n  // change location with perlin noise\n  for (i = 0; i < e_letter.length; i++){\n    e_letter[i].x = e_letter[i].x + map(noise(perlin_1), 0, 1, -0.5, 0.5);\n    e_letter[i].y = e_letter[i].y + map(noise(perlin_2), 0, 1, -0.5, 0.5);\n    d_letter[i].x = d_letter[i].x + map(noise(perlin_3), 0, 1, -0.5, 0.5);\n    d_letter[i].y = d_letter[i].y + map(noise(perlin_4), 0, 1, -0.5, 0.5);\n    u_letter[i].x = u_letter[i].x + map(noise(perlin_5), 0, 1, -0.5, 0.5);\n    u_letter[i].y = u_letter[i].y + map(noise(perlin_6), 0, 1, -0.5, 0.5);\n    c_letter[i].x = c_letter[i].x + map(noise(perlin_7), 0, 1, -0.5, 0.5);\n    c_letter[i].y = c_letter[i].y + map(noise(perlin_8), 0, 1, -0.5, 0.5);\n    a_letter[i].x = a_letter[i].x + map(noise(perlin_9), 0, 1, -0.5, 0.5);\n    a_letter[i].y = a_letter[i].y + map(noise(perlin_10), 0, 1, -0.5, 0.5);\n    t_letter[i].x = t_letter[i].x + map(noise(perlin_11), 0, 1, -0.5, 0.5);\n    t_letter[i].y = t_letter[i].y + map(noise(perlin_12), 0, 1, -0.5, 0.5);\n    i_letter[i].x = i_letter[i].x + map(noise(perlin_13), 0, 1, -0.5, 0.5);\n    i_letter[i].y = i_letter[i].y + map(noise(perlin_14), 0, 1, -0.5, 0.5);\n    o_letter[i].x = o_letter[i].x + map(noise(perlin_15), 0, 1, -0.5, 0.5);\n    o_letter[i].y = o_letter[i].y + map(noise(perlin_16), 0, 1, -0.5, 0.5);\n    n_letter[i].x = n_letter[i].x + map(noise(perlin_17), 0, 1, -0.5, 0.5);\n    n_letter[i].y = n_letter[i].y + map(noise(perlin_18), 0, 1, -0.5, 0.5);\n    \n  }\n  \n  // E-D\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(e_letter[i].x, e_letter[i].y)\n    vertex(d_letter[i].x, d_letter[i].y)\n  }\n  endShape();\n  \n  // D-U\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(d_letter[i].x, d_letter[i].y)\n    vertex(u_letter[i].x, u_letter[i].y)\n  }\n  endShape();\n  \n  // U-C\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(u_letter[i].x, u_letter[i].y)\n    vertex(c_letter[i].x, c_letter[i].y)\n  }\n  endShape();\n  \n  // C-A\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(c_letter[i].x, c_letter[i].y)\n    vertex(a_letter[i].x, a_letter[i].y)\n  }\n  endShape();\n  \n    // A-T\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(a_letter[i].x, a_letter[i].y)\n    vertex(t_letter[i].x, t_letter[i].y)\n  }\n  endShape();\n  \n    // T-I\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(t_letter[i].x, t_letter[i].y)\n    vertex(i_letter[i].x, i_letter[i].y)\n  }\n  endShape();\n  \n    // I-O\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(i_letter[i].x, i_letter[i].y)\n    vertex(o_letter[i].x, o_letter[i].y)\n  }\n  endShape();\n  \n    // O-N\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(o_letter[i].x, o_letter[i].y)\n    vertex(n_letter[i].x, n_letter[i].y)\n  }\n  endShape();\n  \n  perlin_1 += 0.0001;\n  perlin_2 += 0.0001;\n  perlin_3 += 0.0001;\n  perlin_4 += 0.0001;\n  perlin_5 += 0.0001; \n  perlin_6 += 0.0001;\n  perlin_7 += 0.0001;\n  perlin_8 += 0.0001;\n  perlin_9 += 0.0001;\n  perlin_10 += 0.0001;\n  perlin_11 += 0.0001;\n  perlin_12 += 0.0001;\n  perlin_13 += 0.0001;\n  perlin_14 += 0.0001;\n  perlin_15 += 0.0001;\n  perlin_16 += 0.0001;\n  perlin_17 += 0.0001;\n  perlin_18 += 0.0001;\n  \n  pop()\n}",
    "comments": []
  },
  {
    "_id": "ZySo9FJt28c8fg5rN",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T03:03:59.489Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9578fc8adccff1961db9fb6da94caec8",
        "public_id": "avalanche2023spring/zkg0qokyh6qc374zyguk",
        "version": 1676516671,
        "version_id": "2a5e8aa8411380effd87564451d947ca",
        "signature": "b394718cbe6302e3066d7fad7643c8d2d272eae8",
        "width": 912,
        "height": 912,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T03:04:31Z",
        "tags": [],
        "bytes": 369412,
        "type": "upload",
        "etag": "999627447befeb6c8f82099be40afe32",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676516671/avalanche2023spring/zkg0qokyh6qc374zyguk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676516671/avalanche2023spring/zkg0qokyh6qc374zyguk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "71cbbccf185635318d101189c4087639",
        "public_id": "avalanche2023spring/luujuyd9jnldnuqepapt",
        "version": 1676516691,
        "version_id": "f417e0f9a6e7fe827bbf72394f1b12bb",
        "signature": "e87a7ce1c1d338949a83c3e6629145043e81be30",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T03:04:51Z",
        "tags": [],
        "bytes": 206545,
        "type": "upload",
        "etag": "c0e91cbbad3e9cfb3e12192219634e02",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676516691/avalanche2023spring/luujuyd9jnldnuqepapt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676516691/avalanche2023spring/luujuyd9jnldnuqepapt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T03:35:34.816Z" }
      }
    ],
    "title": "",
    "description": "Alex sent me this cool multi-dimensional, colorful structure (second image). For my response, I tried reinterpreting it from a different perspective. The final composited image resembles a crystal-like structure!",
    "comments": []
  },
  {
    "_id": "a44r3nKeHFfNhYY6e",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T19:18:15.683Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dad11e9ba687c76aafb80731aadf23fd",
        "public_id": "avalanche2023spring/ejmnvjc0m5eau7vlfzw4",
        "version": 1681414161,
        "version_id": "57bd564abcc2c1a21164426778c43351",
        "signature": "647d2e54b967c695a8715572c489a786a4c52a0a",
        "width": 2054,
        "height": 1174,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-13T19:29:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 4007899,
        "type": "upload",
        "etag": "9e0bf7cb9ac2eb93499e060eeba73f57",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681414161/avalanche2023spring/ejmnvjc0m5eau7vlfzw4.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681414161/avalanche2023spring/ejmnvjc0m5eau7vlfzw4.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681414161/avalanche2023spring/ejmnvjc0m5eau7vlfzw4.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "124145",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "1434946",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1969080,
        "duration": 16.283333,
        "rotation": 0,
        "nb_frames": 1038,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9c1d89691b877b252ca380ab9b790ffc",
        "public_id": "avalanche2023spring/tldttkrl38pmojsru6ea",
        "version": 1681414445,
        "version_id": "69570c07ecd70941337b1168a333fcb9",
        "signature": "625e46d71771fa5d83d28d9627cdc00f6bf07cc8",
        "width": 1760,
        "height": 1174,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T19:34:05Z",
        "tags": [],
        "bytes": 392693,
        "type": "upload",
        "etag": "2c023766c393965a08c7170858650e85",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681414445/avalanche2023spring/tldttkrl38pmojsru6ea.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681414445/avalanche2023spring/tldttkrl38pmojsru6ea.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7b91b797b88509c8a3d79648bad517c7",
        "public_id": "avalanche2023spring/jcoj9wxgldlvjhticdec",
        "version": 1681414452,
        "version_id": "7ce58b161cdf4583ecc86957067cf072",
        "signature": "eb6a975215b668a87b5969b546fc2be362b4b6d5",
        "width": 1760,
        "height": 1174,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T19:34:12Z",
        "tags": [],
        "bytes": 175652,
        "type": "upload",
        "etag": "68a17e1164b1246979c7204e56206c33",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681414452/avalanche2023spring/jcoj9wxgldlvjhticdec.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681414452/avalanche2023spring/jcoj9wxgldlvjhticdec.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T02:43:02.607Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T03:09:26.015Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:31:38.752Z" }
      }
    ],
    "title": "",
    "description": "**Using Templates to Explore Design Processes as a Branding Exercise.** P.S. I wish I'd modified the line-height of the title. I also wanted to add a diagram within which the four verbs lie.",
    "comments": [],
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\ndocument.getElementById(\"verb1\").textContent = generateVerb(1);\ndocument.getElementById(\"verb2\").textContent = generateVerb(2);\ndocument.getElementById(\"verb3\").textContent = generateVerb(3);\ndocument.getElementById(\"verb4\").textContent = generateVerb(5);\n\nfunction generateTitle() {\n  var design_nouns = [\n    \"Thinking\",\n    \"Process\",\n    \"Methodology\",\n    \"Design\",\n    \"Design Process\",\n    \"Framework\",\n    \"System\",\n    \"Loop\",\n    \"Mindset\",\n    \"Frame\",\n    \"Technique\",\n    //\"Approach\",\n    \"Practice\",\n  ];\n  var adjectives = [\n    \"Diamond\",\n    \"Circular\",\n    \"Two-pronged\",\n    \"Trifactored\",\n    \"Spiral\",\n    \"Participatory\",\n    \"Community-centric\",\n    \"Critical\",\n    \"Imaginative\",\n    \"Fictionary\",\n    \"Value-centric\",\n    \"Planetary\",\n    \"Growth-centric\",\n    \"Research-driven\",\n    \"Decelerated\",\n    \"Accelerated\",\n    \"Deliberate\",\n    \"Humanist\",\n    \"Iterative\",\n    \"Accessible\",\n    \"Empathic\",\n    \"Hyperlocal\",\n    \"Localized\",\n    \"Globalized\",\n    \"Transparent\",\n    \"Social\",\n    \"Narrative\",\n    \"Dynamic\",\n    \"Interconnected\",\n    \"Transdisciplinary\",\n    \"Creative\",\n    \"Divergent\",\n    \"Emergent\",\n    \"Reflective\",\n    \"Effective\",\n    \"Looped\",\n    \"Continuative\",\n    \"Innovative\",\n    \"Progressive\",\n    \"Experimental\",\n    \"Facilitative\",\n  ];\n  \n\n  var adjective1 = sample(adjectives);\n  var adjective2 = sample(adjectives);\n  while (adjective1 === adjective2) {\n    adjective2 = sample(adjectives);\n  }\n\n  var noun1 = sample(design_nouns);\n  var noun2 = sample(design_nouns);\n  while (noun1 === noun2) {\n    noun2 = sample(design_nouns);\n  }\n  var title = \"\";\n  let rN = Math.random();\n  if (rN < 0.33) {\n    title = `The ${adjective1} ${adjective2} ${noun1}`;\n  } else if (rN < 0.66) {\n    title = `The ${noun1} of ${adjective1} ${noun2}`;\n  } else {\n    title = `The ${adjective1} ${noun1}`;\n  }\n\n  return title;\n}\n\nfunction generateSubtitle() {\n    var adjectives = [\n        \"A circular\",\n        \"A two-pronged\",\n        \"A trifactored\",\n        \"A participatory\",\n        \"A community-centric\",\n        \"A critical\",\n        \"An imaginative\",\n        \"A fictionary\",\n        \"A value-centric\",\n        \"A planetary\",\n        \"A growth-centric\",\n        \"A research-driven\",\n        \"A decelerated\",\n        \"An accelerated\",\n        \"A deliberate\",\n        \"A humanist\",\n        \"An iterative\",\n        \"An accessible\",\n        \"An empathic\",\n        \"A hyperlocal\",\n        \"A localized\",\n        \"A globalized\",\n        \"A transparent\",\n        \"A social\",\n        \"A narrative\",\n        \"A dynamic\",\n        \"An interconnected\",\n        \"A transdisciplinary\",\n        \"A creative\",\n        \"A divergent\",\n        \"An emergent\",\n        \"A reflective\",\n        \"An effective\",\n        \"A looped\",\n        \"A continuative\",\n        \"An innovative\",\n        \"A progressive\",\n        \"An experimental\",\n        \"A facilitative\",\n    ];\n\n  var powers = [\n    \"Stankord pSchool\",\n    \"uDEO\",\n    \"Boogle\",\n    \"Kritisch Council\",\n    \"Dom Normal\",\n    \"Macrosort\",\n    \"AirDnD\",\n    \"Fasepook\",\n    \"Barsons School of Design\",\n  ];\n\n  var adjective = sample(adjectives);\n  var power = sample(powers);\n  var subtitle = `${adjective} design approach by ${power}`;\n\n  return subtitle;\n}\n\nfunction generateVerb(a) {\n    var verb = \"\";\n        \n    var researchVerbs = [\n        \"Explore\",\n        \"Observe\",\n        \"Playtest\",\n        \"Collect\",\n        \"Learn\",\n        \"Research\",\n        \"Empathise\",\n        \"Measure\",\n        \"Enquire\",\n    ];\n\n    var analysisVerbs = [\n        \"Question\",\n        \"Re-map\",\n        \"Comverge\",\n        \"Reframe\",\n        \"Define\",\n        \"Synthesize\",\n        \"Empathise\",\n        \"Analyze\",\n        \"Strategize\",\n        \"Evaluate\",\n        \"Reflect\",\n    ];\n\n    var doVerbs = [\n        \"Create\",\n        \"Execute\",\n        \"Facilitate\",\n        \"Co-create\",\n        \"Develop\",\n        \"Build\",\n        \"Prototype\",\n        \"Visualize\",\n    ];\n\n    var dreamVerbs = [\n        \"Dream\",\n        \"Ideate\",\n        \"Conceptualize\",\n        \"Imagine\",\n        \"Speculate\",\n    ];\n\n    var launchVerbs = [\n        \"Present\",\n        \"Catalyze\",\n        \"Justify\",\n        \"Deliver\",\n        \"Release\",\n        \"Launch\",\n        \"Document\",\n        \"Share\",\n    ];\n\n    switch(a) {\n        case 1:\n            verb = sample(researchVerbs);\n            break;\n        case 2:\n            verb = sample(analysisVerbs);\n            break;\n        case 3:\n            verb = sample(doVerbs);\n            break;\n        case 4:\n            verb = sample(dreamVerbs);\n            break;\n        case 5:\n            verb = sample(launchVerbs);\n            break;\n        default:\n            verb = sample(analysisVerbs);\n            break;\n    }\n\n    return verb;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n    <style type=\"text/css\">\n        @import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n        @import url('https://fonts.googleapis.com/css2?family=Ubuntu&display=swap');\n        html {\n            \n        }\n        \n        body {\n\t\t\ttext-align: center;\n            font-family: 'Montserrat', sans-serif;\n            height = 100vh;\n            background: rgb(7,0,129);\nbackground: linear-gradient(0deg, rgba(7,0,129,1) 0%, rgba(0,0,0,1) 100%);\n            color: white;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n        .verb {\n            padding: 15px;\n\t\t\t\n        }\n        #methodology {\n            display: flex;\n            justify-content: space-between;\n            width: 80vw;\n            margin: 50px auto;\n            font-size: 28px;\n            padding-top: 80px;\n        }\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n        <div id=\"methodology\">\n            <div class=\"verb\" id=\"verb1\"> Verb1 </div>\n            <div class=\"verb\"> 👉 </div>\n            <div class=\"verb\" id=\"verb2\"> Verb2 </div>\n            <div class=\"verb\"> 👉 </div>\n            <div class=\"verb\" id=\"verb3\"> Verb3 </div>\n            <div class=\"verb\"> 👉 </div>\n            <div class=\"verb\" id=\"verb4\"> Verb4 </div>\n        </div>\n\t</div>\n`\n  );\n}"
  },
  {
    "_id": "aBJTMtGPLkDgqL2tN",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-05T17:46:48.849Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0230ee2526df3fa1ba4c312eb53ce73c",
        "public_id": "avalanche2023spring/svotllzllsvs1rsnpbyu",
        "version": 1675619213,
        "version_id": "38309b9cce9b02ee9cd6a5e181a715f7",
        "signature": "d15e41d3864cd794d1519fb1f0104f0f4ac25246",
        "width": 928,
        "height": 990,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-05T17:46:53Z",
        "tags": [],
        "bytes": 350872,
        "type": "upload",
        "etag": "0d9bf652b46f2b3eb93fff90bde843f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675619213/avalanche2023spring/svotllzllsvs1rsnpbyu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675619213/avalanche2023spring/svotllzllsvs1rsnpbyu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T18:06:17.936Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-05T18:07:42.33Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T19:55:33.91Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T17:43:48.812Z" }
      }
    ],
    "title": "",
    "description": "Trial 2 of replicating the same print. I figured out the pattern better this time round, so it looks truer to the original. I have ideas to make it more accurate, but they're more about refining the geometry than exploring random values.",
    "inspiration_name": "Untitled, Albers",
    "inspiration_url": "https://nmwa.org/art/collection/albers-untitled/",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 30;\nlet border = 20;\nlet dim = 480 / 450;\n\nfunction setup() {\n  createCanvas(450, 450 * dim);\n  noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(245, 246, 251);\n\n  let triLength = (width - 2 * border) / num;\n\n  for (let i = 0; i < num; i++) {\n    for (let j = 0; j < num * dim; j++) {\n      push();\n\n      translate(border, border);\n      translate((i * num) / 2.22, (j * num) / 2.22);\n      translate(triLength / 2, triLength / 2);\n\n      rotate((floor(random(0, 4)) * PI) / 2);\n\n      fill(94, 172, 211);\n      triangle(\n        -triLength / 2,\n        -triLength / 2,\n        triLength / 2,\n        -triLength / 2,\n        -triLength / 2,\n        triLength / 2\n      );\n      fill(253, 85, 14);\n      triangle(\n        triLength / 2,\n        triLength / 2,\n        triLength / 2,\n        -triLength / 2,\n        -triLength / 2,\n        triLength / 2\n      );\n\n      pop();\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "aGD2jeaTRj72zqABT",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T02:29:07.449Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "47fdd0a9905bad121f175e47d075e0f3",
        "public_id": "avalanche2023spring/t2q7upc9faddtcd4npx8",
        "version": 1675823477,
        "version_id": "71afd70910a18eb4ba5c5ddf70bb07a2",
        "signature": "6df3aabe2644792a762ede95ddb02f1609220312",
        "width": 900,
        "height": 897,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-08T02:31:17Z",
        "tags": [],
        "bytes": 190128,
        "type": "upload",
        "etag": "94ef561cb1f8e96a2bf0576bcf2d5dd9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675823477/avalanche2023spring/t2q7upc9faddtcd4npx8.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675823477/avalanche2023spring/t2q7upc9faddtcd4npx8.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T04:58:25.197Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T20:10:44.817Z" }
      }
    ],
    "title": "",
    "description": "I decided to reverse engineer my own Piet Mondrian inspired sketch to its base function and see what I could do with it. I didn't have a clear direction with this sketch so I messed around with plugging in the random() function into various parts of the sketch and got this randomized transparent layering out of it.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet shapes;\nlet num = 50;\nlet r;\nlet g;\nlet b;\n\nfunction setup() {\n  createCanvas(600, 600);\n  frameRate(10);\n}\n\nfunction draw() {\n  \n  background(r, g, b);\n  \n  //Generate rectangles that loop \n  \n  for(i = 0; i < num; i++) {\n    fill(random(0, 255), random(0, 255), random(0, 255));\n    stroke(1);\n    strokeWeight(2);\n    translate(random(0, 255));\n    rect(floor(random(-10, 150)) * 5, floor(random(-10, 150)) * 5, 50, 100); \n  }\n  \n  //Generate squares that stay on canvas  \n  \n  for(i = 0; i < num; i++) {\n    fill(random(0, 255), random(0, 255), random(0, 255), 50);\n    stroke(1);\n    strokeWeight(2);\n    translate(random(0, 255));\n    rect(floor(random(-10, 150)) * 5, floor(random(-10, 150)) * 5, 50, 50); \n  }\n}",
    "comments": []
  },
  {
    "_id": "aJrBMT7qP84csaLZj",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-17T20:15:32.962Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b8361d3e06451d54f2449536a404c60d",
        "public_id": "avalanche2023spring/s9xofazzs8kxf2khaubs",
        "version": 1681762638,
        "version_id": "c42ee1bca3396f91ca6029e42c68cd43",
        "signature": "00d7f3c36ca312b1240fea8ff52395df2aa3aaa3",
        "width": 794,
        "height": 790,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-17T20:17:18Z",
        "tags": [],
        "bytes": 50046,
        "type": "upload",
        "etag": "f263023dcb4cefaf972ae0afded0dd55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681762638/avalanche2023spring/s9xofazzs8kxf2khaubs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681762638/avalanche2023spring/s9xofazzs8kxf2khaubs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ec3526123550d152d9f4eef155d3b5e1",
        "public_id": "avalanche2023spring/atyf8kftxhzdhizccuof",
        "version": 1681762777,
        "version_id": "7d713d120a81829f4c950aab3470c9c0",
        "signature": "93480c33e97a4090088ac82e53985e692fbebec8",
        "width": 1200,
        "height": 800,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-17T20:19:37Z",
        "tags": [],
        "bytes": 249891,
        "type": "upload",
        "etag": "138564d5a352011933846f8630ab7f50",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681762777/avalanche2023spring/atyf8kftxhzdhizccuof.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681762777/avalanche2023spring/atyf8kftxhzdhizccuof.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "21cec4fd657a48dc47b746827bec3068",
        "public_id": "avalanche2023spring/sjbmazwoekuncngicdjj",
        "version": 1681762781,
        "version_id": "4f9dd5861ea591168e25b13cceca77f8",
        "signature": "578fa6389f09e45a21f9900cc7e37cf2805f2e6e",
        "width": 500,
        "height": 383,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-17T20:19:41Z",
        "tags": [],
        "bytes": 113186,
        "type": "upload",
        "etag": "65db2ea70b26ae193b823ed18b6d81f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681762781/avalanche2023spring/sjbmazwoekuncngicdjj.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681762781/avalanche2023spring/sjbmazwoekuncngicdjj.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T22:48:42.167Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T01:20:57.628Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T03:49:30.866Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T15:00:15.764Z" }
      }
    ],
    "title": "",
    "description": "One other silly output from ChatGPT when I asked it to create an artwork in the style of Dali. In the comments of ChatGPT's code it references a clock face, mountains, and sun - common elements in Dali's work, but not quite his style",
    "comments": []
  },
  {
    "_id": "aN8jgWYBAFYfaKgn6",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T02:02:44.411Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "987613fac74e9b4d6ba8030eb99a252b",
        "public_id": "avalanche2023spring/ddzblyhgoy22oa6z2gr3",
        "version": 1679623382,
        "version_id": "f548d70a791861de150fb406bebd03e8",
        "signature": "db235cf06f9d9a85bb2aecca0a4d65773923d1f6",
        "width": 5506,
        "height": 7528,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T02:03:02Z",
        "tags": [],
        "bytes": 731255,
        "type": "upload",
        "etag": "a3dd329526c9d7841170ea6e61a52e08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679623382/avalanche2023spring/ddzblyhgoy22oa6z2gr3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679623382/avalanche2023spring/ddzblyhgoy22oa6z2gr3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T02:05:43.932Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T05:28:10.624Z" }
      }
    ],
    "title": "",
    "description": "I generated different kinds of eyes using size.random and point.random!",
    "inspiration_name": "paper.js examples",
    "inspiration_url": "http://paperjs.org/examples/rounded-rectangles/",
    "comments": []
  },
  {
    "_id": "aRKRkgEeYhZu3X746",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T16:27:14.97Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ca0f3fddfe060d2b40dc7f563f3b976b",
        "public_id": "avalanche2023spring/hagljb79vlwnp77vnjns",
        "version": 1680193884,
        "version_id": "b13523700ac12fc78a818e7fb6d71c9d",
        "signature": "66b9631118e29fec4fa2dbd092683c1ae4de2947",
        "width": 748,
        "height": 750,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-30T16:31:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 336793,
        "type": "upload",
        "etag": "1c8c2f55754cd2d4da869b5db1de2d6e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680193884/avalanche2023spring/hagljb79vlwnp77vnjns.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680193884/avalanche2023spring/hagljb79vlwnp77vnjns.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680193884/avalanche2023spring/hagljb79vlwnp77vnjns.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "135160",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "23812",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 165867,
        "duration": 16.244,
        "rotation": 0,
        "nb_frames": 473,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T17:24:54.491Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:36:41.909Z" }
      }
    ],
    "title": "",
    "description": "Tried Polysynth.",
    "code": "//tone synth new instance\nconst synth = new Tone.PolySynth().toMaster();\n\nconst chord1 = {\n  notes: [\"B4\", \"G4\", \"E4\", \"C4\"],\n  length: 2,\n};\n\nconst chord2 = {\n  notes: [\"C5\", \"A4\", \"F4\", \"D4\"],\n  length: 2,\n};\n\nconst chord3 = {\n  notes: [\"A4\", \"G4\", \"C4\", \"D#4\"],\n  length: 1,\n};\n\nconst chord4 = {\n  notes: [\"G4\", \"C4\", \"D#4\", \"G#3\"],\n  length: 1,\n};\n\nconst melody = [\n  chord1,\n  chord2,\n  chord1,\n  chord3,\n  chord4,\n  chord1,\n  chord2,\n  chord1,\n  chord3,\n  chord4,\n];\n\n//trigger a note from synth\n//a note and the duration of note\n\n// function draw() {\n//  // start the audio context\n//   for (let i = 0; i < chordProg; i = i + 1) {\n//     if (mouseIsPressed) {\n//     }\n//  }\n// }\nfunction setup() {\n  createCanvas(800, 800);\n  background(0, 0, 0);\n\n}\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note.notes, Tone.Time(note[1]) - 0.1, t);\n      \n      background(0, 255, 0); //just some indication of what is happening\n    }\n    t += Tone.Time(note[1]);\n  }\n};",
    "comments": []
  },
  {
    "_id": "aSb5amXWS7sjqbbWD",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": { "$date": "2023-04-28T05:05:27.45Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "534d7c23254136d7b087fcd365613ad1",
        "public_id": "avalanche2023spring/jbtxdxc7mrvcmxv1k8ya",
        "version": 1682658399,
        "version_id": "9938dc939e8529955ba8300eb411d76f",
        "signature": "9137d3c65279ff754cb7407c2845b364c899079b",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:06:39Z",
        "tags": [],
        "bytes": 1094987,
        "type": "upload",
        "etag": "c9f7024d706032e1c6827ea6f0ab8467",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658399/avalanche2023spring/jbtxdxc7mrvcmxv1k8ya.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658399/avalanche2023spring/jbtxdxc7mrvcmxv1k8ya.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "af86ece1df935f74ad1cabf933bb714d",
        "public_id": "avalanche2023spring/slqolbqh3dqclhjim9k8",
        "version": 1682658403,
        "version_id": "359b24f7d77b4c439c6ac8dfdce6824d",
        "signature": "387775ac272ed099226e172a476bf41dede44824",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:06:43Z",
        "tags": [],
        "bytes": 1181428,
        "type": "upload",
        "etag": "7c8e313118f978e6844ea0ab7f664734",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658403/avalanche2023spring/slqolbqh3dqclhjim9k8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658403/avalanche2023spring/slqolbqh3dqclhjim9k8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "afe2caff32f93380a26fe26abc7a66c0",
        "public_id": "avalanche2023spring/rllucvwfucwfefhjh9ye",
        "version": 1682658405,
        "version_id": "d05e431abc8bbefc2720f844ed37c1d1",
        "signature": "7baa7b8261eea26e0eb611edaf7f1e5d5678e35a",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:06:45Z",
        "tags": [],
        "bytes": 970017,
        "type": "upload",
        "etag": "91ff1eefb38110d5817fd78062519f08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658405/avalanche2023spring/rllucvwfucwfefhjh9ye.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658405/avalanche2023spring/rllucvwfucwfefhjh9ye.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "A really random attempt at some McDonald's imagery using Midjourney",
    "comments": []
  },
  {
    "_id": "aShLjk5cTQxqXWbzo",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T20:24:52.147Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4b28772fe598d078de851e338ba89b5d",
        "public_id": "avalanche2023spring/gdstqrfuswmj58quejav",
        "version": 1677184440,
        "version_id": "ec3d825874cee24807285d6a49c8fb2b",
        "signature": "c975fd70d31c62b0797848840ca06bd751676fda",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T20:34:00Z",
        "tags": [],
        "bytes": 3834938,
        "type": "upload",
        "etag": "5d8e6395e6689fe51e05a1b150f7fbd6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677184440/avalanche2023spring/gdstqrfuswmj58quejav.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677184440/avalanche2023spring/gdstqrfuswmj58quejav.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "df54f04777cd76523b419f67c6ab61a3",
        "public_id": "avalanche2023spring/t8mknqcebvkrknhk0tx5",
        "version": 1677184502,
        "version_id": "ee4e6e06cbe7798304987537947cde33",
        "signature": "e423c6e89b7983b795feb21d01e6be3160f23c74",
        "width": 1592,
        "height": 1410,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T20:35:02Z",
        "tags": [],
        "bytes": 3676364,
        "type": "upload",
        "etag": "db21801c5000228ddf607f1902e32dc1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677184502/avalanche2023spring/t8mknqcebvkrknhk0tx5.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677184502/avalanche2023spring/t8mknqcebvkrknhk0tx5.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "comments": [],
    "description": "I really liked Chris' original code (second image) - I tried tweaking the noise and blend modes to build on the fabric-like feel I got out of the original sketch"
  },
  {
    "_id": "aSoBuyQhscysfDMJG",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T17:12:31.677Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0787d38446c5a611a46c081ea4351602",
        "public_id": "avalanche2023spring/ava3ra1yja9km0sgmxkc",
        "version": 1683911828,
        "version_id": "e3f4751745cc3eda32d5909583fee3b8",
        "signature": "53d1ffd1ae0fd6c06ec5377e86005c4b5792cfcf",
        "width": 896,
        "height": 872,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T17:17:08Z",
        "tags": [],
        "bytes": 36878,
        "type": "upload",
        "etag": "ff792f88bea56a3b05febd0acb3c828f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683911828/avalanche2023spring/ava3ra1yja9km0sgmxkc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683911828/avalanche2023spring/ava3ra1yja9km0sgmxkc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "MY FUNkY PIG",
    "comments": []
  },
  {
    "_id": "aazFWJBiGpZYXp7QS",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T16:19:34.044Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3ad4cc891b865d7bc4524fee9221df87",
        "public_id": "avalanche2023spring/idlwfe39jgd5qp9z0yvy",
        "version": 1676481669,
        "version_id": "f8adcfb7cdc0a5819b35dffc556f344d",
        "signature": "aeedd7c4239f2d6c4da1842010bf2f5ca8177b64",
        "width": 556,
        "height": 560,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-15T17:21:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 18788613,
        "type": "upload",
        "etag": "c5d3931c3dcfa3e630c93dd42e876a07",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676481669/avalanche2023spring/idlwfe39jgd5qp9z0yvy.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676481669/avalanche2023spring/idlwfe39jgd5qp9z0yvy.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676481669/avalanche2023spring/idlwfe39jgd5qp9z0yvy.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "Constrained Baseline",
          "bit_rate": "1699259",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 1700326,
        "duration": 88.4,
        "rotation": 0,
        "nb_frames": 2652,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T17:51:17.969Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T19:37:27.746Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T00:13:59.847Z" }
      }
    ],
    "title": "",
    "description": "I love experimenting with graphic aesthetic and art hence I tried  a sketch with pixel aesthetics.",
    "code": "function setup() {\n  createCanvas(600, 600);\n  background(0, 0, 0);\n  noStroke();\n}\n\nfunction draw() {\n  // background(220);\n  var n = noise(millis() / 1000);\n  y = map(n, 0, 1, -100, 100);\n\n  for (let i = 0; i < 8; i = i + 0.15) {\n    for (let j = 0; j < 250; j = j + 15) {\n      fill(random(0, 255), random(0, 255), random(0, 255));\n      rect((0+ y) * i, height/2+ j, 10, 10);\n      rect(width/2 + j, (0 + y) * i, 10, 10);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "am6XHKKNwKQYjkxDp",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T05:39:34.295Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "426e726714f95d72dad31abe6e2ad5f7",
        "public_id": "avalanche2023spring/islcy998e41zcqko2gkn",
        "version": 1680846098,
        "version_id": "4a702eaccc13f4d82595eac004a3fc9b",
        "signature": "44f1a948e67e96f03de52ad6f65b149a37b20765",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T05:41:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 2717724,
        "type": "upload",
        "etag": "5aa390428a21fa1641f24411432755a3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680846098/avalanche2023spring/islcy998e41zcqko2gkn.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680846098/avalanche2023spring/islcy998e41zcqko2gkn.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680846098/avalanche2023spring/islcy998e41zcqko2gkn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125791",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "151207",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 594308,
        "duration": 36.583333,
        "rotation": 0,
        "nb_frames": 2256,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "897a2b3e3c6bad651f2fcfbd0fd8ccf6",
        "public_id": "avalanche2023spring/dbcfiefz7ydxm88iv6ar",
        "version": 1680846119,
        "version_id": "959bccc1512afcb184871fffbdbd0568",
        "signature": "c367c0c651506da5307d7103afb14924cb511f04",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T05:41:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 1867882,
        "type": "upload",
        "etag": "f8702a76fd35a5a775e6b34fc8a7a4ad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680846119/avalanche2023spring/dbcfiefz7ydxm88iv6ar.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680846119/avalanche2023spring/dbcfiefz7ydxm88iv6ar.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680846119/avalanche2023spring/dbcfiefz7ydxm88iv6ar.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128494",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "162188",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 611167,
        "duration": 24.45,
        "rotation": 0,
        "nb_frames": 1526,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7dfd18a6687b072de9857dda65357573",
        "public_id": "avalanche2023spring/xhfvuhdy3q4j7fd4ozng",
        "version": 1680846333,
        "version_id": "88de7fd346d5ae0dfe4df49fc8dfef3d",
        "signature": "8582ffa88126a066fd2424159077c04bbdb4dc53",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T05:45:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 2277019,
        "type": "upload",
        "etag": "50189c7ea8c883f91910119ff7f2739e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680846333/avalanche2023spring/xhfvuhdy3q4j7fd4ozng.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680846333/avalanche2023spring/xhfvuhdy3q4j7fd4ozng.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680846333/avalanche2023spring/xhfvuhdy3q4j7fd4ozng.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126226",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "175900",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 624553,
        "duration": 29.166667,
        "rotation": 0,
        "nb_frames": 1811,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T15:35:28.466Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:31:28.051Z" }
      }
    ],
    "title": "",
    "description": "**Match 3 Tile Puzzle**: Each game randomly positions colored tiles, match three of the same color to make them disappear, clear the board to win. For this game's challenge to be apparent, it is necessary to be able to layer many more tiles, however I'm still having trouble with selecting the tile that is on the top of a pile when tiles overlap. Also wanted to make custom tiles but ran out of time. Watch me win in the 3rd video!",
    "comments": [],
    "code": "let tiles = [];\nlet tileNum = 27;\nlet xPos = [50, 75, 100, 125, 150, 175, 200, 225, 250, 275, 300, 325, 350, 375, 400, 425, 450];\nlet yPos = [75, 100, 125, 150, 175, 200, 225, 250, 275, 300, 325, 350, 375, 400, 425, 450];\n\nlet tilePictures = [];\nlet selection1=999, selection2=998, selection3=997;\nlet numSelected = 0;\n\nlet cardWidth = 45;\nlet cardHeight = 70;\n\nlet score = 0;\n\nfunction setup() {\n    createCanvas(500, 500);\n    colorMode(HSL, 100);\n\n    \n\n    for (let i = 0; i < tileNum; i++) {\n        tiles[i] = { \n            \"sprite\":createSprite(random(xPos), random(yPos), cardWidth, cardHeight),\n            \"tileType\":i%9,\n            \"selected\": false,\n            \"index\": i,\n        };\n        tiles[i].sprite.shapeColor = color((i%9)*11, 50, 50);\n        tiles[i].sprite.setCollider('rectangle', 0, 0, cardWidth, cardHeight);\n        tiles[i].sprite.mouseActive;\n    }\n\n}\n\nfunction draw() {\n    background(\"black\");\n\n    \n\n    drawSprites();\n\n    push();\n    fill(\"white\");\n    textSize(20);\n    textAlign(CENTER, CENTER);\n    text (\"Score: \", 250, 20);\n    text (score, 290, 20);\n    text (\" / 9\", 310, 20);\n    pop();\n\n    if (score == 9) {\n        push();\n        fill(\"white\");\n        textSize(100);\n        textAlign(CENTER, CENTER);\n        text (\"YOU WON\", 250, 250);\n        pop();\n    }\n\n}\n\nfunction mouseClicked() {\n    for (let i = 0; i < tileNum; i++) {\n        tiles[i].sprite.onMousePressed = function() {\n            if (numSelected < 3) {\n            tiles[i].sprite.shapeColor = color(255, 255, 255);\n            tiles[i].selected = true;\n            numSelected ++;\n            if (numSelected == 1) {\n                selection1 = tiles[i];\n            } else if (numSelected == 2) {\n                selection2 = tiles[i];\n            } else if (numSelected == 3) {\n                selection3 = tiles[i];\n            }\n            console.log (i);\n            }\n        }\n    }\n\n    if (numSelected == 3) {\n        if (selection1.tileType === selection2.tileType) {\n            if (selection2.tileType === selection3.tileType) {\n                tiles[selection1.index].sprite.remove();\n                tiles[selection2.index].sprite.remove();\n                tiles[selection3.index].sprite.remove();\n                score++;\n            }\n\n            else {\n                tiles[selection1.index].sprite.shapeColor = color((selection1.index%9)*11, 50, 50);\n                tiles[selection2.index].sprite.shapeColor = color((selection2.index%9)*11, 50, 50);\n                tiles[selection3.index].sprite.shapeColor = color((selection3.index%9)*11, 50, 50);\n            }\n        }\n\n        else {\n            tiles[selection1.index].sprite.shapeColor = color((selection1.index%9)*11, 50, 50);\n            tiles[selection2.index].sprite.shapeColor = color((selection2.index%9)*11, 50, 50);\n            tiles[selection3.index].sprite.shapeColor = color((selection3.index%9)*11, 50, 50);\n        }\n\n        selection1=999; selection2=998; selection3=997;\n        numSelected=0;\n    }\n}"
  },
  {
    "_id": "ar2hfMWMQJZvMxuec",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T19:34:00.428Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "481b343b86f466f8d3358ecb3093cfc0",
        "public_id": "avalanche2023spring/wqbvg8g2iozrjerersw9",
        "version": 1678390452,
        "version_id": "274be16f271500a91dc366c7ff7659ee",
        "signature": "88c3c8e2d73731fbbf81a732442c26257d1905f2",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:34:12Z",
        "tags": [],
        "bytes": 123968,
        "type": "upload",
        "etag": "4ae08b50eaefd99584a13c9debdd1ca9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678390452/avalanche2023spring/wqbvg8g2iozrjerersw9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678390452/avalanche2023spring/wqbvg8g2iozrjerersw9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "47adb78a5407539249cd0b3eeaa11123",
        "public_id": "avalanche2023spring/r4lhklxuymrqpycktcpb",
        "version": 1678390462,
        "version_id": "6766b95015ba1143d64f283f18963b03",
        "signature": "3677d3db739446270945cd5eb988e87b05d520e4",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:34:22Z",
        "tags": [],
        "bytes": 114512,
        "type": "upload",
        "etag": "12d78439f0355129b1996bc13d79391a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678390462/avalanche2023spring/r4lhklxuymrqpycktcpb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678390462/avalanche2023spring/r4lhklxuymrqpycktcpb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d6953106c98b37d228526c85b6105cdf",
        "public_id": "avalanche2023spring/ayuty1ytq1tt3u5ujzbv",
        "version": 1678390467,
        "version_id": "1e52940863ff2d43ddac9ae935ceeffb",
        "signature": "31c16c623d971a0dfe5f819708532147cf2a341b",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T19:34:27Z",
        "tags": [],
        "bytes": 114721,
        "type": "upload",
        "etag": "fd4ea07ca32bcf0b034857c02e46d2d7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678390467/avalanche2023spring/ayuty1ytq1tt3u5ujzbv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678390467/avalanche2023spring/ayuty1ytq1tt3u5ujzbv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T04:13:19.778Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T06:12:24.174Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:07.297Z" }
      }
    ],
    "title": "",
    "description": "**Three Effects on Changing just 1 Operator** in the expression setting the color of each pixel: c = color(noise(x * y) * sin(x * y), 0.7, 1); [Color Mode HSL]",
    "code": "function setup() {\n  createCanvas(600, 600);\n  colorMode(HSB, 1);\n}\n\nfunction draw() {\n  background(0);\n\n  img = createImage(100, 100);\n  img.loadPixels();\n  let c;\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      \n        c = color(noise(x*y)*sin(x*y), 0.7, 1);\n      \n      img.set(x, y, c);\n    }\n  }\n\n  img.updatePixels();\n\n  noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "b24thte5g4xAWXPgu",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": { "$date": "2023-02-03T15:45:20.794Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fb2394f8f327b334ea88151b0c6fdf3c",
        "public_id": "avalanche2023spring/x0qmb2ltxs6x8kadydyn",
        "version": 1675439224,
        "version_id": "2b9934a416873e35f520651eba6526af",
        "signature": "eef270723725568d423fcb7d8d71afad0578df5a",
        "width": 1240,
        "height": 966,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T15:47:04Z",
        "tags": [],
        "bytes": 1886287,
        "type": "upload",
        "etag": "18b8db84dfd6ee2dc90e0b273c8e2273",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675439224/avalanche2023spring/x0qmb2ltxs6x8kadydyn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675439224/avalanche2023spring/x0qmb2ltxs6x8kadydyn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3eb39e17d6c33ae3c0ffc360e36fff0c",
        "public_id": "avalanche2023spring/jpefbpcia0mgfm9qk5db",
        "version": 1675439277,
        "version_id": "bfe79abfe3fcabd7f559aa83b3856bc3",
        "signature": "36f270f6af6a6266042b1c74e24791b37f86f7b2",
        "width": 778,
        "height": 1332,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T15:47:57Z",
        "tags": [],
        "bytes": 169152,
        "type": "upload",
        "etag": "e10a812b526926cbe9d923ff30260481",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675439277/avalanche2023spring/jpefbpcia0mgfm9qk5db.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675439277/avalanche2023spring/jpefbpcia0mgfm9qk5db.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T16:25:11.438Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T17:22:32.085Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T18:02:01.115Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "My sketch based on Aabha's instructions! My version of Tweety is definitely off brand :)",
    "comments": []
  },
  {
    "_id": "b7Dn4JJtkDDmkMCWB",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-11T03:18:07.207Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "003ca732eda35178b17fbe2bc51f6365",
        "public_id": "avalanche2023spring/zsbo5gadysy9zhgfdnzf",
        "version": 1683776443,
        "version_id": "2d25407bacfb0138d390110d827fb559",
        "signature": "2eb53a467cfdd49986f08a19616aa160ee58dc69",
        "width": 640,
        "height": 640,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-11T03:40:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 4662928,
        "type": "upload",
        "etag": "a126234439d53250486f37d19cd6678e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683776443/avalanche2023spring/zsbo5gadysy9zhgfdnzf.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683776443/avalanche2023spring/zsbo5gadysy9zhgfdnzf.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683776443/avalanche2023spring/zsbo5gadysy9zhgfdnzf.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "6079884",
          "dar": "1:1",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6088036,
        "duration": 6.127333,
        "rotation": 0,
        "nb_frames": 369,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1243b7c8e1b37ef13267e9bddbf35774",
        "public_id": "avalanche2023spring/r4klwwlv1fsum7fgxtkt",
        "version": 1683776492,
        "version_id": "af87c4e46f381b320fc3ab4d4f222b83",
        "signature": "c773dc3800cf7dff217fa370e5f49be8f13e5ced",
        "width": 976,
        "height": 978,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T03:41:32Z",
        "tags": [],
        "bytes": 85006,
        "type": "upload",
        "etag": "ac82f0bc358e9469270978e348e91147",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683776492/avalanche2023spring/r4klwwlv1fsum7fgxtkt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683776492/avalanche2023spring/r4klwwlv1fsum7fgxtkt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "885179011fd47452af845794ddbc5dc2",
        "public_id": "avalanche2023spring/zyxvz8rydd1nqz0vnpj9",
        "version": 1683776496,
        "version_id": "2e63ac5225736f1bb68b1ce6271da11b",
        "signature": "0c707c20206820fda003d220f8984e8a07b0a4f8",
        "width": 976,
        "height": 978,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T03:41:36Z",
        "tags": [],
        "bytes": 88836,
        "type": "upload",
        "etag": "84f1ae80d61a21494d8a9a17cbafb5d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683776496/avalanche2023spring/zyxvz8rydd1nqz0vnpj9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683776496/avalanche2023spring/zyxvz8rydd1nqz0vnpj9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "I started with the code for the Spirograph and adapted and added different instructions for the turtle to create this spinning visual. The stills show what it looks like when a single frame is captured",
    "comments": []
  },
  {
    "_id": "bA6uFuPwdLN7qsxMt",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T17:03:30.365Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b1bff2c4378b598e53714c23a677cefb",
        "public_id": "avalanche2023spring/kmatq11wi5sb82yu51dd",
        "version": 1678381421,
        "version_id": "61d59107e0637d8cb1d2dc1a574e1a97",
        "signature": "04eb0ee18b6690b5f04d0103b52699171e513d0e",
        "width": 625,
        "height": 622,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T17:03:41Z",
        "tags": [],
        "bytes": 3302,
        "type": "upload",
        "etag": "4deaba291dd297684ce861c076401bd6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678381421/avalanche2023spring/kmatq11wi5sb82yu51dd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678381421/avalanche2023spring/kmatq11wi5sb82yu51dd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T19:50:22.915Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:38.372Z" }
      }
    ],
    "title": "",
    "description": "I drew an apple pixel by pixel",
    "comments": []
  },
  {
    "_id": "bAXSMFs5jj3RYW5qj",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T14:43:24.366Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "21511af1bcf25c4f4a02c6f1fae6d1dd",
        "public_id": "avalanche2023spring/cjqtzqgumzqczecspkai",
        "version": 1680878659,
        "version_id": "067cdc6664cae5321fd98cd7279f97ab",
        "signature": "d57d9bee0c201c8df74c0ed9d2691c9c8115e607",
        "width": 1888,
        "height": 1164,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T14:44:19Z",
        "tags": [],
        "bytes": 1548859,
        "type": "upload",
        "etag": "1b08041315de85090b6700bad1704d03",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680878659/avalanche2023spring/cjqtzqgumzqczecspkai.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680878659/avalanche2023spring/cjqtzqgumzqczecspkai.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4aaba8093e42e641b04fd4745e6e07de",
        "public_id": "avalanche2023spring/lkl9uetcbktnnct80sru",
        "version": 1680878811,
        "version_id": "814bb4dcc7cd5b1d2b8e1876f2d3079b",
        "signature": "c58914255f072514ac6fb9f238a59726e4c32aa4",
        "width": 1908,
        "height": 1180,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T14:46:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 19410592,
        "type": "upload",
        "etag": "0f98a3ef18ac3c0a6ade16dba4fd5424",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680878811/avalanche2023spring/lkl9uetcbktnnct80sru.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680878811/avalanche2023spring/lkl9uetcbktnnct80sru.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680878811/avalanche2023spring/lkl9uetcbktnnct80sru.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128625",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "High",
          "bit_rate": "5728998",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5869103,
        "duration": 26.457,
        "rotation": 0,
        "nb_frames": 1587,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 9 (4/4): This is not necessarily a game or multiplayer but I just couldnt get anywhere with the p5play so YOU CNA HAVE THIS. I ALSO MADE THIS ON UNITY",
    "comments": []
  },
  {
    "_id": "bFx7zEznh5zYghwF3",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-22T02:01:10.506Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6364490547283fd576d206fb31ab19fd",
        "public_id": "avalanche2023spring/n8izmmr7xxmp8wgadkgk",
        "version": 1677031318,
        "version_id": "845ddddb42233bf7c899bbf35fa6726a",
        "signature": "a030757ec806496fb95c8d74bec846ca848e6e6e",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-22T02:01:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 16178267,
        "type": "upload",
        "etag": "3422afe86afd30d4250c440d6157c373",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677031318/avalanche2023spring/n8izmmr7xxmp8wgadkgk.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677031318/avalanche2023spring/n8izmmr7xxmp8wgadkgk.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677031318/avalanche2023spring/n8izmmr7xxmp8wgadkgk.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "31205433",
          "dar": "794:797",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 36201423,
        "duration": 3.575167,
        "rotation": 0,
        "nb_frames": 233,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T04:46:08.106Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T10:26:35.556Z" }
      }
    ],
    "title": "",
    "description": "Channeling my inner panda thinking about bamboos 🎋🐼",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(800, 800);\n  // frameRate(40)\n\n  rectMode(CENTER);\n  \n}\n\nfunction draw() {\n  background(201, 230, 149);\n\n  // if (dist(mouseX, mouseY, px, py) > 30) {\n    push();\n    translate(width/2, height/2);\n    if (mouseX < width/2) {\n      rotate(PI + atan((mouseY - height/2) / (mouseX - width/2)));\n    } else {\n      rotate(atan((mouseY - height/2) / (mouseX - width/2)));\n    }\n\n    // push();\n    // rotate(PI / 2);\n    drawGrid();\n    // pop();\n\n    pop();\n}\n\nfunction drawGrid(){\n  \n  for(let i=-width; i<width; i+=50){\n    for(let j=-height; j<height; j+=50){\n      \n      stroke(112, 102, 74);\n      \n      let n;\n      \n      n = noise(i*0.01, j*0.01)*200-100\n      \n      let p;\n      p=noise(i, j)*6-3\n      \n      strokeWeight(2)\n      \n      fill(247+n, 232+n, 193+n)\n rect(j, i+j, 50, 20)\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "bKHqinQ2xW3ey8jA8",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-07T16:57:48.195Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "11734c69fe0be1cb4e94d8f3d54fd800",
        "public_id": "avalanche2023spring/icgecwogftd8kaz5qbwq",
        "version": 1678208274,
        "version_id": "9f939f63ea801a8748ddb7b72a120b45",
        "signature": "6f2bdbf85a8bd0edef054254eb88ebd129b5d91b",
        "width": 640,
        "height": 480,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-07T16:57:54Z",
        "tags": [],
        "bytes": 31972,
        "type": "upload",
        "etag": "7ebeecd3bdbc3c4c86b18d4974f6c98c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678208274/avalanche2023spring/icgecwogftd8kaz5qbwq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678208274/avalanche2023spring/icgecwogftd8kaz5qbwq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "daf14fe4fc3a5c9b5665837165a1afb4",
        "public_id": "avalanche2023spring/vxnmwue2piccxupnsaw0",
        "version": 1678208279,
        "version_id": "da206aae3bd22cf4c71a382c37de0e08",
        "signature": "641f1b680078e0694810fe45a2ccc2400fb4c6c1",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-07T16:57:59Z",
        "tags": [],
        "bytes": 209122,
        "type": "upload",
        "etag": "aeb0d74e2511c67b8b6e2b65f2945d8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678208279/avalanche2023spring/vxnmwue2piccxupnsaw0.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678208279/avalanche2023spring/vxnmwue2piccxupnsaw0.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T20:53:48.287Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T23:14:29.672Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:08.611Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T17:32:23.68Z" }
      }
    ],
    "title": "",
    "description": "I was playing a Chained Echos last night. I liked the pixel art for a city in the game so I took a screen grab thinking I might try to recreate the city with code. This morning, I ended up working on the mountain instead. I didn't really think about a broad strategy up front. I started with drawing a ridge line, and then started shading the left and right side. Then added some noise to the colors, then added some noise to make the sides less flat. Lots of trial and error, backing up, trying different things. I worked for about an hour and for 55 minutes i didn't much like how it looked. It turned a corner right at the end. I like where it is now, but now I want to make it better.",
    "inspiration_name": "Chained Echos",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\n\nlet mainImage;\n\nlet bluePalette;\n\nconst W = 320;\nconst H = 240;\nfunction setup() {\n  const c = createCanvas(W, H).canvas;\n  c.style.width = `${W * 4}px`;\n  c.style.height = `${H * 4}px`;\n  c.style.imageRendering = \"pixelated\";\n  mainImage = createImage(320, 240);\n  noiseDetail(4, 0.5);\n  noLoop();\n\n  bluePalette = [\n    buildPalette([55, 55, 75, 255], [200, 220, 255, 255], 4),\n    buildPalette([200, 220, 255, 255], [245, 250, 255, 255], 3),\n  ].flat();\n}\n\nfunction draw() {\n  background(\"black\");\n\n  mainImage.loadPixels();\n\n  let x = 180; // randomInt(W * 0.25, W * 0.75);\n  let y = 10; // randomInt(H * -0.25, H * 0.25);\n\n  for (let i = 0; i < 200; i++) {\n    y += noiseInt(i * 0.3, 0, 0, 1, 2);\n    x += noiseInt(i * 0.3, 0, 1, -1, 2);\n\n    // ridge\n    setPixel(mainImage, x, y, bluePalette[3]);\n\n    let bump = 0;\n    for (let ii = 0; ii < 200; ii++) {\n      bump += noiseInt(ii * 0.3, 0, 2, -1, 2);\n      // left\n      const bright = noiseInt(\n        //\n        i * 0.2,\n        ii * 0.1,\n        0,\n        4,\n        7\n      );\n\n      setPixel(mainImage, x - ii, y + ii + bump, bluePalette[bright]);\n      setPixel(mainImage, x - ii, y + ii + 1 + bump, bluePalette[bright]);\n      setPixel(mainImage, x - ii, y + ii + 2 + bump, bluePalette[bright]);\n    }\n\n    bump = 0;\n    for (let ii = 0; ii < 200; ii++) {\n      bump += noiseInt(ii * 0.3, 0, 2, -1, 2);\n      // right\n      const dark = noiseInt(\n        //\n        i * 0.2,\n        ii * 0.1,\n        0,\n        0,\n        3\n      );\n      setPixel(mainImage, x + ii, y + ii + bump, bluePalette[dark]);\n      setPixel(mainImage, x + ii, y + ii + 1 + bump, bluePalette[dark]);\n      setPixel(mainImage, x + ii, y + ii + 2 + bump, bluePalette[dark]);\n    }\n  }\n\n  mainImage.updatePixels();\n\n  noSmooth();\n  image(mainImage, 0, 0, width, height);\n}\n\n// math utils\n\nfunction buildPalette(a, b, steps) {\n  const palette = [];\n  for (let i = 0; i < steps; i++) {\n    palette.push(blendColor(a, b, i / (steps - 1)));\n  }\n  return palette;\n}\n\nfunction clamp(value, minimum, maximum) {\n  if (value < minimum) return minimum;\n  if (value > maximum) return maximum;\n  return value;\n}\n\nfunction randomInt(a, b) {\n  return floor(random(a, b));\n}\n\nfunction noiseInt(x, y, z, a, b) {\n  noiseDetail(1);\n  return floor(map(noise(x, y, z), 0, 0.5, a, b));\n}\n\n// color utils\n\nfunction blendColor(a, b, mix) {\n  return [\n    lerp(a[0], b[0], mix),\n    lerp(a[1], b[1], mix),\n    lerp(a[2], b[2], mix),\n    lerp(a[3], b[3], mix),\n  ];\n}\n\nfunction lightestColor(a, b) {\n  return [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2]), max(a[3], b[3])];\n}\n\nfunction setPixel(img, x, y, color) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return;\n  }\n\n  const i = (clampY * img.width + clampX) * 4;\n  img.pixels[i] = color[0];\n  img.pixels[i + 1] = color[1];\n  img.pixels[i + 2] = color[2];\n  img.pixels[i + 3] = color[3];\n}\n\nfunction getPixel(img, x, y) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return [0, 0, 0, 0];\n  }\n  const i = (clampY * img.width + clampX) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction keyPressed() {\n  if (key === \"S\") {\n    save(\"canvas.jpg\");\n  }\n}",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "just looked at the code but it is still so wild to me that this wasn't built off of a reference input image. ",
        "created_at": { "$date": "2023-03-09T21:23:29.835Z" }
      }
    ]
  },
  {
    "_id": "bLLyYvTecCtqP48JT",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T05:00:47.102Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4dd82c2b7f9987cd8b8de1f0bc6f3851",
        "public_id": "avalanche2023spring/ugrghtrggspp4kwicr8o",
        "version": 1676610062,
        "version_id": "8fea63716a6f50d6061285042404b48f",
        "signature": "d5c7900cbf92680d6a91c8b7ec851136b60d0210",
        "width": 3200,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T05:01:02Z",
        "tags": [],
        "bytes": 4593732,
        "type": "upload",
        "etag": "afd5ea7af82c6ca16885daa3da022cc4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676610062/avalanche2023spring/ugrghtrggspp4kwicr8o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676610062/avalanche2023spring/ugrghtrggspp4kwicr8o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T16:41:59.892Z" }
      }
    ],
    "title": "",
    "description": "I was trying to make something based off of Tyler Hobb's work. It didn't turn out quite how I wanted, but maybe I'll come back to this again another week",
    "comments": [
      {
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "comment": "i really like the thumbnail here, scaling it down a bit was enough to lose the \"circles\" ",
        "created_at": { "$date": "2023-02-17T16:42:36.333Z" }
      }
    ]
  },
  {
    "_id": "bW2zJcTNk7Q4g6m4p",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T16:08:15.422Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3d3631731eec56306dca749c95cd7275",
        "public_id": "avalanche2023spring/xscz1vzc7uadnc8nmnqk",
        "version": 1680883699,
        "version_id": "473617bfe741c76c9f3b9632d74d7535",
        "signature": "da15cec8d8238ecc0c924488ea3be6a231c0fbbe",
        "width": 1016,
        "height": 984,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T16:08:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 564813,
        "type": "upload",
        "etag": "656bf6f4b622ea2b858facd661b0633f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680883699/avalanche2023spring/xscz1vzc7uadnc8nmnqk.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680883699/avalanche2023spring/xscz1vzc7uadnc8nmnqk.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680883699/avalanche2023spring/xscz1vzc7uadnc8nmnqk.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "94317",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "385810",
          "dar": "127:123",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 490253,
        "duration": 9.216667,
        "rotation": 0,
        "nb_frames": 553,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T20:36:02.472Z" }
      }
    ],
    "title": "",
    "description": "Was playing around with ball movement and directions! I was trying to have the ball slide/drag down each sprite, but ran out of time. So for now, it's a bouncy ball",
    "comments": []
  },
  {
    "_id": "bctJdtTEP9F7AgQvy",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T04:12:58.062Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ad2e6c9590f82bec9a47507b435f79b3",
        "public_id": "avalanche2023spring/cwco8cctf0blyfj7x4v8",
        "version": 1681963985,
        "version_id": "2c963d8d0566f6c1cc2205e8316e6182",
        "signature": "c60987771473c1b4259176aa17f51a2720c87543",
        "width": 724,
        "height": 1170,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-20T04:13:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 812789,
        "type": "upload",
        "etag": "cec546ab1603a507fc27746acd9722f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681963985/avalanche2023spring/cwco8cctf0blyfj7x4v8.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681963985/avalanche2023spring/cwco8cctf0blyfj7x4v8.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681963985/avalanche2023spring/cwco8cctf0blyfj7x4v8.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "317686",
          "dar": "362:585",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 324304,
        "duration": 20.05,
        "rotation": 0,
        "nb_frames": 1203,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bc76192e388b883faeb5b586c1d48436",
        "public_id": "avalanche2023spring/wg4zecpikjwhvhti0ygw",
        "version": 1681963992,
        "version_id": "f2056d5643958b52fc5238260a976517",
        "signature": "2a0a9297b9ea68613ea7627aa869a947f1e85bb7",
        "width": 706,
        "height": 698,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-20T04:13:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 2837025,
        "type": "upload",
        "etag": "5394ec21e6adf69c7fe9b3bf20265aa1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681963992/avalanche2023spring/wg4zecpikjwhvhti0ygw.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681963992/avalanche2023spring/wg4zecpikjwhvhti0ygw.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681963992/avalanche2023spring/wg4zecpikjwhvhti0ygw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "3166993",
          "dar": "353:349",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3174293,
        "duration": 7.15,
        "rotation": 0,
        "nb_frames": 429,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6f2b520d544742e45baeedd746c4afa6",
        "public_id": "avalanche2023spring/oxmszm2uueiqw0zrpznz",
        "version": 1681964000,
        "version_id": "8c44a605b5d30c0fb26c09302cbf2771",
        "signature": "61684efeb0fb38ef30c15ef493808e68ee116f61",
        "width": 706,
        "height": 764,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-20T04:13:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 2804812,
        "type": "upload",
        "etag": "0a73f86537b3e1a7056692553f75f5b3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681964000/avalanche2023spring/oxmszm2uueiqw0zrpznz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681964000/avalanche2023spring/oxmszm2uueiqw0zrpznz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681964000/avalanche2023spring/oxmszm2uueiqw0zrpznz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2008493",
          "dar": "353:382",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2015433,
        "duration": 11.133333,
        "rotation": 0,
        "nb_frames": 667,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T06:44:08.31Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:36:03.392Z" }
      }
    ],
    "title": "",
    "description": "I asked chatGPT to complete the face generator challenge from the parameters week. I asked it to recreate what I had made, which used type and punctuation as the facial features. It completed the task very quickly, but what it really had issues with was changing the face shape from a square to a circle. After some troubleshooting, it got it right! \n\nI then asked chatGPT to think of other creative, more unconventional ways to make a face generator. It suggested making a face generator out of particles, like fireworks. I asked it to write that code for me. It did something cool (second video), but when I made modifications, it would leave out certain parts of the code, or completely change it and make something different (video 3). Towards the end, chatGPT would write out code but stop midway. It did that repeatedly , and then I ran out of time. Not sure if this is a temporary bug! Either way very cool to experiment with.",
    "comments": []
  },
  {
    "_id": "bhuXEAxH4reZNfd29",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T00:30:56.021Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d927c98dee84ae18834f548f04d13b1f",
        "public_id": "avalanche2023spring/w1pza1mt5ssnmkcd4opu",
        "version": 1681345870,
        "version_id": "00665069c8b130ddb6f5e738f1a21926",
        "signature": "49e5dd1175fd2e7e0b50e7fa32836a95c6261309",
        "width": 1194,
        "height": 968,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T00:31:10Z",
        "tags": [],
        "bytes": 544104,
        "type": "upload",
        "etag": "4f6d7006a55b2222b3268b3c172a2002",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681345870/avalanche2023spring/w1pza1mt5ssnmkcd4opu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681345870/avalanche2023spring/w1pza1mt5ssnmkcd4opu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bb786e83fe17ca8332d7d2dfeb835e1b",
        "public_id": "avalanche2023spring/qzwckajmjaxlq4spfa9b",
        "version": 1681345873,
        "version_id": "997610e4c6dc327fb6b6b25a283442bd",
        "signature": "e726674073ff927f388cc97b1fe0cb5640a63755",
        "width": 1282,
        "height": 1014,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T00:31:13Z",
        "tags": [],
        "bytes": 199546,
        "type": "upload",
        "etag": "3a85e5dcfba0a5fc14dbf71c630aba6e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681345873/avalanche2023spring/qzwckajmjaxlq4spfa9b.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681345873/avalanche2023spring/qzwckajmjaxlq4spfa9b.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dacfea8537fc55fb1335da8fc210ca09",
        "public_id": "avalanche2023spring/f6sloao22nvjzg5bt1tr",
        "version": 1681345886,
        "version_id": "73f27cd5faf3f2c4884d096f14d46076",
        "signature": "5f4feb173262571259d649912bf903a8c15b4c22",
        "width": 1288,
        "height": 746,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T00:31:26Z",
        "tags": [],
        "bytes": 167593,
        "type": "upload",
        "etag": "ab008131e6ae95c4bfe9ad67ab172eef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681345886/avalanche2023spring/f6sloao22nvjzg5bt1tr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681345886/avalanche2023spring/f6sloao22nvjzg5bt1tr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T01:35:25.848Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T16:16:48.859Z" }
      }
    ],
    "title": "",
    "description": "DT Bio Generator: Tired of always having to write 10 different bios to apply for 10 different opportunities? Look no further! This SUPER-sophisticated text generator will always offer you the perfect mish-mash of all the important industry buzzwords to impress your next interviewer!",
    "inspiration_name": "Me",
    "comments": [
      {
        "commenter_id": "me69bqQXDu4jtokwu",
        "comment": "need",
        "created_at": { "$date": "2023-04-13T01:35:30.626Z" }
      }
    ],
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n        top: [\"#div#\"],\n    div: [\n        '<div style=\"color: rgb(150,150,150); text-align: left;  font-family: helvetica ; font-size: 5vw;  100px; margin: 50px; padding: 10px\">#story#</div>',\n    ],\n    story: [\"I am #phrase1# working at the intersection of #phrase2#. My practice involves the use of #phrase3#.\"],\n    phrase1: [\"#discipline# #adstyle# #nounstyle#\", \"#adstyle.a# #nounstyle#\"],\n    phrase2:[\"#mediumstyle# and #medium2style#\"],\n    phrase3:[\"#theme# and #theme#\", \"#theme#, #theme#, and #theme#\"],\n    discipline: ['<span style=\"color: teal; font-family: helvetica \">#disciplineword.a#</span>'],\n    disciplineword: [\n        \"multidisciplinary\",\n        \"interdisciplinary\",\n        \"new media\"\n    ],\n    \n    adstyle: ['<span style=\"color: teal; font-family: helvetica \">#adjective#</span>'],\n    adjective: [ \"poetic\",\n    \"computational\",\n    \"technical\",\n    \"visual\",\n    \"creative\",\n    \"experience\",\n    \"interaction\",\n    \"communication\",\n    \"UI/UX\",\n    \"product\"],\n    nounstyle: ['<span style=\"color: teal; font-family: helvetica \">#noun#</span>'],\n    noun: [\n        \"storyteller\",\n        \"designer\",\n        \"programmer\",\n        \"technologist\",\n        \"researcher\",\n        \"prototyper\",\n        \"artist\",\n        \"developer\",\n        \"problem-solver\"\n      ],\n\nmediumstyle: ['<span style=\"color: teal; font-family: helvetica\">#medium1#</span>'],\n    medium1: [ \"3D modeling\",\n    \"generative art\",\n    \"hybrid structures\",\n    \"branding identities\",\n\"branding\",\n    \"game design\"\n   ],\n    medium2style: ['<span style=\"color: teal; font-family: helvetica\">#medium2#</span>'],\n    medium2: [\n        \"education\",\n\"algorithmic identities\",\n\"immersive storytelling\", \n\"playful experiences\",\n\"browser-based experiences\"\n   \n  ],\n\n    theme: [ \"motion graphics\",\n    \"mixed media\",\n    \"alternate frameworks\",\n    \"analog creations\",\n    \"AI\",\n    \"digital interfaces\",\n    \"emerging technologies\",\n    \"interactive installations\",\n\n    ]\n};\n  \nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten(\"#top#\");\n\n    const storyDiv = document.createElement(\"div\");\n    storyDiv.innerHTML = story;\n    \n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    }\n  \n  // tracery doesn't load immediately, not sure why, so kludge it\n  setTimeout(main, 10);"
  },
  {
    "_id": "bk2hWfsDmH49oBtxT",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T08:34:58.173Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d283da27fada13d080cb359fe9cb3f29",
        "public_id": "avalanche2023spring/mppsonzbkykmckwe9ebg",
        "version": 1683275703,
        "version_id": "b8566d1927aeb31946847b6a4b22f3bf",
        "signature": "1b5f642634796a9f6c489ef06cfd4db9124eba65",
        "width": 872,
        "height": 704,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T08:35:03Z",
        "tags": [],
        "bytes": 52120,
        "type": "upload",
        "etag": "42e6f55e748140d3be718dccb099edab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683275703/avalanche2023spring/mppsonzbkykmckwe9ebg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683275703/avalanche2023spring/mppsonzbkykmckwe9ebg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:25:12.077Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:19.029Z" }
      }
    ],
    "title": "",
    "description": "WEEK 13 (3/4): VIVIENNE WESTWOOD ORB THING",
    "comments": []
  },
  {
    "_id": "bq53PCuZAbkFixvaF",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": { "$date": "2023-04-28T05:14:32.796Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e4519b9607fc82cd21c94a0f3693169d",
        "public_id": "avalanche2023spring/uk76ndfusmnmhw6kxiq8",
        "version": 1682658894,
        "version_id": "a132f16558b75e9e0a0c2515a00e32a6",
        "signature": "3d376c31bb9396783399cfaf0db27676cb651fd6",
        "width": 684,
        "height": 376,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:14:54Z",
        "tags": [],
        "bytes": 23332,
        "type": "upload",
        "etag": "860bf88e826798862b1672b507ba5360",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658894/avalanche2023spring/uk76ndfusmnmhw6kxiq8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658894/avalanche2023spring/uk76ndfusmnmhw6kxiq8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "15500a0bedb9f4e44c97a18699ba686c",
        "public_id": "avalanche2023spring/lh0cdum4blufs2pvrnfx",
        "version": 1682658897,
        "version_id": "ca313e6dfcee69084b5fc2cdcf23dda3",
        "signature": "f53247cb53e7241ca6a97fde5d645b5a32b71f10",
        "width": 728,
        "height": 387,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:14:57Z",
        "tags": [],
        "bytes": 23355,
        "type": "upload",
        "etag": "36b82012e173111a1ada5b4d800bc9c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658897/avalanche2023spring/lh0cdum4blufs2pvrnfx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658897/avalanche2023spring/lh0cdum4blufs2pvrnfx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1df0453780606d43f1af573a20e78e7c",
        "public_id": "avalanche2023spring/zvu17tdwslp7veysxiue",
        "version": 1682658900,
        "version_id": "a112877ca928de8c82c8a3e18246c008",
        "signature": "9f490e7ed948e2267d8cd7496c6aa13ca3d5a378",
        "width": 1410,
        "height": 726,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T05:15:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 1421869,
        "type": "upload",
        "etag": "ca10649b1306ef19bdb6d38a683b85ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682658900/avalanche2023spring/zvu17tdwslp7veysxiue.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682658900/avalanche2023spring/zvu17tdwslp7veysxiue.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682658900/avalanche2023spring/zvu17tdwslp7veysxiue.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "432372",
          "dar": "235:121",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 438904,
        "duration": 25.916667,
        "rotation": 0,
        "nb_frames": 1555,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T06:10:00.639Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "I used paper.js to make this sketch. The logo for my capstone project is a set of googly eyes, and i wanted to make the logo generative. Here is my first attempt at the logo generator - nothing is styled properly but I just wanted to get the basic functionality going. Ideally, I would like the pupils to stay within the bounds of the outer circle. I also want to add a randomize function, but this is where I got within the time limit!",
    "comments": []
  },
  {
    "_id": "buQovitgJ6p3rDXYy",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-01T14:54:30.198Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "70a97e1ec4760394d7cb9a4139d159e2",
        "public_id": "avalanche2023spring/bf6iga1zzmcskrdeyocw",
        "version": 1682952878,
        "version_id": "6bdf6fb083e3603cfe14032eb8739949",
        "signature": "c454c5771ad508ac2f13cfbbf9abd110465a41d7",
        "width": 600,
        "height": 728,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T14:54:38Z",
        "tags": [],
        "bytes": 44640,
        "type": "upload",
        "etag": "d2f6c4810be784c230edf7ed09cae0f7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682952878/avalanche2023spring/bf6iga1zzmcskrdeyocw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682952878/avalanche2023spring/bf6iga1zzmcskrdeyocw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "731e7e82499b6d6a8332ad71e41349d1",
        "public_id": "avalanche2023spring/pe5a1wpyuihjlksm9wqw",
        "version": 1682952881,
        "version_id": "e8efca13a332ad267a970b2cdda15166",
        "signature": "4a453382145c8afad7dd532cf62f6f183eb67d05",
        "width": 650,
        "height": 700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T14:54:41Z",
        "tags": [],
        "bytes": 42297,
        "type": "upload",
        "etag": "d7342f99f1b2eeba7671847c752daa20",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682952881/avalanche2023spring/pe5a1wpyuihjlksm9wqw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682952881/avalanche2023spring/pe5a1wpyuihjlksm9wqw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1335feed23ae7aa3780eda75d2e344a6",
        "public_id": "avalanche2023spring/gwl0sihqzdrvd6cfnmf6",
        "version": 1682952883,
        "version_id": "32a23faa44f1f7993bd227705e081f86",
        "signature": "401a6d0c5055d66aab083740deb23f8ed32365b3",
        "width": 500,
        "height": 480,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T14:54:43Z",
        "tags": [],
        "bytes": 31296,
        "type": "upload",
        "etag": "8f430e93e15e91d4556dc0fe2c8edf82",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682952883/avalanche2023spring/gwl0sihqzdrvd6cfnmf6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682952883/avalanche2023spring/gwl0sihqzdrvd6cfnmf6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-01T17:50:06.471Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T00:02:28.72Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:58.78Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T01:39:34.493Z" }
      }
    ],
    "title": "",
    "description": "WEEK 13(1/4): wanted to use difference and union again so I made a chess piece.",
    "comments": []
  },
  {
    "_id": "bunCLfCDAsDKBgYtt",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T01:05:33.583Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d79ca78749f36b82e2a5d88215aea34d",
        "public_id": "avalanche2023spring/ug0vdlh4manmzbxrzmtb",
        "version": 1676509584,
        "version_id": "5d00fd8be49f1639931fe07acfe49f2d",
        "signature": "1b7e6f66f9bd2c4c470f2831dbfe449f8f7ebe78",
        "width": 1194,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T01:06:24Z",
        "tags": [],
        "bytes": 431708,
        "type": "upload",
        "etag": "8905672ac9273ae29c603890e1a1c1fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676509584/avalanche2023spring/ug0vdlh4manmzbxrzmtb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676509584/avalanche2023spring/ug0vdlh4manmzbxrzmtb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b86bc64f71017f5ef8a79c22e09e2ca3",
        "public_id": "avalanche2023spring/pi2zljkokl6v6uwwtggd",
        "version": 1676509592,
        "version_id": "f7fe972fb1c2a41c4db2f46dfbf01e4e",
        "signature": "1db006dcc8c6d7a45acdd35db059ad6041baffb6",
        "width": 1186,
        "height": 1188,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T01:06:32Z",
        "tags": [],
        "bytes": 540838,
        "type": "upload",
        "etag": "83b2fed4aca683b46bec4070b4db293d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676509592/avalanche2023spring/pi2zljkokl6v6uwwtggd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676509592/avalanche2023spring/pi2zljkokl6v6uwwtggd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:46.483Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge: Sketch prompt for Rama. Studying organic forms with noise.",
    "comments": [],
    "code": "float t = 0;\nfloat l = 1;\nvoid setup(){\n  size(600,600);\n  background(0);\n    //noStroke();\n}\n\nvoid draw(){\n  float x = noise(t);\n  float y = noise(l);\n  t = t+0.05;\n  l = l+0.05;\n  x = map(x,0,1,0, width);\n  y = map(y,0,1,0,height);\n  strokeWeight(1);\nstroke(255, 80);\n//noStroke();\nfloat r = map(x,0,1,0,255);\n  fill(130,y,x,80);\n  //ellipse(x,y/2,50,50);\n  bezier(x, y, 100, 100, 400, 400, x, y); //for petals\n    //bezier(x, y, 100, y, x, 600, y, x);\n}"
  },
  {
    "_id": "byjAsYMSSvoheEBfh",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-21T23:45:28.45Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8f8eb1d60aae2d89094ee5765ce3b355",
        "public_id": "avalanche2023spring/zehtxwjfcru2l0vh8va9",
        "version": 1679442335,
        "version_id": "a3511caea8eae70d4c14fa69faabfd94",
        "signature": "5f59b65a48159fb856f420204154e7ee5d355d8d",
        "width": 1760,
        "height": 1616,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-21T23:45:35Z",
        "tags": [],
        "bytes": 203548,
        "type": "upload",
        "etag": "f9714fd12083ec14ca7dbda071cc0b2f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679442335/avalanche2023spring/zehtxwjfcru2l0vh8va9.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679442335/avalanche2023spring/zehtxwjfcru2l0vh8va9.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6f23436b5542a4b67df6041f3db00c17",
        "public_id": "avalanche2023spring/gqopare6j1kmfy3rxigo",
        "version": 1679442338,
        "version_id": "30da2d28212ab39bd842a96910f4feb5",
        "signature": "6c1604f2a28b524f6e5555e0819932f893de4990",
        "width": 1602,
        "height": 1461,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-21T23:45:38Z",
        "tags": [],
        "bytes": 184454,
        "type": "upload",
        "etag": "7bfc46f867637d5171cac4c24e903266",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679442338/avalanche2023spring/gqopare6j1kmfy3rxigo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679442338/avalanche2023spring/gqopare6j1kmfy3rxigo.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-22T00:00:51.467Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:23.978Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:57:35.357Z" }
      }
    ],
    "title": "",
    "description": "Did the second part of the Individual Assignment! I cut my design on some vinyl and it turned out pretty cool! It's actually heat transfer vinyl so I can take the design and iron it onto a shirt which I plan on doing later 🤩🤩🤩",
    "comments": []
  },
  {
    "_id": "cCSA5TXJuGPyW7HEP",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-14T22:46:39.185Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2339aff429e9e94bd04b91e568abc4b6",
        "public_id": "avalanche2023spring/dka9xavsqbo2hpkapm8h",
        "version": 1676414804,
        "version_id": "062dd614635c34db94f668ea5c50967d",
        "signature": "fd41388e1cd975d8b9e0dbcbc53a9a6d1a42f102",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-14T22:46:44Z",
        "tags": [],
        "bytes": 210191,
        "type": "upload",
        "etag": "3588f39f3ce470d3f7f4a11ac97ec93c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676414804/avalanche2023spring/dka9xavsqbo2hpkapm8h.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676414804/avalanche2023spring/dka9xavsqbo2hpkapm8h.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T00:46:11.377Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T04:10:04.008Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T05:07:16.466Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T08:33:01.52Z" }
      }
    ],
    "title": "",
    "description": "A quick heart. Don't feel like its \"there\" but i'm out of time! I kind of see  potential to take it in a  \"death metal\" direction. Or maybe just try something else.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nconsole.log(\"Hi\");\n\nfunction setup() {\n  createCanvas(800, 800);\n  colorMode(HSB, 1);\n}\n\nfunction draw() {\n  background(\"red\");\n\n  drawHeart();\n  pop();\n  mirror();\n}\n\nfunction drawHeart() {\n  push();\n  noStroke();\n  translate(width * 0.5, height * 0.3);\n  rotate(PI);\n  scale(-1, 1);\n\n  for (let i = 0; i < 200; i += 25) {\n    fill(\"black\");\n    drawPass(20, i, i);\n  }\n  for (let i = 0; i < 200; i += 25) {\n    fill(\"white\");\n    drawPass(10, i, i);\n  }\n}\n\nfunction drawPass(thickness = 20, noiseAmount = 50, noiseZ = 0) {\n  for (let a = 0.5 * PI; a < 1.5 * PI; a += 0.002) {\n    const x =\n      cos(a) * 125 * heart(a) + (noise(a * 10, 0, noiseZ) - 0.5) * noiseAmount;\n    const y =\n      sin(a) * 125 * heart(a) + (noise(a * 10, 1, noiseZ) - 0.5) * noiseAmount;\n    ellipse(x, y, thickness, thickness);\n  }\n}\n\nfunction heart(a) {\n  // heart function from Pavel Panchekha\n  // https://pavpanchekha.com/blog/heart-polar-coordinates.html\n  return (sin(a) * sqrt(abs(cos(a)))) / (sin(a) + 7 / 5) - 2 * sin(a) + 2;\n}\n\nfunction mirror() {\n  scale(-1, 1);\n  copy(0, 0, width * 0.5, height, -800, 0, width * 0.5, height);\n}",
    "comments": []
  },
  {
    "_id": "cKpx2qWi2sPxY528a",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-08T00:50:13.976Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dc1cfd9b01b87e48655fc486ccde0729",
        "public_id": "avalanche2023spring/appl44pyqkotopqgzhkb",
        "version": 1678236624,
        "version_id": "b0f28ff5e4286278b9a07cb692b1a74c",
        "signature": "1537f80aae25f5897e985b1ad27865fcc1a94656",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-08T00:50:24Z",
        "tags": [],
        "bytes": 168471,
        "type": "upload",
        "etag": "2509f21e98e363747a36cd22463f4ef8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678236624/avalanche2023spring/appl44pyqkotopqgzhkb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678236624/avalanche2023spring/appl44pyqkotopqgzhkb.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T06:59:46.065Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:22.962Z" }
      }
    ],
    "title": "",
    "description": "This is the image I created for Brian for the pair challenge!",
    "comments": []
  },
  {
    "_id": "cLeonxQXkkndNtsBG",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-19T02:32:27.265Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6f51d21e33113a8ad4010e98f1b57bdc",
        "public_id": "avalanche2023spring/i2ldi6badqnq7mpy4jcg",
        "version": 1676773955,
        "version_id": "7c6f7646759f42ad7b2c2ab0342c8d1e",
        "signature": "c00857c5c0f1166666118029a91ad5ff503ae1b5",
        "width": 897,
        "height": 895,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-19T02:32:35Z",
        "tags": [],
        "bytes": 137681,
        "type": "upload",
        "etag": "e5a7f12453f81d6fb5cdefa77c7022bb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676773955/avalanche2023spring/i2ldi6badqnq7mpy4jcg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676773955/avalanche2023spring/i2ldi6badqnq7mpy4jcg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-19T16:53:21.312Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-19T17:03:51.469Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T22:16:45.732Z" }
      }
    ],
    "title": "",
    "description": "Took some inspiration from last week and sought to add parameters into the mix. Wanted to see where I could add parameters in working with WebGL and created a pulsing grid of 3D cubes.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet x;\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  \n  createP(\"Move x-axis\");\n  xSlider = createSlider(200, 500, 200);\n  \n  createP(\"Move y-axis\");\n  ySlider = createSlider(-500, 500, 0);\n  \n  createP(\"Move z-axis\");\n  zSlider = createSlider(0, 500, 0);\n  \n  createP(\"Shift Blocks\");\n  blockSlider = createSlider(-500, 500, 0);\n  \n  createP(\"Camera Shift\");\n  cameraSlider = createSlider(-200, 800, 0);\n  \n  //debugMode();\n}\n\nfunction draw() {\n  background(255, 202, 133);\n  //orbitControl();\n  camera(-400, 900, 600, 600 + cameraSlider.value(), 200, -100);\n  \n  normalMaterial();\n  \n  //creating rows of boxes, the translate methods are supposed to stack\n  push();\n\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/100), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/90), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/80), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/70), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/60), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/50), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/40), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/30), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/20), 0);\n  boxGrid();\n  \n  pop();\n}\n\nfunction boxGrid() {\n  \n  box(100);\n  \n  // x-axis\n  push();\n  for(x = 0; x < width; x = x + 10) {\n    translate(xSlider.value(), ySlider.value(), zSlider.value());\n    box(100);\n  }\n  pop();\n  \n/*  // y-axis (unused)\n  push();\n  for(y = 0; y < height; y = y + 10) {\n    translate(ySlider.value(), y + 200, 0);\n    box(100);\n  }\n  pop(); */\n  \n/*  //z-axis (unused)\n  push();\n  for(z = 0; z < width; z = z + 10) {\n    translate(0, 0, z + 200);\n    box(100);\n  }\n  pop(); */\n}",
    "comments": []
  },
  {
    "_id": "cMW4yDMzHKHjgL6jw",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-04-04T06:48:08.585Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6e09443a160be783c755070315a01d4b",
        "public_id": "avalanche2023spring/uiazxjjqcohlyafukd8g",
        "version": 1680590900,
        "version_id": "183251fd321cec8cfc9e3b671f9b4d57",
        "signature": "f914aab859e8d1f9d6a7025ad8db3dd67d82970f",
        "width": 650,
        "height": 300,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-04T06:48:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 995414,
        "type": "upload",
        "etag": "0621ced26e5065917e768adfeffd6706",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680590900/avalanche2023spring/uiazxjjqcohlyafukd8g.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680590900/avalanche2023spring/uiazxjjqcohlyafukd8g.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680590900/avalanche2023spring/uiazxjjqcohlyafukd8g.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317076",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "111633",
          "dar": "13:6",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 436585,
        "duration": 18.184833,
        "rotation": 0,
        "nb_frames": 545,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T16:10:48.332Z" }
      }
    ],
    "title": "",
    "description": "Worked on the melody generator with Reshma! We made a polysynth that plays notes from a scale that sound harmonious together.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.49/Tone.js\n/* global Tone */\n\nconst synth = new Tone.PolySynth(Tone.Synth)\nsynth.set({\n    \"oscillator\": {\n    \"type\": \"sine\",\n  },\n\t\"envelope\" : {\n\t\t\"attack\": 0.1,\n    \"decay\": 0.1,\n    \"sustain\": 0.5,\n    \"release\": 1,\n\t}\n});\nsynth.toDestination();\n\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n  const melody = generate();\n  play(melody);\n};\n\nconst cmajor = [\"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\"];\n// const cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst notesnew = [\n  \"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\", \n  \"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\"\n];\nconst notes = notesnew;\n\nlet degree = 0;\n\nfunction generate() {\n  degree = randomInt(0, 7);\n\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  b[b.length - 1][0] = notes[4];\n  c[c.length - 1][0] = notes[0];\n\n  return [].concat(a, b, a, c);\n}\n\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n\n    let change = sample([-1, -1, -1, 1, 1, -2, 2, 2, 2, -3]); \n    degree = constrain(degree + change, 0, notes.length - 1);\n    const note = notes[degree];\n\n    let length = Tone.Time(\"4n\");\n    // let r = Math.random();\n    if (Math.random() < 0.5) {\n        length = Tone.Time(\"2n\");\n    }\n    // if (r > 0.3333 && r < 0.6666) {\n    //   length = Tone.Time(\"2n\");\n    // } else if (r > 0.6666) {\n    //   length = Tone.Time(\"8n\");\n    // }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n    timeLeft = Tone.Time(timeLeft - length);\n  \n    m.push([note, length, degree]);\n    \n  }\n\n  return m;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n      if (note[2] < notes.length - 3 && Math.random() < 0.5) {\n          synth.triggerAttackRelease(notes[note[2] + 2], Tone.Time(note[1]) - 0.1, t);\n      }\n      if (note[2] < notes.length - 5 && Math.random() < 0.3) {\n          synth.triggerAttackRelease(notes[note[2] + 4], Tone.Time(note[1]) - 0.1, t);\n      }\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}",
    "comments": []
  },
  {
    "_id": "cMdpmva8SB8yLGiK2",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T16:14:50.957Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1398bc190aac968d711b3d3cc291e134",
        "public_id": "avalanche2023spring/bwn7cwdohyjh6g8yauz2",
        "version": 1679588160,
        "version_id": "b768c9903f51602364656bd3c4ce1845",
        "signature": "f7ef390622d422eb04a707e3e9fa86ac5ae54d78",
        "width": 1088,
        "height": 672,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T16:16:00Z",
        "tags": [],
        "bytes": 429504,
        "type": "upload",
        "etag": "4b8f42f27508e286b224ff2cf3d2a772",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679588160/avalanche2023spring/bwn7cwdohyjh6g8yauz2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679588160/avalanche2023spring/bwn7cwdohyjh6g8yauz2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:32.159Z" }
      }
    ],
    "title": "",
    "description": "WEEK 7 (1/4): My response to John's code. We did this one async but there was a part of the code that looked like it was asking to be completed and I tried to follow the direction in which it was going.",
    "comments": []
  },
  {
    "_id": "cQZpLr9antrWkKEsQ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": { "$date": "2023-04-28T05:08:03.338Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9afbe49050e0e1b0aa85a0b1e75f80bc",
        "public_id": "avalanche2023spring/wuftowg1yj1jj7y8p1ow",
        "version": 1682658502,
        "version_id": "a584ed4cafb5d3a92dd395319e670c86",
        "signature": "6e59831943b1bb9941f08fcc75b1f50d79ee14eb",
        "width": 1298,
        "height": 1294,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:08:22Z",
        "tags": [],
        "bytes": 3113977,
        "type": "upload",
        "etag": "8385810e79a20626bee5f7666b67e84c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658502/avalanche2023spring/wuftowg1yj1jj7y8p1ow.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658502/avalanche2023spring/wuftowg1yj1jj7y8p1ow.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e8426f9efa87481e5605f855feaa3c9a",
        "public_id": "avalanche2023spring/h3audaih8slqdjrmfy7n",
        "version": 1682658507,
        "version_id": "a9f529b00af00d90ebe4e4b25cb70747",
        "signature": "9ca222a2560963ee26c87102d7c6aaf6804fb30b",
        "width": 1288,
        "height": 1298,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:08:27Z",
        "tags": [],
        "bytes": 2831512,
        "type": "upload",
        "etag": "66f4313e5a93472705537acd2918e3d5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658507/avalanche2023spring/h3audaih8slqdjrmfy7n.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658507/avalanche2023spring/h3audaih8slqdjrmfy7n.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4091cc5e98b042a7a96540321ffeac55",
        "public_id": "avalanche2023spring/q5swawyy829wjdjc4f7b",
        "version": 1682658517,
        "version_id": "2bdb2b39b910a8fc6f6b9d9272887479",
        "signature": "00dbb572bd8b532ea6c2b6265491090b39be7429",
        "width": 1286,
        "height": 1346,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T05:08:37Z",
        "tags": [],
        "bytes": 2686442,
        "type": "upload",
        "etag": "afccb8cfdc755a563b09449bfa426040",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682658517/avalanche2023spring/q5swawyy829wjdjc4f7b.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682658517/avalanche2023spring/q5swawyy829wjdjc4f7b.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T05:46:03.595Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "I was trying to create an alphabet with Midjourney but it was very bad at drawing letters. The first one is supposed to be the letter B but it kept making forms more similar to an R. The second one is supposed to be a Z. The A I got to be more or less resembling an A. I tried seeing if I could specify typefaces but it didn't seem to make a difference.",
    "comments": []
  },
  {
    "_id": "cfEaMaGJ9WQfiz49P",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T04:52:15.259Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b86d480020ef57eb3a96123f1c343558",
        "public_id": "avalanche2023spring/zuw2osjbmqcppnzaxwol",
        "version": 1677819483,
        "version_id": "2a9a843c52a6292112625fed735dc2bb",
        "signature": "f0fe6948d8b8048b13d3816319f4f5add7adc31d",
        "width": 1026,
        "height": 1074,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T04:58:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 4900788,
        "type": "upload",
        "etag": "48245666b40bb2ba236e25dfe67276b1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677819483/avalanche2023spring/zuw2osjbmqcppnzaxwol.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677819483/avalanche2023spring/zuw2osjbmqcppnzaxwol.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677819483/avalanche2023spring/zuw2osjbmqcppnzaxwol.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "1719919",
          "dar": "171:179",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 1730886,
        "duration": 22.651,
        "rotation": 0,
        "nb_frames": 726,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3208654d14c2076dfbc123d05ff404fe",
        "public_id": "avalanche2023spring/g12ndfao7etv0ixoqwxc",
        "version": 1677819548,
        "version_id": "c15e3379dc15001041134ff15bde40ce",
        "signature": "740369d5efec6e93b08077a6e0eeb2645118929f",
        "width": 1020,
        "height": 1060,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T04:59:08Z",
        "tags": [],
        "bytes": 62985,
        "type": "upload",
        "etag": "030d4c6b9505dd20046c0a319b57d939",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677819548/avalanche2023spring/g12ndfao7etv0ixoqwxc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677819548/avalanche2023spring/g12ndfao7etv0ixoqwxc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Here's my attempt at the second challenge - this involved a lot of trial and error.",
    "comments": []
  },
  {
    "_id": "cjyWgnn3XyPHfz4eG",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T04:11:05.002Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0b6aa1a96b1a58b6ea540a03f84276bb",
        "public_id": "avalanche2023spring/fdxxa4qjdgy4wfniqoni",
        "version": 1675311239,
        "version_id": "aeba390e0348e6687624f81938f3a3c5",
        "signature": "1edfad130a57c0f9633ec7c609187fd722c5244b",
        "width": 882,
        "height": 1184,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-02T04:13:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 12923889,
        "type": "upload",
        "etag": "8de57989ab9541d759d934f084fc7785",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675311239/avalanche2023spring/fdxxa4qjdgy4wfniqoni.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675311239/avalanche2023spring/fdxxa4qjdgy4wfniqoni.mp4",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Constrained Baseline",
          "bit_rate": "989599",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 991599,
        "duration": 104.266667,
        "rotation": 0,
        "nb_frames": 6256,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T16:11:38.559Z" }
      }
    ],
    "title": "",
    "description": "A little typography exploration in p5!! Creating some Bots that eat letters.",
    "inspiration_name": "Xin Xin",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\n\n/* Credits go to Xin Xin's \"Bot tutorial\" */\n\nlet font;\nlet res_Array = [];\nlet our_Array = [];\nlet ces_Array = [];\n\nlet res = [];\nlet our = [];\nlet ces = [];\n\nlet word_parts = [res, our, ces];\n\nlet students = [];\nlet amount_of_students = 10;\nlet rectangle_size = 30;\n\nfunction preload() {\n  font = loadFont(\"Typographica-Blp5.otf\");\n}\n\nfunction setup() {\n  rectMode(CENTER);\n  textFont(font);\n  createCanvas(440, 590);\n\n  // Code for creating points for the outlines of the word-parts\n  res_Array = font.textToPoints(\"RES\", 10, 210, 280, { sampleFactor: 0.15 });\n  our_Array = font.textToPoints(\"OUR\", 8, 370, 220, { sampleFactor: 0.15 });\n  ces_Array = font.textToPoints(\"CES\", 5, 570, 275, { sampleFactor: 0.15 });\n\n  // Passing each point of each word part throught the Point Class\n  for (let i = 0; i < res_Array.length; i++) {\n    res[i] = new Point(res_Array[i].x, res_Array[i].y, rectangle_size);\n  }\n  for (let i = 0; i < our_Array.length; i++) {\n    our[i] = new Point(our_Array[i].x, our_Array[i].y, rectangle_size);\n  }\n  for (let i = 0; i < ces_Array.length; i++) {\n    ces[i] = new Point(ces_Array[i].x, ces_Array[i].y, rectangle_size);\n  }\n\n  // Creating Students with the Student class (Inspired by Xin Xin)\n  for (let i = 0; i < amount_of_students; i++) {\n    students[i] = new Student();\n  }\n}\n\nfunction draw() {\n  background(220);\n  print(res.length);\n\n  // whenever the amount of resources decreases 100, student speed increased by 2\n\n  // SEE QUESTION below\n  // print(all_word_parts.length)\n  // print(typeof(all_word_parts[0].length))\n\n  // applying the \"show\" method to all objects in each array.\n  for (let i = 0; i < res.length; i++) {\n    res[i].show();\n  }\n  for (let i = 0; i < our.length; i++) {\n    our[i].show();\n  }\n  for (let i = 0; i < ces.length; i++) {\n    ces[i].show();\n  }\n\n  // applying several methods from the Student class to all objects in student array.\n  for (let i = 0; i < amount_of_students; i++) {\n    students[i].show();\n    students[i].move();\n    students[i].collision_detection();\n  }\n}\n\nclass Point {\n  constructor(x, y, rectangle_size) {\n    this.x = x;\n    this.y = y;\n    this.rectangle_size = rectangle_size;\n  }\n  show() {\n    rect(this.x, this.y, this.rectangle_size, this.rectangle_size);\n  }\n}\n\nclass Student {\n  constructor() {\n    this.x = random(0, width);\n    this.y = random(0, height);\n    // Each Student will have a random positive or negative direction assigned.\n    this.direction_1 = random(-2, 2);\n    this.direction_2 = random(-2, 2);\n    this.d;\n  }\n\n  show() {\n    push();\n    fill(\"red\");\n    ellipse(this.x, this.y, 10, 10);\n    pop();\n  }\n\n  move() {\n    if (res.length % 50 == 0) {\n      if (this.direction_1 > 0) {\n        this.direction_1 += 1;\n      }\n      if (this.direction_1 < 0) {\n        this.direction_1 -= 1;\n      }\n\n      if (this.direction_2 > 0) {\n        this.direction_2 += 1;\n      }\n      if (this.direction_2 < 0) {\n        this.direction_2 -= 1;\n      }\n    }\n\n    this.x = this.x + this.direction_1;\n    this.y = this.y + this.direction_2;\n\n    if (this.x > width || this.x < 0) {\n      this.direction_1 = -this.direction_1;\n    }\n    if (this.y > height || this.y < 0) {\n      this.direction_2 = -this.direction_2;\n    }\n  }\n\n  collision_detection() {\n    for (let i = 0; i < res.length; i++) {\n      this.d = dist(res[i].x, res[i].y, this.x, this.y);\n      if (this.d < 5) {\n        this.direction_1 = -this.direction_1 + 1;\n        this.direction_2 = -this.direction_2 + 1;\n        res[i].rectangle_size = res[i].rectangle_size + 2;\n      }\n    }\n\n    // detecting collision with \"OUR\"\n    for (let i = 0; i < our.length; i++) {\n      this.d = dist(our[i].x, our[i].y, this.x, this.y);\n      if (this.d < 5) {\n        this.direction_1 = -this.direction_1 + 1;\n        this.direction_2 = -this.direction_2 + 1;\n        our[i].rectangle_size = our[i].rectangle_size + 2;\n      }\n    }\n\n    // detecting collision with \"CES\"\n    for (let i = 0; i < ces.length; i++) {\n      this.d = dist(ces[i].x, ces[i].y, this.x, this.y);\n      if (this.d < 5) {\n        this.direction_1 = -this.direction_1 + 1;\n        this.direction_2 = -this.direction_2 + 1;\n        ces[i].rectangle_size = ces[i].rectangle_size + 2;\n      }\n    }\n  }\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Does this use text-to-point too?",
        "created_at": { "$date": "2023-02-02T21:32:32.136Z" }
      },
      {
        "commenter_id": "Bx8aBoWhfqwYX7sG4",
        "comment": "Yes totally! I used textToPoint() and passed all point objects through a class in which I created rectangles at (x,y). (code is linked)!",
        "created_at": { "$date": "2023-02-02T23:52:21.011Z" }
      }
    ]
  },
  {
    "_id": "coq6zK68Svk73cMxj",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T16:22:03.8Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "71a03b97611eabeea283c55537563a03",
        "public_id": "avalanche2023spring/ts0t69cp8yhiq15un0w4",
        "version": 1677255758,
        "version_id": "0ffd313e3e95718b7ac2fb7166b238ec",
        "signature": "82f100d60421ac229b9f91570b1c44e6d3bb7a9a",
        "width": 1198,
        "height": 1196,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T16:22:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 8636294,
        "type": "upload",
        "etag": "c4e3d8d531317db75ff21f8f63a83667",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677255758/avalanche2023spring/ts0t69cp8yhiq15un0w4.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677255758/avalanche2023spring/ts0t69cp8yhiq15un0w4.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677255758/avalanche2023spring/ts0t69cp8yhiq15un0w4.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126563",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "8358180",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10037339,
        "duration": 6.883333,
        "rotation": 0,
        "nb_frames": 474,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T17:01:05.529Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:04.89Z" }
      }
    ],
    "title": "",
    "description": "**Progress on the Perlin Noise Spirals** by Adrian",
    "inspiration_name": "PERLIN NOISE X MORIÉ EFFECT PLOTS",
    "inspiration_url": "https://www.aidanlincoln.com/perlin-noise-plots",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Width: 480,\n  AngleFactor: 0.2, //Amt angle should increase in each interation\n  StrokeWidth: 2,\n  NoiseAmp: 20,\n  RadiusFactor: 0.01,\n  Smoothing: 0.001,\n};\n\npane.addInput(params, \"Width\", { min: 50, max: 480 });\npane.addInput(params, \"StrokeWidth\", { min: 1, max: 4 });\npane.addInput(params, \"AngleFactor\", { min: 0.05, max: 0.4 });\npane.addInput(params, \"RadiusFactor\", { min: 0.01, max: 0.2 });\npane.addInput(params, \"NoiseAmp\", { min: 0.1, max: 50 });\npane.addInput(params, \"Smoothing\", { min: 0.0001, max: 0.01 });\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  //strokeWeight(2);\n}\n\nfunction draw() {\n  background(\"rgb(0,0,0)\");\n\n  noStroke();\n\n  fill(\"rgb(218,38,38)\");\n  drawSpiral(width / 2, height / 2);\n\n  // fill(\"rgb(38,43,218)\");\n  // drawSpiral(width / 6, height / 8);\n\n  // fill(\"rgb(24,176,28)\");\n  // drawSpiral(width / 1.2, height / 1.4);\n}\n\nfunction drawSpiral(x, y) {\n  push();\n\n  for (\n    let angle = 0, radius = 0;\n    radius < params.Width;\n    angle += params.AngleFactor\n  ) {\n    \n    let xPos = x + sin(angle) * radius;\n    let yPos = y + cos(angle) * radius;\n\n    circle(\n      xPos + noise(xPos*params.Smoothing) * params.NoiseAmp,\n      yPos + noise(yPos*params.Smoothing) * params.NoiseAmp,\n      params.StrokeWidth\n    );\n\n    radius += params.RadiusFactor;\n\n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "crEWDnbt3Xm3qZGBF",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T14:13:11.965Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e85df16f70c78de02ad4e36c8aeb5156",
        "public_id": "avalanche2023spring/ucyqqyiesogqmtzyovxj",
        "version": 1682086440,
        "version_id": "c99211e82a59c320bf581cedd068371c",
        "signature": "6b7e8932b7fc98463e24d9933fb3cada3775409b",
        "width": 908,
        "height": 128,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:14:00Z",
        "tags": [],
        "bytes": 40440,
        "type": "upload",
        "etag": "80a626c952cc9d1ec84b217b53329e6e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682086440/avalanche2023spring/ucyqqyiesogqmtzyovxj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682086440/avalanche2023spring/ucyqqyiesogqmtzyovxj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4547786c5230d91dc0707962c971dd4a",
        "public_id": "avalanche2023spring/jhefjkbrnwmehgfo0fzm",
        "version": 1682086448,
        "version_id": "4bb1a73c183ef019a97fc42ae8fe2c5e",
        "signature": "b345625253a0c9939a5a69b5268d6623a72efac9",
        "width": 1256,
        "height": 1166,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-21T14:14:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 7993310,
        "type": "upload",
        "etag": "99577bb4bcde1107f194a34697281af5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682086448/avalanche2023spring/jhefjkbrnwmehgfo0fzm.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682086448/avalanche2023spring/jhefjkbrnwmehgfo0fzm.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682086448/avalanche2023spring/jhefjkbrnwmehgfo0fzm.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "137899",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "16898895",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 24130747,
        "duration": 2.65,
        "rotation": 0,
        "nb_frames": 220,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 11 (2/4): Since it knew how to come up wth code I asked it for help on pulsing effects for randomly placed circles and it ACTUALLY WORKED. I am SO SCARED AAHAH. I GUESS THIS WOULD FALL UNDER THE RANDOM WEEK.",
    "comments": []
  },
  {
    "_id": "ctSZndWJpK8iZwzRi",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T07:07:25.996Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "40c5be672683fd431c2c22d93775aa19",
        "public_id": "avalanche2023spring/x6sqjqt3nf4lza6omts4",
        "version": 1676012926,
        "version_id": "5ea4acb7cc76957e631cc885e30a2c8f",
        "signature": "edb6aa00f84089b9ab81c92014e505c8e1f061b1",
        "width": 778,
        "height": 774,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T07:08:46Z",
        "tags": [],
        "bytes": 124987,
        "type": "upload",
        "etag": "d50dddbc1e103ddfe524775941887951",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676012926/avalanche2023spring/x6sqjqt3nf4lza6omts4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676012926/avalanche2023spring/x6sqjqt3nf4lza6omts4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T13:05:47.436Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T14:19:16.502Z" }
      }
    ],
    "title": "",
    "description": "WEEK 2 SKETCH (3/4): PLAYING WITH RANDOM STICKS AND CIRCLES BUT THE STICKS WERE SUPPOSED TO BE TRIANGLES",
    "comments": []
  },
  {
    "_id": "ctfh4DQcjYq2KbqSe",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T07:30:00.228Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f7047849aa73bc97dc89016126e233f9",
        "public_id": "avalanche2023spring/xihqjahhr1m2zppdctpn",
        "version": 1676619066,
        "version_id": "ed9ef208a3a2196edf3c6e017147698b",
        "signature": "95ea955bf799ee18e6bfb7d584a2321b13631413",
        "width": 828,
        "height": 1268,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T07:31:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 16938225,
        "type": "upload",
        "etag": "8f85f6767af52f49b667fb8cab32301e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676619066/avalanche2023spring/xihqjahhr1m2zppdctpn.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676619066/avalanche2023spring/xihqjahhr1m2zppdctpn.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676619066/avalanche2023spring/xihqjahhr1m2zppdctpn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "5994712",
          "dar": "207:317",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6044868,
        "duration": 22.416667,
        "rotation": 0,
        "nb_frames": 1345,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T23:22:34.164Z" }
      }
    ],
    "title": "",
    "description": "Building upon the previous sketch",
    "comments": []
  },
  {
    "_id": "cvghdyAb6jt8rDnkK",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-09T17:34:14.303Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c6e7854f90f5e70e9872bfb21a384eb2",
        "public_id": "avalanche2023spring/tzmrecabp6mbuicw2wxu",
        "version": 1673285665,
        "version_id": "11b6fec89346867c3b904361d5237e90",
        "signature": "d1d01d5c0cab99dd11da843a5f338a326ba6fdb6",
        "width": 1998,
        "height": 1392,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-09T17:34:25Z",
        "tags": [],
        "bytes": 271182,
        "type": "upload",
        "etag": "42ee6868d5f3956bb44ae59d5a79ff8b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1673285665/avalanche2023spring/tzmrecabp6mbuicw2wxu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1673285665/avalanche2023spring/tzmrecabp6mbuicw2wxu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T23:04:20.298Z" }
      }
    ],
    "title": "",
    "comments": []
  },
  {
    "_id": "cwbWgHgjop4fPAX89",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T04:16:51.329Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "abb86269835ab156a5d97afbcca13b97",
        "public_id": "avalanche2023spring/wrhrlutag2hkjnsz8fcj",
        "version": 1682050640,
        "version_id": "f2a91e730f55fc2e3b72b2a4b5365538",
        "signature": "7ca214f44fb8151c6232ab38af743747f3c412cd",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T04:17:20Z",
        "tags": [],
        "bytes": 1365339,
        "type": "upload",
        "etag": "dd6d1f1cfd4335ae93c43e7069a11e82",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682050640/avalanche2023spring/wrhrlutag2hkjnsz8fcj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682050640/avalanche2023spring/wrhrlutag2hkjnsz8fcj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e618ed8bd6a93ebf702ab7d466e7ff64",
        "public_id": "avalanche2023spring/tb64b48qk8nitqspaejm",
        "version": 1682050641,
        "version_id": "3a046d26ff2d7c751ff1cab1e3a0a134",
        "signature": "0515a77eb1840ac9dea31d19e1efe57b25c00d63",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T04:17:21Z",
        "tags": [],
        "bytes": 1284469,
        "type": "upload",
        "etag": "9f75506c2f1dbdd73047b2575d30dcf9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682050641/avalanche2023spring/tb64b48qk8nitqspaejm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682050641/avalanche2023spring/tb64b48qk8nitqspaejm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "894b199a1d1b746f397e39e707644fce",
        "public_id": "avalanche2023spring/jxrzjd9jejc1mdmpk74i",
        "version": 1682050646,
        "version_id": "a0ec841561521083810561123737e953",
        "signature": "c42a8f4a5498e3a7dd9f475d57f14546dea51d19",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T04:17:26Z",
        "tags": [],
        "bytes": 1411358,
        "type": "upload",
        "etag": "3dd6811f0e4f8e025afc6c04665e6bd6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682050646/avalanche2023spring/jxrzjd9jejc1mdmpk74i.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682050646/avalanche2023spring/jxrzjd9jejc1mdmpk74i.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:42:32.08Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:06:15.407Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:06:51.24Z" }
      }
    ],
    "title": "",
    "description": "More playing around with Midjourney... I asked it to make a glass face with flowers growing on it... after some tweaking ended up with these",
    "comments": []
  },
  {
    "_id": "d4W4eMDWJeRAjsgaz",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T21:05:21.556Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0adfb293d4a4a11f16426d5f0235f562",
        "public_id": "avalanche2023spring/fmlngxm9c71xn3ekww8t",
        "version": 1675371949,
        "version_id": "2ef4c27672cb42136938cc50f1ad1018",
        "signature": "552f4b9dd023ce0e8263c905c47c144fe5bf37a7",
        "width": 1187,
        "height": 1188,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-02T21:05:49Z",
        "tags": [],
        "bytes": 419006,
        "type": "upload",
        "etag": "55296695603f00569ba2236b467a6598",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675371949/avalanche2023spring/fmlngxm9c71xn3ekww8t.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675371949/avalanche2023spring/fmlngxm9c71xn3ekww8t.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T23:53:25.795Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T01:37:33.577Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T16:25:28.216Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T18:41:47.274Z" }
      }
    ],
    "title": "",
    "description": "WEEK 1 SKETCH (4/4) : NOIRE BALANCE \nI wanted to imitate sort of sound waves but then the ocean came to mind and I ended u with this.",
    "inspiration_name": "I DON'T KNOW WHAT I AM DOING",
    "comments": []
  },
  {
    "_id": "dC2LKie4x32R9HK5X",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-09T19:02:27.214Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "01e2ea54bfe89892ad6998a1c0572458",
        "public_id": "avalanche2023spring/rtge2df0u33mwltykqta",
        "version": 1683658980,
        "version_id": "0d37f0de82c28e57a3914f71fbd33c37",
        "signature": "6491731085b26e559a9d75b49f7f99eae8292885",
        "width": 900,
        "height": 896,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-09T19:03:00Z",
        "tags": [],
        "bytes": 47483,
        "type": "upload",
        "etag": "927df7a44e845ca7fdb6de2ccf092087",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683658980/avalanche2023spring/rtge2df0u33mwltykqta.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683658980/avalanche2023spring/rtge2df0u33mwltykqta.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Some more random geometry",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\n// Define a function to draw a circle\nfunction drawCircle(x, y, r) {\n  myTurtle.penUp();\n  myTurtle.moveTo(x + r, y);\n  myTurtle.penDown();\n\n  for (let i = 0; i < 120; i++) {\n    myTurtle.moveForward(2 * Math.PI * r / 120);\n    myTurtle.turnRight(3);\n  }\n}\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  background(50);\n\n  noFill();\n  stroke(255);\n  strokeWeight(3);\n\n  // draw the rectangle\n  myTurtle.penUp();\n  myTurtle.moveTo(100, 100);\n  myTurtle.penDown();\n  myTurtle.moveForward(300);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(200);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(300);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(200);\n\n  // draw the triangle\n  myTurtle.penUp();\n  myTurtle.moveTo(100, 100);\n  myTurtle.penDown();\n  for (let i = 0; i < 3; i++) {\n    myTurtle.moveForward(300);\n    myTurtle.turnRight(120);\n  }\n\n  // draw the circle inside the triangle\n  drawCircle(250, 200, 100);\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "dNYe5xkzSiTqiTC9y",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T03:35:22.866Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e11bf979e2fb52bc7d4f825c9a75270b",
        "public_id": "avalanche2023spring/pedu78fxfxlxetwzudq6",
        "version": 1676000196,
        "version_id": "229ec7af86026c99116f48b880ad4cf1",
        "signature": "d959d1fb76299672c78f39efd4d9cda95a176cbd",
        "width": 1602,
        "height": 1602,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T03:36:36Z",
        "tags": [],
        "bytes": 1412017,
        "type": "upload",
        "etag": "263e032b3ab5edcc01c2ef219ca9cfb9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676000196/avalanche2023spring/pedu78fxfxlxetwzudq6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676000196/avalanche2023spring/pedu78fxfxlxetwzudq6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7c5232256843b4aa04a964e5dd82fc6d",
        "public_id": "avalanche2023spring/tcdcdwrrgxbhanvruiqr",
        "version": 1676000201,
        "version_id": "03e9ece41cebccc0e41405ba100937a0",
        "signature": "632c43e9771d27c3458b21e9753048b27c02ff2f",
        "width": 1602,
        "height": 1602,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T03:36:41Z",
        "tags": [],
        "bytes": 1675329,
        "type": "upload",
        "etag": "b9d609e0cc75f762ab335c75e795149c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676000201/avalanche2023spring/tcdcdwrrgxbhanvruiqr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676000201/avalanche2023spring/tcdcdwrrgxbhanvruiqr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T21:33:34.585Z" }
      }
    ],
    "title": "",
    "description": "Andy Warhol, but with a randomized color wash!",
    "comments": []
  },
  {
    "_id": "dQTrC8tizuxcmcojf",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "API",
    "created_at": { "$date": "2023-04-29T03:10:49.142Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6dd0b88e23f65aecc6bddf5d0247294c",
        "public_id": "avalanche2023spring/rbiqrlmituq63ts2nfzy",
        "version": 1682737853,
        "version_id": "9426797f0b186d11c30ef1b0504e5f6e",
        "signature": "647ede57cd7a07609cda72d4d056e1de1d6aabd6",
        "width": 2022,
        "height": 888,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-29T03:10:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 1417053,
        "type": "upload",
        "etag": "32a61013f23e461c4012416b688af457",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682737853/avalanche2023spring/rbiqrlmituq63ts2nfzy.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682737853/avalanche2023spring/rbiqrlmituq63ts2nfzy.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682737853/avalanche2023spring/rbiqrlmituq63ts2nfzy.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "384691",
          "dar": "337:148",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 417547,
        "duration": 27.15,
        "rotation": 0,
        "nb_frames": 1627,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "49cf77372cf5be92a5a15a54ff9ab70b",
        "public_id": "avalanche2023spring/jpdyzpey6lfjoncov2xe",
        "version": 1682737855,
        "version_id": "f29a5abf868cab4c5473e83304a2d30f",
        "signature": "b82595d05a1d0762f791f2aac6698cef985c6d16",
        "width": 2022,
        "height": 888,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-29T03:10:55Z",
        "tags": [],
        "pages": 0,
        "bytes": 1516800,
        "type": "upload",
        "etag": "2330e7dd80f117e3091cdc2b7cf5aaf2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682737855/avalanche2023spring/jpdyzpey6lfjoncov2xe.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682737855/avalanche2023spring/jpdyzpey6lfjoncov2xe.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682737855/avalanche2023spring/jpdyzpey6lfjoncov2xe.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "392687",
          "dar": "337:148",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 425271,
        "duration": 28.533333,
        "rotation": 0,
        "nb_frames": 1717,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tried a variation on my \"Uber for X\" sketch from text week with OpenAI API using gpt3.5 by following their docs",
    "code": "import { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n\nexport default async function (req, res) {\n  if (!configuration.apiKey) {\n    res.status(500).json({\n      error: {\n        message: \"OpenAI API key not configured, please follow instructions in README.md\",\n      }\n    });\n    return;\n  }\n\n  const animal = req.body.animal || '';\n  if (animal.trim().length === 0) {\n    res.status(400).json({\n      error: {\n        message: \"Please enter a valid animal\",\n      }\n    });\n    return;\n  }\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: generatePrompt(animal),\n      temperature: .9,\n    });\n    res.status(200).json({ result: completion.data.choices[0].text });\n  } catch(error) {\n    // Consider adjusting the error handling logic for your use case\n    if (error.response) {\n      console.error(error.response.status, error.response.data);\n      res.status(error.response.status).json(error.response.data);\n    } else {\n      console.error(`Error with OpenAI API request: ${error.message}`);\n      res.status(500).json({\n        error: {\n          message: 'An error occurred during your request.',\n        }\n      });\n    }\n  }\n}\n\nfunction generatePrompt(animal) {\n  const capitalizedAnimal =\n    animal[0].toUpperCase() + animal.slice(1).toLowerCase();\n  return `Suggest ideas in the format of \"Uber for X\"\n\nUber for Babies: A baby is delivered to you on demand for you to raise at any given point in time.\nUber for Dogs: Have a dog delivered to your front door whenever you want. Pricing varies on how long you have the dog for.\nUber for Dragons: A dragon descends upon you from the sky and burns down your house so that you can claim insurance.\nUber for Criminals: A criminal is delivered for you to rehabilitate on the spot in 10 minutes.\nUber for ${capitalizedAnimal}:`;\n}",
    "comments": []
  },
  {
    "_id": "dSiRH8eDMFMK6TvPs",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "API",
    "created_at": { "$date": "2023-04-26T23:26:56.341Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "01ded3e3d21595d38101536fb91356e5",
        "public_id": "avalanche2023spring/xfggsfsevi9llepswszy",
        "version": 1682551619,
        "version_id": "ac25071f930beffd9e0e2964d3132662",
        "signature": "598f4499700dc21947b77eb9fdcd94ec12fcfc5f",
        "width": 896,
        "height": 899,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-26T23:26:59Z",
        "tags": [],
        "bytes": 32959,
        "type": "upload",
        "etag": "3bbeea72e4c09a21ed79b95403e877c0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682551619/avalanche2023spring/xfggsfsevi9llepswszy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682551619/avalanche2023spring/xfggsfsevi9llepswszy.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Took another shot at a p5 play sketch. Took some elements from the last attempt and explored other parts of p5 play. Ended up making a sketch that could be the basis for a small game if I spend some more time refining this idea.",
    "code": "let square1;\nlet square2;\nlet square3;\nlet square4;\nlet square5;\n\nlet border1;\nlet border2;\nlet border3;\nlet border4;\n\nlet circle;\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  // Boxes\n  \n  square1 = new Sprite();\n  square1.pos = {x: 200, y: 100};\n  \n  square2 = new Sprite();\n  square2.pos = {x: 400, y: 100};\n  \n  square3 = new Sprite();\n  square3.pos = {x: 100, y: 300};\n  \n  square4 = new Sprite();\n  square4.pos = {x: 500, y: 300};\n  \n  square5 = new Sprite();\n  \n  // Border\n  \n  border1 = new Sprite();\n  border1.width = 500; \n  border1.pos = {x: 300, y: 10};\n  border1.collider = 'static';\n  \n  /*border2 = new Sprite();\n  border2.width = 500; \n  border2.pos = {x: 300, y: 590};\n  border2.collider = 'static'; */\n  \n  border3 = new Sprite();\n  border3.height = 500; \n  border3.pos = {x: 10, y: 300};\n  border3.collider = 'static';\n  \n  border4 = new Sprite();\n  border4.height = 500; \n  border4.pos = {x: 590, y: 300};\n  border4.collider = 'static';\n  \n  // Circle\n  \n  circle = new Sprite();\n  circle.diameter = 50;\n}\n\nfunction draw() {\n  background(209, 246, 255);\n  \n  // Boxes\n  \n  /* square1.moveTowards(mouse, 0.05);\n  square2.moveTowards(mouse, 0.05);\n  square3.moveTowards(mouse, 0.05);\n  square4.moveTowards(mouse, 0.05); */\n  square5.moveTowards(mouse, 0.05);\n  \n  if(circle.colliding(square5)){\n    square5.vel.x = random(-50, 50);\n    square5.vel.y = -50;\n  }\n  \n  // Circle\n  \n  circle.moveTowards(mouse, 0.50);\n}",
    "comments": []
  },
  {
    "_id": "dX38su9QE8gzDFQJz",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T17:03:29.969Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "629ee7c0e66c24ec046b1cd8a24d3cb3",
        "public_id": "avalanche2023spring/ooqs0sahntkb8kfmdn25",
        "version": 1680195832,
        "version_id": "ae9228adbe650736c3f5faed2960d48a",
        "signature": "8ac48adb43eeb7ea8b4a1e586a7acec83a99b0cb",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-30T17:03:52Z",
        "tags": [],
        "pages": 0,
        "bytes": 10179606,
        "type": "upload",
        "etag": "022f05bd4af1227035ae544f0adff611",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680195832/avalanche2023spring/ooqs0sahntkb8kfmdn25.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680195832/avalanche2023spring/ooqs0sahntkb8kfmdn25.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680195832/avalanche2023spring/ooqs0sahntkb8kfmdn25.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "8807242",
          "dar": "16:9",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9968034,
        "duration": 8.1698,
        "rotation": 0,
        "nb_frames": 238,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "An extension of the code with oscillator experiments that me and Shristi wrote in our breakout room.",
    "comments": []
  },
  {
    "_id": "daDALnmxCP5dgbFxr",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T00:43:37.629Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "154588225e68fdcb8dcf080b75596287",
        "public_id": "avalanche2023spring/fatqfssksx0ymojfs489",
        "version": 1677804258,
        "version_id": "d2f8417f8357108b73a9ef1f7a20a17f",
        "signature": "c205afe6e6428bac6f888e6371e469e02138eb0c",
        "width": 477,
        "height": 473,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T00:44:18Z",
        "tags": [],
        "bytes": 106685,
        "type": "upload",
        "etag": "f1ff729e2d54783417e4667606e5d300",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677804258/avalanche2023spring/fatqfssksx0ymojfs489.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677804258/avalanche2023spring/fatqfssksx0ymojfs489.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f4d13dd84c580d7219e3e666cac43301",
        "public_id": "avalanche2023spring/uliet1icaqdg1z7to9kl",
        "version": 1677804263,
        "version_id": "6b2e0ad32c551d5a93e8ed12034e60ca",
        "signature": "8edb471110524db30b950f220398735e910f2028",
        "width": 483,
        "height": 482,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T00:44:23Z",
        "tags": [],
        "bytes": 108469,
        "type": "upload",
        "etag": "58a5ddf94d3a66dafe8d4b67721665e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677804263/avalanche2023spring/uliet1icaqdg1z7to9kl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677804263/avalanche2023spring/uliet1icaqdg1z7to9kl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e8de0a4ec0e554d4b677e5b7ef9be017",
        "public_id": "avalanche2023spring/vhltqmxwh0kgt2nhiqs6",
        "version": 1677804269,
        "version_id": "43583355320314e9b8c1ab604833b0a2",
        "signature": "b75c508f78d370603bb66b26b1e8a66e4dc2e512",
        "width": 495,
        "height": 495,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T00:44:29Z",
        "tags": [],
        "bytes": 54839,
        "type": "upload",
        "etag": "6626dd79d3f9cf3443a1a9cfe32b336e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677804269/avalanche2023spring/vhltqmxwh0kgt2nhiqs6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677804269/avalanche2023spring/vhltqmxwh0kgt2nhiqs6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T00:53:52.073Z" }
      }
    ],
    "title": "",
    "description": "challenge 1 extended",
    "comments": []
  },
  {
    "_id": "dpGumKqwm2ZfgBryt",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": { "$date": "2023-04-28T04:17:11.711Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a0619ccc50f1ce6bd6512a99f8fa3570",
        "public_id": "avalanche2023spring/fuljkkn0lqnmoiwhrn71",
        "version": 1682655472,
        "version_id": "7c3df3fb5d668a2c590b530551e6562f",
        "signature": "76967f53039690604ca3bfb0876e6f78d58d9019",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T04:17:52Z",
        "tags": [],
        "bytes": 1624617,
        "type": "upload",
        "etag": "7ddfadef65f5bcd63d4505cb4f351594",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682655472/avalanche2023spring/fuljkkn0lqnmoiwhrn71.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682655472/avalanche2023spring/fuljkkn0lqnmoiwhrn71.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "792750ce5431e1dd4c9cfd5831df2839",
        "public_id": "avalanche2023spring/alpjv2tsqow8iixcuhou",
        "version": 1682655482,
        "version_id": "59f85120e5af580514c84322e7b8c9c9",
        "signature": "24bfdd81bed1162fcacfaf72371044263500c305",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T04:18:02Z",
        "tags": [],
        "bytes": 1603446,
        "type": "upload",
        "etag": "9ed91a5a17d252d8a0067316d9fd6913",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682655482/avalanche2023spring/alpjv2tsqow8iixcuhou.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682655482/avalanche2023spring/alpjv2tsqow8iixcuhou.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "I decided to include randomness in my 3D cinema4D scenes, I used a random number generator to generate the level of which the trees need to \"melt\"",
    "comments": []
  },
  {
    "_id": "dpp3B9XHWyPMqQHky",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T23:57:50.993Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "247b592427990f5b1aee272a95cb7547",
        "public_id": "avalanche2023spring/etoleykxv8ezh02pgegj",
        "version": 1676505487,
        "version_id": "f7aacaf8164c77be6abe8907bc2a9882",
        "signature": "d64c437449fc98b167b259dbdc0929af702e5179",
        "width": 1314,
        "height": 1282,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T23:58:07Z",
        "tags": [],
        "bytes": 1340651,
        "type": "upload",
        "etag": "6fd60b0f109cf0cba984b42724456b54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676505487/avalanche2023spring/etoleykxv8ezh02pgegj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676505487/avalanche2023spring/etoleykxv8ezh02pgegj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T04:45:28.267Z" }
      }
    ],
    "title": "",
    "description": "NOISEFLOW",
    "code": "let t;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tstrokeWeight(1);\n    stroke(255);\n    noFill();\n\tt = 0;\n\tframeRate(60); //Lines behind change accordingly\n}\n\nfunction draw() {\n\tbackground(0,10);\n\tcircling(0, 600, 400);\n\tcircling(200, 0, 1);\n\tcircling(100, 200, 40);\n\tcircling(40, 800, 30);\n    circling(0, 600, 400);\n\tcircling(200, 0, 500);\n\tcircling(100, 200, 40);\n\tcircling(4, 80, 300);\n    circling(20, 400, 15);\n    circling(100, 300, 800);\n\tcircling(50, 100, 2);\n    circling(20, 400, 15);\n\tcircling(5, 60, 600);\n}\n\nfunction circling(xPos, yPos, circleSize) {\n  let x = width * noise(t + xPos);\n  let y = height * noise(t - yPos); //Wanted to see the difference of plus \n let size = width/2 * noise(t + circleSize);\n\n  ellipse(x, y, size, size);\n\n  t += 0.001;\n}",
    "comments": []
  },
  {
    "_id": "duTb8WwLPzfbN2Jo2",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": { "$date": "2023-02-03T03:11:16.558Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e9aa72efdabd4b38222314c555b698bc",
        "public_id": "avalanche2023spring/ttzrgpnfmg2p3zh2aqpz",
        "version": 1675452148,
        "version_id": "4b5fbae6db5845bfaf351d25742fac9d",
        "signature": "acd340f0eb155db2d78fb3184bdd62aaa9af67db",
        "width": 1198,
        "height": 1208,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-03T19:22:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 2784993,
        "type": "upload",
        "etag": "4e12f4bcf3ae8f7317b7c2d3742db6ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675452148/avalanche2023spring/ttzrgpnfmg2p3zh2aqpz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675452148/avalanche2023spring/ttzrgpnfmg2p3zh2aqpz.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127665",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "3451435",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4791385,
        "duration": 4.65,
        "rotation": 0,
        "nb_frames": 340,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0c628daafe79009634bfd27cd27b0aac",
        "public_id": "avalanche2023spring/etxfzerxqolkiw6ry2rb",
        "version": 1675452165,
        "version_id": "2681f8303cfb1cafe968cfadfbe44e1b",
        "signature": "1db5a72c90885080601182c48fe4b3e55c7dc797",
        "width": 1208,
        "height": 1200,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-03T19:22:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 3431646,
        "type": "upload",
        "etag": "7e35d484621fc71a01cae67d0d1e2f1d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675452165/avalanche2023spring/etxfzerxqolkiw6ry2rb.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675452165/avalanche2023spring/etxfzerxqolkiw6ry2rb.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128038",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "3424420",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4488256,
        "duration": 6.116667,
        "rotation": 0,
        "nb_frames": 426,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "04def2de9c1dd6c3a5638b2fb3716e61",
        "public_id": "avalanche2023spring/zu291pdyjcjspfuykjl2",
        "version": 1675452173,
        "version_id": "28bd80d863fc06c11fc9f49ac0f112f4",
        "signature": "3bb6a61b80b9ed47754605545e3c267d0614be3f",
        "width": 1200,
        "height": 1184,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T19:22:53Z",
        "tags": [],
        "bytes": 518784,
        "type": "upload",
        "etag": "dcd796c0c9239a5e54cb68549d7bf824",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675452173/avalanche2023spring/zu291pdyjcjspfuykjl2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675452173/avalanche2023spring/zu291pdyjcjspfuykjl2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T05:55:12.446Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T06:50:56.252Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:25:08.494Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T15:12:26.605Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T19:55:39.122Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T03:50:56.225Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:19.08Z" }
      }
    ],
    "lesson": "Random",
    "title": "",
    "description": "**Circle grid code challenge with lerpColor and endBias:** When I first completed the challenge, I wasn't happy with how the colors clashed (see screenshot at the end). So I modified the sketch to choose two random colors as the main colors, and choose random colors that lie in between the main colors for each column (using lerpColor). I also applied end bias to the column colors so that the contrast between the two main colors is more visible (as in some runs of the sketch they barely were). *End bias was inspired by Alex's question and Justin's answer on the notion page!*",
    "inspiration_name": "Random Chapter",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  //noLoop();\n  frameRate(1);\n\n  noStroke();\n  fill(255, 255, 255);\n}\n\nfunction draw() {\n  clear();\n  background(32);\n\n  fill('#fff');\n\n  let rows = height / 50;\n  let cols = width / 50;\n  \n  \n  let startR = floor(random(255));\n  let startG = floor(random(255));\n  let startB = floor(random(255)); \n  let startColor = color(startR, startG, startB);\n  \n  let endR = floor(random(255));\n  let endG = floor(random(255));\n  let endB = floor(random(255));\n  let endColor = color(endR, endG, endB);\n\n  //Stores colours for each column\n  let colColors = [];\n  \n  for (row = 0; row < rows; row++) {\n    \n    for (col = 0; col < cols; col++) {\n      let lerpVal = endBias();\n      if (!colColors[col]) colColors[col] = lerpColor (startColor, endColor, lerpVal);\n      let tempColor = colColors[col];\n      fill (tempColor);\n      drawThing(col * 50 + 25, row * 50 + 25);\n    }\n  }\n}\n\n//ENDBIAS INSPIRED BY ALEX SILVA & JUSTIN BAKSE\nfunction endBias() {\n  let value = random() + random();  \n\tvalue = value - 1;\n  if (value < 0) value += 2;\n\treturn value;\n}\n\nlet brownianRadius = 12;\n\nfunction drawThing(x, y) {\n  let radius;\n\n  // even\n  radius = random(0, 50);\n\n  ellipse(x, y, radius, radius);\n}",
    "comments": []
  },
  {
    "_id": "e46ZSqRF38NFs7z7k",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T02:15:34.741Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ec760153e296bb1dae196a5a4b1a6104",
        "public_id": "avalanche2023spring/qj8ptdawvozzolod2zze",
        "version": 1675908946,
        "version_id": "d582f29d0ece6c1f0ff07e32ceb19718",
        "signature": "5b34666af840eba5d756751b9a08794255a3f4b7",
        "width": 848,
        "height": 850,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-09T02:15:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 19298281,
        "type": "upload",
        "etag": "7494417f1cb4820022c2c8a7805d2ccd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675908946/avalanche2023spring/qj8ptdawvozzolod2zze.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675908946/avalanche2023spring/qj8ptdawvozzolod2zze.mp4",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2092",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "5693912",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 5703855,
        "duration": 27.066667,
        "rotation": 0,
        "nb_frames": 812,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T14:43:10.044Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T04:29:30.327Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T03:50:58.705Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:34.145Z" }
      }
    ],
    "title": "",
    "description": "I love these slow enthralling patterns random can create.",
    "code": "let a;\nvar color1;\nvar color2;\nvar color3;\n\nfunction setup() {\n  color1 = random(0, 255);\n  color2 = random(0, 255);\n  color3 = random(0, 255);\n  createCanvas(700, 700);\n  stroke(color1, color2, color3);\n  // a = height / 2;\n  a = 100;\n}\n\nfunction draw() {\n  background(0);\n  noFill();\n\n  for (let i = 0; i < 40; i = i + 1) {\n    ellipse(0, a, width, a + i * 100);\n    ellipse(width, a, width, a + i * 100);\n    ellipse(height / 2, width / 2, a + i * 100, a + i * 100);\n  }\n  strokeWeight(10);\n  a = a - 4;\n  if (a < 0) {\n    a = height;\n  }\n}",
    "comments": []
  },
  {
    "_id": "e8bNj5YwgTgoSXxGa",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T04:22:52.367Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "20e4ca60437cdfa8ad021213f633c3c4",
        "public_id": "avalanche2023spring/y8t8yyhu11ovmkqqgmy1",
        "version": 1675311781,
        "version_id": "69f7d26dc14b0ef50580e271203d6406",
        "signature": "20b06a84fe66b975357b38df76666a3671de1b64",
        "width": 1196,
        "height": 1116,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-02T04:23:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 18877045,
        "type": "upload",
        "etag": "00d66554a81cd202b05c9f26929c39e0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675311781/avalanche2023spring/y8t8yyhu11ovmkqqgmy1.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675311781/avalanche2023spring/y8t8yyhu11ovmkqqgmy1.mp4",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Constrained Baseline",
          "bit_rate": "9076661",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 9078776,
        "duration": 16.633333,
        "rotation": 0,
        "nb_frames": 998,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T18:08:48.834Z" }
      }
    ],
    "title": "",
    "description": "This is a second iteration of the sketch I just posted! I removed the Perlin noise and instead adjusted the amounts of connections using the textToPoint() function in p5",
    "code": "// horrible code - symbolisyng system falling apart\n\nlet font_one;\nlet fontSize = 100;\nlet point_amount = 0.3;\n\nlet e_letter;\nlet d_letter;\nlet u_letter;\nlet c_letter;\nlet a_letter;\nlet t_letter;\nlet i_letter;\nlet o_letter;\nlet n_letter;\n\nlet e_number = 1;\nlet d_number = 1;\nlet u_number = 1;\nlet c_number = 1;\nlet a_number = 1;\nlet t_number = 1;\nlet i_number = 1;\nlet o_number = 1;\n\nlet t = 1;\nlet r = -1;\n\nlet x_location;\nlet y_location;\n\nfunction preload() {\n  font_one = loadFont(\"Fonts/CaslonOS-Regular.otf\");\n}\n\nfunction setup() {\n  createCanvas(600, 560);\n  textFont(font_one);\n  textSize(fontSize);\n  noFill();\n  textAlign(CENTER);\n  strokeWeight(0.1);\n\n  // the amount of points have to be exactly the same for both letters, therefore we need to make the SampleFactor different for both letters (match it perfectly)\n\n  e_letter = font_one.textToPoints(\"E\", 61, 187, fontSize, {\n    sampleFactor: 0.35,\n  });\n  d_letter = font_one.textToPoints(\"D\", 128, 187, fontSize, {\n    sampleFactor: 0.365,\n  });\n  u_letter = font_one.textToPoints(\"U\", 195, 187, fontSize, {\n    sampleFactor: 0.383,\n  });\n  c_letter = font_one.textToPoints(\"C\", 262, 187, fontSize, {\n    sampleFactor: 0.405,\n  });\n  a_letter = font_one.textToPoints(\"A\", 329, 187, fontSize, {\n    sampleFactor: 0.395,\n  });\n  t_letter = font_one.textToPoints(\"T\", 396, 187, fontSize, {\n    sampleFactor: 0.438,\n  });\n  i_letter = font_one.textToPoints(\"I\", 463, 187, fontSize, {\n    sampleFactor: 0.76,\n  });\n  o_letter = font_one.textToPoints(\"O\", 530, 187, fontSize, {\n    sampleFactor: 0.3745,\n  });\n  n_letter = font_one.textToPoints(\"N\", 597, 187, fontSize, {\n    sampleFactor: 0.322,\n  });\n}\n\nfunction draw() {\n  if (mouseY < 80 &&  mouseY>=0) {\n    e_number = 25;\n    d_number = 15;\n    u_number = 10;\n    c_number = 8;\n    a_number = 4;\n    t_number = 2;\n    i_number = 1;\n  } else if (mouseY < 160 && mouseY >=80) {\n    e_number = 15;\n    d_number = 25;\n    u_number = 15;\n    c_number = 10;\n    a_number = 8;\n    t_number = 4;\n    i_number = 2;\n  } else if (mouseY < 240 &&  mouseY >=160) {\n    e_number = 10;\n    d_number = 15;\n    u_number = 25;\n    c_number = 15;\n    a_number = 10;\n    t_number = 8;\n    i_number = 4;\n  } else if (mouseY < 320 &&  mouseY >=240) {\n    e_number = 8;\n    d_number = 10;\n    u_number = 15;\n    c_number = 25;\n    a_number = 15;\n    t_number = 10;\n    i_number = 8;\n  } else if (mouseY < 400 && mouseY >=320) {\n    e_number = 4;\n    d_number = 8;\n    u_number = 10;\n    c_number = 15;\n    a_number = 25;\n    t_number = 15;\n    i_number = 10;\n  } else if (mouseY < 480 && mouseY >=400) {\n    e_number = 2;\n    d_number = 4;\n    u_number = 8;\n    c_number = 10;\n    a_number = 15;\n    t_number = 25;\n    i_number = 15;\n    print(\"one\");\n  } else if (mouseY < 560 && mouseY >= 480) {\n    e_number = 1;\n    d_number = 2;\n    u_number = 4;\n    c_number = 6;\n    a_number = 10;\n    t_number = 15;\n    i_number = 25;\n    print(\"two\");\n  }\n  print(mouseY);\n\n  background(220);\n\n  push();\n  translate(-70, -110);\n  writetext(e_number);\n  push();\n  translate(0, 80);\n  writetext(d_number);\n  pop();\n  push();\n  translate(0, 160);\n  writetext(u_number);\n  pop();\n  push();\n  translate(0, 240);\n  writetext(c_number);\n  pop();\n  push();\n  translate(0, 320);\n  writetext(a_number);\n  pop();\n  push();\n  translate(0, 400);\n  writetext(t_number);\n  pop();\n  push();\n  translate(0, 480);\n  writetext(i_number);\n  pop();\n\n  pop();\n}\n\nfunction writetext(number) {\n  // E-D\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(e_letter[i].x, e_letter[i].y);\n    vertex(d_letter[i].x, d_letter[i].y);\n  }\n  endShape();\n\n  // D-U\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(d_letter[i].x, d_letter[i].y);\n    vertex(u_letter[i].x, u_letter[i].y);\n  }\n  endShape();\n\n  // U-C\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(u_letter[i].x, u_letter[i].y);\n    vertex(c_letter[i].x, c_letter[i].y);\n  }\n  endShape();\n\n  // C-A\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(c_letter[i].x, c_letter[i].y);\n    vertex(a_letter[i].x, a_letter[i].y);\n  }\n  endShape();\n\n  // A-T\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(a_letter[i].x, a_letter[i].y);\n    vertex(t_letter[i].x, t_letter[i].y);\n  }\n  endShape();\n\n  // T-I\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(t_letter[i].x, t_letter[i].y);\n    vertex(i_letter[i].x, i_letter[i].y);\n  }\n  endShape();\n\n  // I-O\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(i_letter[i].x, i_letter[i].y);\n    vertex(o_letter[i].x, o_letter[i].y);\n  }\n  endShape();\n\n  // O-N\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(o_letter[i].x, o_letter[i].y);\n    vertex(n_letter[i].x, n_letter[i].y);\n  }\n  endShape();\n}",
    "comments": []
  },
  {
    "_id": "eCgB4wRwDGd5f7WQR",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T09:19:05.193Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4bbc2197de09bc02ccc5a1ceb64dcca0",
        "public_id": "avalanche2023spring/jzl2hc1oxssngh0gfv2q",
        "version": 1677143965,
        "version_id": "5aef782462b4838b3f4e804269539bcb",
        "signature": "2e9a6364e936470fecdaa5acff6e7a96030c459d",
        "width": 1686,
        "height": 1196,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T09:19:25Z",
        "tags": [],
        "pages": 0,
        "bytes": 15700811,
        "type": "upload",
        "etag": "8e4b63b55d8fd29b52265e227719d689",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677143965/avalanche2023spring/jzl2hc1oxssngh0gfv2q.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677143965/avalanche2023spring/jzl2hc1oxssngh0gfv2q.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677143965/avalanche2023spring/jzl2hc1oxssngh0gfv2q.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "114031",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "3720400",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3845194,
        "duration": 32.665833,
        "rotation": 0,
        "nb_frames": 1961,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a34eb2f28f6deb5bc82ba6d574a912c4",
        "public_id": "avalanche2023spring/tmk8vcxo8u1cmfivqllh",
        "version": 1677143966,
        "version_id": "341aa820e48f0ac496f97b0c2278c5b9",
        "signature": "dc956679a06feb22543cd6d67de4f2ee11f1542f",
        "width": 1130,
        "height": 1066,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T09:19:26Z",
        "tags": [],
        "bytes": 322815,
        "type": "upload",
        "etag": "286573cc044958b02db639478ba331ad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677143966/avalanche2023spring/tmk8vcxo8u1cmfivqllh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677143966/avalanche2023spring/tmk8vcxo8u1cmfivqllh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c11923cfbf389161c190769a9e7ba804",
        "public_id": "avalanche2023spring/zhi0wwcipeavmtpiemkh",
        "version": 1677144342,
        "version_id": "8adaca886dbe79c78b7f09b7a10be025",
        "signature": "10932daad966385c120b3d4cfd34473a2f7cf44c",
        "width": 1148,
        "height": 1114,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T09:25:42Z",
        "tags": [],
        "bytes": 557637,
        "type": "upload",
        "etag": "c82e98229ac0d97a1a23b2646359982e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677144342/avalanche2023spring/zhi0wwcipeavmtpiemkh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677144342/avalanche2023spring/zhi0wwcipeavmtpiemkh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T14:53:16.249Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:17.802Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "funny",
        "created_at": { "$date": "2023-02-23T17:12:55.907Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T21:31:52.508Z" }
      }
    ],
    "title": "",
    "description": "emoji face generator! i may never sleep again...",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet chrom; //hold my font\nlet eyes = [];\nlet nose = [];//set up an array to receive coordinates\n// let fontSize=150; //initialize size of text\n\nconst params = {\n  eyes: 0,\n  nose: 0,\n  lips:0,\n  size: 100,\n  color: \"#f00\",\n};\n\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"eyes\", { min: 0, max: 3 });\npane.addInput(params, \"nose\", { min: 0, max: 3 });\npane.addInput(params, \"lips\", { min: 0, max: 3 });\npane.addInput(params, \"size\", { min: 10, max: 400 });\npane.addInput(params, \"color\");\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  rectMode(CENTER);\ntextAlign(CENTER);\n  // if you change a params property tweakpane will reflect it\n  params.pos_x = width * 0.5;\n  params.pos_y = height * 0.5;\n  \n}\n\nfunction draw() {\n  background(params.color);\n  // fill(params.color);\n  textSize(params.size);\n  eyes = [\"👁 👁\", \"🌼 🌼\", \"👀\",\"⭐️ ⭐️\"]\n  nose = [\"👃\", \"🌷\", \"🐽\", \"⚡️\"]\n  lips = [\"👄\", \"🌱\", \"👅\", \"🌙\"]\n  // for(i=0;i<3;i++){\n      text(eyes[int(params.eyes)],width/2,height/2-50);\n  text(nose[int(params.nose)],width/2,height/2+20);\n  text(lips[int(params.lips)],width/2,height/2+110);\n \n      // }\n\n  // text(\"👁\",params.pos_x,params.pos_y)\n  // rect(params.pos_x, params.pos_y, params.size, params.size);\n}",
    "comments": []
  },
  {
    "_id": "eJm2ewFabG2uediSw",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T03:38:45.118Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dbbdc34dc2e8df24f6ba6259073a26b4",
        "public_id": "avalanche2023spring/saoeb93szjsmgz9umkbo",
        "version": 1678333155,
        "version_id": "30c474419baa05cb5d8eb69c4d3dadc9",
        "signature": "e0637d930402171dbc3a01d5e5dd7bfc03a96fca",
        "width": 900,
        "height": 900,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T03:39:15Z",
        "tags": [],
        "bytes": 1786681,
        "type": "upload",
        "etag": "58e8c201aa53633d31124a9c78e06d3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678333155/avalanche2023spring/saoeb93szjsmgz9umkbo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678333155/avalanche2023spring/saoeb93szjsmgz9umkbo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b743ee48ae49f4d466d5f845fbe21c0f",
        "public_id": "avalanche2023spring/i08xh5e01mod7wioqlw9",
        "version": 1678333157,
        "version_id": "b91b824bc46bb19d37c044588983c99c",
        "signature": "1b3d9fa0ed733557db4d6f237ba073525b2dabc8",
        "width": 900,
        "height": 900,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T03:39:17Z",
        "tags": [],
        "bytes": 1640159,
        "type": "upload",
        "etag": "b5ffee94eadee8bd68b924947e2405e5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678333157/avalanche2023spring/i08xh5e01mod7wioqlw9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678333157/avalanche2023spring/i08xh5e01mod7wioqlw9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:31.142Z" }
      }
    ],
    "title": "",
    "description": "Feeling inspired by spirals again - this week using pixels",
    "comments": []
  },
  {
    "_id": "eNRRoYWT6ECgvgsv8",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-14T18:06:26.226Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "72e300b26b341e6980056f7eb3702a40",
        "public_id": "avalanche2023spring/o0h2eihpz22cedetyojv",
        "version": 1676398002,
        "version_id": "812f02438b7be7fe42abdcb2cce6c88a",
        "signature": "5d5f18df0e167c44ed87dbf90b67003be75ddcfd",
        "width": 1074,
        "height": 1076,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-14T18:06:42Z",
        "tags": [],
        "bytes": 771933,
        "type": "upload",
        "etag": "f980aede04f5df4e8e346a86f082a56e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676398002/avalanche2023spring/o0h2eihpz22cedetyojv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676398002/avalanche2023spring/o0h2eihpz22cedetyojv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "82c7ea9136fc25a0c85a80e6d8ae0e16",
        "public_id": "avalanche2023spring/jwld7wde7npiq9oy9h3v",
        "version": 1676398004,
        "version_id": "dc909a674da3a41264e7da50d1cd7c1e",
        "signature": "6fa469af93ec5252117eb5035fa6efd09cf08e5b",
        "width": 1064,
        "height": 1066,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-14T18:06:44Z",
        "tags": [],
        "bytes": 690484,
        "type": "upload",
        "etag": "9cac3bca864898ee150a6d3c24b0991c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676398004/avalanche2023spring/jwld7wde7npiq9oy9h3v.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676398004/avalanche2023spring/jwld7wde7npiq9oy9h3v.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0b2a3d74a15baf4d89465b0903bfbd82",
        "public_id": "avalanche2023spring/jyr4skmsp9ak4on6j05o",
        "version": 1676398007,
        "version_id": "d55d0458cce3237bf8b9c9c0282987e8",
        "signature": "e660cd11cf767e1d4cebf001772b556d704a86a1",
        "width": 1188,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-14T18:06:47Z",
        "tags": [],
        "bytes": 944899,
        "type": "upload",
        "etag": "bc68412eb8180668482f46770005b3ac",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676398007/avalanche2023spring/jyr4skmsp9ak4on6j05o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676398007/avalanche2023spring/jyr4skmsp9ak4on6j05o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T21:50:13.837Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T04:10:08.31Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T05:07:10.822Z" }
      }
    ],
    "title": "",
    "description": "I used the grass example as a starting point for these sketches! They're kind of inspired by basket weaving/thread/yarn.",
    "comments": []
  },
  {
    "_id": "ePCWKBpAov2tKyF9o",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T00:39:33.741Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "449dd2fd48298e5ea5d265a7e82686df",
        "public_id": "avalanche2023spring/ec9o1fvxurqthtvxflze",
        "version": 1674952788,
        "version_id": "07dac76a36b842e708da8146abba60d9",
        "signature": "00c4a5835c3ebbd9ce8ffeafaeb3c52a6d2dd200",
        "width": 1350,
        "height": 4050,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-29T00:39:48Z",
        "tags": [],
        "bytes": 666985,
        "type": "upload",
        "etag": "539abda65224b813e672c326ff8c3167",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674952788/avalanche2023spring/ec9o1fvxurqthtvxflze.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674952788/avalanche2023spring/ec9o1fvxurqthtvxflze.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Here are the instructions for my group. Apologies for the number of steps! Let me know if you have any questions/if the steps are confusing :)",
    "comments": []
  },
  {
    "_id": "eSmyXDZmD338zGzre",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-13T07:36:56.681Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1552492dd2dfdb97752b2b4f284518af",
        "public_id": "avalanche2023spring/xhojtner28p4x9uzw2xv",
        "version": 1676273839,
        "version_id": "a391933317f10432917023fdac2608f0",
        "signature": "56339d0ae2c5f2ba84b59a439490feb8bfe7516c",
        "width": 2000,
        "height": 2000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-13T07:37:19Z",
        "tags": [],
        "bytes": 797639,
        "type": "upload",
        "etag": "6904da8302263600584fa1e09914415a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676273839/avalanche2023spring/xhojtner28p4x9uzw2xv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676273839/avalanche2023spring/xhojtner28p4x9uzw2xv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-13T14:52:39.955Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:45:00.497Z" }
      }
    ],
    "title": "",
    "description": "Wrapping my head around noise still, had textiles on my mind",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(2000, 2000);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  noLoop(); \n  noStroke();\n  background(200);\n  // background(0);\n  ellipseMode(CENTER);\n  noiseDetail(.9);\n\n\nfor (let i = 10; i < width; i+=20 ) {\n  fill(noise(i * .01)*20);\n\n  print(noise(i*.01)*10);\n  rect(i, height/2, 10 + noise(i * .01)*20, height);\n}\nfor (let j = 10; j < height; j+=20 ) {\nfill(200 + noise(j*.01)*20, 100 + noise(j*.01)*20, random(255), random(255));\n// fill(200 + noise(j*.01)*20, 100 + noise(j*.01)*20, random(255), 150 + noise(j*.01)*10);\n\n  // print(noise(i*.01)*10);\n  rect(width/2, j, width, 10 + noise(j*.01)*20);\n}\n\nfor (let i = 10; i < width; i+=20 ) {\n  fill(0, 0, 0, random(255));\n  rect(i, height/2, 10 + noise(i * .01)*50, height);\n  // rect(i, height/2, 10 + noise(i * .1)*50, height);\n  // fill(0, 0, 0, random(100));\n  // rect(i, height/2, 10 + noise(i * .2)*50, height);\n}\n}",
    "comments": []
  },
  {
    "_id": "eW45NJ299uERhGvfp",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:39:41.781Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "25590ab3e72bbff1e56ec8df5c62da16",
        "public_id": "avalanche2023spring/xthnxyj7xqajcgvzy0uo",
        "version": 1683301202,
        "version_id": "e2221f8d3bf9242f425a78081db398c9",
        "signature": "1336279c7addd2f6b9c6bf54a75774eff153789c",
        "width": 742,
        "height": 834,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:40:02Z",
        "tags": [],
        "bytes": 64595,
        "type": "upload",
        "etag": "3861468c4de33fb9ecec5cb628fe53b3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683301202/avalanche2023spring/xthnxyj7xqajcgvzy0uo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683301202/avalanche2023spring/xthnxyj7xqajcgvzy0uo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "11304974a89af893e3e577274b32dd71",
        "public_id": "avalanche2023spring/sddtmqbqyfub25gkfaw6",
        "version": 1683301206,
        "version_id": "1c472ae056ee45cc568cd7fbbfe3a883",
        "signature": "3bcbf73d958eb665fb80f0b47cef86feb8dd54ca",
        "width": 894,
        "height": 826,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:40:06Z",
        "tags": [],
        "bytes": 65560,
        "type": "upload",
        "etag": "54dd07a8ef371f6a1bad1e57bce8b6cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683301206/avalanche2023spring/sddtmqbqyfub25gkfaw6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683301206/avalanche2023spring/sddtmqbqyfub25gkfaw6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2de3d671ed29a9b88047551bd9c5f1e0",
        "public_id": "avalanche2023spring/oewt2dryw6je3rxppykh",
        "version": 1683301292,
        "version_id": "321950e139838afe9a10be3b7417dac5",
        "signature": "e41daf503007280a44143ced1cb608a0600d60c2",
        "width": 1404,
        "height": 884,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T15:41:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 12187152,
        "type": "upload",
        "etag": "2b3488b4974af29264cf2bf6cb55bc90",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683301292/avalanche2023spring/oewt2dryw6je3rxppykh.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683301292/avalanche2023spring/oewt2dryw6je3rxppykh.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683301292/avalanche2023spring/oewt2dryw6je3rxppykh.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126759",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "8665083",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10120818,
        "duration": 9.633333,
        "rotation": 0,
        "nb_frames": 639,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:55.622Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T22:58:07.088Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:18:05.941Z" }
      }
    ],
    "title": "",
    "description": "MY CASTLE MADE OUT OF CHESS PIECES",
    "comments": []
  },
  {
    "_id": "ed8mmb9ou5WjRxBdh",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T19:32:21.454Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "088be0134a738a429c3f9dfb37676ff1",
        "public_id": "avalanche2023spring/evavm0qojtnbjvyb1ck6",
        "version": 1680204751,
        "version_id": "10a04f6a9f80cc7fb915735bc491ff4f",
        "signature": "8d68c6971be7808a3b3b56afbe71c97e08a2b301",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-30T19:32:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 1076927,
        "type": "upload",
        "etag": "81befa9c2c9b1ba450ed2e6cc6fdc02b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680204751/avalanche2023spring/evavm0qojtnbjvyb1ck6.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680204751/avalanche2023spring/evavm0qojtnbjvyb1ck6.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680204751/avalanche2023spring/evavm0qojtnbjvyb1ck6.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "40866",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "356985",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 407348,
        "duration": 21.15,
        "rotation": 0,
        "nb_frames": 1269,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tried to figure out working with drums but I couldn't get two loops to overlap. This was the best I could do where I just started the same loop multiple times.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\nconst kick = new Tone.MembraneSynth({ \n  envelope: {\n  attack: 0,\n  decay: 0,\n  sustain: 0.3,\n  release: 0,\n  }\n}).toMaster();\n\nconst snare = new Tone.MembraneSynth({ \n  envelope: {\n  attack: 0.002,\n  decay: 0.0001,\n  sustain: 0,\n  release: 0,\n  }\n}).toMaster();\n\nconst hihat = new Tone.MembraneSynth({ \n  envelope: {\n  attack: 0.00009,\n  decay: 0.000,\n  sustain: 0,\n  release: 0,\n  }\n}).toMaster();\n\nwindow.onmousedown = () => {\n    \n    const hatLoop = new Tone.Loop((time) => {\n\t    hihat.triggerAttackRelease('C3', '8n');\n\t\n}, \"8n\").start();\n    const kickLoop = new Tone.Loop((time) => {\n\t    kick.triggerAttackRelease('C1', '8n');\n\t    const hatLoop = new Tone.Loop((time) => {\n\t    hihat.triggerAttackRelease('C3', '8n');\n\t\n}, \"8n\").start();\n}, \"1m\").start();\n    Tone.Transport.start();\n\n};",
    "comments": []
  },
  {
    "_id": "ef3s5eRXoPvyeohDM",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T21:39:07.448Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "96aeb7ba38e8cfa373ae61710bd29520",
        "public_id": "avalanche2023spring/o3urpp97oq0qbggpndci",
        "version": 1675028959,
        "version_id": "46b09652b8d229b47cf3b33af528ebc1",
        "signature": "a465a065c76beb4d3ddb105d38139da5113fff04",
        "width": 1522,
        "height": 340,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-29T21:49:19Z",
        "tags": [],
        "bytes": 29479,
        "type": "upload",
        "etag": "a768b531cc02f97edfa0ccc4b8723277",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675028959/avalanche2023spring/o3urpp97oq0qbggpndci.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675028959/avalanche2023spring/o3urpp97oq0qbggpndci.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 1: Instructions\n\n1) Find an image of your favorite cartoon character. Make sure it isn't too simple.\n2) Flip is upside down/vertically \n3)Find a paper of any size.\n4) Using a bright marker, draw a line drawing of your upside down character. Don't get caught up in the proportions, try to mimic the shape and form. Also don't focus on thinking about what part of the body you're drawing, pretend the image is abstract and you are trying to copy the lines.\n5) Flip your paper to see your character \"the right way\". Revert your image back by flipping it vertically, and post both of them!",
    "comments": []
  },
  {
    "_id": "eiSz8Ct3fHa73Lj6a",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-29T04:06:55.46Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fd993e68ec73536054778179ae97b662",
        "public_id": "avalanche2023spring/rd5jutltmbsekpvu3g3x",
        "version": 1680062823,
        "version_id": "ca489b53583ca4921ef24ea1e8644262",
        "signature": "78b7e33a8a109032affb965ae33ef3bdaebe4a58",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-29T04:07:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 851636,
        "type": "upload",
        "etag": "0871547c0c45e6cff511a1597d15e528",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680062823/avalanche2023spring/rd5jutltmbsekpvu3g3x.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680062823/avalanche2023spring/rd5jutltmbsekpvu3g3x.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680062823/avalanche2023spring/rd5jutltmbsekpvu3g3x.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "108127",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "269743",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 387459,
        "duration": 17.583333,
        "rotation": 0,
        "nb_frames": 1055,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-29T21:04:21.237Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:41.852Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T16:29:01.928Z" }
      }
    ],
    "title": "",
    "description": "TONE.JS IS INSANE! I looked up a tutorial on how to design a particular synthesizer sound that was meant for a proper, high-grade, production-level synthesizer that you use in actual music production. I then did the same steps in tone.js and got this result. The sound quality is UNBELIEVABLE! I'm a bit sad because I couldn't quite get the newest version of tone.js to import onto my local server and the newer version has additional features that I'm curious about. But this is more then plenty for now!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\nconst lowPass = new Tone.Filter({\n  frequency: 10,\n}).toMaster();\n\nconst synth = new Tone.PolySynth(11, Tone.Synth, {\n  oscillator : {\n    type : \"fatsawtooth\"\n  },\n  envelope: {\n    attack: 0,\n    decay: 0,\n    sustain: 0.8,\n    release: 0.9,\n  },\n}).connect(lowPass);\n\nconst synth2 = new Tone.PolySynth(8, Tone.Synth, {\n  oscillator : {\n    type : \"fatsawtooth\"\n  },\n  envelope: {\n    attack: 0,\n    decay: 0,\n    sustain: 0,\n    release: 0.9,\n  },\n}).connect(lowPass);\n\nvar lfo = new Tone.LFO(5.9, 10, 900); // hertz, min, max\nlfo.connect(lowPass.frequency);\nlfo.start();\n\nconst chord1 = {\n    notes:[\"B3\", \"G3\", \"E3\", \"C3\"],\n    length: 2\n}\n\nconst chord2 = {\n    notes:[\"C4\", \"A3\", \"F3\", \"D3\"],\n    length: 2\n}\n\nconst chord3 = {\n    notes:[\"A3\", \"G3\", \"C3\", \"D#3\"],\n    length: 1\n}\n\nconst chord4 = {\n    notes:[\"G3\", \"C3\", \"D#3\", \"G#2\",],\n    length: 1\n}\n\nconst chordProg = [chord1, chord2, chord1, chord3, chord4, chord1, chord2, chord1, chord3, chord4];\nwindow.onmousedown = () => {\n\n  let t = Tone.now();\n  for (const chord of chordProg) {\n    if (chord.notes !== \"rest\") {\n      synth.triggerAttackRelease(chord.notes, Tone.Time(chord.length), t);\n    }\n    t += Tone.Time(chord.length);\n  }\n};",
    "comments": []
  },
  {
    "_id": "emadZBgBboa6FNxp7",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T04:21:22.954Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "696470d04df36e87efedd8c7088eeb81",
        "public_id": "avalanche2023spring/xifm4lmrwowqxoi9szjp",
        "version": 1680841289,
        "version_id": "e4df0370711bb64c843fae5ffcb504cc",
        "signature": "f20bb17f7f7eb2202dff6fcde726c9f9e410f5a6",
        "width": 1198,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T04:21:29Z",
        "tags": [],
        "bytes": 969658,
        "type": "upload",
        "etag": "2b7fa70434b84e3f2b71a56fb3a77bce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680841289/avalanche2023spring/xifm4lmrwowqxoi9szjp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680841289/avalanche2023spring/xifm4lmrwowqxoi9szjp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ae888b892ed25c994db971b4c75647af",
        "public_id": "avalanche2023spring/f3hzxjiqi8uh4sanl9rk",
        "version": 1680841331,
        "version_id": "38038ddbc8f486ec459e4fca9c08f548",
        "signature": "10425606948c5bf388c76d86911d3f18702f7ec2",
        "width": 1196,
        "height": 1198,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T04:22:11Z",
        "tags": [],
        "pages": 0,
        "bytes": 18682905,
        "type": "upload",
        "etag": "7a584ea367b3f7e86a6d5a500d4c13f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680841331/avalanche2023spring/f3hzxjiqi8uh4sanl9rk.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680841331/avalanche2023spring/f3hzxjiqi8uh4sanl9rk.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680841331/avalanche2023spring/f3hzxjiqi8uh4sanl9rk.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "8453343",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 8821706,
        "duration": 16.942667,
        "rotation": 0,
        "nb_frames": 1039,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T04:25:33.233Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T05:49:26.763Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T15:27:46.764Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "nerdy",
        "created_at": { "$date": "2023-04-07T15:27:47.467Z" }
      }
    ],
    "title": "",
    "description": "continuation of my earlier sketch... working puzzle!",
    "code": "// tiles tutorial by Steve's Makerspace\n// Video: https://youtu.be/3fUVUS4I3qM\n\n// sprite sheet from Coding Train:\n// https://editor.p5js.org/codingtrain/sketches/vhnFx1mml\n\nlet img;\nlet spritesheet;\nlet spritedata;\n\nlet tiles = [];\nlet sprites = [];\n\nfunction preload(){\n  spritedata = loadJSON('img.json');\n  spritesheet = loadImage('img/shibe.png');\n  spritesheet.resize(600,0);\n}\n\nfunction setup() {\n  createCanvas(600,600);\n  let frames = spritedata.frames;\n  for (let i = 0; i < frames.length; i++) {\n    let pos = frames[i].position;\n    let img = spritesheet.get(pos.x, pos.y, pos.w, pos.h);\n    tiles.push(img);\n    sprites[i] = new Sprite(img, 0, 0, 'dynamic');\n  }\n\n  sprites = shuffle(sprites);\n  sprites[0].position.x = 0+100;\n  sprites[0].position.y = 0+100;\n  sprites[1].position.x = 200+100;\n  sprites[1].position.y = 0+100;\n  sprites[2].position.x = 400+100;\n  sprites[2].position.y = 0+100;\n  sprites[3].position.x = 0+100;\n  sprites[3].position.y = 200+100;\n  sprites[4].position.x = 200+100;\n  sprites[4].position.y = 200+100;\n  sprites[5].position.x = 400+100;\n  sprites[5].position.y = 200+100;\n  sprites[6].position.x = 0+100;\n  sprites[6].position.y = 400+100;\n  sprites[7].position.x = 200+100;\n  sprites[7].position.y = 400+100;\n}\n\nfunction draw() {\n  background(0);\n  stroke(0);\n\n  for (sprite of sprites) {\n    if (mouse.pressing()) {\n      if (dist(mouseX, 0, sprite.position.x, 0) < 100 && dist(0, mouseY, 0, sprite.position.y) < 100) {\n        sprite.position.x = mouseX;\n        sprite.position.y = mouseY;\n      }\n    }\n\n    sprite.position.x = constrain(sprite.position.x, 100, width-100);\n    sprite.position.y = constrain(sprite.position.y, 100, height-100);\n    sprite.rotation = 0;\n    sprite.stroke = 'black';\n  }\n}\n\nfunction shuffle(array) {\n  let currentIndex = array.length,  randomIndex;\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}",
    "comments": []
  },
  {
    "_id": "ertvg4sboptXzgkEQ",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T01:53:10.471Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2a28a2c1bc7a7e8a6ed0a0d36d324442",
        "public_id": "avalanche2023spring/bhrielxyjqk4ennxl96r",
        "version": 1680227599,
        "version_id": "00d928c1649dc332fb452c8a49b523f0",
        "signature": "2fe8b995011ecbdeeb2dca5ec1a5748f736f87b4",
        "width": 1913,
        "height": 989,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-31T01:53:19Z",
        "tags": [],
        "bytes": 174964,
        "type": "upload",
        "etag": "2c260492f6ef56b3ef25670912b9250e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680227599/avalanche2023spring/bhrielxyjqk4ennxl96r.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680227599/avalanche2023spring/bhrielxyjqk4ennxl96r.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Pair challenge that Sora and I worked on. We were able to get almost every change we wanted up to uploading this but we still missed one or two things that we wanted to change. Nonetheless, we did our take on modifying the melody generator.\n\nNew characteristics: \n•\tWe are going to use the G-Major key.\n•\tWe are going to use 4/4 time.\n•\tWe will use only half-notes and eighth-notes.\n•\tNo notes will be played across the barline.\n•\tOur melody will have rests!\n•\tOur melody will have 6 measures.\n•\tThese measures will have an A B B A B C structure.\n•\tOur melody will start at a random place in the scale, and move up and down the scale in random steps.\n•\tOur melody should contain random pitch steps (could not achieve unfortunately)\n•\tOur melody will end on the tonic: G.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// modifying this for challenge -> https://compform.net/js_lab/js_lab.html?/music/tone_sketches/melody.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n  // Play the melody!\n\n  const melody = generate();\n  play(melody);\n};\n\n//const cmajor = [\"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\"];\n//const cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst gmajor = [\"G3\", \"A3\", \"B3\", \"C3\", \"D3\", \"E3\", \"F#3\", \"rest\"];\nconst notes = gmajor;\n\nlet degree = 0;\n\nfunction generate() {\n  // choose a starting place\n  degree = randomInt(0, 7);\n\n  // generate some measures\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  // last note should be the tonic\n  c[c.length - 1][0] = notes[0];\n\n  // arrange the measures and return\n  return [].concat(a, b, b, a, b, c);\n}\n\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n    // choose note\n    const change = sample([-1, -1, -1, 1, 1, -2, 2, 2, 2, -3]);\n    degree = constrain(degree + change, 0, 7);\n    const note = notes[degree];\n\n    // choose length\n    let length = Tone.Time(\"4n\");\n    if (Math.random() < 0.5) {\n      length = Tone.Time(\"8n\");\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n\n    // keep track of time\n    timeLeft = Tone.Time(timeLeft - length);\n\n    // add the note to the melody\n    m.push([note, length]);\n  }\n\n  return m;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\nconsole.log(\"click for music!\");\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}",
    "comments": []
  },
  {
    "_id": "eso92Tx6P9ttvH6Fa",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T10:55:27.121Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6c5569bceb4cec96263f60810236494e",
        "public_id": "avalanche2023spring/jdsok6ngq4rdfpvycwxi",
        "version": 1676544938,
        "version_id": "cef831ef9d9cfe2199cd4802814a261c",
        "signature": "360029701296ca3ec5b0bfc7c3ecfeb4c3f81ea3",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-16T10:55:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 9042509,
        "type": "upload",
        "etag": "915faf6ab2357d18e98df08d03e972ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676544938/avalanche2023spring/jdsok6ngq4rdfpvycwxi.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676544938/avalanche2023spring/jdsok6ngq4rdfpvycwxi.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676544938/avalanche2023spring/jdsok6ngq4rdfpvycwxi.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316950",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "5332276",
          "dar": "1:1",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 5642164,
        "duration": 12.779438,
        "rotation": 0,
        "nb_frames": 383,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T18:31:12.377Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:38.718Z" }
      }
    ],
    "title": "",
    "description": "Treasure map. I tried to make a series of islands, with water around them swelling and receding. Looks more like a bunch of blobs though lol",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  \n  background(255);\n  push();\n  noStroke();\n  fill(116, 171, 196, 190);\n  rect(0, 0, width, height);\n  pop();\n\n  for (let s = 110 + 25 * cos(TWO_PI * (millis()/3000)); s > 20; s -= 10) {\n    \n    let from = color(179, 136, 34); //ground\n    let to = color(143, 211, 242); //sea\n    let colour = lerpColor(from, to, s/175);\n    stroke(colour);\n    strokeWeight(s);\n\n    for (let t = 0; t < 5; t++) {\n      for (let i = 0; i < 15; i++) {\n        for (let j = 0; j < 15; j++) {\n          \n          let d = { x: 20, y: 30 };\n          let n = { x: noise(d.x) * 20, y: noise(d.y) * 20 };\n          let m = { i: noise(i) * 10, j: noise(j) * 10 };\n\n          let tValue = [\n            { x: 60,  y: 100 },\n            { x: 275, y: 25  },\n            { x: 125, y: 300 },\n            { x: 300, y: 200 },\n            { x: 350, y: 375 },\n          ];\n\n          push();\n          translate(tValue[t].x, tValue[t].y);\n          rotate(t * i * 36 + m.i, t * j * 36 + m.j);\n          line(-1 * d.x + n.x, -1 * d.y + n.y, d.x + n.x, d.y + n.y);\n          pop();\n          \n        }\n      }\n    }\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "esqS6Khuz27JkpQwC",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": { "$date": "2023-02-03T05:38:53.792Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7219b5365d565923e1eb4e06584f341b",
        "public_id": "avalanche2023spring/qbabrj9ccklsk3pwltbk",
        "version": 1675402775,
        "version_id": "1ede1b4639d2c4711212642d96d4fcce",
        "signature": "6341302dc56031c071e45974f271eb7ab6fe3152",
        "width": 1550,
        "height": 1150,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-03T05:39:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 19640789,
        "type": "upload",
        "etag": "c4c6a58124abd9fe31a16655cdfcc5ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675402775/avalanche2023spring/qbabrj9ccklsk3pwltbk.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675402775/avalanche2023spring/qbabrj9ccklsk3pwltbk.mp4",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317204",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "4607509",
          "dar": "31:23",
          "time_base": "1/24000"
        },
        "is_audio": false,
        "frame_rate": 23.976023976023978,
        "bit_rate": 4923326,
        "duration": 31.865167,
        "rotation": 0,
        "nb_frames": 764,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:19:57.936Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Played around on Scratch. A simple clicker game",
    "comments": []
  },
  {
    "_id": "euCFbWngiTDwxthfS",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T21:30:57.679Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f71c9ac351d3b2295c3373e10800a63d",
        "public_id": "avalanche2023spring/vzwue52pza5sjpqtzfyt",
        "version": 1677187863,
        "version_id": "110d525515687f55ff23bbf8494604ff",
        "signature": "2d8f865a23001156dfc4713e5faa700cc4b9a775",
        "width": 2292,
        "height": 1382,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T21:31:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 1341915,
        "type": "upload",
        "etag": "eb9055a0cb91d44f46eb448d635e2b08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677187863/avalanche2023spring/vzwue52pza5sjpqtzfyt.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677187863/avalanche2023spring/vzwue52pza5sjpqtzfyt.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677187863/avalanche2023spring/vzwue52pza5sjpqtzfyt.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "829382",
          "dar": "1146:691",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 839790,
        "duration": 12.783333,
        "rotation": 0,
        "nb_frames": 764,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "67f898b8177d5c38109b4826975aed44",
        "public_id": "avalanche2023spring/xba3393fq2w5kkt4hqpq",
        "version": 1677187866,
        "version_id": "2518fe8607d318d7d7e6c4ea54afc2cc",
        "signature": "157e081ea762de702b47780fe6a5c145cc648cc5",
        "width": 2302,
        "height": 1478,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T21:31:06Z",
        "tags": [],
        "bytes": 98026,
        "type": "upload",
        "etag": "5202a180e32e9d2a0b86eb4561d5bded",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677187866/avalanche2023spring/xba3393fq2w5kkt4hqpq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677187866/avalanche2023spring/xba3393fq2w5kkt4hqpq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cd8f76caf92fd7d773ddf9af5ff39f30",
        "public_id": "avalanche2023spring/m9abhn4z8cqbqdmx4pet",
        "version": 1677187868,
        "version_id": "e05b396a1e9f121ad07c74e75ac7f521",
        "signature": "5d66793ddca3103b571e9f7a8e2e5550ca852436",
        "width": 2298,
        "height": 1476,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T21:31:08Z",
        "tags": [],
        "bytes": 100083,
        "type": "upload",
        "etag": "60509c3d3208d0267ef7bdaa29cce7be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677187868/avalanche2023spring/m9abhn4z8cqbqdmx4pet.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677187868/avalanche2023spring/m9abhn4z8cqbqdmx4pet.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T01:04:16.362Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T15:22:14.89Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Shristi's comp form type sketch! I wanted to try something with type 🔠",
    "comments": []
  },
  {
    "_id": "ev6qsLcwRZ35EZncy",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T03:57:33.661Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "30a0315233dcd48b734b26ca8eb131d6",
        "public_id": "avalanche2023spring/lmhc9yajz0gvcl4gafrl",
        "version": 1680235796,
        "version_id": "1123fd9041a1c06d8e2554278d0c5c02",
        "signature": "17a75ba9ec46eeb79edf491f366f9a6678fc8d1c",
        "width": 3584,
        "height": 1818,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T04:09:56Z",
        "tags": [],
        "bytes": 415530,
        "type": "upload",
        "etag": "22fdb9c98adfb97583eca987c58584b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680235796/avalanche2023spring/lmhc9yajz0gvcl4gafrl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680235796/avalanche2023spring/lmhc9yajz0gvcl4gafrl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Experimenting with one of the sketches in the chapter",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth({\n  oscillator: {\n    type: \"triangle\", // sine, square, triangle, sawtooth, fat*\n  },\n  envelope: {\n    attack: 0.2,\n    decay: 0.3,\n    sustain: 0.6,\n    release: 1.5,\n  },\n});\n\n// Connect to the speakers.\nsynth.toMaster();\n\nwindow.onmousedown = (e) => {\n  // Play a sound when the mouse is pressed\n  const freq = map(e.clientX, 0, window.innerWidth, 220, 440);\n  console.log(`click -> ${Math.floor(freq)}hz`);\n  synth.triggerAttackRelease(freq, \"2n\");\n};\n\nfunction map(value, min1, max1, min2, max2) {\n  const n = (value - min1) / (max1 - min1);\n  return n * (max2 - min2) + min2;\n}\n\nconsole.log(\"click for music!\");",
    "comments": []
  },
  {
    "_id": "exjwKHxMfcH6SLn5z",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T16:38:16.073Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4f8730442108581f502765468b9ab19a",
        "public_id": "avalanche2023spring/eh7ln7shix5rzoj9qsba",
        "version": 1677256712,
        "version_id": "62884c80701dd863dc9bb687e754ecbe",
        "signature": "13fa158316a842adf70a7eb582d6872685699ee8",
        "width": 1548,
        "height": 1018,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T16:38:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 13461627,
        "type": "upload",
        "etag": "dacac09686002b7eb466da640f5afdaf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677256712/avalanche2023spring/eh7ln7shix5rzoj9qsba.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677256712/avalanche2023spring/eh7ln7shix5rzoj9qsba.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677256712/avalanche2023spring/eh7ln7shix5rzoj9qsba.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2983703",
          "dar": "774:509",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3144398,
        "duration": 34.249167,
        "rotation": 0,
        "nb_frames": 447,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6a53cb3fb8a0230b4c5c67e7eb9fa817",
        "public_id": "avalanche2023spring/vdgvihrlwift92cuylxz",
        "version": 1677257015,
        "version_id": "b072e74bb43b7fd3b93b202c7aba8d68",
        "signature": "2b8beca810ad9cdb4edaeaf57de669fb9a1ff484",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T16:43:35Z",
        "tags": [],
        "bytes": 52680,
        "type": "upload",
        "etag": "5629358845fe7f62a2a875d6d01e3247",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677257015/avalanche2023spring/vdgvihrlwift92cuylxz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677257015/avalanche2023spring/vdgvihrlwift92cuylxz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bf637b4f7cf85b5e874003ac12b14839",
        "public_id": "avalanche2023spring/ub09o9xtsm7vc91plhdt",
        "version": 1677257020,
        "version_id": "39d6aac0a0d96e8d5a86eda7a8ade2f4",
        "signature": "ea7dfaebd7f6ff998fbdf0d8884ffc230f03fe4e",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T16:43:40Z",
        "tags": [],
        "bytes": 119955,
        "type": "upload",
        "etag": "9dff15c445d7d47caea651951a88c8ed",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677257020/avalanche2023spring/ub09o9xtsm7vc91plhdt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677257020/avalanche2023spring/ub09o9xtsm7vc91plhdt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "I wanted to continue playing around with more params. With more refinement, I could see this being a great starting point for generating logo ideas",
    "comments": []
  },
  {
    "_id": "f3J4fzHbDG7ahsKxh",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T21:39:36.388Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "99402d4ffc16065eeea78abb55640b1a",
        "public_id": "avalanche2023spring/pxjmjna7ezlrnqtfgqxd",
        "version": 1676583584,
        "version_id": "f5671237783500c1db34994f3cd81860",
        "signature": "910d8261d0a753be47a5171a009d3e4c6340b095",
        "width": 1492,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-16T21:39:44Z",
        "tags": [],
        "bytes": 492708,
        "type": "upload",
        "etag": "c06be0a2c6b7b776752a26a42ebc3f9b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676583584/avalanche2023spring/pxjmjna7ezlrnqtfgqxd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676583584/avalanche2023spring/pxjmjna7ezlrnqtfgqxd.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dc20159229bbe8b2d3640d74a8459b39",
        "public_id": "avalanche2023spring/y3nfh5bdqczsjygc5l8l",
        "version": 1676583590,
        "version_id": "2104c0302d4c91acacde7a9b268d0043",
        "signature": "7964461480fa8c8ef19e28e06a06a388878b441d",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T21:39:50Z",
        "tags": [],
        "bytes": 1030453,
        "type": "upload",
        "etag": "10adb5b94e6fbf28582682309e5db85c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676583590/avalanche2023spring/y3nfh5bdqczsjygc5l8l.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676583590/avalanche2023spring/y3nfh5bdqczsjygc5l8l.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T23:44:14.914Z" }
      }
    ],
    "title": "",
    "description": "Composite image and original sketch output for the pair challenge with Srishti. I was't able to get the exact colors!",
    "code": "let y1 = 600;\nlet x1 = 600;\nlet x2 = 100;\nlet y2 = 100;\nlet p;\n\nlet startX, startY;\n\nfunction setup() {\n  createCanvas(800, 800);\n  noLoop();\n  \n}\n\nfunction draw() {\n  \n  background(0);\n  \n  stroke(255, 100)\n  \n  for(let x = 100; x < width-100; x+=5){\n      \n    \n    let t = noise(x) * height;\n      \n      startX = x;\n      startY = t;\n    \n    let p = x;\n    \n    p=map(x, 100, width-100, 0, 255)\n    t = t*255/height\n    \n\n  fill(255-p, 255 - t, p, 50)\n    \n  bezier(startX, startY, x1, y1, x2, y2, startX, startY);\n \n    console.log(t)\n\n//   }\n}\n}",
    "comments": []
  },
  {
    "_id": "fLWpXETwrj6PseRMf",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-29T20:20:16.523Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "fcFrescrCpGRXGQMA",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T05:40:24.487Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "66713c59e49a1a393afe24e47e0dac95",
        "public_id": "avalanche2023spring/fregnvvzf9iid5i8om4y",
        "version": 1676007872,
        "version_id": "2b6667ac5975c44d8d5cd0f2557053dc",
        "signature": "6b5acccdeb50fbd36768dee759049366ccc637fb",
        "width": 742,
        "height": 732,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T05:44:32Z",
        "tags": [],
        "bytes": 27520,
        "type": "upload",
        "etag": "a7536d12762cb1fb05485a22fc2d41d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676007872/avalanche2023spring/fregnvvzf9iid5i8om4y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676007872/avalanche2023spring/fregnvvzf9iid5i8om4y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T13:05:41.365Z" }
      }
    ],
    "title": "",
    "description": "Group coding challenge with Keren and Rama",
    "comments": []
  },
  {
    "_id": "ftfizZFizxd3ueFfZ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T14:29:41.293Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "534ad09d9948b96211bdc6ea69c9c2aa",
        "public_id": "avalanche2023spring/qadvuncnqykw6d0nyzvb",
        "version": 1679668189,
        "version_id": "47cf6e6f6129c7ca2575efd885592421",
        "signature": "a0ec87eb48c1d70709234b3eda486eb8e2919674",
        "width": 1718,
        "height": 2105,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T14:29:49Z",
        "tags": [],
        "bytes": 546548,
        "type": "upload",
        "etag": "e0820792d0d36f19aa08e0a6d219f184",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679668189/avalanche2023spring/qadvuncnqykw6d0nyzvb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679668189/avalanche2023spring/qadvuncnqykw6d0nyzvb.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T15:45:31.536Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-08T21:58:02.413Z" }
      }
    ],
    "title": "",
    "description": "Here's the shirt I made with the vector that I cut out!",
    "comments": []
  },
  {
    "_id": "fvnri3uzRHyHHp84i",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-05T05:10:09.989Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9a34892f382bd2980a8ddaf7b858e1bd",
        "public_id": "avalanche2023spring/gau7axttn4pfjfimcowc",
        "version": 1680671420,
        "version_id": "508b745525c8f66012eba3007a4d190a",
        "signature": "4e7a29f533721e39bd5b71478c23dc215a60c8b4",
        "width": 1932,
        "height": 1916,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-05T05:10:20Z",
        "tags": [],
        "bytes": 91777,
        "type": "upload",
        "etag": "964a42b40b05c88b71d37c2913a6965d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680671420/avalanche2023spring/gau7axttn4pfjfimcowc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680671420/avalanche2023spring/gau7axttn4pfjfimcowc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0ef1ca306bef9d69480cdda6753977f6",
        "public_id": "avalanche2023spring/umevrjo33ehcvc2uxfxr",
        "version": 1680671451,
        "version_id": "c529850f8e269d19ee9604cadab10446",
        "signature": "a116f33733fa83a67a66d07882b506fe2083f3f7",
        "width": 1980,
        "height": 1634,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-05T05:10:51Z",
        "tags": [],
        "pages": 0,
        "bytes": 14025324,
        "type": "upload",
        "etag": "98bdebf6664234db8d3150abe083a407",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680671451/avalanche2023spring/umevrjo33ehcvc2uxfxr.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680671451/avalanche2023spring/umevrjo33ehcvc2uxfxr.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680671451/avalanche2023spring/umevrjo33ehcvc2uxfxr.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "5462207",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 5732714,
        "duration": 19.572333,
        "rotation": 0,
        "nb_frames": 1203,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:01:53.503Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:45:32.746Z" }
      }
    ],
    "title": "",
    "description": "I realize this isn't a \"game\" (yet!) but I was having fun playing around with the Tiles constructor",
    "comments": []
  },
  {
    "_id": "fw4SHy4aCKykZWYAD",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-29T01:50:21.69Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b72557d9864bbe818a0e4f8b98bf1287",
        "public_id": "avalanche2023spring/daq3o7gjoukqm8i3wkig",
        "version": 1680054690,
        "version_id": "1e9e53fdc64624cd1397b602749cb826",
        "signature": "c62bcac5c295510e524522903740f272787d5fa6",
        "width": 1920,
        "height": 993,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-29T01:51:30Z",
        "tags": [],
        "bytes": 101818,
        "type": "upload",
        "etag": "7c646fc657ec4db5e683536fad0cd605",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680054690/avalanche2023spring/daq3o7gjoukqm8i3wkig.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680054690/avalanche2023spring/daq3o7gjoukqm8i3wkig.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:32.182Z" }
      }
    ],
    "title": "",
    "description": "Extending the Individual challenge as one of my open sketches for this week as I felt that after getting used to tone.js a bit I felt that I had the capacity to flesh out what I started in the individual challenge.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// partially adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/simple_song.js\n/* global Tone */\n\nconst synth = new Tone.Synth().toMaster();\n\nTone.Transport.bpm.value = 120;\n\nconst melody = [\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n\"],\n    [\"d5\", \"4n\"],\n    \n    [\"c5\", \"2n\"],\n    // Part 2\n    [\"rest\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n.\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    \n    [\"e5\", \"2n.\"],\n    [\"c5\", \"4n\"],\n    \n    [\"d5\", \"2n.\"],\n    [\"e5\", \"8n\"],\n    [\"f5\", \"8n\"],\n    \n    [\"e5\", \"2n.\"],\n    [\"c5\", \"4n\"],\n    \n    [\"f5\", \"2n.\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    \n    [\"e5\", \"2n.\"],\n    [\"c5\", \"4n\"],\n    \n    [\"g5\", \"1n\"],\n    \n    [\"g5\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n\"],\n    [\"d5\", \"4n\"],\n    \n    [\"c5\", \"2n.\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"4n\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    [\"c5\", \"4n\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"4n\"],\n    [\"g3\", \"8n\"],\n    [\"b3\", \"8n\"],\n    [\"c4\", \"4n\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"4n\"],\n    [\"g3\", \"8n\"],\n    [\"b3\", \"8n\"],\n    [\"c4\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"d4\", \"2n.\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"4n\"],\n    [\"g3\", \"8n\"],\n    [\"b3\", \"8n\"],\n    [\"c4\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"4n\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"4n\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    [\"c5\", \"4n\"],\n    [\"c5\", \"4n\"],\n    \n    [\"g5\", \"2n.\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n.\"],\n    [\"d5\", \"4n.\"],\n    \n    [\"c5\", \"1n\"],\n]; \nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};",
    "comments": []
  },
  {
    "_id": "fwFjuSbasPX6Mhjvu",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-28T03:29:37.348Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cb7abd1fdbd4c0b82f0f24881559858f",
        "public_id": "avalanche2023spring/paxtwvu3i5qmlu5emid7",
        "version": 1677554987,
        "version_id": "a444cef13c14ed55eb4937eac423b8ca",
        "signature": "f2234b5676a5b258cf7ad94606df07e86893548a",
        "width": 497,
        "height": 497,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-28T03:29:47Z",
        "tags": [],
        "bytes": 33273,
        "type": "upload",
        "etag": "3732b719331304776f371c347a87ec37",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677554987/avalanche2023spring/paxtwvu3i5qmlu5emid7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677554987/avalanche2023spring/paxtwvu3i5qmlu5emid7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Here's my first challenge!",
    "comments": []
  },
  {
    "_id": "fxpSPqGuM5b5yJ5fA",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T13:06:38.724Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "adc1d7b662d0e43f4738dadb4e095870",
        "public_id": "avalanche2023spring/p4qtvxnrsuwxwkamvvwv",
        "version": 1680268010,
        "version_id": "723f9430768ab59cb4e9c0f0c37053a1",
        "signature": "810ffc893373113ecbedda79adc824f494e87ef3",
        "width": 336,
        "height": 410,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T13:06:50Z",
        "tags": [],
        "bytes": 39087,
        "type": "upload",
        "etag": "0f0c5ed2bfe90a7c1f1bc4f57c7a2f65",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680268010/avalanche2023spring/p4qtvxnrsuwxwkamvvwv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680268010/avalanche2023spring/p4qtvxnrsuwxwkamvvwv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 8 (3/4): This was another one I worked on (the first one and it failed as this one did not sound correct?)",
    "comments": []
  },
  {
    "_id": "fzsW9GTYowMpCf9AG",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-13T21:56:53.858Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "af488e57c78090f0cb94dcc1a34e8e5f",
        "public_id": "avalanche2023spring/rush8zz9mktkqgqzlhuu",
        "version": 1676325645,
        "version_id": "395da01938f87ebeb1517322db149446",
        "signature": "041df2cd828d141013bcf48f6ebf6e9907558eb5",
        "width": 601,
        "height": 674,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-13T22:00:45Z",
        "tags": [],
        "bytes": 52687,
        "type": "upload",
        "etag": "b9ca8fd5bb0f61ff4f39b0e06a90aab7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676325645/avalanche2023spring/rush8zz9mktkqgqzlhuu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676325645/avalanche2023spring/rush8zz9mktkqgqzlhuu.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:43:08.27Z" }
      }
    ],
    "title": "",
    "description": "Not sure where I was going with this one, but I wanted to use noise to visually illustrate your typical shopping cart experience. Drew upon some inspiration from the skyline noise example from the textbook to figure out the execution for this piece.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet n;\nlet wave = 250;\nlet fr = 0.025;\n\nfunction setup() {\n  createCanvas(400, 450);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(55, 81, 122);\n  \n  for(i = 0; i < width; i += 50) {\n    let n = noise(i * fr, frameCount * fr) * wave/3;\n    \n    //items\n    \n    fill(255, 255, 0);\n    push();\n    noStroke();\n    rotate(90 / n);\n    rect(200, 200, 100, 50);\n    pop();\n    \n    push();\n    noStroke();\n    fill(232, 201, 79);\n    translate(1 * n/5, 0);\n    ellipse(100, 250, 50, 50);\n    pop();\n    \n    push();\n    noStroke();\n    fill(71, 212, 255);\n    rotate(-70 / n);\n    rect(100, 175, 100, 50);\n    pop();\n    \n    push();\n    noStroke();\n    fill(196, 255, 189);\n    translate(1 * n/5, 0);\n    ellipse(265, 175, 85, 75);\n    pop();\n    \n    //shopping cart\n    \n    fill(0, 0);\n    stroke(205);\n    rect(50, 100 + n, 300, 150);\n    line(200, 100 + n, 200, 250 + n);\n    line(100, 100 + n, 100, 250 + n);\n    line(300, 100 + n, 300, 250 + n);\n    line(150, 100 + n, 150, 250 + n);\n    line(250, 100 + n, 250, 250 + n);\n    \n    line(50 + n / 2, 175, 350 - n / 2, 175);\n    line(50 + n / 2, 125, 350 - n / 2, 125);\n    line(50 + n, 225, 350 - n / 2, 225);\n    \n    //shopping cart wheels and handle\n  \n    push();\n    strokeWeight(3);\n    line(50, 115, 25, 50);\n    translate(0, 50);\n    line(150, 250, 75, 300);\n    line(250, 250, 350, 300);\n    line(75, 300 + n / 2, 350, 300 + n / 2);\n    ellipseMode(CENTER);\n    fill(0);\n    noStroke();\n    ellipse(75, 300 + n / 2, 50, 50);\n    ellipse(350, 300 + n / 2, 50, 50);\n    pop();\n  }\n}",
    "comments": []
  },
  {
    "_id": "g2nTzv22Pqwgka7np",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-18T03:05:25.979Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f9a4d226c880d81f773b0073b31fc8bf",
        "public_id": "avalanche2023spring/ejvyadcs1mzfirqhsvky",
        "version": 1681787598,
        "version_id": "ee4110e6e3c2d0ebcd5c1fea4892fc1a",
        "signature": "8767ca92e1925089558ea13bed618bf28aba5e9d",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-18T03:13:18Z",
        "tags": [],
        "bytes": 1431408,
        "type": "upload",
        "etag": "4031847f63edaa188ea3a8517ad86800",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681787598/avalanche2023spring/ejvyadcs1mzfirqhsvky.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681787598/avalanche2023spring/ejvyadcs1mzfirqhsvky.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e85e7b711e5c197e683f0a65f43d3e6c",
        "public_id": "avalanche2023spring/k7mvyujdpcraqxnoovut",
        "version": 1681787610,
        "version_id": "25c81f777f4688e46889bea5502a351b",
        "signature": "7d43e30fcabfbb9daa2052316ceb2e01f0195ede",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-18T03:13:30Z",
        "tags": [],
        "bytes": 1242032,
        "type": "upload",
        "etag": "49b5a6be68085071a1c9594bca1e97ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681787610/avalanche2023spring/k7mvyujdpcraqxnoovut.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681787610/avalanche2023spring/k7mvyujdpcraqxnoovut.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c096e12994e71b7b0e185f968e993519",
        "public_id": "avalanche2023spring/xhccqcvprhfdon1k1qln",
        "version": 1681787966,
        "version_id": "d0e9729552cefaf386d37d9e0e493aec",
        "signature": "492d83443129ae26abe11d4b570fe21bf10528e2",
        "width": 740,
        "height": 737,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-18T03:19:26Z",
        "tags": [],
        "bytes": 863908,
        "type": "upload",
        "etag": "16166e3b1267db7d7178fab0fff7675d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681787966/avalanche2023spring/xhccqcvprhfdon1k1qln.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681787966/avalanche2023spring/xhccqcvprhfdon1k1qln.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T04:29:57.539Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T17:58:58.691Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T19:24:49.076Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T15:01:44.605Z" }
      }
    ],
    "title": "",
    "description": "Had so much fun working with Midjourney! For some reason I wanted to create tennis related visuals. Sometimes the net would look like a tennis net, and other times it would look more like a volleyball or soccer net. I also asked for there to be 20 tennis balls, and sometimes 2 tennis balls would appear, and other times there would be none. But in the last image it looks like an army of humongous pink tennis balls is about to charge. Definitely a lot of trial and error but very fun to play with! The more detailed the description is, the better the result.",
    "comments": []
  },
  {
    "_id": "g67kNobMT6CKXXQwb",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-01T14:55:21.169Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5cd21ddbad6a0a865e771733a1664060",
        "public_id": "avalanche2023spring/jnzyqdqmtzvhmmuvtmw9",
        "version": 1682952938,
        "version_id": "90a0f3bd812d2a6209b078f9eefb11ed",
        "signature": "2b4d8f1967120b1829a3ed39723ad58122eecb55",
        "width": 706,
        "height": 528,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T14:55:38Z",
        "tags": [],
        "bytes": 28132,
        "type": "upload",
        "etag": "6776eb65712255d20448014d8d08acba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682952938/avalanche2023spring/jnzyqdqmtzvhmmuvtmw9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682952938/avalanche2023spring/jnzyqdqmtzvhmmuvtmw9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8ef11556a232f2309643f44383adb579",
        "public_id": "avalanche2023spring/fblducvyhewnkc0oklzd",
        "version": 1682953011,
        "version_id": "14f66bd220e10be233669a6dcf8aa250",
        "signature": "f143b741c5fdd68f89438603c70fb74393301076",
        "width": 538,
        "height": 546,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T14:56:51Z",
        "tags": [],
        "bytes": 105059,
        "type": "upload",
        "etag": "693745afdc3363c09054b8e08d53a86c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682953011/avalanche2023spring/fblducvyhewnkc0oklzd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682953011/avalanche2023spring/fblducvyhewnkc0oklzd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-05-01T16:53:47.794Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T00:02:27.247Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:56.841Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T01:39:42.51Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:55.681Z" }
      }
    ],
    "title": "",
    "description": "WEEK 13(2/4): Its p ugly but here is a cat ;) and I just felt like posting the minecraft chicken again",
    "comments": []
  },
  {
    "_id": "g6nr9mQT3tT8FaHP2",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T04:59:06.523Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "13c0637add5da5617401543b9a58d38d",
        "public_id": "avalanche2023spring/dy094fvefg2yn2eq8b4a",
        "version": 1680757155,
        "version_id": "00559fc3152161d3c7139fa05e12ce01",
        "signature": "ea6837583ee8a088c38175e7d7b8cbe3ea2f8b1e",
        "width": 1976,
        "height": 1924,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-06T04:59:15Z",
        "tags": [],
        "bytes": 120364,
        "type": "upload",
        "etag": "2dd4773f53716eaa4c215f710757bacf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680757155/avalanche2023spring/dy094fvefg2yn2eq8b4a.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680757155/avalanche2023spring/dy094fvefg2yn2eq8b4a.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "404316065d430174bea83240807f39ff",
        "public_id": "avalanche2023spring/ionsqzzvvr1vzacnky0h",
        "version": 1680757193,
        "version_id": "f765bc7a83e201b64436163251e6c8e1",
        "signature": "2a7ee624007858af932910fef73d9c68e09eaa16",
        "width": 1280,
        "height": 1248,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T04:59:53Z",
        "tags": [],
        "pages": 0,
        "bytes": 18942531,
        "type": "upload",
        "etag": "645fc8f704c54ee8cc1a12c74d830fef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680757193/avalanche2023spring/ionsqzzvvr1vzacnky0h.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680757193/avalanche2023spring/ionsqzzvvr1vzacnky0h.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680757193/avalanche2023spring/ionsqzzvvr1vzacnky0h.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "8427466",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 8443608,
        "duration": 17.947333,
        "rotation": 0,
        "nb_frames": 1078,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-06T05:35:21.402Z" }
      }
    ],
    "title": "",
    "description": "More figuring out how stuff works in p5.play and having fun with physics",
    "comments": []
  },
  {
    "_id": "gJenTwpkp3iG9wLXP",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-28T21:08:35.878Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a3182ae1bd68d4bb943cb76c0e0e317c",
        "public_id": "avalanche2023spring/vbjuzzhgsguzhuqcoafi",
        "version": 1674940122,
        "version_id": "a069c1296ad8eae7366d77dfb717ae02",
        "signature": "404b1513e0ad2a22a523fa3e146b4c83684d3d9d",
        "width": 2394,
        "height": 1922,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-28T21:08:42Z",
        "tags": [],
        "bytes": 582307,
        "type": "upload",
        "etag": "6868f90e020b856bd2c641f0be5a8411",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674940122/avalanche2023spring/vbjuzzhgsguzhuqcoafi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674940122/avalanche2023spring/vbjuzzhgsguzhuqcoafi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cb50ae9a85624a58e55d315a213aeb1a",
        "public_id": "avalanche2023spring/kmjswgrggeqdng1emqtq",
        "version": 1674940131,
        "version_id": "72187360eaf59d56e61d0653d27c77ff",
        "signature": "197247b58695d805274c716a7bfb63bebbf5b805",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-28T21:08:51Z",
        "tags": [],
        "bytes": 1747389,
        "type": "upload",
        "etag": "a499b71d59b9b7a04f83a7575baa507d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674940131/avalanche2023spring/kmjswgrggeqdng1emqtq.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674940131/avalanche2023spring/kmjswgrggeqdng1emqtq.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T23:03:48.264Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T09:40:19.268Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T18:02:55.216Z" }
      }
    ],
    "title": "",
    "description": "These are the instructions for Isha, user-tested by my friend Pepi!\n☺️ ☺️\n\nHave fun trying it out, and I can't wait to see if my description is accurate enough to get to the desired end result!🥳",
    "comments": []
  },
  {
    "_id": "gKwrTaLPRNH6HtdQE",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T14:24:28.277Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3d7f9b833e3cd9bf4fabd7ce3eac9f9d",
        "public_id": "avalanche2023spring/r4umlzcdogouma9eqovx",
        "version": 1680791161,
        "version_id": "fe664e4f1517ff08c1613a4c576d16a9",
        "signature": "fa9988ab6adcb9be2851e3135cbcb2bf46c9b3eb",
        "width": 1406,
        "height": 1084,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T14:26:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 15349550,
        "type": "upload",
        "etag": "38c05fe984c7d470df6c3f851f3219df",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680791161/avalanche2023spring/r4umlzcdogouma9eqovx.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680791161/avalanche2023spring/r4umlzcdogouma9eqovx.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680791161/avalanche2023spring/r4umlzcdogouma9eqovx.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "17576383",
          "dar": "703:542",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 18992560,
        "duration": 6.4655,
        "rotation": 0,
        "nb_frames": 405,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "64da817ff3e096143654a106feaa89ca",
        "public_id": "avalanche2023spring/kdzdglqmgnblhjzfv6og",
        "version": 1680791171,
        "version_id": "e9674d2e31f7d4d563720806be5469e3",
        "signature": "e822d55e3fb4a418712c19348e7f9d77fa7bdac5",
        "width": 1306,
        "height": 988,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-06T14:26:11Z",
        "tags": [],
        "bytes": 2332008,
        "type": "upload",
        "etag": "800320d5271e9484059de242df864ff6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680791171/avalanche2023spring/kdzdglqmgnblhjzfv6og.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680791171/avalanche2023spring/kdzdglqmgnblhjzfv6og.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Getting set up with p5.play in Visual Studio Code and exploring animations. This isn't a game yet, but perhaps I'll extend this later on in celebration of Easter.",
    "comments": []
  },
  {
    "_id": "gQSSNL7xEvKBRjJnj",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-08T05:32:20.139Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ce832f12cfda15f9bbba257889633f10",
        "public_id": "avalanche2023spring/axndq0qzmulmmxiuhfhx",
        "version": 1678253549,
        "version_id": "74c014166411e89af885de88dea7e09d",
        "signature": "446aa085b1c0a61ff32b52422c0ffa48b66beefc",
        "width": 938,
        "height": 937,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-08T05:32:29Z",
        "tags": [],
        "bytes": 91009,
        "type": "upload",
        "etag": "8092e46a3fbc4ffd4e76e98f653a8a9d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678253549/avalanche2023spring/axndq0qzmulmmxiuhfhx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678253549/avalanche2023spring/axndq0qzmulmmxiuhfhx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:27.222Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:33:57.989Z" }
      }
    ],
    "title": "",
    "description": "Image for Sahiti I made for the pair challenge!",
    "comments": []
  },
  {
    "_id": "gWxKnDzHJWjiAkh4q",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T08:13:54.67Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ea7220fdbbdfd86c02c40b5c090a082b",
        "public_id": "avalanche2023spring/jowxwjsva6q6snrh3x3l",
        "version": 1681373650,
        "version_id": "2e2960b32dcd88a787b33046fad0a23a",
        "signature": "f69882f47343657cafbfc2d79bd1da91cb8db607",
        "width": 414,
        "height": 1838,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T08:14:10Z",
        "tags": [],
        "bytes": 149227,
        "type": "upload",
        "etag": "b0b3952881e9b25fa54c9b91034d94a0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681373650/avalanche2023spring/jowxwjsva6q6snrh3x3l.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681373650/avalanche2023spring/jowxwjsva6q6snrh3x3l.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T15:49:33.23Z" }
      }
    ],
    "title": "",
    "description": "Made a fake Twitter bot using the Markov model. Collated a bunch of conservative tweets (for a narrative I'm building for an assignment for another class) to feed as input, and came up with only slightly nonsensical tweets.",
    "code": "const twitterdata = \"Talked to civil society leaders @JGreenblattADL, @YaelEisenstat, @rashadrobinson, @JGo4Justice, @normanlschen, @DerrickNAACP, @TheBushCenter Ken Hersch & @SindyBenavides about how Twitter will continue to combat hate & harassment & enforce its election integrity policies. If not for video, Asian victim would be in jail. Weak white lady does nothing. Weak white male needs black guy to stop assault by knife-wielding black thug ... while Asian victim gets thrown to  ground. And woke  Asians still stand with BLM. Stupid country. NY State Supreme Court reinstates all fired unvaccinated employees, orders backpay, says the state violated rights, acted arbitrary & capricious, notes: Being vaccinated does not prevent an individual from contracting or transmitting Covid-19. Sidenote: The mass poisoning of our children and generations to come will cripple humanity while enriching BigPharma and empowering globalists. Anti-semitism is not the most dangerous threat in the world. Anyone claiming otherwise is a controlled op enemy. Remember when you could stand on a train platform & not get beaten, robbed & pushed onto tracks by black thugs w/endless get-out-of-jail-free cards issued by a justice system that instead punishes nonviolent white conservatives who notice things you're not supposed to name? It's evil & un-American. Nonviolent undergrad Christian Secor was sentenced  today to 42 MONTHS in prison for sitting in Pelosi's chair & leaving when told by cops. Prosecutors argued he deserves prison because of his #AmericaFirst views/ties. I'm old enough to remember when conservatives said they were done with the pro-BLM, anti-white, rainbow-pimping, vaccine-shilling globalist NFL. In this late hour for America, we must confront our primary underlying ailment: A conservative movement and GOP that lacks the traits--collaboration, strategy, boldness--that leadership demands. And we've allowed it. Donald Trump walking out with Kid Rock and Dana White to American Bad Ass at UFC 287 last night was an iconic moment. I am the Speaker of the House. There is no place that China is going to tell me where I can go or who I can speak to. After indictment, ‘highest’ GOP support for 2024 @realDonaldTrump run at 61%. Biden's just 48. That is the biggest enthusiasm gap in a year and fed a flip in the Trump-Biden race now led by Trump 44%-42%. Trump expanded lead over DeSantis to 17 points. The AR-15 is America’s rifle. It’s not an assault rifle. It’s a semi-automatic, modern day sporting rifle; excellent for home defense, hunting, and range time. Any gun control politician who wants to ban the AR-15 is a threat to our Constitutional Republic. Meanwhile, House Oversight Committee chairman @RepJamesComer just revealed that testimony from Joe Biden’s former VP assistant Kathy Chung “undermines” the WH story about his classified documents. They were not in a “locked closet” and they were moved in May 2022, not Nov 2022. I've reviewed the Trump indictment. There's nothing there. Trump and the American people have been abused. Unbelievable support for miles as we depart to New York! Heartbroken and horrified by this cowardly act. The first Japanese leader to address a joint meeting of the United States Congress, @AbeShinzo did much for his country, its friendship with America, and the world. Baffled by the decision at the WTO to give away American IP on COVID vaccines. Won’t do anything to remove vax barriers worldwide. Will make it harder to fight the next pandemic. Gives competitors a windfall. Terrible change of precedent. Been following the global #COVID19 vaccine equity issue, and I agree with this. Hard to believe suspending IP protections would expand access. There's a vax surplus now. Reducing trade barriers and delivery challenges seems like better approach. Put me in the #noIPwaiver camp.\";\n\nconst markovModel = generateModel(twitterdata);\nconst output_text = generateText(markovModel);\n\ndocument.body.innerHTML = output_text;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "comments": []
  },
  {
    "_id": "gZys2KcytvagiBLam",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T04:25:58.962Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "34d53bcdcdd52df8a8b2aa5a2c9a46a2",
        "public_id": "avalanche2023spring/d25kzvatdmizmb3ovxjo",
        "version": 1676608208,
        "version_id": "9b9965a0bb46847f2979e3d4eeda33a9",
        "signature": "3c1cb5eca4e034b5511fe2655f6fe52012c267a8",
        "width": 840,
        "height": 741,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T04:30:08Z",
        "tags": [],
        "bytes": 818632,
        "type": "upload",
        "etag": "d9eae7b9eca24bbd62a0b99ed23714b4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676608208/avalanche2023spring/d25kzvatdmizmb3ovxjo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676608208/avalanche2023spring/d25kzvatdmizmb3ovxjo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Wasn't able to get a video so look it up on ShaderPark! The idea here was to sample noise many, many times and use the corresponding value to adjust both the shape and color of the sphere. Looks kinda like that one Tame Impala album cover",
    "code": "//shaderpark link:\n//https://shaderpark.com/embed/-NNdpUqX_kw2mEBgH-QM",
    "comments": [
      {
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "comment": "so cool!",
        "created_at": { "$date": "2023-02-17T15:32:26.746Z" }
      }
    ],
    "inspiration_name": "(ShaderPark Link)",
    "inspiration_url": "https://shaderpark.com/embed/-NNdpUqX_kw2mEBgH-QM"
  },
  {
    "_id": "gpsPvqhpKbSdtS3ff",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T04:01:56.952Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b48a300ab0aefc6d9456957172c0a917",
        "public_id": "avalanche2023spring/wahkwnejxclirt57mjsy",
        "version": 1675915535,
        "version_id": "0b179886f5bdb812609d26d2a9a5d139",
        "signature": "b3d151fbb66d0e294cf17ec16d3e45b6edf46675",
        "width": 1379,
        "height": 1348,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T04:05:35Z",
        "tags": [],
        "bytes": 1640212,
        "type": "upload",
        "etag": "fc52467c024182ab61ae7f77b6ab344a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675915535/avalanche2023spring/wahkwnejxclirt57mjsy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675915535/avalanche2023spring/wahkwnejxclirt57mjsy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1a6b9f27bbd4df63f307f01d3d395ad3",
        "public_id": "avalanche2023spring/xvuqtyohy2wucttsad6e",
        "version": 1675915544,
        "version_id": "69cf2bea103328d6d90d205484b809dc",
        "signature": "ff01798fe4454dfb78cddbf049d9d3e1ef8ec846",
        "width": 1379,
        "height": 1348,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T04:05:44Z",
        "tags": [],
        "bytes": 2820235,
        "type": "upload",
        "etag": "7d2fbdb3bddf0acd7620c2e2e802c572",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675915544/avalanche2023spring/xvuqtyohy2wucttsad6e.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675915544/avalanche2023spring/xvuqtyohy2wucttsad6e.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2179775acd7276499b7074d1ffa82f06",
        "public_id": "avalanche2023spring/sjvm5dgd9rnywizsenwc",
        "version": 1675915550,
        "version_id": "640f21aa6bf82e1393544ce29149ea4c",
        "signature": "4c306eaf74b8c8618ef0c18b997b414039e9268c",
        "width": 798,
        "height": 1086,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T04:05:50Z",
        "tags": [],
        "bytes": 1779129,
        "type": "upload",
        "etag": "6500a19fca536a15e59955c545067dff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675915550/avalanche2023spring/sjvm5dgd9rnywizsenwc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675915550/avalanche2023spring/sjvm5dgd9rnywizsenwc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T14:43:06.382Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge w Juli: A deconstructed deck of cards wallpaper using the deck visualizer:\n1. A random number was generated between 0 and 9\n2. A card was drawn from the top of the deck in that order 30x\n3. They were arranged in the order that they were called\n4. the symbols were laid out as many times as the number on the card\n5. arranged in Figma in the same order as their IRL arrangement. \n6. Textured + Wallpapered",
    "inspiration_name": "Analog Deck of Cards",
    "comments": []
  },
  {
    "_id": "gwQtPCdJ8aozXLmYX",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": { "$date": "2023-04-28T13:17:30.297Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3e9f1c8574bf2420946a049a548b287b",
        "public_id": "avalanche2023spring/lo3je0jnbokdqjg3hgsq",
        "version": 1682687867,
        "version_id": "607d7d0b4fa56653a9cda86c2a18f148",
        "signature": "22af74b0324fdaf524fdb2a27a646d86f2f21d21",
        "width": 1674,
        "height": 1662,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T13:17:47Z",
        "tags": [],
        "bytes": 360930,
        "type": "upload",
        "etag": "aff1bde0a30756593af809ac4174a2cc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682687867/avalanche2023spring/lo3je0jnbokdqjg3hgsq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682687867/avalanche2023spring/lo3je0jnbokdqjg3hgsq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "855bde79439719eb6059ee201f9df098",
        "public_id": "avalanche2023spring/drochl1n3lecxflea4jp",
        "version": 1682687889,
        "version_id": "aa496ae26ed345b80f2849a977f069de",
        "signature": "439bd79cf1bba56b91db6f48557d29dae0751cc7",
        "width": 1674,
        "height": 1662,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T13:18:09Z",
        "tags": [],
        "bytes": 372125,
        "type": "upload",
        "etag": "25f7e241e853ed1053118f6b484e3fdf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682687889/avalanche2023spring/drochl1n3lecxflea4jp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682687889/avalanche2023spring/drochl1n3lecxflea4jp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a2215d42f85d0d99625b9e6edb07076d",
        "public_id": "avalanche2023spring/vociqvnx8snczdytb737",
        "version": 1682687915,
        "version_id": "9e69aa94583f9e21f16508f443089358",
        "signature": "84a52a9bcb73394bb5dfb139cf3d6872fa7f0569",
        "width": 1674,
        "height": 1662,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T13:18:35Z",
        "tags": [],
        "bytes": 417911,
        "type": "upload",
        "etag": "2e572de3edfa0a88e74692642d20a0ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682687915/avalanche2023spring/vociqvnx8snczdytb737.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682687915/avalanche2023spring/vociqvnx8snczdytb737.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "I've been enjoying playing around with ChatGPT quite a bit because it helps me not think too much. Yes, I've used it for codes and writing assignments a lot but there are much more difficult decisions to be made, like what to cook for dinner 😬\nI gave ChatGPT a list of ingredients I have at home, and asked it to suggest recipes only using those. I asked for something that's quicker, and uses a different base for sauce. \nThey seem pretty simple in the first glance with not very complicated aspects which made me wonder why I didn't or couldn't think of these for myself and if coming up with a recipe is just rather simple and does not need overthinking.\nI will be trying one of these tonight and will update! I'm taking votes on which one to try!",
    "comments": []
  },
  {
    "_id": "h7yGo6zY7TkqxwnzL",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T14:33:47.966Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1785d31786a35eb90e914e19b2d393be",
        "public_id": "avalanche2023spring/xcxi4zu9q3ieirftobvb",
        "version": 1682087893,
        "version_id": "6fdc1fcf32918f815c75b1d923f1e21b",
        "signature": "4b1dcfd9afa7b0211e2259d62c491286d819bbdf",
        "width": 2748,
        "height": 1380,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:38:13Z",
        "tags": [],
        "bytes": 7405552,
        "type": "upload",
        "etag": "346ba1268b5e93e9ef7900bbb16b4da2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682087893/avalanche2023spring/xcxi4zu9q3ieirftobvb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682087893/avalanche2023spring/xcxi4zu9q3ieirftobvb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "32ed1e60eaf708252e4a8b86fe87f200",
        "public_id": "avalanche2023spring/p1pqwtkglhp7isnp78zh",
        "version": 1682087905,
        "version_id": "15c544439d9bde4d97e8b0f72add5e23",
        "signature": "81bc05a3d3315e8321915cce4eb86c901ce15165",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:38:25Z",
        "tags": [],
        "bytes": 1962613,
        "type": "upload",
        "etag": "1508f7975563573edfb82e7399160405",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682087905/avalanche2023spring/p1pqwtkglhp7isnp78zh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682087905/avalanche2023spring/p1pqwtkglhp7isnp78zh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "64e0057016e1f756d99c8b9ee8a80c25",
        "public_id": "avalanche2023spring/bmyx9oi2ekdrom47gyg8",
        "version": 1682087910,
        "version_id": "2330e35826d8e742032d2679f595b378",
        "signature": "1de4a2a959e97f4974f573423b8d544871a0c1fb",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:38:30Z",
        "tags": [],
        "bytes": 1961965,
        "type": "upload",
        "etag": "999631afb082d9efd09e89d89bdcab02",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682087910/avalanche2023spring/bmyx9oi2ekdrom47gyg8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682087910/avalanche2023spring/bmyx9oi2ekdrom47gyg8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T15:54:29.289Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:09:02.974Z" }
      }
    ],
    "title": "",
    "description": "I wanted to compare images generated by Midjourney and Stable Diffusion that had the same or a similar prompt. I asked both to create trees that look like tennis balls (back on that tennis theme). The first image was created with Stable Diffusion, the second and third were created with Midjourney. Stable Diffusion definitely took a more realistic approach until I asked for the images to be more illustrative.",
    "comments": []
  },
  {
    "_id": "h8HHmoR5HMFtEYvBR",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-11T02:16:18.319Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e7c3313a6596dd2cce1ec907bb5821ee",
        "public_id": "avalanche2023spring/iqb5u5qfomufygkgscbf",
        "version": 1683771389,
        "version_id": "2422d05c104d813776a80a96db71a341",
        "signature": "ec9b7f9f4b7fee867b1729ebb850394f0a625b9d",
        "width": 750,
        "height": 748,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-11T02:16:29Z",
        "tags": [],
        "bytes": 32347,
        "type": "upload",
        "etag": "a5094aecfd0255344ccf754500765b20",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683771389/avalanche2023spring/iqb5u5qfomufygkgscbf.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683771389/avalanche2023spring/iqb5u5qfomufygkgscbf.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "First iteration at the Individual Challenge. Couldn't get as much done as I hoped for so I'm going to go back in and see if I can start adding in more details for a second iteration.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  stroke(255);\n}\n\nfunction draw() {\n  background(50);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(0, 90);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 3; i++) {\n    myTurtle.moveForward(1000);\n    myTurtle.turnRight(120);\n  }\n  \n  // Eye\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(1);\n    myTurtle.turnRight(1);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 116);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(0.7);\n    myTurtle.turnRight(1);\n  }\n  \n  // Lips\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(64, 200);\n  myTurtle.penDown();\n  myTurtle.moveTo(150, 300);\n  myTurtle.penUp();\n  myTurtle.moveTo(73, 217);\n  myTurtle.penDown();\n  myTurtle.moveTo(200, 400);\n  \n  myTurtle.pushState();\n  \n  // Gills\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(350, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  myTurtle.popState();\n}\n\nfunction drawGills() {\n  for(i = 0; i < 100; i++) {\n    myTurtle.moveForward(3);\n    myTurtle.turnRight(0.5);\n  }\n}",
    "comments": []
  },
  {
    "_id": "hAjZwWsK84PHcoFpB",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T13:26:09.909Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bae74d8af93bb71027411e4b358aee3a",
        "public_id": "avalanche2023spring/vn74juioszhbvb9pfsu1",
        "version": 1677245178,
        "version_id": "fa34648dc7f75405b06ae6aa9d3ca08a",
        "signature": "e19b7253864213fd3a6b3b5cbd40ea440f6eb9cd",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T13:26:18Z",
        "tags": [],
        "bytes": 121264,
        "type": "upload",
        "etag": "e7a890036db6cbf191e376b93ac000ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677245178/avalanche2023spring/vn74juioszhbvb9pfsu1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677245178/avalanche2023spring/vn74juioszhbvb9pfsu1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4667cdb4afd9134a165d2349a1222fd7",
        "public_id": "avalanche2023spring/tpxnvozaesxnr0jtz558",
        "version": 1677245182,
        "version_id": "b7b0adfcce49e49bb433f37bc13377c8",
        "signature": "85062c50fb607e09d5bd3021d94af028b0b58848",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T13:26:22Z",
        "tags": [],
        "bytes": 133477,
        "type": "upload",
        "etag": "64d9de74090d10ede5d2030765e11cae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677245182/avalanche2023spring/tpxnvozaesxnr0jtz558.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677245182/avalanche2023spring/tpxnvozaesxnr0jtz558.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "31b58e8df457b5392589710ae26fa1f2",
        "public_id": "avalanche2023spring/nsz7uiyuffgvdbruehoa",
        "version": 1677266747,
        "version_id": "b528b6b226b506280fc961cab2f53b82",
        "signature": "3008dd8ad520234a993749c15de645a86c67a89b",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T19:25:47Z",
        "tags": [],
        "bytes": 107924,
        "type": "upload",
        "etag": "5b6080e4f1a5e8ac4216e552bd690fe7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677266747/avalanche2023spring/nsz7uiyuffgvdbruehoa.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677266747/avalanche2023spring/nsz7uiyuffgvdbruehoa.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Combining different styles of cartoon face drawing to create the face generator 👀 A pretty simple sketch - just wanted to try out TweakPane!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  SelectEyes: 0,\n  SelectNose: 2,\n  SelectMouth: 4,\n};\n\npane.addInput(params, \"SelectEyes\", { min: 1, max: 5, step: 1 });\npane.addInput(params, \"SelectNose\", { min: 1, max: 5, step: 1 });\npane.addInput(params, \"SelectMouth\", { min: 1, max: 5, step: 1 });\n\nfunction preload(){\n   \n  eyes1=loadImage(\"FaceAssets/Eyes1.PNG\");\n  eyes2=loadImage(\"FaceAssets/Eyes2.PNG\");\n  eyes3=loadImage(\"FaceAssets/Eyes3.PNG\");\n  eyes4=loadImage(\"FaceAssets/Eyes4.PNG\");\n  eyes5=loadImage(\"FaceAssets/Eyes5.png\");\n  \n  nose1=loadImage(\"FaceAssets/Nose1.PNG\");\n  nose2=loadImage(\"FaceAssets/Nose2.PNG\");\n  nose3=loadImage(\"FaceAssets/Nose3.PNG\");\n  nose4=loadImage(\"FaceAssets/Nose4.PNG\");\n  nose5=loadImage(\"FaceAssets/Nose5.png\");\n  \n  mouth1=loadImage(\"FaceAssets/Mouth1.PNG\");\n  mouth2=loadImage(\"FaceAssets/Mouth2.PNG\");\n  mouth3=loadImage(\"FaceAssets/Mouth3.PNG\");\n  mouth4=loadImage(\"FaceAssets/Mouth4.PNG\");\n  mouth5=loadImage(\"FaceAssets/Mouth5.png\");\n  \n  eyes = [eyes1, eyes2, eyes3, eyes4, eyes5];\n  noses = [nose1, nose2, nose3, nose4, nose5];\n  mouths = [mouth1, mouth2, mouth3, mouth4, mouth5];\n  \n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n  imageMode(CENTER);\n}\n\nfunction draw() {\n  background(255);\n  \n  push()\n  translate(width/2, height/2)\n  scale(0.25, 0.25)\n  image(eyes[params.SelectEyes -1], 0, -500);\n  image(noses[params.SelectNose -1], 0, 0);\n  image(mouths[params.SelectMouth -1], 0, 550);\n  pop()\n}",
    "comments": []
  },
  {
    "_id": "hJBakZKCixJfwuBFL",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": { "$date": "2023-02-03T03:04:25.375Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ced85efb40b018c5c3c44d7e66b7b8f6",
        "public_id": "avalanche2023spring/jfwmqy7esqgomj0x7828",
        "version": 1675393474,
        "version_id": "50c9150c16e0224b369f91b2970de5a7",
        "signature": "4a249292e1720a78772818eb138bd63aaf0d99b2",
        "width": 2561,
        "height": 1962,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-03T03:04:34Z",
        "tags": [],
        "bytes": 3077396,
        "type": "upload",
        "etag": "8091b29548137fc227a74e391d71b6e4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675393474/avalanche2023spring/jfwmqy7esqgomj0x7828.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675393474/avalanche2023spring/jfwmqy7esqgomj0x7828.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T03:05:24.343Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "I wanted to take a stab at my own instructions after I submitted them to my group to see what I would produce from my own process.",
    "comments": [],
    "inspiration_name": "Sketch using my Instructions"
  },
  {
    "_id": "hNfGYtTckg8WAheyT",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T02:29:11.247Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "db756aade3290c5810c04afdce00ad6f",
        "public_id": "avalanche2023spring/mn5fntqu4y8rrsjwzyk8",
        "version": 1677724159,
        "version_id": "b42aa5897cb8463630769189808f1cf6",
        "signature": "bb67e983e8b9dd933e424dfadc64e9675094969d",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T02:29:19Z",
        "tags": [],
        "bytes": 1666629,
        "type": "upload",
        "etag": "8dee0a6c151af13588ff7b980ec19806",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677724159/avalanche2023spring/mn5fntqu4y8rrsjwzyk8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677724159/avalanche2023spring/mn5fntqu4y8rrsjwzyk8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3a354a053f449f0ad6d03c2f0e2fb044",
        "public_id": "avalanche2023spring/cl1sdp5lzkt603vw5a2b",
        "version": 1677724182,
        "version_id": "44e7057adb24f3c71cd314c5246b4958",
        "signature": "4b143033fb940662923af90de97bc4bb97de2e90",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-02T02:29:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 17288865,
        "type": "upload",
        "etag": "cc69c5f3d8c204e54b1a3cdaa5c6c6be",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677724182/avalanche2023spring/cl1sdp5lzkt603vw5a2b.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677724182/avalanche2023spring/cl1sdp5lzkt603vw5a2b.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677724182/avalanche2023spring/cl1sdp5lzkt603vw5a2b.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "15303412",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 15311172,
        "duration": 9.033333,
        "rotation": 0,
        "nb_frames": 542,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-02T04:49:10.095Z" }
      }
    ],
    "title": "",
    "description": "Extension of Challenge 2.. Would like to continue playing with more time!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet frequency_slider;\nlet amplitude_slider;\nlet time_speed_slider;\n\nlet startX = 50;\nlet startY = 30;\nlet endX = 1000;\nlet endY = 1000;\n\nfunction setup() {\n  createCanvas(800, 800);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 100);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n  createP(\"Time Speed\");\n  time_speed_slider = createSlider(0, 100, 100);\n}\n\nfunction draw() {\n  background(0);\n  ellipseMode(CENTER);\n\n  let frequency = frequency_slider.value();\n  let amplitude = amplitude_slider.value() / 10;\n  let time_speed = time_speed_slider.value() / 1000\n\n  noiseDetail(1, 0.5);\n\n  for (i = 0; i < 2; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startX, endY, i);\n\n    let offsetX = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n    let offsetY = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n\n    stroke(255-i*100, 255, 255, 255-i*100);\n\n    push();\n    blendMode(OVERLAY);\n    rect(x + offsetX, y + offsetY, x, y);\n    rect(x + offsetX, y + offsetY, x, y);\n    pop();\n\n    noFill();\n\n    blendMode(EXCLUSION);\n    stroke(255, 255-i*100, 255, 255-i*100);\n    rect(x - offsetX, y - offsetY, 1000, 100);\n    rect(x - offsetX, y - offsetY, 1000, 200);\n\n    push();\n    blendMode(DIFFERENCE);\n    fill(255, 255, 10);\n    rect(0, 0, width, height);\n    pop();\n  }\n}",
    "comments": []
  },
  {
    "_id": "hPgbqMC46YTxEFzuD",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "API",
    "created_at": { "$date": "2023-04-25T17:54:50.824Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b4ff3fea029fd79b1f618e7ef2455d49",
        "public_id": "avalanche2023spring/lcahgb6izd93eylbbvel",
        "version": 1682445307,
        "version_id": "1d903291ef41cf00d3e18403af66db5a",
        "signature": "772dfca620fa904308ab0743fbacbf1fa1965d78",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-25T17:55:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 4568934,
        "type": "upload",
        "etag": "dd8bce18e66bc72e738b7375acf631c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682445307/avalanche2023spring/lcahgb6izd93eylbbvel.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682445307/avalanche2023spring/lcahgb6izd93eylbbvel.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682445307/avalanche2023spring/lcahgb6izd93eylbbvel.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2274",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "537832",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 549233,
        "duration": 66.55,
        "rotation": 0,
        "nb_frames": 3993,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f5d2e845777e033d01217c7a2fbf0cfc",
        "public_id": "avalanche2023spring/fyxwq19grz3qfh8fkyi3",
        "version": 1682445560,
        "version_id": "68397dfc163dd24bdf1cc2966251f990",
        "signature": "b74e1dff3dec037bd4950606b78f5d6b0b691543",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-25T17:59:20Z",
        "tags": [],
        "pages": 0,
        "bytes": 3407123,
        "type": "upload",
        "etag": "c794ab325904ed4734dcca99cf9c830b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682445560/avalanche2023spring/fyxwq19grz3qfh8fkyi3.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682445560/avalanche2023spring/fyxwq19grz3qfh8fkyi3.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682445560/avalanche2023spring/fyxwq19grz3qfh8fkyi3.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2271",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "614143",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 625633,
        "duration": 43.566667,
        "rotation": 0,
        "nb_frames": 2614,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-25T18:17:40.91Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T03:10:22.132Z" }
      }
    ],
    "title": "",
    "description": "Already had node installed on my computer so didn't have too much trouble setting everything up. \n\nI loved being able to control the temperature because it's crazy how much personality that you're able to give ChatGPT just by increasing the temperature.\n\nJust for fun, on the second one, I set the temperature to 2 to see what would happen and I got whatever that is LOL. I even tried looking up the words but they returned nothing which is pretty interesting.",
    "comments": []
  },
  {
    "_id": "hRzf5cbytCSqx6ET7",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-07T22:55:31.01Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fc7fc9146de8137d11e69a4b4fa5e1cd",
        "public_id": "avalanche2023spring/sqg2vhq00dgtnj0x4xi1",
        "version": 1678229740,
        "version_id": "38be30ddf8bbb79a64220bba8c6e0864",
        "signature": "b20c31a4ca4adbd0084f77068f125d27740b6da9",
        "width": 817,
        "height": 720,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-07T22:55:40Z",
        "tags": [],
        "bytes": 37707,
        "type": "upload",
        "etag": "4a2ca198a739efbaf53b50aa508f1c82",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678229740/avalanche2023spring/sqg2vhq00dgtnj0x4xi1.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678229740/avalanche2023spring/sqg2vhq00dgtnj0x4xi1.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8fb30743b3f3a0aa9cd034c7250f5fac",
        "public_id": "avalanche2023spring/upaphvjrwpkdfjbvc8ao",
        "version": 1678229750,
        "version_id": "f53de561251c9babe01e456c13dfba07",
        "signature": "d2c86460dea9be9baaaad99af803c758d6c478ce",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-07T22:55:50Z",
        "tags": [],
        "bytes": 584542,
        "type": "upload",
        "etag": "6b33e9b5b60e9759b6663bf8fbdaa785",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678229750/avalanche2023spring/upaphvjrwpkdfjbvc8ao.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678229750/avalanche2023spring/upaphvjrwpkdfjbvc8ao.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "75a70d999f0558406f9f0e602ff621d9",
        "public_id": "avalanche2023spring/cdbf2vzvpxkscnxvv0sp",
        "version": 1678229755,
        "version_id": "5b0cbf39c2ea7e960c6ef79fceec6e90",
        "signature": "12575046e28b230d6a5e59cb689cfeaf8c4a6edf",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-07T22:55:55Z",
        "tags": [],
        "bytes": 3265512,
        "type": "upload",
        "etag": "b4b53b5d1cf8db863f40551b1ab1804d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678229755/avalanche2023spring/cdbf2vzvpxkscnxvv0sp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678229755/avalanche2023spring/cdbf2vzvpxkscnxvv0sp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T04:43:00.735Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:18.092Z" }
      }
    ],
    "title": "",
    "description": "My attempt at the Ouroboros challenge. Was messing around with shifting the RGB values of pixels based on quadratic noise. The first image is the original, followed by the 1st, and then the 3rd feed-throughs. I like the idea but I feel like it gets way too extreme when putting a lot of layers together.",
    "code": "let testImage;\nlet imagePath  =;\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction preload() {\n  testImage = loadImage(`${imagePath}`);\n  noLoop();\n}\n\nfunction setup() {\n  createCanvas(600,600);\n  noLoop();\n  noSmooth();\n  testImage.loadPixels();\n  \n}\n\nfunction draw() {\n    // background(0, 0, 0);\n  let noiseScale = .00008;\n\n  \n  testImage.loadPixels();\n  \n  for (let x = 0; x < testImage.width; x++) {\n    for (let y = 0; y < testImage.height; y++) {\n      const c = getQuick(testImage, x, y);\n      \n      c[0] = noise(x *y * noiseScale, 3* noiseScale) * 255 + c[0] + 10;\n      c[1] = noise((x*y) * noiseScale, 2* noiseScale) * 255 + c[1] + 0;\n      c[2] = noise((y*x) * noiseScale, 1* noiseScale) * 255 + c[2] + 0;\n      \n      if (c[0] >= 255) {\n        c[0] = 0 + (255 - c[0])\n      }\n      \n       if (c[1] >= 255) {\n        c[1] = 0 + (255 - c[1])\n      }\n      \n             if (c[2] >= 255) {\n        c[2] = 0 + (255 - c[2])\n      }\n      \n      setQuick(testImage, x, y, c)\n\n    }\n  }\n  \n  testImage.updatePixels();\n  image(testImage, 0, 0, 600, 600)\n}",
    "comments": []
  },
  {
    "_id": "hWMHe9YhQ4hskERGM",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T13:40:28.021Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2c74304f00d9326cbdd826878eb8473e",
        "public_id": "avalanche2023spring/oqzsituggz9y2oa1zl7b",
        "version": 1677850886,
        "version_id": "cdaa470007329ac10a83012ad247ff35",
        "signature": "6b3e99f4272aa4e706ff1b40a2e4f5e8c658e4b3",
        "width": 996,
        "height": 596,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T13:41:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 4525620,
        "type": "upload",
        "etag": "d3ee8fa20c952da82cfdbaf8c50e432c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677850886/avalanche2023spring/oqzsituggz9y2oa1zl7b.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677850886/avalanche2023spring/oqzsituggz9y2oa1zl7b.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677850886/avalanche2023spring/oqzsituggz9y2oa1zl7b.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "7681138",
          "dar": "249:149",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 9383979,
        "duration": 3.858167,
        "rotation": 0,
        "nb_frames": 258,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T14:55:21.857Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-05T03:00:49.905Z" }
      }
    ],
    "title": "",
    "description": "Extension of Challenge 2 to make a slinkyyyy",
    "comments": []
  },
  {
    "_id": "hWw4yGY4YXX9R6eg7",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-11T17:52:07.652Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7bba5442fdc5481cc7941a2a21c4e8be",
        "public_id": "avalanche2023spring/y5pxxa8mv194paiu8msb",
        "version": 1683827570,
        "version_id": "5611e1da88abb2c8561a35da6806d942",
        "signature": "0dc0936ef7428ad8bec53fca5b5d51f057825566",
        "width": 1350,
        "height": 1538,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-11T17:52:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 2365689,
        "type": "upload",
        "etag": "2657f5653a985c1b63fb5f7013f955b7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683827570/avalanche2023spring/y5pxxa8mv194paiu8msb.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683827570/avalanche2023spring/y5pxxa8mv194paiu8msb.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683827570/avalanche2023spring/y5pxxa8mv194paiu8msb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "3867736",
          "dar": "675:769",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3875531,
        "duration": 4.883333,
        "rotation": 0,
        "nb_frames": 293,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-11T23:28:17.35Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:12:31.573Z" }
      }
    ],
    "title": "",
    "description": "Lightening using the tree turtle sketch as reference.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet c = 0;\nlet buildingwidth =[]\nlet buildingheight =[];\n\nfunction setup() {\n  createCanvas(700, 800);\n  noFill();\n  stroke(255);\n  background(255);\n  frameRate(40);\n//   noLoop();\n  myTurtle = new Turtle();\n  \n  for(i=0; i<100; i+=5){\n      buildingwidth[i]=random(5, 7);\n      buildingheight[i]=random(10, 20);\n  }\n}\n\nfunction draw() {\n    background(3, 8, 46);\n  myTurtle.penUp();\n  myTurtle.moveTo(350, -30);\n  myTurtle.turnTo(random(60, 100));\n  myTurtle.penDown();\n  drawBranch(random(250, 300));\n  \n//   fill(0,255,0)\n//   rect(50,50,100,100)\n  \n  for(i=0; i<100; i+=5){\n      push()\n      noStroke()\n      fill(5, 57, 97)\n      push()\n    //   translate(i*10,800)\n    //   rotate(150)\n      rect(i*10,800, buildingwidth[i]*10, -buildingheight[i]*10)\n      pop()\n      pop()\n  }\n}\n\nfunction drawBranch(length) {\n    \n  if (length < 4) {\n    return;\n  }\n  //152, 212, 207\n  stroke(128, 249, 255)\n//   c+=10;\n  \n  // draw this branch\n  strokeWeight(length / random(40, 50));\n  myTurtle.moveForward(length * 0.6);\n  myTurtle.turnLeft(random(-30, 50));\n  myTurtle.moveForward(length * 0.8);\n\n  // left child\n  myTurtle.pushState();\n  myTurtle.turnRight(random(-10, 10));\n  drawBranch(length * 0.4);\n  //drawBranch(length * random(.5, .9));\n\n  myTurtle.popState();\n\n  // right child\n  myTurtle.pushState();\n  myTurtle.turnRight(random(-80, 80));\n  drawBranch(length * 0.4);\n  //drawBranch(length * random(.5, .9));\n  myTurtle.popState();\n}",
    "comments": []
  },
  {
    "_id": "hzpQm6bHifoB7Ds5g",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-20T07:14:59.99Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "98d822d8322e8ff0e999494e88781c4e",
        "public_id": "avalanche2023spring/csopsj9tyvgbrozs6xmd",
        "version": 1676877323,
        "version_id": "7545ff566456ba55236d29134e8cb772",
        "signature": "1ac680975d5aa48bd342d76bc11ec061e0da27a5",
        "width": 1200,
        "height": 1196,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-20T07:15:23Z",
        "tags": [],
        "bytes": 2100001,
        "type": "upload",
        "etag": "89fa7e7b2d17e296624dddcbd01cbf30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676877323/avalanche2023spring/csopsj9tyvgbrozs6xmd.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676877323/avalanche2023spring/csopsj9tyvgbrozs6xmd.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cdebb735ed5c7b6efeb0813102c397ee",
        "public_id": "avalanche2023spring/wqinrpx0cvohwsdjaafp",
        "version": 1676877936,
        "version_id": "fc1467dc55f82088d4fe0f5c08941b95",
        "signature": "28cee2cdaa0accc252b0e5b4387d124cac728a98",
        "width": 1204,
        "height": 1196,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-20T07:25:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 14366194,
        "type": "upload",
        "etag": "15444e7000deab2557c1ae1c15fa12cc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676877936/avalanche2023spring/wqinrpx0cvohwsdjaafp.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676877936/avalanche2023spring/wqinrpx0cvohwsdjaafp.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676877936/avalanche2023spring/wqinrpx0cvohwsdjaafp.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127390",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "11041469",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11425734,
        "duration": 10.058833,
        "rotation": 0,
        "nb_frames": 611,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d4987bcf3cdf9308461197b03be68a34",
        "public_id": "avalanche2023spring/xfmfovelldoirztu55cy",
        "version": 1676877946,
        "version_id": "c5ddf1b7ba76c9b714a3e2b04d390ec3",
        "signature": "7f2b3656bc398fb9a4afcb22d070bc72bc8c0088",
        "width": 1200,
        "height": 1196,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-20T07:25:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 19328439,
        "type": "upload",
        "etag": "1309c1c8d267fe3940a0613fa970a232",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676877946/avalanche2023spring/xfmfovelldoirztu55cy.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676877946/avalanche2023spring/xfmfovelldoirztu55cy.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676877946/avalanche2023spring/xfmfovelldoirztu55cy.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125249",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "14259737",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 15761698,
        "duration": 9.810333,
        "rotation": 0,
        "nb_frames": 618,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T22:16:49.607Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:14.12Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T19:42:37.498Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T03:53:52.336Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:39.906Z" }
      }
    ],
    "title": "",
    "description": "**Improved influence of Perlin Noise on Spirals** But have not quite achieved the intended effect",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Width: 200,\n  AngleFactor: 0.2,\n  StrokeWidth: 2,\n  NoiseAmp: 50,\n  RadiusFactor: 0.01,\n};\n\npane.addInput(params, \"Width\", { min: 50, max: 480 });\npane.addInput(params, \"AngleFactor\", { min: 0.05, max: 0.4 });\npane.addInput(params, \"StrokeWidth\", { min: 2, max: 6 });\npane.addInput(params, \"RadiusFactor\", { min: 0.01, max: 0.2 });\n\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  strokeWeight(2);\n}\n\nfunction draw() {\n  background(\"rgb(0,0,0)\");\n\n  noStroke();\n  \n  fill(\"rgb(24,176,28)\");\n  drawSpiral(width / 1.2, height / 1.4);\n  fill(\"rgb(218,38,38)\");\n  drawSpiral(width / 2, height / 2);\n  fill(\"rgb(38,43,218)\");\n  drawSpiral(width / 6, height / 8);\n  \n\n}\n\nfunction drawSpiral(x, y, angleFactor, radiusFactor) {\n  push();\n\n  \n  for (let angle = 0, radius = 0; radius < params.Width; angle += params.AngleFactor) {\n    let xPos = x + sin(angle) * radius;\n    let yPos = y + cos(angle) * radius;\n    \n    circle(xPos + noise(xPos-x)*10, yPos + noise(yPos-y)*10, params.StrokeWidth);\n    \n    radius+=params.RadiusFactor;\n    \n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "i7nz2BQ63DhuG4ieb",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T13:38:35.9Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5bf5011c333a764d8f6447e3a686d93d",
        "public_id": "avalanche2023spring/psytkymq0ptnuepf90he",
        "version": 1683293923,
        "version_id": "c5caf6f63af66768e3e749538920ad90",
        "signature": "d3a4c090070a2af95b844363460144901e93488a",
        "width": 1788,
        "height": 1078,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T13:38:43Z",
        "tags": [],
        "bytes": 65327,
        "type": "upload",
        "etag": "68d7c59c6cbd341b7899b3cf91cdd1a2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683293923/avalanche2023spring/psytkymq0ptnuepf90he.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683293923/avalanche2023spring/psytkymq0ptnuepf90he.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:05.785Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T22:59:33.748Z" }
      }
    ],
    "title": "",
    "description": "Utilizing linear extrude for organic looking stems - the goal is to build on this idea to make a tree",
    "comments": []
  },
  {
    "_id": "i7sGvZXPB2bbjZn4v",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T02:05:18.611Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9fd1f82052326bd6b653618a5328ba42",
        "public_id": "avalanche2023spring/vb8qkohyzlqjffidiiai",
        "version": 1682043205,
        "version_id": "607415f8da3b3994ee8f957804f4d1b8",
        "signature": "2645b8ef767665df5e5a95479e4f082a44191ba0",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T02:13:25Z",
        "tags": [],
        "bytes": 1041910,
        "type": "upload",
        "etag": "0d3ba968b984a558d39e25c31f374258",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682043205/avalanche2023spring/vb8qkohyzlqjffidiiai.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682043205/avalanche2023spring/vb8qkohyzlqjffidiiai.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e36069bc19fe28b472a580f00be84edd",
        "public_id": "avalanche2023spring/eg1ttjjtdfhb7cbfmopc",
        "version": 1682043209,
        "version_id": "5b2f86fc345e134fe3e0f897dc9941df",
        "signature": "7c694faf6db2e3929c64f47c6c25d4072f5d1f40",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T02:13:29Z",
        "tags": [],
        "bytes": 1112843,
        "type": "upload",
        "etag": "15633b7b1a36956dac9a425f2c4537cb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682043209/avalanche2023spring/eg1ttjjtdfhb7cbfmopc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682043209/avalanche2023spring/eg1ttjjtdfhb7cbfmopc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a027e08f127cdfbc4ba581c54ac7a72a",
        "public_id": "avalanche2023spring/b5vnpgahmwgjeyvq9z6i",
        "version": 1682043214,
        "version_id": "e7e030cb06ad495a425a292c7096fe0d",
        "signature": "f8ec98c4e6f121bf6555c0c2f0fea149e69b96d1",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T02:13:34Z",
        "tags": [],
        "bytes": 1118462,
        "type": "upload",
        "etag": "311050b92dad090b2f42a924fae51824",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682043214/avalanche2023spring/b5vnpgahmwgjeyvq9z6i.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682043214/avalanche2023spring/b5vnpgahmwgjeyvq9z6i.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T02:29:52.9Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:21:27.571Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T04:00:33.511Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:44:13.745Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:01:31.354Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:36:25.114Z" }
      }
    ],
    "title": "",
    "description": "I went down a Midjourney twitter rabbithole and it was cool/crazy to see how to control the outputs more.. I wanted to do an ad campaign for shoes but it turned into this 😅",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "i'd buy these shoes ",
        "created_at": { "$date": "2023-04-21T02:30:08.309Z" }
      },
      {
        "commenter_id": "me69bqQXDu4jtokwu",
        "comment": "yasss",
        "created_at": { "$date": "2023-04-21T02:33:28.765Z" }
      }
    ]
  },
  {
    "_id": "iB3AJqSP973hnpBiw",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-10T02:23:28.679Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "388913ff9c13a3a15ee1f91b6e0bd95f",
        "public_id": "avalanche2023spring/kvvjlqpwelbgvnikzeqs",
        "version": 1678415495,
        "version_id": "ea57f362539da2d9d38c6e52ea0f135b",
        "signature": "dae35a122141a0e186a3a98e2e73f7aa2ec71b71",
        "width": 1600,
        "height": 1204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T02:31:35Z",
        "tags": [],
        "bytes": 271906,
        "type": "upload",
        "etag": "51d2784393876f79be375b664356b199",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678415495/avalanche2023spring/kvvjlqpwelbgvnikzeqs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678415495/avalanche2023spring/kvvjlqpwelbgvnikzeqs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a58c68d88f41e9e8e7c35204ef2a91cc",
        "public_id": "avalanche2023spring/wmtmztaul0nuhszhlzlq",
        "version": 1678444097,
        "version_id": "cbb903511b168d43ba47b764f93bda39",
        "signature": "354c1d0781efbc561628efe6f48736016d487ba4",
        "width": 1810,
        "height": 1386,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T10:28:17Z",
        "tags": [],
        "bytes": 363548,
        "type": "upload",
        "etag": "120bd81f47fce0d7831518fb6eccd22b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678444097/avalanche2023spring/wmtmztaul0nuhszhlzlq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678444097/avalanche2023spring/wmtmztaul0nuhszhlzlq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "281a4c50691d2f2d8e08b78c4457c6a5",
        "public_id": "avalanche2023spring/xgdtgofzzmi2gzmgqhnx",
        "version": 1678444159,
        "version_id": "38563a90692eeec8b3dde5635b3c8a02",
        "signature": "f5745a99b9c3f5ec02418b740e398464701683ee",
        "width": 1600,
        "height": 1204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T10:29:19Z",
        "tags": [],
        "bytes": 257171,
        "type": "upload",
        "etag": "34576711c33ad14d94a7d6c6687bb1eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678444159/avalanche2023spring/xgdtgofzzmi2gzmgqhnx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678444159/avalanche2023spring/xgdtgofzzmi2gzmgqhnx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:45:10.971Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-28T05:20:18.591Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:27.958Z" }
      }
    ],
    "title": "",
    "description": "**Randomly Generated Maps of Design Methodologies** to comment on human bias while creating such maps and human tendencies to look for patterns where there are none. When 7 participants were asked to rate the map (without informing it was randomly generated), people pointed out lack of detail rather than the position or size itself being flawed, i.e they did not question the detail the map already had. Still working on the code so that (1) the Venn diagrams look more like they were drawn by humans - cleaner circles, neater overlaps, tiny circles within overlaps, and (2) methodologies have a higher probability (or bias) to fall closer to the edge they are most associated with - for if Play falls near constrained for e.g. that's a major giveaway that the map is fake",
    "comments": [],
    "code": "let processes = [\n  {\n    name: \"Double Diamond\",\n    sizeBias: \"large\",\n  },\n\n  {\n    name: \"AGILE\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Lean\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Speculative\",\n    sizeBias: \"large\",\n  },\n\n  {\n    name: \"Play\",\n    sizeBias: \"large\",\n  },\n\n  {\n    name: \"Iterative Game Design\",\n    sizeBias: \"medium\",\n  },\n\n  {\n    name: \"HCD\",\n    sizeBias: \"medium\",\n  },\n\n  {\n    name: \"Creative Learning Spiral\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Reframing\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Mathematical Thinking\",\n    sizeBias: \"medium\",\n  },\n\n  {\n    name: \"Cocreation\",\n    sizeBias: \"medium\",\n  },\n\n  // {\n  //   name: \"Design Fiction\",\n  //   sizeBias: \"small\",\n  // },\n\n  {\n    name: \"Scientific Research\",\n    sizeBias: \"large\",\n  },\n\n  // {\n  //   name: \"Critical Design\",\n  //   sizeBias: \"medium\",\n  // },\n\n  {\n    name: \"Systems Design Framework\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Sketching/Explorative\",\n    sizeBias: \"medium\",\n  },\n\n  // {\n  //   name: \"Systems Thinking\",\n  //   sizeBias: \"large\",\n  // },\n];\n\nlet diameter, cXPos, cYPos;\n\nfunction setup() {\n  createCanvas(800, 600);\n  colorMode(HSB, 1);\n  noLoop();\n\n  background(255);\n  \n  push();\n  scale(0.8);\n  translate(width - 700, height - 524);\n  strokeWeight(1);\n  stroke(\"rgba(87,87,87,0.6)\");\n  line(width / 2, 0, width / 2, height);\n  line(0, height / 2, width, height / 2);\n  line(0, 0, 0, height);\n  line(0, height, width, height);\n  line(0, 0, width, 0);\n  line(width, 0, width, height);\n  pop();\n  \n  push();\n  fill(\"#686868\");\n  textSize(16);\n  textStyle(BOLD);\n  textAlign(CENTER, CENTER);\n  text(\"FAST\", 0, 0, width, 80);\n  text(\"SLOW\", 0, height-80, width, 80);\n  push();\n  rectMode(CENTER);\n  translate (60, height/2)\n  rotate(-PI/2);\n  text(\"CONSTRAINED\", 0, 0, height, 80);\n  rotate(PI);\n  text(\"UNCONSTRAINED\", 0, -height-80, width, 80);\n  pop();\n  pop();\n}\n\nfunction draw() {\n  \n  push();\n  \n  noFill();\n  \n  for (let i = 0; i < processes.length; i++) {\n    \n    //SIZE\n    diameter = noise(i) * (processes.length - i) * 8 + 100;\n\n    //COLOUR\n    let hue = random();\n    stroke(hue, 0.40, 1);\n    //noStroke();\n    fill(hue, 0.30, 1, 0.4);\n\n    //POSITION\n    // XPos [150, 650] / YPos [150, 550]\n    cXPos = random(150, 650);\n    cYPos = random(100, 500);\n    \n\n    circle(cXPos, cYPos, diameter);\n\n    //LABEL\n    push();\n    noStroke();\n    fill(hue, 1, 0.7, 1);\n    textAlign(CENTER, CENTER);\n    text(\n      processes[i].name,\n      cXPos - diameter / 2,\n      cYPos - diameter / 2,\n      diameter,\n      diameter\n    );\n    pop();\n    \n  }\n  pop();\n\n}"
  },
  {
    "_id": "iJHhqkwgnaiZTZeBR",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-19T16:53:47.227Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d5d3af771ac23e9952793dc10d1e5622",
        "public_id": "avalanche2023spring/fpxekdinmak6iqqgvy2c",
        "version": 1676826134,
        "version_id": "9f55f07451828db724482fd7f1b0fe87",
        "signature": "228bba07458e8f45862eaf4189bcdb800fcf6abf",
        "width": 1200,
        "height": 1196,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-19T17:02:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 19598944,
        "type": "upload",
        "etag": "643f22cae97eb6af06bc566515261cff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676826134/avalanche2023spring/fpxekdinmak6iqqgvy2c.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676826134/avalanche2023spring/fpxekdinmak6iqqgvy2c.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676826134/avalanche2023spring/fpxekdinmak6iqqgvy2c.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "110691",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "16267712",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 18852690,
        "duration": 8.316667,
        "rotation": 0,
        "nb_frames": 560,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-19T17:03:47.809Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-19T17:08:42.309Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-20T22:16:44.721Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:38.944Z" }
      }
    ],
    "title": "",
    "description": "**Red Lolli: Learning to manipulate spirals,** and parameters have been very useful to understand the effect different variables create on the spiral",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Size: 100,\n  AngleFactor: 3,\n};\n\npane.addInput(params, \"Size\", { min: 50, max: 480 });\npane.addInput(params, \"AngleFactor\", { min: 1, max: 4 });\n\nlet rot = 0;\nconst noiseAmp = 50;\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  strokeWeight(2);\n  \n}\n\nfunction draw() {\n  background(\"rgb(225,225,225)\");\n  \n  noStroke();\n  fill(\"rgb(122,122,122)\");\n  rect(width / 2 - 5, height / 2 - 5, 10, 240, 4, 4, 4, 4);\n  \n  \n  fill(\"rgba(218,38,38,0.42)\");\n  //noFill();\n  drawSpiral(width / 2, height / 2, params.Size, params.AngleFactor);\n  \n  \n  let flag = 2;\n\n  rot += flag;\n  if (rot >= 360) rot=0;\n}\n\nfunction drawSpiral(x, y, radiusMax, angleFactor) {\n  push();\n  translate(x, y);\n  rotate(rot);\n  scale(1.2);\n\n  for (\n    let angle = 0, radius = 0;\n    radius < radiusMax;\n    angle += noise(radius) * angleFactor\n  ) {\n    circle(sin(angle) * radius, cos(angle) * radius, 6);\n    radius +=\n      noise(sin(angle) * radius * noiseAmp, cos(angle) * radius * noiseAmp) *\n      0.1;\n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "iKFsCMRsLtiaRfJb7",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": { "$date": "2023-05-08T22:55:04.921Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2b202d4b8fc11264e312a358a4b023f8",
        "public_id": "avalanche2023spring/yjfgpafm8f6tfadvj6an",
        "version": 1683586514,
        "version_id": "2f486a20909aae456a493643deaac0b9",
        "signature": "7cac7d9f1e9b118d7951334f1d7d7f57a5ec7249",
        "width": 1264,
        "height": 934,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-08T22:55:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 1159865,
        "type": "upload",
        "etag": "a7dd36308fe1b07f54c8440ffe9c5bcd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683586514/avalanche2023spring/yjfgpafm8f6tfadvj6an.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683586514/avalanche2023spring/yjfgpafm8f6tfadvj6an.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683586514/avalanche2023spring/yjfgpafm8f6tfadvj6an.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "465641",
          "dar": "632:467",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 499762,
        "duration": 18.566667,
        "rotation": 0,
        "nb_frames": 1113,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "Text",
    "title": "",
    "description": "Did some more experimenting with tracey",
    "code": "// require /text/tracery.min.js\n\nconst quoteGrammar = {\nquote: [\n\"#thought.capitalize#, #insult#.\",\n\"#insult.capitalize#, #thought#.\",\n\"#question.capitalize#, #thought#?\",\n],\nthought: [\n\"#adjective# #noun#\",\n\"#verb.capitalize# #object#\",\n\"#object.capitalize# #verb#\",\n],\nadjective: [\n\"hopeless\",\n\"meaningless\",\n\"worthless\",\n\"pointless\",\n\"useless\",\n],\nnoun: [\n\"existence\",\n\"life\",\n\"efforts\",\n\"dreams\",\n\"aspirations\",\n],\nverb: [\n\"give up on\",\n\"abandon\",\n\"ignore\",\n\"fail at\",\n\"waste time on\",\n],\nobject: [\n\"your goals\",\n\"your passions\",\n\"your dreams\",\n\"your ambitions\",\n\"yourself\",\n],\ninsult: [\n\"like always\",\n\"as expected\",\n\"just another failure\",\n\"nothing new\",\n\"you'll never make it\",\n],\nquestion: [\n\"What's the point\",\n\"Why bother\",\n\"What are you even doing\",\n\"How much longer\",\n\"Is it worth it\",\n],\n};\n\nfunction main() {\nconst grammar = tracery.createGrammar(quoteGrammar);\nconst quote = grammar.flatten(\"#quote#\");\ndisplay(quote);\n}\n\nfunction display(...strings) {\nconst div = document.createElement(\"div\");\ndiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\ndiv.innerText = strings.join(\"\\n\");\ndocument.body.append(div);\n}\n\nsetTimeout(main, 10);",
    "comments": []
  },
  {
    "_id": "iKqtM2ghZcCrcaL66",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-28T20:49:28.675Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "87ee0b2d71fdba2891e5f98d30140839",
        "public_id": "avalanche2023spring/amq3mqzhnxallqnozqv7",
        "version": 1677617380,
        "version_id": "937a7d3da640be1fb3d433fa890fd909",
        "signature": "e491dd8cfdf45d25002d38b9e9d2ce7f5e53fe83",
        "width": 1380,
        "height": 980,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-28T20:49:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 20152500,
        "type": "upload",
        "etag": "02c75e57254df68847af97a8bbedce7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677617380/avalanche2023spring/amq3mqzhnxallqnozqv7.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677617380/avalanche2023spring/amq3mqzhnxallqnozqv7.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677617380/avalanche2023spring/amq3mqzhnxallqnozqv7.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317007",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "10595681",
          "dar": "69:49",
          "time_base": "1/25000"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 10889319,
        "duration": 14.76,
        "rotation": 0,
        "nb_frames": 369,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Worked more on the challenge 1 extension. Refined the animation, added more control parameters.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst points = [];\n\nconst pane = new Tweakpane.Pane();\nconst params = {\n  // speed: 1/1750,\n  speed: 0.003,\n  max_size: 22,\n  min_size: 5,\n  noise_factor: 1.1,\n  transparency: 0.75,\n  color_small: 0,\n  color_large: 320,\n};\n// pane.addInput(params, \"speed\", { min: 1/7500, max: 1/900 });\npane.addInput(params, \"speed\", { min: 0.0005, max: 0.008 });\npane.addInput(params, \"max_size\", { min: 15, max: 45 });\npane.addInput(params, \"min_size\", { min: 2, max: 14 });\npane.addInput(params, \"noise_factor\", { min: 0, max: 3 });\npane.addInput(params, \"transparency\", { min: 0.25, max: 1 });\npane.addInput(params, \"color_small\", { min: 0, max: 360 });\npane.addInput(params, \"color_large\", { min: 0, max: 360 });\n\nlet colFactor = 0;\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  ellipseMode(CENTER);\n  colorMode(HSB, 360, 100, 100, 100);\n  frameRate(40);\n\n  // lines 36-43 adapted from lines 9-16 in https://compform.net/js_lab/js_lab.html?/strategy/sketches/grid_stored.js\n  for (let y = 0; y < 30; y++) {\n    for (let x = 0; x < 30; x++) {\n      points.push({\n        x: (random(width) + random(width) + random(width)) / 3,\n        y: (random(height) + random(height) + random(height)) / 3,\n      });\n    }\n  }\n}\n\nfunction draw() {\n  background(60, 0, 20);\n\n  // lines 50-51 adapted from lines 24-25 in https://compform.net/js_lab/js_lab.html?/strategy/sketches/grid_stored.js\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n\n    let dMin = params.min_size;\n    let dMax = params.max_size;\n    let dSize = map(i, 0, points.length, dMin, dMax);\n\n    p.x += params.noise_factor * sin(i * noise(p.x));\n    p.y += params.noise_factor * sin(i * noise(p.y));\n\n    let colH = map(dSize, dMin, dMax, params.color_small, params.color_large);\n    // let alpha = (noise(i,100)*100 + (75 * cos(TWO_PI * millis() * params.speed)) + i)%100 * params.transparency;\n\n    colFactor -= params.speed;\n    if (colFactor < 0) { colFactor = 100; }\n    let alpha = ((noise(i, 100) * 100 + colFactor + i) % 100) * params.transparency;\n    fill(colH, 100, 100, alpha);\n\n    // line 69 adapted from line 26 in https://compform.net/js_lab/js_lab.html?/strategy/sketches/grid_stored.js\n    ellipse(p.x, p.y, dSize);\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "iWmakkvyHjPJ8xJ4Z",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T04:33:59.98Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a760cea16b4558d045ea074e7f8a7212",
        "public_id": "avalanche2023spring/z0y0y8d7pkx6ut2ft9bx",
        "version": 1680756323,
        "version_id": "045974d8813a94d211a9e37300055fc0",
        "signature": "46e9c39470374e2a3580080732371ec765f9e891",
        "width": 3456,
        "height": 1666,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-06T04:45:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 5375301,
        "type": "upload",
        "etag": "783395d4b4d6b8d8c5021dc67340f70a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680756323/avalanche2023spring/z0y0y8d7pkx6ut2ft9bx.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680756323/avalanche2023spring/z0y0y8d7pkx6ut2ft9bx.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680756323/avalanche2023spring/z0y0y8d7pkx6ut2ft9bx.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128030",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "High",
          "bit_rate": "898739",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1039860,
        "duration": 41.352993,
        "rotation": 0,
        "nb_frames": 2480,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1e05f01f9c21c4257ebb7c3f748a2b50",
        "public_id": "avalanche2023spring/dedwacq1tcyn8yzlzror",
        "version": 1680756431,
        "version_id": "a77b0310f80f6d03bb5ee2d18ded45a7",
        "signature": "be62b88b087ba8bc1b853edbd6f7ea3c4f1a3190",
        "width": 1704,
        "height": 1500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-06T04:47:11Z",
        "tags": [],
        "bytes": 421720,
        "type": "upload",
        "etag": "7a4537bd953759a59b9528a7860cd917",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680756431/avalanche2023spring/dedwacq1tcyn8yzlzror.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680756431/avalanche2023spring/dedwacq1tcyn8yzlzror.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-06T20:15:15.757Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T14:10:23.734Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:53.876Z" }
      }
    ],
    "title": "",
    "description": "Steer the ballerina into the T.A.R.D.I.S using objects in your literal home. Then, start all over again. Gonna call this game \"Sisyphus\".\n\nThis was a great way to raise the difficulty of a game that would have been very simple to win if you were just using the arrow keys on the keyboard. Interesting to experiment with the game experience where dealing with an unfamiliar \"controller\" is just as effective in adding challenge as the typical obstacles.\n\nAll I had to do was make the character and door really tiny and that makes it challenging too! The added time confuses the trained model and the direction could get affects, phew!",
    "comments": []
  },
  {
    "_id": "iY36cuQWwmsHYqGXq",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T21:35:19.032Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a42982cce1562fa0ebe790f1ab29d369",
        "public_id": "avalanche2023spring/ipnmisfve43po0pug3qb",
        "version": 1677188349,
        "version_id": "d54917cf4d8d0493de038b590d9ca12f",
        "signature": "3b1e50eec10f09aa95c8f1f1829851d42ef63896",
        "width": 1080,
        "height": 1620,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-23T21:39:09Z",
        "tags": [],
        "pages": 0,
        "bytes": 4829585,
        "type": "upload",
        "etag": "8dd7e670d14e14ea620931d8d6a6e832",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677188349/avalanche2023spring/ipnmisfve43po0pug3qb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677188349/avalanche2023spring/ipnmisfve43po0pug3qb.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677188349/avalanche2023spring/ipnmisfve43po0pug3qb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "2692484",
          "dar": "1146:691",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 2698657,
        "duration": 14.316667,
        "rotation": 0,
        "nb_frames": 859,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2ea7cc3f6e8629d34d1a012a5f6ad4fe",
        "public_id": "avalanche2023spring/qvktxbsgtfekqm5kv6tk",
        "version": 1677188406,
        "version_id": "33b535297d0a5f14cee7fb6b6aff77f2",
        "signature": "90b3e7c967271ad81c60a276ce405061cf574011",
        "width": 1190,
        "height": 1180,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T21:40:06Z",
        "tags": [],
        "bytes": 195902,
        "type": "upload",
        "etag": "e17a65a2563697af43a483f6d17c6c2d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677188406/avalanche2023spring/qvktxbsgtfekqm5kv6tk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677188406/avalanche2023spring/qvktxbsgtfekqm5kv6tk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T00:23:55.049Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T01:04:18.667Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:51:17.671Z" }
      }
    ],
    "title": "",
    "description": "Built off of my type sketch and played around with color!",
    "comments": []
  },
  {
    "_id": "iYgjmRYswNaTcPGg9",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T03:21:57.236Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f2c4ab550d62f1313cdee19a757976ef",
        "public_id": "avalanche2023spring/cmfjlaswam1lxeimrl8q",
        "version": 1675221798,
        "version_id": "33c5fe5196b3a83c6f8b2a5f5836b428",
        "signature": "cfae8b4144bc0a19812921c62df1c47fb81e57ac",
        "width": 2048,
        "height": 2048,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T03:23:18Z",
        "tags": [],
        "bytes": 3567717,
        "type": "upload",
        "etag": "e58e102c6590d26abdae1a81b989c4f4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675221798/avalanche2023spring/cmfjlaswam1lxeimrl8q.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675221798/avalanche2023spring/cmfjlaswam1lxeimrl8q.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T06:07:48.64Z" }
      },
      {
        "voter_id": "THfyBvW9hRLZSLcRy",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T17:34:31.827Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:27:25.403Z" }
      }
    ],
    "title": "",
    "description": "My poster for Juliana's instructions :)",
    "comments": []
  },
  {
    "_id": "ie57X6chngn442bJm",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T21:56:45.855Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37e054d5d9c0e30342b30998d292ef1c",
        "public_id": "avalanche2023spring/neivselznveazydcogst",
        "version": 1676584723,
        "version_id": "2085933de413f11fea1eaaa75a3c1fae",
        "signature": "9afb3e5c110a7a249c31405e97d964d26df8b2dd",
        "width": 802,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-16T21:58:43Z",
        "tags": [],
        "pages": 0,
        "bytes": 3292138,
        "type": "upload",
        "etag": "061f2674cac7a567987af88ddcbedd7a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676584723/avalanche2023spring/neivselznveazydcogst.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676584723/avalanche2023spring/neivselznveazydcogst.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676584723/avalanche2023spring/neivselznveazydcogst.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125759",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "879721",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1392269,
        "duration": 18.916667,
        "rotation": 0,
        "nb_frames": 1194,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e1c6521d7861af810b088974eee94e67",
        "public_id": "avalanche2023spring/ydr285tnpq6ai5cwgt0p",
        "version": 1676584820,
        "version_id": "33bbdf5ad21912b5e9c8c72d45e274e7",
        "signature": "01d403da858934d317d8f90b88811ea4007d1d10",
        "width": 802,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T22:00:20Z",
        "tags": [],
        "bytes": 229399,
        "type": "upload",
        "etag": "57927af78660558d80c31ac543594543",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676584820/avalanche2023spring/ydr285tnpq6ai5cwgt0p.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676584820/avalanche2023spring/ydr285tnpq6ai5cwgt0p.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "fa4d19d6e62cb07e175bff0b481690b2",
        "public_id": "avalanche2023spring/au0vibxeoauux5dtfavs",
        "version": 1676584884,
        "version_id": "ce5ce4c41cdb4f4611b91c8f202208dc",
        "signature": "bd5f1c0ca484e422a8612859d73a43298768a96a",
        "width": 802,
        "height": 796,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-16T22:01:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 6986093,
        "type": "upload",
        "etag": "26cca57c00b4edd3f96272441823c0e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676584884/avalanche2023spring/au0vibxeoauux5dtfavs.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676584884/avalanche2023spring/au0vibxeoauux5dtfavs.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676584884/avalanche2023spring/au0vibxeoauux5dtfavs.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126283",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1529806",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2020075,
        "duration": 27.666667,
        "rotation": 0,
        "nb_frames": 1721,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T23:42:53.122Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T00:57:24.172Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:37:55.522Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:36.851Z" }
      }
    ],
    "title": "",
    "description": "**Noise influences position & rotation on p5** Wanted to see what the random walker would become when recreated with noise. Watching the piece is exciting and frustrating as you wish for it to make a mark where you know the piece would look good, but it doesn't because - noise. Random and noise has pushed me to look them as co-creators. (Is it the technology, or the people who coded the noise functions I'm co-creating with?)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x, y, w;\nlet rotAng=0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(\"red\");\n  rectMode(CENTER);\n  angleMode(DEGREES);\n  frameRate(400);\n  \n  x = 0; y = 0;\n\n  w = 40;\n}\n\nfunction draw() {\n  translate(width/2, height/2);\n  rotAng += noise(rotAng, millis()*0.1)*2;\n  rotate(rotAng);\n  \n  rect(x, y, w-35, w-4);\n  \n  let a = noise(millis()*0.0003)*width; console.log(a);\n  let b = noise(millis()*0.0006)*height;\n  x=a; y=b;\n  \n  \n  if (x > width/2) //x=random(-width/6, width/8);\n    x=0;\n  if (x < -width/3) x=-width/20;\n    \n  if (y < -height/2) y=-height/20;\n  if (y> height/2) y=-height/20;\n  \n  \n}",
    "comments": []
  },
  {
    "_id": "ikYyxE7btzYZ284CH",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T15:26:55.133Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "74ba67bb67a0cdc872627e42b71bd634",
        "public_id": "avalanche2023spring/hkim7rjekwoj06jl1uxb",
        "version": 1677770834,
        "version_id": "2083fa1ea4a09cac9886ca5a61c0dc5d",
        "signature": "0ca6f737270adf97e99b621892995b1ced07eab6",
        "width": 698,
        "height": 726,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T15:27:14Z",
        "tags": [],
        "bytes": 227820,
        "type": "upload",
        "etag": "81405170ecc784a13c47a5453980aa69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677770834/avalanche2023spring/hkim7rjekwoj06jl1uxb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677770834/avalanche2023spring/hkim7rjekwoj06jl1uxb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6b10749b479a07fc3b46c257c9d05c98",
        "public_id": "avalanche2023spring/duig4rs3usmwtabxtilk",
        "version": 1677770838,
        "version_id": "199a2a479327305564245ff5b216f145",
        "signature": "3ef7a8be262f39657df2a2f1755ad69676fd69d7",
        "width": 684,
        "height": 974,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T15:27:18Z",
        "tags": [],
        "bytes": 254410,
        "type": "upload",
        "etag": "6dc234d338138cd71b5e8d57f33cc616",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677770838/avalanche2023spring/duig4rs3usmwtabxtilk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677770838/avalanche2023spring/duig4rs3usmwtabxtilk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 5 ( 4/4): You are going to laugh at how much time I spent on this,  BUT WAIT TILL YOU SEE THE CODE FOR IT.",
    "comments": []
  },
  {
    "_id": "ipFkMRSMKuvuHXHC6",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T11:12:30.386Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d2bacb443c1f302d45de28cdc1e33a6b",
        "public_id": "avalanche2023spring/a2uldqev4qn9rz27j8wf",
        "version": 1677237220,
        "version_id": "c7cb89331b87d7e8ea9381b55ebf91a3",
        "signature": "a4bdbd8f8635fb155c8f0fcf55b24be8a9e438dd",
        "width": 1622,
        "height": 1568,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T11:13:40Z",
        "tags": [],
        "bytes": 746237,
        "type": "upload",
        "etag": "9ff5e52312bbf730f65c69c546a5d395",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677237220/avalanche2023spring/a2uldqev4qn9rz27j8wf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677237220/avalanche2023spring/a2uldqev4qn9rz27j8wf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-03-01T05:03:15.27Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "funny",
        "created_at": { "$date": "2023-03-01T05:48:40.802Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "nerdy",
        "created_at": { "$date": "2023-03-01T05:48:41.774Z" }
      }
    ],
    "title": "",
    "description": "Building upon Rama's code, my iteration of the bamboo sketch.",
    "code": "let noiseSlider, strokeWeightSlider, rotationSpeedSlider;\n\nfunction setup() {\n  createCanvas(800, 800);\n  rectMode(CENTER);\n\n  noiseSlider = createSlider(0, 10, 5, 0.1);\n  noiseSlider.position(10, 10);\n\n  strokeWeightSlider = createSlider(0, 10, 2, 0.1);\n  strokeWeightSlider.position(10, 30);\n\n  rotationSpeedSlider = createSlider(0, 2, 1, 0.1);\n  rotationSpeedSlider.position(10, 50);\n}\n\nfunction draw() {\n  background(201, 230, 149);\n\n  let rotationSpeed = rotationSpeedSlider.value();\n\n  push();\n  translate(width/2, height/2);\n  rotate(frameCount * rotationSpeed);\n\n  drawGrid();\n\n  pop();\n\n  let noiseValue = noiseSlider.value();\n  let strokeWeightValue = strokeWeightSlider.value();\n\n  strokeWeight(strokeWeightValue);\n\n  fill(255);\n  text(`Noise: ${noiseValue}`, noiseSlider.x * 2 + noiseSlider.width, 25);\n  text(`Stroke Weight: ${strokeWeightValue}`, strokeWeightSlider.x * 2 + strokeWeightSlider.width, 45);\n  text(`Rotation Speed: ${rotationSpeed}`, rotationSpeedSlider.x * 2 + rotationSpeedSlider.width, 65);\n}\n\nfunction drawGrid(){\n  for(let i=-width; i<width; i+=50){\n    for(let j=-height; j<height; j+=50){\n\n      stroke(112, 102, 74);\n\n      let n = noise(i*0.01, j*0.01) * 200 - 100;\n      n *= noiseSlider.value();\n\n      let p = noise(i, j) * 6 - 3;\n\n      fill(247+n, 232+n, 193+n);\n      rect(j, i+j, 50, 20);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "ixDCW5JY5Tn3uxJAz",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-19T19:00:12.345Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "75a0d0c6975e265222ce0eda7689a63f",
        "public_id": "avalanche2023spring/crlwyo6zzt3ewmc4rcvc",
        "version": 1679252721,
        "version_id": "986fcac43eb8416168db4cbacf3f3711",
        "signature": "3c4509c11dd48cf4fda7a1295f9a3d2e498ad459",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-19T19:05:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 2640589,
        "type": "upload",
        "etag": "b46d55d2b0e244221b32780704b45d08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679252721/avalanche2023spring/crlwyo6zzt3ewmc4rcvc.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679252721/avalanche2023spring/crlwyo6zzt3ewmc4rcvc.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679252721/avalanche2023spring/crlwyo6zzt3ewmc4rcvc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316826",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "1807800",
          "dar": "1:1",
          "time_base": "1/25000"
        },
        "is_audio": false,
        "frame_rate": 25,
        "bit_rate": 2129507,
        "duration": 9.88,
        "rotation": 0,
        "nb_frames": 247,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "976a40ec021203f9dc1f3fd0d5ec7244",
        "public_id": "avalanche2023spring/scsyftv9krlonsv2iagn",
        "version": 1679252791,
        "version_id": "7d957daf190bbc62afacd4e11a2016e0",
        "signature": "e8ccb9ff8475851348a4740177303e21edd0e5a3",
        "width": 2190,
        "height": 2190,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-19T19:06:31Z",
        "tags": [],
        "bytes": 416765,
        "type": "upload",
        "etag": "8a437f59051a7798d0c323d2cd940198",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679252791/avalanche2023spring/scsyftv9krlonsv2iagn.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679252791/avalanche2023spring/scsyftv9krlonsv2iagn.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T05:16:16.364Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T08:23:20.844Z" }
      }
    ],
    "title": "",
    "description": "Mostly figuring out how paper.js works. Inspired by an oil painting by B.C. Binning at the Vancouver Art Gallery. I can't find a title or a link, but the second image is a photo I took of the painting.\n\nStill having trouble with onFrame() in VSCode. It works in the paper.js editor, but for some reason VSCode only calls onFrame once no matter what I do.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar center = new Point(250, 250);\n\nvar triangle = [];\nvar outerCircle = [];\nvar outerInt = [];\nvar innerCircle = [];\nvar innerInt = [];\nvar group = [];\nvar rotFactor = 1;\n\nfunction onFrame(event) {\n    \nvar bg = new Path.Rectangle(0, 0, center.x*2, center.y*2);\nbg.fillColor = \"rgba(255, 255, 255)\";\n\n    for(var i=0; i<8; i++) {\n    \n        var triFill = 60 + (12*i);\n        var triSide = 71;\n        triangle[i] = new Path;\n        triangle[i].add(center);\n        triangle[i].add(new Point(center.x, center.y-(2.5*triSide)));\n        triangle[i].add(new Point(center.x+triSide, center.y-triSide));\n        triangle[i].fillColor = \"rgba(\" + triFill + \",\" + triFill + \",\" + triFill + \")\";\n    \n        outerCircle[i] = new Path.Circle(center, 100);\n        outerCircle[i].fillColor = \"rgba(0, 0, 0)\";\n        outerInt[i] = outerCircle[i].intersect(triangle[i]);\n        outerCircle[i].remove();\n    \n        var circHue = 40;\n        var circSat = 40 + (5*i);\n        var circLgt = 35 + (2*i);\n        innerCircle[i] = new Path.Circle(center, 87);\n        innerCircle[i].fillColor = \"hsl(\" + circHue + \",\" + circSat + \",\" + circLgt + \")\";\n        innerInt[i] = innerCircle[i].intersect(triangle[i]);\n        innerCircle[i].remove();\n    \n        group[i] = new Group();\n        group[i].addChild(triangle[i]);\n        group[i].addChild(outerInt[i]);\n        group[i].addChild(innerInt[i]);\n        group[i].rotate((45*i) + rotFactor, center);\n        group[i].rotate(10, center);\n    \n    }\n    \n    rotFactor++;\n\n}",
    "comments": []
  },
  {
    "_id": "ixcRarScmHTWckxZs",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T15:21:19.69Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "178ceee8c3eed38ddaf26a3413498b6b",
        "public_id": "avalanche2023spring/cyxldmxk2aoltbxjsq2x",
        "version": 1675264916,
        "version_id": "44ed7d10b845533120fee93c2b4fc6e2",
        "signature": "c353d230daab9a7332b15bccc50b8b913c4f1696",
        "width": 2621,
        "height": 2621,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T15:21:56Z",
        "tags": [],
        "bytes": 2336516,
        "type": "upload",
        "etag": "6642529baeb411cecb979ac3347b9396",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675264916/avalanche2023spring/cyxldmxk2aoltbxjsq2x.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675264916/avalanche2023spring/cyxldmxk2aoltbxjsq2x.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a0f0c457a90764038ee9c66753894648",
        "public_id": "avalanche2023spring/pas6ha8vuoqhyv8bcqzz",
        "version": 1675264922,
        "version_id": "58ee6f315c8367f92fb92b6f0ffdbd03",
        "signature": "6360d6ab0077d62f3878f6e1d892374461ffc103",
        "width": 473,
        "height": 442,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T15:22:02Z",
        "tags": [],
        "bytes": 19082,
        "type": "upload",
        "etag": "e50693a710bc535fd28c1e740af08105",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675264922/avalanche2023spring/pas6ha8vuoqhyv8bcqzz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675264922/avalanche2023spring/pas6ha8vuoqhyv8bcqzz.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Based on Abha's instruction set! This was so fun and nostalgic 😁",
    "inspiration_name": "Nibbles from Tom and Jerry",
    "inspiration_url": "https://i.pinimg.com/474x/e5/7b/ef/e57bef8aef072f7facbc7b18a59f14d9.jpg",
    "comments": []
  },
  {
    "_id": "j4bDWyzNPFHGKhs5N",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-07T00:51:11.266Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "274095a9265eb544da7074bdf57ee9b5",
        "public_id": "avalanche2023spring/wcb7ncnlyjwsurpmetcg",
        "version": 1678150280,
        "version_id": "1a1f7c94f6f882418740041b48d9102a",
        "signature": "55472b70fbaf71eb641667f4cc1595dbc769d6a2",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-07T00:51:20Z",
        "tags": [],
        "bytes": 252316,
        "type": "upload",
        "etag": "b8afb1abb570ba4aafddd2e041fa03c9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678150280/avalanche2023spring/wcb7ncnlyjwsurpmetcg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678150280/avalanche2023spring/wcb7ncnlyjwsurpmetcg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T18:38:16.968Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T23:01:48.449Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:05.402Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\n\nlet mainImage;\n\n// palette generated by ChatGPT March 6, 2023\n// prompt: give me a spring-time palette as a json literal array of arrays of ints representing RGBA colors in the 0 to 255 range\nconst palette = [\n  [250, 202, 204, 255], // Pale pink\n  [250, 222, 176, 255], // Light yellow\n  [150, 203, 187, 255], // Mint green\n  [218, 165, 32, 255], // Goldenrod\n  [252, 228, 236, 255], // Light pink\n];\nfunction setup() {\n  createCanvas(512, 512);\n  mainImage = createImage(512, 512);\n  noiseDetail(4, 0.5);\n  noLoop();\n}\n\nfunction draw() {\n  background(palette[0]);\n\n  mainImage.loadPixels();\n\n  for (let i = 0; i < 1000; i++) {\n    const x = randomInt(width);\n    const y = randomInt(height);\n\n    dab(x, y, 30, random(palette), i);\n  }\n\n  mainImage.updatePixels();\n\n  noSmooth();\n  image(mainImage, 0, 0, width, height);\n}\n\nfunction dab(x, y, r = 10, c = [255, 255, 255, 255], seed = 0) {\n  for (let xx = x - r; xx < x + r; xx++) {\n    for (let yy = y - r; yy < y + r; yy++) {\n      // make a stipplely little circle\n      const d = dist(xx, yy, x, y);\n      const threshold = map(d, 0, r, 1, 0);\n      if (random() < threshold) {\n        // const n = map(noise(xx * 0.1, yy * 0.1, seed), 0, 1, 0.1, 0.5);\n        // let cc = blendColor(c, [0, 0, 0, 0], n);\n        // cc = blendColor(cc, [255, 255, 255, 255], map(yy, y - r, y + r, 0, 1));\n        setPixel(mainImage, xx, yy, c);\n      }\n    }\n  }\n}\n\n// math utils\n\nfunction clamp(value, minimum, maximum) {\n  if (value < minimum) return minimum;\n  if (value > maximum) return maximum;\n  return value;\n}\n\nfunction randomInt(a, b) {\n  return floor(random(a, b));\n}\n\nfunction noiseInt(x, y, z, a, b) {\n  noiseDetail(1);\n  return floor(map(noise(x, y, z), 0, 0.5, a, b));\n}\n\n// color utils\n\nfunction blendColor(a, b, mix) {\n  return [\n    lerp(a[0], b[0], mix),\n    lerp(a[1], b[1], mix),\n    lerp(a[2], b[2], mix),\n    lerp(a[3], b[3], mix),\n  ];\n}\n\nfunction lightestColor(a, b) {\n  return [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2]), max(a[3], b[3])];\n}\n\nfunction setPixel(img, x, y, color) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return;\n  }\n\n  const i = (clampY * img.width + clampX) * 4;\n  img.pixels[i] = color[0];\n  img.pixels[i + 1] = color[1];\n  img.pixels[i + 2] = color[2];\n  img.pixels[i + 3] = color[3];\n}\n\nfunction getPixel(img, x, y) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return [0, 0, 0, 0];\n  }\n  const i = (clampY * img.width + clampX) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction keyPressed() {\n  if (key === \"S\") {\n    save(\"canvas.jpg\");\n  }\n}",
    "comments": []
  },
  {
    "_id": "j5a6qHmqpFG2kkxCy",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T11:54:13.703Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fbe444bb989157d3f043d30a79d491e8",
        "public_id": "avalanche2023spring/ar3xkue36lldtih7weby",
        "version": 1681473333,
        "version_id": "88b422c0b0e921edb187693087d96d94",
        "signature": "9f8535b487e2f3ee8b9c8f49282f30d98406d835",
        "width": 952,
        "height": 856,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T11:55:33Z",
        "tags": [],
        "pages": 0,
        "bytes": 2075414,
        "type": "upload",
        "etag": "6d1e7b785ad6be3a3a40b6a1e9b7e66e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681473333/avalanche2023spring/ar3xkue36lldtih7weby.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681473333/avalanche2023spring/ar3xkue36lldtih7weby.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681473333/avalanche2023spring/ar3xkue36lldtih7weby.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "696216",
          "dar": "119:107",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 734118,
        "duration": 22.616667,
        "rotation": 0,
        "nb_frames": 1359,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Tried to use Tracery to generate inventions, using the sketch from the chapter as a base. Could'nt figure it out properly before running out of time.",
    "code": "// require /text/tracery.min.js\n\nconst inventionGrammar = {\ninvention: [\n\"A #product# that #problem# by #solution#.\",\n\"An innovative #product# that #problem# through #solution#.\",\n\"Introducing the #product#, the perfect solution to #problem# with #solution#.\",\n],\nproduct: [\"#adjective# #noun#\"],\nproblem: [\"#issue.a# #problem_desc#\"],\nsolution: [\n\"#verb# #object#\",\n\"#verb# #object# and #verb# #object#\",\n\"#verb# #object#, #object#, and #object#\",\n],\nissue: [\"concerning\", \"relating to\"],\nproblem_desc: [\n\"difficulty in #problem_verb#\",\n\"the problem of #problem_verb#\",\n\"the challenge of #problem_verb#\",\n],\nverb: [\"solves\", \"eliminates\", \"removes\", \"overcomes\"],\nobject: [\"#adjective# #object_noun#\", \"#object_noun#\"],\nadjective: [\n\"smart\",\n\"efficient\",\n\"portable\",\n\"sleek\",\n\"versatile\",\n\"affordable\",\n],\nobject_noun: [\n\"device\",\n\"tool\",\n\"gadget\",\n\"machine\",\n\"appliance\",\n\"instrument\",\n],\nnoun: [\n\"translator\",\n\"headset\",\n\"watch\",\n\"scanner\",\n\"printer\",\n\"camera\",\n\"drone\",\n],\nproblem_verb: [\n\"translating languages\",\n\"organizing files\",\n\"printing documents\",\n\"managing time\",\n\"finding lost items\",\n\"staying connected\",\n],\n};\n\nfunction main() {\nconst grammar = tracery.createGrammar(inventionGrammar);\nconst invention = grammar.flatten(\"#invention#\");\ndisplay(invention);\n}\n\nfunction display(...strings) {\nconst div = document.createElement(\"div\");\ndiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\ndiv.innerText = strings.join(\"\\n\");\ndocument.body.append(div);\n}\n\n// tracery doesn't load immediately, not sure why, so kludge it\nsetTimeout(main, 10);",
    "comments": []
  },
  {
    "_id": "j8zQgLufe3y4CKQGY",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-22T15:20:54.191Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "603856ffe89b5bc2b366ef11c64f3e8a",
        "public_id": "avalanche2023spring/hvgt0ojiw37jptoe6ucy",
        "version": 1677079263,
        "version_id": "5c1ea95a8738cbe9b12f9a1b41280a3d",
        "signature": "1abc0709d5db984d4414ed21c59edbaa30b9b0f2",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-22T15:21:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 4422656,
        "type": "upload",
        "etag": "7f196589f17e1cc85530b50fbaa2a65a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677079263/avalanche2023spring/hvgt0ojiw37jptoe6ucy.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677079263/avalanche2023spring/hvgt0ojiw37jptoe6ucy.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677079263/avalanche2023spring/hvgt0ojiw37jptoe6ucy.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192066",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "2996265",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 3182053,
        "duration": 11.071995,
        "rotation": 0,
        "nb_frames": 332,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T03:06:03.455Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:22:36.898Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T16:15:37.489Z" }
      }
    ],
    "title": "",
    "description": "I wanted to make an illusion based animation using sine waves, so I referred to a tutorial for this sketch.",
    "inspiration_name": "Sine wave generator",
    "inspiration_url": "https://www.youtube.com/watch?v=vmhRlDyPHMQ&ab_channel=ColorfulCoding",
    "comments": []
  },
  {
    "_id": "jHWt6StsfCDrhT8pZ",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T05:57:50.596Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "91e42c6c0622f7a71ea5a54208c5964d",
        "public_id": "avalanche2023spring/vjawilhbnycbtwkeh2ta",
        "version": 1680847239,
        "version_id": "33a4a0bc21e06cff5190e6aadb11c4a5",
        "signature": "903f70f03fb55dd145a8418381aaba9ec759173f",
        "width": 1242,
        "height": 882,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T06:00:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 792490,
        "type": "upload",
        "etag": "132cd095784f340203203aa4764d4324",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680847239/avalanche2023spring/vjawilhbnycbtwkeh2ta.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680847239/avalanche2023spring/vjawilhbnycbtwkeh2ta.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680847239/avalanche2023spring/vjawilhbnycbtwkeh2ta.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "201852",
          "dar": "69:49",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 231806,
        "duration": 27.35,
        "rotation": 0,
        "nb_frames": 1639,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T07:33:56.612Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T12:08:28.323Z" }
      }
    ],
    "title": "",
    "description": "This is based on the idea I had for my \"Autobiographical Game\" assignment from CC Lab last semester. Since I was not able to work on it much at all because of the strike, I tried to make a very low-fidelity and hacky version of it here.",
    "code": "https://editor.p5js.org/dasi496/sketches/9H7WKh5pY",
    "comments": []
  },
  {
    "_id": "jJ9QrmtYF3B2P2jbL",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-01T05:45:01.295Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cd51028728584f8678a21bcde49b378e",
        "public_id": "avalanche2023spring/qbkvlgwcu91728nxn1je",
        "version": 1677649577,
        "version_id": "0b226c8bbefd144d5298eb8f07b4f969",
        "signature": "aa68d01db25d6ace6d7e25c066e72501895d98a9",
        "width": 784,
        "height": 794,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-01T05:46:17Z",
        "tags": [],
        "bytes": 74930,
        "type": "upload",
        "etag": "cdd50266675000e4accb8d397883a0dc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677649577/avalanche2023spring/qbkvlgwcu91728nxn1je.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677649577/avalanche2023spring/qbkvlgwcu91728nxn1je.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-03-01T05:48:38.546Z" }
      }
    ],
    "title": "",
    "description": "Challenge 1 Attempt",
    "code": "function setup() {\n  createCanvas(400, 400);\n  colorMode(HSB); // setting color mode to HSB\n}\n\nfunction draw() {\n  background(50, 0, 10);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 100; i++) {\n    // using randomGaussian() to concentrate the ellipses towards the center\n    let x = randomGaussian(width/2, 70);\n    let y = randomGaussian(height/2, 50);\n\n    // varying the diameter\n    let diameter = random(5, 25);\n\n    // generating a random hue value\n    let hue = random(0, 360);\n  \n    // using the random hue value and fixed saturation and brightness values to create a colorful ellipse\n    fill(hue, 80, 80);\n\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "jdFSd3JBMJXgACyC4",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T04:26:51.087Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3e0baa0b695c3716385ea47c851efe19",
        "public_id": "avalanche2023spring/oh4y5vouuk0nrnrgbpaa",
        "version": 1683260826,
        "version_id": "2560ce679b2d0f4ca58716e31e6c21f7",
        "signature": "013249a1859ebb797e0ef7e67967c1642918d247",
        "width": 478,
        "height": 1174,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T04:27:06Z",
        "tags": [],
        "bytes": 64059,
        "type": "upload",
        "etag": "73936f57c850a4b7be8d665814ae19bb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683260826/avalanche2023spring/oh4y5vouuk0nrnrgbpaa.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683260826/avalanche2023spring/oh4y5vouuk0nrnrgbpaa.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f740c4b1a07c9ed70fd5fc24ac2b7d1a",
        "public_id": "avalanche2023spring/t1zjejuqujel3q5swakn",
        "version": 1683260832,
        "version_id": "bce87ca0c21868e8d1447c217baffb20",
        "signature": "6e7bd336d3e580d22dc2ff542e540a73c92e3165",
        "width": 766,
        "height": 946,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T04:27:12Z",
        "tags": [],
        "bytes": 62532,
        "type": "upload",
        "etag": "e0525d316964567e0b40d0f49777cae6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683260832/avalanche2023spring/t1zjejuqujel3q5swakn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683260832/avalanche2023spring/t1zjejuqujel3q5swakn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T04:31:45.897Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T10:11:10.01Z" }
      }
    ],
    "title": "",
    "description": "Focused on building the turret and other details of this castle tower",
    "comments": []
  },
  {
    "_id": "jduZAh7sWKgozCdq8",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T03:33:31.007Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "965b73118d8688666062ac00fced0e4f",
        "public_id": "avalanche2023spring/r2qvvznxi1xsamwcglvq",
        "version": 1677209907,
        "version_id": "83a5749beaf775caee42b7b6f161dc8f",
        "signature": "7d756c3fa6b00ff9a03a33c5f10094f58b0f2254",
        "width": 1200,
        "height": 1198,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T03:38:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 3035065,
        "type": "upload",
        "etag": "c98c9d80983cb7d014e0d5a0e7e9ccff",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677209907/avalanche2023spring/r2qvvznxi1xsamwcglvq.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677209907/avalanche2023spring/r2qvvznxi1xsamwcglvq.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677209907/avalanche2023spring/r2qvvznxi1xsamwcglvq.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125582",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "523271",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 968637,
        "duration": 25.066667,
        "rotation": 0,
        "nb_frames": 1565,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bd3efb3cc08ef6776fc97adbbce82290",
        "public_id": "avalanche2023spring/gejgqnm5iyqiki2wyhtg",
        "version": 1677209915,
        "version_id": "ba79a61a4f8d8cf1d9fb9687c089d422",
        "signature": "79f1b97b808dc76ce0a36226a078b11037cf95d0",
        "width": 1214,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T03:38:35Z",
        "tags": [],
        "bytes": 140549,
        "type": "upload",
        "etag": "a4d7ff646c96e74cd296897939e2d340",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677209915/avalanche2023spring/gejgqnm5iyqiki2wyhtg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677209915/avalanche2023spring/gejgqnm5iyqiki2wyhtg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5ad1852f89eec0f1d0ce008e377e676e",
        "public_id": "avalanche2023spring/e7zsc4yjcipkuviopqlc",
        "version": 1677209931,
        "version_id": "12547496e7575631d020bfef6e56ab49",
        "signature": "744058eecd850768fd0ff308165ee6ea113fc83f",
        "width": 1214,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T03:38:51Z",
        "tags": [],
        "bytes": 100344,
        "type": "upload",
        "etag": "8cfaa1f6bab4f2fd1750a8a0e12f54a9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677209931/avalanche2023spring/e7zsc4yjcipkuviopqlc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677209931/avalanche2023spring/e7zsc4yjcipkuviopqlc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T03:51:50.828Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:44.32Z" }
      }
    ],
    "title": "",
    "description": "**Tinkerbell Map:** a 2D chaotic map involving four control parameters. I happened to come across it on IG and have been trying to understand what chaos maps are.\n\n\"The chaos theory emerged from the observation that very simple dynamical systems can have complicated behaviors. A famous example is the Tinkerbell map, whose iteration gives rise to the beautiful strange attractor, simply computed by iterating the map with initial condition (−0.5, −0.5) using double precision computations).\" *(Goldsztejn, Hayes, Collins 2011)*",
    "inspiration_name": "Tinkerbell Map on Chaotic Forms",
    "inspiration_url": "https://www.chaoticforms.com/",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Points: 2000,\n  A1: 1.02, //-1.57 to 1.03\n  A2: -0.66, // -0.66 to -0.26\n  B1: 2.1, //2.11 to -0.05\n  B2: 0.27 // to -0.5\n}\n\n//pane.addInput(params, \"Points\", { min: 100, max: 5000 });\npane.addInput(params, \"A1\", { min: -1.55, max: 1.02 });\npane.addInput(params, \"A2\", { min: -0.66, max: -0.26 });\npane.addInput(params, \"B1\", { min: -0.05, max: 2.1 });\npane.addInput(params, \"B2\", { min: -0.5, max: 0.27 });\n\nlet x = -0.5; \nlet y = -0.5;\n\nfunction setup() {\n  createCanvas(600, 600);\n  hue = floor(random(255));\n  strokeWeight(0.015);\n  stroke(\"red\");\n  \n  //noLoop();\n}\n\nfunction draw() {\n  background(0);\n  translate(width/1.7, height/1.7);\n  scale(200);\n  \n  for (let i =0, x=0.1, y=0.1; i<params.Points; i++) {\n    point(x, y);\n    let tempX = x*x - y*y + params.A1*x + params.A2*y;\n    let tempY = 2*x*y + params.B1*x + params.B2*y;\n    x = tempX;\n    y = tempY;\n    \n    // xₙ₊₁ = xₙ² - yₙ² + 1.02xₙ - 0.66yₙ\n    // yₙ₊₁ = 2xₙyₙ + 2.1xₙ + 0.27yₙ\n  }\n}",
    "comments": [
      {
        "commenter_id": "eeksZiGaSD3xMNF54",
        "comment": "Very thoughtul!",
        "created_at": { "$date": "2023-02-24T17:35:14.969Z" }
      },
      {
        "commenter_id": "me69bqQXDu4jtokwu",
        "comment": "so cool!",
        "created_at": { "$date": "2023-02-24T20:21:13.272Z" }
      }
    ]
  },
  {
    "_id": "jmDxDCa2sq3K4ZBv3",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T03:35:57.621Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "266e12d9c25f7db38b56f4504b3033e2",
        "public_id": "avalanche2023spring/uyuwejbk7ikcrbygfxyu",
        "version": 1678332962,
        "version_id": "fa4bc1b346a8839a948101f9d8a79b7a",
        "signature": "11426600eb766d564314b871720f27d8ec19dbe8",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T03:36:02Z",
        "tags": [],
        "bytes": 52264,
        "type": "upload",
        "etag": "4a85dfe0b5b239d7cafde3387426f272",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678332962/avalanche2023spring/uyuwejbk7ikcrbygfxyu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678332962/avalanche2023spring/uyuwejbk7ikcrbygfxyu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T18:59:54.401Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:29.672Z" }
      }
    ],
    "title": "",
    "description": "Here's the image that I made for Ishaan for the pair sketch. I was exploring the mathematical weirdness of trig functions. Cool textile-esque pattern 👍",
    "code": "function getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  pixelDensity(1);\n  noLoop();\n  noSmooth();\n}\n\nfunction draw() {\n  background(200);\n  noSmooth();\n  let img = createImage(80, 80);\n  img.loadPixels();\n  \n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n      \n      let r = noise(sin(x) ,sin(y) )*10 +100;\n      let g = noise(sin(y) ,sin(x) )*200 +50;\n      let b = noise(sin(x/y) ,sin(y/x) )*200 +10;\n\n      let bkg = color(50,50,50)\n      if ( tan((x%y)*9) < 1 && sin((y%x)*90) < 0.5) {\n        img.set( x, y, color(r,g,b));\n      } else {\n        img.set( x, y, bkg)\n      }\n      \n    }\n    \n  }\n  \n  img.updatePixels();\n  \n  image(img, 0, 0, width, height)\n}",
    "comments": []
  },
  {
    "_id": "jrCdBs4MXxTCz4k59",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T00:50:36.944Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "55318d9bf84110514200505785044ae5",
        "public_id": "avalanche2023spring/rskghhoqfw8wckprnt6q",
        "version": 1676508657,
        "version_id": "574897fd308ed552826cb06ec6e596aa",
        "signature": "6c6cc6a2b1b813edae15c07c05ec2eefb8fed1db",
        "width": 1196,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T00:50:57Z",
        "tags": [],
        "bytes": 1801762,
        "type": "upload",
        "etag": "c87822c12106c0c5488f9363b2ed329d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676508657/avalanche2023spring/rskghhoqfw8wckprnt6q.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676508657/avalanche2023spring/rskghhoqfw8wckprnt6q.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T01:33:14.086Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T15:20:02.859Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge: Closest I got to recreating Rama's sketch before time ran out.",
    "comments": []
  },
  {
    "_id": "jrnGRgPoHNLvgMA5D",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T02:19:36.648Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "576d7be1ffbcf363b022c7e1bb0ac4eb",
        "public_id": "avalanche2023spring/vnhhjcdhlzvln65kqbfi",
        "version": 1680747661,
        "version_id": "53756eae6b8b46c45f1b6e73ed1836e1",
        "signature": "6ff169c5259e06976ea44c9b3021700df7199a9d",
        "width": 372,
        "height": 366,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-06T02:21:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 4235023,
        "type": "upload",
        "etag": "1674da7f87b60ef9c2b6454ed070371b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680747661/avalanche2023spring/vnhhjcdhlzvln65kqbfi.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680747661/avalanche2023spring/vnhhjcdhlzvln65kqbfi.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680747661/avalanche2023spring/vnhhjcdhlzvln65kqbfi.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "2039554",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 2040974,
        "duration": 16.6,
        "rotation": 0,
        "nb_frames": 499,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T02:39:46.698Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:06:12.486Z" }
      }
    ],
    "title": "",
    "description": "I definitely need to learn more. I do not know How I made this bursting rectangle sketch. My first attempt at p5 play",
    "code": "// let x;\n// let y;\n// let speed;\n\n// let rect1;\n// let rect2;\n// let rect3;\n// let rect4;\n\n\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n//   box = createSprite(20, 20);\n  \n//   x = 10;\n//   y = 10;\n//   let speed = 3;\n  \n// }\n\n// function draw() {\n//   background(220);\n  \n// //   rect(x, y, 20, 20);\n  \n//   rect1 = rect(0, 0, width, 10);\n//   rect2 = rect(0, 0, 10, height);\n//   rect3 = rect(0, 390, width, 10);\n//   rect4 = rect(390, 0, 10, height);\n  \n// //   x = x + 1;\n// //   y = y + 1;\n\n  \n// x.position\n// y.position\n\n\n//   if(rect.collide(rect1)) {\n//     x = x - 1;\n//   }\n }\n\nlet spr;\nfunction setup() {\n  createCanvas(400, 400);\n\n\n\n\n  background(50);\n\n}\nfunction draw() {\n  background(50);\n  \n    spr = createSprite(width/2, height/2,\n    40, 40);\n  spr.color = color(255);\n  spr.velocity.y = 0;\n\ndrawSprite ( spr );\n\n  if (spr.position.y >= height) {\n    spr.velocity.y *= -1;\n    // set to height to prevent \"tunneling\"\n    spr.position.y = height;\n  }\n  // constant downward speed\n  // (i.e., gravity)\n  spr.addSpeed(0.25, 90);\n  \n}\nfunction mousePressed() {\n  spr.position.y = mouseY;\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love how this feels!",
        "created_at": { "$date": "2023-04-07T02:39:58.286Z" }
      }
    ]
  },
  {
    "_id": "jsLnSsFsJB7dHetqm",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T18:09:35.579Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3303f16e3d7e82e496faa3c9362a16ce",
        "public_id": "avalanche2023spring/t79lvp0vazuiqrvfvase",
        "version": 1677175906,
        "version_id": "b99ce619af942fa706e24cc801bcf27e",
        "signature": "33e68b9ed140bfd1823ec628f9c84e6100715c5f",
        "width": 790,
        "height": 782,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T18:11:46Z",
        "tags": [],
        "bytes": 30619,
        "type": "upload",
        "etag": "ac7027790d1a204cedaedc2cd7d20624",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677175906/avalanche2023spring/t79lvp0vazuiqrvfvase.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677175906/avalanche2023spring/t79lvp0vazuiqrvfvase.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d39feada86a4929f7d901df2a4f706c8",
        "public_id": "avalanche2023spring/xdpg4asm9hfvudcnvxhm",
        "version": 1677175908,
        "version_id": "3631aeafaefe28d048982ebf6ef0cab0",
        "signature": "a69616ba1d69077c494ea05e4c70c83c0c427a87",
        "width": 792,
        "height": 786,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T18:11:48Z",
        "tags": [],
        "bytes": 31164,
        "type": "upload",
        "etag": "bf7fb84c8881d65edc5775512fb0a171",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677175908/avalanche2023spring/xdpg4asm9hfvudcnvxhm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677175908/avalanche2023spring/xdpg4asm9hfvudcnvxhm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a3efc5fe05919731825093fa83c7bce1",
        "public_id": "avalanche2023spring/wa4derclxph9whfx2tor",
        "version": 1677175911,
        "version_id": "a559d6b61022b7add8dca8630e5dde6e",
        "signature": "b0e82d6e186b2fd7e14e88aef6d5c6dcddcd3c3e",
        "width": 788,
        "height": 788,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T18:11:51Z",
        "tags": [],
        "bytes": 30622,
        "type": "upload",
        "etag": "b26f3ea71e23027f1bea87eae5460cf2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677175911/avalanche2023spring/wa4derclxph9whfx2tor.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677175911/avalanche2023spring/wa4derclxph9whfx2tor.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T00:24:31.342Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:51:22.523Z" }
      }
    ],
    "title": "",
    "description": "WEEK 4 (3/4): I used eyes and lips parameters for the text of the faces which are from a Japanese emoji website. This is so cute.",
    "code": "function setup() {\n  createCanvas(400, 400);\n  strokeWeight(0.5);\n  //Centers text in the textbox ( textbox is determined in the text perameters)\n  textAlign(CENTER, CENTER);\n  \n  //eyes\n  createP(\"Eyes\");\n  eyeslider = createSlider( 0 , 5 , 0);\n\n\n\n  //lips\n  createP(\"Lips\");\n  lipslider = createSlider( 0 , 5 , 0);\n\n}\n\n\nfunction draw() {\n  background(225);\n  \n  let eye = eyeslider.value();\n  let lip = lipslider.value();\n  \n  //the face\n  textSize(100);\n  text('(      )', 50, 30, 300, 300);\n  \n  \n  //the face values changed by parameters\n  eye = [\"・ ・ \", \" ●´ `● \", \" =① ①= \", \" ✦  ✦ \", \"  •  • \"]\n  lip = [\" ⊝ \", \" ⌓ \", \" ω \", \" ‿ \", \" _ \"]\n  \n  textSize(60);\n  text(eye[int(eyeslider.value())], 50, 30, 300, 300);\n  text(lip[int(lipslider.value())], 50, 30, 300, 310);\n}",
    "comments": []
  },
  {
    "_id": "jtYxrz5K8hnqk5tqF",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T07:40:09.437Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "61ae57ddfed128e98056f7ec4f3cbc5c",
        "public_id": "avalanche2023spring/hjoh73kmpz9emakejqxt",
        "version": 1678347622,
        "version_id": "39656a97f9e8e2a7edcd8c5180cf1407",
        "signature": "e5b0fa8c96112a37c10cca6813658025ba608f7b",
        "width": 827,
        "height": 827,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T07:40:22Z",
        "tags": [],
        "bytes": 549484,
        "type": "upload",
        "etag": "700fb01033fd043fd17aa772bd181258",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678347622/avalanche2023spring/hjoh73kmpz9emakejqxt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678347622/avalanche2023spring/hjoh73kmpz9emakejqxt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b482e6d0890b3ad42b2ca9a803b1423f",
        "public_id": "avalanche2023spring/kkkizjwer8aqm3ulna79",
        "version": 1678347628,
        "version_id": "7bc85da399959b54708f87dc459c33df",
        "signature": "e8d4f68b9ea0a5ca7a871d9e847d30455ca87466",
        "width": 827,
        "height": 827,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T07:40:28Z",
        "tags": [],
        "bytes": 544279,
        "type": "upload",
        "etag": "8f3ca1b1259bc4cb853417cdcd100872",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678347628/avalanche2023spring/kkkizjwer8aqm3ulna79.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678347628/avalanche2023spring/kkkizjwer8aqm3ulna79.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "de3486002059495eb4bad599cbfed926",
        "public_id": "avalanche2023spring/evsp3kqoxf1fnjkubao1",
        "version": 1678347634,
        "version_id": "8e2f296e44eaef53c6d4e146c73a02c6",
        "signature": "21195541c647c7b5666a12637570b642f11e8d56",
        "width": 827,
        "height": 827,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T07:40:34Z",
        "tags": [],
        "bytes": 548139,
        "type": "upload",
        "etag": "1c5016ec1d9d517dc1e9a76d02ab3cce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678347634/avalanche2023spring/evsp3kqoxf1fnjkubao1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678347634/avalanche2023spring/evsp3kqoxf1fnjkubao1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T18:59:52.294Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:35.912Z" }
      }
    ],
    "title": "",
    "description": "Redo of the last sketch, but with getQuick() instead of get(): 1st, 3rd, and 7th regenerations. Still needed to reduce image size, but otherwise it worked about twice as fast as get(). Also reversed the size relationship - the image gets darker and darker with regenerations.",
    "code": "let img;\nlet alphabet = [\"t\", \"u\", \"l\", \"i\", \"p\", \"s\"];\n\nfunction preload() {\n  img = loadImage(\"flowers4.jpg\");\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  background(0);\n\n  // image(img, 0, 0);\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      // let imgcolor = img.get(x, y);\n      let imgcolor = getQuick(img, x, y);\n      console.log(imgcolor);\n\n      let size = map(imgcolor[0], 0, 255, 75, 0);\n      let sp = width/img.width;\n      textSize(size);\n      fill(imgcolor[0], imgcolor[1], imgcolor[2], imgcolor[3],);\n      text(alphabet[floor(random(alphabet.length))], x*sp+sp*0.5, y*sp+sp*0.5)\n    }\n  }\n\n  // noSmooth();\n  updatePixels();\n  // noLoop();\n}\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}",
    "comments": []
  },
  {
    "_id": "juuKTc8vS8EhLAMco",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-13T07:07:18.573Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5adc2d5d353a61fd3ddde1373f375ea6",
        "public_id": "avalanche2023spring/zjw0ptu6aepgp3vowjfu",
        "version": 1676273884,
        "version_id": "f046f0a95a645a96c377c62ece1ec38f",
        "signature": "72193cd562f22661944ce84d9bd2c6972de2f6db",
        "width": 1200,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-13T07:38:04Z",
        "tags": [],
        "bytes": 1600704,
        "type": "upload",
        "etag": "0861fa854cf16d68838326e8d47f2625",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676273884/avalanche2023spring/zjw0ptu6aepgp3vowjfu.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676273884/avalanche2023spring/zjw0ptu6aepgp3vowjfu.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9268e0686ee913c281dbbc5297fd8942",
        "public_id": "avalanche2023spring/sikgxoxnitidej9yvquc",
        "version": 1676273899,
        "version_id": "536a21334aa42a9af4a7bad4b75b0763",
        "signature": "1eafc6f1340d3a3925e73f8f5639577528ed97e0",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-13T07:38:19Z",
        "tags": [],
        "bytes": 1667506,
        "type": "upload",
        "etag": "b35f12760f93e296728bb01a5b341893",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676273899/avalanche2023spring/sikgxoxnitidej9yvquc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676273899/avalanche2023spring/sikgxoxnitidej9yvquc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7d06498bd740c38087410fc790b70233",
        "public_id": "avalanche2023spring/bdzrvl6catu5qoyqx0nf",
        "version": 1676273908,
        "version_id": "9466c6c759266661b6a2b2fa8da67169",
        "signature": "2530f261c895cf1d470d5c9ffdcdb5b64b55f092",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-13T07:38:28Z",
        "tags": [],
        "bytes": 1985900,
        "type": "upload",
        "etag": "aaf3a17eeb54d82a163d16cc1e281fc6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676273908/avalanche2023spring/bdzrvl6catu5qoyqx0nf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676273908/avalanche2023spring/bdzrvl6catu5qoyqx0nf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-13T14:52:38.345Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-13T20:18:10.626Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:44:07.96Z" }
      }
    ],
    "title": "",
    "description": "Visualizing Noise and the flowy/smooth/aesthetic traits typically associated with it through Photoshop before coding with the function itself. @ruido's tutorial very accurately depict what I imagined noise()'s form to be like if I were to translate it from its chapter's descriptions and other tutorials.",
    "inspiration_name": "Jesus Llancare a.k.a @ruido98",
    "inspiration_url": "https://www.instagram.com/reel/CoDmhTULMbG/?igshid=MDJmNzVkMjY%3D",
    "comments": []
  },
  {
    "_id": "jwSfe2pZzkXksNCvw",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T05:43:22.498Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "07ce438b267116a1c37e292d1f78ae3b",
        "public_id": "avalanche2023spring/jy2ujmgury2axfndtjd6",
        "version": 1682055995,
        "version_id": "1ea4d79f4a8e91ce664620a625304fe7",
        "signature": "99fc05d7c02494b8732f31068ef732498965ee37",
        "width": 17236,
        "height": 6983,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T05:46:35Z",
        "tags": [],
        "bytes": 2382231,
        "type": "upload",
        "etag": "bc6dd268a4c85b859090c34bfc310ead",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682055995/avalanche2023spring/jy2ujmgury2axfndtjd6.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682055995/avalanche2023spring/jy2ujmgury2axfndtjd6.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T06:35:59.73Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T12:42:33.023Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:42:49.69Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "nerdy",
        "created_at": { "$date": "2023-04-21T15:01:28.976Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T15:01:30.173Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:06:49.136Z" }
      }
    ],
    "title": "",
    "description": "Fractal generator but kept feeding it shapes!!!! Beautiful results\n\nhttps://aiartists.org/fractal-art-generators",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "Love the colors!!!!",
        "created_at": { "$date": "2023-04-21T06:36:09.423Z" }
      }
    ]
  },
  {
    "_id": "jyfzvbHiAms5A3a2J",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T03:06:23.239Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e07d7d246a51011fd1ebb2b16d1c7c09",
        "public_id": "avalanche2023spring/n9t5qpznygcehtq14nz5",
        "version": 1682046420,
        "version_id": "783e076fbb2e117ab67132a719345ba6",
        "signature": "58aa3bb9d8483a628bf95ed4432e2e04cbd98ef2",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T03:07:00Z",
        "tags": [],
        "bytes": 524482,
        "type": "upload",
        "etag": "f3dd1db67b4f656bf01d2ef3912f8f42",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682046420/avalanche2023spring/n9t5qpznygcehtq14nz5.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682046420/avalanche2023spring/n9t5qpznygcehtq14nz5.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "47368775c315cf2a8f8c9678cdf11ff0",
        "public_id": "avalanche2023spring/ecsujrnwfyfkbftoeo3y",
        "version": 1682046423,
        "version_id": "7eac37d518c81bdc20ddb2853717f95c",
        "signature": "6920e55fa42318f83dc0a1f24802b61b9d10c2a8",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T03:07:03Z",
        "tags": [],
        "bytes": 1178837,
        "type": "upload",
        "etag": "9519fa9958bcce5abe7588a1e7bd7d5d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682046423/avalanche2023spring/ecsujrnwfyfkbftoeo3y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682046423/avalanche2023spring/ecsujrnwfyfkbftoeo3y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3535d08ddd4b76f606a75a33c94a0d1f",
        "public_id": "avalanche2023spring/lmyemyujnn5vde9tmgcu",
        "version": 1682046427,
        "version_id": "a793081b8f5817a2341084c7a5a1e93a",
        "signature": "f78832e096f3ebc178763e9c7df65a6357b4ee70",
        "width": 920,
        "height": 1396,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T03:07:07Z",
        "tags": [],
        "bytes": 1163183,
        "type": "upload",
        "etag": "b44cdcde5b431d116a4577225cad9014",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682046427/avalanche2023spring/lmyemyujnn5vde9tmgcu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682046427/avalanche2023spring/lmyemyujnn5vde9tmgcu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:17:15.637Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:20:00.195Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:02:16.755Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:36:31.807Z" }
      }
    ],
    "title": "",
    "description": "I spent more time working with Midjourney. It's insane. I asked it to draw an illustration of my childhood stuffed animal (lol). I used a real image of the stuffed animal as an input (see last image - this is an actual photo) and gave instructions on what to draw. The first results were sooo creepy (second image). I kept giving Midjourney more detailed instructions, I blended some of the output images together, and re-uploaded images that midjourney created to see how the results would change. I think the final result (first image) is pretty cute though 🥺",
    "comments": []
  },
  {
    "_id": "k4S4dXb6MYBaZY8hA",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T22:02:56.552Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2335e3837382f9e6589aa66b03ae3b2c",
        "public_id": "avalanche2023spring/atrda6do9vykogof3dr2",
        "version": 1678485949,
        "version_id": "9dec83a0a4e8bf470e65531ef03ad5c8",
        "signature": "752408b5208488807e536663f90500773e9836fe",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T22:05:49Z",
        "tags": [],
        "bytes": 5410317,
        "type": "upload",
        "etag": "27721f479eb7733ea47ca89c0f001d8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678485949/avalanche2023spring/atrda6do9vykogof3dr2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678485949/avalanche2023spring/atrda6do9vykogof3dr2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Pair Challenge sketch based on Alex's image",
    "code": "let img;\nlet glitchImg;\n\nfunction preload() {\n  img = loadImage('Pixel_Week_Pair.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  image(img, 0, 0);\n  \n  // Get pixel values\n  loadPixels();\n  \n  // Apply glitch effect\n  glitchImg = createImage(img.width, img.height);\n  glitchImg.loadPixels();\n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n      let index = (x + y * img.width) * 4;\n      let glitchIndex = (x + y * glitchImg.width) * 4;\n      \n      // Add random noise to red, green and blue channels\n      let r = pixels[index] + random(0, 10);\n      let g = pixels[index + 0] + random(10, 10);\n      let b = pixels[index + 2] + random(10, 10);\n      \n      // Add a \"glitch\" effect by swapping color channels at random\n      let glitchType = random();\n      if (glitchType < 0.2) { // Swap red and green\n        glitchImg.pixels[glitchIndex] = g;\n        glitchImg.pixels[glitchIndex + 1] = r;\n        glitchImg.pixels[glitchIndex + 2] = b;\n      } else if (glitchType < 0.4) { // Swap red and blue\n        glitchImg.pixels[glitchIndex] = b;\n        glitchImg.pixels[glitchIndex + 1] = g;\n        glitchImg.pixels[glitchIndex + 2] = r;\n      } else if (glitchType < 0.6) { // Swap green and blue\n        glitchImg.pixels[glitchIndex] = r;\n        glitchImg.pixels[glitchIndex + 1] = b;\n        glitchImg.pixels[glitchIndex + 2] = g;\n      } else if (glitchType < 0.8) { // Invert colors\n        glitchImg.pixels[glitchIndex] = 255 - r;\n        glitchImg.pixels[glitchIndex + 1] = 255 - g;\n        glitchImg.pixels[glitchIndex + 2] = 255 - b;\n      } else { // No glitch effect, keep original colors\n        glitchImg.pixels[glitchIndex] = r;\n        glitchImg.pixels[glitchIndex + 1] = g;\n        glitchImg.pixels[glitchIndex + 2] = b;\n      }\n      \n      glitchImg.pixels[glitchIndex + 3] = pixels[index + 3];\n    }\n  }\n  \n  // Update glitch image pixels\n  glitchImg.updatePixels();\n  image(glitchImg, 0, 0);\n}",
    "comments": []
  },
  {
    "_id": "kBkNZvNQPSkW3ocf9",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T08:26:15.698Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "821453f47cbdfb395cdc7ba08e2bd553",
        "public_id": "avalanche2023spring/elnsil8jj7eqad3txz4c",
        "version": 1676449613,
        "version_id": "73d168fd7e0c0c5ff2c0b1dca1b3b168",
        "signature": "410f870d6fd956c29a45dacd629090ba759a1494",
        "width": 1140,
        "height": 1094,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T08:26:53Z",
        "tags": [],
        "bytes": 408001,
        "type": "upload",
        "etag": "b9c8d8d03db93d8eba0c810b96b01e03",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676449613/avalanche2023spring/elnsil8jj7eqad3txz4c.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676449613/avalanche2023spring/elnsil8jj7eqad3txz4c.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d8b270ddfa00548b4c6f57caaec265c1",
        "public_id": "avalanche2023spring/ry2c0t2zqrhskc0fyueo",
        "version": 1676449619,
        "version_id": "a49a111ef710fd1312b0fa1f2f36f846",
        "signature": "bb8a1253e0db3de92bcbf281fce436405f37ceec",
        "width": 1188,
        "height": 1186,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T08:26:59Z",
        "tags": [],
        "bytes": 496271,
        "type": "upload",
        "etag": "52888a40aaaa17f5915605848ede8ac6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676449619/avalanche2023spring/ry2c0t2zqrhskc0fyueo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676449619/avalanche2023spring/ry2c0t2zqrhskc0fyueo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T17:18:44.632Z" }
      }
    ],
    "title": "",
    "description": "Redoing last week's sketch with the in-class feedback in mind. Does noise() make it look better than random()?",
    "code": "//require https://cdnjs.cloudfare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfloat t = 0;\nfloat l = 1;\nvoid setup(){\n  size(600,600);\n  background(0);\n    //noStroke();\n}\n\nvoid draw(){\n  float x = noise(t);\n  float y = noise(l);\n  t = t+0.05;\n  l = l+0.05;\n  x = map(x,0,1,0, width);\n  y = map(y,0,1,0,height);\n  strokeWeight(1);\nstroke(255, 80);\n//noStroke();\nfloat r = map(x,0,1,0,255);\n  fill(y,200,x,80);\n  //ellipse(x,y/2,50,50);\n  bezier(x, y, 100, 100, 400, 400, x, y); //for petals\n    //bezier(x, y, 100, y, x, 600, y, x);\n}",
    "comments": []
  },
  {
    "_id": "kG2xewtK4jLDuzwQa",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-04-30T06:06:01.022Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7477760e85e9b36cbcd17af14887dc4a",
        "public_id": "avalanche2023spring/kbycnqpmcaxh9loqezgp",
        "version": 1682834780,
        "version_id": "da8de8d1e1a83397d1b0e7f651d201fe",
        "signature": "92f6c1b28b93e92249e9875790d9b01a4a24c1ad",
        "width": 1333,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-30T06:06:20Z",
        "tags": [],
        "bytes": 53605,
        "type": "upload",
        "etag": "d496b8f359e38f0fffb525755d74e33b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682834780/avalanche2023spring/kbycnqpmcaxh9loqezgp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682834780/avalanche2023spring/kbycnqpmcaxh9loqezgp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b88c84827aa913760bef9280a2b18e65",
        "public_id": "avalanche2023spring/y8xf6cqjib53fi0a7jo8",
        "version": 1682834783,
        "version_id": "9c40080c18ac09cb5a731a4e6cffd698",
        "signature": "c63136891449b6292418a36c386fdb46f02cfed8",
        "width": 1315,
        "height": 1169,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-30T06:06:23Z",
        "tags": [],
        "bytes": 133376,
        "type": "upload",
        "etag": "4d2ec21e5c9799b2f21816193b60afb4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682834783/avalanche2023spring/y8xf6cqjib53fi0a7jo8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682834783/avalanche2023spring/y8xf6cqjib53fi0a7jo8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "773a2fc23c8ff0f6b87115f093de6bd1",
        "public_id": "avalanche2023spring/mwp694bmxdjmdgkckpop",
        "version": 1682834786,
        "version_id": "36b6d0a8a0944df5be3d62c11e292282",
        "signature": "5db51b21fb0e88ce436ba8edd8d7e88fb5612342",
        "width": 1384,
        "height": 1178,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-30T06:06:26Z",
        "tags": [],
        "bytes": 203085,
        "type": "upload",
        "etag": "bddaae62a4b78ea1c71db9ddda679645",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682834786/avalanche2023spring/mwp694bmxdjmdgkckpop.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682834786/avalanche2023spring/mwp694bmxdjmdgkckpop.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-30T17:35:44.469Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:18:00.228Z" }
      }
    ],
    "title": "",
    "description": "Spent most of my time familiarising myself with the syntax and getting used to the systems of OpenSCAD. Dunno why I made a tyre but it was fun lol",
    "comments": []
  },
  {
    "_id": "kK7by7n3KGvN7Fv8v",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": { "$date": "2023-04-28T08:46:55.259Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "323e7317012a4714dd7d8d3fb3cef1f0",
        "public_id": "avalanche2023spring/qm6xohycivobmhrdx6xy",
        "version": 1682671848,
        "version_id": "ce88a3869bc749b7bfb5604b3c27868e",
        "signature": "217bb81a86fc27c0f5bd57817453bbf661b45e39",
        "width": 1651,
        "height": 1439,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T08:50:48Z",
        "tags": [],
        "bytes": 311213,
        "type": "upload",
        "etag": "6dbc5e743114801b85eee86b4320e928",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682671848/avalanche2023spring/qm6xohycivobmhrdx6xy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682671848/avalanche2023spring/qm6xohycivobmhrdx6xy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7cbf1ecf79ad2c12c8f0ebae2e83c148",
        "public_id": "avalanche2023spring/i45mpfdrdzikugylsahq",
        "version": 1682671855,
        "version_id": "3f859e1b3fd8f2412d36614820eb6261",
        "signature": "9bba32398f36438c8806e891c33fc61f50dd7daa",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T08:50:55Z",
        "tags": [],
        "bytes": 3147977,
        "type": "upload",
        "etag": "a1a9727a2bb6e17ebe02f365f29fe94a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682671855/avalanche2023spring/i45mpfdrdzikugylsahq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682671855/avalanche2023spring/i45mpfdrdzikugylsahq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0cde194207d6d7b0946d9ccf76c96739",
        "public_id": "avalanche2023spring/rwxzmy37wmhyluqkippl",
        "version": 1682671865,
        "version_id": "813c15dc4ec9804ba5689bedd17024f9",
        "signature": "e14ec18d704a8d871a369b8479d216c0e90309a8",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T08:51:05Z",
        "tags": [],
        "bytes": 3147977,
        "type": "upload",
        "etag": "083abed01c3898083655bdd0a491e51b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682671865/avalanche2023spring/rwxzmy37wmhyluqkippl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682671865/avalanche2023spring/rwxzmy37wmhyluqkippl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Used the OpenAI API to generate images instead of text! Had fun playing around with temperatures. A funny thing I noticed was that lower temperatures gave less realistic images - #2 is a patterned leopard, temperature 0.3, and #3 is a colourful deer, temperature 1.9.",
    "comments": []
  },
  {
    "_id": "kNGEr7KTXd4NxquBA",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-07T19:47:45.501Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "236dccae4efe56ac092ff8f5f63f9754",
        "public_id": "avalanche2023spring/mzgqcyrkb6wzw0legegv",
        "version": 1675799270,
        "version_id": "52bafa8d489787a2ea985bd89e5f8a75",
        "signature": "a28d959d41ca5eace5b6748dde8bb57af8082b6f",
        "width": 611,
        "height": 783,
        "format": "webm",
        "resource_type": "video",
        "created_at": "2023-02-07T19:47:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 61427,
        "type": "upload",
        "etag": "e09ac12752d4830dec3e920d421c6551",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675799270/avalanche2023spring/mzgqcyrkb6wzw0legegv.webm",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675799270/avalanche2023spring/mzgqcyrkb6wzw0legegv.webm",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "vp8",
          "level": -99,
          "profile": "0",
          "dar": "611:783",
          "time_base": "1/1000"
        },
        "frame_rate": 5,
        "duration": 23.186,
        "rotation": 0,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T21:06:20.335Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T21:45:23.791Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T04:58:32.991Z" }
      }
    ],
    "title": "",
    "description": "With this sketch, I tried to generatively produce color palettes and compositions like Mark Rothko. I switched to HSL and flip a coin to choose if it will be a high- or low-contrast piece and produce a background color. I then use some random logic to produce the color for the two rectangles based on the background. I really want to pass this into a displacement shader to give it a little bit more texture and variation!",
    "inspiration_name": "Rothko",
    "comments": [],
    "code": "// I opted to use a class just because I find them more convenient to work with\nclass rothkoGenerator {\n\t\tconstructor() {\n//\t\t\tthis.rectCount = math.floor(math.random()+2);\n//this is where the coinflip is made to choose between a high or low contrast composition\n\t\t\tthis.paletteContrast = round(random());\n\t\t\tthis.colorList = [];\n//i then track the color values in the constructor\t\t\t\n          this.bkgColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.oneColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.twoColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n// I also want to implement the possibility for compositions with 3 rectangles but not quite there!          \n//\t\t\tthis.threeColor = {\n//\t\t\t\th: 0,\n//\t\t\t\ts: 0,\n//\t\t\t\tl: 0\n//\t\t\t}\n            this.oneBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }\n            this.twoBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }          \n\t\t\tthis.margin = 50;\n\t\t}\n// this could definitely be optimized but the basic idea is that I generate a random background color\n// I cap the saturation at 80 and light at 90 so the program doesn't get super neon colors which isn't like Rothko\n\t\tgenerateColors() {\n\t\t\tthis.bkgColor.h = floor(random()*360);\n\t\t\tthis.bkgColor.s = floor(random()*80);\n\t\t\tthis.bkgColor.l = floor(random()*90);\n// then, dependent on the contrast value I produce the colors for the two rectangles based off of the background color\n//a high-contrast composition uses end bias for the color whereas a low-contrast composition uses middle bias\n          if (this.paletteContrast === 1) {\n\t\t\tthis.oneColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t} else {\n\t\t\tthis.oneColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t}\n\t\t}\n  \n\t\tendBias() {\n\t\t\tlet value = random() + random();  \n\t\t\tvalue = value - 1;\n\t\t\tif (value < 0) value += 2;\n\t\t\treturn value;\n\t\t}\n  \n\t\tmiddleBias() {\n\t\t\tlet value = (random() + random() + random()) / 2;\n\t\t\treturn value;\n        }\n // this is just a way to randomize the position of the line that bounds the two rectangles       \n        divideCanvas() {\n          this.oneBox.yMiddle = floor(windowHeight / 2) + (this.endBias()*100);\n          this.twoBox.yMiddle = windowHeight-(floor(windowHeight / 2) - this.oneBox.yMiddle);\n        }\n //  here is where the rectangles are actually drawn and filled in\n  // I used quad() so I could be more granular with each point of the rectangle\n        draw() {\n          background(this.bkgColor.h, this.bkgColor.s, this.bkgColor.l);\n          noStroke()\n          fill(this.oneColor.h, this.oneColor.s, this.oneColor.l);\n          quad(this.margin, this.margin, \n               windowWidth - this.margin, this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle, \n               this.margin, this.oneBox.yMiddle\n              );\n          \n          fill(this.twoColor.h, this.twoColor.s, this.twoColor.l);\n          quad(this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, windowHeight - this.margin, \n               this.margin, windowHeight - this.margin\n              );\n        }\n          \n\t}\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tcolorMode(HSL);\n    frameRate(0.5);\n}\n\nfunction draw() {\n    let rothko = new rothkoGenerator();\n    rothko.generateColors();\n    rothko.divideCanvas();\n    rothko.draw();\n}"
  },
  {
    "_id": "kQqi6r45NsLYkZF9H",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-07T06:54:18.217Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cf0acfadbb51c2304c1b6aa844bcfdb2",
        "public_id": "avalanche2023spring/wbceg3mczhxub8bybizn",
        "version": 1678172073,
        "version_id": "bfe22e1fe1146feb6a36cf377e218e32",
        "signature": "d506d0ac571faea500094fe8a69add7dabc2219f",
        "width": 1592,
        "height": 1590,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-07T06:54:33Z",
        "tags": [],
        "bytes": 692251,
        "type": "upload",
        "etag": "02e59384b7070b1f4c984866d343b040",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678172073/avalanche2023spring/wbceg3mczhxub8bybizn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678172073/avalanche2023spring/wbceg3mczhxub8bybizn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T04:43:06.519Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T04:55:51.97Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:16.187Z" }
      }
    ],
    "title": "",
    "description": "Still figuring it out, playing with noise",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "Oh wow HOW? ",
        "created_at": { "$date": "2023-03-08T05:52:30.257Z" }
      }
    ]
  },
  {
    "_id": "kRe58jEE49PW3TsM8",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Random",
    "created_at": { "$date": "2023-03-23T21:12:10.552Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8880a0c88c3cef416c793de6e2bcecd3",
        "public_id": "avalanche2023spring/vi9f7agk7mnwwjbacjq7",
        "version": 1679606059,
        "version_id": "95ac9f7db468d260b9d4eb2cea0f9cb5",
        "signature": "c655845c9ad0285c266c3418204a34c25558e76e",
        "width": 1440,
        "height": 868,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-23T21:14:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 19541649,
        "type": "upload",
        "etag": "9179774bdb16e424b0a0811f06da5750",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679606059/avalanche2023spring/vi9f7agk7mnwwjbacjq7.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679606059/avalanche2023spring/vi9f7agk7mnwwjbacjq7.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679606059/avalanche2023spring/vi9f7agk7mnwwjbacjq7.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "97486",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "8191917",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 9106787,
        "duration": 17.166667,
        "rotation": 0,
        "nb_frames": 1089,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "47dfe4c7b0c605d843a2379158788db9",
        "public_id": "avalanche2023spring/iezbyqnfdvl9rvaoyank",
        "version": 1679606064,
        "version_id": "7e5df233816d7305dfd3ce340b19221c",
        "signature": "c22b9608b5962e28237b351a687d8d7ce08dad11",
        "width": 1440,
        "height": 868,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-23T21:14:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 18646707,
        "type": "upload",
        "etag": "5f1514254a809a2f5d19ad9387bba7ab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1679606064/avalanche2023spring/iezbyqnfdvl9rvaoyank.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1679606064/avalanche2023spring/iezbyqnfdvl9rvaoyank.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1679606064/avalanche2023spring/iezbyqnfdvl9rvaoyank.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "99956",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11137209",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12570813,
        "duration": 11.866667,
        "rotation": 0,
        "nb_frames": 771,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "abea6bc1e6e506a060744f95c7ecb003",
        "public_id": "avalanche2023spring/v2agzd39fbrclj7urnve",
        "version": 1679606138,
        "version_id": "7441544aaeb11b8f5c953b89318ce2f0",
        "signature": "ea562299d8e4b530af2546f9c0b24794f55f21e0",
        "width": 1536,
        "height": 856,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T21:15:38Z",
        "tags": [],
        "bytes": 857349,
        "type": "upload",
        "etag": "070def5ea01ced468996683c39a9779a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679606138/avalanche2023spring/v2agzd39fbrclj7urnve.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679606138/avalanche2023spring/v2agzd39fbrclj7urnve.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-28T05:20:01.034Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:28:26.37Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T14:33:49.435Z" }
      }
    ],
    "title": "",
    "description": "**Randomly Generated Text on Walls in Unity** [Interact with it on itch here.](https://reshmarosethomas.itch.io/plural-wording-procedural-generator) I've also used previous comp form work as textures on the walls and floor! This was an exercise completed as part of another class.",
    "code": "//This is only the main part of the code implementing this\n\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing TMPro;\n\n\npublic class ModifyText : MonoBehaviour\n{\n    [SerializeField]\n    TextMeshProUGUI canvasText;\n\n    string[] thinkWords = { \"Plan\", \"Reflect\", \"Question\", \"Map\", \"Converge\", \"Strategise\", \"Identify\", \"Reframe\", \"Think\", \"Analyse\", \"Evaluate\", \"Clarify\" };\n    //string[] findWords = { \"Ask\", \"Feel\", \"Research\", \"Empathise\", \"Read\", \"Observe\", \"Playtest\", \"Measure\", \"Discover\", \"Learn\", \"Check\", \"Watch\", \"Test\", \"Explore\" };\n    string[] shareWords = { \"Launch\", \"Share\", \"Present\", \"Justify\", \"Release\", \"Show\", \"Catalyse\", \"Facilitate\", \"Critique\", \"Launch\", \"Implement\" };\n    string[] playWords = { \"Make\", \"Execute\", \"Create\", \"Develop\", \"Do\", \"Design\", \"Build\", \"Prototype\", \"Visualise\"};\n\n    float timer = 0;\n    float period = 1f;\n    float prevTime = 0;\n\n    bool thinkFlag = false;\n    bool shareFlag = false;\n    bool playFlag = false;\n\n    string tempText;\n\n\n    // Start is called before the first frame update\n    void Start()\n    { \n        canvasText.text = \"<#000000>\";\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        timer += Time.deltaTime;\n\n        if (thinkFlag || shareFlag || playFlag)\n        {\n            if (timer - prevTime > period)\n            {\n                prevTime = timer;\n                tempText = canvasText.text;\n\n                if (thinkFlag)\n                {\n                    int index = Mathf.FloorToInt(Random.Range(0f, thinkWords.Length));\n                    canvasText.text = \"<#3a0ca3>\" + thinkWords[index] + \"</color>\" + \" \" + tempText;\n\n                }\n\n                tempText = canvasText.text;\n\n                if (shareFlag)\n                {\n                    int index = Mathf.FloorToInt(Random.Range(0f, shareWords.Length));\n                    canvasText.text = \"<#7209b7>\" + shareWords[index] + \"</color>\" + \" \" + tempText;\n\n                }\n\n                tempText = canvasText.text;\n\n                if (playFlag)\n                {\n                    int index = Mathf.FloorToInt(Random.Range(0f, playWords.Length));\n                    canvasText.text = \"<#f72585>\" + playWords[index] + \"</color>\" + \" \" + tempText;\n                }\n\n                if (canvasText.text.Length > 2400)\n                {\n                    canvasText.text = canvasText.text.Remove(2400);\n                }\n            }\n        }\n\n        //canvasText.text = canvasText.text.Replace('A', '4');\n    }",
    "comments": []
  },
  {
    "_id": "kSusY5LjS8FJJ4gkH",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-04T05:32:54.517Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "729081dffedab111d82cee5686aef6d7",
        "public_id": "avalanche2023spring/eskc96fcd8inihzxya54",
        "version": 1680637107,
        "version_id": "023e73a20bfc7549deabdb65801b4d1e",
        "signature": "4c338e235373659b8d31d7445664b420cdadeb0f",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-04T19:38:27Z",
        "tags": [],
        "bytes": 2725134,
        "type": "upload",
        "etag": "504caa519fb6f531fad2b795140c5dbf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680637107/avalanche2023spring/eskc96fcd8inihzxya54.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680637107/avalanche2023spring/eskc96fcd8inihzxya54.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f91bc9a57259e331761e203d2586e827",
        "public_id": "avalanche2023spring/gjsdbne8korgykt5c5jg",
        "version": 1680637120,
        "version_id": "45aacd5eaa0a656715a024604aca7a8a",
        "signature": "e43b6240ec1632eab68bb470a812ce0b3ecb9e42",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-04T19:38:40Z",
        "tags": [],
        "bytes": 2975402,
        "type": "upload",
        "etag": "077e950432b84c5a7c0762bef29ed55f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680637120/avalanche2023spring/gjsdbne8korgykt5c5jg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680637120/avalanche2023spring/gjsdbne8korgykt5c5jg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "090a34f0aca99688340fe301b0095373",
        "public_id": "avalanche2023spring/zpyadsrpukzzxb366hsi",
        "version": 1680637138,
        "version_id": "05556b307a23143ee367a5d611049fbe",
        "signature": "6497ffb7f91b856a8aa27261296106d350f5a402",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-04T19:38:58Z",
        "tags": [],
        "bytes": 3880265,
        "type": "upload",
        "etag": "fc5b6b9fc6af33d07ed365475b8ce720",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680637138/avalanche2023spring/zpyadsrpukzzxb366hsi.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680637138/avalanche2023spring/zpyadsrpukzzxb366hsi.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T06:25:45.346Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T22:57:00.492Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-04-06T17:03:02.278Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "funny",
        "created_at": { "$date": "2023-04-06T17:03:02.733Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T21:32:14.588Z" }
      }
    ],
    "title": "",
    "description": "Made the second prototype for my analog game TODAY, just in time for microgames week, it's fate. You're tasked with retracing the making of lesser known Indian craft forms distributed over a deck of cards. Low strategy, High Learning Quotient.",
    "comments": []
  },
  {
    "_id": "kaX2hW8bhiNKjQLQs",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T19:08:24.113Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "104af628232dad93e602e644256bdff6",
        "public_id": "avalanche2023spring/t9athzerqxpcpvp8w5ld",
        "version": 1682017709,
        "version_id": "d0058e1540d386bae638488fb3ff6f82",
        "signature": "2329f56ae76897e7321752e9d8ffb7263d8cae3c",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T19:08:29Z",
        "tags": [],
        "bytes": 1613877,
        "type": "upload",
        "etag": "7f2ac7b919a541c3c8cb306f50688e08",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682017709/avalanche2023spring/t9athzerqxpcpvp8w5ld.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682017709/avalanche2023spring/t9athzerqxpcpvp8w5ld.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "comments": [],
    "description": "French Shiba Inu in a turtleneck"
  },
  {
    "_id": "kecaKeF6EdE4bbs8T",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T02:35:28.016Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a308e913dc7948f1821d129a2cba8042",
        "public_id": "avalanche2023spring/vyjq5unpfosdhqc215m8",
        "version": 1676601518,
        "version_id": "9625bdeb33ecc1705dca5975734a9af0",
        "signature": "4af6af3e1e24471d5550f37f42a937a7b93ed852",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T02:38:38Z",
        "tags": [],
        "bytes": 206545,
        "type": "upload",
        "etag": "c0e91cbbad3e9cfb3e12192219634e02",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676601518/avalanche2023spring/vyjq5unpfosdhqc215m8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676601518/avalanche2023spring/vyjq5unpfosdhqc215m8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T03:37:03.767Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:00:34.284Z" }
      }
    ],
    "title": "",
    "description": "Here's the sketch I sent to Brian for the partner project! A simple isometric construction with a monochrome(ish) color palette.",
    "comments": []
  },
  {
    "_id": "kgY4bXgCBy2nizzS9",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-22T00:15:40.293Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3ed62949937439dbc9758e429550f9d0",
        "public_id": "avalanche2023spring/b581t1vwaudbmygtr45o",
        "version": 1679444209,
        "version_id": "0981a18a102d8dd798fea23407517e3b",
        "signature": "5d16a15091ecbaeea3b9e7ed87816bcc2df7aad2",
        "width": 1346,
        "height": 1302,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-22T00:16:49Z",
        "tags": [],
        "bytes": 4041125,
        "type": "upload",
        "etag": "c6b77912640413b62323c4d45ce0823b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679444209/avalanche2023spring/b581t1vwaudbmygtr45o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679444209/avalanche2023spring/b581t1vwaudbmygtr45o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-03-23T16:59:47.573Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:27.597Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:19:57.286Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:40:10.411Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:57:11.46Z" }
      }
    ],
    "title": "",
    "description": "Second part of the individual assignment! I wanted to cut the design out of the sheet of acrylic, but the laser cutter didn't cut through the sheet on the first try and the lab was closing. I'm planning on going back to properly cut it out! Also I plan to cut off the little triangles at the edges because they look weird, and I think the design would look nicer as a circle :)",
    "comments": []
  },
  {
    "_id": "kiZAcE4Yk3Y2TAYTp",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-01T17:52:11.617Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cbf289a5ec04f2f40d93a4c57162404f",
        "public_id": "avalanche2023spring/gevqhwnjexybnk0cijuy",
        "version": 1682963551,
        "version_id": "e44ed29f7fbd1f12b0a8250d4ab88915",
        "signature": "8b181c9ad22010e72f1d0034f54c550f0aae5a60",
        "width": 882,
        "height": 908,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T17:52:31Z",
        "tags": [],
        "bytes": 38758,
        "type": "upload",
        "etag": "d7a7a7d561b4b31295e8836d172c6a75",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682963551/avalanche2023spring/gevqhwnjexybnk0cijuy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682963551/avalanche2023spring/gevqhwnjexybnk0cijuy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "581322aecd0f2eb380b552575aa7fd64",
        "public_id": "avalanche2023spring/y0mmcur4mcpuacoaajcy",
        "version": 1682963553,
        "version_id": "9feb6cc5348fb92ca50c53f25dbfafd1",
        "signature": "ebe34c3da6ec82d52d709bf4ccf3458ba276e302",
        "width": 966,
        "height": 884,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T17:52:33Z",
        "tags": [],
        "bytes": 39680,
        "type": "upload",
        "etag": "ea9264ddba7fd3da14c7f6e7e0d56918",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682963553/avalanche2023spring/y0mmcur4mcpuacoaajcy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682963553/avalanche2023spring/y0mmcur4mcpuacoaajcy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bf82eca23e37cca7e9715d5f9ba1412b",
        "public_id": "avalanche2023spring/c2biu9mdzzxrnjwvfxo0",
        "version": 1682963556,
        "version_id": "b3dd52df9d83a5261e07228219627e1d",
        "signature": "0738d1ea3efa93b10450d74f27b04b9b37cc83a0",
        "width": 1480,
        "height": 852,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-01T17:52:36Z",
        "tags": [],
        "bytes": 237120,
        "type": "upload",
        "etag": "6c45ea80705f2ab89b032ef22e831797",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682963556/avalanche2023spring/c2biu9mdzzxrnjwvfxo0.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682963556/avalanche2023spring/c2biu9mdzzxrnjwvfxo0.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-02T00:02:39.1Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:55.762Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:54.286Z" }
      }
    ],
    "title": "",
    "description": "I wanted to see how well ChatGPT could generate code for OpenSCAD. This is the best result I could get for a chicken - most of the other code that ChatGPT gave me created elements that were hidden/obscured by other objects. I could still see ChatGPT being helpful as a starting point for an OpenSCAD project, but you would probably want to quickly adapt it yourself as opposed to constantly asking ChatGPT for updated code.",
    "comments": []
  },
  {
    "_id": "kjtc7syhzvnmLC8YJ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T03:45:15.269Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2e561aed7e391c1f13da1b8f8cbdd5c3",
        "public_id": "avalanche2023spring/nmflqnyju5lzrhg20obr",
        "version": 1677210335,
        "version_id": "e6f970c47d436bb065c80d19f95b89a1",
        "signature": "0e8586a46766b22d36df8f6c55afe720b35ed556",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T03:45:35Z",
        "tags": [],
        "bytes": 2997123,
        "type": "upload",
        "etag": "1da6dbfe3bbab434d9a8bc0f1d7692ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677210335/avalanche2023spring/nmflqnyju5lzrhg20obr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677210335/avalanche2023spring/nmflqnyju5lzrhg20obr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T03:51:41.679Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T04:31:35.491Z" }
      }
    ],
    "title": "",
    "description": "Pair sketch with Brian's code! I kept some of his original colors and I really liked these chalky textures I was getting",
    "code": "let x;\nlet y;\n\nfunction setup() {\n  createCanvas(1000, 1000);\n  background(3, 5, 31);\n  x = width / 2;\n  y = height;\n}\n\nfunction draw() {\n  \n  for (let i = 0; i < 45; i++) {\n    sketch();\n  }\n}\n\nfunction sketch() {\n  let r = 0;\n  let g = random(0,150);\n  let b = random(150,255);\n\n  let n1 = noise(x*0.7, y*0.7);\n  let n2 = noise(x*0.9, y*0.7);\n  let n3 = noise(x*7, y*9);\n\n  let nextX = x + random(-2, 2);\n  let nextY = y + random(-20, 20);\n\n  nextX = constrain(nextX, -10, width + 100);\n  nextY = constrain(nextY, -10, height + 200);\n\n  g += random(-50, 50);\n  b += random(-50, 50);\n\n  let t = frameCount;\n  stroke(r, g, b, 50);\n  fill(50+mouseX, 200-mouseY, 200, random(255));\n\n  ellipse(x-n1 - 300, y-n1-100, 2, 2);\n\n  push();\n  stroke(3, 5,31, random(255))\n  ellipse(x-n2 + 250, y-n2-100, 1, 1);\n  pop();\n\n  ellipse(x-n2 - 100, y-n2-300, 1, 1);\n  ellipse(x-n3 - 150, y-n3-500, 1, 1);\n  \n  ellipse(x-n1 + 300, y-n1-50, 1, 1);\n\n  x = nextX;\n  y = nextY;\n}\n\n// Adapted from: https://happycoding.io/tutorials/p5js/animation/random-walker\n\nfunction mousePressed() {\n  saveCanvas('myCanvas', 'png');\n}",
    "comments": []
  },
  {
    "_id": "kqe6QD8xmkwWb8nSj",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T09:11:05.059Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c20e076376db8dc17ebe85a28fdb60c6",
        "public_id": "avalanche2023spring/wevx5e1pycdfqfungrr3",
        "version": 1681463501,
        "version_id": "b25a9b8b899a978295d5ab129b9ddd7f",
        "signature": "19c423b710ac4cda9c91301de9b620a3e56ce278",
        "width": 1354,
        "height": 392,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T09:11:41Z",
        "tags": [],
        "bytes": 190806,
        "type": "upload",
        "etag": "794adda7846d1ad742caa4113b5ff102",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681463501/avalanche2023spring/wevx5e1pycdfqfungrr3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681463501/avalanche2023spring/wevx5e1pycdfqfungrr3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8b3aacaf8a2be4d10bc869a4e70f1ba9",
        "public_id": "avalanche2023spring/cdntuuw9qltmhvgybk3x",
        "version": 1681463505,
        "version_id": "e8e001d7d7dbeed874a5bb942fee931a",
        "signature": "a7a086b1906f9b89888a5963f1fde12ad28a7323",
        "width": 1348,
        "height": 428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T09:11:45Z",
        "tags": [],
        "bytes": 192241,
        "type": "upload",
        "etag": "d93db5a7b475af2f0a0937a6e0241375",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681463505/avalanche2023spring/cdntuuw9qltmhvgybk3x.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681463505/avalanche2023spring/cdntuuw9qltmhvgybk3x.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4258b766543bd15cfbdb26dcc8513293",
        "public_id": "avalanche2023spring/nzj8t17uezjczhfvr4nl",
        "version": 1681463515,
        "version_id": "3ddd4475e4b99c4afe98a8a24604cf19",
        "signature": "8c8e06dc53672320c16fa513f39caa454d2b162f",
        "width": 1354,
        "height": 488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T09:11:55Z",
        "tags": [],
        "bytes": 212066,
        "type": "upload",
        "etag": "fe29ebabaed734d4321c9a2cf530091d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681463515/avalanche2023spring/nzj8t17uezjczhfvr4nl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681463515/avalanche2023spring/nzj8t17uezjczhfvr4nl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 10 (2/4): Lately my friends have all been on dating apps so I made this to make fun of their generic profiles.",
    "comments": []
  },
  {
    "_id": "kvzJgLb3ZxkX28rQ4",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T02:09:35.618Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9d4635dd81403a6e9c2bc27f647d5145",
        "public_id": "avalanche2023spring/ofa28yndgemgdng9umat",
        "version": 1675822186,
        "version_id": "9e11b4614fc1989f8f328a508417827e",
        "signature": "825ab8836d3b6fad020b0b5340c19898d248a513",
        "width": 504,
        "height": 498,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-08T02:09:46Z",
        "tags": [],
        "pages": 0,
        "bytes": 621534,
        "type": "upload",
        "etag": "c15c848009ed451865d675ff093295c8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675822186/avalanche2023spring/ofa28yndgemgdng9umat.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675822186/avalanche2023spring/ofa28yndgemgdng9umat.mp4",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127984",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "138833",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 274878,
        "duration": 18.066732,
        "rotation": 0,
        "nb_frames": 543,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T04:58:26.451Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T20:10:51.412Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T04:29:38.046Z" }
      }
    ],
    "title": "",
    "description": "Can save a random generated inspiration if you run the code!",
    "inspiration_name": "Piet Mondrian",
    "code": "//Piet Mondrian\n//Make 3 colour rectangles which changes shape and colour red, yellow, blue\n//random operation every100 seconds\n\nlet colorChoice;\n\nlet r = \"rgb(255, 20, 0)\";\nlet y = \"rgb(239, 241, 11)\";\nlet b = \"rgb(0, 9, 255)\";\n\nlet col = [r, y, b];\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  // let r = color(255, 20, 0);\n  // let y = color(239, 241, 11);\n  // let b = color(0, 9, 255);\n\n  // let col = [r, y, b];\n  //    let colorChoice;\n  // timeRect();\n  setTimeout(timeRect, 100);\n}\n\nfunction draw() {\n  push();\n  noStroke();\n  fill(0);\n  textAlign(CENTER);\n  //headline\n  textSize(30);\n  textFont(\"Courier New\");\n  text(\"Facing Colours\", 200, 60);\n  //instruct\n  textSize(15);\n  text(\"Press any key to save a copy\", 200, 370);\n  pop();\n}\n\nfunction timeRect() {\n  let x1 = 40;\n  let y1 = 150;\n  let x2 = random(60, 100);\n  let y2 = random(120, 180);\n  let x3 = random(170, 210);\n  let y3 = random(210, 300);\n\n  clear();\n\n  //rect(x, y, w, [h], [tl], [tr], [br], [bl]);\n\n  colorChoice = floor(random(0, 3));\n\n  fill(col[colorChoice]);\n  rect(40, y1, x2 + x2, y3 - y2);\n\n  colorChoice = floor(random(0, 3));\n\n  fill(col[colorChoice]);\n  rect(x1 + 200, y1 + 100, x2, x1);\n\n  colorChoice = floor(random(0, 3));\n\n  fill(col[colorChoice]);\n  rect(300, 150, 40, 40);\n\n  push();\n  strokeWeight(5);\n  strokeCap(SQUARE);\n  //vertical lines\n  //line(x1, y1, x2, y2);\n  line(x2, height - 50, x2, y1);\n  line(x3, height - 50, x3, y2);\n  line(50, height - 50, 50, 60);\n  line(300, height - 50, 300, x1 + 30);\n\n  //horizontal lines\n  line(width, y2, x2, y2);\n  line(width, y3, x3, y3);\n  line(50, 300, 300, 300);\n  pop();\n\n  push();\n  noFill();\n  rect(0, 0, 400, 400);\n  pop();\n\n  setTimeout(timeRect, 1000);\n}\n\nfunction keyPressed() {\n  saveCanvas(\"My Mondrian\", \"jpg\");\n}",
    "comments": []
  },
  {
    "_id": "m7icFAZ4Zd5seTFKo",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T21:42:56.947Z" },
    "posted": false,
    "cloudinary_media": [
      {
        "asset_id": "e34df3264ee88bf792bd94cc2831e3bb",
        "public_id": "avalanche2023spring/yt246z6g7juwhyayzpap",
        "version": 1675892631,
        "version_id": "57226d113cca7d65a0c2a42760b00925",
        "signature": "ebb3f8d2a09400aae5a4566947812db59ac391ab",
        "width": 1200,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-08T21:43:51Z",
        "tags": [],
        "bytes": 130103,
        "type": "upload",
        "etag": "a88670a99f21af08c6556efddca34838",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675892631/avalanche2023spring/yt246z6g7juwhyayzpap.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675892631/avalanche2023spring/yt246z6g7juwhyayzpap.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c2cfba905704ca03eefdba172de3a9ff",
        "public_id": "avalanche2023spring/uuzwnlgugtyqe3xzfdh1",
        "version": 1675892634,
        "version_id": "fb0d0338afac7b4ee944650d361f8a04",
        "signature": "545fbdbbd0a2865410133549c526626546782edf",
        "width": 1200,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-08T21:43:54Z",
        "tags": [],
        "bytes": 235848,
        "type": "upload",
        "etag": "009ea4ef25fa9fe635be02830908a657",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675892634/avalanche2023spring/uuzwnlgugtyqe3xzfdh1.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675892634/avalanche2023spring/uuzwnlgugtyqe3xzfdh1.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "mCHmvPXpevaQxYHhK",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-03T21:18:41.979Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7570b6b96cdb145f98a4e84fb8f520b9",
        "public_id": "avalanche2023spring/yqlow9bigtjdvp63f5jg",
        "version": 1683148732,
        "version_id": "983ee778d59dc797bad207412ac04cf4",
        "signature": "d271989d2c8685861103719f9aaf1407c9ef45b5",
        "width": 966,
        "height": 902,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T21:18:52Z",
        "tags": [],
        "bytes": 54408,
        "type": "upload",
        "etag": "db8dbb04c3369ca5aff1fb6006ea697c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683148732/avalanche2023spring/yqlow9bigtjdvp63f5jg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683148732/avalanche2023spring/yqlow9bigtjdvp63f5jg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "593ded0d331f3ddfea7de8916f0832f2",
        "public_id": "avalanche2023spring/g29z88vc14fvexjgqkmf",
        "version": 1683148736,
        "version_id": "95862e53ef7a1c98c25abd034c47744f",
        "signature": "c647c41e77408f2a34befc64ab410ffa71c742f1",
        "width": 888,
        "height": 712,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T21:18:56Z",
        "tags": [],
        "bytes": 39701,
        "type": "upload",
        "etag": "0643d4f2ab862aaa18ce795cda1c5ec6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683148736/avalanche2023spring/g29z88vc14fvexjgqkmf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683148736/avalanche2023spring/g29z88vc14fvexjgqkmf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "fb96c15dc64e1999d9f809edb8f10cc0",
        "public_id": "avalanche2023spring/pv2bkdjpfhqg3duvayfc",
        "version": 1683148739,
        "version_id": "25985dae81977772d86794ad201086e1",
        "signature": "6d34785b3ec9d894e2797ab46db6a4d53063d3ed",
        "width": 772,
        "height": 726,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-03T21:18:59Z",
        "tags": [],
        "bytes": 38068,
        "type": "upload",
        "etag": "f41601dadcb6a01477180e78014d65f7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683148739/avalanche2023spring/pv2bkdjpfhqg3duvayfc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683148739/avalanche2023spring/pv2bkdjpfhqg3duvayfc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T22:37:22.549Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-04T04:50:28.792Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "funny",
        "created_at": { "$date": "2023-05-04T16:13:33.218Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-04T16:13:34.151Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T05:13:29.745Z" }
      }
    ],
    "title": "",
    "description": "Found a tutorial online to create a castle tower + played around with $fn to alter the texture",
    "comments": []
  },
  {
    "_id": "mRG7qEHDc6yy9BcvS",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-04T15:21:55.574Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "07322ebe22210eeafd3baf830429ef37",
        "public_id": "avalanche2023spring/wm7dt1eaomonfin4jtav",
        "version": 1680621720,
        "version_id": "5d90caf23ee9519c543adcbd4989a3f4",
        "signature": "75517b68180fa55a22c4b3d6d321447c67e99afa",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-04T15:22:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 1251008,
        "type": "upload",
        "etag": "46815f784e8adb806358e6f759f466ad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680621720/avalanche2023spring/wm7dt1eaomonfin4jtav.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680621720/avalanche2023spring/wm7dt1eaomonfin4jtav.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680621720/avalanche2023spring/wm7dt1eaomonfin4jtav.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "459259",
          "dar": "1:1",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 465852,
        "duration": 21.483333,
        "rotation": 0,
        "nb_frames": 1289,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T16:08:02.389Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T22:57:07.205Z" }
      }
    ],
    "title": "",
    "description": "First game made with Reshma and Abha in our in class coding session",
    "comments": []
  },
  {
    "_id": "mamTRzMDLhKPndHut",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T05:29:59.268Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5c4483730e7e8206b02276db8c8e44ff",
        "public_id": "avalanche2023spring/r1p75wzds7tvt1mabpk4",
        "version": 1679635811,
        "version_id": "c655faed569b4f87844ec6a88132b8c3",
        "signature": "d2552ef8fc55b914284eef0983ba9486a7addcbe",
        "width": 1158,
        "height": 1138,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T05:30:11Z",
        "tags": [],
        "bytes": 2130750,
        "type": "upload",
        "etag": "bf427e7b764bdf3ecc62f731114cd52f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679635811/avalanche2023spring/r1p75wzds7tvt1mabpk4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679635811/avalanche2023spring/r1p75wzds7tvt1mabpk4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T12:08:33.131Z" }
      }
    ],
    "title": "",
    "comments": []
  },
  {
    "_id": "mdKqTzgLN8cY22JKh",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T15:05:42.295Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "881fc06944131fdbdb34d8eee8e3c695",
        "public_id": "avalanche2023spring/hwq4xnqffzovfuqaj41a",
        "version": 1680879956,
        "version_id": "b02dc0025769b701548a0e75763b63f2",
        "signature": "772f57b5b8d342ac854e1e48e8855b1ba89ca968",
        "width": 2800,
        "height": 1600,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T15:05:56Z",
        "tags": [],
        "pages": 0,
        "bytes": 7512647,
        "type": "upload",
        "etag": "4348f3c3d3bcff492ad3784e5414c2c6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680879956/avalanche2023spring/hwq4xnqffzovfuqaj41a.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680879956/avalanche2023spring/hwq4xnqffzovfuqaj41a.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680879956/avalanche2023spring/hwq4xnqffzovfuqaj41a.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 52,
          "profile": "Main",
          "bit_rate": "3810193",
          "dar": "7:4",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 3934309,
        "duration": 15.276167,
        "rotation": 0,
        "nb_frames": 932,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T16:08:43.791Z" }
      }
    ],
    "title": "",
    "description": "Made this mostly to get a sense of animations in p5.play! This library really makes animations so easy 🤯\nThere is a slight lag every time the face changes I'm not able to figure out why - maybe next iteration",
    "comments": []
  },
  {
    "_id": "meMxRFdGj9hCN3cYN",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-22T22:31:29.589Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "045477c1ecdbaa3672863cc7e5454562",
        "public_id": "avalanche2023spring/pouubx9h8aitasxlbx8d",
        "version": 1677105127,
        "version_id": "81c051e8e785b3b6ba70c4783aa38254",
        "signature": "f62eb068850b4457ccc3f2ae9ce809ffcdffd9f2",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-22T22:32:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 4078500,
        "type": "upload",
        "etag": "3127e5d7207546189607425b392f38ec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677105127/avalanche2023spring/pouubx9h8aitasxlbx8d.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677105127/avalanche2023spring/pouubx9h8aitasxlbx8d.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677105127/avalanche2023spring/pouubx9h8aitasxlbx8d.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "4221027",
          "dar": "794:797",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 4228250,
        "duration": 7.716667,
        "rotation": 0,
        "nb_frames": 463,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T04:12:28.859Z" }
      }
    ],
    "title": "",
    "description": "Pair Challenge Prompt for Chris!",
    "code": "function setup() {\n  createCanvas(800, 800);\n\n  px = width / 2;\n  py = height / 2;\n\n  dir = 1;\n}\n\nfunction draw() {\n  background(200, 220, 255, 80);\n  \n  for(let i=0; i<width; i+=20){\n    noStroke()\n    fill(255, 200)\n    y = noise(i*0.1)*100-50\n    ellipse(i, 50+y, 100+y, 100+y)\n    fill(255, 130)\n    ellipse(i, 220+y, 80-y, 80-y)\n  }\n\n  if (dist(mouseX, mouseY, px, py) > 15) {\n    push();\n    translate(mouseX, mouseY);\n    if (mouseX < px) {\n      rotate(PI + atan((mouseY - py) / (mouseX - px)));\n    } else {\n      rotate(atan((mouseY - py) / (mouseX - px)));\n    }\n    scale(1, dir);\n    rotate(PI / 12);\n    push();\n    rotate(PI / 2);\n    // stroke(255);\n    fill(0, 0, 255);\n    push();\n    scale(3);\n    triangle(0, 0, -10, 20, 10, 20);\n    triangle(0, 30, -25, 45, 25, 45);\n    fill(255, 0, 0);\n    ellipse(0, 20, 10, 50);\n    pop();\n    pop();\n    pop();\n    px = mouseX;\n    py = mouseY;\n  }\n}",
    "comments": []
  },
  {
    "_id": "mewjzmHcrwmQ7nwy7",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-19T18:51:21.745Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4465626f5223932637a46aae002fd98b",
        "public_id": "avalanche2023spring/sopcgeh1nca5ssueyfim",
        "version": 1679251897,
        "version_id": "7a967414bd39e11d2247ce083d989184",
        "signature": "8940203afaabd0f1176028d27c94fa24fdd85861",
        "width": 1152,
        "height": 1152,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-19T18:51:37Z",
        "tags": [],
        "bytes": 2657336,
        "type": "upload",
        "etag": "bc946ac0759f22098cc5a0b898e1d68f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679251897/avalanche2023spring/sopcgeh1nca5ssueyfim.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679251897/avalanche2023spring/sopcgeh1nca5ssueyfim.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cff9e118449905dc1d9ee398b392922c",
        "public_id": "avalanche2023spring/ucxda2azqrmfzogxptpy",
        "version": 1679251915,
        "version_id": "8423d891e2109a1fd3b38e8a1fd5adfa",
        "signature": "f788a90cc0181c9021d2100ca04e3c223c82c0ee",
        "width": 1152,
        "height": 1152,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-19T18:51:55Z",
        "tags": [],
        "bytes": 3396804,
        "type": "upload",
        "etag": "b43242e410613c3dcd26b48c4edb7a3e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679251915/avalanche2023spring/ucxda2azqrmfzogxptpy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679251915/avalanche2023spring/ucxda2azqrmfzogxptpy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6e5741ae12b359ad5b33e468a10589c7",
        "public_id": "avalanche2023spring/fjis0weh86hckcv9bejp",
        "version": 1679251919,
        "version_id": "5ada2466baa95d64deda89b5fe6620f4",
        "signature": "ca1c45dd83e88cbdb687a0f060af89953a8226c2",
        "width": 2048,
        "height": 1152,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-19T18:51:59Z",
        "tags": [],
        "bytes": 487931,
        "type": "upload",
        "etag": "2916a71400d66c46da3e7304e1bea2b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679251919/avalanche2023spring/fjis0weh86hckcv9bejp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679251919/avalanche2023spring/fjis0weh86hckcv9bejp.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-19T19:00:10.155Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T05:16:14.883Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T16:36:31.456Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-22T00:01:10.642Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:57:28.156Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T16:44:38.243Z" }
      }
    ],
    "title": "",
    "description": "Reworking pixel type from last week into vectors so they're ready for the laser lab. Shoutout to my friend for laser cutting these for me while I was away. Can't wait to get back and try it out myself!",
    "inspiration_name": "Me",
    "comments": []
  },
  {
    "_id": "mgeA4k2bazLAcfLRZ",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T23:44:51.224Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d22f79bbbb1a19a768268442bd09e1cf",
        "public_id": "avalanche2023spring/wo2jdy67epvsytmmihoe",
        "version": 1676591124,
        "version_id": "95c1eac87d9fdbf76b8c981b004eeac9",
        "signature": "cda7731dcf1c27c2c6fb4f9b406d9f18c1fb4d18",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-16T23:45:24Z",
        "tags": [],
        "pages": 0,
        "bytes": 1886451,
        "type": "upload",
        "etag": "88aac592ac7a1f03f942c683343ee303",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676591124/avalanche2023spring/wo2jdy67epvsytmmihoe.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676591124/avalanche2023spring/wo2jdy67epvsytmmihoe.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676591124/avalanche2023spring/wo2jdy67epvsytmmihoe.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192582",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "2273108",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 2474034,
        "duration": 6.1,
        "rotation": 0,
        "nb_frames": 183,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T05:47:29.345Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:23.762Z" }
      }
    ],
    "title": "",
    "description": "This was made using random() and noise()",
    "inspiration_name": "Grass example",
    "comments": []
  },
  {
    "_id": "mgmNDheJT7HHDKT8k",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T06:06:19.818Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4b06682ca16255aec2a9d5a1bd8844ca",
        "public_id": "avalanche2023spring/bkzo0zni8seh5b4x6lf3",
        "version": 1677823642,
        "version_id": "236d75cf01be64345322ec20c0505fa6",
        "signature": "016573662648a0b1f55e941fcba0914a961d2498",
        "width": 1050,
        "height": 1142,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T06:07:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 5270256,
        "type": "upload",
        "etag": "4b42533517b462603fa9c86ab6005883",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677823642/avalanche2023spring/bkzo0zni8seh5b4x6lf3.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677823642/avalanche2023spring/bkzo0zni8seh5b4x6lf3.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677823642/avalanche2023spring/bkzo0zni8seh5b4x6lf3.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2827072",
          "dar": "525:571",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2874685,
        "duration": 14.666667,
        "rotation": 0,
        "nb_frames": 881,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T16:41:17.7Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet amplitude_slider;\nlet frequency_slider;\nlet speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 10, 5, 0.1);\n\n  createP(\"Speed\");\n  speed_slider = createSlider(0, 10, 5, 0.1);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = frequency_slider.value();\n  let timespeed = speed_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    let offsetX = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n    let offsetY = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "comments": [],
    "description": "Challenge 2 (Could not complete)"
  },
  {
    "_id": "miJG2cm6J7rDTTCA2",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-10T02:19:36.988Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "24bff8159a2a0454def270995841213c",
        "public_id": "avalanche2023spring/zy8vfxtyolyqc5hjmezl",
        "version": 1683685194,
        "version_id": "8192d6e0ca6a388dd0e87f54bc221a3e",
        "signature": "0905f7c14f2e95b15cca96446a325a54b9820ef4",
        "width": 1582,
        "height": 1028,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-05-10T02:19:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 17303801,
        "type": "upload",
        "etag": "0ecfc399ea0409ff92a6a593abb9ce5f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683685194/avalanche2023spring/zy8vfxtyolyqc5hjmezl.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683685194/avalanche2023spring/zy8vfxtyolyqc5hjmezl.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683685194/avalanche2023spring/zy8vfxtyolyqc5hjmezl.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "6508011",
          "dar": "791:514",
          "time_base": "1/30000"
        },
        "frame_rate": 30,
        "bit_rate": 6509277,
        "duration": 21.266633,
        "rotation": 0,
        "nb_frames": 638,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "The sketch we did in class was very hard coded, so I wanted to calculate the correlations between the turn angles, sides, and sizes to make it more parametric. It became a fun little experiment to figure out what the mathematical relationships were and how I could manipulate the sketch using them.",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js   \n\nlet myTurtle;\n\nconst params = {\n  curviness: 0.15,\n  size: 1.5,\n  rotation: 5\n};\n\nconst pane = new Tweakpane.Pane();\npane.addInput(params, \"curviness\", { min: 0, max: 0.8 });\npane.addInput(params, \"size\", { min: 0.1, max: 2.02 });\npane.addInput(params, \"rotation\", { min: 1.05, max: 50 });\n\nfunction setup() {\n  createCanvas(500, 500);\n  frameRate(30);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  background(50);\n  stroke(255);\n  strokeWeight(3);\n\n  myTurtle.penUp();\n  myTurtle.moveTo(width/2, height/2);\n  myTurtle.penDown();\n\n  for (let i = 0; i < 5; i++) {\n    for (let i = 0; i < 100 + 10*params.rotation; i++) {\n      myTurtle.moveForward(params.size);\n      myTurtle.turnRight(params.curviness);\n    }\n    myTurtle.turnRight(136.5 - 1.5*params.rotation - (params.curviness-0.1)*10*15);\n  }\n\n}",
    "comments": []
  },
  {
    "_id": "mmDttQdu2mgFzrvGj",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T03:23:18.407Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ae6213d759275538dcd9c612204c668e",
        "public_id": "avalanche2023spring/pwcv6cloydn0spzzisd4",
        "version": 1679628215,
        "version_id": "f93bc41059eeab5431d37006164159b7",
        "signature": "43dd00b0312dc3b88ac90ac540124ea4387b1007",
        "width": 1938,
        "height": 1796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T03:23:35Z",
        "tags": [],
        "bytes": 4166638,
        "type": "upload",
        "etag": "0108e52ac145643971747f1ecfa7b5fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679628215/avalanche2023spring/pwcv6cloydn0spzzisd4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679628215/avalanche2023spring/pwcv6cloydn0spzzisd4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:56:43.436Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T05:27:27.653Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T06:34:41.893Z" }
      }
    ],
    "title": "",
    "description": "Another offshoot of the coding challenge",
    "comments": []
  },
  {
    "_id": "modzR9zQzmGg8jksh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T05:26:16.511Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "da42030ac69e4be734bc942385a8d50e",
        "public_id": "avalanche2023spring/zxregzqsnwgppvs4ijs5",
        "version": 1679635627,
        "version_id": "d2fe6eaf33cd23581b09e9f7fede54bd",
        "signature": "c304d02c86d9e88812297c6979c0f666cdbba338",
        "width": 1338,
        "height": 1132,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T05:27:07Z",
        "tags": [],
        "bytes": 306301,
        "type": "upload",
        "etag": "9ef153766dbaf1f33d9f18032683b51a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679635627/avalanche2023spring/zxregzqsnwgppvs4ijs5.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679635627/avalanche2023spring/zxregzqsnwgppvs4ijs5.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with the first sketch in Figma",
    "comments": []
  },
  {
    "_id": "mrm4Ae2XEKfRNnjvY",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "API",
    "created_at": { "$date": "2023-04-23T07:30:00.564Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5ade61ee98ab2fecd91b3587528366af",
        "public_id": "avalanche2023spring/ee7e2aoiz7nlfc4vutl1",
        "version": 1682235147,
        "version_id": "c10a595f5fa17ab2a02d4664382910c5",
        "signature": "fbe12020dc9e2ef79ebd31d1f282d6755fa2b957",
        "width": 2116,
        "height": 1084,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-23T07:32:27Z",
        "tags": [],
        "bytes": 236680,
        "type": "upload",
        "etag": "5a9e3b9249d696c7825449fb9074f593",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682235147/avalanche2023spring/ee7e2aoiz7nlfc4vutl1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682235147/avalanche2023spring/ee7e2aoiz7nlfc4vutl1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3a2c27279c2b77af45fed6d13054aa92",
        "public_id": "avalanche2023spring/gkfcika9aagqk0xpxc6r",
        "version": 1682235156,
        "version_id": "93bf2f785ca44a761f74929e99978ff2",
        "signature": "c5bf005aa6b6facbdc91123e8b3dcfa770b3d5ea",
        "width": 992,
        "height": 1164,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-23T07:32:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 14092147,
        "type": "upload",
        "etag": "b3d62cf17b01ce7f83d1e8402ae54a35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682235156/avalanche2023spring/gkfcika9aagqk0xpxc6r.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682235156/avalanche2023spring/gkfcika9aagqk0xpxc6r.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682235156/avalanche2023spring/gkfcika9aagqk0xpxc6r.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128000",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "5084767",
          "dar": "248:291",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5633859,
        "duration": 20.010646,
        "rotation": 0,
        "nb_frames": 558,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-23T22:12:26.068Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-24T04:40:45.29Z" }
      }
    ],
    "title": "",
    "description": "Took a while to set up and configure the OpenAI API. I used the demo they have in their documentation to download and install the application and enter an API key. The actual application isn't mine, its just what OpenAI has as the demo example on github.",
    "comments": []
  },
  {
    "_id": "mtyCrPmEBbu9yYsCj",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": { "$date": "2023-03-26T01:30:41.717Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ce9081c06effdd1ad7ef9b2a557465ad",
        "public_id": "avalanche2023spring/u834jbmkodfzymdumr73",
        "version": 1679796436,
        "version_id": "f8a7ff99aa0470e854733ccf3fd46409",
        "signature": "0ed66b9daab0e145908688320da8c900d9a0f77a",
        "width": 1005,
        "height": 1005,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-26T02:07:16Z",
        "tags": [],
        "bytes": 424560,
        "type": "upload",
        "etag": "288e80a64a6e88f6a472f23725ad978b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679796436/avalanche2023spring/u834jbmkodfzymdumr73.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679796436/avalanche2023spring/u834jbmkodfzymdumr73.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-27T18:07:00.479Z" }
      }
    ],
    "lesson": "Vectors",
    "title": "",
    "description": "Trying patterns and Paper.js\n\n.",
    "code": "//http://sketch.paperjs.org/#V/0.12.17/S/tVM9T8MwEP0rT1maqFEpQlWllEwVzAhG0sFNLo1bY1fOQSlV/zt23BQGVMHAYPt8fnf37sOHSIsXirLoaUNcNlEalaby96srzC0JJghYKlnolSK0jdhSha3gBjvpNskt2GyhqGZsjdQMwYUttLM/vGeYTlLs/XGE0JXz1coPgqlx2MmKmwBoSK4a7lDe9PuqjUUskWM8g8QtrsdjLw1zJyQ4eAjgQPE6YNZnzHqYeyk5YQBNOzw44qO5tKWiuLt7xrFMsU5SXE+SUS2VmhvlouYooj0pZXZFNOt99Odlf9PJ0Ll0+y+89h67zI//kPabsKFf+Rfjx76hcQcruOtchmdfiUUadL5TTuUbNJ2clWzNhrpcMgyWSpSbQWh3/apLlkbD6HvrZiqmN9J8Iluwm4c7UTao/VsKa9jPFjcUyC33uEFFK0vUZr2FfxkFZHyTzEKcUKhk9nPh+uXCXSTk3v/OqTP6kRSO7ucs3X/ZdJVso+x5cfwE\n\n// Create a rectangle shaped path with its top left point at\n// {x: 75, y: 75} and a size of {width: 75, height: 75}\n\n\n\nfor (i = 0; i < 1000; i+=100) {\n  for(j = 0; j < 1000; j+= 100){\n    new Path.Circle(new Point(i, j), 15).fillColor = \"yellow\";\n    \n        new Path.Circle(new Point(75+i, 75+j), 15).fillColor = \"yellow\";\n\n    }\n}\n\nfor (i = 0; i < 1000; i+=100) {\n  for(j = 0; j < 1000; j+= 100){\n    var path = new Path.Rectangle({\n\tpoint: [i, j],\n\tsize: [75, 75],\n\tstrokeColor: 'black'\n//function onFrame(event) {\n\t// Each frame, rotate the path by 3 degrees:\n\t//path.rotate(3);\n//}\n});\n    }\n}",
    "comments": []
  },
  {
    "_id": "mxvE8x33aB2fF8HpK",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T09:36:14.211Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dc6a790332b5930b2a9ef1ed86c2ec63",
        "public_id": "avalanche2023spring/qnv4jl7sczuznyp3zdvw",
        "version": 1681465013,
        "version_id": "fb149d8e1d2bfed41a3e659aeee5c9b9",
        "signature": "7e0854a132450c0218a82cc7cf1d59d917a20241",
        "width": 1290,
        "height": 301,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-14T09:36:53Z",
        "tags": [],
        "bytes": 70013,
        "type": "upload",
        "etag": "6361dea5861f1ee0f0aec84d01e1e52c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681465013/avalanche2023spring/qnv4jl7sczuznyp3zdvw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681465013/avalanche2023spring/qnv4jl7sczuznyp3zdvw.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "298e1736efc90a4fd5a15f264bcca66a",
        "public_id": "avalanche2023spring/t1dfla2f9pdkoxnihu5s",
        "version": 1681465015,
        "version_id": "516f5d41d608693e350b478c0c514ded",
        "signature": "09e69cdf361ab13fa7e511649ffe26f5616a0910",
        "width": 1290,
        "height": 240,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-14T09:36:55Z",
        "tags": [],
        "bytes": 107732,
        "type": "upload",
        "etag": "7be001617f5151d08f05ab47c22169ce",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681465015/avalanche2023spring/t1dfla2f9pdkoxnihu5s.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681465015/avalanche2023spring/t1dfla2f9pdkoxnihu5s.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "14b30824d7a99f30ae4aee79354838bb",
        "public_id": "avalanche2023spring/gjmytvdjgnxi5suxxnbz",
        "version": 1681465017,
        "version_id": "28449e28bd21d1ccc493c13248509ab2",
        "signature": "d24c2b070a71d652ee455de703e7d1e0bdf7c3ac",
        "width": 1290,
        "height": 254,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-14T09:36:57Z",
        "tags": [],
        "bytes": 122079,
        "type": "upload",
        "etag": "e3c662a79356a377c7f6b0a096e24bcc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681465017/avalanche2023spring/gjmytvdjgnxi5suxxnbz.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681465017/avalanche2023spring/gjmytvdjgnxi5suxxnbz.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "WEEK 10 (4/4): LOL this is where I MANAGED TO FIx IT. My friends made up the scenarios when we were all watching a horror movie but I messed up in the results part and didn't realize till I was looking at these screenshots right now BUT YOU GET THE IDEA.",
    "comments": []
  },
  {
    "_id": "my5d2hcbBMDwGh4pD",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-27T14:54:16.702Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "62c3a1dc6d06806e10797724000bd110",
        "public_id": "avalanche2023spring/xpkp28a4bcsjb0zzwk2s",
        "version": 1677509727,
        "version_id": "e83b265e22a6119ec458dadb2fbfe122",
        "signature": "7420eb2de81173c398034d495a426542c9d26596",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-27T14:55:27Z",
        "tags": [],
        "pages": 0,
        "bytes": 2279835,
        "type": "upload",
        "etag": "5e01bbcf8ebd783c2e580bbe71bdcf0c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677509727/avalanche2023spring/xpkp28a4bcsjb0zzwk2s.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677509727/avalanche2023spring/xpkp28a4bcsjb0zzwk2s.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677509727/avalanche2023spring/xpkp28a4bcsjb0zzwk2s.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192009",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "509492",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 706925,
        "duration": 25.8,
        "rotation": 0,
        "nb_frames": 774,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:18.562Z" }
      }
    ],
    "title": "",
    "description": "A goofy face generator made using parameters",
    "comments": []
  },
  {
    "_id": "n6D29EKsSkW54zBin",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T05:56:02.764Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "da6c429bb6b241071c0deb30ce14f83b",
        "public_id": "avalanche2023spring/qe0lljrpgzeb3hc4w4ob",
        "version": 1681451878,
        "version_id": "7d28120264cd030fb9386e67a0d0d96e",
        "signature": "4bb5f2129963288086804c710b7557a81386b073",
        "width": 606,
        "height": 510,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-14T05:57:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 2028602,
        "type": "upload",
        "etag": "ed6b4ffb7b44befca4a1df391989c3b1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681451878/avalanche2023spring/qe0lljrpgzeb3hc4w4ob.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681451878/avalanche2023spring/qe0lljrpgzeb3hc4w4ob.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681451878/avalanche2023spring/qe0lljrpgzeb3hc4w4ob.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "235722",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 236799,
        "duration": 68.533333,
        "rotation": 0,
        "nb_frames": 2057,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:51.567Z" }
      }
    ],
    "title": "",
    "description": "Just had some fun with \"INVISIBLE\"",
    "code": "/**\n * Very simple typographic animation.\n *\n */\n//\nlet txt = [\n  \"imperceptible, microscopic\",\n  \"unseen, inconspicuous\",\n  \"unseeable, concealed, occult\",\n  \"covert, deceptive, obscured\",\n  \"disguised, ethereal, gaseous\", \n  \"ghostly,  impalpable, wraithlike\",\n  \"imponderable, inappreciable\",\n  \"indiscernible, infinitesimal\",\n  \"insensible, intangible,perdu\",\n  \"masked, obliterated,unreal\",\n \"screened, supernatural, veiled\",\n  \"unapparent, undisclosed, ideal\",\n  \"ungraspable, unnoticeable\",\n  \"unobservable, unperceivable\",\n  \"unviewable, ulterior, vaporous\",\n \n  ,\n];\n\n// \"not in sight\"\n// \"out of sight\"\n\n//let txt=\"INVISIBLE\";\nlet font;\n\nfunction preload() {\n  font = loadFont(\"data/PlayfairDisplay-Black.ttf\");\n}\n\nfunction setup() {\n  createCanvas(650, 550);\n\n  background(255);\n  //for loop to cycle through the data\n  for (let i = 0; i < txt.length; i = i + 1) {\n    //write the contents of the array to the console\n    print(txt[i]);\n\n    //choose a random color\n    //fill(random(100, 255), 0, random(100, 255));\n    /*\n    Write contents of the array to the canvas\n    and move where it draws down vertically by 20 pixels \n    each time through the loop\n    */\n      fill(0);\n  noStroke();\n\n  textFont(font);\n  textSize(40);\n    text(txt[i], 40, 75 + (i * 30));\n  }\n}\n\nfunction draw() {\n\n\n  fill(255);\n  let s = random(20);\n  ellipse(random(width), random(height), s, s);\n}",
    "comments": []
  },
  {
    "_id": "n9DKAReaPDskj53EJ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T21:54:34.977Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "45488e3c3bbac9bd5775818a782817fa",
        "public_id": "avalanche2023spring/lvzovmia5imkvlmhztlc",
        "version": 1681423233,
        "version_id": "284427aae8f0de82fcc1fc240ae2a72c",
        "signature": "fa5e1c9d45c77d7c9a3071c1cd8d3511f4c834d9",
        "width": 797,
        "height": 160,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T22:00:33Z",
        "tags": [],
        "bytes": 22161,
        "type": "upload",
        "etag": "dc336306bfd607d9fe3d56b090dd0aa0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681423233/avalanche2023spring/lvzovmia5imkvlmhztlc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681423233/avalanche2023spring/lvzovmia5imkvlmhztlc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b84116bf62990207d7f1cfb25d17c731",
        "public_id": "avalanche2023spring/ecqdr2tsohuddts0yzfe",
        "version": 1681423235,
        "version_id": "fce0d3fd96744216c19891d15fb3ca6b",
        "signature": "495a6790729d2b7b70fbeed0d45b4775455b83db",
        "width": 797,
        "height": 161,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T22:00:35Z",
        "tags": [],
        "bytes": 22731,
        "type": "upload",
        "etag": "fdfc3b803310b1289eae45c6fa4db8bc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681423235/avalanche2023spring/ecqdr2tsohuddts0yzfe.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681423235/avalanche2023spring/ecqdr2tsohuddts0yzfe.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e1b2e4bd33edee8e76cfd041b0b61207",
        "public_id": "avalanche2023spring/wcgujf655qn206dertsx",
        "version": 1681423237,
        "version_id": "37987e4af900801b1600965e8cdede7a",
        "signature": "9d157fa437e6c0352093ace1e57ce1aff09edd30",
        "width": 797,
        "height": 159,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T22:00:37Z",
        "tags": [],
        "bytes": 24200,
        "type": "upload",
        "etag": "6e7dfc409f2d6f8c76dbbbc341d6ef2f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681423237/avalanche2023spring/wcgujf655qn206dertsx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681423237/avalanche2023spring/wcgujf655qn206dertsx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T02:42:14.595Z" }
      }
    ],
    "title": "",
    "description": "Alter ego generator! It was fun trying to come up with the components to make for goofy outcomes.",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\n  start: \"You are $people, a $age year-old $occupation from $location. Your hobbies include $hobby, $hobby, and $hobby \",\n  age: `${Math.floor(Math.random()*80 + 19)}`,\n  occupation: \"mattress salesperson | meth dealer | consultant | investor | hermit | deadbeat | cook | fixer | wanderer | IT specialist | merchant | blacksmith\",\n  location: \"Florida | Asgoth | Milan | Madrid | Rio de Janeiro | an evil place | Texas | Tenochtitlan | Prussia | Mongolia \",\n  people: \"Musosil | Maria | Desmodia | Hamir | Melchior | Tama | Marlene | Grandene | Bill | Kevin | Greg | John\",\n  hobby: \" Kant philosophy | baking | bowling | crushing the opposition | hustling | billiards | walking empty streets | amassing power | socialism\"\n};\n\n\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\n\n\ndocument.body.innerHTML = \n`\n    <style>\n        body {\n            background-color: #0f0f0f;\n            color: cornsilk\n        }\n    </style>\n    ${g.expand()} \n`",
    "comments": []
  },
  {
    "_id": "nDLPkPAxSMtDen8Es",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-17T19:30:55.068Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c69e836ef7ff4f81963511cc1a9cdcf5",
        "public_id": "avalanche2023spring/ww24bkrlde8jgfpl6acd",
        "version": 1681761248,
        "version_id": "51d55fbc3c1a4cf1d26da8b1f79a8fe2",
        "signature": "70cdf23eacefb1bff8f4db1d8e9b3a0c513ade50",
        "width": 2540,
        "height": 1220,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-17T19:54:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 6999303,
        "type": "upload",
        "etag": "98e0b03bb89a3f5335acdc1ebb9747ea",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681761248/avalanche2023spring/ww24bkrlde8jgfpl6acd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681761248/avalanche2023spring/ww24bkrlde8jgfpl6acd.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681761248/avalanche2023spring/ww24bkrlde8jgfpl6acd.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "196842",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "3928721",
          "dar": "127:61",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4415093,
        "duration": 12.6825,
        "rotation": 0,
        "nb_frames": 84,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d895d69967e688ae1fc18ab3987ef261",
        "public_id": "avalanche2023spring/qkkjz8j27bsaow2hnkag",
        "version": 1681761256,
        "version_id": "11ead5bc0b61db961a7b4c08b4d9b78b",
        "signature": "69d5f2dc9725d2cbaabd2ee383228962aa499842",
        "width": 2540,
        "height": 1220,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-17T19:54:16Z",
        "tags": [],
        "bytes": 1719926,
        "type": "upload",
        "etag": "ccf93a5ece2ab22c77188fd05ddf10d0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681761256/avalanche2023spring/qkkjz8j27bsaow2hnkag.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681761256/avalanche2023spring/qkkjz8j27bsaow2hnkag.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "aec089d060597cad86adba446791a400",
        "public_id": "avalanche2023spring/qouvt0vg8wv3uishhkke",
        "version": 1681761259,
        "version_id": "9d3fb814329fe5b97d53ab13d44f9ced",
        "signature": "65aa39e7bfbd333542f8581cb0aa06e9cd54ee19",
        "width": 2540,
        "height": 1220,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-17T19:54:19Z",
        "tags": [],
        "bytes": 2263800,
        "type": "upload",
        "etag": "1415a5b9022507ed09559dc562be076b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681761259/avalanche2023spring/qouvt0vg8wv3uishhkke.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681761259/avalanche2023spring/qouvt0vg8wv3uishhkke.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T06:16:28.326Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T17:58:52.095Z" }
      }
    ],
    "title": "",
    "description": "I played around in ChatGPT to see how much \"creative coding\" it could achieve by using reference such as: in the style of Dali, in the style of the impressionists, etc. Here is the final code it gave me for something originally based on an Infinity Mirror Room with some ethereal music - it ended up looking a bit unsettling",
    "comments": []
  },
  {
    "_id": "nFb6j5AbPFXNeQfnr",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T01:34:48.92Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b4dbefb3f2f76b37e4549f39eff919b3",
        "public_id": "avalanche2023spring/dyokkl7n6do75ayasqpz",
        "version": 1681436103,
        "version_id": "33a64cf1d312d04a6233636a6a228a1b",
        "signature": "f6c6b0d4f678565ea5236c815fba58913489d5f2",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-14T01:35:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 2088488,
        "type": "upload",
        "etag": "846bf7cda9d76a3381eadfeae72ea3a4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681436103/avalanche2023spring/dyokkl7n6do75ayasqpz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681436103/avalanche2023spring/dyokkl7n6do75ayasqpz.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681436103/avalanche2023spring/dyokkl7n6do75ayasqpz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192258",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "1804076",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1996881,
        "duration": 8.366667,
        "rotation": 0,
        "nb_frames": 251,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:30:25.927Z" }
      }
    ],
    "title": "",
    "description": "Text animation continuation, I mapped each point as a # sign using the Pilowlava font.",
    "comments": []
  },
  {
    "_id": "nGjnxT24QhBRXjLK9",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T02:17:48.742Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "df22e892f8304f5a071b47eee00a6f35",
        "public_id": "avalanche2023spring/r9uhzk8fam0obletzbak",
        "version": 1683254650,
        "version_id": "0414e6bacd6d7f1196361cb467ff15c2",
        "signature": "30b295c24d0e188f954aefec50682434f7ac62ba",
        "width": 1169,
        "height": 1215,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T02:44:10Z",
        "tags": [],
        "bytes": 50544,
        "type": "upload",
        "etag": "7b55275b9e5c5cad32bf7d727e3f1d7b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683254650/avalanche2023spring/r9uhzk8fam0obletzbak.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683254650/avalanche2023spring/r9uhzk8fam0obletzbak.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5d8ef905d82a498f109709f3511a0131",
        "public_id": "avalanche2023spring/zwqr0cgar8ksyk3pnufi",
        "version": 1683254655,
        "version_id": "15b8fc8bcbdaafcfcde45a0236a4cc0f",
        "signature": "6cf0afe5295ae240cd20b1cf6da629f70561a7e1",
        "width": 1249,
        "height": 539,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T02:44:15Z",
        "tags": [],
        "bytes": 38530,
        "type": "upload",
        "etag": "e39f67f5764ccedc78ac1a1d030320b0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683254655/avalanche2023spring/zwqr0cgar8ksyk3pnufi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683254655/avalanche2023spring/zwqr0cgar8ksyk3pnufi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "232bd9e3b912005da60c57b24ac5e7a9",
        "public_id": "avalanche2023spring/p5j4ro4s8evxfmfuezcs",
        "version": 1683254657,
        "version_id": "bcab2acb2def3431aaeeedf3ca9cfbee",
        "signature": "35e78fbf26329994d7c64acbf8e6718171fcbdbf",
        "width": 1049,
        "height": 1210,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T02:44:17Z",
        "tags": [],
        "bytes": 343733,
        "type": "upload",
        "etag": "419c08b0b7daf3988d10a435af047c21",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683254657/avalanche2023spring/p5j4ro4s8evxfmfuezcs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683254657/avalanche2023spring/p5j4ro4s8evxfmfuezcs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T03:27:48.344Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:14:55.594Z" }
      }
    ],
    "title": "",
    "description": "DNA helix pattern! I thought this would be simple but it took sooo much longer than expected",
    "code": "helixradius = 15;\ntwistnum = 5;\ntwistheight = 100;\n\nfor (i=[0:180:180]) {\n    color([1,1,0])\n    rotate([0,0,i])\n    linear_extrude(height=twistheight*twistnum, twist=(360*twistnum), $fn=200)\n    translate([helixradius,0,0])\n    square([2,7]);\n}\n\nfor (i=[0:1:8], j=[0:1:twistnum-1]) {\n    color([i%2,0,(i+1)%2])\n    translate([0,0,(i*twistheight/8) + (j*twistheight)])\n    rotate([0,90,(i*45) - ((i%2)*90) + 11.5])\n    cylinder($fn=20, h=helixradius*2 + 1, r=1.25, center=true);\n}",
    "comments": []
  },
  {
    "_id": "nJNfKm2KaekNXxxzd",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T16:58:21.947Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a2eb9eebff098a7082ca12cc82d84d2b",
        "public_id": "avalanche2023spring/if0enge7o1daopycvhfp",
        "version": 1679590919,
        "version_id": "b493ac25387c849832ccdd2662c466bb",
        "signature": "f3932f7273c8a3767b7d784b406266d1da4b7e15",
        "width": 1150,
        "height": 700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T17:01:59Z",
        "tags": [],
        "bytes": 44615,
        "type": "upload",
        "etag": "dc8c62d8f3806816bf0ac019608beeb1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679590919/avalanche2023spring/if0enge7o1daopycvhfp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679590919/avalanche2023spring/if0enge7o1daopycvhfp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T17:32:58.704Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:02:57.303Z" }
      }
    ],
    "title": "",
    "description": "I tried recreating an abstract print I found online completely from scratch using paper.js. This took much longer than anticipated as I had to play with multiple paths and .subtract a number of times to make the irregular shapes on the right",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "It's beautiful\n",
        "created_at": { "$date": "2023-03-23T17:33:09.746Z" }
      }
    ]
  },
  {
    "_id": "nJqDLcpEvJqhjFwdb",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T08:42:44.052Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c2c3b5afd67afed5ebdcb051329d301e",
        "public_id": "avalanche2023spring/gvre7jf0acwbn6i2opip",
        "version": 1675241161,
        "version_id": "68599a7953ab704b3930a16f9a252090",
        "signature": "033dba4b30dd09075dbbe590bd79435d8840fa8b",
        "width": 1496,
        "height": 1496,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T08:46:01Z",
        "tags": [],
        "bytes": 134559,
        "type": "upload",
        "etag": "3db65c015606ab25499c7356e4587b8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675241161/avalanche2023spring/gvre7jf0acwbn6i2opip.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675241161/avalanche2023spring/gvre7jf0acwbn6i2opip.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e7af2276be4e8a052a4e7c0a63095c6c",
        "public_id": "avalanche2023spring/hlm55vgm09vlekbfdrqm",
        "version": 1675241165,
        "version_id": "2a0ff97c23b45c58b08c0c6d5cb70a28",
        "signature": "8e1e8e5219c1f0c8c7641104f1e102cc1da3efea",
        "width": 1496,
        "height": 1496,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T08:46:05Z",
        "tags": [],
        "bytes": 94375,
        "type": "upload",
        "etag": "5458b8a2ca42564db195dbdb55752234",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675241165/avalanche2023spring/hlm55vgm09vlekbfdrqm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675241165/avalanche2023spring/hlm55vgm09vlekbfdrqm.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T21:33:49.212Z" }
      }
    ],
    "title": "",
    "description": "My response to Julia's instructions! I think I missed or messed up one or two of the steps, but it was fun 🌸",
    "comments": []
  },
  {
    "_id": "nKjfd3yhLowYGLNiR",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T23:28:09.313Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "175424359f3e7306e7d83aaa5f742cde",
        "public_id": "avalanche2023spring/uo8kl5h346y2wzvi1jgl",
        "version": 1681428519,
        "version_id": "e24a3307df07714ac535920aa14f0c87",
        "signature": "e2427c807f45f163c7f0ee921b8f85fa9b57a7f8",
        "width": 1728,
        "height": 1560,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T23:28:39Z",
        "tags": [],
        "bytes": 746731,
        "type": "upload",
        "etag": "77832fad870ed45b05e26c5c1752f3f6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681428519/avalanche2023spring/uo8kl5h346y2wzvi1jgl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681428519/avalanche2023spring/uo8kl5h346y2wzvi1jgl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T23:49:10.028Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T23:58:28.041Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T02:41:59.088Z" }
      }
    ],
    "title": "",
    "description": "I was playing around with Tracery and wanted to see what I could do with HTML tags but ran out of time! I want to continue to explore this though",
    "comments": []
  },
  {
    "_id": "nTrMDWRuct77gGJpA",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T06:26:28.602Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c73a21d0e858422ed80f2e7f38bc50e1",
        "public_id": "avalanche2023spring/ch0izxyckn2cdhvuim1j",
        "version": 1678429599,
        "version_id": "c45e16203e6cc1198278f439ff0b3d66",
        "signature": "3ccacbc48911ef79b47b3d2b12ddf8256a84e6cb",
        "width": 1587,
        "height": 1293,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T06:26:39Z",
        "tags": [],
        "bytes": 3839671,
        "type": "upload",
        "etag": "764d37f246f1f40f822062860dea3602",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678429599/avalanche2023spring/ch0izxyckn2cdhvuim1j.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678429599/avalanche2023spring/ch0izxyckn2cdhvuim1j.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-03-10T08:47:46.809Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:49:55.635Z" }
      }
    ],
    "title": "",
    "description": "Continuing the flower theme this week - adapting Sahiti's sketch to control the scale and colours of the flowers based on the greyscale and x/y positions of the pixels.",
    "code": "let img;\n\nfunction preload() {\n  img = loadImage(\"sahiti.png\");\n}\n\nfunction setup() {\n  createCanvas(400, 326);\n  noLoop();\n  rectMode(CENTER);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(255);\n\n  // image(img, 0, 0);\n\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y+=3) {\n    for (let x = 0; x < img.width; x+=3) {\n\n      let col = img.get(x, y);\n      console.log(col);\n\n      let size = map(lightness(col), 0, 100, 3, 1);\n      console.log(size);\n\n      let offset = width/img.width;\n      let colRed = map(lightness(col), 0, 100, 0, 255);\n      let flowerCol = color(colRed, 0, 255 * noise(x,y));\n\n      let tX = x * offset;\n      let tY = y * offset;\n\n      push();\n\n      translate(tX, tY);\n      scale(size);\n      rotate(random(360));\n      noStroke();\n        \n      let xPos = 0;\n      let yPos = 0;\n\n      fill(flowerCol);\n      ellipse(xPos-(offset/3),yPos-(offset/3), offset/1.5)\n      ellipse(xPos+(offset/3),yPos-(offset/3), offset/1.5)\n      ellipse(xPos-(offset/3),yPos+(offset/3), offset/1.5)\n      ellipse(xPos+(offset/3),yPos+(offset/3), offset/1.5)\n\n      fill(0);\n      ellipse(xPos, yPos, offset/3);\n\n      pop();\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "ndrzQoTtx3jM7HnpS",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T05:44:11.17Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "be29576a3ead67e47bd4ef9ccff04759",
        "public_id": "avalanche2023spring/g4tnkjkc6yinv39elwfw",
        "version": 1683265579,
        "version_id": "1ce7b8194985c09e64327ac69050af19",
        "signature": "11a8b86c5f17989ef3f3d799a1f51efc73e27449",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T05:46:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 17683528,
        "type": "upload",
        "etag": "15bc314c7b3ecb8a8f039a8c397e77f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683265579/avalanche2023spring/g4tnkjkc6yinv39elwfw.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683265579/avalanche2023spring/g4tnkjkc6yinv39elwfw.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683265579/avalanche2023spring/g4tnkjkc6yinv39elwfw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "14091616",
          "time_base": "1/600"
        },
        "frame_rate": 30,
        "bit_rate": 14099823,
        "duration": 10.033333,
        "rotation": 0,
        "nb_frames": 301,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d61ada21d54dc4767ad0028fd03219ae",
        "public_id": "avalanche2023spring/tixrusjihz2sx1bkpsv8",
        "version": 1683265602,
        "version_id": "2edfa4b3312af7152dabba6b0d96a055",
        "signature": "61aec9a72e3781f720bc65594631877c39787b7d",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T05:46:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 14093826,
        "type": "upload",
        "etag": "e38bac6c87085459c18a15debbad7bb8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683265602/avalanche2023spring/tixrusjihz2sx1bkpsv8.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683265602/avalanche2023spring/tixrusjihz2sx1bkpsv8.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683265602/avalanche2023spring/tixrusjihz2sx1bkpsv8.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "13471394",
          "time_base": "1/600"
        },
        "frame_rate": 30,
        "bit_rate": 13476167,
        "duration": 8.366667,
        "rotation": 0,
        "nb_frames": 251,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:23.21Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:16:03.613Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T10:20:42.637Z" }
      }
    ],
    "title": "",
    "description": "No code 3D explorations with cinema 4D.",
    "comments": []
  },
  {
    "_id": "nhfdhpe4YeRAk4n4S",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-07T18:14:28.006Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b21f2679a5cd646cf1aa4af44b2b3568",
        "public_id": "avalanche2023spring/nuuqjjvrdeqoxa2e19ml",
        "version": 1678212969,
        "version_id": "9b78453287d845e833a85b7043fc01cf",
        "signature": "05a9d58ece61da3a5b9525880a91aceaa540d724",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-07T18:16:09Z",
        "tags": [],
        "bytes": 2438397,
        "type": "upload",
        "etag": "e5dbeb24a66e6d5dd18a1dd7e5bfef82",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678212969/avalanche2023spring/nuuqjjvrdeqoxa2e19ml.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678212969/avalanche2023spring/nuuqjjvrdeqoxa2e19ml.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T23:14:26.784Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T00:50:09.647Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:16.242Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T17:19:18.842Z" }
      }
    ],
    "title": "",
    "description": "Playing with fire - here is the image I created for Keren for the pair challenge",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Really like this!",
        "created_at": { "$date": "2023-03-09T19:50:55.191Z" }
      }
    ]
  },
  {
    "_id": "nivBb7Gove8ijJThQ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T02:11:19.729Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c8880d00531d40c8012e2275bc5fc27f",
        "public_id": "avalanche2023spring/fpyr6qgkdkqohvilbouf",
        "version": 1675217502,
        "version_id": "64324b92c37fdd1187f83c8a6cd5b024",
        "signature": "307d1bfd5f157fc9dfedc5ba0739cfe2c2a7a211",
        "width": 1749,
        "height": 2481,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-01T02:11:42Z",
        "tags": [],
        "bytes": 607181,
        "type": "upload",
        "etag": "c108db34cd029e6d005a98f573f72a46",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675217502/avalanche2023spring/fpyr6qgkdkqohvilbouf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675217502/avalanche2023spring/fpyr6qgkdkqohvilbouf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T06:08:02.727Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T01:12:54.18Z" }
      }
    ],
    "title": "",
    "description": "Constellation map with Shristi's instructions 🤯",
    "comments": []
  },
  {
    "_id": "nk3WkuFz7zsBLc7HN",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T00:44:21.212Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b793fe1a68fb07944502807a9daa19e1",
        "public_id": "avalanche2023spring/v5au9g0lqahvztdvanh4",
        "version": 1682037992,
        "version_id": "085b5e9dc1d9d09ff6678cc2eb54d1e7",
        "signature": "d80d5ff490b11970c7a526964e34bca37c0e1897",
        "width": 1520,
        "height": 856,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-21T00:46:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 12956545,
        "type": "upload",
        "etag": "091364eabd36e8597da5d6204e9bea83",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682037992/avalanche2023spring/v5au9g0lqahvztdvanh4.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682037992/avalanche2023spring/v5au9g0lqahvztdvanh4.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682037992/avalanche2023spring/v5au9g0lqahvztdvanh4.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126015",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "9447993",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 10949192,
        "duration": 9.466667,
        "rotation": 0,
        "nb_frames": 629,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7b3c7c8f8cfcbb872fecd110d0072ebe",
        "public_id": "avalanche2023spring/wj1ntgb9pmd6ypg84le5",
        "version": 1682038359,
        "version_id": "cab7531036abd614687c6dff22a6239f",
        "signature": "b4622de1f9168c4e1f1365c3f7f73654a6e5fe67",
        "width": 1474,
        "height": 1472,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T00:52:39Z",
        "tags": [],
        "bytes": 362398,
        "type": "upload",
        "etag": "eb79a4546873bd4cd79685b2404d8f86",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682038359/avalanche2023spring/wj1ntgb9pmd6ypg84le5.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682038359/avalanche2023spring/wj1ntgb9pmd6ypg84le5.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c627ba9bdf9f4f59ae922d7a503888f9",
        "public_id": "avalanche2023spring/enhvxrmvo7pqed9facyu",
        "version": 1682038603,
        "version_id": "8b9b8d7ce49432e7d9f6e351ace16e39",
        "signature": "09104555dd221c39aef254860e8e187aa53c3dc0",
        "width": 1250,
        "height": 1138,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T00:56:43Z",
        "tags": [],
        "bytes": 284082,
        "type": "upload",
        "etag": "4f42703fab861b7cb8aee431f28c51b1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682038603/avalanche2023spring/enhvxrmvo7pqed9facyu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682038603/avalanche2023spring/enhvxrmvo7pqed9facyu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T01:42:39.703Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:24.035Z" }
      }
    ],
    "title": "",
    "description": "**ChatGPT vs Google Search on Unity Debugging: Chat GPT wins by -6 Queries!** Encountered a frustrating problem where I couldn't get my canvas drop-downs on Unity to drop down. I had used drop-downs fairly easily before, so I couldn't wrap my head around why they weren't working. I started by using Google's search, leading to Unity forums, Reddit threads and Stack Overflow, but none of them led me in the right directions. I looked up tutorials on Google Search and they didn't help either. Post exactly 11 search queries, I switched to ChatGPT, not expecting much because it was probably trained on much of the same data. However its ability to summarize all possibilities for the error helped me narrow down to arrive at a the heart of the problem AND get detailed instructions to solve the problem in 5 questions. That is 6 queries less than Google Search!",
    "comments": []
  },
  {
    "_id": "nkXBdGHwBv4wAghwg",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T03:49:22.262Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5e511626f8cf22d442f635b9149d9985",
        "public_id": "avalanche2023spring/inzcigniddmneykn00zv",
        "version": 1679629816,
        "version_id": "744028c8842072a886369ba559bc30c7",
        "signature": "2c88ea93008e5d732be10234acf09335a773fd7c",
        "width": 1678,
        "height": 1440,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T03:50:16Z",
        "tags": [],
        "bytes": 492621,
        "type": "upload",
        "etag": "73abe7d90d80e4dbbd1b03e16661c024",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679629816/avalanche2023spring/inzcigniddmneykn00zv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679629816/avalanche2023spring/inzcigniddmneykn00zv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c90d106e061386ef6b77241bc0b16267",
        "public_id": "avalanche2023spring/nh4etraafxnjgonq3ibn",
        "version": 1679629819,
        "version_id": "d49d70ffcd06898c8611842f0d6eae18",
        "signature": "1457ac3f4bb697d1b7b308f0e2db5530f5eafca6",
        "width": 1680,
        "height": 1438,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T03:50:19Z",
        "tags": [],
        "bytes": 483170,
        "type": "upload",
        "etag": "0987720226c65d5bdd765a7ca394e913",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679629819/avalanche2023spring/nh4etraafxnjgonq3ibn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679629819/avalanche2023spring/nh4etraafxnjgonq3ibn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T05:27:14.265Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T16:13:13.668Z" }
      }
    ],
    "title": "",
    "description": "Exploring typography and blend modes in paper.js. I was trying to capture the often chaotic feeling of New York in this piece!",
    "comments": []
  },
  {
    "_id": "nscfxfpnDYzKeAYuv",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T07:10:36.993Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e415c24299650b79e21fd3885e740948",
        "public_id": "avalanche2023spring/e9to1p1sd8ocfmirkukj",
        "version": 1676013080,
        "version_id": "7db7bf78aebc675c9fc1df262695dcf0",
        "signature": "a0c54232db3893fa99be42f3dd37ec494931a7d6",
        "width": 1084,
        "height": 1178,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T07:11:20Z",
        "tags": [],
        "bytes": 50993,
        "type": "upload",
        "etag": "23c0b82c1c366b2fd8cc24bf1b00d102",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676013080/avalanche2023spring/e9to1p1sd8ocfmirkukj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676013080/avalanche2023spring/e9to1p1sd8ocfmirkukj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T13:05:45.069Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T14:19:09.792Z" }
      }
    ],
    "title": "",
    "description": "Recreating Piet Modrian's work!",
    "inspiration_name": "Piet Modrian",
    "inspiration_url": "https://www.artbook.com/blog-mondrian-a-life.html",
    "comments": []
  },
  {
    "_id": "nuwRwhCMf3bvFksgJ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-19T22:00:59.067Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "991171bd90e9e94a952e47b260dc7016",
        "public_id": "avalanche2023spring/ra7t5nmulv3qehseffkw",
        "version": 1681941672,
        "version_id": "b05089aea05d79d828669c1d4c9b056c",
        "signature": "650709e4717566bcc8f754b057413ce6eb35b2f7",
        "width": 1280,
        "height": 720,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-19T22:01:12Z",
        "tags": [],
        "bytes": 301208,
        "type": "upload",
        "etag": "34b608eef481b58d84e1038b9e66a202",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681941672/avalanche2023spring/ra7t5nmulv3qehseffkw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681941672/avalanche2023spring/ra7t5nmulv3qehseffkw.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cad0d7b73ccb21e1645646724f55e9dc",
        "public_id": "avalanche2023spring/qg1f0cdhbm5imufp5bbt",
        "version": 1681941683,
        "version_id": "90bcfa0b0dd15658c478632979f725ab",
        "signature": "324a8731747e354733a402fbabbe68e80657992c",
        "width": 1493,
        "height": 840,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T22:01:23Z",
        "tags": [],
        "bytes": 255829,
        "type": "upload",
        "etag": "e89467e7944c33ef79b6b36c90891d69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681941683/avalanche2023spring/qg1f0cdhbm5imufp5bbt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681941683/avalanche2023spring/qg1f0cdhbm5imufp5bbt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T19:55:42.283Z" }
      }
    ],
    "title": "",
    "description": "So I tried the same thing that I did with ChatGPT this time using Phind. Immediately, this was a lot more useful (and less scary) than ChatGPT. \n\nFor one, Phind is much better at outputting the networks visually than ChatGPT. This is a LOT more convenient to work with than ChatGPT's text-only approach.\n\nPhind did have the same issue as ChatGPT though, where it would create operators that didn't exist in TD. However, it was much better at correcting itself when you specified that the operator didn't exist. I couldn't tell if this was a result of the different ways that ChatGPT and Phind work, but the results from Phind were a lot more useful than what I would get from ChatGPT.\n\nWhat I also really liked about Phind is that it was more or less summarizing the results from a Google search and, more importantly, it gave you the results it was pulling from. This made it much easier to go about researching and troubleshooting specifically what I needed whenever I ran into an issue",
    "comments": []
  },
  {
    "_id": "nv72EZkKXtrRuzLck",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T04:45:22.534Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6fffc6d5813d9054d04eb3a73ed45ba4",
        "public_id": "avalanche2023spring/p8v707tqq2eadv1ose88",
        "version": 1676522726,
        "version_id": "c945a8dfee9bb8000648eaac14ec90fe",
        "signature": "80e30046e41dd43e67f43083f3d90e1908ccc68b",
        "width": 576,
        "height": 570,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T04:45:26Z",
        "tags": [],
        "bytes": 193140,
        "type": "upload",
        "etag": "dccd7ba5485e77105361155e00d8b6fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676522726/avalanche2023spring/p8v707tqq2eadv1ose88.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676522726/avalanche2023spring/p8v707tqq2eadv1ose88.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0246bd421f93f25b2e416c5e2431e393",
        "public_id": "avalanche2023spring/exvy8jtongeus9lkwh3y",
        "version": 1676522731,
        "version_id": "a7dba57ca685719e6df4d15b0653f888",
        "signature": "d83c40b78d8c6d3cf83d04ad868a4f1b02dcbade",
        "width": 426,
        "height": 388,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T04:45:31Z",
        "tags": [],
        "bytes": 103299,
        "type": "upload",
        "etag": "83f75218fea589083ee615cbd9ebf3fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676522731/avalanche2023spring/exvy8jtongeus9lkwh3y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676522731/avalanche2023spring/exvy8jtongeus9lkwh3y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dd08a7cfe9afa43c6e95a879c19a3c75",
        "public_id": "avalanche2023spring/uf0wpaoziqtsz7yezdlg",
        "version": 1676523042,
        "version_id": "4259945b67bfe635af2fd5f3c98b7357",
        "signature": "31ae71b4829f41647aa48a665c620731e6287919",
        "width": 814,
        "height": 808,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T04:50:42Z",
        "tags": [],
        "bytes": 690294,
        "type": "upload",
        "etag": "f7e5d74c95474425f3db35db0e9d6233",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676523042/avalanche2023spring/uf0wpaoziqtsz7yezdlg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676523042/avalanche2023spring/uf0wpaoziqtsz7yezdlg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T04:47:32.49Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T05:06:24.403Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:29.84Z" }
      }
    ],
    "title": "",
    "description": "WEEK 3 (3/4)\" my cool bendy thingy? idk, it started off as a bunch of lines but it didn't look as good but i liked the way this looked in the end.",
    "comments": [],
    "inspiration_name": "Gene Kogans Site",
    "inspiration_url": "https://genekogan.com/code/p5js-perlin-noise/"
  },
  {
    "_id": "nvDu9yo2FmoEeWijp",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T22:50:28.136Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f5e00e357b2437ec16074539d9542d9f",
        "public_id": "avalanche2023spring/yxngnixlrwbopwqtaliy",
        "version": 1675983059,
        "version_id": "900a7d4c8b8b4de60bee204dfd78ba33",
        "signature": "c5d7a4f9a4747bfe4b575e231167654745ea1eeb",
        "width": 1060,
        "height": 1070,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T22:50:59Z",
        "tags": [],
        "bytes": 87631,
        "type": "upload",
        "etag": "5d31a26aba5783d6a270c75546e76a34",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675983059/avalanche2023spring/yxngnixlrwbopwqtaliy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675983059/avalanche2023spring/yxngnixlrwbopwqtaliy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:44:34.037Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T13:05:38.448Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge with Rama and Aabah! We created an abstract scene of a rainy day.",
    "comments": []
  },
  {
    "_id": "nyhprKtogNHPxj5xK",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-30T19:26:29.717Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c32ab1a6f7f54278e1706e9dc91f1772",
        "public_id": "avalanche2023spring/vkdc5jqemzgy2jxuckrd",
        "version": 1675106793,
        "version_id": "a17c8d7273394c0043895e9130e229d4",
        "signature": "f7ee39cd0650a9aaf25a491302559d3bc95a9587",
        "width": 2457,
        "height": 1967,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-30T19:26:33Z",
        "tags": [],
        "bytes": 2228523,
        "type": "upload",
        "etag": "3076cf6d348c321577f40ff21bfb5797",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675106793/avalanche2023spring/vkdc5jqemzgy2jxuckrd.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675106793/avalanche2023spring/vkdc5jqemzgy2jxuckrd.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T02:04:12.998Z" }
      }
    ],
    "title": "",
    "description": "My sketch for John's instructions",
    "comments": []
  },
  {
    "_id": "o87S8RtJxtajBSFTN",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-12T23:17:46.519Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3b2ab1a08fc5eedf2d0317ee65695e5f",
        "public_id": "avalanche2023spring/pa1s9bqw2yisgl1znkpd",
        "version": 1676244156,
        "version_id": "e1bedd062e8efbc9da600cb3af96130c",
        "signature": "fb47df667ecc38df1ce410093759b50a3accf303",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-12T23:22:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 14112103,
        "type": "upload",
        "etag": "b8e5cbf303e2e9d3a1fd69f30bc4d600",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676244156/avalanche2023spring/pa1s9bqw2yisgl1znkpd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676244156/avalanche2023spring/pa1s9bqw2yisgl1znkpd.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676244156/avalanche2023spring/pa1s9bqw2yisgl1znkpd.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "26555632",
          "dar": "794:797",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 26592114,
        "duration": 4.2455,
        "rotation": 0,
        "nb_frames": 255,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-13T20:18:08.953Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T08:35:08.553Z" }
      }
    ],
    "title": "",
    "description": "Ripples caused by moving the mouse - using noise\nBased on the class activity sketch",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(800, 800);\n}\n\nlet movement = 0;\n\nfunction draw() {\n  \n  \n  background(0);\n  \n  ripple(300, 400, 6, 120, 250, 255);\n  ripple(600, 200, 10, 20, 50, 255);\n  ripple(1200, 300, 12, 170, 20, 255);\n\n}\n\nfunction ripple(c, r, a, R, G, B){\n   // const steps = 200;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    // const radius = 300;\n  \n  stroke(R, G, B);\n   for (let step = 1; step <= c; step++) {\n    const a1 = map(step - 1, 0, c, 0, a*PI);\n    let a2 = map(step, 0, c, 0,  a*PI);\n    if (a2 >= a * PI) a2 -= a * PI;\n     \n    let x1 = centerX + sin(a1) * r ;\n    let x2 = centerX + sin(a2) * r;\n    let y1 = centerY + cos(a1) * r;\n    let y2 = centerY + cos(a2) * r;\n      \n      // \n      x1 += (noise(a1, mouseX, frameCount * 0.01) - 0.5) * 150;\n       x2 += (noise(a2, mouseX, frameCount * 0.01) - 0.5) * 150;\n       y1 += (noise(a1, mouseY, frameCount * 0.01) - 0.5) * 150;\n       y2 += (noise(a2, mouseY, frameCount * 0.01) - 0.5) * 150;\n    \n     line(x1, y1, x2, y2)\n   }\n}",
    "comments": []
  },
  {
    "_id": "o8X5L6r4DWw8kT8jE",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T05:37:46.481Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e8a3b4dcaeb754c24e747d72402b2d4d",
        "public_id": "avalanche2023spring/p1xbl7iiitdjd0d88bkj",
        "version": 1675662047,
        "version_id": "9bb3d39662a71f0c2dc2ffbda3def89d",
        "signature": "1efa738341ca6373002e79b3a18fcdf592ae3213",
        "width": 1600,
        "height": 2200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-06T05:40:47Z",
        "tags": [],
        "bytes": 161103,
        "type": "upload",
        "etag": "c8601a6b1d2523706ffbf72cf17dcdd3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675662047/avalanche2023spring/p1xbl7iiitdjd0d88bkj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675662047/avalanche2023spring/p1xbl7iiitdjd0d88bkj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T06:15:34.907Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T16:36:45.489Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T17:44:40.603Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:08:32.235Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T21:24:46.911Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T14:43:50.957Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Anni Albers. I was stuck a little with how to control the random more here, but it was cool how some of the results got pretty close using just random( ).",
    "inspiration_name": "Anni Albers",
    "inspiration_url": "https://commons.wikimedia.org/wiki/File:Anni_Albers_%281899%E2%80%931994%29,_Design_for_a_Silk_Tapestry,_1926.jpg",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gridSizeX = 12;\nlet gridSizeY = 9;\nlet gridWidth = 50;\nlet gridHeight = 100;\nlet margin = 100;\n\nfunction setup() {\n  createCanvas(gridSizeX * 50 + 200, gridSizeY * 100 + 200);\n}\n\nfunction draw() {\n  noLoop();\n  background(220);\n  // let colors1 = [color(176, 173, 138), color(35, 32, 33), color(196, 193, 186), color(158, 149, 144), color(165, 153, 139), color(134, 131, 127), color(146, 135, 115) , color(205, 186, 166), color(211, 198, 145)];\n  let colors1 = [color(176, 173, 138), color(35, 32, 33), color(196, 193, 186), color(158, 149, 144), color(165, 153, 139), color(134, 131, 127), color(146, 135, 115) , color(205, 186, 166)];\n  let colors2 = [color(176, 173, 138), color(35, 32, 33), color(196, 193, 186), color(158, 149, 144), color(165, 153, 139), color(134, 131, 127), color(146, 135, 115)];\n\n  for (let i = 0; i < gridSizeY; i++) {\n        for (let j = 0; j < gridSizeX; j++) {\n          let xpos = j * gridWidth + margin;\n          let ypos = i * gridHeight + margin;\n\n          let randomColor1 = colors1[floor(random(colors1.length))];\n          let randomColor2 = colors2[floor(random(colors2.length))];\n\n          stroke(random(7,20), random(5), random(5), random(130, 200));\n          strokeWeight(random(10)/100);\n          rect(xpos, ypos, gridWidth, gridHeight);\n\n          for (let k = 0; k < 12; k++) {\n              print(k % 2);\n              if (k % 2 === 1) {\n                fill(randomColor2);\n              } else {\n                fill(randomColor1);\n              }\n              rect(xpos, ypos + (gridHeight / 12) * k, gridWidth, gridHeight / 12);\n          }\n        }\n      }\n}",
    "comments": []
  },
  {
    "_id": "o92GXQx82cyekaCbf",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T21:36:21.956Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "755558e12f39f9e6a89be418914c7c8b",
        "public_id": "avalanche2023spring/prubtoyvk1hcods4n2ol",
        "version": 1675719385,
        "version_id": "383a9a86e75e680dbaf7476f2ad6b854",
        "signature": "1596191da74a9312f3f9f998a355b4ebb75fc00e",
        "width": 895,
        "height": 897,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-06T21:36:25Z",
        "tags": [],
        "bytes": 181348,
        "type": "upload",
        "etag": "c7b6c0fedd71240eca2c1321afd7d113",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675719385/avalanche2023spring/prubtoyvk1hcods4n2ol.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675719385/avalanche2023spring/prubtoyvk1hcods4n2ol.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T00:15:34.889Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T03:25:25.197Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T20:15:38.852Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T21:45:06.477Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Piet Mondrian's Tableau No. 2/Composition No. VII",
    "inspiration_name": "Tableau No. 2/Composition No. VII",
    "inspiration_url": "https://www.guggenheim.org/artwork/3007",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Inspiration: Piet Mondrian's Tableau No. 2/Composition No. VII\n// https://www.guggenheim.org/artwork/3007\n\nlet shapes;\nlet num = 50;\n// let n;\n// let a;\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  //background(205);\n  //background(232, 199, 70);\n  //background(204, 175, 61);\n  background(166, 155, 111),\n  \n  generateRectangles();\n  generateBorder();\n  generateCorners();\n}\n\nfunction generateRectangles() {\n  //n = floor(random(0, 1)); - was supposed to generate variables to determine values for later use\n  \n  //Generate Gold vertical rectangles\n  \n  push();\n  for(i = 0; i < num; i++) {\n    fill(204, 175, 61);\n    stroke(1);\n    strokeWeight(3);\n    rect(random(0, 500), random(0, 600), 50, 100); \n  }\n  pop();\n  \n  //Generate Silver vertical rectangles\n  \n  push();\n  for(i = 0; i < num + 15; i++) {\n    fill(205), random (80, 100);\n    stroke(1);\n    strokeWeight(3);\n    rect(random(0, 500), random(0, 600), 50, 100);  \n  }\n  pop();\n  \n  //Generate Gold horizontal rectangles\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(232, 199, 70);\n    stroke(1);\n    strokeWeight(3);\n    rect(random(0, 500), random(-600, 0), 50, 100); \n  }\n  pop();\n  \n  //Generate Silver horizontal rectangles\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num + 15; i++) {\n    fill(205, random (80, 100));\n    stroke(1);\n    strokeWeight(2);\n    rect(random(0, 500), random(-600, 0), 50, 100); \n  }\n  pop();\n}\n\nfunction generateBorder() {\n  \n  //Left Border\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num + 50; i++) {\n    fill(205, random(65, 100));\n    rect(random(0, 700), random(0, 50), 50, 100); \n  }\n  pop();\n  \n  //Right Border\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num + 50; i++) {\n    fill(205, random(65, 100));\n    rect(random(0, 700), random(-600, -650), 50, 100); \n  }\n  pop();\n}\n\nfunction generateCorners() {\n  \n  //Upper Left Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(0, 150), random(0, -100), 50, 100); \n  }\n  pop();\n  \n  //Upper Right Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(0, 150), random(-500, -600), 50, 100); \n  }\n  pop();\n  \n  //Lower Left Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(500, 600), random(0, -100), 50, 100); \n  }\n  pop();\n  \n  //Lower Right Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(500, 600), random(-500, -600), 50, 100); \n  }\n  pop();\n}\n\n//I wanted to add a variable that would randomize if the rectangles were horizontal or vertial but I wasn't able to properly implement this\n\n/* if(a == 1) {\n      rotate(90);\n    } else if (a == 0) {\n        rotate(0);\n      } */",
    "comments": []
  },
  {
    "_id": "oEt4bm9Hn5JLFupso",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T03:29:47.771Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "06abe48dd3673f05798f90991cd4a9d1",
        "public_id": "avalanche2023spring/jnslkkwcv8h0sgudrw9i",
        "version": 1680751804,
        "version_id": "bce3efc059761f46621d160f8c511b3a",
        "signature": "6c91b5d1c0de6d75f032c925d10a896b2872b5e9",
        "width": 1768,
        "height": 1666,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-06T03:30:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 13004535,
        "type": "upload",
        "etag": "97d87f745580ed1ad80279a610f3f5b3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680751804/avalanche2023spring/jnslkkwcv8h0sgudrw9i.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680751804/avalanche2023spring/jnslkkwcv8h0sgudrw9i.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680751804/avalanche2023spring/jnslkkwcv8h0sgudrw9i.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128107",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "High",
          "bit_rate": "6299680",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6441874,
        "duration": 16.15,
        "rotation": 0,
        "nb_frames": 969,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "969bab9a267885ae1d7561cc99829dcb",
        "public_id": "avalanche2023spring/z5xw2antmtnpqoihdx2s",
        "version": 1680751860,
        "version_id": "d62e38f5ac67cce6f7ad1034428277f8",
        "signature": "03211f87e4430205c02838571a0c5601d62ce325",
        "width": 2472,
        "height": 1682,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-06T03:31:00Z",
        "tags": [],
        "bytes": 1572007,
        "type": "upload",
        "etag": "18ac86f02170df9afddeca6002c083c5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680751860/avalanche2023spring/z5xw2antmtnpqoihdx2s.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680751860/avalanche2023spring/z5xw2antmtnpqoihdx2s.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-06T20:15:13.131Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:32:57.587Z" }
      }
    ],
    "title": "",
    "description": "using everyday objects instead of arrow keys to play a game of personalized patterns. Ran out of time to work on color profiles. I love teachable machine for all its flaws, and it works for prototyping. Might try using poseNet next!",
    "inspiration_name": "Dan Shiffman's machine learning playlist",
    "inspiration_url": "https://www.youtube.com/watch?v=kwcillcWOg0&list=PLRqwX-V7Uu6YPSwT06y_AEYTqIwbeam3y&index=13",
    "code": "let video;\nlet classifier;\nlet label;\n//load model\nfunction preload(){\n  classifier = ml5.imageClassifier('https://teachablemachine.withgoogle.com/models/5dy6qiirj/')\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // background(255, 200, 200);\n  background(0);\n  rectMode(CENTER);\n  textAlign(CENTER);\n  video = createCapture(VIDEO);\n  video.hide();\n  classifyVideo();\n}\nfunction  classifyVideo(){\n  classifier.classify(video, gotResults);\n}\n\nfunction gotResults(error,results){\n    if(error){\n      console.error(error);\n      return\n    }\n      label = results[0].label;\n      classifyVideo()\n    }\n\nfunction draw() {\n  noStroke();\n  const rows = 50;\n  const cols = 50;\n  const squareSize = 30;\n  image(video,0,0,video.width*0.2,video.height*0.2);\n\n  for (let i = 50; i < width - 50; i = i + 50) {\n    for (let j = 50; j < height - 50; j = j + 50) {\n      const x = j * squareSize; // Calculate the x position of the square\n      const y = i * squareSize;\n       fill(0);\n      rect(width/2,10,40,20);\n      fill(255);\n      text(label, width/2, 10);\n      \n      //LEFT KEY\n      if (label == 'Up') {\n      fill(\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50\n        );\n         ellipse(i, j, 20, 20);\n      }\n\n      if (label == 'Right') {\n        background(0);\n        //    fill(random(0,130),random(0,100),random(150,250));\n        //     push();\n        //     translate(x + squareSize / 2, y + squareSize / 2);\n        //     rotate(PI/6);\n        //     rectMode(CENTER);\n        //     rect(i,j,30,30);\n        //     pop();\n      }\n      if (label == 'Down') { //nice colors\n        fill(\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50\n        );\n\n        ellipse(i, j, 50, 30);\n      }\n      if (label == 'Left') {\n        //change colors\n        fill(\n         random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50\n        );\n\n        ellipse(i, j, 30, 50);\n      }\n    }\n  }\n}\n  \n  class Me {\n  constructor() {\n    this.x = 200;\n    this.y = height - 50;\n    this.w = 50;\n    this.h = 50;\n  }\n\n  body() {\n    // fill(130, 210, 10);\n    // rect(this.x, this.y, this.w, this.h);\n    image(mc, this.x, this.y, this.w, this.h);\n  }\n  // home() {\n  //    if (scene == 4) {\n  //      this.y = height / 2;\n  //    }\n\n  move() {\n    if (keyIsDown(37)) {\n      this.x -= 3;\n    }\n    if (keyIsDown(39)) {\n      this.x += 3;\n    }\n    if (keyIsDown(40)) {\n      this.y += 3;\n    }\n    if (keyIsDown(38)) {\n      this.y -= 3;\n    }\n  }\n  }",
    "comments": []
  },
  {
    "_id": "oLAfxjepWSTkKyZ9j",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-28T05:52:35.15Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f8d23f162b575ed120d123db5de44662",
        "public_id": "avalanche2023spring/qph7zsaks9m79trmze86",
        "version": 1677563593,
        "version_id": "05988a973774147f12b04745d6d7ef6a",
        "signature": "2f932f7bdfe9584139fd8b82d4c29cc63ac1b42c",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-28T05:53:13Z",
        "tags": [],
        "bytes": 69463,
        "type": "upload",
        "etag": "d40c9d7691df94e6cdf15f1cdd3789bd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677563593/avalanche2023spring/qph7zsaks9m79trmze86.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677563593/avalanche2023spring/qph7zsaks9m79trmze86.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "655df767c6e1241f7a42cdc61f1037fa",
        "public_id": "avalanche2023spring/x2rrpjajxnrwlpp5ukby",
        "version": 1677563630,
        "version_id": "8f9030429a026a01d95f4acc171eab9a",
        "signature": "5bc98bf70e40e76a52c12a3037786617a94e04df",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-28T05:53:50Z",
        "tags": [],
        "bytes": 72850,
        "type": "upload",
        "etag": "c4fbe7ea7c55f0a083d49961bb0a26e3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677563630/avalanche2023spring/x2rrpjajxnrwlpp5ukby.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677563630/avalanche2023spring/x2rrpjajxnrwlpp5ukby.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "750d5876ef97687cac7dae3768d00451",
        "public_id": "avalanche2023spring/o9gt2ixusecqekg6bkpo",
        "version": 1677563633,
        "version_id": "a99ae67acc778915e4855098c9e6e4d1",
        "signature": "10c05884054964d2ef84f8510e85172ea6057cd2",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-28T05:53:53Z",
        "tags": [],
        "bytes": 70100,
        "type": "upload",
        "etag": "45322989ecf6edb33e31e4604c0df6ba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677563633/avalanche2023spring/o9gt2ixusecqekg6bkpo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677563633/avalanche2023spring/o9gt2ixusecqekg6bkpo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:09.617Z" }
      }
    ],
    "title": "",
    "description": "**Challenge 1**",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(\"rgb(50,50,50)\");\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 100; i++) \n  {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    let x = noise(i*10, 0)*(width);\n    let y = noise(i*40, 5)*(height);\n\n    // the diameter shouldn't always be 10, it needs to vary\n    // needs to vary 5-20, seems to be evenly distributed\n    // small circles seemed to be drawn first!\n    // let diameter = 10;\n    let diameterNoise = max(noise(i, 1), noise(i, 5));\n    let diameter = diameterNoise*i/4.5 + 6;\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    let hue = diameter*15;\n    console.log(hue);\n    fill(hue, 100, 100);\n    ellipse(x, y, diameter, diameter);\n    \n  }\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "oLF4yci8cujuzQeTt",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T04:54:57.622Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f5aa5a9fca0e12d149199aa7498aeaa6",
        "public_id": "avalanche2023spring/gmk7ziztxrtbezymztvv",
        "version": 1680238512,
        "version_id": "ab602c3ce538135842d339e95e374df4",
        "signature": "aee93e147becb3c59196516a12d5aba9e2158d09",
        "width": 2076,
        "height": 512,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T04:55:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 1920542,
        "type": "upload",
        "etag": "7a8872d1a86cc52d717fb3f081cabd30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680238512/avalanche2023spring/gmk7ziztxrtbezymztvv.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680238512/avalanche2023spring/gmk7ziztxrtbezymztvv.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680238512/avalanche2023spring/gmk7ziztxrtbezymztvv.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127206",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "649406",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1198777,
        "duration": 12.816667,
        "rotation": 0,
        "nb_frames": 828,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0ec5e5318917451548b3023b2d27da3d",
        "public_id": "avalanche2023spring/qwiywm0qifqfph8gg10g",
        "version": 1680238519,
        "version_id": "48c123eaf88908448316b852222992f7",
        "signature": "7226e100ccbe7414a1e55a6104f470caec919778",
        "width": 1718,
        "height": 1548,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T04:55:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 1733304,
        "type": "upload",
        "etag": "65f978c2892f2cd0b964a875304e5641",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680238519/avalanche2023spring/qwiywm0qifqfph8gg10g.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680238519/avalanche2023spring/qwiywm0qifqfph8gg10g.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680238519/avalanche2023spring/qwiywm0qifqfph8gg10g.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125242",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "857756",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1496377,
        "duration": 9.266667,
        "rotation": 0,
        "nb_frames": 617,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:16:44.526Z" }
      }
    ],
    "title": "",
    "description": "More playing around with Reason... I wanted to experiment with importing a Midi file into tone.js. First clip is a little track I generated in Reason which I imported into tone.js using this:\n\nhttps://tonejs.github.io/Midi/\n\nWould be cool to figure out how to go back and forth and play more with the midi files",
    "comments": []
  },
  {
    "_id": "oMgErs3KjvrhNPs5b",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-26T21:22:54.746Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "592b91fa972c2b7fdd05074dbee8f6f8",
        "public_id": "avalanche2023spring/aflkbbfqhhvckr321ddb",
        "version": 1677446770,
        "version_id": "66413205e53ba64f49085fd1fd96401d",
        "signature": "04fed963ace94d9e35d71b49dc92e0f53735277e",
        "width": 377,
        "height": 377,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-26T21:26:10Z",
        "tags": [],
        "bytes": 21891,
        "type": "upload",
        "etag": "de8457b6651121556af57282203c99b8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677446770/avalanche2023spring/aflkbbfqhhvckr321ddb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677446770/avalanche2023spring/aflkbbfqhhvckr321ddb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3a94fafdb99182045605308f8d3384b2",
        "public_id": "avalanche2023spring/aqa2vdy5y2rnlcnotgwf",
        "version": 1677446787,
        "version_id": "9eee7ee8843ffe69cdffa7da6bc22bc2",
        "signature": "76154462ca1e30df64c1e303cfd42bb622361adf",
        "width": 377,
        "height": 372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-26T21:26:27Z",
        "tags": [],
        "bytes": 26015,
        "type": "upload",
        "etag": "a7a98b1d2b73de9419043a79505a35d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677446787/avalanche2023spring/aqa2vdy5y2rnlcnotgwf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677446787/avalanche2023spring/aqa2vdy5y2rnlcnotgwf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I think this works!! Would love to improve though.",
    "code": "// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(\"black\");\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  //Maybe should have used\n  //let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 300; i = i + 5) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n\n    //x axis need to change the noise value\n    let x = noise(i / 2) * width;\n    //  console.log(x, \"Sahiti\");\n\n    //y axis need to change the noise value from above\n    let y = noise(i / 2.5) * height;\n    //  console.log(y, \"Sahiti2\");\n\n    // the diameter shouldn't always be 10, it needs to vary\n    //let diameter = 10;\n    let diameter = map(noise(i/4), 0, 1, 5,27);\n    \n   // console.log(diameter, \"Sahiti4\");\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    // Mapping colors with i\n    \n    //TRING HSB FOR FIRST TIME\n    //HUe, Color, Saturation\n    h = map(noise(i / 20), 0, 1, 30, 350);\n //   console.log(h, \"Sahiti4col1\");\n    s = map(noise(i * 80), 0, 1,70, 100);\n //   console.log(s, \"Sahiticol2\");\n    b = map(noise(i *100), 0, 1, 90, 100);\n  //  console.log(b, \"Sahiticol3\");\n\n    fill(h, s, b);\n\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "oRkbmqTAW483baLHc",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T02:28:28.964Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fbfbb9d061eb811681e863374ede815f",
        "public_id": "avalanche2023spring/patqrnqhejd4utq9jp8d",
        "version": 1683858554,
        "version_id": "f53fde5cc0f806f8942163a17e128506",
        "signature": "47d67ae1e15397eb5723fad371d487773ff13f16",
        "width": 599,
        "height": 598,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T02:29:14Z",
        "tags": [],
        "bytes": 62757,
        "type": "upload",
        "etag": "a3bfa3ad0a1c5554858b81fa722f9b00",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683858554/avalanche2023spring/patqrnqhejd4utq9jp8d.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683858554/avalanche2023spring/patqrnqhejd4utq9jp8d.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Bonus sketch for this week. Wanted to see how ChatGPT handles Turtle Graphics out of curiosity. Like in the Creative AI week, I took the time to sit down with the AI and put it through its processes to see how it comes up with its own sketches and how it chooses to iterate on them. As with what I have noticed throughout my experiments with ChatGPT it creates simple prompts and builds upon them when asked. Also I noticed that it will either use functions from older libraries or make up functions that sound similar to existing ones. I would have to comb through the code to make sure that the correct functions are being called. Overall when asked to make prompts it will be as generic as possible unless I decide to give it a specific task to complete.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(220);\n  turtle = new Turtle();\n  turtle.penUp();\n  turtle.moveTo(width / 2, height / 2);\n  turtle.penDown();\n}\n\nfunction polygon(sides, size) {\n  angle = 360 / sides;\n  //turtle.penColor(color);\n  for (i = 0; i < sides; i++) {\n    turtle.moveForward(size);\n    turtle.turnRight(angle);\n  }\n}\n\nfunction draw() {\n  turtle.moveForward(100);\n  turtle.turnRight(90);\n  //turtle.penColor(color('red'));\n  turtle.moveForward(100);\n  turtle.turnRight(90);\n  //turtle.penColor(color('green'));\n  turtle.moveForward(100);\n  turtle.turnRight(90);\n  //turtle.penColor(color('blue'));\n  turtle.moveForward(100);\n  \n  polygon(3, 50, \"red\");\n  polygon(4, 75, \"green\");\n  polygon(5, 100, \"blue\");\n  polygon(6, 125, \"orange\");\n}",
    "comments": []
  },
  {
    "_id": "oYXTX2md2FzPQHTkj",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T22:18:56.021Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "61ed73a5a2132f31d8f90dddbf34f614",
        "public_id": "avalanche2023spring/fzjiantzdfypeinquloq",
        "version": 1677795563,
        "version_id": "307d854901247dc5439138b6ef737373",
        "signature": "cf31225063839771ddb0f7c7822f7e52454fb264",
        "width": 700,
        "height": 700,
        "format": "webm",
        "resource_type": "video",
        "created_at": "2023-03-02T22:19:23Z",
        "tags": [],
        "pages": 0,
        "bytes": 4293659,
        "type": "upload",
        "etag": "5dc4d5464d38c1c73bf5490c47c3a8e7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677795563/avalanche2023spring/fzjiantzdfypeinquloq.webm",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677795563/avalanche2023spring/fzjiantzdfypeinquloq.webm",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677795563/avalanche2023spring/fzjiantzdfypeinquloq.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "vp8",
          "level": -99,
          "profile": "0",
          "dar": "1:1",
          "time_base": "1/1000"
        },
        "frame_rate": 1000,
        "duration": 12.347,
        "rotation": 0,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T00:54:19.954Z" }
      }
    ],
    "title": "",
    "description": "Extension of the Line Wave Challenge. Made multiple lines and changed radius and hue with noise",
    "code": "let amplitude_slider;\n\nfunction setup() {\n  createCanvas(700, 700);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(10, 800, 200);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(100, 800, 200);\n  createP(\"Time Scalar\");\n  timeScalar_slider = createSlider(100, 800, 200);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(220);\n  let frequency = 20;\n  let amplitude = 120;\n  let timeScalar = 800;\n\n  noiseDetail(5, 0.05);\n  for (j = 0; j <7; j++) {\n    let startX = 100;\n    let startY = 635 - 90 * j;\n    let endX = 630;\n    let endY = 635 - 90 * j;\n    for (i = 0; i < 1; i += 0.007) {\n      let x = lerp(startX, endX, i);\n      let y = lerp(startY, endY, i);\n\n      let offsetX =\n        (noise(i * frequency + millis() / timeScalar) - 0.5) * amplitude;\n      let offsetY =\n        (noise(i * frequency + millis() / timeScalar) - 0.5) * amplitude;\n      strokeWeight(.3)\n      fill(noise(i * frequency + millis() / timeScalar)*100+250, 100, 100)\n      ellipse(x + offsetX, y + offsetY, 80+ offsetY, 80+ offsetY);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "ob2u7yvB4MQpBnczi",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T04:01:58.574Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cbadcfc6182ace90b83fca76bc7e78c4",
        "public_id": "avalanche2023spring/t7gmrnj2pnrshxkyz2bw",
        "version": 1679630522,
        "version_id": "e4cc117f04394698bab49699f2847417",
        "signature": "886249924f3110e49802c04c0c77db66a38ddf4d",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T04:02:02Z",
        "tags": [],
        "bytes": 46830,
        "type": "upload",
        "etag": "172f427d1b535d3d103d2c5b81bac510",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679630522/avalanche2023spring/t7gmrnj2pnrshxkyz2bw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679630522/avalanche2023spring/t7gmrnj2pnrshxkyz2bw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-08T21:58:18.033Z" }
      }
    ],
    "title": "",
    "description": "Exploring with joining things into a compound shape but couldn't get anywhere further than this. Looks pretty interesting though!",
    "code": "for (var i = 10; i > 6; i--){\n    var startPoint = new Point (300 - (20*i),300 - (20*i))\n    var pointB = new Point (startPoint.x + 200, startPoint.y);\n    var pointC = new Point (\n        startPoint.x + (startPoint.x * (Math.sqrt(3)/3)), \n        startPoint.y + (startPoint.y * (Math.sqrt(3)/3) - (20*i))\n        )\n    var path2 = new Path.Line(pointB, pointC);\n    var path3 = new Path.Line(pointC, startPoint);\n    var path1 = new Path.Line(startPoint, pointB);\n    path2.strokeColor = 'black'\n    path3.strokeColor = 'black'\n    path1.strokeColor = 'red'\n\n\n\n}\n\n\n\nfor (var i = 0; i < 7; i++) {\n    var startPoint = new Point (300 - (20*i),300 - (20*i))\n    var pointB = new Point (startPoint.x + 200, startPoint.y);\n    var pointC = new Point (\n        startPoint.x + (startPoint.x * (Math.sqrt(3)/3)), \n        startPoint.y + (startPoint.y * (Math.sqrt(3)/3) - (20*i))\n        )\n    var path2 = new Path.Line(pointB, pointC);\n    var path3 = new Path.Line(pointC, startPoint);\n    var path1 = new Path.Line(startPoint, pointB);\n    path2.strokeColor = 'black'\n    path3.strokeColor = 'black'\n    path1.strokeColor = 'red'\n\n\n\n}",
    "comments": []
  },
  {
    "_id": "obgBB8tzExZrcCoKD",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T18:37:32.059Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f051a4b1c15d5c431c468427effbeacc",
        "public_id": "avalanche2023spring/u6bd4tbj4iirydqkam5x",
        "version": 1676659229,
        "version_id": "23d486f40160fcd18d68b708ab82778d",
        "signature": "aa4c187bd18577adfa792f22ce60e055a200b9d9",
        "width": 1204,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T18:40:29Z",
        "tags": [],
        "bytes": 3064235,
        "type": "upload",
        "etag": "54fd62eb4356cebab8f6ed76d8e78498",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676659229/avalanche2023spring/u6bd4tbj4iirydqkam5x.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676659229/avalanche2023spring/u6bd4tbj4iirydqkam5x.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1e4f45930e245f5170d203ac702595f0",
        "public_id": "avalanche2023spring/uogpm14yanow4stskgxb",
        "version": 1676659234,
        "version_id": "144d0ffd4d4db586187e2f7ac74bb9e0",
        "signature": "9371013eb5f021591dd4980c3658f4e18efdf369",
        "width": 1002,
        "height": 994,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T18:40:34Z",
        "tags": [],
        "bytes": 2081933,
        "type": "upload",
        "etag": "f304da9bf5f9d9a08c471afd743e24f1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676659234/avalanche2023spring/uogpm14yanow4stskgxb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676659234/avalanche2023spring/uogpm14yanow4stskgxb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1f938f4fcdc0bf3d82d94cfb910566d4",
        "public_id": "avalanche2023spring/treqyk2bdmlsrbfd9wwh",
        "version": 1676669401,
        "version_id": "d187782b3cf25a8bd91fe3059ba63b47",
        "signature": "2e83a5e633755787da576ed7819a28698d22fdf5",
        "width": 1200,
        "height": 1200,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T21:30:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 18729562,
        "type": "upload",
        "etag": "7953083ee912ac8b7622e9288ccff75e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676669401/avalanche2023spring/treqyk2bdmlsrbfd9wwh.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676669401/avalanche2023spring/treqyk2bdmlsrbfd9wwh.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676669401/avalanche2023spring/treqyk2bdmlsrbfd9wwh.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126033",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "17495290",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 20432250,
        "duration": 7.333333,
        "rotation": 0,
        "nb_frames": 499,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T20:16:34.511Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T21:00:33.856Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:41.112Z" }
      }
    ],
    "title": "",
    "description": "**Pair Challenge: Noisy spirals on top of Chris' beautiful noise map.** Late, as this is not what I wanted to do - I wanted to plot Perlin noise spirals as plotted by Aidan Lincoln (check inspiration), but couldn't figure it out in time. If anybody has any ideas on how to achieve this, please let me know!",
    "inspiration_name": "PERLIN NOISE X MORIÉ EFFECT PLOTS",
    "inspiration_url": "https://www.aidanlincoln.com/perlin-noise-plots",
    "comments": [],
    "code": "let img;\nlet X = 0, Y = 0;\nlet x1, y1;\nlet radius = 0, angle = 0;\n\nfunction preload() {\n  img = loadImage(\"Chris-NoiseFields.png\");\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  background(220);\n  \n\n  noStroke();\n  angleMode(DEGREES);\n  colorMode(HSB);\n\n  x1=X;\n  y1=Y;\n\n  // noLoop();\n}\n\nfunction draw() {\n  image(img, 0, 0, width, height);\n  translate(width / 2, height / 2);\n  \n  \n  X=50; Y=60;\n  x1=X;\n  y1=Y;\n  \n  push();\n  \n  translate(noise(millis()*0.0001)*width - width/2, 0);\n  scale(2);\n  for (radius = 0, angle=0; radius <= width / 3; radius += 0.01, angle += 1) {\n    fill(noise(angle*0.01, radius)*255+100, 80, 150);\n    ellipse(x1, y1, 2, 2);\n\n    x1 = X + radius * sin(angle);\n    y1 = Y + radius * cos(angle);\n  }\n  pop();\n  \n  X = -160;\n  x1 = X;\n  Y = -60;\n  y1 = Y;\n\n  push();\n  translate(noise(millis()*0.0001)*width - width/2, noise(millis()*0.0001)*height - height/2);\n  scale(1.5);\n  for (radius = 0; radius <= width / 2.5; radius += 0.01, angle += 1) {\n    //fill(\"blue\");\n    fill(noise(angle*0.1, radius)*250, 80, 150);\n    ellipse(x1, y1, 2, 2);\n\n    x1 = X + radius * sin(angle) ;\n    y1 = Y + radius * cos(angle) ;\n    \n    \n  }\n  pop();\n  \n  X = 120;\n  x1 = X;\n  Y = -80;\n  y1 = Y;\n  \n  push();\n  \n  translate(0, noise(millis()*0.0001)*height - height/2);\n  scale(2);\n  \n  for (radius = 0; radius <= width / 4; radius += 0.01, angle += 1) {\n    //fill(\"blue\");\n    fill(noise(angle*1, radius)*120, 80, 150);\n    ellipse(x1, y1, 2, 2);\n\n    x1 = X + radius * sin(angle) ;\n    y1 = Y + radius * cos(angle) ;\n    \n    //radius+= sin(angle)*0.1;\n    // x1 = X + radius * sin(angle) * noise(radius*0.1)*2;\n    // y1 = Y + radius * cos(angle) * noise(radius*0.3)*2;\n  }\n  pop();\n}"
  },
  {
    "_id": "odMBdhM9AywfieGue",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T03:20:03.963Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b892c8ed058abec2b896894be0f79a06",
        "public_id": "avalanche2023spring/euah7qbt5ydzljfcy0sg",
        "version": 1681442438,
        "version_id": "c231a1fd9851f97211f71ee5db3713fb",
        "signature": "5e49f9e1318d3d983b7ca507528bdd19632813a8",
        "width": 1916,
        "height": 958,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-14T03:20:38Z",
        "tags": [],
        "bytes": 267263,
        "type": "upload",
        "etag": "343e81ead03317581ef3294595eedc2a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681442438/avalanche2023spring/euah7qbt5ydzljfcy0sg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681442438/avalanche2023spring/euah7qbt5ydzljfcy0sg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Part 2 of my generic response text generating program. I tried to experiment with inputting buttons but I couldn't get that to work unfortunately so I came up with the idea to have console.log show the corresponding question to the generic answer to maybe have some kind of conversation with this sketch.",
    "code": "// Partially adapted from https://compform.net/js_lab/js_lab.html?/text/sketches/title/title.js\n\ninjectInterface();\ndocument.getElementById(\"message\").textContent = generateMessage();\n\nfunction generateMessage() {\n  \n  var emotions = [\n    \"content\",\n    \"happy\",\n    \"thoughtful\",\n    \"provoked\",\n    \"sad\",\n    \"scared\",\n    \"angry\",\n    \"tired\",\n    \"suprised\",\n    \"out of it\",\n  ];\n  \n  var thought = [\n    \"getting some homework done\",\n    \"grabbing lunch\",\n    \"check my email soon\",\n    \"getting back home soon\",\n    \"checking out the new book store\",\n    \"going home\",\n    \"taking a walk in the park\",\n  ];\n  \n  var action = [\n    \"go home\",\n    \"grab a snack\",\n    \"go for a run\",\n    \"take a break\",\n    \"play some games\",\n    \"read a book\",\n    \"take a nap\",\n  ];\n  \n  var book = [\n    \"a novel I found in a bookstore\",\n    \"a magazine\",\n    \"a textbook that I need to read for school tomorrow\",\n    \"an e-book on my Kindle\",\n    \"an article for my research\",\n    \"a paper that I have to grade\",\n    \"a comic book\",\n  ];\n  \n  var creature = [\n    \"a human\",\n    \"a cat\",\n    \"a dog\",\n    \"a fish\",\n    \"an AI\",\n    \"a message that was pre-recorded\",\n    \"your conscious\",\n    \"your sub-conscious\",\n    \"your computer\",\n    \"your phone\",\n  ];\n  \n  var emotionalstate = sample(emotions);\n  var thoughts = sample(thought);\n  var actions = sample(action);\n  var books = sample(book);\n  var being = sample(creature);\n  \n  var message = \"\";\n  if(Math.random(0, 1) < 0.15 ) {\n    console.log('Hello, how are you today?');\n    message = `Hello, right now I'm ${emotionalstate}.`;\n  } else if(Math.random(0, 1) < 0.3) {\n    console.log('What are you thinking about right now?');\n    message = `I'm thinking about ${thoughts}.`;\n  } else if(Math.random(0, 1) < 0.45) {\n    console.log('What do you want to do?');\n    message = `I want to ${actions}.`;\n  } else if(Math.random(0, 1) < 0.6) {\n    console.log('What are you reading right now?');\n    message = `I'm reading ${books}.`;\n  } else if(Math.random(0, 1) < 0.75) {\n    console.log('What are you?');\n    message = `I'm ${being}.`;\n  }\n  \n  return message;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#message {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"message\">Message</div>\n\t</div>\n`\n  );\n}",
    "comments": []
  },
  {
    "_id": "odhNyBoY9bCcjG9S5",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": { "$date": "2023-04-28T02:00:44.903Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7b9457a0e9f404bab4a4cd7daae034af",
        "public_id": "avalanche2023spring/snfxr031jwdpk5jhb6vd",
        "version": 1682647310,
        "version_id": "feec8718b5fd7de583700613627602b0",
        "signature": "259e9041ad12fc693ad9a7d55da0c059d7bedaa9",
        "width": 822,
        "height": 824,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T02:01:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 13558454,
        "type": "upload",
        "etag": "0b0ec5e86e57a027a39f6f2876519318",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682647310/avalanche2023spring/snfxr031jwdpk5jhb6vd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682647310/avalanche2023spring/snfxr031jwdpk5jhb6vd.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682647310/avalanche2023spring/snfxr031jwdpk5jhb6vd.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6937551",
          "dar": "411:412",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 7005444,
        "duration": 15.483333,
        "rotation": 0,
        "nb_frames": 913,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Revisiting Random",
    "code": "//variables\nlet particles = [];\nlet brushSize = 10;\nlet rectW = 200;\nlet rectH = 200;\nlet moneyCount = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  stroke(0);\n  background(0, 128, 128);\n  textAlign(CENTER);\n  textSize(24);\n  text(\"Click and drag mouse on canvas\", width / 2, rectH / 2);\n}\n\n//drawing the layout\nfunction draw() {\n  background(0, 128, 128);\n  fill(220);\n  rect(width / 2, height / 2, 10, height/2);\n  \n  // update and display particles\n  for (let i = 0; i < particles.length; i++) {\n    particles[i].update();\n    particles[i].display();\n    if (particles[i].isDead()) {\n      particles.splice(i, 1);\n    }\n  }\n}\n\n// Particle class definition\nclass Particle {\n  constructor(x, y, size) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(random(-1, 1), random(-1, 1));\n    this.acc = createVector(0, 0);\n    this.size = size;\n    this.lifespan = 255;\n  }\n\n  // update particle position and lifespan\n  update() {\n    this.acc = p5.Vector.sub(createVector(mouseX, mouseY), this.pos);\n    this.acc.setMag(0.1);\n    this.vel.add(this.acc);\n    this.vel.limit(4);\n    this.pos.add(this.vel);\n    this.lifespan -= 5;\n  }\n\n  // display the particle\n  display() {\n    noStroke();\n    fill(255, this.lifespan);\n    ellipse(this.pos.x, this.pos.y, this.size, this.size);\n  }\n\n  // check if particle is dead\n  isDead() {\n    return this.lifespan < 0;\n  }\n}\n\nfunction mousePressed() {\n  brushSize = 10;\n}\n\n// generate particles on dragging and increase size based on seconds\nfunction mouseDragged() {\n  let s = second();\n  brushSize = s * 2;\n  particles.push(new Particle(mouseX, mouseY, brushSize));\n}",
    "comments": []
  },
  {
    "_id": "ohqFjjfmjDNN3m38q",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T12:07:29.297Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "437ee0abb20ebadb0592ff00ae8784bf",
        "public_id": "avalanche2023spring/aojx224pwj9ifsc7bjvn",
        "version": 1683288456,
        "version_id": "30eb3d6a295fbdc6536419fdf774dc60",
        "signature": "d40f553447ca6b8fc6e60a1d13b2a0653cc05f1b",
        "width": 1101,
        "height": 778,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T12:07:36Z",
        "tags": [],
        "bytes": 71305,
        "type": "upload",
        "etag": "298c7ed73554923a5f090003b98bb37b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683288456/avalanche2023spring/aojx224pwj9ifsc7bjvn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683288456/avalanche2023spring/aojx224pwj9ifsc7bjvn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:14.414Z" }
      }
    ],
    "title": "",
    "description": "Final Iteration of my castle! Added some surrounding walls and towers.",
    "code": "$fn = 90;\ndepth = 5;\nbaseRectW = 30;\nbaseRectH = 20;\n\nrightRectW = 15;\nrightRectH = 40;\nbigCylinderDiam = 131;\n\nminiTopRectW = 15;\nminiTopRectH = 7;\nminiTopRectCylinderDiam = 72;\n\nmainBlockW = 140;\nmainBlockH = 55;\nupperBlockW = 120;\nupperBlockH = 18;\n\nmodule buttress() {\n    union() {\n    color(\"white\") cube([baseRectW, depth , baseRectH]);\n\n    translate([baseRectW/2, 0, baseRectH]) {\n        color(\"white\") cube([rightRectW, depth , rightRectH]);\n    }\n\n    translate([0, 0, baseRectH]) {\n        difference() {\n        color(\"white\") cube([rightRectW, depth , rightRectH]);\n            color (\"#3242a8\") {\n                translate([-31,49,40]) rotate([275,0,0])  sphere(d = bigCylinderDiam, center = false);\n            translate([-31,-44,40]) rotate([265,0,0])  sphere(d = bigCylinderDiam, center = false);\n            }\n        }\n        \n    }\n    translate([baseRectW/2, 0, baseRectH + rightRectH]) {\n            difference() {\n        color(\"white\") cube([miniTopRectW, depth , miniTopRectH]);\n        color (\"#3242a8\") { \n                translate([3,29,27]) rotate([275,0,0])  sphere(d = miniTopRectCylinderDiam, center = false);\n                translate([3,-24,27]) rotate([265,0,0])  sphere(d = miniTopRectCylinderDiam, center = false);\n        }\n        }\n    }\n    }\n}\n\nmodule halfWall() {\n    difference () {\n    color(\"white\") cube([30, 5 , 60]);\n\n    translate ([60,-15,15]) color (\"#3242a8\") sphere(50);\n    }   \n\n}\n\n\nmodule fullWall () {\n    translate([0,0,0]) halfWall();\n    translate([60,0,0]) mirror([1,0,0]) halfWall();\n}\n\nmodule pillar() {\n    color(\"white\") {\n        translate([0,0,0]) cylinder(h = 100, r= 20, center = false);\n        translate([0,0,120]) cylinder(40,2,0);\n    }\n    color (\"#3242a8\") {\n    translate([0,0,100]) sphere( 22);\n    }\n    \n}\n\n//color(\"#d69e3e\") {\n\nfor (i = [0:7]) { \ntranslate([0,25*i - depth,0]) buttress();\ntranslate([baseRectW* 6,25*i - depth,0]) mirror([1,0,0]) buttress();\n\n}\n\ncolor(\"white\") translate([baseRectW - 10,-10,0]) cube([mainBlockW, 190 , mainBlockH]);\n\ncolor(\"white\") translate([baseRectW , -5,mainBlockH]) cube([upperBlockW, 180 , upperBlockH]);\n\ntranslate([30,0,0]) pillar();\n\ntranslate([150,0,0]) pillar();\n\ntranslate([250,-70,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ntranslate([-70,-70,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ntranslate([-70,250,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ntranslate([250,250,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ncolor(\"white\") translate([50,25,60]) cube([80, 135 , 40]);\ndifference() {\n    translate([0,160,0]) scale([3,3,3]) {\n        translate([0,0,0]) buttress();\n        translate([60,0,0]) mirror([1,0,0]) buttress();\n    }\n    translate([90,190,150]) rotate([110,0,0]) color (\"#3242a8\") cylinder(50,30,30);\n}\n\n\nfor (i = [-1:3]) { \n    translate([60 *i,-65,0]) fullWall();\n}\n\nfor (i = [-1:3]) { \n    translate([60 *i,240,0]) fullWall();\n}\n\nrotate([0,0,90]) {\n    for (i = [-1:3]) { \n    translate([60 *i,55,0]) fullWall();\n    }\n}\n\nrotate([0,0,90]) {\n    for (i = [-1:3]) { \n    translate([60 *i,-240,0]) fullWall();\n    }\n}\n\ntranslate([90,90,0]) {\n    color(\"white\") cube([300, 310 , 5], center = true );\n\n}\n\ntranslate([90,90,60]) {\n    difference() {\n         color(\"white\") cube([300, 310 , 5], center = true );\n        color (\"#3242a8\") cube([260, 260 , 8], center = true );\n        \n    }\n}\n//}",
    "comments": []
  },
  {
    "_id": "ojWNmoXWkwXgGXZgE",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T05:48:06.929Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d1d719363c525e70343e4e0b7d6817d7",
        "public_id": "avalanche2023spring/syvrq9jkbex0xwdyltqy",
        "version": 1681969737,
        "version_id": "4199874e5568d2ba7245b9bc99026598",
        "signature": "f5cb9a261dd2afb281eaa69562256ad9f7a59201",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T05:48:57Z",
        "tags": [],
        "bytes": 1476774,
        "type": "upload",
        "etag": "c252208548c2f0666425b56050d8c8e8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681969737/avalanche2023spring/syvrq9jkbex0xwdyltqy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681969737/avalanche2023spring/syvrq9jkbex0xwdyltqy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1c2dc54fd5f010e58764b10e790973de",
        "public_id": "avalanche2023spring/azhsknfhl3kwyolai5vh",
        "version": 1681969749,
        "version_id": "4ecd0d6233f11ce9d048ac7bed2a4d52",
        "signature": "205a51484b6400304aa1a6e5c995e77579c20c2d",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T05:49:09Z",
        "tags": [],
        "bytes": 1586334,
        "type": "upload",
        "etag": "d7ad14633a4e4e04ad44cf701697854a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681969749/avalanche2023spring/azhsknfhl3kwyolai5vh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681969749/avalanche2023spring/azhsknfhl3kwyolai5vh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3b76e171bd9bc7f9917ddef7d2a1b240",
        "public_id": "avalanche2023spring/zsnntweu0tv3eiip2xzi",
        "version": 1681969754,
        "version_id": "602fe0abfb05ef68ed8b7f8333068691",
        "signature": "25abc5bd6d14b16aa18dfd1894ba6dba387a69a3",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T05:49:14Z",
        "tags": [],
        "bytes": 1392736,
        "type": "upload",
        "etag": "d00758c6a7989c90ca9209f6ffb543d2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681969754/avalanche2023spring/zsnntweu0tv3eiip2xzi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681969754/avalanche2023spring/zsnntweu0tv3eiip2xzi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T06:43:09.368Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T19:54:54.698Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T02:47:56.123Z" }
      }
    ],
    "title": "",
    "description": "Spent way too much time playing around with Midjourney 😅. I was initially just making some artistic pieces but the whole game changed when I saw someone else make architectural sketches and plans in the Discord.\n\nI first tried just getting architectural concept sketches in the style of an architect that I really like (Luis Barragan). These were incredible and I definitely wish I could live in a place like this 😭😭😭! \n\nBut what was even crazier is that you could tell Midjourney to make architectural floor plans which is pretty unreal to me. Obviously, the floor plans are definitely not up to code or even significant in engineering value. But there's definitely a point to be made where the images provide an incredible starting point that could later be iterated on.",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "Ooooh Lovely. Did you prompt the textures and watercolor stylings too? ",
        "created_at": { "$date": "2023-04-20T06:43:08.037Z" }
      },
      {
        "commenter_id": "4bHpKt9dPkcFuNAuM",
        "comment": "I actually didn't specifically prompt \"watercolor\" although I wonder if the prompt of \"architectural sketch\" accounted for that since watercolors are pretty common in that style.",
        "created_at": { "$date": "2023-04-20T22:45:29.816Z" }
      }
    ]
  },
  {
    "_id": "osNsQGn3Gce8u5dwc",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T17:15:19.348Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6fa003f93ed34e714b93069a9a4c8314",
        "public_id": "avalanche2023spring/rlbj87c3sjksp525krir",
        "version": 1678382123,
        "version_id": "f02d0c5c83be05a9258ec32367635939",
        "signature": "89edc8881dfe310ce1682f18d08cf38263cd4019",
        "width": 270,
        "height": 264,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T17:15:23Z",
        "tags": [],
        "bytes": 7561,
        "type": "upload",
        "etag": "7655dd15a8903fd1f07a7637ea2c4516",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678382123/avalanche2023spring/rlbj87c3sjksp525krir.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678382123/avalanche2023spring/rlbj87c3sjksp525krir.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:44.512Z" }
      }
    ],
    "title": "",
    "description": "WEEK 6 (3/4): MINECRAFT BEE PIXEL BY PIXEL AND I ALSO MESSED UP ON COLROING",
    "comments": []
  },
  {
    "_id": "ow4HADFbhXst986LZ",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T15:38:03.037Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d8a306a6a807b8f8ebc093d343bcb517",
        "public_id": "avalanche2023spring/zx2tgjzjdd1vk7e3inu7",
        "version": 1676648296,
        "version_id": "2381f5498e4793d7f0521b0cf440bf98",
        "signature": "160075fa3dccce3cfbe37a9e066b22682b284de6",
        "width": 1082,
        "height": 1082,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T15:38:16Z",
        "tags": [],
        "bytes": 111470,
        "type": "upload",
        "etag": "69ea9807e56209026ca0f9e48673f640",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676648296/avalanche2023spring/zx2tgjzjdd1vk7e3inu7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676648296/avalanche2023spring/zx2tgjzjdd1vk7e3inu7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "646ad07ca729c0984f9e863fd1b9f672",
        "public_id": "avalanche2023spring/dzv8koxmbkcacrvjeuis",
        "version": 1676648301,
        "version_id": "3dcfd1f2a2ff24d40634ae6ddb11ac24",
        "signature": "79924837ca5a91a27971221565817584cd6fa5de",
        "width": 1078,
        "height": 1076,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T15:38:21Z",
        "tags": [],
        "bytes": 141370,
        "type": "upload",
        "etag": "459f277186fc877ad9547773ec062ceb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676648301/avalanche2023spring/dzv8koxmbkcacrvjeuis.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676648301/avalanche2023spring/dzv8koxmbkcacrvjeuis.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2dbe99fbb571fb07216e81699241c019",
        "public_id": "avalanche2023spring/dpgmdm1uylpphkivwj0e",
        "version": 1676648307,
        "version_id": "dec7bdeffa1c9b0e2e0645b058648f59",
        "signature": "9d7a07cc01edfa6a891bd71c4112e11912e96135",
        "width": 1102,
        "height": 1090,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T15:38:27Z",
        "tags": [],
        "bytes": 64258,
        "type": "upload",
        "etag": "de5dd1796bbb7b63801bfc1c9688145d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676648307/avalanche2023spring/dpgmdm1uylpphkivwj0e.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676648307/avalanche2023spring/dpgmdm1uylpphkivwj0e.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T15:39:14.218Z" }
      }
    ],
    "title": "",
    "description": "I used the circle example from the chapter as a starting point for these sketches!",
    "comments": []
  },
  {
    "_id": "pKNR7xRRhL3wsdr7q",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": { "$date": "2023-04-28T04:41:02.918Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "aef706fa9642556657be99f60c86508c",
        "public_id": "avalanche2023spring/s5qx1bq3jxdhfcay6ajv",
        "version": 1682656881,
        "version_id": "1b89bee8dcf4f7cac5075ea277c36ddf",
        "signature": "d99df66f92a0d98b9d42cc5314d77864b4f04a8d",
        "width": 1616,
        "height": 1024,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T04:41:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 9301571,
        "type": "upload",
        "etag": "efc7bd089f10ff59ddcacdc884ac44c0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682656881/avalanche2023spring/s5qx1bq3jxdhfcay6ajv.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682656881/avalanche2023spring/s5qx1bq3jxdhfcay6ajv.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682656881/avalanche2023spring/s5qx1bq3jxdhfcay6ajv.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2273",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "856761",
          "dar": "101:64",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 868109,
        "duration": 85.717333,
        "rotation": 0,
        "nb_frames": 5143,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "My take on the twist challenge. I was actually surprised with how easy it was to make ChatGPT respond to a very specific input. All I did was have a single entry instructing ChatGPT to give 3 recommendations if I input the name of an artist followed by a number, with the number representing the scale of how similar the recommendations should be. \n\nWith literally just that I was able to get an even better interface than what I got with the API. However, I think the quality of the responses was SIGNIFICANTLY better when using the API than with just the web version of ChatGPT",
    "comments": []
  },
  {
    "_id": "pMcnBaay4AesbkvWa",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-20T19:01:23.362Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9fa0bec88d991fe188bcfb92331d02f2",
        "public_id": "avalanche2023spring/lspczdtwkz5sgwozms41",
        "version": 1679338973,
        "version_id": "e8d9248bee577b56f70b5cb40795d424",
        "signature": "917d82d4a44edf3b48cba74168151d6f8021ef0e",
        "width": 721,
        "height": 588,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-20T19:02:53Z",
        "tags": [],
        "bytes": 29784,
        "type": "upload",
        "etag": "3ddd645ea9d9d88c8fb1e4e79bce18ea",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679338973/avalanche2023spring/lspczdtwkz5sgwozms41.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679338973/avalanche2023spring/lspczdtwkz5sgwozms41.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:09.579Z" }
      }
    ],
    "title": "",
    "description": "Part 1 of the individual challenge. After experimenting with paths I drew up a small sketch of simplified mountains with time I had over Spring Break. Part 2 should be posted up later once I take photos of the physical end product.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n// Remember: blue - vector cut, red - vector engraving, black fill - raster engraving\n\n// Mountain 1\n\nvar myPath1 = new Path();\nmyPath1.strokeColor = 'blue';\nmyPath1.add(new Point(250, 350));\nmyPath1.add(new Point(50, 350));\nmyPath1.add(new Point(150, 200));\nmyPath1.add(new Point(190, 260));\n//myPath1.closed = true;\n\n// Mountain 2\n\nvar myPath2 = new Path();\nmyPath2.strokeColor = 'blue';\nmyPath2.add(new Point(190, 260));\nmyPath2.add(new Point(300, 50));\nmyPath2.add(new Point(450, 350));\nmyPath2.add(new Point(250, 350));\n\nvar myPath3 = new Path();\nmyPath3.strokeColor = 'red';\nmyPath3.add(new Point(190, 260));\nmyPath3.add(new Point(250, 350));\n\n// Mountain 1 detail\n\nvar myPath4 = new Path();\nmyPath4.fillColor = 'black';\n//myPath4.strokeColor = 'black';\nmyPath4.add(new Point(150, 210));\nmyPath4.add(new Point(122, 250));\nmyPath4.add(new Point(150, 250));\nmyPath4.closed = true;\n\nvar myPath5 = new Path();\nmyPath5.fillColor = 'black';\n//myPath5.strokeColor = 'black';\nmyPath5.add(new Point(140, 260));\nmyPath5.add(new Point(130, 340));\nmyPath5.add(new Point(125, 335));\nmyPath5.add(new Point(134, 265));\nmyPath5.closed = true;\n\n// Mountain 2 detail\n\nvar myPath6 = new Path();\nmyPath6.fillColor = 'black';\n//myPath6.strokeColor = 'black';\nmyPath6.add(new Point(300, 60));\nmyPath6.add(new Point(265, 130));\nmyPath6.add(new Point(300, 130));\nmyPath6.closed = true;\n\nvar myPath7 = new Path();\nmyPath7.fillColor = 'black'\n//myPath7.strokeColor = 'black'\nmyPath7.add(new Point(280, 170));\nmyPath7.add(new Point(260, 320));\nmyPath7.add(new Point(250, 285));\nmyPath7.add(new Point(265, 190));\nmyPath7.closed = true;\n\n/* var triangle1 = new Path.RegularPolygon(new Point(150, 300), 3, 100);\ntriangle1.fillColor = \"'#e9e9ff'\"; */\n\nfunction onKeyDown(event) {\n  if (event.key === \"s\") {\n    downloadAsSVG();\n  }\n}\n\nfunction downloadAsSVG(fileName) {\n  // use default name if not provided\n  fileName = fileName || \"output.svg\";\n\n  // create a data url of the file\n  var svgData = project.exportSVG({ asString: true });\n  var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n  // create a link to the data, and \"click\" it\n  var link = document.createElement(\"a\");\n  link.download = fileName;\n  link.href = url;\n  link.click();\n}",
    "comments": []
  },
  {
    "_id": "pSNgNpbk5Ava2rYGM",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "API",
    "created_at": { "$date": "2023-04-26T14:13:37.744Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4839768112dd2162c8f56659d93d30b5",
        "public_id": "avalanche2023spring/sloznf2jttdrdvob4g49",
        "version": 1682519488,
        "version_id": "b2c3764ccb0d3e0e88c973e3b2197dd7",
        "signature": "fffab58d7b19cae8953c1b95e10c4f3053125666",
        "width": 1464,
        "height": 970,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-26T14:31:28Z",
        "tags": [],
        "bytes": 155111,
        "type": "upload",
        "etag": "ea366713fea634329d3ad42dc8a2d2ae",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682519488/avalanche2023spring/sloznf2jttdrdvob4g49.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682519488/avalanche2023spring/sloznf2jttdrdvob4g49.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f8d013ae66a73458993c91684880f69f",
        "public_id": "avalanche2023spring/gs2bonsbgwyrcuijt9an",
        "version": 1682519491,
        "version_id": "a87f350ed49135a359d00f861682e88a",
        "signature": "9d5914d3aab6678bee60b7951a325a10c876106d",
        "width": 1218,
        "height": 1268,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-26T14:31:31Z",
        "tags": [],
        "bytes": 250830,
        "type": "upload",
        "etag": "584bd712702813a94c4c757b93c3ba19",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682519491/avalanche2023spring/gs2bonsbgwyrcuijt9an.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682519491/avalanche2023spring/gs2bonsbgwyrcuijt9an.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b675aef1d47f94638f7249e89c4d91ab",
        "public_id": "avalanche2023spring/ymzhwz6clpmvnizgls45",
        "version": 1682519494,
        "version_id": "25034dbb7d4f36529d9d0b9c072f0bfd",
        "signature": "ebb78bc12c5c390d947a76f3f17cfe85d54e6d62",
        "width": 1074,
        "height": 1286,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-26T14:31:34Z",
        "tags": [],
        "bytes": 236543,
        "type": "upload",
        "etag": "62632365e92d25686d268a3a6b8adc6c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682519494/avalanche2023spring/ymzhwz6clpmvnizgls45.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682519494/avalanche2023spring/ymzhwz6clpmvnizgls45.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T18:05:23.906Z" }
      }
    ],
    "title": "",
    "description": "Twist challenge - ChatGPT was very quick at creating a good, basic poem generator with just one request. However, I had to ask it multiple times to automatically restart asking questions again after generating a poem - it eventually understood after asking \"After each poem is generated, please ask the same questions again - do not stop\". I also attempted asking ChatGPT to disregard certain questions, which it was generally able to do successfully. I was also able to add three additional questions successfully; however, ChatGPT interestingly reverted to its old behavior and didn't automatically restart asking questions again after generating a poem. This time, when I asked it to start asking questions again, the poem generator broke down and even integrated the questions themselves into the poem.",
    "comments": []
  },
  {
    "_id": "pSth2tDcZZvg7rzFz",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-08T03:27:36.555Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a0162a463188f44cd39ff3f9417193c4",
        "public_id": "avalanche2023spring/bbigrrb7y8da32nnn4cv",
        "version": 1678246063,
        "version_id": "c29b75a6f9c4ee98666e8b84b56f9785",
        "signature": "177aed5bc19dfed8d1b2659be3043a530a56ea93",
        "width": 582,
        "height": 862,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-08T03:27:43Z",
        "tags": [],
        "bytes": 71082,
        "type": "upload",
        "etag": "44d773f2c59144b42511a4e9e0903918",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678246063/avalanche2023spring/bbigrrb7y8da32nnn4cv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678246063/avalanche2023spring/bbigrrb7y8da32nnn4cv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b2e4454c1d64b37b531231039604a031",
        "public_id": "avalanche2023spring/hrjy5gh5vxlx1lwyaa03",
        "version": 1678246063,
        "version_id": "fc0dc2fc71a8b266ab639acdc8f823ee",
        "signature": "bdebcc328de7fe064a74bb66fe8314ff1f102bbc",
        "width": 597,
        "height": 585,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-08T03:27:43Z",
        "tags": [],
        "bytes": 181850,
        "type": "upload",
        "etag": "e16ae292113d9323a113e055d499e6f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678246063/avalanche2023spring/hrjy5gh5vxlx1lwyaa03.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678246063/avalanche2023spring/hrjy5gh5vxlx1lwyaa03.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c69b5ea248ddfb26920e803c7f51736a",
        "public_id": "avalanche2023spring/ukoolvthcblpdofkvfvo",
        "version": 1678246063,
        "version_id": "fc0dc2fc71a8b266ab639acdc8f823ee",
        "signature": "aa0b12e017a991888650641dc65bfe4b8f23214f",
        "width": 599,
        "height": 597,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-08T03:27:43Z",
        "tags": [],
        "bytes": 217107,
        "type": "upload",
        "etag": "65fa60e7b3b317b2f1131f8651112539",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678246063/avalanche2023spring/ukoolvthcblpdofkvfvo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678246063/avalanche2023spring/ukoolvthcblpdofkvfvo.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-08T04:42:38.859Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:20.682Z" }
      }
    ],
    "title": "",
    "description": "Pixel Ouroboros challenge. Using an image of a card back, I wanted to see if I could try and slowly create more visual static across the whole image and attempt to obscure the original material.",
    "comments": []
  },
  {
    "_id": "pX4kauE4BK5e3YsYB",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "API",
    "created_at": { "$date": "2023-04-27T17:42:21.184Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1f19b276e388231aa8ad2d3ed53c6179",
        "public_id": "avalanche2023spring/t6edg4fh2ynwg4vyzccn",
        "version": 1682617372,
        "version_id": "a0edbc4bf11d7b4c9e1addf47abe4754",
        "signature": "5b771f3deb07be97cc773d431be190b0c103109b",
        "width": 1564,
        "height": 550,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-27T17:42:52Z",
        "tags": [],
        "bytes": 142134,
        "type": "upload",
        "etag": "eda6ea3974b996eb85d3d6a174f2015e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682617372/avalanche2023spring/t6edg4fh2ynwg4vyzccn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682617372/avalanche2023spring/t6edg4fh2ynwg4vyzccn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with a different APIs for this sketch. I explored a lot of different options on RapidAPI but I think their Fetch code changed recently as I was consistently receiving errors in the console log and couldn't figure out how to resolve the issue. I was running out of time so I decided to follow a tutorial to get this Jokes API set up in Visual Studio Code. The code fetches a new joke from the Joke API every time you refresh the page.",
    "comments": []
  },
  {
    "_id": "pYCsmPS7LXvp4fLWK",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T19:25:00.78Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7f14d30e752424a9c0c50072fa36e0ee",
        "public_id": "avalanche2023spring/xsqu38aqfkjjosduyddj",
        "version": 1679599505,
        "version_id": "6e4d30108140efb283bb916f9570943c",
        "signature": "16e0f37e50be07e27100465d146a473fb2cdb529",
        "width": 982,
        "height": 984,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T19:25:05Z",
        "tags": [],
        "bytes": 275679,
        "type": "upload",
        "etag": "553cdaf012646513efc376c7cc13d56c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679599505/avalanche2023spring/xsqu38aqfkjjosduyddj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679599505/avalanche2023spring/xsqu38aqfkjjosduyddj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6d97e4bbedf88350022de117c597b10c",
        "public_id": "avalanche2023spring/csjwfvweagcuuefapxef",
        "version": 1679599507,
        "version_id": "00daa08f8c783409bcdc3f5d9c20455b",
        "signature": "b655f9e4a1458710615f3e5ae747b01403037a54",
        "width": 594,
        "height": 598,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T19:25:07Z",
        "tags": [],
        "bytes": 93093,
        "type": "upload",
        "etag": "884cf3467e9263d2fa10a191dcb78041",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679599507/avalanche2023spring/csjwfvweagcuuefapxef.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679599507/avalanche2023spring/csjwfvweagcuuefapxef.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T19:26:54.606Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:38.824Z" }
      }
    ],
    "title": "",
    "description": "WEEK 7 ( 4/4 ): THIS MONSTER",
    "comments": []
  },
  {
    "_id": "pfsFE9RJJNxnfdWFk",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T16:09:20.647Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "98f6893c7231baa46c383fedc18a1484",
        "public_id": "avalanche2023spring/kgxdupjarh5kmq3pppdc",
        "version": 1678464579,
        "version_id": "1e7e2079aab79d124905a68b6579163c",
        "signature": "d21bec981312323ceddcb8e0fc2278be6544d553",
        "width": 1600,
        "height": 1600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T16:09:39Z",
        "tags": [],
        "bytes": 2214417,
        "type": "upload",
        "etag": "25fae004b7bed40fcb172cf5818dba64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678464579/avalanche2023spring/kgxdupjarh5kmq3pppdc.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678464579/avalanche2023spring/kgxdupjarh5kmq3pppdc.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e6b3fe86955c5792e9630b79fc14dbce",
        "public_id": "avalanche2023spring/jsmh9hw9d3wrcsmygaq1",
        "version": 1678464627,
        "version_id": "cfe92adec32714cd2d3e78a498f52bca",
        "signature": "1cc651390c341001a68b919ed97f3dad4c34e976",
        "width": 1600,
        "height": 1600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T16:10:27Z",
        "tags": [],
        "bytes": 1383691,
        "type": "upload",
        "etag": "377ace5f21166433f4dcb0eea898903a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678464627/avalanche2023spring/jsmh9hw9d3wrcsmygaq1.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678464627/avalanche2023spring/jsmh9hw9d3wrcsmygaq1.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d569cbf0382dafea7f7c203ea34bcb4d",
        "public_id": "avalanche2023spring/fi8xzygib5jdshgkhysm",
        "version": 1678464708,
        "version_id": "a4be79cf7cf59a64aed335a7a9e262f5",
        "signature": "aebe534c5bc8b5e244d819e800e9beb7370a9892",
        "width": 806,
        "height": 802,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-10T16:11:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 881710,
        "type": "upload",
        "etag": "7ac5ebf29d48a99e84c3dba1dcd3c4cf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678464708/avalanche2023spring/fi8xzygib5jdshgkhysm.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678464708/avalanche2023spring/fi8xzygib5jdshgkhysm.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678464708/avalanche2023spring/fi8xzygib5jdshgkhysm.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "124154",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "7537405",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7831618,
        "duration": 0.900667,
        "rotation": 0,
        "nb_frames": 55,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T16:15:20.628Z" }
      }
    ],
    "title": "",
    "description": "it's a get()-set()-go on the digital knitting. these tapestries are \"stitched together\" sketches based off of random + noise renderings.",
    "code": "function setup() {\n  createCanvas(400, 400);\n  // colorMode(HSB);\n}\n\nfunction draw() {\n  let m=noise(2);\n  background(m+millis*0.01,random(200),m*millis()*0.2);\nimg = createImage(100,100);\nimg.loadPixels();\n\n  for(let y=0;y<img.height;y++){\n    for(let x=0;x<img.width;x++){\n      let c= color(random(y,x),random(x,y), random(100,255));\n      img.set(x/m,y*m,c);\n    }\n  }\n  img.updatePixels();\n    noSmooth();\nimage(img,0,0,width,height);\n  push()\n  translate(width/2,height/2)\n  rotate(3*PI/2);\n  image(img,width/2*m,0,width,height);\n  pop()\n  \n    push()\n  translate(width,height)\n  rotate(PI);\n  image(img,0,0,width,height);\n  pop()\n\n//     image(img,width/2,height/2,width,height);\n // noLoop();//\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "This is cool!!",
        "created_at": { "$date": "2023-03-10T16:30:49.884Z" }
      }
    ]
  },
  {
    "_id": "pgCQGEzYuKwkiuM8d",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T00:00:44.659Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0ae462b0ceb7faa8d7011027f603a3f3",
        "public_id": "avalanche2023spring/mde7mlsoodjccwxzahg0",
        "version": 1683849654,
        "version_id": "f3027d3ab56ac144ca04b09e03be0e03",
        "signature": "07e4c9fb51c45f2d491cc75f3a89c1f61b9286ff",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T00:00:54Z",
        "tags": [],
        "bytes": 502907,
        "type": "upload",
        "etag": "f8d1974695dad64b88cf4ff7eccc6894",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683849654/avalanche2023spring/mde7mlsoodjccwxzahg0.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683849654/avalanche2023spring/mde7mlsoodjccwxzahg0.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2367e40ac275aa8b3ca0cc2045d10ba5",
        "public_id": "avalanche2023spring/tfmeczpn0jmd2iqdpyky",
        "version": 1683849657,
        "version_id": "2fe3ff24d9fe0c5e7245a0fb7148d4a5",
        "signature": "731954cd26197032deba1eefcb13b14d75492c48",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T00:00:57Z",
        "tags": [],
        "bytes": 562209,
        "type": "upload",
        "etag": "2066bbd5add097b6950a4a5ed861ff9e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683849657/avalanche2023spring/tfmeczpn0jmd2iqdpyky.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683849657/avalanche2023spring/tfmeczpn0jmd2iqdpyky.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "388e0a395f840a0637e6dd07f189aec6",
        "public_id": "avalanche2023spring/oe3gge8uxt8h0mqumlt2",
        "version": 1683849659,
        "version_id": "3e932bee80710c0f458344345db59c84",
        "signature": "45c03e1160ffdbffd7158a9bd82df829dee921a1",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T00:00:59Z",
        "tags": [],
        "bytes": 138598,
        "type": "upload",
        "etag": "64e98a0f2f3cc2a1ee40a586fe109bad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683849659/avalanche2023spring/oe3gge8uxt8h0mqumlt2.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683849659/avalanche2023spring/oe3gge8uxt8h0mqumlt2.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T11:44:14.208Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:13:18.434Z" }
      }
    ],
    "title": "",
    "description": "Playing around with some ~shapes~",
    "comments": []
  },
  {
    "_id": "pkZjn9MXvCLR9WvBf",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T20:02:29.631Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f467949fc5a7f046209d496bd0b856a1",
        "public_id": "avalanche2023spring/gkd7gmooiwik8abrjaq7",
        "version": 1682021010,
        "version_id": "749377131070b03594d98294dccec3e9",
        "signature": "dbfb47d4b3be43365a20f1fd67ebb56dbb5eb6a8",
        "width": 1024,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-20T20:03:30Z",
        "tags": [],
        "bytes": 599480,
        "type": "upload",
        "etag": "8d1eed001fd3becdb0f927de5cbc103a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682021010/avalanche2023spring/gkd7gmooiwik8abrjaq7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682021010/avalanche2023spring/gkd7gmooiwik8abrjaq7.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "47136c36f356ef0c0f8a643f8bc330b5",
        "public_id": "avalanche2023spring/fbmvhjzzepqpu7gg7k0d",
        "version": 1682022147,
        "version_id": "ed31c88385a857a024933d733ebc4e87",
        "signature": "4beabe36893020c34edfcdf190697840baa8c00e",
        "width": 1024,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-20T20:22:27Z",
        "tags": [],
        "bytes": 562990,
        "type": "upload",
        "etag": "52a36d0d328591a0c756e44fc5f3bd54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682022147/avalanche2023spring/fbmvhjzzepqpu7gg7k0d.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682022147/avalanche2023spring/fbmvhjzzepqpu7gg7k0d.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3fe81a29a2bb51f09b8e1c72475f0896",
        "public_id": "avalanche2023spring/av8ln95porsbh34rdfwx",
        "version": 1682022305,
        "version_id": "965db4b4e38ff15d1934ea8dc772760f",
        "signature": "dad8e555f7f661ecc29812d74b482e5500262b8d",
        "width": 1024,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-20T20:25:05Z",
        "tags": [],
        "bytes": 589983,
        "type": "upload",
        "etag": "c6d768a2b001e525f05ad4f9d9ae7aab",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682022305/avalanche2023spring/av8ln95porsbh34rdfwx.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682022305/avalanche2023spring/av8ln95porsbh34rdfwx.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:00:04.475Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:42:50.441Z" }
      }
    ],
    "title": "",
    "description": "**Blue Willow's attempt at generating a labelled diagram of parts of a flower** revealed that it is not very good at (possibly not trained in) diagrams. The three images are in the reverse order of generation. It took few rounds of refining the prompt and regeneration to find a diagram, as most of the direct results of the prompt produced colorful artistic renderings of drawn flowers. I also find the distorted letters that DALLE and Blue Willow produce to be interesting. Is the smeared, approximated aesthetic of AI generated art going to be a norm?",
    "comments": []
  },
  {
    "_id": "pqBs5KALsQWqd3cju",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-22T06:41:44.589Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a1b911e244dbea0e9423ae84048113f0",
        "public_id": "avalanche2023spring/fttj9v1zs4tlujtvqjdo",
        "version": 1679467314,
        "version_id": "bd99c8d160cedee61bdc146aeaf53673",
        "signature": "0eff2364a870dda714a78d4d16017c40fe5a3e0f",
        "width": 1451,
        "height": 1268,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-22T06:41:54Z",
        "tags": [],
        "bytes": 963266,
        "type": "upload",
        "etag": "58c94ba0efec76144a15413a580aba29",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679467314/avalanche2023spring/fttj9v1zs4tlujtvqjdo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679467314/avalanche2023spring/fttj9v1zs4tlujtvqjdo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7abed5497dabd1dae05312622e639af7",
        "public_id": "avalanche2023spring/bfnlzlc0jiebtoiebanh",
        "version": 1679467318,
        "version_id": "222b5a456a5f71d077c3fc6ed205ffcf",
        "signature": "b90d3a609872f2008bd9a70c2df49521cc3985b8",
        "width": 832,
        "height": 1227,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-22T06:41:58Z",
        "tags": [],
        "bytes": 102063,
        "type": "upload",
        "etag": "166d5ca33bbd8d0ca07999b955b69e39",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679467318/avalanche2023spring/bfnlzlc0jiebtoiebanh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679467318/avalanche2023spring/bfnlzlc0jiebtoiebanh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:30.177Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:33:45.253Z" }
      }
    ],
    "title": "",
    "description": "First part of the individual challenge. Spent a while making patterns on paper.js and converted them into workable pieces on Illustrator.",
    "comments": []
  },
  {
    "_id": "ptG2XB43gnfD6HxSp",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "API",
    "created_at": { "$date": "2023-04-26T00:04:40.295Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b4604f8476ae17749d11ad5add7acc9e",
        "public_id": "avalanche2023spring/kpcejdg8oewo5y1mrj81",
        "version": 1682467502,
        "version_id": "de14e142f439ce74c707e59db8d2bfae",
        "signature": "3d30f36488a71a2e74df09a312726f5c06fa6107",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-26T00:05:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 12762149,
        "type": "upload",
        "etag": "e73e11848554954ba8708de9353f35de",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682467502/avalanche2023spring/kpcejdg8oewo5y1mrj81.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682467502/avalanche2023spring/kpcejdg8oewo5y1mrj81.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682467502/avalanche2023spring/kpcejdg8oewo5y1mrj81.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125014",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "6700395",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6835339,
        "duration": 14.936667,
        "rotation": 0,
        "nb_frames": 897,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "39217a7ff68c0278990008d7c948e090",
        "public_id": "avalanche2023spring/kp6l0fs7bst6qnksmuhk",
        "version": 1682467508,
        "version_id": "c208aed9ca12560604ea41f6a5353d21",
        "signature": "18615f48bded9e7f14cdfda3e2fa73e64a409a2d",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-26T00:05:08Z",
        "tags": [],
        "bytes": 6604049,
        "type": "upload",
        "etag": "c31360795a335265fcad59da28c80894",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682467508/avalanche2023spring/kp6l0fs7bst6qnksmuhk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682467508/avalanche2023spring/kp6l0fs7bst6qnksmuhk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T02:27:44.872Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-26T03:10:26.515Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T01:14:49.571Z" }
      }
    ],
    "title": "",
    "description": "This is the week to try out the skipped weeks. In this particular case: Comp Sound. I use p5.sound to make my letterform interactive. It currently only accepts amplitude levels but with more time I’ll try to add a particle visualiser for the fft as well.",
    "comments": [
      {
        "commenter_id": "me69bqQXDu4jtokwu",
        "comment": "love this",
        "created_at": { "$date": "2023-04-28T01:15:04.121Z" }
      }
    ]
  },
  {
    "_id": "pvs7djQwR9wxFShyc",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-19T16:26:34.2Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c52bac9c5768b875b82ace4c63fcb449",
        "public_id": "avalanche2023spring/tzwpycpgfqs9sfzwmr7h",
        "version": 1676824002,
        "version_id": "808fa4288090cb05e867d3da4074e985",
        "signature": "5a1d0067e330d0ea74affac549cf0788681ca395",
        "width": 955,
        "height": 828,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-19T16:26:42Z",
        "tags": [],
        "bytes": 17960,
        "type": "upload",
        "etag": "947f2adcf016f7335bcd90e25d7b5c35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676824002/avalanche2023spring/tzwpycpgfqs9sfzwmr7h.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676824002/avalanche2023spring/tzwpycpgfqs9sfzwmr7h.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ea450bed7d72e1ca836210527324866c",
        "public_id": "avalanche2023spring/gtqficanqbihvijvm0gr",
        "version": 1676824005,
        "version_id": "4a4260cbae71926ef880287c9b6e5f49",
        "signature": "667e1410db11ca79f5beb5a9d9bfabb2fa73e559",
        "width": 955,
        "height": 828,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-19T16:26:45Z",
        "tags": [],
        "bytes": 120268,
        "type": "upload",
        "etag": "a6ca1d91040e2ae4b7252e595ff784b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676824005/avalanche2023spring/gtqficanqbihvijvm0gr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676824005/avalanche2023spring/gtqficanqbihvijvm0gr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "678f92ab14f3e05d9ece55ba6f4b86cc",
        "public_id": "avalanche2023spring/ys6qh5yrbguutxspmqvy",
        "version": 1676824007,
        "version_id": "c7e25e887630b0aea312def1d1376141",
        "signature": "663c5cafd8a64f9fbc4f2cc24def99551c7d259f",
        "width": 955,
        "height": 828,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-19T16:26:47Z",
        "tags": [],
        "bytes": 205349,
        "type": "upload",
        "etag": "b0b0eb2d7987d24fcb9bb2abc44314fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676824007/avalanche2023spring/ys6qh5yrbguutxspmqvy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676824007/avalanche2023spring/ys6qh5yrbguutxspmqvy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-19T16:53:19.91Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-19T17:03:50.413Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Sol Lewitt's Broken Bands of Color in Four Directions at the MoMA, adapted to be editable.",
    "inspiration_name": "Sol LeWitt",
    "inspiration_url": "https://www.moma.org/collection/works/94278",
    "code": "const bricks = { \n  width: 50,\n  height: 25,\n  rotation: 0,\n}\n\nlet colours = [\"red\", \"yellow\", \"blue\", \"green\", \"orange\", \"purple\"];\nlet colPos = 0;\n\nconst pane = new Tweakpane.Pane();\npane.addInput(bricks, \"width\", { min: 5, max: 100 });\npane.addInput(bricks, \"height\", { min: 5, max: 50 });\npane.addInput(bricks, \"rotation\", { min: 0, max: 360 });\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n  noStroke();\n  noLoop();\n  colours = shuffle(colours);\n  noLoop();\n}\n\nfunction draw() {\n  background(220);\n  translate(width/2,height/2);\n  rotate(bricks.rotation);\n  for (let i=-1*width; i<width; i++) {\n    for (let j=-1*height; j<height; j++) {\n      push();\n        let offset = 0;\n        if (j%2===0) {\n          offset = 0;\n        } else {\n          offset = bricks.width/2;\n        }\n        // let c1 = floor(colourValue());\n        // console.log(colourValue());\n        fill(colourValue());\n        rect((i*bricks.width) - offset, j*bricks.height, bricks.width, bricks.height);\n      pop();\n    }\n  }\n}\n\nfunction colourValue() {\n  let c = colours[colPos];\n  colPos++;\n  if (colPos => colours.length) {\n    colours = shuffle(colours);\n    colPos = 0;\n  }\n  return c;\n}",
    "comments": []
  },
  {
    "_id": "pyBMtuSkiFhzGr7NK",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T19:31:13.4Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bdd45ea89673516a4dcffdb1410ed261",
        "public_id": "avalanche2023spring/d1itmtzzohejyo9hgrqe",
        "version": 1681414296,
        "version_id": "5cfa6c686c5add059c3b5adea3208d9b",
        "signature": "e5b2e9ad53fa1103b1fdac42eac5f6bebf2c0f3d",
        "width": 1821,
        "height": 1821,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T19:31:36Z",
        "tags": [],
        "bytes": 199992,
        "type": "upload",
        "etag": "9d5d33e8d7167bae5431cc40564be139",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681414296/avalanche2023spring/d1itmtzzohejyo9hgrqe.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681414296/avalanche2023spring/d1itmtzzohejyo9hgrqe.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T19:34:46.513Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T20:56:29.74Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T02:42:39.573Z" }
      }
    ],
    "title": "",
    "description": "Shristi, Rama and I used predictive text and Markov chains to write this story.",
    "comments": []
  },
  {
    "_id": "pzv7Cy4E3TTN47BHg",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T05:10:31.641Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a22559cb6d35b793e93534f6f705e8c6",
        "public_id": "avalanche2023spring/ej60aex9jglbdcjq3jgg",
        "version": 1683868458,
        "version_id": "4d641477749847b8c86e4c3067736996",
        "signature": "c1442b3aae7d1217e36bca5c67bcd0bb5a4928aa",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T05:14:18Z",
        "tags": [],
        "bytes": 467614,
        "type": "upload",
        "etag": "305e3a13bc2961d1e1dd170ea45aca7e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683868458/avalanche2023spring/ej60aex9jglbdcjq3jgg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683868458/avalanche2023spring/ej60aex9jglbdcjq3jgg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "99c0971445c9aae80d497a8a94f8f4ef",
        "public_id": "avalanche2023spring/yjpuhzsihpndhi7sahsa",
        "version": 1683868462,
        "version_id": "58df912cbef5826ff77e666f0326b3e6",
        "signature": "c33f0604dea0aefa4f478b1743376e763b0e3d0e",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T05:14:22Z",
        "tags": [],
        "bytes": 505258,
        "type": "upload",
        "etag": "ff8b6864772be39a87b349b4cf081d1f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683868462/avalanche2023spring/yjpuhzsihpndhi7sahsa.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683868462/avalanche2023spring/yjpuhzsihpndhi7sahsa.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d40cd2df206ab5862e306c3a3cd7c9c5",
        "public_id": "avalanche2023spring/dflvwhbcmbdas123lb0f",
        "version": 1683868466,
        "version_id": "d8c6e24a4a253b9551dbe6e53d46b022",
        "signature": "ae496d317d335fa7d8024fa6aa2c50fc3714dacc",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T05:14:26Z",
        "tags": [],
        "bytes": 480388,
        "type": "upload",
        "etag": "44c693b31e523567977201d520b93c3d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683868466/avalanche2023spring/dflvwhbcmbdas123lb0f.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683868466/avalanche2023spring/dflvwhbcmbdas123lb0f.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T10:19:42.418Z" }
      }
    ],
    "title": "",
    "description": "🖍️",
    "comments": []
  },
  {
    "_id": "q6Edj7wrrtA7x7Sna",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": { "$date": "2023-02-03T22:46:16.447Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "58e718db09686a0854333842a719eeb8",
        "public_id": "avalanche2023spring/bucqa1cmudkjuped28sn",
        "version": 1675464404,
        "version_id": "e2beb8fcf1650917b958c9cd03b0054c",
        "signature": "7d5b18e7b9a25276fba73455e88c12035f7c8093",
        "width": 788,
        "height": 663,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T22:46:44Z",
        "tags": [],
        "bytes": 29991,
        "type": "upload",
        "etag": "9da1c3f09e24c2e02d164898498137b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675464404/avalanche2023spring/bucqa1cmudkjuped28sn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675464404/avalanche2023spring/bucqa1cmudkjuped28sn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T23:52:48.858Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-04T02:41:10.141Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-04T04:13:16.291Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "A basic p5.js composition! This is my first sketch ever made originally.",
    "comments": []
  },
  {
    "_id": "q8Dfwti7GR67C3No6",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T17:54:57.03Z" },
    "posted": true,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-04-03T03:22:56.34Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/15.1.0/Tone.min.js\n/* global Tone */\n\n// First, create the sampler\nconst sampler = new Tone.Sampler({\n  urls: {\n    kick: \"https://tonejs.github.io/audio/drum-samples/kick.mp3\",\n    snare: \"https://tonejs.github.io/audio/drum-samples/snare.mp3\",\n    hatClosed: \"https://tonejs.github.io/audio/drum-samples/hhc.mp3\",\n    hatOpen: \"https://tonejs.github.io/audio/drum-samples/hho.mp3\",\n  },\n  onload: () => console.log(\"sampler loaded\"),\n}).toMaster();\n\nTone.Transport.bpm.value = 120;\n\nwindow.onmousedown = () => {\n  // Play the drum beat!\n\n  const beat = generateBeat();\n  play(beat);\n};\n\nfunction generateBeat() {\n  const b = [];\n\n  const kickPattern = [1, 0, 0, 0, 1, 0, 0, 0];\n  const snarePattern = [0, 0, 1, 0, 0, 0, 1, 0];\n  const hatPattern = [1, 1, 1, 1, 1, 1, 1, 1];\n\n  for (let i = 0; i < 8; i++) {\n    const time = Tone.Time(\"4n\") * i;\n    if (kickPattern[i]) {\n      b.push([\"kick\", time]);\n    }\n    if (snarePattern[i]) {\n      b.push([\"snare\", time]);\n    }\n    if (hatPattern[i]) {\n      b.push([\"hatClosed\", time]);\n    }\n  }\n\n  return b;\n}\n\nfunction play(beat) {\n  let t = Tone.now();\n  for (const note of beat) {\n    const sound = note[0];\n    const time = note[1];\n    console.log(sound, time);\n    sampler.triggerAttackRelease(sound, Tone.Time(\"16n\"), t + time);\n  }\n}\n\nconsole.log(\"click for music!\");",
    "comments": []
  },
  {
    "_id": "qC57s3ZpJPLRYsMhg",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-19T20:02:52.008Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ec1f5e3e667703ad00f40897bd567a5b",
        "public_id": "avalanche2023spring/c8dttfsuybdacr4xwd7g",
        "version": 1681934595,
        "version_id": "f5ecf2d8360cfeb43ed6923d213e06ab",
        "signature": "7e37d7ae70f7a700168212253fa861590f3c5b4d",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T20:03:15Z",
        "tags": [],
        "bytes": 1808773,
        "type": "upload",
        "etag": "5b134561aeed29a31b0fdb5ae6a96055",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681934595/avalanche2023spring/c8dttfsuybdacr4xwd7g.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681934595/avalanche2023spring/c8dttfsuybdacr4xwd7g.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bd0750cccf140cf935b72781d86223a4",
        "public_id": "avalanche2023spring/j0buhrxexmrugzjaq4wu",
        "version": 1681934629,
        "version_id": "fae404fd6960533ce690bbb6033881e8",
        "signature": "2ab439f05aa1e6784913b467202f0d5234cb7ad3",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T20:03:49Z",
        "tags": [],
        "bytes": 1782104,
        "type": "upload",
        "etag": "d0044517ef5eff2358f30e00c55b0078",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681934629/avalanche2023spring/j0buhrxexmrugzjaq4wu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681934629/avalanche2023spring/j0buhrxexmrugzjaq4wu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "53631eaa45840835cff1139fb0e0870b",
        "public_id": "avalanche2023spring/h2zqup1fzpmtr9fopqwg",
        "version": 1681934632,
        "version_id": "304358a40fbca1d7405fa6696d857e05",
        "signature": "6e84998473039596897ccbe728a537bb3e8173dd",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-19T20:03:52Z",
        "tags": [],
        "bytes": 1745716,
        "type": "upload",
        "etag": "04fb3d9744e3e0e58af6074553b4ba4e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681934632/avalanche2023spring/h2zqup1fzpmtr9fopqwg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681934632/avalanche2023spring/h2zqup1fzpmtr9fopqwg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T22:33:47.07Z" }
      }
    ],
    "title": "",
    "description": "I spent a lot of time playing around on Midjourney – I bought a subscription and think it’s definitely worthwhile. I experimented creating images with corgis in the style of different famous paintings, art styles, etc. A few observations:\n- Midjourney defaulted to the lighter Pembroke corgi. When I specified that I wanted a darker cardigan corgi, Midjourney did not understand and thought I wanted a corgi on a cardigan sweater (see the last photo - quite hilarious), and only understood when I was more specific in writing “cardigan Welsh corgi”. \n- Midjourney seemed to have a hard time with specific numbers. For example, even though I specified “4 corgis,”Midjourney gave me options with 3, 5, 4, and 3 corgis. This happened on multiple occasions. \n- Midjourney also had a hard time understanding when I requested multiple types of subjects (for example adding cats as well).\n\nOverall, I’m very impressed with the level of detail and realism in most of the photos that I was able to request using plain English.",
    "comments": [
      {
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "comment": "I need one of those cardigans. ",
        "created_at": { "$date": "2023-04-19T22:33:58.731Z" }
      }
    ]
  },
  {
    "_id": "qGMSLEi9Cgu8yQ5Zb",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T02:28:38.001Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e7cf8316d7c3fbec546fc97be33c4974",
        "public_id": "avalanche2023spring/j4vzfvyqe90fnr6y4df2",
        "version": 1680834578,
        "version_id": "08a512ca227ca93d945e05208b5d9482",
        "signature": "984635ea581f1ad10befd695b344be2145d3a2b0",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-07T02:29:38Z",
        "tags": [],
        "pages": 0,
        "bytes": 137026,
        "type": "upload",
        "etag": "f3f7c590c6ce3acdbe3b872e18afe0bb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680834578/avalanche2023spring/j4vzfvyqe90fnr6y4df2.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680834578/avalanche2023spring/j4vzfvyqe90fnr6y4df2.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680834578/avalanche2023spring/j4vzfvyqe90fnr6y4df2.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "High",
          "bit_rate": "919436",
          "time_base": "1/600"
        },
        "frame_rate": 11,
        "bit_rate": 926373,
        "duration": 1.183333,
        "rotation": 0,
        "nb_frames": 13,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T02:38:02.578Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:05:46.267Z" }
      }
    ],
    "title": "",
    "description": "Here's a walkcycle animation I made!",
    "comments": []
  },
  {
    "_id": "qHMaTsFGADY2fMGtG",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-04T06:26:19.139Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "24c4c0b2321ad137ab46db14a0ec8eac",
        "public_id": "avalanche2023spring/fcqjjr0f9xzttk2d63ap",
        "version": 1680589590,
        "version_id": "3ce4a4fbd1bcb4d5ae626269d5d3e208",
        "signature": "fb534a9851d145204ee8814a4a2748507f5e1944",
        "width": 998,
        "height": 502,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-04T06:26:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 1514228,
        "type": "upload",
        "etag": "f2d0886d6f2028f2e7e158ad9b629738",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680589590/avalanche2023spring/fcqjjr0f9xzttk2d63ap.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680589590/avalanche2023spring/fcqjjr0f9xzttk2d63ap.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680589590/avalanche2023spring/fcqjjr0f9xzttk2d63ap.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316853",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "834892",
          "dar": "499:251",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 1161217,
        "duration": 10.4,
        "rotation": 0,
        "nb_frames": 312,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T22:57:03.193Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:33:35.315Z" }
      }
    ],
    "title": "",
    "description": "Spent a few hours failing at sprites lol. The program keeps redrawing sprites on top of each other, no matter what I tried. Commenting in lines 69-74 breaks the code entirely.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\nlet gold = [];\nlet rows = 7;\nlet rowWidth;\n\nlet player;\nlet playerY;\n\nlet gameSpeed = 1;\nlet score = 0;\n\nfunction setup() {\n    createCanvas(600, 300);\n\n    rowWidth = height/rows;\n\n    // for (let i=0; i<5; i++) {\n    //     gold[i] = createSprite(\n    //         width/2 + rowWidth*floor(random(0, rows)),\n    //         rowWidth/2 + rowWidth*floor(random(0, rows)),\n    //         rowWidth,\n    //         rowWidth\n    //     );\n    // }\n    \n    for (let i=0; i<5; i++) {\n        gold.push({\n          x: width/2 + rowWidth*floor(random(0, rows)),\n          y: rowWidth/2 + rowWidth*floor(random(0, rows)),\n        });\n    }\n    \n    if (rows%2 === 0) {\n        playerY = rowWidth*(rows/2) - rowWidth/2;\n    } else {\n        playerY = height/2;\n    }\n    player = createSprite(width/4, playerY, rowWidth, rowWidth)\n    \n}\n\nfunction draw() {\n    \n    for (let g of gold) {\n        g = createSprite(g.x, g.y, rowWidth, rowWidth);\n    }\n    for (let g of gold) {\n        g.x-=gameSpeed;\n    }\n    \n    background(255);\n    drawSprites();\n    \n    push();\n        fill(0);\n        textSize(15);\n        text(`Score: ${score}`, 10, 20)\n    pop();\n    \n    if(keyIsDown(38)){\n      player.position.y-=gameSpeed;\n    }\n    if(keyIsDown(40)){\n      player.position.y+=gameSpeed;\n    }\n    \n    // for (let g of gold) {\n    //     if (player.collide(g)) {\n    //         g.remove();\n    //         score++;\n    //     }\n    // }\n    \n}",
    "comments": []
  },
  {
    "_id": "qKRCRzsoc2KpEREm8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-10T22:12:24.074Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "82a8487c547e82ee07c0a5de6f9f9f7d",
        "public_id": "avalanche2023spring/zasdrlmvobzd7tl91lop",
        "version": 1683756747,
        "version_id": "421d06d227d029c12ccd949afa6e2869",
        "signature": "3eef6d0d675dad4d0d94d6102067bb02c1242ac3",
        "width": 1510,
        "height": 1134,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-10T22:12:27Z",
        "tags": [],
        "bytes": 250240,
        "type": "upload",
        "etag": "02eb9df1f03d73e03dce1e44b08eb596",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683756747/avalanche2023spring/zasdrlmvobzd7tl91lop.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683756747/avalanche2023spring/zasdrlmvobzd7tl91lop.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-11T23:28:25.963Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T11:44:36.814Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T16:28:53.141Z" }
      }
    ],
    "title": "",
    "description": "Extension of the previous where each word is now separated and placed randomly on the page and also has a random width. Also added a condition for periods",
    "comments": []
  },
  {
    "_id": "qRctkCpDfvN3ZW8w9",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T02:58:18.436Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b7eca9c38fa3a667c6734669ae7ff2f0",
        "public_id": "avalanche2023spring/kn3ul3limgtgb1robpch",
        "version": 1682046137,
        "version_id": "18a2f46806a74fa90fee00d2891126da",
        "signature": "04af2b4c6f8eb26d210f90e3cf87b56864e90aa2",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T03:02:17Z",
        "tags": [],
        "bytes": 198249,
        "type": "upload",
        "etag": "f8dcbe6f5ac7db75eb87a3b53a3f4c6e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682046137/avalanche2023spring/kn3ul3limgtgb1robpch.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682046137/avalanche2023spring/kn3ul3limgtgb1robpch.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c684fc23c49373473481f1e5bd4effe9",
        "public_id": "avalanche2023spring/twyq3tenckcaosaukhq7",
        "version": 1682046149,
        "version_id": "8d7b48f769f39cc0e2943ded5f5aca4c",
        "signature": "daa9e295fbfca34a4ff3a02175b65d8c565de3da",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T03:02:29Z",
        "tags": [],
        "bytes": 249188,
        "type": "upload",
        "etag": "1bffbf418827dbbb5aceda25e90a2615",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682046149/avalanche2023spring/twyq3tenckcaosaukhq7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682046149/avalanche2023spring/twyq3tenckcaosaukhq7.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "69c814abe4e134903b4b1fe805676882",
        "public_id": "avalanche2023spring/jsf7wjwjk76mq22q0vau",
        "version": 1682046162,
        "version_id": "07264f3c614ea0d9d5c29a9487e1c54e",
        "signature": "84557caa7901ed9f39af82bcbf3f6d63c7be869b",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-21T03:02:42Z",
        "tags": [],
        "bytes": 158733,
        "type": "upload",
        "etag": "ccf71df32536d603a22e8fc7d1f63dbd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682046162/avalanche2023spring/jsf7wjwjk76mq22q0vau.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682046162/avalanche2023spring/jsf7wjwjk76mq22q0vau.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:17:13.616Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:36:29.495Z" }
      }
    ],
    "title": "",
    "description": "I explored the capabilities of Stable Diffusion, including the negative prompt query and guidance scale. I wanted to see what would happen if I instructed the software to make a typographic poster for a festival. I'm curious about the fake language Stable Diffusion invented - the only distinguishable English word I saw was \"music\" (sometimes spelled \"mussic\"). Here are the most interesting results I got.",
    "comments": []
  },
  {
    "_id": "qzHy4To6WNSm2Gp6H",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T11:11:39.48Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "r4qePSuf3yoGJw6fj",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T04:32:42.561Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c5ed946b4e46105235e95699b72be5d7",
        "public_id": "avalanche2023spring/vm5wawqruy0kijcpcfe1",
        "version": 1675657985,
        "version_id": "7e3d2b05afeba0f8bbe3c1c55659ff7c",
        "signature": "9b882d9c079a80e750b39e36e8eced338d39f44f",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-06T04:33:05Z",
        "tags": [],
        "bytes": 116971,
        "type": "upload",
        "etag": "45f1aa4238de9e2bdde87826a8a4a7a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675657985/avalanche2023spring/vm5wawqruy0kijcpcfe1.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675657985/avalanche2023spring/vm5wawqruy0kijcpcfe1.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8588ca6f1369f5eaa5a498c7cd0eb99a",
        "public_id": "avalanche2023spring/vwh1ajwab5exvx57w3ig",
        "version": 1675657988,
        "version_id": "c35da5ff500b36c3c234ac4322363c41",
        "signature": "448a82bcdf397892f5018dc037916c98d5c811bf",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-06T04:33:08Z",
        "tags": [],
        "bytes": 118752,
        "type": "upload",
        "etag": "912c07b6decb2a75370116dd7e9a4730",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675657988/avalanche2023spring/vwh1ajwab5exvx57w3ig.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675657988/avalanche2023spring/vwh1ajwab5exvx57w3ig.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T15:26:59.898Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-06T16:36:43.481Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:03:08.672Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:08:37.373Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T20:15:44.611Z" }
      }
    ],
    "title": "",
    "description": "I assigned 6 different colors to each side of a six sided die to color in some graph paper. The number I rolled determined which color would fill each box. I wanted the sketch to have uniform distribution among all the colors. I tried out a few mini sketches with different color palettes. A fully filled page is coming soon!",
    "comments": []
  },
  {
    "_id": "r5P5v4FiuBBQLc7b3",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T03:22:59.435Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7921c7fbfec61807655ab2e109ca8072",
        "public_id": "avalanche2023spring/x0kuswkribtorsvlp6av",
        "version": 1679628275,
        "version_id": "c8afdaa0ea762929a5c33a8fbe97854c",
        "signature": "e81a691a0b68b22118f2aa9ffce7a58cbfbd1500",
        "width": 5870,
        "height": 9043,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-24T03:24:35Z",
        "tags": [],
        "bytes": 6704798,
        "type": "upload",
        "etag": "14e33d1a719fbaf9b44b63863b7af3e0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679628275/avalanche2023spring/x0kuswkribtorsvlp6av.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679628275/avalanche2023spring/x0kuswkribtorsvlp6av.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T04:56:47.245Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-24T05:27:37.723Z" }
      }
    ],
    "title": "",
    "description": "I did not make this in paper.js, this is one of my own vector illustrations that I have been playing around with for a while! I 3d modelled some faces and used an online vector convertor to convert my 3d models to svg wireframes. After that, I used vector lines to compose the illustration in illustrator.",
    "comments": []
  },
  {
    "_id": "r9n95CiZGLEpvbcXk",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T05:28:30.469Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "302196392587127840b702d3075ff1f1",
        "public_id": "avalanche2023spring/hlyl76w3raxgtvoxhlac",
        "version": 1679635719,
        "version_id": "0fc2e71d3b4414487c1ce5e7ea637c26",
        "signature": "d03fdde0d7cf291fccae97fec6009035d9f7a738",
        "width": 1696,
        "height": 1596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T05:28:39Z",
        "tags": [],
        "bytes": 2126082,
        "type": "upload",
        "etag": "8b609cde16cf5d6da3e8949a1f9f56b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679635719/avalanche2023spring/hlyl76w3raxgtvoxhlac.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679635719/avalanche2023spring/hlyl76w3raxgtvoxhlac.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T12:08:34.214Z" }
      }
    ],
    "title": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// Set up the canvas and color palette\nvar canvasWidth = 800;\nvar canvasHeight = 800;\nvar colors = ['#F94144', '#F3722C', '#F8961E', '#F9C74F', '#90BE6D', '#43AA8B', '#577590'];\n\n// Create a group to hold the pattern\nvar pattern = new Group();\n\n// Create a function to generate a random number within a range\nfunction randomInRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n// Create a loop to draw the pattern\nfor (var i = 0; i < 50; i++) {\n  // Create a random color for the path\n  var color = colors[Math.floor(Math.random() * colors.length)];\n\n  // Create a new path and set its properties\n  var path = new Path();\n  path.strokeColor = color;\n  path.strokeWidth = 3;\n  path.opacity = 0.5;\n  path.smooth();\n\n  // Generate a random number of points for the path\n  var numPoints = Math.floor(randomInRange(3, 8));\n  for (var j = 0; j < numPoints; j++) {\n    // Generate a random point within the canvas bounds\n    var x = randomInRange(0, canvasWidth);\n    var y = randomInRange(0, canvasHeight);\n    var point = new Point(x, y);\n\n    // Add the point to the path\n    path.add(point);\n\n    // Add a small circle at the point\n    var circle = new Path.Circle({\n      center: point,\n      radius: 5,\n      fillColor: color\n    });\n\n    // Rotate the circle by a random amount\n    circle.rotate(randomInRange(0, 360));\n\n    // Add the circle to the pattern group\n    pattern.addChild(circle);\n  }\n\n  // Close the path to create a shape\n  path.closed = true;\n\n  // Add the path to the pattern group\n  pattern.addChild(path);\n}\n\n// Move the pattern to the center of the canvas\npattern.position = view.center;",
    "comments": []
  },
  {
    "_id": "rDwnKK8qSgkniJi9t",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T14:30:47.964Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "146fbf725cd7c9f48538c9f566a8cc26",
        "public_id": "avalanche2023spring/pyvalzbzkvx8bjotmo9h",
        "version": 1680273057,
        "version_id": "b298738a912d61d1cc0413fb25ea3a7f",
        "signature": "a831463d5f634d5da30d48772e4ebdc7c0053617",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T14:30:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 4067062,
        "type": "upload",
        "etag": "d84c6a7a5f78b16a28c32a9b5ae7287d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680273057/avalanche2023spring/pyvalzbzkvx8bjotmo9h.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680273057/avalanche2023spring/pyvalzbzkvx8bjotmo9h.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680273057/avalanche2023spring/pyvalzbzkvx8bjotmo9h.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "153359",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "1024014",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1186727,
        "duration": 27.416667,
        "rotation": 0,
        "nb_frames": 1645,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T15:15:58.4Z" }
      }
    ],
    "title": "",
    "description": "I got this pretty cinematic-sounding track and tone.js always surprises me with what it can do. There's a pretty deep rumble sound that may not come up if you have the volume low. I wanted to add a third instrument that sounded like a horn but I couldn't get it to sound quite like how I wanted it. Also, this uses the newest version of tone.js so I'm not sure if it will break in the js lab browser",
    "code": "const plucky = new Tone.PluckSynth({\n}).toDestination();\nplucky.volume.value = -40\nconst reverb = new Tone.Reverb({\n  decay: 30\n}).toDestination()\n\n\nconst lowPass = new Tone.Filter({\n  frequency: 1250,\n}).toDestination();\n\nconst bwah = new Tone.DuoSynth().connect(lowPass);\n\n\nconst gigra = new Tone.PolySynth( Tone.Synth, {\n  voice:11,\n  oscillator : {\n    type : \"fatsawtooth\"\n  },\n  envelope: {\n    attack: 1,\n    decay: 0.2,\n    sustain: 0.8,\n    release: 9,\n  },\n}).connect(lowPass);\ngigra.volume.value = 10\nvar lfo = new Tone.LFO(30, 10, 90); // hertz, min, max\nlfo.connect(lowPass.frequency);\nlfo.start();\n\n\nwindow.onmousedown = () => {\n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"F2\"], 2, 0) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 4 ) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 6 ) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 8 ) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 10 ) \n  let currentTime = Tone.now()\n  const loop = new Tone.Loop((time) => {\n    \n    plucky.triggerAttack(\"F2\", time + 0.125 );\n    plucky.triggerAttack(\"A2\", time + 0.25);\n    plucky.triggerAttack(\"D2\", time + 0.375);\n    plucky.triggerAttack(\"F2\", time + 0.5);\n    if (plucky.volume.value < -6) {\n    plucky.volume.value = plucky.volume.value + 3\n    }\n    currentTime = time\n    console.log(currentTime)\n  }, \"4n\").start(2);\n\n  const bwahLoop = new Tone.Loop((time) => {\n    \n    bwah.triggerAttackRelease(\"D1\", \"1n\", time)\n\n  }, \"2m\").start(12);\n\n  if (currentTime > 1) {\n    gigra.triggerAttackRelease(\"A1\", \"1n\", currentTime) \n  }\n\n  Tone.Transport.start();\n  Tone.start()\n};",
    "comments": []
  },
  {
    "_id": "rJSKd3JK8eeHeGCt8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T19:27:04.507Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37f8b7b36159541c5420ef099cc1c2f6",
        "public_id": "avalanche2023spring/tb1elkhspogzqpqhx3jv",
        "version": 1675366043,
        "version_id": "036b6f82d954ff94c067020e5d1c66c6",
        "signature": "a2677ed0ed20a62be9c056672cd8c296dd354b5e",
        "width": 683,
        "height": 1006,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T19:27:23Z",
        "tags": [],
        "bytes": 203513,
        "type": "upload",
        "etag": "e462a1eba88fcdcaaf2b2e9399c3d9d1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675366043/avalanche2023spring/tb1elkhspogzqpqhx3jv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675366043/avalanche2023spring/tb1elkhspogzqpqhx3jv.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T21:24:43.26Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-04T04:14:49.122Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-08T22:05:59.137Z" }
      }
    ],
    "title": "",
    "description": "Response to Reshma's instructions. Definitely spent too much time on this but I really wanted to see the result 😅",
    "comments": []
  },
  {
    "_id": "rKZ5ugMwtS5qCYqft",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-06T16:37:13.358Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d86cbfc6f145ccc207054cc2bfa10791",
        "public_id": "avalanche2023spring/mdaww0igbae0nj6lr6o2",
        "version": 1680799158,
        "version_id": "d26efd086f6576fcb2ebd2e7ae26dec0",
        "signature": "09fbe1b86b9ca19430dfeca8f9d97393b5e61fc1",
        "width": 1160,
        "height": 778,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-06T16:39:18Z",
        "tags": [],
        "pages": 0,
        "bytes": 6758850,
        "type": "upload",
        "etag": "da51136c3d2f5168ba47cb4b1140bf4d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680799158/avalanche2023spring/mdaww0igbae0nj6lr6o2.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680799158/avalanche2023spring/mdaww0igbae0nj6lr6o2.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680799158/avalanche2023spring/mdaww0igbae0nj6lr6o2.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1246149",
          "dar": "580:389",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 1303743,
        "duration": 41.4735,
        "rotation": 0,
        "nb_frames": 2317,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cb137ab3b83c0069997da3f18be115e5",
        "public_id": "avalanche2023spring/zwrcodpqjkprmokudrou",
        "version": 1680799192,
        "version_id": "c17acfda91c5164344f9357e7b6373e7",
        "signature": "f1104e0a39e6962aa96f88c3adfbd3ff3a5db438",
        "width": 1136,
        "height": 752,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-06T16:39:52Z",
        "tags": [],
        "bytes": 121869,
        "type": "upload",
        "etag": "c310e1161033bc8de45054b060edfb15",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680799192/avalanche2023spring/zwrcodpqjkprmokudrou.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680799192/avalanche2023spring/zwrcodpqjkprmokudrou.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:46:29.479Z" }
      }
    ],
    "title": "",
    "description": "Experimenting with gravity and collision in this sketch. I followed a tutorial online to make this; however, I couldn't resolve some issues like the score count before time ran out",
    "comments": []
  },
  {
    "_id": "rLr8eYAuoeFXJfyeR",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T19:15:48.859Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "063e2e052ed8802b7e75b4d36934f202",
        "public_id": "avalanche2023spring/x77dafbrmfsjohgbxswj",
        "version": 1680204339,
        "version_id": "184e0c4529393bbe91ccacc3b60ad4d4",
        "signature": "4446122624ec7ead9ba5151f6c4cf2aac0b410ae",
        "width": 1212,
        "height": 1194,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-30T19:25:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 18793686,
        "type": "upload",
        "etag": "0ae7a2af2215c644c309467e9c552962",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680204339/avalanche2023spring/x77dafbrmfsjohgbxswj.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680204339/avalanche2023spring/x77dafbrmfsjohgbxswj.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680204339/avalanche2023spring/x77dafbrmfsjohgbxswj.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126094",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "4442261",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5017224,
        "duration": 29.966667,
        "rotation": 0,
        "nb_frames": 1857,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dea5807b88eebf3564d2c0c983256e56",
        "public_id": "avalanche2023spring/lwr4qmsmzxcgkk2tpm64",
        "version": 1680204345,
        "version_id": "4a20e4b15221f5bd18ec0cf37ae5670e",
        "signature": "afd3f81b794febcdd1e8ec812029a34f201b111d",
        "width": 1212,
        "height": 1194,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-30T19:25:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 18779583,
        "type": "upload",
        "etag": "d64baaf2311d05ba4ee28cf1b6cbb56a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680204345/avalanche2023spring/lwr4qmsmzxcgkk2tpm64.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680204345/avalanche2023spring/lwr4qmsmzxcgkk2tpm64.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680204345/avalanche2023spring/lwr4qmsmzxcgkk2tpm64.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127433",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "11585446",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 11774648,
        "duration": 12.759333,
        "rotation": 0,
        "nb_frames": 768,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "d468841c0bd6ed8fb670c0206d9b0c1e",
        "public_id": "avalanche2023spring/iop9idc3gptbbcml6znh",
        "version": 1680204429,
        "version_id": "37f3055017d44294d470449c3abfdbc8",
        "signature": "be801f2b505e8c5f342c82d426d9d8389828aa88",
        "width": 1212,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-30T19:27:09Z",
        "tags": [],
        "bytes": 229822,
        "type": "upload",
        "etag": "249b41f382c9b503ff20b18ce6ef38b9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680204429/avalanche2023spring/iop9idc3gptbbcml6znh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680204429/avalanche2023spring/iop9idc3gptbbcml6znh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:18:53.488Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:13:31.499Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T15:17:07.884Z" }
      }
    ],
    "title": "",
    "description": "**Feeling Melancholy:** a simple sketch in a sad F minor to figure out Tone.js. In this, I'm playing the using mouse position, in the next sketch I'm hoping to let a random walker play.",
    "comments": []
  },
  {
    "_id": "rMXTAu6EPixXzCdXx",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T17:08:52.737Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e3c04cef854dc7dd23f01bcc9d946d43",
        "public_id": "avalanche2023spring/l3swg9fyypaqlyirwrne",
        "version": 1676049133,
        "version_id": "9441065cddad202a00dd7d2364437b13",
        "signature": "9f66a845d6e47e274fdf2f3fb0415c0a932af642",
        "width": 802,
        "height": 880,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-10T17:12:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 18293727,
        "type": "upload",
        "etag": "db0214c25021b5d706df9d324121ffd0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676049133/avalanche2023spring/l3swg9fyypaqlyirwrne.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676049133/avalanche2023spring/l3swg9fyypaqlyirwrne.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "4357732",
          "dar": "401:440",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 4401498,
        "duration": 33.25,
        "rotation": 0,
        "nb_frames": 1975,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T17:14:26.744Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:02.365Z" }
      }
    ],
    "title": "",
    "description": "This is a very convoluted and pretentious attempt at visualizing short-term volatility in the financial markets with random() radius ellipses you can draw",
    "inspiration_name": "Stock Market",
    "inspiration_url": "https://en.wikipedia.org/wiki/Stock_market",
    "code": "// define two areas where ellipses (currency) can be generated. Confifugre mouseDragged function limited to that area with a conditional statement \n\n//variables\nlet brushSize;\nlet rectW = 200;\nlet rectH = 200;\nlet moneyCount = 0;\nfunction setup() {\n  createCanvas(400, 400);\n  stroke(0);\n  background(153,101,21);\n  fill(220);\n  textAlign(CENTER);\n  textSize(24);\n  text(\"Click and drag mouse on canvas\", width / 2, rectH / 2);\n}\n\n//drawing the layout\nfunction draw() {\n  fill(220);\n  fill(0);\n  rect(width / 2, height / 2, 10, height/2)\n}\n\nfunction mousePressed() {\n   background(153,101,21);\n   brushSize = 10;\n}\n\n\n//generate coins on dragging and increase scale based on seconds\nfunction mouseDragged() {\n  let h = hour();\n  let m = minute();\n  let s = second();\n  x = (m == 1);\n  brushSize = s*2;\n  if (mouseY > height / 2 && mouseX < width / 2) {\n    fill(270);\n    ellipse(mouseX, mouseY, random(s,50));\n    fill(0);\n    rect(0, 0, width, rectH);\n\n    //currency count on left\n    fill(0, 255, 0);\n    textSize(64);\n    textAlign(CENTER);\n    moneyCount = moneyCount + (brushSize*2);\n    text(moneyCount,width / 2, rectH / 2)\n  }\n  else if (mouseY > height / 2 && mouseX > width / 2) {\n    fill(270,230,140);\n    ellipse(mouseX, mouseY, random(10, 50));\n    fill(0);\n    rect(0, 0, width, rectH);\n\n    //currency count on right\n    fill(255, 0, 0);\n    textSize(64);\n    textAlign(CENTER);\n    moneyCount = moneyCount + (brushSize);\n    text(moneyCount,width / 2, rectH / 2)\n\n  }\n}",
    "comments": []
  },
  {
    "_id": "rS6Ld9M3ZhNrcwnQk",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T03:33:45.744Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "867783e86ee6eb287febc68149a03d36",
        "public_id": "avalanche2023spring/hvanhb4l22zl3svp6rrj",
        "version": 1680234026,
        "version_id": "3dc2116044a9040166bb9fad8334c170",
        "signature": "77f92351f1f2c3c943389d33cbf8c10a2517a485",
        "width": 540,
        "height": 540,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T03:40:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 2232526,
        "type": "upload",
        "etag": "84e22bd03a83175e4a09c7d646e5eac2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680234026/avalanche2023spring/hvanhb4l22zl3svp6rrj.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680234026/avalanche2023spring/hvanhb4l22zl3svp6rrj.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680234026/avalanche2023spring/hvanhb4l22zl3svp6rrj.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192015",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "8803",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 207732,
        "duration": 85.966667,
        "rotation": 0,
        "nb_frames": 2579,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:51:50.875Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:14:32.432Z" }
      }
    ],
    "title": "",
    "description": "I wrote a song a few years ago on ADHD & I played around with it a little bit (im embarrassed so pls don't listen to it)",
    "comments": []
  },
  {
    "_id": "rTcczYxYj8yHmWn94",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T17:08:48.007Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5bc55009b19dee5292a9aad8e02f13da",
        "public_id": "avalanche2023spring/wbyhgkhkka2zdcfpdcjx",
        "version": 1678381753,
        "version_id": "8e15d220d780a6b98f7f7b0016991bf6",
        "signature": "b8c791e8138fc92a6d31eea5e01f8540d4d7044f",
        "width": 796,
        "height": 790,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T17:09:13Z",
        "tags": [],
        "bytes": 1075164,
        "type": "upload",
        "etag": "96bb8c4d31d0b79666b07b0727d360eb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678381753/avalanche2023spring/wbyhgkhkka2zdcfpdcjx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678381753/avalanche2023spring/wbyhgkhkka2zdcfpdcjx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:42.652Z" }
      }
    ],
    "title": "",
    "description": "WEEK 6 (2/4): What I did with Johnnys code. LOL It got so laggy and I didn't to lose what I had so I screenshot it real quick.",
    "comments": []
  },
  {
    "_id": "rbcZnrDWqrpPGjPYy",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T21:56:03.714Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9d166fd72a5086881abba517ce86315a",
        "public_id": "avalanche2023spring/scxho5ot2sbrzlhoit3j",
        "version": 1679608577,
        "version_id": "3c4c377099d58569dcc956c68b68e3f2",
        "signature": "d9f7a2ce28295781751efbba488a8042214568c2",
        "width": 500,
        "height": 700,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-23T21:56:17Z",
        "tags": [],
        "bytes": 76230,
        "type": "upload",
        "etag": "902ab5ed65ca00b86a26fbedec217a25",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679608577/avalanche2023spring/scxho5ot2sbrzlhoit3j.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679608577/avalanche2023spring/scxho5ot2sbrzlhoit3j.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ee5aef7f4cd4512c6331d4e9b823761d",
        "public_id": "avalanche2023spring/bvoh98rmfxsc6vnkdspe",
        "version": 1679608581,
        "version_id": "189c24fb16d9ff67514406e44f1c845a",
        "signature": "a3335507f19244021158296a138cca83f627a524",
        "width": 907,
        "height": 700,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-23T21:56:21Z",
        "tags": [],
        "bytes": 143194,
        "type": "upload",
        "etag": "92a8cd039eb30fad1d515e9ea517c421",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679608581/avalanche2023spring/bvoh98rmfxsc6vnkdspe.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679608581/avalanche2023spring/bvoh98rmfxsc6vnkdspe.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Playing around with Shristi's prompt sketch!",
    "comments": []
  },
  {
    "_id": "rfLMQg6CiLzyBx7b8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-24T23:09:29.335Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "537fc4a67119208de5150ddcab371ec4",
        "public_id": "avalanche2023spring/mfi4s64unno3hddvdnty",
        "version": 1677280191,
        "version_id": "1439ce73a902070c63ad1c76a5b29319",
        "signature": "c2507a249be46ce8858dd3ea1321f318df0c3623",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T23:09:51Z",
        "tags": [],
        "bytes": 93967,
        "type": "upload",
        "etag": "c97bcfc0763d3868e1fb9f4c5b038d1e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677280191/avalanche2023spring/mfi4s64unno3hddvdnty.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677280191/avalanche2023spring/mfi4s64unno3hddvdnty.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My take on the first challenge. Trying to get good numbers for noiseDetail() and the noise frequency was pretty tedious but bless Tweakpane! I did some adjustments to the color values to get more pinks because pink is cool 👍",
    "comments": []
  },
  {
    "_id": "riWDuPxkpuvAPge9j",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T14:50:23.88Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "78457cbc9a3e97a75384f3f311118352",
        "public_id": "avalanche2023spring/zz7ac8qzlndrq78xjrc7",
        "version": 1683903139,
        "version_id": "c7fb230b7e558f319ccd9a541f356d33",
        "signature": "e31748d110ad1deb7b69b0a6f59482d044138b00",
        "width": 1190,
        "height": 1184,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T14:52:19Z",
        "tags": [],
        "bytes": 440123,
        "type": "upload",
        "etag": "a5eeb21836c63f0cbbff91fcccab739d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683903139/avalanche2023spring/zz7ac8qzlndrq78xjrc7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683903139/avalanche2023spring/zz7ac8qzlndrq78xjrc7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f6cc1f22d8f2492b4a95225a6841c21d",
        "public_id": "avalanche2023spring/u5dtof3yaouzj2lb59dy",
        "version": 1683903764,
        "version_id": "c204ad372c22871690b111a8dc767b43",
        "signature": "d787542e6096d86db14427ba0be3e61c98aa0e54",
        "width": 1190,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T15:02:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 14746797,
        "type": "upload",
        "etag": "92b1c237261c4500550f8a3cfcc261ef",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683903764/avalanche2023spring/u5dtof3yaouzj2lb59dy.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683903764/avalanche2023spring/u5dtof3yaouzj2lb59dy.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683903764/avalanche2023spring/u5dtof3yaouzj2lb59dy.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127509",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "16510645",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 19772240,
        "duration": 5.966667,
        "rotation": 0,
        "nb_frames": 417,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3b3ef8c30b52217a34b05eeb5501657f",
        "public_id": "avalanche2023spring/axlpuwecrpeben4tqdqt",
        "version": 1683903838,
        "version_id": "f1fd0216485e083d45fc9a92ee4c55ba",
        "signature": "262260c750add972e25b79b455a6a1ecb1f73cbc",
        "width": 1190,
        "height": 1184,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-12T15:03:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 15844892,
        "type": "upload",
        "etag": "1a03d8632a0ea584c8c267edddb43923",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683903838/avalanche2023spring/axlpuwecrpeben4tqdqt.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683903838/avalanche2023spring/axlpuwecrpeben4tqdqt.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683903838/avalanche2023spring/axlpuwecrpeben4tqdqt.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128571",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "16955470",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 20281461,
        "duration": 6.25,
        "rotation": 0,
        "nb_frames": 436,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-23T13:05:13.096Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:16.999Z" }
      }
    ],
    "title": "",
    "description": "**Replicating Vera Molnar's Interruptions** felt easier using Turtle Graphics. I found this piece while reading [this blogpost](https://www.amygoodchild.com/blog/computer-art-50s-and-60s). Somehow this ended up very similar to one of the first sketches I did for this class (where I'd used the Cartesian system to achieve something similar).",
    "inspiration_name": "Interruptions, by Vera Molnar",
    "inspiration_url": "https://dam.org/museum/artists_ui/artists/molnar-vera/interruptions/",
    "code": "let myTurtle;\n\n\nfunction setup() {\n  \n  createCanvas(600, 600);\n  myTurtle = new Turtle(0, 0);\n  //myTurtle = new Turtle(-120, 170);\n  \n  noFill();\n  stroke(0);\n  strokeWeight(1);\n\n  frameRate(12);\n  //noLoop();\n}\n\nfunction draw() {\n  \n  background(250);\n\n  let lineWidth = 14;\n  \n  for (let i = 0; i<width; i+=lineWidth-2) {\n    for (let j = 0; j<height; j+=lineWidth-4) {\n      \n      myTurtle.penUp();\n      myTurtle.moveTo(i,j);\n      \n      if (i<=width/2)\n        strokeWeight(1+i/60);\n      if (i>width/2)\n        strokeWeight(1 + (width-i)/60)\n      \n      myTurtle.turnTo(setLineDegrees(i, j));\n\n      myTurtle.penDown();\n      if (noise(i*0.03, j*0.02) > 0.3)\n      myTurtle.moveForward(lineWidth);\n    }      \n  }\n   \n}\n\nfunction setLineDegrees(a, b) {\n  \n  let turn = noise(a + frameCount*0.03, b + frameCount*0.01)*180 + 205;\n  //let turn = random(0, -90);\n  \n  return turn;\n  \n}",
    "comments": []
  },
  {
    "_id": "rmQkFAauhAzFSoDgW",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T05:59:21.887Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "22ae3a0bc70dc384bf32ae05dfa78d32",
        "public_id": "avalanche2023spring/ka6f6gew43twrloslosx",
        "version": 1676613571,
        "version_id": "d2c64b851e50d8011f44ae17e3308645",
        "signature": "dce89776360bcf959399dea527a2e2253ea71c8a",
        "width": 826,
        "height": 824,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-17T05:59:31Z",
        "tags": [],
        "bytes": 413834,
        "type": "upload",
        "etag": "d5e09a9fce4fbaa8770da32671d301c1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676613571/avalanche2023spring/ka6f6gew43twrloslosx.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676613571/avalanche2023spring/ka6f6gew43twrloslosx.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T14:56:20.601Z" }
      }
    ],
    "title": "",
    "description": "For Sahiti, part 1 of the pair challenge. Graphed noise and used it control the circular overlays. Inspired by Dan Shiffman's series on Perlin Noise.",
    "inspiration_name": "Dan Shiffman's Perlin Noise",
    "inspiration_url": "https://www.youtube.com/playlist?list=PLRqwX-V7Uu6bgPNQAdxQZpJuJCjeOr7VD",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  noLoop();\n}\n\nfunction draw() {\n  background(125, 28, 22);\n  drawCircles(200, 200, 0, 200, 0, 50, 5, 50, 150, SCREEN);\n  drawGraph();\n  drawCircles(100, 100, 0, 200, 150, 50, 0.5, 10, 50, OVERLAY);\n}\n\nfunction drawGraph() {\n  let xoff = 0;\n\n  beginShape();\n  for (let x = 0; x < width; x += 2) {\n    let y = noise(xoff) * height;\n\n    //draw line\n    stroke(93, 31, 163);\n    noFill();\n    vertex(x, y);\n\n    //fill\n    push();\n    strokeWeight(2);\n    line(x, y, x, 400);\n    pop();\n\n    xoff += 0.02;\n  }\n  endShape();\n}\n\nfunction drawCircles(r, g1, g2, b1, b2, alpha, density, min, max, blend) {\n  let yoff = 0;\n\n  for (let x = 0; x < width; x += density) {\n    push();\n    blendMode(blend);\n\n    let y = noise(yoff) * 1000 - 300;\n    let colourR = r;\n    let colourG = map(y, width, 0, g1, g2);\n    let colourB = map(y, width, 0, b1, b2);\n\n    noStroke();\n    fill(colourR, colourG, colourB, alpha);\n\n    circle(x, y, round(random(min, max)));\n\n    pop();\n\n    yoff += 10;\n  }\n}",
    "comments": []
  },
  {
    "_id": "rmpWxnen3hRcmqwj4",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T21:06:49.564Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9a0c8afa64d6cb35b5212a190c814320",
        "public_id": "avalanche2023spring/yb4twduxunxzxccp8t0y",
        "version": 1677791224,
        "version_id": "b5bff2588a3635102f0baebcd16d42bc",
        "signature": "2680e51936e8e47076d659883b4a2bda540c41b1",
        "width": 710,
        "height": 714,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T21:07:04Z",
        "tags": [],
        "bytes": 385915,
        "type": "upload",
        "etag": "46adcc32f85b7f5b18ba40541947bd69",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677791224/avalanche2023spring/yb4twduxunxzxccp8t0y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677791224/avalanche2023spring/yb4twduxunxzxccp8t0y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b86800bf1e35d194c7e10523a2c572a2",
        "public_id": "avalanche2023spring/ieooyk8owu2jx11xqohi",
        "version": 1677791232,
        "version_id": "876c7ebbce5159d25a5c438dfe66a895",
        "signature": "68ee9a0af62b64f2dd2f4faf71ebccd2e31c898e",
        "width": 712,
        "height": 710,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T21:07:12Z",
        "tags": [],
        "bytes": 654055,
        "type": "upload",
        "etag": "5a421aa9f42a7e0d716958a4f8d7de2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677791232/avalanche2023spring/ieooyk8owu2jx11xqohi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677791232/avalanche2023spring/ieooyk8owu2jx11xqohi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-02T23:48:06.122Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T00:54:26.097Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T01:14:17.715Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T03:01:51.323Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T05:56:41.234Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T07:45:11.786Z" }
      }
    ],
    "title": "",
    "description": "Extension of challenge 1. I turned the dots into chaotic fireworks",
    "comments": []
  },
  {
    "_id": "rsXHnFzoTpddQqwP9",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T04:47:48.501Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "41a87c1da719094f024924611cbe3b96",
        "public_id": "avalanche2023spring/jc780vmd5mcfgagroypt",
        "version": 1680238125,
        "version_id": "15eb20ef23ccf479a3ef5299ce48869c",
        "signature": "752c6d5d5e1d2da228682527417fc0a15d1e493b",
        "width": 1638,
        "height": 1584,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T04:48:45Z",
        "tags": [],
        "bytes": 2249203,
        "type": "upload",
        "etag": "80d407e5ffdbc5fdccbde667ef3f7895",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680238125/avalanche2023spring/jc780vmd5mcfgagroypt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680238125/avalanche2023spring/jc780vmd5mcfgagroypt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8deeb909d4071617c58a56013eefda09",
        "public_id": "avalanche2023spring/i5f9iry5vlrznv7vsgoq",
        "version": 1680238214,
        "version_id": "a035950b60b2d66c15727328639ca41f",
        "signature": "af1ea605d0e01c92b8f6ea46bc8002e4040d712f",
        "width": 640,
        "height": 636,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T04:50:14Z",
        "tags": [],
        "pages": 0,
        "bytes": 8646010,
        "type": "upload",
        "etag": "c6f81f4b78cb0c8696a97cf35ef4729b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680238214/avalanche2023spring/i5f9iry5vlrznv7vsgoq.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680238214/avalanche2023spring/i5f9iry5vlrznv7vsgoq.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680238214/avalanche2023spring/i5f9iry5vlrznv7vsgoq.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "130777",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4149086",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 4289448,
        "duration": 16.125167,
        "rotation": 0,
        "nb_frames": 968,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "83b44a77ae8b1bf1b7cd46ce32e24a23",
        "public_id": "avalanche2023spring/q3txu1t0c4bjj1fhomhb",
        "version": 1680238230,
        "version_id": "c40b94776ab959c4b2f613d6b7756390",
        "signature": "d67009d7d077214241346cbe58d3ef65a90bc9fb",
        "width": 640,
        "height": 636,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T04:50:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 8513960,
        "type": "upload",
        "etag": "52e20b90bb069e8c24d56321ee731521",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680238230/avalanche2023spring/q3txu1t0c4bjj1fhomhb.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680238230/avalanche2023spring/q3txu1t0c4bjj1fhomhb.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680238230/avalanche2023spring/q3txu1t0c4bjj1fhomhb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "127147",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "5263211",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5400045,
        "duration": 12.613167,
        "rotation": 0,
        "nb_frames": 757,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:15:38.687Z" }
      }
    ],
    "title": "",
    "description": "Warning: annoying sounds ahead",
    "comments": []
  },
  {
    "_id": "ru4gNA3BFHTRXPQqC",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T16:50:20.876Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "49be39857b2cd1ae788fa4f850c8e120",
        "public_id": "avalanche2023spring/bkw584tr2cmoqzfkgdy4",
        "version": 1677862229,
        "version_id": "6d141a4a65ec386f191bf234c51fb74e",
        "signature": "0a93f794cb20c4fb82d93bb9578d38f6d50fa92b",
        "width": 892,
        "height": 534,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T16:50:29Z",
        "tags": [],
        "bytes": 247059,
        "type": "upload",
        "etag": "29db65ef9ac9fb6c8d06f9a14a34ba35",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677862229/avalanche2023spring/bkw584tr2cmoqzfkgdy4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677862229/avalanche2023spring/bkw584tr2cmoqzfkgdy4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6c72711da63f2d59ad27b7c1fdb79bd1",
        "public_id": "avalanche2023spring/fmqvirt2n6doascq0czs",
        "version": 1677862232,
        "version_id": "cd0aa0db59b10411858792d8ea2c2581",
        "signature": "8b1af39eec2c0f05a7a8b136a4443a722039f943",
        "width": 888,
        "height": 530,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T16:50:32Z",
        "tags": [],
        "bytes": 247840,
        "type": "upload",
        "etag": "74a6141c1fea6e05f0275d098eb5deb2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677862232/avalanche2023spring/fmqvirt2n6doascq0czs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677862232/avalanche2023spring/fmqvirt2n6doascq0czs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f6340fdd9af746af90b94d300564c8ae",
        "public_id": "avalanche2023spring/dinej6q3c7uxke7izdrl",
        "version": 1677862236,
        "version_id": "882155f93b11f518930d606b9d652745",
        "signature": "b99675439a5941fb363b27c42aa035c9db13e954",
        "width": 890,
        "height": 532,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T16:50:36Z",
        "tags": [],
        "bytes": 237644,
        "type": "upload",
        "etag": "bd223b7bde3336cd12269993fd6e944a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677862236/avalanche2023spring/dinej6q3c7uxke7izdrl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677862236/avalanche2023spring/dinej6q3c7uxke7izdrl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T19:41:19.039Z" }
      }
    ],
    "title": "",
    "description": "Extension of challenge 2!",
    "comments": []
  },
  {
    "_id": "ruogMmTy6mzu8LKHr",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T13:11:17.106Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0564524f0caeca2065fe67468d8ff654",
        "public_id": "avalanche2023spring/frsbygafeqbfurnje3vi",
        "version": 1680268471,
        "version_id": "c27d38f8577d8c269afd6a4da72e5041",
        "signature": "2d6850b18a211b5b7d5fe79da4b1eed602da202d",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T13:14:31Z",
        "tags": [],
        "pages": 0,
        "bytes": 11390742,
        "type": "upload",
        "etag": "5af137df71d07fa54472432a8ea57597",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680268471/avalanche2023spring/frsbygafeqbfurnje3vi.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680268471/avalanche2023spring/frsbygafeqbfurnje3vi.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680268471/avalanche2023spring/frsbygafeqbfurnje3vi.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128737",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "914449",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1057955,
        "duration": 86.133333,
        "rotation": 0,
        "nb_frames": 5168,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T15:25:14.987Z" }
      }
    ],
    "title": "",
    "description": "WEEK 8 (4/4): I didn't necessarily write my own song but I made this prototype in unity a bit ago and I can play this song on it, it uses keyboard input. You can hear my keyboard so SORRY.",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love your playing! And the prototype!!",
        "created_at": { "$date": "2023-03-31T15:26:14.217Z" }
      },
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "I would want this prototype!",
        "created_at": { "$date": "2023-03-31T15:26:33.562Z" }
      }
    ]
  },
  {
    "_id": "rw98hsdAQ95wJ6L7W",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T10:03:38.509Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "61a90fc844f299b83ef54d2a370d0fa6",
        "public_id": "avalanche2023spring/snkebialdcwwiw98nklz",
        "version": 1683282201,
        "version_id": "68d613e8627bcfa76aface88ca79b643",
        "signature": "6a3e88be0f6f3ad2d976ec8b2ce24ea67a006cbb",
        "width": 1024,
        "height": 768,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T10:23:21Z",
        "tags": [],
        "bytes": 1017856,
        "type": "upload",
        "etag": "da2911ccaba433b7a7d5cedf4d2f63b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683282201/avalanche2023spring/snkebialdcwwiw98nklz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683282201/avalanche2023spring/snkebialdcwwiw98nklz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ee1f7a9aed57fdf490af7cec3818caf2",
        "public_id": "avalanche2023spring/gbucd966jc6uzxglq3ng",
        "version": 1683282208,
        "version_id": "b1e3fc6017f89f761e7399a00f592f7d",
        "signature": "80ee0ff8ac152268e4acac5a513cf52ae4beecea",
        "width": 1596,
        "height": 1202,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T10:23:28Z",
        "tags": [],
        "bytes": 138333,
        "type": "upload",
        "etag": "373299afa189992bcc2be5b0d6efb4bd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683282208/avalanche2023spring/gbucd966jc6uzxglq3ng.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683282208/avalanche2023spring/gbucd966jc6uzxglq3ng.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T12:47:25.787Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:18.098Z" }
      }
    ],
    "title": "",
    "description": "Learning how to rotate and linear extrude based off of example sketches. rendered the shapes in adobe dimensions.",
    "inspiration_name": "Torsten Paul",
    "code": "// Staircase made of cubes\n\ncube_width = 30;        // Width of each cube\ncube_height = 5;       // Height of each cube\ncube_depth = 10;        // Depth of each cube\nnum_steps = 10;         // Number of steps in the staircase\ndoor_width = 6;         // Width of the doorway\ndoor_height = 8; \n// Loop through the number of steps and create a cube for each one\n\nmodule stairs(){\n    \nfor (i = [0:num_steps-1]) {\n  translate([0, i*5, i * cube_height]) cube([cube_width, cube_depth, cube_height]);\n}\n}\nstairs();\n\ntranslate([-50,0,0]){\n    stairs();\n}\n\ntranslate([50,0,0]){\n    stairs();\n}\n\n\n\n// with twist the extruded shape will rotate around the Z axis\n\nrotate([0,0,90])\nfor (x=[0:4]){\ncolor(\"orange\")\n    translate([-30-x*20, -20, 0])\n        linear_extrude(height = 50, twist = 150)\n            square([20, 10], center = true);\n}\n\n  color(\"cyan\")\n              translate([-50, -80, 0])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n  color(\"magenta\")\n       translate([-50, -40, 0])\n        rotate_extrude($fn = 80)\n            text(\"  X\");\ncolor(\"yellow\")\n   translate([-10, -40, 0])\n        rotate_extrude($fn = 80)\n            text(\"  p\");\n\ncolor(\"yellow\")\n   translate([-10, -80, 0])\n        rotate_extrude($fn = 80)\n            text(\"  J\");",
    "comments": []
  },
  {
    "_id": "rxaneYBeX4pD7gyu9",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": { "$date": "2023-04-28T00:11:28.855Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f1bb4b6c0a82e5ff77d15e43ec6670e9",
        "public_id": "avalanche2023spring/jl3k21emnhczwrttlmeo",
        "version": 1682641106,
        "version_id": "8a33b2df9155549fe29ea4f8ce3177c9",
        "signature": "e4b4903cc8ec641ab4df6a1036b0bd58a975f1e7",
        "width": 1280,
        "height": 636,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T00:18:26Z",
        "tags": [],
        "pages": 0,
        "bytes": 14100081,
        "type": "upload",
        "etag": "7153dbc366c2b66c8769b3f603c83114",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682641106/avalanche2023spring/jl3k21emnhczwrttlmeo.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682641106/avalanche2023spring/jl3k21emnhczwrttlmeo.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682641106/avalanche2023spring/jl3k21emnhczwrttlmeo.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6277527",
          "dar": "320:159",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6284158,
        "duration": 17.95,
        "rotation": 0,
        "nb_frames": 1067,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3901fafadb030222cc85f34ba2000942",
        "public_id": "avalanche2023spring/kek4xrp3resskdmeiczv",
        "version": 1682641110,
        "version_id": "4004c688f0ab838693392ca6a4b95c20",
        "signature": "e7cc6ccc131925bb4a16953d88a7e9b67ce9a4b3",
        "width": 2922,
        "height": 1448,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T00:18:30Z",
        "tags": [],
        "bytes": 2378321,
        "type": "upload",
        "etag": "6cb8156e6ed3ebe03090e05910065162",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682641110/avalanche2023spring/kek4xrp3resskdmeiczv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682641110/avalanche2023spring/kek4xrp3resskdmeiczv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8593128a7d05576fa392d2da85a776af",
        "public_id": "avalanche2023spring/oqaljs9xtdv8xzvuegew",
        "version": 1682641115,
        "version_id": "9ca1f5fa58b87dc0b9d9041dfb512039",
        "signature": "57cc2ffbbc7ac55ecdcb5458218ff0af161af3d3",
        "width": 2622,
        "height": 1372,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T00:18:35Z",
        "tags": [],
        "bytes": 2479101,
        "type": "upload",
        "etag": "9d3e256dd1e33daf92500acec03a6ef2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682641115/avalanche2023spring/oqaljs9xtdv8xzvuegew.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682641115/avalanche2023spring/oqaljs9xtdv8xzvuegew.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Extending the AI week - Style transfer ML model from Playform where I used a set of images of cells to recreate in the style of some of my artwork. It was really interesting to see how the images evolved and the bits of style seen in the final outputs.",
    "comments": []
  },
  {
    "_id": "ryT7tSQqtwfdQETZe",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T12:19:53.441Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8ef1f54c23e1f3b5c3357f4a740f06aa",
        "public_id": "avalanche2023spring/rmvdm05uziugg4fwajzz",
        "version": 1681474801,
        "version_id": "7f5461384c481c90ed1d1eb7ff6de495",
        "signature": "1b436a77db0fe11bcc664e4c4430a969804ef176",
        "width": 944,
        "height": 1024,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T12:20:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 5121993,
        "type": "upload",
        "etag": "03d6c768f30b108c8de84a3ba8a60a9b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681474801/avalanche2023spring/rmvdm05uziugg4fwajzz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681474801/avalanche2023spring/rmvdm05uziugg4fwajzz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681474801/avalanche2023spring/rmvdm05uziugg4fwajzz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "2074510",
          "dar": "59:64",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2119445,
        "duration": 19.333333,
        "rotation": 0,
        "nb_frames": 1165,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "It was a dark and stormy night..",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\nstart: \"It was a dark and stormy night. $phrase. $phrase. $phrase. $phrase.\",\nphrase: \"$subject.art $verb $object.art\",\nsubject: \"$noun | $adjective $noun | $adjective $noun and $adverb.art $adjective $noun\",\nobject: \"$noun | $adjective $noun | $adjective $noun and $adverb.art $adjective $noun\",\nadverb: \"exceptionally | somewhat\",\nadjective: \"surreal | chaotic | hallucinatory | absurd | bizarre | nonsensical\",\nnoun: \"dream | thought | emotion | shadow | mirror | illusion | nightmare | echo | confusion\",\nverb: \"distorted | warped | dissolved | shattered | dissolved | twisted | echoed | reverberated\",\n};\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\ndisplay(g.expand());\n\nfunction display(...strings) {\nconst div = document.createElement(\"div\");\ndiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\ndiv.innerText = strings.join(\"\\n\");\ndocument.body.append(div);\n}",
    "comments": []
  },
  {
    "_id": "s6M5RGJSzNFTg3wD6",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T04:12:03.735Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "82c138017ce8cf319fc521da1031abee",
        "public_id": "avalanche2023spring/kkh1btthxzc2wiqomily",
        "version": 1680840730,
        "version_id": "6be7e38465713b5023feaa74fd8bf3f9",
        "signature": "e8cc089ea865014c5c144c5d9b66db36f8834033",
        "width": 1784,
        "height": 1778,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-07T04:12:10Z",
        "tags": [],
        "bytes": 101891,
        "type": "upload",
        "etag": "5af89fa0075a35330330a8b3296b5b96",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680840730/avalanche2023spring/kkh1btthxzc2wiqomily.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680840730/avalanche2023spring/kkh1btthxzc2wiqomily.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "02a458c46f92617a4127e5d3077ed2a4",
        "public_id": "avalanche2023spring/zpl3mp8nv42c11pa2ymd",
        "version": 1680840739,
        "version_id": "82c30adb87e30a2e65550d188611f48d",
        "signature": "a2845e447fb0dacc36aedb708898bdd323874077",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T04:12:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 3902293,
        "type": "upload",
        "etag": "7716e4e421f122b1e4992a1a5ebb2f3f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680840739/avalanche2023spring/zpl3mp8nv42c11pa2ymd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680840739/avalanche2023spring/zpl3mp8nv42c11pa2ymd.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680840739/avalanche2023spring/zpl3mp8nv42c11pa2ymd.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "2031251",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 2038349,
        "duration": 15.3155,
        "rotation": 0,
        "nb_frames": 920,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T04:17:42.508Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T04:23:39.364Z" }
      }
    ],
    "title": "",
    "description": "a continuation of my earlier sketch\nbrick breaker but you can't lose lol",
    "comments": [],
    "code": "let bricks;\nlet ball;\nlet wallTop, wallLeft, wallRight, wallBottom;\nlet player;\n  \nfunction setup() {\n  createCanvas(1000, 1000);\n  noStroke();\n\n\tbricks = new Group();\n\tbricks.w = 20;\n\tbricks.h = 10;\n\tbricks.tile = '=';\n\tbricks.color = 'limegreen';\n\tbricks.collider = 'static';\n\n\tnew Tiles(\n\t\t[\n\t\t\t'.====...====...==.===..=====.',\n\t\t\t'======.======.========.======',\n\t\t\t'==..==.==..==.==.==.==.==..==',\n\t\t\t'==..==.==..==.==.==.==.==..==',\n\t\t\t'==.....==..==.==.==.==.======',\n\t\t\t'==.....==..==.==.==.==.=====.',\n\t\t\t'==..==.==..==.==.==.==.==....',\n\t\t\t'==..==.==..==.==.==.==.==....',\n\t\t\t'======.======.==.==.==.==....',\n\t\t\t'.====...====..==.==.==.==....',\n\t\t\t'.............................',\n\t\t\t'.............................',\n\t\t\t'======..====..=====...==.===.',\n\t\t\t'======.======.======.========',\n\t\t\t'==.....==..==.==..==.==.==.==',\n\t\t\t'==.....==..==.==..==.==.==.==',\n\t\t\t'==.....==..==.======.==.==.==',\n\t\t\t'====...==..==.=====..==.==.==',\n\t\t\t'====...==..==.==..==.==.==.==',\n\t\t\t'==.....==..==.==..==.==.==.==',\n\t\t\t'==.....======.==..==.==.==.==',\n\t\t\t'==......====..==..==.==.==.==',\n\t\t\t'.............................',\n\t\t],\n\t\t200,\n\t\t200,\n\t\tbricks.w + 1,\n\t\tbricks.h + 1\n\t);\n\n\twallTop = new Sprite(500, 0-5, 1000, 10, 'static');\n\twallRight = new Sprite(0-5, 500, 10, 1000, 'static');\n\twallLeft = new Sprite(1000+5, 500, 10, 1000, 'static');\n\twallBottom = new Sprite(500, 1000+5, 1000, 10, 'static');\n\n  //top\n  ball = createSprite(500, 800, 5, 5);\n\tball.diameter = 5;\n  ball.scale = 4;\n\tball.color = color(random(255), random(255), random(255));\n\n\tplayer = createSprite(500, 900, 100, 10, 'static');\n\tplayer.color = color(random(255), random(255), random(255));\n}\n\nfunction draw() {\n\tplayer.position.x = mouseX;\n\t// player.position.y = 900;\n\tplayer.rotation = 0;\n  background(255, 255, 255);\n  background(0, 0, 0);\n\n\tif ((kb.presses('space'))) {\n\t\tball.addSpeed(-20, 120);\n\t}\n\n\n\tfor (let brick of bricks) {\n\t\tif (ball.collides(brick)) {\n\t\t\t// brick.color = '#AA4A44';\n\t\t\tbrick.remove();   \n\t\t\t// brick.color = 'none';\n      // brick.stroke = 'none';\n\t\t\tbricks.color = color(random(255), random(255), random(255));\n\t\t}\n\n\t\tif (brick.color == '#AA4A44' && ball.collides(brick)) {\n\t\t\tbrick.remove();\n\t\t}\n\t}\n\n\tball.bounciness = 1;\n\tworld.gravity.y = 1;\n}"
  },
  {
    "_id": "s6Pqoz3JfbKvxTgeC",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-21T08:13:40.039Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "55aaface3184d45344d706eb65213538",
        "public_id": "avalanche2023spring/mun6z3ci6ej4rnqjnyji",
        "version": 1679386501,
        "version_id": "55611e314e9792e141b0fb85d5ea01e5",
        "signature": "44b35f2fe3627deddda576720749db9f06aff0dd",
        "width": 998,
        "height": 1403,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-21T08:15:01Z",
        "tags": [],
        "bytes": 200716,
        "type": "upload",
        "etag": "a94639da37a3bc9fae9cea7030907d12",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679386501/avalanche2023spring/mun6z3ci6ej4rnqjnyji.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679386501/avalanche2023spring/mun6z3ci6ej4rnqjnyji.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3c5e3e6ddfdeb6cce1211b0d6b59dc97",
        "public_id": "avalanche2023spring/hilzmcwzedifabqlchsb",
        "version": 1679386520,
        "version_id": "d0906e3132cc50c7d5d658dbcdb3c112",
        "signature": "ee42b30947b180863b6e18a5cd1e29b98fd7cde4",
        "width": 998,
        "height": 1403,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-21T08:15:20Z",
        "tags": [],
        "bytes": 83469,
        "type": "upload",
        "etag": "50b0a897e92b7755c08bddf6730e2813",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679386520/avalanche2023spring/hilzmcwzedifabqlchsb.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679386520/avalanche2023spring/hilzmcwzedifabqlchsb.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-21T17:56:50.434Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:13.537Z" }
      }
    ],
    "title": "",
    "description": "quick swiss style poster graphics made w paperscript. hybrid workflow with type done in illustrator. made 3 other graphics but only had time to complete one poster.",
    "inspiration_name": "LENNA Swiss style",
    "inspiration_url": "https://www.zzyw.org/lenna/",
    "code": "// The amount we will move when one of the keys is pressed:\nvar step = 10;\n\nvar bounds = new Rectangle(new Point(0, 0), new Point(500, 700));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#FAF4D3';\n\n//poster 3\nvar triangle1 = new Path.RegularPolygon(new Point(250, 350), 4, 150);\nvar triangle2 = new Path.RegularPolygon(new Point(150, 170), 3, 120);\nvar triangle3 = new Path.RegularPolygon(new Point(300, 250), 5, 100);\n\ttriangle1.strokeColor = '#67597A';\n\t\ttriangle1.strokeWidth = 5;\n\t\ttriangle2.style=triangle1.style;\n\t\t\ttriangle3.style=triangle1.style;\nfunction onFrame(event) {\n\t// Each frame, rotate the path by 3 degrees:\ntriangle2.rotate(-1);\n\ttriangle1.rotate(1);\n\t\ttriangle3.rotate(1);\n}\n\n\n\n\n\n\n//poster2\n// var position = new Point(0, 0);\n// var path = new Path();\n// path.strokeColor = 'white';\n// path.strokeWidth = 8;\n// path.add(position);\n\n\n//poster 1\n// var position = new Point(150, 600);\n// rectangle.add(position);\n// var triangle1 = new Path(new Point(0, 100), new Point(120,250), new Point(0,330));\n// triangle1.fillColor = '#FDF7D8';\n// var triangle = new Path(new Point(150, 500), new Point(500,700), new Point(0,700));\n// triangle.fillColor = '#FDF7D8';\n\n// var myCircle1 = new Path.Circle(new Point(100, 180), 60);\n// myCircle1.fillColor = '#fb8f67';\n// var myCircle = new Path.Circle(new Point(300, 500), 100);\n// myCircle.fillColor = 'pink';\n\n// function onFrame(event){\n//     triangle.rotate(1);\n//     myCircle.fillColor.hue +=1;\n// }\n\nfunction onKeyDown(event) {\n\tif(event.key == 'a') {\n\t\tposition.x -= step;\n\t}\n\n\tif(event.key == 'd') {\n\t\tposition.x += step;\n\t}\n\n\tif(event.key == 'w') {\n\t\tposition.y -= step;\n\t}\n\n\tif(event.key == 's') {\n\t\tposition.y += step;\n\t}\n\tpath.add(position);\n}",
    "comments": []
  },
  {
    "_id": "s8XQDacyjit4xHKtg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-04T18:46:17.704Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "14151ca3006c5889d5751c719fd3960a",
        "public_id": "avalanche2023spring/kcnqq75bxbpfgyyf0ge8",
        "version": 1683225981,
        "version_id": "78669c791a4800c202b1b0e67c03ea62",
        "signature": "11ef497c69d227d6f9d2bf92a50250338fce0ef6",
        "width": 1101,
        "height": 778,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-04T18:46:21Z",
        "tags": [],
        "bytes": 31091,
        "type": "upload",
        "etag": "0d794212e9ed8c381fcafdf95c79293d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683225981/avalanche2023spring/kcnqq75bxbpfgyyf0ge8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683225981/avalanche2023spring/kcnqq75bxbpfgyyf0ge8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T00:41:11.084Z" }
      }
    ],
    "title": "",
    "description": "First take on the individual challenge. It took me a while to get suitable sizes for the spheres I was using to carve out the lateral supports of the castle. I'll definitely get it finalized in the next iteration",
    "comments": []
  },
  {
    "_id": "sA6fH33Lkr4TLZkqY",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T01:33:42.212Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4d320eca65d0af3a9da51f509ebd5cac",
        "public_id": "avalanche2023spring/shkdg4aptpcegay4wa2o",
        "version": 1683250446,
        "version_id": "99aed4d713d75972967b2c23426274cf",
        "signature": "6bb8fd5cbb44890260e3d1760285a5514406fd33",
        "width": 1064,
        "height": 1064,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T01:34:06Z",
        "tags": [],
        "bytes": 181099,
        "type": "upload",
        "etag": "12e5c8ada2372ded43274a515a271393",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683250446/avalanche2023spring/shkdg4aptpcegay4wa2o.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683250446/avalanche2023spring/shkdg4aptpcegay4wa2o.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5c6755a905ec6e672a324cdb4b0d3804",
        "public_id": "avalanche2023spring/jglrrb02cka26tloegbz",
        "version": 1683250566,
        "version_id": "64cbe5b71b2066e3537b228e404e1fba",
        "signature": "d8a54e23b2120325010f83f35f11c992ac3ea921",
        "width": 1064,
        "height": 1064,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T01:36:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 17021713,
        "type": "upload",
        "etag": "0b20709dd4e349bb7e7f2cc4540f50a6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683250566/avalanche2023spring/jglrrb02cka26tloegbz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683250566/avalanche2023spring/jglrrb02cka26tloegbz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683250566/avalanche2023spring/jglrrb02cka26tloegbz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126258",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "11470055",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12989542,
        "duration": 10.483333,
        "rotation": 0,
        "nb_frames": 688,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "617e1740f368c86c91abb8b7e9534d4a",
        "public_id": "avalanche2023spring/vlvcbmafkqzmhpqyd0w4",
        "version": 1683250662,
        "version_id": "18714b07905d16f2f750ee1c8ede81c2",
        "signature": "87ba0d6254b27e469918a6c59829c0aef3fe9f09",
        "width": 1064,
        "height": 1064,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T01:37:42Z",
        "tags": [],
        "bytes": 195210,
        "type": "upload",
        "etag": "d946e1ca6026a863598ccc093937d2f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683250662/avalanche2023spring/vlvcbmafkqzmhpqyd0w4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683250662/avalanche2023spring/vlvcbmafkqzmhpqyd0w4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T02:05:45.08Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T02:17:31.4Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T02:59:27.475Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:15:14.628Z" }
      }
    ],
    "title": "",
    "comments": [],
    "description": "**Loops in OpenSCAD**"
  },
  {
    "_id": "sG7z2LMB2MaDZXrNB",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T10:36:46.58Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "19a6e6507fd4945ad4b2fd561b13ab01",
        "public_id": "avalanche2023spring/adq6rgeo2dsmhtzfvrrx",
        "version": 1677235960,
        "version_id": "fc97ea32adcf6c7c51d2aa39681a5b37",
        "signature": "74b8657fa1ff35cb6043dadd1531ffb70f8b3f58",
        "width": 1762,
        "height": 1564,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T10:52:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 714316,
        "type": "upload",
        "etag": "74fc563fdc7f0772b327d301cf45cde2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677235960/avalanche2023spring/adq6rgeo2dsmhtzfvrrx.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677235960/avalanche2023spring/adq6rgeo2dsmhtzfvrrx.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677235960/avalanche2023spring/adq6rgeo2dsmhtzfvrrx.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "1539904",
          "dar": "881:782",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 1640534,
        "duration": 3.483333,
        "rotation": 0,
        "nb_frames": 211,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Cloud Generator with tweakpane. I could not get this work how I wanted in time -\nI don't want the sketch to loop and create the animation - I wanted them to generate based on cloudCount",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n//Global variables for cloud stuff\nlet cloudW;\nlet cloudH;\nlet cloudX;\nlet cloudY;\n// let cloudCount = 200;\n\n\n//Tweakpane params object\nconst params = {\n  cloudCount: 1,\n  width1: 60,\n  height1:70,\n  width2: 70,\n  height2:70,\n  width3: 60,\n  height3:70,\n  width4: 70,\n  height4:70,\n  width5: 80,\n  height5:80,\n  background: { r: 50, g: 100, b: 200 },\n}\n\n// Tweakpane setup\nconst pane = new Tweakpane.Pane();\npane.addInput(params, \"cloudCount\" , { min: 0, max: 1000, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width1\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height1\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width2\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height2\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width3\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height3\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width4\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height4\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width5\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height5\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"background\");\n\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  frameRate(2);\n}\n\nfunction draw() {\n  background(params.background.r, params.background.g, params.background.b);\n  noStroke();\n  fill(255);\n\n  // for ()\n  // drawCloud(100,100);\n  for (let i = 0; i < params.cloudCount; i++) {\n    translate(20, 0)\n    drawCloud(random(i, width) ,random(0, height));\n  }\n}\n\n\nfunction drawCloud(x,y) {\n  //x and y positions of cloud\n  // let x = 100;\n  // let y = 100;\n  // Draw cloud using ellipse function\n  ellipse(x, y, params.width1, params.height1);\n  ellipse(x+40, y, params.width2, params.height2);\n  ellipse(x+80, y, params.width3, params.height3);\n  ellipse(x+120, y, params.width4, params.height4);\n  ellipse(x+160, y, params.width5, params.height5);\n}",
    "comments": []
  },
  {
    "_id": "sKwRzqzuCRhJFGb4A",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T04:51:21.323Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "62fdbc4bc3a6df7e53493557654c9063",
        "public_id": "avalanche2023spring/rvucfqkzzgcgbvifl725",
        "version": 1680238413,
        "version_id": "141457c67bc9dceff28d2def503fba15",
        "signature": "f6ae1efbf5ac42254a99df5fc9c482f378c17fc5",
        "width": 1614,
        "height": 1528,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T04:53:33Z",
        "tags": [],
        "bytes": 1088389,
        "type": "upload",
        "etag": "66eaa29050a5666ea70a910dab2c85a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680238413/avalanche2023spring/rvucfqkzzgcgbvifl725.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680238413/avalanche2023spring/rvucfqkzzgcgbvifl725.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9054106004cabae6de24f5e5063f7254",
        "public_id": "avalanche2023spring/vvtjkr74sejkn2orm85p",
        "version": 1680238419,
        "version_id": "e5f00adb52745b87f4fbd4089e60d72b",
        "signature": "8738efd0c513cf81bea26b36d188e76eb04416b2",
        "width": 1630,
        "height": 1562,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T04:53:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 3316769,
        "type": "upload",
        "etag": "10b1054d6476d1a3987d9bb171a317e6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680238419/avalanche2023spring/vvtjkr74sejkn2orm85p.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680238419/avalanche2023spring/vvtjkr74sejkn2orm85p.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680238419/avalanche2023spring/vvtjkr74sejkn2orm85p.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125798",
          "frequency": 48000,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "2081824",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2331442,
        "duration": 11.381,
        "rotation": 0,
        "nb_frames": 703,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:16:07.812Z" }
      }
    ],
    "title": "",
    "description": "I was playing around with Reason and wanted to make a visualizer to go with a track I made, would like to get more fidelity with the visuals though!",
    "comments": []
  },
  {
    "_id": "sMF2T95NSaeDiqk2N",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T09:37:08.316Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "95be790934365e455c6a7cf68bdc76b5",
        "public_id": "avalanche2023spring/mlcqpwpx30iassxyg6bq",
        "version": 1676021832,
        "version_id": "caace912bc938152956b79ca555509fc",
        "signature": "bf3e128e97cb21861edfd4c18ec03d6cde5496f3",
        "width": 1190,
        "height": 1188,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-10T09:37:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 874800,
        "type": "upload",
        "etag": "731021269e9a247774e43799d0ac67d5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676021832/avalanche2023spring/mlcqpwpx30iassxyg6bq.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676021832/avalanche2023spring/mlcqpwpx30iassxyg6bq.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "666931",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 726867,
        "duration": 9.628167,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T14:18:55.657Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T15:14:09.273Z" }
      }
    ],
    "title": "",
    "description": "WEEK 2 SKETCH (5/4) : PLAYED WITH THE PAIR CHALLENGE TO MAKE CHESS BOARDS???",
    "comments": []
  },
  {
    "_id": "sNpKjDRxGpSu6p6Gg",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-17T14:59:34.008Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f3b222185be7921e6cf26477d973e4f3",
        "public_id": "avalanche2023spring/yzcegk0kotyojgvtpxhq",
        "version": 1681744434,
        "version_id": "786251107a0556cf94383e41e3bd1a9b",
        "signature": "88c8c837e8d502be2a009d7671d75610fd90977d",
        "width": 1180,
        "height": 1122,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-17T15:13:54Z",
        "tags": [],
        "bytes": 275065,
        "type": "upload",
        "etag": "a3ae2e0a857f625872a15cc45157adec",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681744434/avalanche2023spring/yzcegk0kotyojgvtpxhq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681744434/avalanche2023spring/yzcegk0kotyojgvtpxhq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "68a4d147f3b55cc6a5bbebeb24816e30",
        "public_id": "avalanche2023spring/ymrwxxua1d2yn1uoqsrh",
        "version": 1681744522,
        "version_id": "9125f965707a404091a561ddb8ae66a6",
        "signature": "972bbe09ee283e3e7b98c4fc3fbc238634b23a3a",
        "width": 1180,
        "height": 1122,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-17T15:15:22Z",
        "tags": [],
        "bytes": 275095,
        "type": "upload",
        "etag": "b3d00d9239c796d616c193a0e3c4af59",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681744522/avalanche2023spring/ymrwxxua1d2yn1uoqsrh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681744522/avalanche2023spring/ymrwxxua1d2yn1uoqsrh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "08b1fe3e9575328f9e93473051d84971",
        "public_id": "avalanche2023spring/cdaapitiia1a7l3ixqz8",
        "version": 1681744748,
        "version_id": "bde41d1cf2dccb3da10ead903d60757d",
        "signature": "ef7f3f5abbba40536a0ab03b5accd4f3f90ff787",
        "width": 1180,
        "height": 1008,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-17T15:19:08Z",
        "tags": [],
        "bytes": 235378,
        "type": "upload",
        "etag": "61081e5cb0b7ba7a400e62b99f91e7f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681744748/avalanche2023spring/cdaapitiia1a7l3ixqz8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681744748/avalanche2023spring/cdaapitiia1a7l3ixqz8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T15:57:02.65Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T19:05:12.514Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2023-04-21T15:00:01.914Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-08-29T21:47:32.25Z" }
      }
    ],
    "title": "",
    "description": "**Reverse Traditional Product Design wasn't reversed!** As part of an introspection in the linearity that specific renowned design processes suggest, I asked ChatGPT to come up with a project that mixed up the stages of a traditional product design approach. Traditional approach refers to the following stages in order: User Research - Define Problem - Ideate - Prototype - Test. ChatGPT managed to reveal a simple & straightforward reversal - which was not enough to disprove the \"chronology\" traditional processes suggest. It utilized the open-ended nature of english words to fit stages it did feel belonged to the top. For example, Launch as Stage 1 launched the project, and as Stage 4 launched the product. When I explicitly set the stage as \"Launch the Product\" at Stage 1, it evaded the stage -  \"The first stage of this design project is the \"Launch the product\" stage, where we will define the target market and user personas for the next-generation smartphone. \"",
    "comments": []
  },
  {
    "_id": "sPisdnZLvFfdzr8cW",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T03:02:41.222Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c048077d2d2f5fc1ab1201649a3ac658",
        "public_id": "avalanche2023spring/e5rz0qlfd4obwm5uw0to",
        "version": 1677812569,
        "version_id": "a4d389201e7e85f86f3a83383e8a7634",
        "signature": "7184e6affb1ac1c9e38c8217a864eaf1e238c1df",
        "width": 832,
        "height": 800,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-03T03:02:49Z",
        "tags": [],
        "bytes": 35658,
        "type": "upload",
        "etag": "735bee6be5681c62ec1ef5884c7ef8ad",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677812569/avalanche2023spring/e5rz0qlfd4obwm5uw0to.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677812569/avalanche2023spring/e5rz0qlfd4obwm5uw0to.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Attempt at Challenge 2. Unfortunately even with the maximum allotted time I couldn't put this one together so here's my attempt with the time that I set.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet frequency_slider;\nlet amplitude_slider;\nlet timespeed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n  \n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 25);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n  \n  createP(\"Time Speed\");\n  timespeed_slider = createSlider(0, 100, 50);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let timeSpeed = frameCount / 10;\n  let frequency = frequency_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    let offsetX = (noise(i * frequency, 0) - 0.5) * amplitude * timeSpeed;\n    let offsetY = (noise(i * timeSpeed, 1000) - 0.5) * amplitude * timeSpeed;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "comments": []
  },
  {
    "_id": "sYLzNCtRcf7D4i5pM",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": { "$date": "2023-02-10T00:41:48.682Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "76d710f1fba2c2bb3cadd7e0a5e13da8",
        "public_id": "avalanche2023spring/fhfwcnyhpnwwqzx3fcvp",
        "version": 1675989977,
        "version_id": "16ad9850031b288f8be5b0c7ae28202c",
        "signature": "0ec60ef3cf562dbe6fb2d7079e65b1920c58ffe7",
        "width": 368,
        "height": 370,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-10T00:46:17Z",
        "tags": [],
        "pages": 0,
        "bytes": 106059,
        "type": "upload",
        "etag": "dd4273587561a5d5909fe9c0f6056b2e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675989977/avalanche2023spring/fhfwcnyhpnwwqzx3fcvp.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675989977/avalanche2023spring/fhfwcnyhpnwwqzx3fcvp.mp4",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "47860",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 49232,
        "duration": 17.233333,
        "rotation": 0,
        "nb_frames": 518,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T01:19:54.699Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T02:02:55.035Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T04:29:27.432Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T13:05:59.465Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T23:55:32.766Z" }
      }
    ],
    "lesson": "Random",
    "title": "",
    "description": "Wanted to create a fish tank using random!!",
    "inspiration_name": "Horizon",
    "code": "//Draw fishes with using random\n//make different kind of fishes at different interval\n//inspired from justin Bakse's \"Horizon\"\n\nvar r;\nvar g;\nvar b;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noLoop();\n\n  noStroke();\n  fill(50, 82, 123);\n}\n\nfunction draw() {\n  background(104,211,255);\n\n  for (let i = 0; i < random(0, 400); i = i + 1) {\n    drawFish(random(100, width), random(100, height));\n   // console.log(i, \"Sahi1\");\n    \n  }\n}\n\nfunction drawFish(x, y) {\n  if (random() < 0.1) {\n    drawFishbig(x, y);\n  } else {\n    drawFishsmall(x, y);\n    //console.log(random(), \"Sahi2\");\n  }\n}\n\nfunction drawFishbig(x, y) {\n  push();\n  r = random(255); // r is a random number between 0 - 255\n  g = random(100, 255); // g is a random number betwen 100 - 200\n  b = random(200); // b is a random number between 0 - 100\n  fill(r, g, b);\n  ellipse(x, y, 100, random(100, 150));\n\n  triangle(-15 + x, 75 + y, 5 + x, 20 + y, 25 + x, 75 + y);\n\n  pop();\n\n  fill(54, 69, 79);\n  ellipse(-20 + x, -40 + y, 10, 10);\n  fill(255);\n  ellipse(-20 + x, -42 + y, 5, 5);\n}\n\nfunction drawFishsmall(x, y) {\n  push();\n  r = random(255); \n  g = random(100, 200); \n  b = random(100); \n  fill(r, g, b);\n  ellipse(x, y, 20, 20);\n  triangle(-5 + x, 15 + y, x, y, 5 + x, 15 + y);\n\n  pop();\n\n  fill(54, 69, 79);\n  ellipse( -3+x, -5+ y, 5, 5);\n  fill(255);\n  ellipse( -3+x, -5+ y, 2, 2);\n}",
    "comments": []
  },
  {
    "_id": "scGkjbTi6yZEbG2rs",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T08:40:12.308Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2d0e9a0a4ffdda571d040697491ccfc5",
        "public_id": "avalanche2023spring/qxcbvzfhs4vqkdgbavld",
        "version": 1677228019,
        "version_id": "81e57b187bde3d3e17bec3a221e08ec5",
        "signature": "6ad2eb2194c310a5a94c1c8e1d114a5f83efc9e2",
        "width": 852,
        "height": 370,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-24T08:40:19Z",
        "tags": [],
        "pages": 0,
        "bytes": 1757654,
        "type": "upload",
        "etag": "72f47a6afe41cf69d48325285146a068",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677228019/avalanche2023spring/qxcbvzfhs4vqkdgbavld.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677228019/avalanche2023spring/qxcbvzfhs4vqkdgbavld.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677228019/avalanche2023spring/qxcbvzfhs4vqkdgbavld.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 30,
          "profile": "High",
          "bit_rate": "561939",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 563192,
        "duration": 24.966667,
        "rotation": 0,
        "nb_frames": 750,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T16:36:31.652Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-24T17:32:14.608Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "funny",
        "created_at": { "$date": "2023-02-24T17:32:16.963Z" }
      }
    ],
    "title": "",
    "description": "Pair coding with Srishti: It reminds of hours I spend coding for Compform and using all of my keyboard's buttons, which have gotten harder to press, I added a keyboard interaction to Srishti's sketch.\n\n(I am sure there is a better way to achieve this)",
    "code": "let img;\nlet numimage = [];\nlet keys = [];\n\n\nlet chrom; //hold my font\nlet chromArray = []; //set up an array to receive coordinates\n// let fontSize=150; //initialize size of text\n\nfunction preload() {\n  chrom = loadFont(\"MAISONNEUE-BOLD.TTF\");\n  img = loadImage(\"bcone.jpg\");\n\n  // numimage[0] = loadImage('bcone.jpg');\n}\n\nconst params = {\n  circle_size: 5,\n  bg_color: \"#40E0D0\",\n  color: \"#6B40E0\",\n};\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"circle_size\", { min: 0, max: 20 });\npane.addInput(params, \"bg_color\");\npane.addInput(params, \"color\");\n\nfunction setup() {\n  createCanvas(725, 400);\n  \n  textFont(chrom);\n  frameRate(30);\n  textSize(150);\n  noStroke();\n  textAlign(CENTER);\n  // textWrap(CHAR);\n  stroke(2);\n  // rectMode(CENTER);\n  chromArray1 = chrom.textToPoints(\"comp form\", width/2 , height / 2, 100, {\n    sampleFactor: 0.2,\n  });\n\n  // chromArray2 = chrom.textToPoints(\"form\", width / 2, height / 2, params.fontSize, {\n  //   sampleFactor: 0.08,\n  // });\n\n  // print(chromArray);\n  push();\n  \n    keys.push(new Key(0, 0, 50, \"~\\n`\", 192));\n  keys.push(new Key(50, 0, 50, \"!\\n1\", 49));\n  keys.push(new Key(100, 0, 50, \"@\\n2\", 50));\n  keys.push(new Key(150, 0, 50, \"#\\n3\", 51));\n  keys.push(new Key(200, 0, 50, \"$\\n4\", 52));\n  keys.push(new Key(250, 0, 50, \"%\\n5\", 53));\n  keys.push(new Key(300, 0, 50, \"^\\n6\", 54));\n  keys.push(new Key(350, 0, 50, \"&\\n7\", 55));\n  keys.push(new Key(400, 0, 50, \"*\\n8\", 56));\n  keys.push(new Key(450, 0, 50, \"(\\n9\", 57));\n  keys.push(new Key(500, 0, 50, \")\\n0\", 48));\n  keys.push(new Key(550, 0, 50, \"_\\n-\", 189));\n  keys.push(new Key(600, 0, 50, \"+\\n=\", 187));\n  keys.push(new Key(650, 0, 75, \"Backspace\", 8));\n  keys.push(new Key(0, 50, 75, \"Tab\", 9));\n  keys.push(new Key(75, 50, 50, \"Q\", 81));\n  keys.push(new Key(125, 50, 50, \"W\", 87));\n  keys.push(new Key(175, 50, 50, \"E\", 69));\n  keys.push(new Key(225, 50, 50, \"R\", 82));\n  keys.push(new Key(275, 50, 50, \"T\", 84));\n  keys.push(new Key(325, 50, 50, \"Y\", 89));\n  keys.push(new Key(375, 50, 50, \"U\", 85));\n  keys.push(new Key(425, 50, 50, \"I\", 73));\n  keys.push(new Key(475, 50, 50, \"O\", 79));\n  keys.push(new Key(525, 50, 50, \"P\", 80));\n  keys.push(new Key(575, 50, 50, \"{\\n[\", 219));\n  keys.push(new Key(625, 50, 50, \"}\\n]\", 221));\n  keys.push(new Key(675, 50, 50, \"Enter\", 13));\n  keys.push(new Key(0, 100, 87.5, \"Caps Lock\", 20));\n  keys.push(new Key(87.5, 100, 50, \"A\", 65));\n  keys.push(new Key(137.5, 100, 50, \"S\", 83));\n  keys.push(new Key(187.5, 100, 50, \"D\", 68));\n  keys.push(new Key(237.5, 100, 50, \"F\", 70));\n  keys.push(new Key(287.5, 100, 50, \"G\", 71));\n  keys.push(new Key(337.5, 100, 50, \"H\", 72));\n  keys.push(new Key(387.5, 100, 50, \"J\", 74));\n  keys.push(new Key(437.5, 100, 50, \"K\", 75));\n  keys.push(new Key(487.5, 100, 50, \"L\", 76));\n  keys.push(new Key(537.5, 100, 50, \":\\n;\", 186));\n  keys.push(new Key(587.5, 100, 50, `\"\\n'`, 222));\n  keys.push(new Key(637.5, 100, 50, \"|\\n\\\\\", 220));\n  keys.push(new Key(0, 150, 112.5, \"Shift\", 16));\n  keys.push(new Key(112.5, 150, 50, \"Z\", 90));\n  keys.push(new Key(162.5, 150, 50, \"X\", 88));\n  keys.push(new Key(212.5, 150, 50, \"C\", 67));\n  keys.push(new Key(262.5, 150, 50, \"V\", 86));\n  keys.push(new Key(312.5, 150, 50, \"B\", 66));\n  keys.push(new Key(362.5, 150, 50, \"N\", 78));\n  keys.push(new Key(412.5, 150, 50, \"M\", 77));\n  keys.push(new Key(462.5, 150, 50, \"<\\n,\", 188));\n  keys.push(new Key(512.5, 150, 50, \">\\n.\", 190));\n  keys.push(new Key(562.5, 150, 50, \"?\\n/\", 191));\n  \n  pop();\n}\n\nfunction draw() {\n  background(params.bg_color);\n  fill(params.color);\n  addRect();\n  //  image(img, 0, 0, width, height);\n  \n  push();\n  for (const k of keys) {\n    k.render();\n  }\n  \n  pop()\n}\n\nfunction addRect() {\n  for (let i = 0; i < chromArray1.length; i++) {\n    push();\n    translate(chromArray1[i].x, chromArray1[i].y);\n  //  circle(-275, -150, params.circle_size);\n    circle(-275, 80, params.circle_size);\n    circle(-275, 160, params.circle_size);\n    // rect(-200, -100,  12);\n    pop();\n    \n\n    //     for (let i = 0; i < chromArray2.length; i++)\n    //    push();\n    //    translate(chromArray2[i].x, chromArray2[i].y);\n    // circle(-200, 100,  params.circle_size);\n    //    pop();\n    //\n  }\n\n}\n\nclass Key {\n  constructor(x, y, w, k, code) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.k = k;\n    this.code = code;\n  }\n  \n  render() {\n    stroke(0);\n    if (keyIsDown(this.code)) {\n      fill(0);\n    } else {\n      noFill();\n    }\n    rect(this.x + 5, this.y + 5, this.w-10, 40);\n   textAlign(CENTER, CENTER);\n    noStroke();\n    if (keyIsDown(this.code)) {\n      fill(255);\n    } else {\n      fill(0);\n    }\n      textSize(14);\n  noStroke();\n    text(this.k, this.x + this.w/2, this.y + 25);\n  }\n}",
    "comments": []
  },
  {
    "_id": "sdx2tAqbHNdzqYTR7",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T05:37:07.018Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9a50bd793639ab2b9a60c9545b738476",
        "public_id": "avalanche2023spring/qxuubgoycdhegvijlkad",
        "version": 1680241052,
        "version_id": "c87db8e2eef129606a4f25226f1db0d2",
        "signature": "2f50a5e1b0593d2bf7d96a35ba73d40614959650",
        "width": 806,
        "height": 802,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T05:37:32Z",
        "tags": [],
        "pages": 0,
        "bytes": 10316903,
        "type": "upload",
        "etag": "ab330ab4a9867be0bc92117e56600364",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680241052/avalanche2023spring/qxuubgoycdhegvijlkad.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680241052/avalanche2023spring/qxuubgoycdhegvijlkad.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680241052/avalanche2023spring/qxuubgoycdhegvijlkad.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126308",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "1238848",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 1705860,
        "duration": 48.383333,
        "rotation": 0,
        "nb_frames": 2962,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:16:11.345Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T13:09:31.526Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T14:33:30.071Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T14:50:27.383Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T15:50:03.125Z" }
      }
    ],
    "title": "",
    "description": "**Heartbeat to Music: Tone.js + Perlin Noise** Improved an older sketch where I was trying to convert heart beats and breathing rhythms into music. I added mono-synth notes using Tone.js to create a generative melody line based on Perlin Noise, as a layer on top of Tanpura beats and flutes, set to a simulated BPM and Breaths per second. Next would be to hook up sensors and map it to one's actual heartbeat.",
    "comments": [
      {
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "comment": "This is sooo cool",
        "created_at": { "$date": "2023-03-31T06:40:24.868Z" }
      },
      {
        "commenter_id": "eeksZiGaSD3xMNF54",
        "comment": "Super hypnotic! very eye catching!",
        "created_at": { "$date": "2023-03-31T13:10:23.981Z" }
      }
    ]
  },
  {
    "_id": "snGzGw9E8gTX9LHrg",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T22:26:07.736Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "44b5c9e956c69cb0ee7ca29619e9450b",
        "public_id": "avalanche2023spring/qcvcxhbd5hwjaccb5lpv",
        "version": 1675981658,
        "version_id": "b4cbbc006307d6cfa91a28865cc71abe",
        "signature": "961cd16dbc7bcfe43f5cd865abb7678a56f8dfa7",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T22:27:38Z",
        "tags": [],
        "bytes": 587133,
        "type": "upload",
        "etag": "cb23f976e5814dc421de0696e4ee61f0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675981658/avalanche2023spring/qcvcxhbd5hwjaccb5lpv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675981658/avalanche2023spring/qcvcxhbd5hwjaccb5lpv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4a72aedda6e37d3cc81668247c656b86",
        "public_id": "avalanche2023spring/o1fh56hqlsbgveflvmq2",
        "version": 1675981664,
        "version_id": "cb84a19d43b0034094bde2a974ee2b3a",
        "signature": "d50004058a21b215ce6b05428af1b8c71cef99d6",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T22:27:44Z",
        "tags": [],
        "bytes": 525531,
        "type": "upload",
        "etag": "f4a4207a43ef317254b2a8861235ad53",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675981664/avalanche2023spring/o1fh56hqlsbgveflvmq2.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675981664/avalanche2023spring/o1fh56hqlsbgveflvmq2.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:44:15.167Z" }
      }
    ],
    "title": "",
    "description": "For the pair challenge, Brian and I created a sketch that generates random images using a decorative typeface from Ohno called Casual-Textile using the deck tactic.",
    "code": "let deck = [1, 'C', 'D', 'E', 'F', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p'];\nlet position = 0;\n\nlet fontTextile;\nfunction preload() {\n  fontTextile = loadFont('Fonts/OhnoCasualTextileDemo.otf');\n}\n\nlet backgroundOpacity = [0, 255];\n\nfunction setup() {\n  createCanvas(1000, 800);\n  noLoop();\n  background(101, 207, 220, backgroundOpacity[floor(random(2))]);\n  strokeWeight(0);\n  textFont(fontTextile);\n  deck = shuffle(deck);\n  blendMode(DIFFERENCE);\n  noLoop();\n}\n\nfunction draw() {\n  text(deck[valueFromDeck()], width/2, height/2); \n\n  let i = 0;\n  for (i = 0; i < deck.length; i++) {\n    fill(125, 235, random(51));\n\n    textSize(min(random(100, 500), random(100, 500),random(100, 500)));\n\n    text(pickLetter(), random((width)-300), random((height/2)-300, (height/2)+500));\n  }\nnoLoop();\n}\n\nfunction pickLetter(){\n  return valueFromDeck();\n}\n\n\nfunction valueFromDeck() {\n  let v = deck[position];\n\n  position++;\n\n  if (position > deck.length) {\n    deck = shuffle(deck);\n    v = deck[0];\n    position = 0;\n  }\n\n  return v;\n}\n\nfunction mousePressed() {\n  saveCanvas('myCanvas', 'png');\n}",
    "comments": []
  },
  {
    "_id": "svY25NABNJ5tehh2K",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T02:54:53.35Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2bf267862a738dda5aa3dc614e86078b",
        "public_id": "avalanche2023spring/a1gyrbvnl7dzdt2kn4me",
        "version": 1676516949,
        "version_id": "afb3da5a142c583cc8b3ee84da406450",
        "signature": "45a837c1b03712b93093cf60a0e113d9e8b44184",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T03:09:09Z",
        "tags": [],
        "bytes": 217909,
        "type": "upload",
        "etag": "c3334fc8e96cb5645eb27fbf285139a8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676516949/avalanche2023spring/a1gyrbvnl7dzdt2kn4me.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676516949/avalanche2023spring/a1gyrbvnl7dzdt2kn4me.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T03:35:32.715Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T13:29:37.323Z" }
      }
    ],
    "title": "",
    "description": "I experimented with noise to create this patterned image for the pair challenge with Alex",
    "comments": []
  },
  {
    "_id": "t2RJacARtjWXT6AEZ",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": { "$date": "2023-04-28T07:35:03.625Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "84500cceeac82e60aa37ffefe2219b8d",
        "public_id": "avalanche2023spring/mbrl3pqvpxacyhu41bml",
        "version": 1682667354,
        "version_id": "b3d125fed4ac38e8d005f70eab0f13bf",
        "signature": "2c357b89a260ed065f9318837cad25aa41b20051",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T07:35:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 869653,
        "type": "upload",
        "etag": "48d888158c27693977753c9129b1f269",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682667354/avalanche2023spring/mbrl3pqvpxacyhu41bml.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682667354/avalanche2023spring/mbrl3pqvpxacyhu41bml.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682667354/avalanche2023spring/mbrl3pqvpxacyhu41bml.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "792456",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 800140,
        "duration": 8.695,
        "rotation": 0,
        "nb_frames": 523,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8b2232bc753c00827d7fec250d87233b",
        "public_id": "avalanche2023spring/mntfbotqeiibhtddqy3f",
        "version": 1682667368,
        "version_id": "b01236ef59460cfae01885b961e58266",
        "signature": "40004cc646fe2b3503a8ad1111ddbb533aa077ea",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T07:36:08Z",
        "tags": [],
        "bytes": 6325726,
        "type": "upload",
        "etag": "f126f74dc8d26f5066af7234c383b51b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682667368/avalanche2023spring/mntfbotqeiibhtddqy3f.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682667368/avalanche2023spring/mntfbotqeiibhtddqy3f.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0cdfeb1ff46b4f57ac084c03392154d8",
        "public_id": "avalanche2023spring/ucxvu706xxofa14huwj6",
        "version": 1682667415,
        "version_id": "f432a689d70cb64ebdcefe683b592324",
        "signature": "e973971b1aeaa3f7c359d8331cc8759c141e0978",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T07:36:55Z",
        "tags": [],
        "bytes": 6321906,
        "type": "upload",
        "etag": "d905af64b2ab503d669aafd415b599e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682667415/avalanche2023spring/ucxvu706xxofa14huwj6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682667415/avalanche2023spring/ucxvu706xxofa14huwj6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "continued using chatGPT to debug this interactive ‘S’. I know prompt engineering I has this whole thing about coming up with good, refined input but I actually love how non-specific your troubleshooting question can be and it still figures most of it out from context.",
    "comments": []
  },
  {
    "_id": "t3TZJT3r6qjfKpsEv",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-06T19:03:19.484Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "16d9325755fedbef8a25f360e372405d",
        "public_id": "avalanche2023spring/mgdt2ywy5o4newvzjn5s",
        "version": 1675710339,
        "version_id": "0e9300638314f48d0f6045b92a6f377b",
        "signature": "9056e572a06b6cb9d4b9017092c9c782b07c13b4",
        "width": 1282,
        "height": 882,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-06T19:05:39Z",
        "tags": [],
        "pages": 0,
        "bytes": 1983735,
        "type": "upload",
        "etag": "449e393419d5347afe0569bcbea2a71f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675710339/avalanche2023spring/mgdt2ywy5o4newvzjn5s.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675710339/avalanche2023spring/mgdt2ywy5o4newvzjn5s.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "123912",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "1715443",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 2552795,
        "duration": 6.216667,
        "rotation": 0,
        "nb_frames": 434,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T19:08:19.653Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "funny",
        "created_at": { "$date": "2023-02-06T19:08:22.994Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-06T19:08:23.827Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T21:24:43.538Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-07T00:15:17.276Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T07:05:08.262Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:09.254Z" }
      }
    ],
    "title": "",
    "description": "**Worked with Isha on the Pair Challenge on p5.js:** 10 patterns picked randomly from a deck such that each pattern appears at least once in every row",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gridX = [0, 200, 0, 200];\nlet gridY =[0, 0, 200, 200];\n\nlet canvasW = 640;\nlet canvasH = 440;\nlet gridW = 500;\nlet gridH = 350;\n\nlet patterns = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet patternPos = 0;\n\nlet gridSize = 50;\n\nfunction setup() {\n  createCanvas(canvasW, canvasH);\n\n  strokeCap(SQUARE);\n  stroke(255); strokeWeight(2);\n  \n  //Initial Deck Shuffling\n  patterns = shuffle(patterns);\n  \n  frameRate (1);\n  //noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(255);\n  for (let j = 45; j < 350; j+=gridSize) {\n    for (let i = 70; i < 570; i+=gridSize) {\n      let p = patterns[patternPos]; \n      drawPattern(p, i, j);\n      \n      patternPos ++;\n      if (patternPos > patterns.length-1) {\n        patterns = shuffle(patterns);\n        patternPos = 0;\n      }\n    }\n  }\n  \n  \n}\n\nfunction drawPattern(pNum, posX, posY) {\n  switch (pNum){\n    case 0:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 1:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 2:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n      pop();\n      break;\n    case 3:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 4:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 5:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 6:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 7:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 8:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n      pop();\n      break;\n    case 9:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  line(posX, posY+25, posX+50, posY+25);\n      pop();\n      break;\n  }\n}",
    "comments": []
  },
  {
    "_id": "t5XpEi9QgeyWXCHJJ",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T19:35:34.073Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ed92cbbb5828a4c0f96143ba9411b226",
        "public_id": "avalanche2023spring/d9u0sffvwnxf2w6ierw3",
        "version": 1681500953,
        "version_id": "b61db98596212d0fd6adb5fdefb42d70",
        "signature": "edc716b54ff22d70d6756e224c04508a0a5ca776",
        "width": 2092,
        "height": 1520,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T19:35:53Z",
        "tags": [],
        "bytes": 5799924,
        "type": "upload",
        "etag": "b464c5c092c7742c3b81f20abbaaf553",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681500953/avalanche2023spring/d9u0sffvwnxf2w6ierw3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681500953/avalanche2023spring/d9u0sffvwnxf2w6ierw3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "236199a581e5c15b65a0b4127eadc07c",
        "public_id": "avalanche2023spring/j5ox6qsmiynaimkjkd4i",
        "version": 1681501244,
        "version_id": "54a85093043e570c23054ff14f306281",
        "signature": "450203bbcaaccbab937571acefdcc2c865a799f0",
        "width": 1596,
        "height": 1520,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T19:40:44Z",
        "tags": [],
        "pages": 0,
        "bytes": 18256136,
        "type": "upload",
        "etag": "8c04c13561e7e774c093f7cbfe832542",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681501244/avalanche2023spring/j5ox6qsmiynaimkjkd4i.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681501244/avalanche2023spring/j5ox6qsmiynaimkjkd4i.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681501244/avalanche2023spring/j5ox6qsmiynaimkjkd4i.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "25765856",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 28535428,
        "duration": 5.118167,
        "rotation": 0,
        "nb_frames": 325,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T01:43:12.813Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:31:37.038Z" }
      }
    ],
    "title": "",
    "description": "**Gradients using visual weight of different monospace letters:** pardon me for posting (almost) the same sketch again, but I added gradients using Perlin noise and found it so much more beautiful",
    "comments": []
  },
  {
    "_id": "t9JM5XPcciv7g5iaj",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T16:45:16.775Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "2987491bd94c980e6852f6f388489a71",
        "public_id": "avalanche2023spring/byd5i6yafo225y5kc1nn",
        "version": 1677257148,
        "version_id": "dd9e6470b0161d4a36baa37125a31605",
        "signature": "c18aa49b04a8b6fc996f4bf281fecc5267987f2d",
        "width": 1060,
        "height": 1044,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T16:45:48Z",
        "tags": [],
        "pages": 0,
        "bytes": 7192578,
        "type": "upload",
        "etag": "480ab2d58d494fa142c2b6494364d4b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677257148/avalanche2023spring/byd5i6yafo225y5kc1nn.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677257148/avalanche2023spring/byd5i6yafo225y5kc1nn.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677257148/avalanche2023spring/byd5i6yafo225y5kc1nn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "12687455",
          "dar": "265:261",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 12834340,
        "duration": 4.483333,
        "rotation": 0,
        "nb_frames": 78,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f1928b09c566be6c3d9cf856a3117ee8",
        "public_id": "avalanche2023spring/i2odfv5usbacgc1gvruy",
        "version": 1677257152,
        "version_id": "3e17a388cf3c4207c0b05230b22882ca",
        "signature": "01da9f5e0baa7ac3aa66a8d5c8d2feea3ce46595",
        "width": 1066,
        "height": 1052,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T16:45:52Z",
        "tags": [],
        "bytes": 675623,
        "type": "upload",
        "etag": "81cbf0911653cb0db38f2e1542d48fc3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677257152/avalanche2023spring/i2odfv5usbacgc1gvruy.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677257152/avalanche2023spring/i2odfv5usbacgc1gvruy.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T17:00:25.85Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge using Aabha's code! The animation is much smoother, but I think the screen recording slowed it down a bit.",
    "comments": []
  },
  {
    "_id": "tGLnxQcGezECLfFCd",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-08T04:53:32.856Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5efe793b63a71275a8ec5d2a2d5102f0",
        "public_id": "avalanche2023spring/hucppidpoaegqekfnpve",
        "version": 1675832191,
        "version_id": "d16b7c0abf7391f31b8ae35bad3d1efd",
        "signature": "075978e7065a39257505e80fccf61a6f1f63e5c6",
        "width": 1280,
        "height": 1280,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-08T04:56:31Z",
        "tags": [],
        "bytes": 2677111,
        "type": "upload",
        "etag": "97cb761123a1cefd7663b3a5862f6696",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675832191/avalanche2023spring/hucppidpoaegqekfnpve.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675832191/avalanche2023spring/hucppidpoaegqekfnpve.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T22:25:49.854Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-09T14:43:38.741Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T00:47:06.593Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-02-10T02:03:02.26Z" }
      }
    ],
    "title": "",
    "description": "Had fun with my last Vera Molnar inspired sketch so I wanted to try another, I realized it's harder than I thought to rotate in p5 or maybe I'm missing something 😅",
    "inspiration_name": "Vera Molnar",
    "inspiration_url": "https://spalterdigital.com/artworks/206/",
    "code": "let gridSize = 6;\n\nfunction setup() {\n  createCanvas(gridSize * 100 + 200, gridSize * 100 + 200);\n}\n\nfunction draw() {\n  background(220);\n  textAlign(CENTER, CENTER);\n  noLoop();\n  let blue = color(5, 0, 190, 150);\n  let teal = color(51, 165, 165, 150);\n  let orange = color(244, 131, 0, 150);\n  let purple = color(84, 0, 155, 150);\n  let black = color(42, 28, 44, 150);\n  let colors = [orange, blue, teal, black, purple];\n  let colors2 = [orange, teal, black, purple];\n\n\n  for (let y = 0; y < gridSize; y++) {\n\n    for (let x = 0; x < gridSize; x++) {\n      let randomColor1 = (floor(random(colors.length))+floor(random(colors.length)) + floor(random(colors.length))) / 3;\n      let xpos = x *100 + 100;\n      let ypos = y *100 + 100;\n\n      rectMode(CENTER);\n      \n      let numSquares1 = random(7, 9);\n      let i = 0;\n\n      stroke(colors[floor(randomColor1)]);\n      for (let x = 0; x < numSquares1; x++) {\n        let randomColor2 = floor(random(colors2.length));\n        if (x % 3 == 0) {\n          stroke(colors2[floor(randomColor2)]);\n          strokeWeight(random(1.2,2.3));\n        } else {\n          stroke(colors[floor(randomColor1)]);\n        }\n\n        noFill();\n        // beginShape();\n        //   vertex(xpos + random(-20, 20), ypos + random(-20, 20));\n        //   vertex(xpos + 100 + random(-20, 20), ypos + random(10, 20));\n        //   vertex(xpos + 100 + random(10), ypos + 100 + random(10));\n        //   vertex(xpos + random(10, 20), ypos + 100 + random(10, 20));\n        //   endShape(CLOSE);\n        // beginShape();\n        //   vertex(xpos + random(-30, 20 + i), ypos + random(-30, 20));\n        //   vertex(xpos + 100 + random(-30, 20), ypos + random(-30, 20 + i));\n        //   vertex(xpos + 100 + random(-30,20), ypos + 100 + random(-30, 20));\n        //   vertex(xpos + random(-30, 20 + i), ypos + 100 + random(-30, 20 + i));\n        //   endShape(CLOSE);\n\n        beginShape();\n          vertex(xpos + random(-30, 50 + i), ypos + random(-30, 50));\n          vertex(xpos + 100 + random(-30, 50), ypos + random(-30, 50 + i));\n          vertex(xpos + 100 + random(-30,50), ypos + 100 + random(-30, 50));\n          vertex(xpos + random(-30, 50 + i), ypos + 100 + random(-30, 50 + i));\n          endShape(CLOSE);\n        beginShape();\n          vertex(xpos + random(-30, 50 + i), ypos + random(-30, 50));\n          vertex(xpos + 100 + random(-30, 50), ypos + random(-30, 50 + i));\n          vertex(xpos + 100 + random(-30,50), ypos + 100 + random(-30, 50));\n          vertex(xpos + random(-30, 50 + i), ypos + 100 + random(-30, 50 + i));\n          endShape(CLOSE);\n\n          i++;\n      }\n    \n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "tKzPr6j2YSXuE2K5T",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-14T02:24:38.406Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "25394c869223c1a1f5fb0a15c5d1c8ab",
        "public_id": "avalanche2023spring/ct7vvjb7iwjlxrwk5xie",
        "version": 1676341709,
        "version_id": "123909605c460407468722842333260e",
        "signature": "0c05aef7f84921ad3fbeb1aacf7f6464481ea06a",
        "width": 899,
        "height": 895,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-14T02:28:29Z",
        "tags": [],
        "bytes": 129285,
        "type": "upload",
        "etag": "3fe56680819cf77a1861a453894e6308",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676341709/avalanche2023spring/ct7vvjb7iwjlxrwk5xie.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676341709/avalanche2023spring/ct7vvjb7iwjlxrwk5xie.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:43:06.599Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-14T06:55:04.98Z" }
      }
    ],
    "title": "",
    "description": "Weekly experiment with WebGL and 3D stuff in p5.js. Even with just dedicating one noise function as a plug-in variable, I ended up creating some unexpected interactions with WebGL! With my experimentation I ended up creating noise through translating the position of the meshes.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet n;\nlet fc;\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  //debugMode();\n  frameRate(30);\n}\n\nfunction draw() {\n  background(20, 61, 60);\n  \n  for(i = 0; i < width; i += 20) {\n    n = noise(i * frameCount);\n    fc = frameCount / 3 * 0.03;\n    pointLight(150, 200, 200, 0, 100, 0);\n    ambientMaterial(50);\n    noStroke();\n    \n    //box translation experiment\n    \n    translate(frameCount + n / 5, 0, 0);\n    rotateX(fc);\n    box(100 + n);\n    \n    translate(frameCount + n / 5, 0, 0);\n    rotateY(fc);\n    box(100 + n);\n    \n    translate(frameCount + n / 5, 0, 0);\n    rotateZ(fc);\n    box(100 + n);\n    \n    //box translation reversed\n    \n    push();\n    \n    translate(-(frameCount + n / 5), 0, 0);\n    rotateX(-fc);\n    sphere(60 - n);\n    \n    translate(-(frameCount + n / 5), 0, 0);\n    rotateY(-fc);\n    sphere(60 - n);\n    \n    translate(-(frameCount + n / 5), 0, 0);\n    rotateZ(-fc);\n    sphere(60 - n);\n    \n    pop();\n  }\n  \n  camera(-500, 100, -400);\n  //orbitControl();\n}",
    "comments": []
  },
  {
    "_id": "tccJf6jkKJWHpp2mF",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": { "$date": "2023-02-03T15:04:26.344Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b1ed108f4e2ba67a23b0b7d7787d9821",
        "public_id": "avalanche2023spring/nhjjokhryz7pph1tgfee",
        "version": 1675436672,
        "version_id": "dd29869974373970094de27c7fa88912",
        "signature": "4db6f363d4798d36926aeaec250eb488ffe6fed4",
        "width": 595,
        "height": 486,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T15:04:32Z",
        "tags": [],
        "bytes": 53185,
        "type": "upload",
        "etag": "ace55f00ca65be81ad27d31322567728",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675436672/avalanche2023spring/nhjjokhryz7pph1tgfee.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675436672/avalanche2023spring/nhjjokhryz7pph1tgfee.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T05:59:45.765Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Week 1 Instruction Set",
    "comments": []
  },
  {
    "_id": "tiMNxfvCfGErifRna",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-20T19:18:29.624Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e11f7cd4fb2820e3bdb133333405a7a9",
        "public_id": "avalanche2023spring/ygmjtvijrggdfsumo0pp",
        "version": 1682018429,
        "version_id": "0bd92e3688f670064f99bf5a571116a9",
        "signature": "eb5f706d52d5a305f269f08b31eb1b003da68efa",
        "width": 1024,
        "height": 500,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T19:20:29Z",
        "tags": [],
        "bytes": 56487,
        "type": "upload",
        "etag": "ab77812d294599589bfed58d971b5f64",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682018429/avalanche2023spring/ygmjtvijrggdfsumo0pp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682018429/avalanche2023spring/ygmjtvijrggdfsumo0pp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "84781edb24ce63bbb3cdc4cd0ce70f71",
        "public_id": "avalanche2023spring/dicakqokhfgaeoscqauh",
        "version": 1682018434,
        "version_id": "35faf3b8823319a90d9d369563b20c2d",
        "signature": "35f3a2df35c3c84ce1e53a5247f7b982c7f9226e",
        "width": 1772,
        "height": 1488,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-20T19:20:34Z",
        "tags": [],
        "bytes": 283693,
        "type": "upload",
        "etag": "db85c8807c6a8ee64a1b3f3afcf20e49",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682018434/avalanche2023spring/dicakqokhfgaeoscqauh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682018434/avalanche2023spring/dicakqokhfgaeoscqauh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "title": "",
    "description": "I used ChatGPT to add a bunch of new conversation prompts to Confab (the app I recently released with my friend): https://confab.me/",
    "comments": []
  },
  {
    "_id": "tjhTZ57KPWXgAiA85",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-16T21:22:07.125Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7998358228a1d5011ff359b655388687",
        "public_id": "avalanche2023spring/t67cgqsunxnkiliazcex",
        "version": 1681681415,
        "version_id": "63ea2918438bcc98992735b70eb2773f",
        "signature": "ffa769a72d708432db6c3e6632893b51834077b6",
        "width": 1962,
        "height": 1692,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-16T21:43:35Z",
        "tags": [],
        "pages": 0,
        "bytes": 13548739,
        "type": "upload",
        "etag": "bcbb55d3bb4e6a0a4cbf72b24e90af88",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681681415/avalanche2023spring/t67cgqsunxnkiliazcex.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681681415/avalanche2023spring/t67cgqsunxnkiliazcex.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681681415/avalanche2023spring/t67cgqsunxnkiliazcex.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "128035",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "High",
          "bit_rate": "5364606",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5505938,
        "duration": 19.685011,
        "rotation": 0,
        "nb_frames": 1181,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ed118fdcf2379eded4fcdbe7711eaa02",
        "public_id": "avalanche2023spring/ue7l1wkrkzayklcqs2gq",
        "version": 1681681489,
        "version_id": "ba9af512f58606f9d2ce54ba4e416b20",
        "signature": "31ae60fee22d3f7b22b955d43c33516c3dc3a30d",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-16T21:44:49Z",
        "tags": [],
        "bytes": 2905561,
        "type": "upload",
        "etag": "9f36d81c73b419946c306b28c1421f8d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681681489/avalanche2023spring/ue7l1wkrkzayklcqs2gq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681681489/avalanche2023spring/ue7l1wkrkzayklcqs2gq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "79ab5cb8fbd7970e877b9f51333a66aa",
        "public_id": "avalanche2023spring/ejjlipltpe2xrnjgsmv7",
        "version": 1681681521,
        "version_id": "a2faa977c07e1ae0f28d74b605c56cfd",
        "signature": "e69a8f19e6a8de5fae81ec750533dd80a6767f95",
        "width": 2400,
        "height": 1700,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-16T21:45:21Z",
        "tags": [],
        "bytes": 2138681,
        "type": "upload",
        "etag": "8a0f37352748b1d3585802aa87dfa288",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681681521/avalanche2023spring/ejjlipltpe2xrnjgsmv7.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681681521/avalanche2023spring/ejjlipltpe2xrnjgsmv7.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T01:07:04.383Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T01:16:00.012Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T01:38:25.526Z" }
      }
    ],
    "title": "",
    "description": "Halloween's just around the corner! (time is relative). Made album cover using playform's styleGANs that trained 30 jack-O lantern images and gave me this weird wishy washy output that kinda works with the theme",
    "comments": []
  },
  {
    "_id": "tqqWZFZ8tb5f7sH9z",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": { "$date": "2023-02-03T14:52:42.716Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4afa0fec563c8e7f5075a9fa90854374",
        "public_id": "avalanche2023spring/dcrui283jktwmuyltgnd",
        "version": 1675435995,
        "version_id": "1ef7cf999ab5e7af2a0e72d514be58b5",
        "signature": "398b77100be53e8c8c50f276497dba52a53abc9b",
        "width": 1650,
        "height": 1620,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-03T14:53:15Z",
        "tags": [],
        "pages": 0,
        "bytes": 19070108,
        "type": "upload",
        "etag": "feb4e861281efa9794b6da58f3b7e021",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675435995/avalanche2023spring/dcrui283jktwmuyltgnd.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675435995/avalanche2023spring/dcrui283jktwmuyltgnd.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "7040100",
          "dar": "55:54",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 7046691,
        "duration": 21.65,
        "rotation": 0,
        "nb_frames": 1299,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "057fbdaeaf61da113de80b97fc8c011d",
        "public_id": "avalanche2023spring/z0ihcx27fsjiekfrg5ud",
        "version": 1675436101,
        "version_id": "4f4e70c3e914d8fdca1bd938248f2b56",
        "signature": "63f35c88b0638345a20602f8975245b8b3f3b634",
        "width": 1650,
        "height": 1620,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-03T14:55:01Z",
        "tags": [],
        "pages": 0,
        "bytes": 6539948,
        "type": "upload",
        "etag": "bc8bdce2095fc3e2ea2e1a4e6a471012",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675436101/avalanche2023spring/z0ihcx27fsjiekfrg5ud.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675436101/avalanche2023spring/z0ihcx27fsjiekfrg5ud.mov",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "6601590",
          "dar": "55:54",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6608789,
        "duration": 7.916667,
        "rotation": 0,
        "nb_frames": 475,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T15:20:08.406Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T18:03:25.566Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-08T21:25:27.033Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Some sin waves generation using a strong middle bias 🌊",
    "code": "let j;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // noLoop();\n  \n  frameRate(1);\n  \n  angleMode = DEGREES;\n}\n\nfunction draw() {\n  background(37, 84, 105);\n  a = 0;\n  inc = 0.1;\n  \n  for(j = 0; j<windowHeight; j+=80){\n    \n     // r = 255;\n    g = random(0,255);\n    b = random (0,50);\n    \n    strokeWeight(3)\n    stroke(g, 255, 255, b);\n    \n    // r = random(0,20);\n    r = max(random(0, 5), random(0, 5), random(0, 5), random(0, 5), random(0, 5));\n\n    drawWave(j);\n  }\n  \n}\n\nfunction drawWave(y){\n  for (let i = 0; i<windowWidth; i++){\n    x1 = i;\n    x2 = i+1;\n    line(x1 * r, y + sin(a) * 90, x1 * r, windowHeight);\n    line(x1 * r, y + sin(a) * 90, x2 * r, y + sin(a+inc) * 90);\n    a=a+inc;\n  }\n  \n}",
    "comments": []
  },
  {
    "_id": "tr97YBdZFS7W6yvny",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-12T01:02:16.529Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bdbb7a22a3d7b7419646f4f71e7a7217",
        "public_id": "avalanche2023spring/nt9bai7fjxqts9kf7ega",
        "version": 1681261497,
        "version_id": "e083ee9e8955ab42ec3cc014da159a09",
        "signature": "7260cf5d8eb87a87fc8d8e021d0803c3c48467e9",
        "width": 2520,
        "height": 1392,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T01:04:57Z",
        "tags": [],
        "bytes": 206794,
        "type": "upload",
        "etag": "d5bf63e2d7b2870e8baad711af6337ea",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681261497/avalanche2023spring/nt9bai7fjxqts9kf7ega.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681261497/avalanche2023spring/nt9bai7fjxqts9kf7ega.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ced8270d401a0c9267ba5514d02c176d",
        "public_id": "avalanche2023spring/pncpk4moh9teh494wqto",
        "version": 1681261501,
        "version_id": "62e6479c647185a4a6350d00a223b543",
        "signature": "38b0b647b142b94b127c0727a727d071d974cc72",
        "width": 2538,
        "height": 1386,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T01:05:01Z",
        "tags": [],
        "bytes": 201882,
        "type": "upload",
        "etag": "389d932023cde8904c7d99b7ef9b2111",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681261501/avalanche2023spring/pncpk4moh9teh494wqto.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681261501/avalanche2023spring/pncpk4moh9teh494wqto.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c96d775dc47856670179af4e571f1bfa",
        "public_id": "avalanche2023spring/g0oollbfbfd81zzm6xuc",
        "version": 1681261505,
        "version_id": "2ba32c8cb7ba5de94ed5557f7d26dba8",
        "signature": "42944bfc30479338c32f5abe63ed2bebccba75d5",
        "width": 2502,
        "height": 1418,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-12T01:05:05Z",
        "tags": [],
        "bytes": 175229,
        "type": "upload",
        "etag": "4ddf83d9c3059b7d3f93cb2402828a7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681261505/avalanche2023spring/g0oollbfbfd81zzm6xuc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681261505/avalanche2023spring/g0oollbfbfd81zzm6xuc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T02:47:24.721Z" }
      }
    ],
    "title": "",
    "description": "Enlisted the help of ChatGPT to generate some lists, including celebrities, charitable organizations, designer brands, etc. Then, I used string templating to create this randomized \"collaboration idea\" generator",
    "comments": []
  },
  {
    "_id": "trAcXD22gXaKdHg7P",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-11T20:56:00.203Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dbbc33894f6d6006f59d539bff8a37d4",
        "public_id": "avalanche2023spring/lt7k7gmspoa62vrqlboh",
        "version": 1683838584,
        "version_id": "bae14b017204ab6a74d3ce3d99d0fce4",
        "signature": "f73933de8bc60797c1f69c4e1c8f64624df8222d",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T20:56:24Z",
        "tags": [],
        "bytes": 514282,
        "type": "upload",
        "etag": "9ad768db315d768110a30d8b8d2661cb",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683838584/avalanche2023spring/lt7k7gmspoa62vrqlboh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683838584/avalanche2023spring/lt7k7gmspoa62vrqlboh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "3e97d3d358c747cde17202cb20df4449",
        "public_id": "avalanche2023spring/urte724yym0wqbpsbwgl",
        "version": 1683838588,
        "version_id": "fb2a2853a2a3b8f128788d1cde1ed049",
        "signature": "18fb5967814a0998b7f640976ec53b9949710770",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T20:56:28Z",
        "tags": [],
        "bytes": 488679,
        "type": "upload",
        "etag": "ed8733979c56589e501c0229877b58f7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683838588/avalanche2023spring/urte724yym0wqbpsbwgl.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683838588/avalanche2023spring/urte724yym0wqbpsbwgl.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7eee569d4f48cc5f2f6b4b9acca10a25",
        "public_id": "avalanche2023spring/ze0c1zyf1zfh7ceeaalt",
        "version": 1683838606,
        "version_id": "c337e7d862da1c7a6da191dfed20ec16",
        "signature": "b16d207bc4fcf8ac20af5e5bb7be56917109fa81",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T20:56:46Z",
        "tags": [],
        "bytes": 490855,
        "type": "upload",
        "etag": "3dde4ad7b9b7bb911e7bb5d9b143903e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683838606/avalanche2023spring/ze0c1zyf1zfh7ceeaalt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683838606/avalanche2023spring/ze0c1zyf1zfh7ceeaalt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T04:35:34.8Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T10:19:56.144Z" }
      }
    ],
    "title": "",
    "description": "Created these floral patterns using turtle graphics, a png, and the exclusion blend mode 🌸",
    "comments": []
  },
  {
    "_id": "tsAH7jJnWorz5c4Kx",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-31T03:11:49.152Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fc4aff9a20af23063e655a5c0703889a",
        "public_id": "avalanche2023spring/s9jv43snwmcigjqkq8d4",
        "version": 1675134717,
        "version_id": "960f15e2683f1ef5b7d0e2c9b30df188",
        "signature": "71e10d53b2b071a73b24854505ff911c3f742c4b",
        "width": 3300,
        "height": 5100,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-31T03:11:57Z",
        "tags": [],
        "bytes": 4477709,
        "type": "upload",
        "etag": "78facfc6f1f389a2bd9b79af50f20037",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675134717/avalanche2023spring/s9jv43snwmcigjqkq8d4.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675134717/avalanche2023spring/s9jv43snwmcigjqkq8d4.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T12:59:51.353Z" }
      },
      {
        "voter_id": "ThhLMCZBENKtw2dT6",
        "category": "funny",
        "created_at": { "$date": "2023-02-01T02:15:24.406Z" }
      }
    ],
    "title": "",
    "description": "Sketch made using Graeme's instructions.\n\nAlso no I did not have Helvetica.",
    "comments": [],
    "inspiration_name": "Sketch using Graeme's Instructions"
  },
  {
    "_id": "tsMQMjGSbCWMriqhs",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T02:43:32.915Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ffcd3c7ad2e5903a6103e81aabe26994",
        "public_id": "avalanche2023spring/pwaomqhmsvkepnofcxyf",
        "version": 1682045052,
        "version_id": "5411b359ab9f0aa481f0d61c7f610267",
        "signature": "97b231368d051a9a936387f048d93d51751b7102",
        "width": 1356,
        "height": 1356,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T02:44:12Z",
        "tags": [],
        "bytes": 2790093,
        "type": "upload",
        "etag": "6cc28861f05916440a5e58451f868547",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682045052/avalanche2023spring/pwaomqhmsvkepnofcxyf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682045052/avalanche2023spring/pwaomqhmsvkepnofcxyf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "91071dac22fcbb1020b85eed38d8630c",
        "public_id": "avalanche2023spring/ri3mvivsas80vikpzcwf",
        "version": 1682045067,
        "version_id": "ac811b601b40e5a8e22a054d9843f351",
        "signature": "80004c5ce7d6e9dbf1cfb0bba4624268df2b8d2b",
        "width": 1924,
        "height": 1924,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T02:44:27Z",
        "tags": [],
        "bytes": 4583382,
        "type": "upload",
        "etag": "17f5e445800113417be075d8adef138f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682045067/avalanche2023spring/ri3mvivsas80vikpzcwf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682045067/avalanche2023spring/ri3mvivsas80vikpzcwf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:43:48.846Z" }
      }
    ],
    "title": "",
    "description": "I went back to pixels week and asked miss ChatGPT to make me a pixel sorting algorithm. It was trial and error for sure and couldn't get some things to do what I wanted (the image is from Midjourney, I asked it to imagine Blackpink's next music video lol)",
    "code": "let img;\n\nfunction preload() {\n  img = loadImage('assets/test-09.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  pixelDensity(1);\n  image(img, 0, 0);\n}\n\nfunction draw() {\n  noLoop();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n}\n\nfunction sortImage() {\n  loadPixels();\n\n  for (let y = 0; y < height; y++) {\n    if (random() > 0.1) { // randomly select rows to sort\n      let row = [];\n      let start = floor(random(width)); // random starting point for sorting\n      let end = start; // end point for sorting\n      let maxSum = 0; // highest pixel value sum found so far\n      for (let x = start; x < width; x++) {\n        let index = (x + y * width) * 4;\n        let r = pixels[index];\n        let g = pixels[index + 1];\n        let b = pixels[index + 2];\n        let sum = r + g + b;\n        row.push([r, g, b]);\n        if (sum > maxSum) { // update end point and maxSum if a higher sum is found\n          end = x;\n          maxSum = sum;\n        }\n      }\n\n      row = row.slice(0, end - start + 1); // only sort up to the highest value pixel\n      row.sort(function(a, b) {\n        let aSum = a[0] + a[1] + a[2];\n        let bSum = b[0] + b[1] + b[2];\n        return aSum - bSum;\n      });\n\n      for (let x = start; x <= end; x++) {\n        let index = (x + y * width) * 4;\n        pixels[index] = row[x - start][0];\n        pixels[index + 1] = row[x - start][1];\n        pixels[index + 2] = row[x - start][2];\n      }\n    }\n  }\n\n  updatePixels();\n}",
    "comments": [],
    "inspiration_url": "http://satyarth.me/articles/pixel-sorting/#:~:text=Pixel%20sorting%20is%20an%20interesting,(processing%20source%20code%20here).",
    "inspiration_name": "Kim Asendorf"
  },
  {
    "_id": "tvsrXJvmrabd2Azsg",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-18T03:47:07.035Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37e0115dbac88d961e43dd462ad695c4",
        "public_id": "avalanche2023spring/jboz10x2n9zoejwzp3y4",
        "version": 1681789637,
        "version_id": "e924768391dc7eb49ba6330f9dea9cd9",
        "signature": "49e3b425db1f7249a0fe089f5b00a7fe015993cb",
        "width": 1529,
        "height": 1025,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-18T03:47:17Z",
        "tags": [],
        "bytes": 229695,
        "type": "upload",
        "etag": "11fc866437f84f9ae10c73f41e6d135e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681789637/avalanche2023spring/jboz10x2n9zoejwzp3y4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681789637/avalanche2023spring/jboz10x2n9zoejwzp3y4.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "a20f288dc67d9409394c0278244847eb",
        "public_id": "avalanche2023spring/xed7eu3r2lwahdt3iyie",
        "version": 1681789710,
        "version_id": "bb1013bd1e8ee27229c37847f8d991cd",
        "signature": "7e93f5803f93b9d003bbea12481942d298fad044",
        "width": 1529,
        "height": 1021,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-18T03:48:30Z",
        "tags": [],
        "bytes": 213886,
        "type": "upload",
        "etag": "b4354a1f7888391591c6dfa212acbe3b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681789710/avalanche2023spring/xed7eu3r2lwahdt3iyie.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681789710/avalanche2023spring/xed7eu3r2lwahdt3iyie.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7e9bf9958cc2428b620bd80e36fca3be",
        "public_id": "avalanche2023spring/lbkqspxxy51acu4clpti",
        "version": 1681790024,
        "version_id": "de25933735d3b7a1a615ed09b5420b94",
        "signature": "b52dd45d0328a02feb16ead64816b8ac6709c3a0",
        "width": 1527,
        "height": 1019,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-18T03:53:44Z",
        "tags": [],
        "bytes": 256352,
        "type": "upload",
        "etag": "9663e88749678892fa0988f5a25d4cc6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681790024/avalanche2023spring/lbkqspxxy51acu4clpti.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681790024/avalanche2023spring/lbkqspxxy51acu4clpti.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-18T18:00:08.322Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-19T19:24:57.811Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-20T19:41:35.634Z" }
      }
    ],
    "title": "",
    "description": "Experimented with ChatGPT for a bit. Amongst my exploration, I decided to take another stab at the text challenge from last week since I was curious to see what an AI would write if I gave it a prompt. Albeit I did expand on the prompt a little bit to follow my own thought process on the challenge, and so it created this story seen here. I decided to question ChatGPT's motives to see how it would talk about its reasons behind several of the choices that it made for this story. What stood out to me is that I think it went through my question and built upon keywords to create the responses to my questions while also bringing up a myriad of sources and thought processes to justify the elements of the story. It also brought up knowledge of narrative tropes and other storytelling elements as well which piqued my interest. This was definitely a moment as it was interesting to see how an AI would go about creating a story and talking about its thought process.",
    "comments": []
  },
  {
    "_id": "twSiAWNc2it3fcYoX",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": { "$date": "2023-04-28T02:26:00.693Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "936a4896e4b028954a5dd40e105d5d6c",
        "public_id": "avalanche2023spring/dxxokz5bet3awughghlg",
        "version": 1682648778,
        "version_id": "6ea5079c7c49064e0ff747938063a1ce",
        "signature": "c18a24d3d6d72dd7c6000fef0e1d682fb39407d6",
        "width": 602,
        "height": 601,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-28T02:26:18Z",
        "tags": [],
        "bytes": 14482,
        "type": "upload",
        "etag": "9f8e63d2f25cd53061c3439f174a4eba",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682648778/avalanche2023spring/dxxokz5bet3awughghlg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682648778/avalanche2023spring/dxxokz5bet3awughghlg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "5e1ee9e05dbfdec407bc75502f384d7c",
        "public_id": "avalanche2023spring/b7gsqtap1uknkxkdzfpm",
        "version": 1682648779,
        "version_id": "cb0345b55d0cf63ca7ff7537c5f533ad",
        "signature": "2042e8b1ce92bc014d4685ec3018cba3b46a5eaa",
        "width": 822,
        "height": 598,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-28T02:26:19Z",
        "tags": [],
        "bytes": 13328,
        "type": "upload",
        "etag": "8c01b9969676b921584cd824e280b675",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682648779/avalanche2023spring/b7gsqtap1uknkxkdzfpm.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682648779/avalanche2023spring/b7gsqtap1uknkxkdzfpm.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Combined the p5play chapter with the Creative AI chapter to see how ChatGPT produces microgames. It was interesting to see how ChatGPT creates games until I started seeing issues with the library it was trying to access. Since p5 uses the new library, it creates a conflict since I think ChatGPT was trying to draw upon the old library using functions like createSprite() instead of variable = new Sprite;. Also I think as I kept trying to iterate and fix the code through GPT it kept changing the scope of the project as well so that was interesting yet strange to see. We were able to still create some concepts albeit with many flaws in both of them.",
    "comments": []
  },
  {
    "_id": "tx3KLqhgGBiq9aiDY",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-27T07:01:27.876Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ad2b69b056a6aeaec4781500fd75f7fe",
        "public_id": "avalanche2023spring/pw1eph4zcdn0kssv0dwj",
        "version": 1677481299,
        "version_id": "37b7186d6512922a6327566c617f79bc",
        "signature": "aec8b0f12180e2b1594b8438b539d00f181abf2a",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-27T07:01:39Z",
        "tags": [],
        "bytes": 60179,
        "type": "upload",
        "etag": "d70c6b58984ae9eb8cb245d9da902172",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677481299/avalanche2023spring/pw1eph4zcdn0kssv0dwj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677481299/avalanche2023spring/pw1eph4zcdn0kssv0dwj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Attempt at recreating Challenge 1...",
    "comments": [],
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 100);\n}\n\nfunction draw() {\n  background(0, 0, 19.61);\n  // background(100, 100, 100);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  // let noiseFrequency = 0.02;\n  let noiseFrequency = 0.4;\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    // let x = random(width);\n    // let y = random(height);\n    let x = noise(i*noiseFrequency, 0)*width;\n    let y = noise(i*noiseFrequency, 1000)*height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    // let diameter = 10;\n    // let diameter = (random(5, 15)+random(5, 15)+random(5, 15)) / 3;\n    // let diameter = noise(i*1000, 0)*20;\n    \n    // let diameter = noise(i*2, 1000)*15 + 5;\n    let diameter = noise(i*1)*15 + 4;\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    // let h = floor(map(diameter, 6, 19, 0, 90));\n    let h = floor(map(diameter, 6, 18, 0, 95));\n    fill(h, 100, 100);\n\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}\n\nfunction roundTo(value, x) {\n\treturn round(value/x) * x;\n}"
  },
  {
    "_id": "txuiq5MSfiQzT4MFd",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T06:05:40.246Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3737b3ede3726590d039486ff39cf1f6",
        "public_id": "avalanche2023spring/qnfav1unchv7b1ztu9zu",
        "version": 1677737166,
        "version_id": "96c9a174b815125c51a51576cea5cade",
        "signature": "24cec44b2047d691c9998ecc0b789408bd5d4484",
        "width": 1020,
        "height": 1112,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-02T06:06:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 11717841,
        "type": "upload",
        "etag": "6d5d1d2f83892e6183e050bd0d3e3c8e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677737166/avalanche2023spring/qnfav1unchv7b1ztu9zu.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677737166/avalanche2023spring/qnfav1unchv7b1ztu9zu.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677737166/avalanche2023spring/qnfav1unchv7b1ztu9zu.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125429",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "2497857",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3022334,
        "duration": 31.016667,
        "rotation": 0,
        "nb_frames": 1920,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:06.674Z" }
      }
    ],
    "title": "",
    "description": "**Challenge 2** Yet to figure out how to smoothen transition when pulling the time speed slider",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet amplitude_slider;\nlet timeSpeed_slider;\nlet frequency_slider;\n\nlet startX = 60;\nlet startY = 280;\nlet endX = 460;\nlet endY = 80;\n\nfunction setup() {\n  createCanvas(500, 320);\n  push();\n    fill(\"white\");\n    createP(\"Amplitude\");\n    amplitude_slider = createSlider(0, 200, 80);\n    createP(\"Frequency\");\n    frequency_slider = createSlider(0, 100, 30);\n    createP(\"TimeSpeed\");\n    timeSpeed_slider = createSlider(0, 100, 80);\n  pop();\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 2;\n  let frequency = frequency_slider.value() / 3;\n  let timeSpeed = timeSpeed_slider.value() / 15000;\n  \n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  // for (i = 0; i < 1; i += 0.02 + (noise(i*10))*0.01) \n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = noise(i*frequency, (i+0.02)*frequency, millis()*timeSpeed) * amplitude;\n    // let offsetY = noise(i*frequency, (i+0.02)*frequency, millis()*timeSpeed) * amplitude;\n    let offsetX = (noise(i*frequency + millis()*timeSpeed, 1)-0.5) * amplitude;\n    let offsetY = (noise(i*frequency + millis()*timeSpeed, 3)-0.5) * amplitude;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "comments": []
  },
  {
    "_id": "u2qbScXyhYphRbMZu",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-30T22:04:10.785Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "496d88103aa8ba593ab7cb05f94310dc",
        "public_id": "avalanche2023spring/alfwnqwfmhuubhmjtutk",
        "version": 1675116382,
        "version_id": "4b80dfe7dae0d67965fca3b7f8aa3bd8",
        "signature": "11d85fdecef08f364c867cb06e0fc6bf5fd5eea2",
        "width": 2084,
        "height": 2084,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-30T22:06:22Z",
        "tags": [],
        "bytes": 510416,
        "type": "upload",
        "etag": "e44288693fed433be52e9a9dbc4688f9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675116382/avalanche2023spring/alfwnqwfmhuubhmjtutk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675116382/avalanche2023spring/alfwnqwfmhuubhmjtutk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-01-30T22:11:36.207Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T00:23:21.875Z" }
      }
    ],
    "title": "",
    "description": "Self Portrait using Chris's instructions",
    "comments": []
  },
  {
    "_id": "u7zDjjPBmSps3nrqo",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T03:00:06.237Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9ed82d44c1a5884ce6068428cbde97f5",
        "public_id": "avalanche2023spring/kr5vhbx0tlv8fpcgfreb",
        "version": 1680231621,
        "version_id": "804426bf5ace6c841529e25d9d27649d",
        "signature": "55251c86b7733f438c40e459b453dedbeef408ff",
        "width": 376,
        "height": 368,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T03:00:21Z",
        "tags": [],
        "pages": 0,
        "bytes": 208613,
        "type": "upload",
        "etag": "ffaaf8d57caf64c7b96aef88243dcb5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680231621/avalanche2023spring/kr5vhbx0tlv8fpcgfreb.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680231621/avalanche2023spring/kr5vhbx0tlv8fpcgfreb.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680231621/avalanche2023spring/kr5vhbx0tlv8fpcgfreb.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "113492",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 21,
          "profile": "High",
          "bit_rate": "19075",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 139587,
        "duration": 11.956,
        "rotation": 0,
        "nb_frames": 344,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:14:23.226Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T13:03:13.639Z" }
      }
    ],
    "title": "",
    "description": "Not the perfect one and cheated a little but wanted these squares to appear as the notes were playing.",
    "code": "// console.log(Tone);\n\nlet synth;\nlet fft;\nlet xPos = 200;\nvar x = 50;\nvar b = 200;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  background(220);\n\n // fft = new p5.FFT();\n\n  synth = new Tone.Synth().toDestination();\n}\n\nfunction draw() {\n//   let waveform = fft.waveform();\n\n//   beginShape();\n//   stroke(20);\n//   for (let i = 0; i < waveform.length; i++) {\n//     let x = map(i, 0, waveform.length, 0, width);\n//     let y = map(waveform[i], -1, 1, 0, height);\n//     vertex(x, y);\n//   }\n  //endShape();\n        // Part 1: Move a circle from the middle of the screen to the right side of the screen.\n//  rectMode(CENTER);\n  //ellipse(xPos, 200, 10);\n\n//   xPos += 1;\n\n//   if (xPos > 209) {\n//     xPos = 0;\n// }\n}\n\nfunction mousePressed() {\n  mousebuttonClicked = true;\n  synth.triggerAttackRelease(\"C4\", 4, 0);\n  synth.triggerAttackRelease(\"E4\", 4, 1);\n  synth.triggerAttackRelease(\"G4\", 4, 2);\n  synth.triggerAttackRelease(\"B4\", 4, 3);\n\n  synth.triggerAttackRelease(\"B4\", 4, 4);\n  synth.triggerAttackRelease(\"G4\", 4, 5);\n  synth.triggerAttackRelease(\"E4\", 4, 6);\n  synth.triggerAttackRelease(\"C4\", 0.5, 7);\n  \n\n fill(0, mouseY, mouseX);\n  rectMode(CENTER);\n  rect(mouseX, mouseY, x, x);\n\n\n}",
    "comments": []
  },
  {
    "_id": "u8fThvjg2sGyfyJTt",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T17:04:39.967Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "004ff029f7f48305ee931eed7d5c65da",
        "public_id": "avalanche2023spring/ycyfru8cdaf93gr59k93",
        "version": 1683911132,
        "version_id": "2f33d6aa529b7ebf571615f858522cae",
        "signature": "a6fa1e3d34f2dc07a9ae0b8a3b024eba1b04709f",
        "width": 338,
        "height": 303,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T17:05:32Z",
        "tags": [],
        "bytes": 78090,
        "type": "upload",
        "etag": "bb291f76e436409b3d1d79bad179e8b2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683911132/avalanche2023spring/ycyfru8cdaf93gr59k93.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683911132/avalanche2023spring/ycyfru8cdaf93gr59k93.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "SPIROGRAPH",
    "comments": []
  },
  {
    "_id": "u8gvbofFmK2tDPmo2",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T03:39:03.939Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cf4545533ab2c3b646867c68bdf4a64b",
        "public_id": "avalanche2023spring/gehm17tzkum7mvpxobic",
        "version": 1680147567,
        "version_id": "e568035bf8a7a9e825cc809cd18d623c",
        "signature": "ac662955c32cd1b0de3517ddff30e18b525dc2bc",
        "width": 708,
        "height": 830,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-30T03:39:27Z",
        "tags": [],
        "bytes": 101158,
        "type": "upload",
        "etag": "712108723c0ac2642ddd1aaf8bdf725d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680147567/avalanche2023spring/gehm17tzkum7mvpxobic.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680147567/avalanche2023spring/gehm17tzkum7mvpxobic.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c8942d1d2bed74aaea960a32a3db1fe8",
        "public_id": "avalanche2023spring/jnnlv4ijnoujtdjqxe5k",
        "version": 1680147569,
        "version_id": "c46c2dd3381833339ea68a8cf217d18e",
        "signature": "6738c87b641e2953a875d2a50261bd14faa70c8a",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-30T03:39:29Z",
        "tags": [],
        "pages": 0,
        "bytes": 333860,
        "type": "upload",
        "etag": "759065a84c730b6f4d10ac8b5bc3103e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680147569/avalanche2023spring/jnnlv4ijnoujtdjqxe5k.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680147569/avalanche2023spring/jnnlv4ijnoujtdjqxe5k.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680147569/avalanche2023spring/jnnlv4ijnoujtdjqxe5k.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "208547",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "32154",
          "dar": "801:413",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 251890,
        "duration": 10.603333,
        "rotation": 0,
        "nb_frames": 637,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T15:19:25.798Z" }
      }
    ],
    "title": "",
    "description": "I recreated Deep Purple's Smoke on the Water - explored Tone.PolySynth chords, the oscillator, and BPM to make this. I wanted to try to add a drum beat as well but ran out of time",
    "comments": []
  },
  {
    "_id": "uDiNZXGhg7hyFmhpL",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T05:04:33.374Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "6787651ed1f53b4413f7d198fa87d045",
        "public_id": "avalanche2023spring/doyiqjv06qislwmd76am",
        "version": 1678338298,
        "version_id": "b4bd11fb3911ff7929b05968aca29c70",
        "signature": "e0759330b6b0753f2a63178d472d5cb27b615240",
        "width": 821,
        "height": 821,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T05:04:58Z",
        "tags": [],
        "bytes": 1442443,
        "type": "upload",
        "etag": "1a18ef79fcd47f67c01d7bcc1c194cf3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678338298/avalanche2023spring/doyiqjv06qislwmd76am.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678338298/avalanche2023spring/doyiqjv06qislwmd76am.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2f3fbef6d8293d0173e1d0dcdadbd1bd",
        "public_id": "avalanche2023spring/n0bvqbybwlqbbw1kmczt",
        "version": 1678338305,
        "version_id": "51b8c6bcc0435e0d13e699dae2592b31",
        "signature": "e4c6291f4e392d5d8ebed8af4d11998b8a8f92b0",
        "width": 821,
        "height": 821,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T05:05:05Z",
        "tags": [],
        "bytes": 1129452,
        "type": "upload",
        "etag": "a1683f17fe301903cb6f9e1149f9b598",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678338305/avalanche2023spring/n0bvqbybwlqbbw1kmczt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678338305/avalanche2023spring/n0bvqbybwlqbbw1kmczt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "dc59b0434ce2034bc1195db49b2c892f",
        "public_id": "avalanche2023spring/ucxm0l3mpzkh5lrzyq1m",
        "version": 1678338308,
        "version_id": "a941df8a173b7d02c915d5edad516291",
        "signature": "7a895401ae9cb704aac5f196fa0a72d9a2f7bbbb",
        "width": 823,
        "height": 823,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T05:05:08Z",
        "tags": [],
        "bytes": 960560,
        "type": "upload",
        "etag": "e7aebc125932fe0e88a159c624e10a4d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678338308/avalanche2023spring/ucxm0l3mpzkh5lrzyq1m.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678338308/avalanche2023spring/ucxm0l3mpzkh5lrzyq1m.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-09T18:59:49.899Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T00:23:27.735Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:33.852Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T17:27:42.712Z" }
      }
    ],
    "title": "",
    "description": "Pixel Ouroboros challenge: 1st, 2nd, and 5th regenerations. Replaced pixels of a tulip flowers image with letters of the same colour, with size determined by the greyscale of the image. First generation resembled the original flower image but the text started getting lighter and larger and looking like big blobs by the end. Interesting to note the positive feedback loop - if I had set the darker colours to larger sizes, the image would have gotten darker and darker with regenerations. <br>\n\nUsing the get() function took a long time. It slowed down my computer enough that it wouldn't even work until I fed it a super small image and console.logged the get() array. Had to do that every time I regenerated the image, took a lot of time lol",
    "code": "let img;\nlet alphabet = [\"t\", \"u\", \"l\", \"i\", \"p\", \"s\"];\n\nfunction preload() {\n  img = loadImage(\"flowers4.jpg\");\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  background(0);\n\n  // image(img, 0, 0);\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      let imgcolor = img.get(x, y);\n      console.log(imgcolor);\n\n      let size = map(lightness(imgcolor), 0, 255, 0, 75);\n      let sp = width/img.width;\n      textSize(size);\n      fill(imgcolor);\n      text(alphabet[floor(random(alphabet.length))], x*sp+sp*0.5, y*sp+sp*0.5)\n    }\n  }\n\n  // noSmooth();\n  updatePixels();\n  // noLoop();\n}",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love this!\n",
        "created_at": { "$date": "2023-03-09T19:00:54.787Z" }
      }
    ]
  },
  {
    "_id": "uLKKqeCcw86yHBYZs",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T21:12:09.492Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "275e247eccce1e087236f7b15710cba2",
        "public_id": "avalanche2023spring/y1alznvo5imiiai33k7u",
        "version": 1681420333,
        "version_id": "2047e6f0b1bf37f1517422c1ced47724",
        "signature": "50fdaa8fdc2c60d5184b21c1abcd52226994ea27",
        "width": 1821,
        "height": 1821,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T21:12:13Z",
        "tags": [],
        "bytes": 180273,
        "type": "upload",
        "etag": "7e0dc7b36e09aa2a5abb4b4a1aaa3871",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681420333/avalanche2023spring/y1alznvo5imiiai33k7u.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681420333/avalanche2023spring/y1alznvo5imiiai33k7u.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-13T23:58:55.853Z" }
      }
    ],
    "title": "",
    "description": "Another bad story by Rama, Aabha, and I in collaboration with Markov.",
    "comments": [],
    "code": "const bill_of_rights =\n  \"October arrived, spreading a damp chill over the grounds and into the castle. Madam Pomfrey, the nurse, was kept busy by a sudden spate of colds among the staff and students. Her Pepperup potion worked instantly, though it left the drinker smoking at the ears for several hours afterward. Ginny Weasley, who had been looking pale, was bullied into taking some by Percy. The steam pouring from under her vivid hair gave the impression that her whole head was on fire.Raindrops the size of bullets thundered on the castle windows for days on end; the lake rose, the flower beds turned into muddy streams, and Hagrid's pumpkins swelled to the size of garden sheds. It was a dark and stormy night and Oliver Wood's enthusiasm for regular training sessions, however, was not dampened, which was why Harry was to be found, late one stormy Saturday afternoon a few days before Halloween, returning to Gryffindor Tower, drenched to the skin and splattered with mud. Even aside from the rain and wind it hadn't been a happy practice session. Fred and George, who had been spying on the Slytherin team, had seen for themselves the speed of those new Nimbus Two Thousand and Ones. They reported that the Slytherin team was no more than seven greenish blurs, shooting through the air like missiles.\";\n  \nconst the_raven =\n  \"When Rosemary Harper joins the crew of the Wayfarer, she isn’t expecting much. The Wayfarer, a patched-up ship that’s seen better days, offers her everything she could possibly want: a small, quiet spot to call home for a while, adventure in far-off corners of the galaxy, and distance from her troubled past. The crew is a mishmash of species and personalities, from Sissix, the friendly reptillian pilot, to Kizzy and Jenks, the constantly sparring engineers who keep the ship running. It was a dark and stormy night but life on board is chaotic, but more or less peaceful—exactly what Rosemary wants.Until the crew are offered the job of a lifetime: the chance to build a hyperspace tunnel to a distant planet. They’ll earn enough money to live comfortably for years… if they survive the long trip through war-torn interstellar space without endangering any of the fragile alliances that keep the galaxy peaceful. But Rosemary isn’t the only person on board with secrets to hide, and the crew will soon discover that space may be vast, but spaceships are very small indeed.\";\n\nconst seuss =\n  \"If you have ever peeled an onion, then you know that the first thin, papery layer reveals another thin, papery layer, and that layer reveals another, and another, and before you know it you have hundreds of layers all over the kitchen table and thousands of tears in your eyes, sorry that you ever started peeling in the first place and wishing that you had left the onion alone to wither away on the shelf of the pantry while you went on with your life, even if that meant never again enjoying the complicated and overwhelming taste of this strange and bitter vegetable. In this way, the story of the Baudelaire orphans is like an onion, and if you insist on reading each and every thin, papery layer in A Series of Unfortunate Events, your only reward will be 170 chapters of misery in your library and countless tears in your eyes. Even if you have read the first twelve volumes of the Baudelaires' story, it is not too late to stop peeling away the layers, and to put this book back on the shelf to wither away while you read something less complicated and overwhelming. The end of this unhappy chronicle is like its bad beginning, as each misfortune only reveals another, and another, and another, and only those with the stomach for this strange and bitter tale should venture any farther into the Baudelaire onion. I'm sorry to tell you this, but that is how the story goes. The Baudelaire orphans would have been happy to see an onion, had one come bobbing along as they traveled across the vast and empty sea in a boat the size of a large bed but not nearly as comfortable. Had such a vegetable appeared, Violet, the eldest Baudelaire, would have tied up her hair in a ribbon to keep it out of her eyes, and in moments would have invented a device to retrieve the onion from the water. Klaus, the middle sibling and the only boy, would have remembered useful facts from one of the thousands of books he had read, and been able to identify which type of onion it was, and whether or not it was edible. And Sunny, who was just scarcely out of babyhood, would have sliced the onion into bite-sized pieces with her unusually sharp teeth, and put her newly developed cooking skills to good use in order to turn a simple onion into something quite tasty indeed. The elder Baudelaires could imagine their sister announcing 'Soubise! which was her way of saying 'Dinner is served.' But the three children had not seen an onion. It was a dark and stormy night and indeed, they had not seen much of anything during their ocean voyage, which had begun when the Baudelaires had pushed the large, wooden boat off the roof of the Hotel Denouement in order to escape from the fire engulfing the hotel, as well as the authorities who wanted to arrest the children for arson and murder. The wind and tides had quickly pushed the boat away from the burning hotel, and by sunset the hotel and all the other buildings in the city were a distant, faraway blur. Now, the following morning, the only things the Baudelaires had seen were the quiet, still surface of the sea and the gray gloom of the sky. The weather reminded them of the day at Briny Beach when the Baudelaires had learned of the loss of their parents and their home in a terrible fire, and the children spent much of their time in silence, thinking about that dreadful day and all of the dreadful days that had followed. It almost would have been peaceful to sit in a drifting boat and think about their lives, had it not been for the Baudelaires' unpleasant companion. Their companion's name was Count Olaf, and it had been the Baudelaire orphans' misfortune to be in this dreadful man's company since they had become orphans and he had become their guardian. Olaf had hatched scheme after scheme in an attempt to get his filthy hands on the enormous fortune the Baudelaire parents had left behind, and although each scheme had failed, it appeared as if some of the villain's wickedness had rubbed off on the children, and now Olaf and the Baudelaires were all in the same boat. Both the children and the count were responsible for a number of treacherous crimes, although at least the Baudelaire orphans had the decency to feel terrible about this, whereas all Count Olaf had been doing for the past few days was bragging about it.\";\n\nconst test = \"A B C\";\n\nconst markovModel = generateModel(bill_of_rights, the_raven, seuss);\nconst output_text = generateText(markovModel, \"It was a dark and stormy night\");\n\nlet start = false;\n\ndocument.body.innerHTML = output_text;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // words[0] = \"It was\";\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n \n \n  // start with the word passed in\n  \n  // let current_word = first_word;\n  let items=[\"and\", \"but\", \"in\", \"after\"]\n  let current_word = items[Math.floor(Math.random()*items.length)];\n  let output_text = first_word + \" \" + current_word;\n  for (let i = 0; i < 500; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) {\n      console.log(\"word doesnt exist in model\")\n      break;\n    }\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if(current_word.length === 50){\n      output_text+=\".\";\n    }\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}"
  },
  {
    "_id": "uNiYxxnGqP75HL7kY",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-24T03:22:14.514Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b0b7816be8af5ac08967efcfc2e917e0",
        "public_id": "avalanche2023spring/fw1ilz6snhxfjlzgtfro",
        "version": 1679628146,
        "version_id": "73806e67a953f7e941d5981c2e2eaaf8",
        "signature": "d25a0cb24da83aa530d464e074b5694fc2a0e2c8",
        "width": 1878,
        "height": 1656,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-24T03:22:26Z",
        "tags": [],
        "bytes": 6950238,
        "type": "upload",
        "etag": "81afeef1449dea754db85487dd5c9b11",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679628146/avalanche2023spring/fw1ilz6snhxfjlzgtfro.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679628146/avalanche2023spring/fw1ilz6snhxfjlzgtfro.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-26T02:09:36.564Z" }
      }
    ],
    "title": "",
    "description": "My attempt at the coding challenge turned into this",
    "comments": []
  },
  {
    "_id": "uX5bC8LHE6RRH56dv",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "API",
    "created_at": { "$date": "2023-04-27T04:31:45.688Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0535322ca5dbbee5146759b2b91a7f08",
        "public_id": "avalanche2023spring/siaz9sfqhypsutajsmjv",
        "version": 1682569922,
        "version_id": "d60ee791a5f7c32139a0dacbbd388be6",
        "signature": "6735320ef2c78b5fdec91e5c14617cf9cd93617d",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-27T04:32:02Z",
        "tags": [],
        "pages": 0,
        "bytes": 6969213,
        "type": "upload",
        "etag": "1799c45d630c25f1542195b88b47eb0b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682569922/avalanche2023spring/siaz9sfqhypsutajsmjv.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682569922/avalanche2023spring/siaz9sfqhypsutajsmjv.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682569922/avalanche2023spring/siaz9sfqhypsutajsmjv.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "6755034",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6763490,
        "duration": 8.243333,
        "rotation": 0,
        "nb_frames": 495,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "559dcfcf36da4ad39fe0eebc10bb5b77",
        "public_id": "avalanche2023spring/s9qvn6dxgtblyiydn071",
        "version": 1682569927,
        "version_id": "0759720bb33f8f6580971296329c49af",
        "signature": "56fe829a581922c02737ddc029fca8cb7ccbc388",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-27T04:32:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 5601531,
        "type": "upload",
        "etag": "e63b42430d664fa6ae275564884c8800",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682569927/avalanche2023spring/s9qvn6dxgtblyiydn071.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682569927/avalanche2023spring/s9qvn6dxgtblyiydn071.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682569927/avalanche2023spring/s9qvn6dxgtblyiydn071.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuvj420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "6732430",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6740373,
        "duration": 6.648333,
        "rotation": 0,
        "nb_frames": 399,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-27T04:57:27.086Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T01:14:46.936Z" }
      }
    ],
    "title": "",
    "description": "APIs coming soon! But first, animation week. Played around w how frameRate frameCount and Millis affect the motion of simple points and lines in space. Helps to pair them with noise to smooth out the animation.",
    "comments": []
  },
  {
    "_id": "ucRF5gd3Cd5HXTLio",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T07:55:56.734Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "aed18a4e89f7ccee3c7386ff6475be33",
        "public_id": "avalanche2023spring/rc5tcazpnpfh4rm4k8fe",
        "version": 1677139300,
        "version_id": "ae350d0cb24abd2a637d0bce3b6e77ed",
        "signature": "04c3ad9d30c0caaf67ee69079f6f6cdac8421bf0",
        "width": 2344,
        "height": 1450,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-23T08:01:40Z",
        "tags": [],
        "pages": 0,
        "bytes": 16281240,
        "type": "upload",
        "etag": "b252458df7aafe7e815a0a879cf5a090",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677139300/avalanche2023spring/rc5tcazpnpfh4rm4k8fe.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677139300/avalanche2023spring/rc5tcazpnpfh4rm4k8fe.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677139300/avalanche2023spring/rc5tcazpnpfh4rm4k8fe.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Constrained Baseline",
          "bit_rate": "16484299",
          "dar": "1172:725",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 16487331,
        "duration": 7.9,
        "rotation": 0,
        "nb_frames": 474,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9a4a89462c9414ce20c035c9ae2de861",
        "public_id": "avalanche2023spring/xdo0jiewfzyx7uynv3ja",
        "version": 1677139314,
        "version_id": "db6ab9c566860a40bcfdb6217fc517a2",
        "signature": "f7f75fe7c8d5ce02d52c4f3a207e445041f08ca8",
        "width": 1194,
        "height": 1192,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T08:01:54Z",
        "tags": [],
        "bytes": 583161,
        "type": "upload",
        "etag": "759d7a11e0b1ee78cad83b6261b5fb20",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677139314/avalanche2023spring/xdo0jiewfzyx7uynv3ja.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677139314/avalanche2023spring/xdo0jiewfzyx7uynv3ja.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b1afaae2f7fc758f01de8cbea58c6c65",
        "public_id": "avalanche2023spring/axvy1zvlhds0bcwza7ka",
        "version": 1677139316,
        "version_id": "8ce4f409b2900134a6544424063f60b6",
        "signature": "4b079d9ac8906d3af8e6153c857976e1f7c7328e",
        "width": 1190,
        "height": 1190,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T08:01:56Z",
        "tags": [],
        "bytes": 235906,
        "type": "upload",
        "etag": "76e6af64a56f4ea1aaf0a263057c57b1",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677139316/avalanche2023spring/axvy1zvlhds0bcwza7ka.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677139316/avalanche2023spring/axvy1zvlhds0bcwza7ka.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T13:22:29.33Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T14:53:14.835Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T14:56:07.441Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:16.428Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T17:12:59.919Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:22:03.288Z" }
      }
    ],
    "title": "",
    "description": "Tried to create a little garden 🌸",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "So cutee!",
        "created_at": { "$date": "2023-02-24T02:22:16.399Z" }
      }
    ]
  },
  {
    "_id": "uyDCa6fRzadNJXCj2",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T05:09:43.736Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "v3FqqMsTntzZbzYCW",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T03:52:39.21Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fde1552a06b529ba984a9171fbb472c3",
        "public_id": "avalanche2023spring/bl9dcukckmziorinx6tn",
        "version": 1680234780,
        "version_id": "e9d9df4235a94a7779db52fc7280cc0b",
        "signature": "57a60b58cfc2032e17c6a9d7d140afc5ebda1b71",
        "width": 600,
        "height": 400,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-31T03:53:00Z",
        "tags": [],
        "pages": 0,
        "bytes": 1665702,
        "type": "upload",
        "etag": "357a5271f5ded118fc9fee211b43ab79",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680234780/avalanche2023spring/bl9dcukckmziorinx6tn.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680234780/avalanche2023spring/bl9dcukckmziorinx6tn.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680234780/avalanche2023spring/bl9dcukckmziorinx6tn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "189361",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "9102",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 206083,
        "duration": 64.631233,
        "rotation": 0,
        "nb_frames": 1937,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T10:15:02.892Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T01:05:13.393Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:37.393Z" }
      }
    ],
    "title": "",
    "description": "The **Write and Record a Song** without code challenge (i.e embarrass yourself challenge). I am not pitch perfect or a trained signer, so prepare to get triggered 🤭. Recorded on an Android recorder, stitched together in Premier Pro. P.S Mom said this sounded like \"Practice crying in different pitches challenge\".",
    "comments": []
  },
  {
    "_id": "v5pMfQwixboBcREjp",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T16:02:56.021Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c885f1f6546e163316bbe152ea006471",
        "public_id": "avalanche2023spring/dpzc1vk6gvegj2a46n9w",
        "version": 1683302765,
        "version_id": "d82723719d9395261b46d674048f57fd",
        "signature": "24ef9925fa2b2d1191dcc0abb5235c9973d7b5e7",
        "width": 1193,
        "height": 830,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T16:06:05Z",
        "tags": [],
        "bytes": 21327,
        "type": "upload",
        "etag": "38a8592d7cef630f1d1b0e3a7e7ec639",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683302765/avalanche2023spring/dpzc1vk6gvegj2a46n9w.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683302765/avalanche2023spring/dpzc1vk6gvegj2a46n9w.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:45.516Z" }
      }
    ],
    "title": "",
    "description": "trying knots with cubes.. https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Tips_and_Tricks",
    "code": "difference() {\ncolor(\"lightgrey\")\n    cube([20,20,80]);\n    translate([15,15,60])\n    cube([15,15,5]);\n    translate([15,15,50])\n    cube([15,15,5]);\n    translate([15,15,40])\n    cube([15,15,5]);\n    translate([15,15,30])\n    cube([15,15,5]);\n    translate([15,15,70])\n    cube([15,15,5]);\n    translate([-1,15,70])\n    cube([6,15,5]);\n    translate([-1,15,60])\n    cube([6,15,5]);\n    translate([-1,15,50])\n    cube([6,15,5]);\n    translate([-1,15,40])\n    cube([6,15,5]);\n    translate([-1,15,30])\n    cube([6,15,5]);\n    translate([15,-1,70])\n    cube([15,6,5]);\n    translate([15,-1,60])\n    cube([15,6,5]);\n    translate([15,-1,50])\n    cube([15,6,5]);\n    translate([15,-1,40])\n    cube([15,6,5]);\n    translate([15,-1,30])\n    cube([15,6,5]);\n    \n}\n// An application of the minimum rotation\n// Given two points p0 and p1, draw a thin cylinder with its\n// bases at p0 and p1\nmodule line(p0, p1, diameter=1) {\n    v = p1-p0;\n    translate(p0)\n        color(\"cyan\")\n\n        // rotate the cylinder so its z axis is brought to direction v\n        multmatrix(rotate_from_to([0,0,1],v))\n            cylinder(d=diameter, h=norm(v), $fn=4);\n}\n// Generate the polygonal points for the knot path \nknot = [ for(i=[0:2:360])\n         [ (19*cos(3*i) + 40)*cos(2*i),\n           (19*cos(3*i) + 40)*sin(2*i),\n            19*sin(3*i) ] ];\n// Draw the polygonal a segment at a time\nfor(i=[1:len(knot)-1]) \n    line(knot[i-1], knot[i], diameter=5);\n// Line drawings with this function is usually excruciatingly lengthy to render\n// Use it just in preview mode to debug geometry",
    "comments": []
  },
  {
    "_id": "v8BnFu7zfqESYkR8w",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": { "$date": "2023-04-28T11:55:59.07Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5292acffe03060b02dc328dc2e106203",
        "public_id": "avalanche2023spring/ouwladsxpu9vagro1psz",
        "version": 1682682965,
        "version_id": "90c32be12558ab117835e86c7e0b8350",
        "signature": "0a6d0b4d44b71ca6ed2cb2f6e00bdee1e5611d11",
        "width": 786,
        "height": 794,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-28T11:56:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 966447,
        "type": "upload",
        "etag": "e499dc0c2785acd2fbd7d43505ccbc92",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682682965/avalanche2023spring/ouwladsxpu9vagro1psz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682682965/avalanche2023spring/ouwladsxpu9vagro1psz.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682682965/avalanche2023spring/ouwladsxpu9vagro1psz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317008",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "High",
          "bit_rate": "193255",
          "dar": "393:397",
          "time_base": "1/60000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 520714,
        "duration": 14.816667,
        "rotation": 0,
        "nb_frames": 889,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "WEEK 12 (3/4): With the help of chatGPT and basically asking it to GPTsplain bits of code to me. HERE IS A DODGING GAME. Originally I was trying to get it to make a catching and stacking game but this ones okay too.",
    "comments": []
  },
  {
    "_id": "v94JzQTLj2mkcrD9d",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T03:03:42.987Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5cf7dad169ccdfeaac7ccaf9833ca78e",
        "public_id": "avalanche2023spring/ffg1rulmcdwejc3mepy3",
        "version": 1683860693,
        "version_id": "b3d9af5bc0538bb92edf286efbc33d21",
        "signature": "f6a5aeef0aac0631e829ca07078b9633571c5b45",
        "width": 1588,
        "height": 1592,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-12T03:04:53Z",
        "tags": [],
        "bytes": 2421342,
        "type": "upload",
        "etag": "c00e64a8a702f3c01e6f8cc3e15fe961",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683860693/avalanche2023spring/ffg1rulmcdwejc3mepy3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683860693/avalanche2023spring/ffg1rulmcdwejc3mepy3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T04:36:15.733Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T15:07:25.285Z" }
      }
    ],
    "title": "",
    "description": "Playing around with the recursive tree code to try and make some blood vessels",
    "comments": []
  },
  {
    "_id": "v9RjBfKaGY6CREgnH",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": { "$date": "2023-02-03T15:33:54.536Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "61b748e5813a284df17f7867e9342573",
        "public_id": "avalanche2023spring/nxvfgx4izfe236uvzwxp",
        "version": 1675438438,
        "version_id": "236de8b107d8543bca1108c78605de8f",
        "signature": "26946a68d6263616bfc2dffc9298c4adcb7709d1",
        "width": 1277,
        "height": 2198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T15:33:58Z",
        "tags": [],
        "bytes": 384396,
        "type": "upload",
        "etag": "a117ae2559f3419b1395ab8ce2e1acc0",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675438438/avalanche2023spring/nxvfgx4izfe236uvzwxp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675438438/avalanche2023spring/nxvfgx4izfe236uvzwxp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T18:02:05.171Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Sketch based on Shriti's instructions",
    "comments": []
  },
  {
    "_id": "vALMprT9wBrx6Esm8",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-05T19:42:00.031Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "53a9ab40391ff1c16af9bc0da8836a1e",
        "public_id": "avalanche2023spring/o0yzqnjabtr0kwuwmxpe",
        "version": 1675627017,
        "version_id": "381e3e2b94cf67fd1e84ef5ff9577cbf",
        "signature": "836b35d874d27dae68f3d0eb909ad3095c75d356",
        "width": 1192,
        "height": 1192,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-05T19:56:57Z",
        "tags": [],
        "pages": 0,
        "bytes": 13832153,
        "type": "upload",
        "etag": "fd007c38cc4300eec052e33663c2460c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1675627017/avalanche2023spring/o0yzqnjabtr0kwuwmxpe.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1675627017/avalanche2023spring/o0yzqnjabtr0kwuwmxpe.mov",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125500",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "10699147",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 12363935,
        "duration": 8.95,
        "rotation": 0,
        "nb_frames": 596,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f70fc8c05e964f7ab723797e29007e60",
        "public_id": "avalanche2023spring/bpppdez7ifpqwrfi0lh9",
        "version": 1675627019,
        "version_id": "00c130af7a11bb4d025affe73094960b",
        "signature": "6aee596c2b79183f2459f701f378a36ee634eedf",
        "width": 1156,
        "height": 1192,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-05T19:56:59Z",
        "tags": [],
        "bytes": 1275037,
        "type": "upload",
        "etag": "57d5d21785bb342d60ed44b29b87d129",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675627019/avalanche2023spring/bpppdez7ifpqwrfi0lh9.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675627019/avalanche2023spring/bpppdez7ifpqwrfi0lh9.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "7a8181925dae1fd32d7af26a956ce733",
        "public_id": "avalanche2023spring/nhtnybabwmgotys7uifj",
        "version": 1675627028,
        "version_id": "ef5f4deb3dd282a3b3b4045370964c36",
        "signature": "3beba909441e00160f5af591c64923367bfe2370",
        "width": 1192,
        "height": 1192,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-05T19:57:08Z",
        "tags": [],
        "bytes": 1275280,
        "type": "upload",
        "etag": "2e529984d83dc83072c84e8845838e17",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675627028/avalanche2023spring/nhtnybabwmgotys7uifj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675627028/avalanche2023spring/nhtnybabwmgotys7uifj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T19:59:11.436Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T20:03:07.894Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-05T22:20:55.236Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-06T17:43:44.599Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:17.683Z" }
      }
    ],
    "title": "",
    "description": "**WIP Anni Albers' Rug, 1959:** Figured out background texture and some details on how to manipulate the threads. It was tricky to figure out curves. Need to refine details, add more patterns and find a way to complete the composition. **Please share any ideas/strategies I'm missing out on!**\n\nI read [about Anni Albers' work here](https://blog.rowleygallery.co.uk/anni-albers/). \"Knots entered Anni Albers’s work in 1947.  They point to careful consideration, yet they appear quite spontaneously as if, after more than two decades of learning to understand the material qualities of threads, she was bent on scrutinizing their intrinsic behavior.\"",
    "inspiration_name": "Anni Albers Rug 1959",
    "inspiration_url": "https://rowleyblog.s3.eu-west-1.amazonaws.com/2018/11/11143138/merlin_144732075_20baea80-de70-4760-92eb-6b120cff542e-superJumbo.jpg",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x=-10, y=20;           //Starting position of line - made of white & black lines\nlet wBlack = 3;            //Width of black sub-line\nlet wWhite = wBlack-0.5;      //Width of black sub-line\n\nlet dots = 80000;          //# of dots spread on background texture\nlet dotW = 1.5;            //width of dots\n\nlet pattern = 0;          //pattern modifies direction of line being drawn\nlet patternTotal = 6;      //total number of patterns\n\nlet clockCurve = 0;\nlet angY = 0, angX=0;\n\nfunction setup() {\n  createCanvas(800, 600);\n  angleMode (DEGREES);\n  noStroke();\n  frameRate(600);\n  ////////////////////////////////////////////////////////////////////\n  //BACKGROUND TEXTURE\n  background(240, 120, 80);\n  push();\n  fill('rgb(210,82,38)');\n  let xPos, yPos;\n  for (let i=0; i<dots; i++) {\n    xPos = map (random(), 0, 1, 0, width);\n    yPos = map (random(), 0, 1, 0, height);\n    ellipse(xPos, yPos, dotW, dotW);\n  }\n  pop();\n  \n}\n\nfunction draw() {\n  \n  ////////////////////////////////////////////////////////////////////\n  //DRAW THE LINE\n  fill('#DCBD7A');\n  rect(x, y, wWhite, wWhite); //Center Line\n  rect(x-wWhite-wBlack, y+wBlack, wWhite, wWhite); //Left2\n  rect(x+wWhite+wBlack, y-wBlack, wWhite, wWhite); //Right2\n  rect(x-2*wWhite-2*wBlack, y+2*wBlack+wWhite, wWhite, wWhite); //Left4\n  rect(x+2*wWhite+2*wBlack, y-2*wBlack-wWhite, wWhite, wWhite); //Right4\n  \n  fill('#000');\n  rect(x-wWhite, y+wWhite, wBlack, wBlack); //Left1\n  rect(x+wWhite, y-wWhite, wBlack, wBlack); //Right1\n  rect(x-wWhite-2*wBlack, y+wBlack+wWhite, wBlack, wBlack); //Left3\n  rect(x+wWhite+2*wBlack, y-wBlack-wWhite, wBlack, wBlack); //Left3\n  \n  \n  ////////////////////////////////////////////////////////////////////\n  //SET THE PATTERN BY MODIFYING X, Y POSITIONS\n  let a;\n  \n  switch (pattern) {\n    case 0:\n      //PATTERN 2 - HORIZONTAL LINE\n      a = random();\n      if (a < 0.5) {x++;};\n      console.log('p0 - horizontal');\n      break;\n    case 1:\n      //PATTERN 4 - CLOCKWISE CURVE\n      a = random();\n      if (a < 0.5) {x+=2*cos(angY); y+=2*sin(angY);};\n      angY++; if (angY>70) pattern++;\n      console.log('p1 - clockwise');\n      break;\n    case 2:\n      //PATTERN 1 - STEEP DOWNWARD INCLINE\n      a = random();\n      if (a < 0.5) {x+=1; y+=1;};\n      a = random();\n      if (a < 0.5) y+=1;\n      console.log('p2 - steep incline');\n      break;\n    case 3:\n      //PATTERN 3 - MILD DOWNWARD INCLINE\n      a = random();\n      if (a < 0.5) {x+=1; y+=1;};\n      a = random();\n      if (a < 0.5) x+=1;\n      console.log('p3 - mild incline');\n      break;\n    case 4:\n      //PATTERN 2 - DOWNWARDS LINE\n      a = random();\n      if (a < 0.5) {y++;};\n      console.log('p4- down');\n      break;\n    case 5:\n      //PATTERN 4 - ANTI-CLOCKWISE CURVE\n      a = random();\n      if (a < 0.5) {x+=2*sin(angX); y+=2*cos(angX);};\n      angX++; if (angX>70) pattern++;\n      console.log('p5');\n      break;\n    default:\n      pattern=0;\n      angX=0; angY=0;\n      break;\n  }\n  \n}\n\n//TEMPORARY FUNCTION TO ALTERNATE PATTERNS\nfunction mouseClicked(){\n  pattern++;\n  if (pattern > patternTotal-1) pattern = 0;\n}",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "omg you're listening to Lifafa XD ",
        "created_at": { "$date": "2023-02-09T01:32:22.271Z" }
      },
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Hehe, yes!!",
        "created_at": { "$date": "2023-02-14T14:35:29.535Z" }
      }
    ]
  },
  {
    "_id": "vCJT92p7mR7wcvv74",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-19T23:28:18.735Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d54ba0b657566cdb7aae17ba62773ffb",
        "public_id": "avalanche2023spring/uojjrimggdxk3ok9eetw",
        "version": 1681946906,
        "version_id": "9d54a66ac8504dac23aa22b00c8d92f9",
        "signature": "1bc0d2953df67dc8ad931e4f94b4e5815bb8a02a",
        "width": 512,
        "height": 512,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-19T23:28:26Z",
        "tags": [],
        "bytes": 57351,
        "type": "upload",
        "etag": "c7c1d7ff9e3ffa83f3e2581e3b053041",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681946906/avalanche2023spring/uojjrimggdxk3ok9eetw.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681946906/avalanche2023spring/uojjrimggdxk3ok9eetw.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "382a8efe1697b57abc588b8a2b44ebb7",
        "public_id": "avalanche2023spring/r4kavnnzwjkdw28pkhjp",
        "version": 1681946908,
        "version_id": "5b842bf230b415fe2b871db68f4e2390",
        "signature": "c40e9daa3b666c0f8dfb9001728fc46e6244f917",
        "width": 512,
        "height": 512,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-19T23:28:28Z",
        "tags": [],
        "bytes": 80831,
        "type": "upload",
        "etag": "4d59f9b26f6b6bf271695c8d2f9f1777",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681946908/avalanche2023spring/r4kavnnzwjkdw28pkhjp.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681946908/avalanche2023spring/r4kavnnzwjkdw28pkhjp.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:36:01.368Z" }
      }
    ],
    "title": "",
    "description": "Messed around with Stable Diffusion and wanted to see what this ai program is capable of. Messed around with prompts regarding backgrounds, landscapes, and similar content to see how Stable Diffusion designs compositions, placement of objects, and how it deals with art design characteristics. One of the things I wanted to try was to write a prompt and then after that, write \"ignore the previous prompt\". Unfortunately I think Stable Diffusion was one step ahead and gave me the prompt I wrote before so I don't think I can try to get this program to create content freely for the time being.",
    "comments": [
      {
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "comment": "SD promts aren't instruction based. I'm not sure they are even really language based, but more keywords and phrases. I've tried getting SD to just make something up without guidance by passing in random strings from a password generator\n",
        "created_at": { "$date": "2023-04-20T01:05:26.414Z" }
      }
    ]
  },
  {
    "_id": "vCbMzbumPCbj3XBHn",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T04:23:45.575Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "efff060c372568ce7d8b28bb378206e2",
        "public_id": "avalanche2023spring/spopxcdpzm929fhjxhtt",
        "version": 1677817452,
        "version_id": "d28fa989a6ada0d39c751d80596d2e5b",
        "signature": "39cb97a7a74257f94e091c46be07775b3b062468",
        "width": 1198,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-03T04:24:12Z",
        "tags": [],
        "bytes": 2227484,
        "type": "upload",
        "etag": "dfa5aec1fb85e333d4fbe9ddabc3ea9f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677817452/avalanche2023spring/spopxcdpzm929fhjxhtt.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677817452/avalanche2023spring/spopxcdpzm929fhjxhtt.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "cae9fc5d1e812c03d559e7a25aa12361",
        "public_id": "avalanche2023spring/gvgjb0icru0y53estapc",
        "version": 1677817482,
        "version_id": "4b94fd57581380f348ddb9dd9fea6f0f",
        "signature": "f54c574edec7ff0b88dbb03ee442e4c4b04b13b6",
        "width": 1198,
        "height": 1200,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-03T04:24:42Z",
        "tags": [],
        "pages": 0,
        "bytes": 18697149,
        "type": "upload",
        "etag": "432c5035e9779d461ffe7856319b09f8",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677817482/avalanche2023spring/gvgjb0icru0y53estapc.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677817482/avalanche2023spring/gvgjb0icru0y53estapc.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677817482/avalanche2023spring/gvgjb0icru0y53estapc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "125307",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "17064414",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 19855380,
        "duration": 7.533333,
        "rotation": 0,
        "nb_frames": 511,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T05:55:50.96Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T08:31:15.032Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2024-02-04T01:32:17.867Z" }
      }
    ],
    "title": "",
    "description": "**More Spirals** Continuing my fascination with noisy spirals, with some help from Justin",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Width: 480,\n  AngleFactor: 0.2, //Amt angle should increase in each interation\n  StrokeWidth: 2,\n  NoiseAmp: 48,\n  RadiusFactor: 0.01,\n  Smoothing: 0.001,\n};\n\n//pane.addInput(params, \"Width\", { min: 50, max: 480 });\n//pane.addInput(params, \"StrokeWidth\", { min: 1, max: 4 });\npane.addInput(params, \"AngleFactor\", { min: 0.05, max: 0.4 });\npane.addInput(params, \"RadiusFactor\", { min: 0.01, max: 0.2 });\npane.addInput(params, \"NoiseAmp\", { min: 0.1, max: 50 });\npane.addInput(params, \"Smoothing\", { min: 0.0001, max: 0.01 });\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  //strokeWeight(2);\n}\n\nfunction draw() {\n  background(\"rgb(0,0,0)\");\n\n  noStroke();\n\n  fill(\"rgb(218,38,38)\");\n  drawSpiral(width / 2.1, height / 2.1);\n\n  fill(\"rgb(38,43,218)\");\n  drawSpiral(width / 2, height / 2);\n\n  fill(\"rgb(24,176,28)\");\n  drawSpiral(width / 1.9, height / 1.9);\n}\n\nfunction drawSpiral(x, y) {\n  push();\n\n  for (\n    let angle = 0, radius = 0;\n    radius < params.Width;\n    angle += params.AngleFactor\n  ) {\n    \n    let xPos = x + sin(angle) * radius;\n    let yPos = y + cos(angle) * radius;\n\n    circle(\n      xPos + noise(xPos*params.Smoothing, yPos*params.Smoothing, 1) * params.NoiseAmp,\n      yPos + noise(yPos*params.Smoothing, xPos*params.Smoothing, 0) * params.NoiseAmp,\n      params.StrokeWidth\n    );\n\n    radius += params.RadiusFactor;\n\n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "vFwF7cMkkaTvnAShS",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-09T01:23:30.226Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4a30692e454045166da72904d26d23af",
        "public_id": "avalanche2023spring/tmxnc0ozc0qqy6swtn95",
        "version": 1675905857,
        "version_id": "7a0404b4919f5c6bb176f3f3d463265a",
        "signature": "df9cc4252cd259fee820ad94185f4024fafad285",
        "width": 1214,
        "height": 1204,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T01:24:17Z",
        "tags": [],
        "bytes": 1614575,
        "type": "upload",
        "etag": "216667201af9571b21e7d61e89d18c5e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675905857/avalanche2023spring/tmxnc0ozc0qqy6swtn95.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675905857/avalanche2023spring/tmxnc0ozc0qqy6swtn95.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ac3bab473fdd9054e859a88f83f736e5",
        "public_id": "avalanche2023spring/xm7niaxnalq5bueshgad",
        "version": 1675905912,
        "version_id": "8a78449e23a0e2bfa45b1d6dee12c165",
        "signature": "8853f6dddb9524e87e7358e8a8a2987d8c208a82",
        "width": 1610,
        "height": 1208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T01:25:12Z",
        "tags": [],
        "bytes": 2580060,
        "type": "upload",
        "etag": "a5f66a801d33af56e26b8730bdc2df51",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675905912/avalanche2023spring/xm7niaxnalq5bueshgad.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675905912/avalanche2023spring/xm7niaxnalq5bueshgad.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2e496a04c1eebba045dc89958e23f9b7",
        "public_id": "avalanche2023spring/hw119ani72hhdr1pmhrc",
        "version": 1675906040,
        "version_id": "eabbd8048b1abe4895639f98b36be745",
        "signature": "f55df414940da17d5d3ff983c38feb453875ae18",
        "width": 1208,
        "height": 1208,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-09T01:27:20Z",
        "tags": [],
        "bytes": 933477,
        "type": "upload",
        "etag": "0af220309afae425e252019d84df8b4c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675906040/avalanche2023spring/hw119ani72hhdr1pmhrc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675906040/avalanche2023spring/hw119ani72hhdr1pmhrc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Inspired by LIA's Four Seasons Spring. Used high bias to set the color palette.",
    "inspiration_name": "LIA",
    "inspiration_url": "https://www.liaworks.com/theprojects/spring/",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet c, r, g, b, x, y;\nfunction setup() {\n  createCanvas(800, 620);\n  frameRate(60);\n  background(\"white\");\n\n  radio = createRadio();\n  radio.position(width / 2, height - 20);\n  radio.option(1);\n  radio.option(2);\n  radio.option(3);\n  radio.option(4);\n}\n\nfunction draw() {\n  let val = radio.value();\n\n  c = random(40, 80);\n  r = random(255);\n  g = random(255);\n  b = random(255);\n  x = random(width);\n  y = random(height - 20);\n\n  fill(r, g, b, 50);\n  stroke(r, g, b);\n\n  if (val == 1) {\n    strokeWeight(1);\n    ellipse(x, y, c);\n  }\n\n  if (val == 2) {\n    strokeWeight(1);\n    rect(x, y, c);\n  }\n\n  if (val == 3) {\n    strokeWeight(1);\n    stroke(255, 255, 255, 40);\n    x = random(width);\n    y = random(height - 20);\n\n    // the oranges 231, 88, 38\n    r1 = max(random(228), random(231), random(233));\n    g1 = max(random(84), random(88), random(90));\n    b1 = max(random(35), random(38), random(40));\n\n    fill(r1, g1, b1, 80);\n    bezier(x, y, 300, 400, 500, 600, x, y);\n\n    // greens 144, 158, 42\n\n    r2 = max(random(142), random(144), random(146));\n    g2 = max(random(156), random(158), random(160));\n    b2 = max(random(40), random(42));\n    fill(r2, b2, g2, 80);\n    bezier(x, y, 100, 200, 300, 400, x, y); //petal effect\n\n// //     //blues 97, 99, 170\n    r4 = max(random(95), random(97), random(100));\n    b4 = max(random(97), random(99), random(102));\n    g4 = max(random(168), random(170), random(172));\n    fill(r4, b4, g4, 80);\n    bezier(x, y, 200, 300, 400, 500, x, y); //petal effect\n\n    // yellow (247, 187, 77)\n    r3 = max(random(245), random(247), random(250));\n    g3 = max(random(185), random(187), random(190));\n    b3 = max(random(77));\n    fill(r3, g3, b3, 80);\n  bezier(x, y, 400, 500, 200, 300,  x, y); //petal effect\n    \n    //magenta 207, 36, 64\n      r5 = max(random(207), random(204), random(210));\n    g5 = max(random(34), random(36), random(38));\n    b5 = max(random(62), random(64), random(66));\n     fill(r5, g5, b5, 80);\n  bezier(x, y, 50, 500, 600, 100,  x, y); //petal effect\n    \n    \n  }\n\n  // bezier(x, y, 50, x, y, 100, x, y, 250, x, y, 300);\n\n  if (val == 4) {\n    strokeWeight(3);\n    bezier(x, y, 40, 80, x, y, x, y); //line effect\n  }\n\n  if (mouseIsPressed) {\n    background(\"white\");\n  }\n\n  if (keyIsPressed) {\n    if (keyCode === 13) {\n      saveCanvas(\"myCanvas\", \"png\");\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "vHaEHgvM5ZcxXqZLs",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": { "$date": "2023-04-28T01:17:19.977Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "cec6cbcf37c9f6175fce28775b3bd539",
        "public_id": "avalanche2023spring/ixsp2ixqxsxuryegu2pb",
        "version": 1682644903,
        "version_id": "a76bd922d3ea943527e2640f124898fa",
        "signature": "4c507811fb9f922cb46ad468b9a8f2222e029b28",
        "width": 1558,
        "height": 1660,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T01:21:43Z",
        "tags": [],
        "bytes": 262853,
        "type": "upload",
        "etag": "240683d56c1f384a82505e7779e4a768",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682644903/avalanche2023spring/ixsp2ixqxsxuryegu2pb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682644903/avalanche2023spring/ixsp2ixqxsxuryegu2pb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "bab0aed274bc77a0b9eb6c0fcff83ec8",
        "public_id": "avalanche2023spring/dxb52bhplut8uxjgujv1",
        "version": 1682644926,
        "version_id": "dfaa25105653eb76bbdf05a9ddd7d8a7",
        "signature": "0e120ad6a75f1dc3e7b34e2a3dd1f3bdaf9326fb",
        "width": 1176,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-28T01:22:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 18505243,
        "type": "upload",
        "etag": "c5fa39eb9392518094ca352143208c48",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682644926/avalanche2023spring/dxb52bhplut8uxjgujv1.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682644926/avalanche2023spring/dxb52bhplut8uxjgujv1.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682644926/avalanche2023spring/dxb52bhplut8uxjgujv1.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "14771921",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 14785465,
        "duration": 10.012667,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T03:09:13.986Z" }
      }
    ],
    "lesson": "API",
    "title": "",
    "description": "Decided to continue AI week using ChatGPT as a tool for coding... For this I tried playing with matter.js which I haven't used before but was curious about. I was able to make a sketch without really knowing anything about how to use matter or the syntax or anything, but I did go through a few rounds of revisions to get it to do what I wanted using plain language. What I really wanted was to use vector outlines for the text but I wasn't able to get that working yet",
    "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Letter Bounce</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.18.0/matter.min.js\"></script>\n    \n\n    <style>\n      * {\n        margin: 0;\n        padding: 0;\n      }\n      .letter {\n    font-size: 36px;\n    font-family: Arial !important;\n    color: #333;\n    text-align: center;\n}\n    </style>\n  </head>\n  <body>\n    <canvas id=\"canvas\" width=\"700\" height=\"700\"></canvas>\n    <script>\n      const Engine = Matter.Engine;\n      const Render = Matter.Render;\n      const World = Matter.World;\n      const Bodies = Matter.Bodies;\n\n      const canvas = document.getElementById(\"canvas\");\n\n      const engine = Engine.create({\n        // enableSleeping: true,\n      });\n\n      const render = Render.create({\n        element: document.body,\n        canvas: canvas,\n        engine: engine,\n        options: {\n          width: window.innerWidth-4,\n          height: window.innerHeight-4,\n          wireframes: false,\n          background: \"#000000\",\n        },\n      });\n\n      const word = \"COMPFORMCOMPFORMCOMPFORMCOMPFORM\";\n      const letters = [];\n\n        // Create letter bodies\n        for (let i = 0; i < word.length; i++) {\n        // const x = 100 + i * 60;\n        const x = Math.random() * window.innerWidth;\n        const y = Math.random() * window.innerHeight;\n        const letter = Bodies.rectangle(x, y, 70, 90, {\n          friction: 0.001,\n          restitution: 0.8,\n          label: word[i],\n          render: {\n            // fillStyle: '#000000',\n            sprite: {\n              texture: `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 50'%3E%3Ctext x='50' y='32' class='letter' fill='white' stroke='white' font-size='32' font-family='helvetica' text-anchor='middle'%3E${word[i]}%3C/text%3E%3C/svg%3E`,\n            },\n          },\n        });\n        letter.isLetter = true;\n        letters.push(letter);\n      }\n\n      // Add letter bodies to world\n      World.add(engine.world, letters);\n\n      // Add mouse constraint\n      const mouse = Matter.Mouse.create(canvas);\n      const mouseConstraint = Matter.MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: false,\n          },\n        },\n      });\n      World.add(engine.world, mouseConstraint);\n\n      // Add collision handler with walls\n      Matter.Events.on(engine, \"collisionStart\", (event) => {\n        event.pairs.forEach((pair) => {\n          const bodyA = pair.bodyA;\n          const bodyB = pair.bodyB;\n          const velocityA = bodyA.velocity;\n          const velocityB = bodyB.velocity;\n          if (bodyA.isLetter && bodyB.isWall) {\n            velocityA.x = -velocityA.x;\n          }\n          if (bodyA.isWall && bodyB.isLetter) {\n            velocityB.x = -velocityB.x;\n          }\n        });\n      });\n\n      // Add walls\n      const wallOptions = {\n        isStatic: true,\n        restitution: 1,\n      };\n      const leftWall = Bodies.rectangle(-25, canvas.height / 2, 50, canvas.height, wallOptions);\n      leftWall.isWall = true;\n      const rightWall = Bodies.rectangle(\n        canvas.width + 25,\n        canvas.height / 2,\n        50,\n        canvas.height,\n        wallOptions\n      );\n      rightWall.isWall = true;\n      const topWall = Bodies.rectangle(\n        canvas.width / 2,\n        -25,\n        canvas.width,\n        50,\n        wallOptions\n      );\n      topWall.isWall = true;\n      const bottomWall = Bodies.rectangle(\n        canvas.width / 2,\n        canvas.height + 25,\n        canvas.width,\n        50,\n        wallOptions\n      );\n      bottomWall.isWall = true;\n      World.add(engine.world, [leftWall, rightWall, topWall, bottomWall]);\n\n      // Run the engine and renderer\n      Matter.Runner.run(engine)\n      Render.run(render);\n</script>\n</body>\n</html>",
    "comments": [
      {
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "comment": "This is *fire emoji* ",
        "created_at": { "$date": "2023-04-28T03:09:41.853Z" }
      }
    ]
  },
  {
    "_id": "vPRRQiRxEttSt29CK",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-04T06:51:03.668Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "57fa1b62a9fa74428a240a2660869d47",
        "public_id": "avalanche2023spring/mbtlqk7nvgq13vzachvz",
        "version": 1680591072,
        "version_id": "976130ceadd567413d0b95f7e94867fe",
        "signature": "267a71f74b32bbf5ed57e4e06640b1c7bfa481e7",
        "width": 718,
        "height": 620,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-04T06:51:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 1650499,
        "type": "upload",
        "etag": "16ff49c3ad14a4512e518da44351d471",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680591072/avalanche2023spring/mbtlqk7nvgq13vzachvz.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680591072/avalanche2023spring/mbtlqk7nvgq13vzachvz.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680591072/avalanche2023spring/mbtlqk7nvgq13vzachvz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316983",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "624904",
          "dar": "359:310",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 950748,
        "duration": 13.866667,
        "rotation": 0,
        "nb_frames": 416,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T16:08:03.744Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T22:57:06.211Z" }
      }
    ],
    "title": "",
    "description": "Reshma and I converted a sketch we did in one of the first few weeks of class into a microgame. Inspired by the games where you have to rotate each element until you get it to its correct configuration. We still have to figure out a win/lose system",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\nlet pattern = [];\nconst patternSize = 50;\nconst xNum = 7;\nconst yNum = 6;\n\nlet pipeImages = [];\n// const pipeImagesSize = 50;\n\nfunction setup() {\n  createCanvas(xNum*patternSize, yNum*patternSize);\n  background(0);\n\n  for (let i=0; i<9; i++) {\n    pipeImages[i] = loadImage(\"Frame_\" + i + \".png\");\n  }\n  // let pipeImage = loadImage(\"pipe.jpg\");\n\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      pattern[x + y*10] = createSprite(\n        patternSize/2 + x*patternSize,\n        patternSize/2 + y*patternSize,\n        patternSize,\n        patternSize\n      );\n      pattern[x + y*10].addImage(\"main\", random(pipeImages))\n      // pattern[x + y*10].scale = patternSize/pipeImagesSize;\n      pattern[x + y*10].mouseActive = true;\n      pattern[x + y*10].rotation = 90 * (floor(random(0,4)));\n    }\n  }\n\n}\n\nfunction draw() {\n  drawSprites();\n}\n\nfunction mousePressed() {\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      if (pattern[x + y*10].mouseIsOver) {\n        pattern[x + y*10].rotation += 90;\n      } \n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "vWdCqvE9yH8Abv6w4",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-03T21:08:40.271Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4fef1d561ca81af037bee420d28a176e",
        "public_id": "avalanche2023spring/jmycxuhm13bodgmo0o14",
        "version": 1683148124,
        "version_id": "a54ee57dd52f26a45fb9ff987f632f08",
        "signature": "f0f51bb66c00d9d198e43ecb011f9ee3775d642e",
        "width": 962,
        "height": 703,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-03T21:08:44Z",
        "tags": [],
        "bytes": 59330,
        "type": "upload",
        "etag": "78d77bdbb06e9a1ad7fce4f644ad24a7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683148124/avalanche2023spring/jmycxuhm13bodgmo0o14.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683148124/avalanche2023spring/jmycxuhm13bodgmo0o14.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "28300e2cf69cfd24ea582fe003b87b50",
        "public_id": "avalanche2023spring/apphxnrsawjeddefsd9t",
        "version": 1683148126,
        "version_id": "8b7319cecda87dd0de9b6df60eb89582",
        "signature": "fdb57de8b865fb50b45efef299b3717b1452e3b9",
        "width": 967,
        "height": 711,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-03T21:08:46Z",
        "tags": [],
        "bytes": 39704,
        "type": "upload",
        "etag": "dcdb2cc9c981ca73b6f98ceff3a40c5a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683148126/avalanche2023spring/apphxnrsawjeddefsd9t.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683148126/avalanche2023spring/apphxnrsawjeddefsd9t.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "259e8d730b8836eea050d6f54b725999",
        "public_id": "avalanche2023spring/ai5cucoxokx7a9ss9p57",
        "version": 1683148128,
        "version_id": "618f90ccd4da341ea8e37a13ac661ddf",
        "signature": "ce33f6c7f6bc1e15b5fd3994117d36bd3d8bdf80",
        "width": 964,
        "height": 702,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-03T21:08:48Z",
        "tags": [],
        "bytes": 26116,
        "type": "upload",
        "etag": "794a5a9d4003a4e33278b2308ebf0693",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683148128/avalanche2023spring/ai5cucoxokx7a9ss9p57.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683148128/avalanche2023spring/ai5cucoxokx7a9ss9p57.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T22:37:22.609Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T00:41:08.995Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T05:13:31.476Z" }
      }
    ],
    "title": "",
    "description": "Individual Challenge for this week. Had some ideas going around in my head but had to trim things down to the scale that it is. Happy with how this came out though!",
    "code": "// Field\n\ncolor(\"green\"){\n    cube([160, 160, 4], center = true);\n}\n\n// Walls\n\ntranslate([0, -20, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([-20, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n    cube([40, 2, 20], center = true);\n        }\n    }\n}\n\ntranslate([0, 20, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([20, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n    cube([40, 2, 20], center = true);\n        }\n    }\n}\n\n// Right flank\n\ntranslate([40, 10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([40, -10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([60, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n        cube([20, 2, 20],   center = true);\n    }\n    }\n}\n\n// Left flank\n\ntranslate([-40, 10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([-40, -10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([-60, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n        cube([20, 2, 20],   center = true);\n    }\n    }\n}\n\n// Center Pillar\n\nunion(){\ncolor(\"grey\"){\n    translate([0, 10, 20]){\n        cylinder(40, 5, 5, center = true);\n    translate([0, 0, -5]){\n        cube([30, 15, 25], center = true);\n    }\n    }\n    translate([0, 10, 40]){\n        cylinder(5, 8, 8, center = true);\n    }\n    }\n}\n\ncenterpillars = 8;\n\ncolor(\"grey\"){\ntranslate([0, 10, 40]){\nfor (i = [0:centerpillars-1]) {\n    rotate([0, 0, 360 / centerpillars * i]) {\n        translate([7, 0, 3]){\n          cube([2, 2, 2], center = true);\n    }\n    }\n    }\n    }\n}\n\n// Right Pillar\n\nscale([.75, .75, .75]){\ntranslate([40, -10, 0]){\nunion(){\ncolor(\"grey\"){\n    translate([0, 10, 20]){\n        cylinder(40, 5, 5, center = true);\n    translate([0, 0, -10]){\n        cube([20, 20, 20], center = true);\n    }\n    }\n    translate([0, 10, 40]){\n        cylinder(5, 8, 8, center = true);\n    }\n    }\n}\n\nrightpillars = 8;\n\ncolor(\"grey\"){\ntranslate([0, 10, 40]){\nfor (i = [0:rightpillars-1]) {\n    rotate([0, 0, 360 / rightpillars * i]) {\n        translate([7, 0, 3]){\n          cube([2, 2, 2], center = true);\n    }\n    }\n    }\n    }\n}    \n}\n}\n\n// Left Pillar\n\nscale([.75, .75, .75]){\ntranslate([-40, -10, 0]){\nunion(){\ncolor(\"grey\"){\n    translate([0, 10, 20]){\n        cylinder(40, 5, 5, center = true);\n    translate([0, 0, -10]){\n        cube([20, 20, 20], center = true);\n    }\n    }\n    translate([0, 10, 40]){\n        cylinder(5, 8, 8, center = true);\n    }\n    }\n}\n\nleftpillars = 8;\n\ncolor(\"grey\"){\ntranslate([0, 10, 40]){\nfor (i = [0:leftpillars-1]) {\n    rotate([0, 0, 360 / leftpillars * i]) {\n        translate([7, 0, 3]){\n          cube([2, 2, 2], center = true);\n    }\n    }\n    }\n    }\n}    \n}\n}\n\n// Door\n\ncolor(\"brown\"){\n    translate([0, -20, 5]){\n    translate([-2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n    translate([0, -20, 5]){\n    translate([2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n}\n\n// Castle Door \n\ncolor(\"brown\"){\n    translate([0, 4, 5]){\n    translate([-2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n    translate([0, 4, 5]){\n    translate([2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n}   \n\n// Windows\n\nrotate([90, 0, 0]){\n    translate([0, 20, -3]){\n    cylinder(2, 5, 5, center = true);\n    }\n}\n\nrotate([90, 0, 0]){\n    translate([30, 13, 10.5]){\n    cylinder(2, 3, 3, center = true);\n    }\n}\n\nrotate([90, 0, 0]){\n    translate([-30, 13, 10.5]){\n    cylinder(2, 3, 3, center = true);\n    }\n}",
    "comments": []
  },
  {
    "_id": "vXXogL2gKusqHeDKs",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T02:07:23.485Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0993f84a26d2d24f8c59dda33721718a",
        "public_id": "avalanche2023spring/rgrapigxagech9cscvye",
        "version": 1677204701,
        "version_id": "a93175de4324c1df597f859cfa18c207",
        "signature": "5ca9a9e666a8c537d4e375c450a3536c4e18d6b8",
        "width": 1318,
        "height": 1320,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-24T02:11:41Z",
        "tags": [],
        "pages": 0,
        "bytes": 13986641,
        "type": "upload",
        "etag": "52a55e9efc2a9c8ace9522719d42aefa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677204701/avalanche2023spring/rgrapigxagech9cscvye.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677204701/avalanche2023spring/rgrapigxagech9cscvye.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677204701/avalanche2023spring/rgrapigxagech9cscvye.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126233",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "5874250",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 6693507,
        "duration": 16.716667,
        "rotation": 0,
        "nb_frames": 1064,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9a2c189833bef434bb2cc06473837146",
        "public_id": "avalanche2023spring/ns0z4ulyzr2gifeukfap",
        "version": 1677204720,
        "version_id": "250e2bba0772f25c02c067f597abb58e",
        "signature": "bbf84dae9302329e4b970fd519b242bf1362bad0",
        "width": 1318,
        "height": 1320,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T02:12:00Z",
        "tags": [],
        "bytes": 1417485,
        "type": "upload",
        "etag": "47877f906cd3929c0872b94be32ecf68",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677204720/avalanche2023spring/ns0z4ulyzr2gifeukfap.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677204720/avalanche2023spring/ns0z4ulyzr2gifeukfap.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ed5df94aa7c1e32e56692bb666badfac",
        "public_id": "avalanche2023spring/z05h0fizce3rmrgbtovp",
        "version": 1677204730,
        "version_id": "e6add97ed5b745aa81d40321738fe055",
        "signature": "8cda30e25d6dc5eb2cc6b4851f72cafb0a9411b0",
        "width": 1210,
        "height": 1210,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-24T02:12:10Z",
        "tags": [],
        "bytes": 1513973,
        "type": "upload",
        "etag": "1595e355993e722f7d3cd50fcaa2dd0b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677204730/avalanche2023spring/z05h0fizce3rmrgbtovp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677204730/avalanche2023spring/z05h0fizce3rmrgbtovp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:51:09.782Z" }
      },
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:54:51.016Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T03:51:58.306Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:43.463Z" }
      }
    ],
    "title": "",
    "description": "**Pair Challenge** Isha's beautiful sketch, with just the background removed became a brush! [Open it full screen here](https://editor.p5js.org/reshmarosethomas/full/KROYYe5sd)",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n//require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\nconst pane = new Tweakpane.Pane();\n\n\nlet circles = [];\nconst numCircles = 8;\nconst radius = 40;\n\nlet inc = 0.04;\n\n// const params = {\n//   Easing: 0.01,\n//   NoiseFactor: 40,\n//   AngleIncrease: 0.07\n// }\n\nconst params = {\n  Easing: 0.02,\n  NoiseFactor: 5,\n  AngleIncrease: 0.02\n}\n\npane.addInput(params, \"Easing\", { min: 0, max: 0.2 });\npane.addInput(params, \"NoiseFactor\", { min: 0, max: 50 });\npane.addInput(params, \"AngleIncrease\", { min: 0.01, max: 0.1 });\n\n\nlet theta = 0;\n\nlet colours = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noStroke();\n  createCircle ();\n  setColours(numCircles);\n  frameRate(60);\n  \n  rectMode(CENTER);\n  fill(\"rgb(90,90,90)\");\n  textSize(24);\n  text(\"Click to change colour\", width/2 -120, height/2);\n}\n\nfunction createCircle () {\n  for (let i = 0; i < numCircles; i++) {\n    const x = mouseX;\n    const y = mouseY;\n    circles.push({ x, y });\n  }\n}\n\nfunction setColours(num) {\n  \n  let startR = floor(random(255));\n  let startG = floor(random(255));\n  let startB = floor(random(255)); \n  let startColor = color(startR, startG, startB);\n  \n  let endR = floor(random(255));\n  let endG = floor(random(255));\n  let endB = floor(random(255));\n  let endColor = color(endR, endG, endB);\n  \n  for (let i = 0; i<num; i++) {\n    colours[i] = lerpColor (startColor, endColor, i/num);\n  }\n}\n\nfunction draw() {\n  \n  for (let i = 0; i < numCircles; i++) {\n    let circle = circles[i];\n    const dx = mouseX - circle.x;\n    const dy = mouseY - circle.y;\n    circle.x += dx * params.Easing;\n    circle.y += dy * params.Easing;\n\n    let r = 50;\n    let a = r * cos(theta);\n    let b = r * sin(theta);\n    theta += params.AngleIncrease; if (theta > TWO_PI ) theta = 0;\n\n    let ex = noise(i * dx * 5) * params.NoiseFactor;\n    let ey = noise(i * dy * 5) * params.NoiseFactor;\n    // let ex=0, ey=0;\n\n    fill(colours[i]);\n    ellipse(circle.x + ex + a, circle.y + ey + b, radius);\n  }\n}\n\nfunction mouseClicked() {\n  setColours(circles.length);\n}",
    "comments": [
      {
        "commenter_id": "aFZYuqXuhejWXg6yv",
        "comment": "This looks amazing!!!",
        "created_at": { "$date": "2023-02-24T02:50:23.424Z" }
      }
    ]
  },
  {
    "_id": "vcxJPmRzCfkQfzTD7",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T04:14:17.534Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "849e26c57d04e03220608f22e7cf53f1",
        "public_id": "avalanche2023spring/ybw5vjmqtujh1x2yc6sh",
        "version": 1677125677,
        "version_id": "61ee85af32ee68d70a04a1d771404851",
        "signature": "47e017d1440966cbe3e58584167b23c277715e17",
        "width": 1895,
        "height": 1895,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T04:14:37Z",
        "tags": [],
        "bytes": 3412592,
        "type": "upload",
        "etag": "b62cbcabd7c6ce0b8f395e0b70d39138",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677125677/avalanche2023spring/ybw5vjmqtujh1x2yc6sh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677125677/avalanche2023spring/ybw5vjmqtujh1x2yc6sh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ad75efdd1881d4bb070fcc2a4eebd4d9",
        "public_id": "avalanche2023spring/ubytsjvqamicnoqiigbw",
        "version": 1677125699,
        "version_id": "c9415817baf1c6fbfc2c1f3b813710a5",
        "signature": "4a95ec84f3923ae2b47e7f1a949deafb0e6c5948",
        "width": 1280,
        "height": 1204,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-23T04:14:59Z",
        "tags": [],
        "pages": 0,
        "bytes": 12757453,
        "type": "upload",
        "etag": "2c6d34bfe435ff397b08b1a8597c52d7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677125699/avalanche2023spring/ubytsjvqamicnoqiigbw.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677125699/avalanche2023spring/ubytsjvqamicnoqiigbw.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677125699/avalanche2023spring/ubytsjvqamicnoqiigbw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "15243938",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 15283344,
        "duration": 6.677833,
        "rotation": 0,
        "nb_frames": 402,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T13:22:30.562Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:21.265Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T02:56:16.32Z" }
      }
    ],
    "title": "",
    "description": "Sketch from Rama's code! I was trying to make bubbles but then it turned into a non-bubbly thing that I ended up liking",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  px = width / 2;\n  py = height / 2;\n\n  dir = 1;\n}\n\nfunction draw() {\n  background(0, 0, 50, 80);\n\n  for(let i=0; i<width; i+=20){\n    // noStroke()\n    stroke(255, 255, 255, 100);\n    noFill();\n    // fill(255, 255, 255, 10);\n    // y = noise(i*0.1)*100-50;\n    y = noise(frameCount+i*.001)*1000-50;    \n    y = noise(frameCount*.01+i*.001)*1000-50;\n    y = noise(frameCount*.001+i*.001)*1000-50;\n    ellipse((width/10+y), i, 100+y, 100+y)\n    ellipse(width/6+y, i, 80-y, 80-y)\n  }\n\n  if (dist(mouseX, mouseY, px, py) > 15) {\n    push();\n    translate(mouseX, mouseY);\n    if (mouseX < px) {\n      rotate(PI + atan((mouseY - py) / (mouseX - px)));\n    } else {\n      rotate(atan((mouseY - py) / (mouseX - px)));\n    }\n    scale(1, dir);\n    rotate(PI / 12);\n    push();\n    rotate(PI / 2);\n    // stroke(255);\n    // fill(0, 0, 255);\n    push();\n    scale(3);\n    fill(255, 200);\n    triangle(0, 0, -12, 22, 12, 22);\n    \n    fill(255, 75)\n\n    triangle(0, 30, 0, 40, 20, 50);\n    triangle(0, 30, 0, 45, 20, 50);\n    // triangle(0, 30, 20, 45, 20, 50);\n    triangle(0, 30, 0, 40, -20, 50);\n    triangle(0, 30, 0, 45, -20, 50);\n    triangle(0, 30, 0, 45, -20, 50);\n\n    fill(255, 64.7, 0);\n    ellipse(0, 20, 15, 40);\n    stroke(0)\n    fill(255, 255, 255);\n    ellipse(0, 20, 15, 30);\n    fill(255, 64.7, 0);\n    ellipse(0, 20, 15, 20);\n    // fill(255, 255, 255);\n    // ellipse(0, 20, 15, 5);\n    push()\n    stroke(255);\n    strokeWeight(1);\n    fill(0);\n    ellipse(5, 5, 5, 5);\n    ellipse(-5, 5, 5, 5);\n    pop()\n    pop();\n    pop();\n    pop();\n    px = mouseX;\n    py = mouseY;\n  }\n}",
    "comments": []
  },
  {
    "_id": "vfuwnRzE2RA7MroKx",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-19T06:33:13.981Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5f595e31b9c8759a18f8ef73cd42911d",
        "public_id": "avalanche2023spring/v5vtfkzwqzkvpzednvzc",
        "version": 1676788504,
        "version_id": "5e22a8f3660c0828e38ca3fc207afd5a",
        "signature": "e8505f8222efebcd83e8e8afa7a5cdc935f0f87c",
        "width": 782,
        "height": 790,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-19T06:35:04Z",
        "tags": [],
        "pages": 0,
        "bytes": 859359,
        "type": "upload",
        "etag": "21a880d137cabd759a0ad3d651c9d5dd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676788504/avalanche2023spring/v5vtfkzwqzkvpzednvzc.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676788504/avalanche2023spring/v5vtfkzwqzkvpzednvzc.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676788504/avalanche2023spring/v5vtfkzwqzkvpzednvzc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "780051",
          "dar": "391:395",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 823337,
        "duration": 8.35,
        "rotation": 0,
        "nb_frames": 503,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:19.164Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-03T05:26:47.274Z" }
      }
    ],
    "title": "",
    "description": "Abstract take on a treasure map using noise and random; randomly placed \"target\" on the animated grid",
    "code": "let rows = 10;\nlet cols = 10;\nlet tileSize = 40;\nlet noiseScale = 0.02;\nlet uniqueX, uniqueY;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noStroke();\n  // Set a noise seed for consistency\n  noiseSeed(12345);\n  uniqueX = int(random(cols));\n  uniqueY = int(random(rows));\n}\n\nfunction draw() {\n  background(220);\n  \n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * tileSize;\n      let y = j * tileSize;\n      \n      if (i === uniqueX && j === uniqueY) {\n        // Unique color for a specific square\n        fill(255, 0, 0);\n      } else {\n        let noiseVal = noise(i * noiseScale, j * noiseScale, frameCount * 0.01);\n        let c = map(noiseVal, 0, 1, 0, 255);\n        fill(c);\n      }\n      \n      rect(x, y, tileSize, tileSize);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "vg8bhK9X8tMBzNiMv",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Random",
    "created_at": { "$date": "2023-02-10T04:48:03.588Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d8586c0395f1e722f09a140302a8ea73",
        "public_id": "avalanche2023spring/fyolwpih79v7oei7ak8h",
        "version": 1676004490,
        "version_id": "bdce944f4f96df67fd57fac219b043ff",
        "signature": "071184747bb32a28169d637165f409736e172c79",
        "width": 826,
        "height": 826,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-10T04:48:10Z",
        "tags": [],
        "bytes": 122064,
        "type": "upload",
        "etag": "b0c92b9833832b8c4d8f097655127f38",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676004490/avalanche2023spring/fyolwpih79v7oei7ak8h.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676004490/avalanche2023spring/fyolwpih79v7oei7ak8h.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-17T21:33:30.184Z" }
      }
    ],
    "title": "",
    "description": "Tried to vary size & colour with a deck.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet deck = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet ePos = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  noLoop();\n  noStroke();\n  colorMode(HSB);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(10);\n  let d = deck.length;\n  for (let i = d; i < width; i += d) {\n    for (let j = d; j < height; j += d) {\n      let colour = map(ePosDeck(), 1, 10, 40, 120);\n      fill(colour, 50, 100);\n      rect(i, j, ePosDeck()*1.5);\n    }\n  }\n}\n\nfunction ePosDeck() {\n  let e = deck[ePos];\n  ePos++;\n  if (ePos > deck.length) {\n    deck = shuffle(deck);\n    ePos = 0;\n  }\n  return e;\n}",
    "comments": []
  },
  {
    "_id": "vkcXJGHJkEGvQa33w",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-05T01:17:05.184Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "845e0dee31d273061a5660a8cc7a9716",
        "public_id": "avalanche2023spring/tfnbpunu8wbjyz5q7qjg",
        "version": 1680657436,
        "version_id": "38c239ef512f175f21f98db924183115",
        "signature": "e211f0d69067f7b2b0359119e2c2bd5116f98e3e",
        "width": 599,
        "height": 600,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-05T01:17:16Z",
        "tags": [],
        "bytes": 173149,
        "type": "upload",
        "etag": "21a460ae800a61898465935b46dff389",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680657436/avalanche2023spring/tfnbpunu8wbjyz5q7qjg.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680657436/avalanche2023spring/tfnbpunu8wbjyz5q7qjg.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Microgame I made over the weekend. I wanted to start off from my inspiration from trying to learn how to riffle shuffle despite playing card games for quite a while. Also since I really wanted to use p5.js I did put in the time to experiment with the p5.play v3 library.\n\nPress the F and G keys to pile on cards on top of each other.",
    "code": "let img;\nlet cardnum = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // template to spawn cards\n  \n  /* card = createSprite();\n  card.scale *= 0.3;\n  card.img = loadImage(\"Image/og_card_5@2x.png\"); */\n}\n\nfunction draw() {\n  background(72, 184, 103);\n\n  // draw spawned cards for riffle shuffling\n  \n  if(keyIsPressed) {\n    if(i = 0, i < 1, i++){\n      keyPressed();\n    }\n  }\n  \n  fill(255, 0, 0);\n  text('cards stacked: ' + cardnum, 10, 30);\n}\n\n// spawn cards for riffle shuffling\n\nfunction keyPressed() {\n  if(keyCode == 70) {\n    card1 = createSprite(width/2 - 50, height/2);\n    card1.rotation = 35;\n    card1.scale *= 0.3;\n    card1.img = loadImage(\"Image/og_card_5@2x.png\");\n    cardnum++;\n  }\n  \n  if(keyCode == 71) {\n    card2 = createSprite(width/2 + 50, height/2);\n    card2.rotation = -35;\n    card2.scale *= 0.3;\n    card2.img = loadImage(\"Image/og_card_5@2x.png\");\n    cardnum++;\n  }\n}",
    "comments": []
  },
  {
    "_id": "vxTaJ3mfHaJzpSN3k",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T02:40:53.232Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a62c7e7f0090c2e884804a7115630028",
        "public_id": "avalanche2023spring/zbajiq2ufi4vetiwqw3t",
        "version": 1679539323,
        "version_id": "ccd6917897f87fbc504115c4961b534b",
        "signature": "e6f3d34d1e911f52d573717568188825e709319c",
        "width": 1514,
        "height": 1428,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T02:42:03Z",
        "tags": [],
        "bytes": 218745,
        "type": "upload",
        "etag": "60119254c107080279b642e9dd2dbb72",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679539323/avalanche2023spring/zbajiq2ufi4vetiwqw3t.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679539323/avalanche2023spring/zbajiq2ufi4vetiwqw3t.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T16:59:45.772Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:03:29.054Z" }
      }
    ],
    "title": "",
    "description": "I watched a tutorial on Paper.js to create this generative diagonal grid-like pattern",
    "comments": []
  },
  {
    "_id": "vz6ETBmEMpg6airpm",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T03:14:50.46Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e2b49fb4ea381ad5de7b4e5a9ee8af8d",
        "public_id": "avalanche2023spring/cbid9renmsxroe7vxzbm",
        "version": 1682046901,
        "version_id": "a981e39367b460fc1dcc0616e69657e4",
        "signature": "2c754c15aa58e46cdf29d0fd1726fd2fbeb189c5",
        "width": 1272,
        "height": 1004,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T03:15:01Z",
        "tags": [],
        "bytes": 332930,
        "type": "upload",
        "etag": "a73e853da4762492e1a54ae1dac585e9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682046901/avalanche2023spring/cbid9renmsxroe7vxzbm.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682046901/avalanche2023spring/cbid9renmsxroe7vxzbm.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6055dfcb3640b5fb85572621ad5acd01",
        "public_id": "avalanche2023spring/brc35bicqiziz7icrp0r",
        "version": 1682046937,
        "version_id": "f0159e64ffce8599dae147d35760dc6e",
        "signature": "5b10df1fb844a3165928823fc1fd0c668912c04c",
        "width": 640,
        "height": 560,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-21T03:15:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 17690696,
        "type": "upload",
        "etag": "8a6cbc18d780cb59dc00d588ae2c371a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682046937/avalanche2023spring/brc35bicqiziz7icrp0r.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682046937/avalanche2023spring/brc35bicqiziz7icrp0r.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682046937/avalanche2023spring/brc35bicqiziz7icrp0r.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "4184606",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 4191280,
        "duration": 33.766667,
        "rotation": 0,
        "nb_frames": 2026,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:16:50.696Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:19:58.703Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:27:34.896Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:43:33.408Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:05:55.061Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2023-04-21T16:05:55.546Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:06:57.828Z" }
      }
    ],
    "title": "",
    "description": "An extension of my earlier chatgpt sketch... I will say it does make adding sliders a little less tedious!",
    "code": "const canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\nconst svg = document.getElementById('svg');\nconst textPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\nconst textContentX = 'COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM!';\n\n// let amplitude = 50;\n// let frequency = 0.5;\n// let fontSize = 12;\nlet amplitude = 25;\nlet frequency = .03;\nlet fontSize = 12;\nconst xOffset = 0;\nconst yOffset = canvas.height / 2;\nfunction setup() {\n  background(0);\n}\nfunction draw() {\n\n\n\n  const font = 'Helvetica-light';\n  // Get number of copies from slider\n  const numCopies = parseInt(document.getElementById('copies').value);\n  const spaceBetweenCopies = parseInt(document.getElementById('space').value);\n\n  // Remove existing text and text path elements\n  for (let i = 0; i < numCopies; i++) {\n    const textPath = document.getElementById(`text-path-${i}`);\n    const textEl = document.getElementById(`text-${i}`);\n    if (textPath) {\n      textPath.remove();\n    }\n    if (textEl) {\n      textEl.remove();\n    }\n  }\n\n  // Clear canvas\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  // Draw sine wave path for each copy\n  for (let i = 0; i < numCopies; i++) {\n    // const yOffset = i * (canvas.height / numCopies);\n    const yOffset = i * (canvas.height / numCopies) + i * spaceBetweenCopies;\n    ctx.beginPath();\n    for (let x = 0; x < canvas.width; x++) {\n      const y = amplitude * Math.sin(x * frequency + xOffset) + yOffset;\n      ctx.lineTo(x, y);\n    }\n    ctx.stroke();\n\n    // Set text path to sine wave path for each copy\n    const textPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    textPath.setAttribute('d', `M 0 ${yOffset}`);\n    for (let x = 0; x < canvas.width; x++) {\n      const y = amplitude * Math.sin(x * frequency + xOffset + millis()/1000) + yOffset;\n      // const y = amplitude * Math.sin(x * frequency + xOffset) + yOffset;\n      textPath.setAttribute('d', `${textPath.getAttribute('d')} L ${x} ${y}`);\n    }\n    textPath.setAttribute('id', `text-path-${i}`);\n    textPath.setAttribute('fill', 'none');\n    svg.appendChild(textPath);\n\n    // Create new text element and set its text path to the sine wave path for each copy\n    const textEl = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    textEl.setAttribute('id', `text-${i}`);\n    textEl.setAttribute('font-size', fontSize);\n    textEl.setAttribute('fill', 'white');\n\n    \n  textEl.setAttribute('style', `font-family: ${font};`);\n    const textPathEl = document.createElementNS('http://www.w3.org/2000/svg', 'textPath');\n    textPathEl.setAttribute('href', `#text-path-${i}`);\n    // textPathEl.setAttribute('startOffset', '50%');\n    textPathEl.setAttribute('startOffset', '0%');\n    textPathEl.textContent = textContentX;\n    textEl.appendChild(textPathEl);\n    svg.appendChild(textEl);\n\n\n  }\n}\n\n\n\n\nfunction updateAmplitude(event) {\n  amplitude = event.target.value;\n  svg.innerHTML = '';\n  draw();\n}\n\nfunction updateFrequency(event) {\n  frequency = event.target.value;\n  svg.innerHTML = '';\n  draw();\n}\n\nfunction updateFontSize(event) {\n  fontSize = event.target.value;\n  const textEl = document.getElementById('text');\n  if (textEl) {\n    textEl.setAttribute('font-size', fontSize);\n  }\n}\n\ndocument.getElementById('amplitude-slider').addEventListener('input', updateAmplitude);\ndocument.getElementById('frequency-slider').addEventListener('input', updateFrequency);\ndocument.getElementById('font-size-slider').addEventListener('input', updateFontSize);\n\ndraw();",
    "comments": []
  },
  {
    "_id": "wEafMFsFr8CE3QhB7",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-23T03:02:25.601Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "69fcf1794226bc098f696c4bfcff98f7",
        "public_id": "avalanche2023spring/wnannqqzrrtrifqcpmsn",
        "version": 1677121358,
        "version_id": "6815e8d0c52500e11cb8f6091d7af532",
        "signature": "b0dfb0b4a72a7b26220008c1332f98b61929276b",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T03:02:38Z",
        "tags": [],
        "bytes": 462661,
        "type": "upload",
        "etag": "c5f0001ad3e451132ecdcc6da0137e6c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677121358/avalanche2023spring/wnannqqzrrtrifqcpmsn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677121358/avalanche2023spring/wnannqqzrrtrifqcpmsn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4ff79f9884f0c66a19fa469577711a36",
        "public_id": "avalanche2023spring/cjqfyhklwxxup5ky3yxv",
        "version": 1677121367,
        "version_id": "ebaae71859075c2c041fad17ed65f007",
        "signature": "f6a9855bbebd3672ebe0fda9d7b3f8031c05ab2f",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T03:02:47Z",
        "tags": [],
        "bytes": 502165,
        "type": "upload",
        "etag": "00968df2d80edd87328e2cfa9671bfe4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677121367/avalanche2023spring/cjqfyhklwxxup5ky3yxv.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677121367/avalanche2023spring/cjqfyhklwxxup5ky3yxv.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8b00d1c24310f9132ca0aaee6178cb97",
        "public_id": "avalanche2023spring/hyfbx5fz40wan80rgwk6",
        "version": 1677121370,
        "version_id": "d99e7230517ad94697c19a2fd50766cb",
        "signature": "7fad63df0e5093cd411f1a31118d8ce6139d8ea6",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-23T03:02:50Z",
        "tags": [],
        "bytes": 461618,
        "type": "upload",
        "etag": "7f3d4998aaf4c45f5f2a27e289577521",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677121370/avalanche2023spring/hyfbx5fz40wan80rgwk6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677121370/avalanche2023spring/hyfbx5fz40wan80rgwk6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T04:12:43.66Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T13:22:52.697Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:23.361Z" }
      }
    ],
    "title": "",
    "description": "Neat results that I got from doing the pair sketch with Chris' code! Noise sure looks cool at scale!",
    "code": "let scale;\nlet grid;\n\nfunction setup() {\n  createCanvas(800, 800);\n\n  noLoop();\n  colorMode(HSB);\n}\n// scale = .05;\n// scale = .01;\nscale = .005;\n// scale = .002;\n\n\n// grid = 1;\ngrid = 7;\n\nfunction draw() {\n  background(210, 11, 96);\n  strokeWeight(0.1);\n  for (var x = -grid*2; x < width; x+=grid) {\n    for (var y = -grid*2; y < height; y+=grid) {\n\n      var h = 80 * noise(pow(x,100)*scale, y*scale) + 120;\n\n      let s = 100 * noise(y*scale);\n      let b = 50;\n  fill (h, s, b + noise(x*x*scale)*10 + 10, random(100));\n      if (h > 281) {\n\n        fill (h, s, b + noise(x*scale)*10 + 10, random(100));\n\n      } else if (h > 271) {\n\n        fill (h, s, b + noise(x*scale)*10, random(100));\n\n      } else if (h > 251) {\n\n        fill (h, s, b, random(255));\n    \n      } else if (h > 231) {\n\n        fill (h, s, b  - noise(x*scale)*10, random(255));\n\n      } else if (h > 221) {\n\n        fill (h, s, b - noise(x*scale)*10 - 10, random(255));\n\n      }\n      \n      rect(x+(noise(x,y)*20), y+(noise(y,x)*20), 20, 20);\n\n    }\t\n  }\n}",
    "comments": []
  },
  {
    "_id": "wjQg7DCzat6Sz7oLD",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T04:23:22.565Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9ac5c9bfa305568f6624f4499470232c",
        "public_id": "avalanche2023spring/d10ram1hqsuynddldsby",
        "version": 1677731008,
        "version_id": "53d940afa2bb43550510b2babc03fee3",
        "signature": "d8daed07d758ca3399e19d1182ae19e2c8382553",
        "width": 720,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-02T04:23:28Z",
        "tags": [],
        "pages": 0,
        "bytes": 16049527,
        "type": "upload",
        "etag": "305cbba9bd1985a546168ca2a9d9dac5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677731008/avalanche2023spring/d10ram1hqsuynddldsby.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677731008/avalanche2023spring/d10ram1hqsuynddldsby.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677731008/avalanche2023spring/d10ram1hqsuynddldsby.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317194",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "3956056",
          "dar": "18:25",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 4274554,
        "duration": 30,
        "rotation": 0,
        "nb_frames": 900,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My attempt on challenge 2. A bit tricky to figure out how to process the arguments for noise to make it behave properly.",
    "comments": []
  },
  {
    "_id": "wkcGvmbuXmdSKHRMG",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-09T23:05:49.673Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c944095082b3a235040d402293242a38",
        "public_id": "avalanche2023spring/kcbirdlcl4iqtjgsrnyk",
        "version": 1678403154,
        "version_id": "49b0198a0f637ba7c67649f1cad6baf1",
        "signature": "2219978597345bf99619bcf8a6107c7d1877343b",
        "width": 865,
        "height": 705,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-09T23:05:54Z",
        "tags": [],
        "bytes": 600150,
        "type": "upload",
        "etag": "b968604e8a5446dd8e384ce39714fb86",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678403154/avalanche2023spring/kcbirdlcl4iqtjgsrnyk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678403154/avalanche2023spring/kcbirdlcl4iqtjgsrnyk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "88729b7588d1a3f35a9db53b939fd475",
        "public_id": "avalanche2023spring/okhzpmd9sadvprn0ptko",
        "version": 1678403408,
        "version_id": "43f4ec4650d04a834ad70da5b020e317",
        "signature": "ffd4c715d62bc22a7495f2d9cd46998fb130b47c",
        "width": 920,
        "height": 726,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-03-09T23:10:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 14618414,
        "type": "upload",
        "etag": "69616178715cd25ecf8cb2c5fb995c7f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1678403408/avalanche2023spring/okhzpmd9sadvprn0ptko.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1678403408/avalanche2023spring/okhzpmd9sadvprn0ptko.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1678403408/avalanche2023spring/okhzpmd9sadvprn0ptko.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "High",
          "bit_rate": "7415835",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 7417220,
        "duration": 15.766667,
        "rotation": 0,
        "nb_frames": 474,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T02:15:27.336Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:14.071Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T17:31:20.372Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-03-26T01:02:58.694Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "funny",
        "created_at": { "$date": "2023-03-31T19:06:02.282Z" }
      }
    ],
    "title": "",
    "description": "Had some fun with zoom in and zoom out! Also image challenge for Isha.",
    "code": "let img; // creates image variable\n\nlet size = 7 // element size\n\nlet startx = 0 // starting x coordinate\nlet starty = 0 // starting y coordinate\n\n\nfunction preload() {\n  img = loadImage('assets/img7.jpg');\n}\nfunction setup() {\n  createCanvas(windowWidth, windowHeight-40); // creates canvas\n\n  img.loadPixels(); // loads image\n  img.resize(windowWidth, 0); // resizes image to window size\n  img.updatePixels(); // updates image\n\n}\n\nfunction draw() {\n  clear();\n  background(0);\n\n  let size = floor(map(mouseX, 0, width, 7, 40)); // maps mouseX value to element size\n\n  for (let starty = 0; starty < img.height; starty++) { // creates pixel index\n    for (let startx = 0; startx < img.width; startx++) {\n      let index = (startx + starty * img.width) * 4;\n      let r = img.pixels[index + 0];\n      let g = img.pixels[index + 1];\n      let b = img.pixels[index + 2];\n\n      \n\n      fill(r,g,b); // fills element with adjusted grayscale\n\n      ellipse(startx, starty, size, size)\n      \n      //triangle(startx, starty, startx + (size / 2), starty + size, startx + size, starty) // upside down triangle\n       //triangle(startx, starty, startx, starty + size, startx + size, starty)\n\n      startx = startx + size -1 // set new startx value\n    }\n   starty = starty + size -1 // set new starty value\n  }\n}",
    "comments": []
  },
  {
    "_id": "ws2F5MAqyXkBxx8LM",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-10T19:56:56.757Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "97d5fb5019ef25642cc1b9cbc46fc15d",
        "public_id": "avalanche2023spring/h49te0wpctwgrby47bsp",
        "version": 1681156718,
        "version_id": "27820d0d287fbcbadafc0e1397eb45b8",
        "signature": "db9f4bae10fb1ddb9b80b6869ffecf6e482ddd9c",
        "width": 2532,
        "height": 1170,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-10T19:58:38Z",
        "tags": [],
        "bytes": 386834,
        "type": "upload",
        "etag": "8ad2cf44c36bf2283806a61db12335ed",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681156718/avalanche2023spring/h49te0wpctwgrby47bsp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681156718/avalanche2023spring/h49te0wpctwgrby47bsp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9ec609ace651f2397138eada59ed50f0",
        "public_id": "avalanche2023spring/cthtepppha8usslg2nkr",
        "version": 1681156724,
        "version_id": "eebb94da30d2d94725dc616eb3d723c8",
        "signature": "6b8d0ac8af32a34d0857faa390b4d745c9b3bc03",
        "width": 2536,
        "height": 1412,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-10T19:58:44Z",
        "tags": [],
        "bytes": 210238,
        "type": "upload",
        "etag": "2ea129d3093253cd75c4e251cd0c0bc2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681156724/avalanche2023spring/cthtepppha8usslg2nkr.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681156724/avalanche2023spring/cthtepppha8usslg2nkr.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2cf2608ef03bb98ccef887bc170c67d5",
        "public_id": "avalanche2023spring/xkesk1ycgetcrkjjd9ad",
        "version": 1681156729,
        "version_id": "79fa72e147fd2319680cf061cd2a3ff9",
        "signature": "a62697e4858ba22f4611fb2d8a763bbd77922788",
        "width": 2528,
        "height": 1212,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-10T19:58:49Z",
        "tags": [],
        "bytes": 264999,
        "type": "upload",
        "etag": "fc2cc66b33210c8e2d0fa05186021fd9",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681156729/avalanche2023spring/xkesk1ycgetcrkjjd9ad.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681156729/avalanche2023spring/xkesk1ycgetcrkjjd9ad.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "category": "funny",
        "created_at": { "$date": "2023-04-10T20:38:08.891Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "funny",
        "created_at": { "$date": "2023-04-10T21:05:48.969Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-12T05:58:47.71Z" }
      }
    ],
    "title": "",
    "description": "I used two stories by Dr. Seuss in the Markov Model to see what inspirational quotes it would come up with",
    "comments": []
  },
  {
    "_id": "wsxcZnRDgb7WvRNgT",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T01:15:07.321Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "22b47afe6262274123529d707d6f143a",
        "public_id": "avalanche2023spring/qcgrx7ms5gcstqfx2t3c",
        "version": 1675300581,
        "version_id": "e753d1350a38892c674abea2d1d84b31",
        "signature": "dadf773b87a8d7cbd44869b6e2fd7c6c1377247f",
        "width": 792,
        "height": 1224,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T01:16:21Z",
        "tags": [],
        "bytes": 245557,
        "type": "upload",
        "etag": "c3d13c09db38af3eb02800812231f979",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675300581/avalanche2023spring/qcgrx7ms5gcstqfx2t3c.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675300581/avalanche2023spring/qcgrx7ms5gcstqfx2t3c.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T02:02:05.413Z" }
      }
    ],
    "title": "",
    "description": "Thanks for the punishment, Gramme!\nFYI: There is no \"free\" version of Helvetica included with Windows, and the MacOS version is a '.dfont' variant of TrueType Helvetica that may be problematic for publishing use. Otherwise, Helvetica is a commercial, trademarked font. Adobe does not include any version of Helvetica with any of its products. It's also not available through 'TypeKit'.",
    "comments": [
      {
        "commenter_id": "ThhLMCZBENKtw2dT6",
        "comment": "could've just used Arial girl, its not that deep!",
        "created_at": { "$date": "2023-02-03T17:13:32.832Z" }
      }
    ]
  },
  {
    "_id": "wtDExsv4obDEtySnT",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-29T22:29:27.599Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "27ef625f55571dbe4b7454f61973521d",
        "public_id": "avalanche2023spring/cdfzr9odkikzydrbatmv",
        "version": 1675031478,
        "version_id": "59bc2d078c8229313202252254c97e19",
        "signature": "879c6c15841bf1c20b200d9e744d837974413c2f",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-29T22:31:18Z",
        "tags": [],
        "bytes": 2319096,
        "type": "upload",
        "etag": "1ebe8eac02af866c019ed5750a0aed47",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675031478/avalanche2023spring/cdfzr9odkikzydrbatmv.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675031478/avalanche2023spring/cdfzr9odkikzydrbatmv.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-30T01:57:21.402Z" }
      }
    ],
    "title": "",
    "description": "My sketch based on Keren's instructions!",
    "comments": []
  },
  {
    "_id": "wtinfEPF2vBQWtQE5",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-24T04:44:58.162Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b01793ad0c76db86007a5a47a1a4a820",
        "public_id": "avalanche2023spring/fnktxvqxiqqrzkcxm6vw",
        "version": 1677213913,
        "version_id": "6e7a578e295e33742a92a42a065c57c9",
        "signature": "1d35580d439fb204573a2938f1c02acdfee7334b",
        "width": 928,
        "height": 634,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-24T04:45:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 10045245,
        "type": "upload",
        "etag": "2029d62c741f67809dc0cef4b8067a8b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677213913/avalanche2023spring/fnktxvqxiqqrzkcxm6vw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677213913/avalanche2023spring/fnktxvqxiqqrzkcxm6vw.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677213913/avalanche2023spring/fnktxvqxiqqrzkcxm6vw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "316935",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "6197789",
          "dar": "464:317",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 29.97002997002997,
        "bit_rate": 6494770,
        "duration": 12.3123,
        "rotation": 0,
        "nb_frames": 369,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-24T14:20:53.811Z" }
      }
    ],
    "title": "",
    "description": "Face generator. The speed slider won't work for some reason, but I couldn't figure it out - maybe because it's in setup?",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet img = [];\nlet imgsize = 140;\n\nconst pane = new Tweakpane.Pane();\nconst slider = {\n  scale: 0.75,\n  speed: 3,\n};\npane.addInput(slider, \"scale\", { min: 0.25, max: 1 });\npane.addInput(slider, \"speed\", { min: 1, max: 15 });\n\nfunction preload() {\n  for (let i=0; i<36; i++) {\n    img[i] = loadImage(\"squares/\" + i + \".png\");\n  }\n}\n\nfunction setup() {\n  createCanvas(imgsize*3,imgsize*3);\n  frameRate(slider.speed);  \n}\n\nfunction draw() {\n  background(255);\n  drawImage(0,4,0,0);\n  drawImage(4,8,imgsize,0);\n  drawImage(8,12,2*imgsize,0);\n  drawImage(12,16,0,imgsize);\n  drawImage(16,20,imgsize,imgsize);\n  drawImage(20,24,2*imgsize,imgsize);\n  drawImage(24,28,0,2*imgsize);\n  drawImage(28,32,imgsize,2*imgsize);\n  drawImage(32,36,2*imgsize,2*imgsize);  \n}\n\nfunction drawImage(min,max,x,y) {\n  let r = floor(random(min,max));\n  push();\n  scale(slider.scale)\n  image(img[r],x,y);\n  pop();\n}",
    "comments": []
  },
  {
    "_id": "wvB8XYwyBKAu74mho",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": { "$date": "2023-04-28T04:22:59.871Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0fb1195cfd57aff454d1ade791a807d0",
        "public_id": "avalanche2023spring/wciyuajiy1v5ksxwdmhn",
        "version": 1682655875,
        "version_id": "08f08f173c91dc39819301a8f2110822",
        "signature": "d05a04db7794a61ba4375f7ec800219a82333b47",
        "width": 1510,
        "height": 1312,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T04:24:35Z",
        "tags": [],
        "bytes": 187918,
        "type": "upload",
        "etag": "4b6b33566adc8fa2cd6af4c6be0f0222",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682655875/avalanche2023spring/wciyuajiy1v5ksxwdmhn.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682655875/avalanche2023spring/wciyuajiy1v5ksxwdmhn.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Wanted to continue using AI to write p5 sketches. Here's one chat gpt came up with with I asked for \"wavy lines\", I played around with the code and made it overlap a little",
    "comments": []
  },
  {
    "_id": "wxSYK49t4pHB5gKZ3",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T10:45:39.531Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f260fc3a9df3da19e44a401f7dff8590",
        "public_id": "avalanche2023spring/dnscu7dmyjnlcbtruqse",
        "version": 1681469182,
        "version_id": "f8c8b7d85960d53b326a1de2337147c3",
        "signature": "f18fb64ebd6b75a6ae8fea6f543aa2879aad4adc",
        "width": 954,
        "height": 1014,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-14T10:46:22Z",
        "tags": [],
        "pages": 0,
        "bytes": 3668818,
        "type": "upload",
        "etag": "18cd31d9839344de34886fc489238a18",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681469182/avalanche2023spring/dnscu7dmyjnlcbtruqse.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681469182/avalanche2023spring/dnscu7dmyjnlcbtruqse.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681469182/avalanche2023spring/dnscu7dmyjnlcbtruqse.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "1569195",
          "dar": "159:169",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 1609719,
        "duration": 18.233333,
        "rotation": 0,
        "nb_frames": 1080,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Edited the sketch from the chapter to generate News Headlines instead of book titles",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\n\nfunction generateTitle() {\n  var subjects = [\n    \"Man\",\n    \"Woman\",\n    \"Dog\",\n    \"Cat\",\n    \"Alien\",\n    \"Robot\",\n    \"Zombie\",\n    \"Vampire\",\n    \"Ghost\",\n    \"Politician\",\n    \"Celebrity\",\n    \"Baby\",\n    \"Grandma\",\n    \"Grandpa\",\n    \"Teacher\",\n    \"Student\",\n  ];\n  var actions = [\n    \"Wins\",\n    \"Loses\",\n    \"Eats\",\n    \"Dances\",\n    \"Sings\",\n    \"Fights\",\n    \"Runs\",\n    \"Jumps\",\n    \"Flies\",\n    \"Swims\",\n    \"Steals\",\n    \"Invents\",\n    \"Discovers\",\n    \"Solves\",\n    \"Escapes\",\n    \"Crashes\",\n    \"Explodes\",\n    \"Burns\",\n    \"Freezes\",\n    \"Melts\",\n    \"Teleports\",\n    \"Transforms\",\n    \"Morphs\",\n    \"Clones\",\n    \"Messes Up\",\n    \"Fixes\",\n    \"Breaks\",\n  ];\n  var objects = [\n    \"Car\",\n    \"Plane\",\n    \"Train\",\n    \"Boat\",\n    \"Rocket\",\n    \"Computer\",\n    \"Phone\",\n    \"Pizza\",\n    \"Burger\",\n    \"Fries\",\n    \"Ice Cream\",\n    \"Cake\",\n    \"Money\",\n    \"Gold\",\n    \"Diamond\",\n    \"Guitar\",\n    \"Drums\",\n    \"Piano\",\n    \"Camera\",\n    \"Book\",\n    \"Movie\",\n    \"TV Show\",\n    \"Video Game\",\n    \"Toy\",\n    \"House\",\n    \"Building\",\n    \"City\",\n    \"Country\",\n    \"World\",\n  ];\n\n  var subject = sample(subjects);\n  var action = sample(actions);\n  var object = sample(objects);\n\n  var title = `${subject} ${action} ${object}`;\n\n  return title;\n}\n\nfunction generateSubtitle() {\n  var sources = [\n    \"Local Zoo\",\n    \"International Space Station\",\n    \"Underwater Cave\",\n    \"Haunted House\",\n    \"Alien Planet\",\n    \"Secret Government Lab\",\n    \"Time Machine\",\n    \"Interdimensional Portal\",\n    \"Parallel Universe\",\n    \"Famous Landmark\",\n    \"Middle of Nowhere\",\n    \"Bottom of the Ocean\",\n  ];\n  var types = [\n    \"Breaking News\",\n    \"Exclusive Report\",\n    \"In-Depth Investigation\",\n    \"Eye-Witness Account\",\n    \"Special Feature\",\n    \"Live Coverage\",\n    \"Late-Breaking Update\",\n    \"Worldwide Scoop\",\n  ];\n\n  var source = sample(sources);\n  var type = sample(types);\n  var subtitle = `${type} from the ${source}`;\n\n  return subtitle;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n\t</div>\n`\n  );\n}",
    "comments": []
  },
  {
    "_id": "xBTyLTyMDdF2yXras",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-11T16:51:54.278Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "73a29058e1a83dac1378256f83f42e43",
        "public_id": "avalanche2023spring/cvzggjcqwaia2fafvjnj",
        "version": 1683823994,
        "version_id": "2ae4332743aacbec2f32a9b9030a5e55",
        "signature": "453abd0f4b2bbb161a7a9ba1b49ea6f4eb975a0b",
        "width": 900,
        "height": 898,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-11T16:53:14Z",
        "tags": [],
        "bytes": 465707,
        "type": "upload",
        "etag": "378ad68d30098e7a5563d106b74ab7b3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683823994/avalanche2023spring/cvzggjcqwaia2fafvjnj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683823994/avalanche2023spring/cvzggjcqwaia2fafvjnj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-15T19:12:22.365Z" }
      }
    ],
    "title": "",
    "description": "🍃",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  strokeWeight(2);\n  stroke(0);\n  background(\"#5D5D5D\");\n  noLoop();\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 450);\n  myTurtle.turnTo(-70);\n  myTurtle.penDown();\n  drawBranch(100);\n}\n\nfunction drawBranch(length) {\n  if (length < 4) {\n    return;\n  }\n\n  // draw this branch\n  let branchColor = color(random(50, 200), random(50, 200), random(50, 200));\n  stroke(branchColor);\n  myTurtle.moveForward(length * 0.5);\n  myTurtle.turnLeft(10);\n  myTurtle.moveForward(length * 0.5);\n\n  // left child\n  myTurtle.pushState();\n  myTurtle.turnLeft(random(20, 40));\n  drawBranch(length * 0.75);\n  myTurtle.popState();\n\n  // right child\n  myTurtle.pushState();\n  myTurtle.turnRight(random(10, 30));\n  drawBranch(length * 0.75);\n  myTurtle.popState();\n}",
    "comments": []
  },
  {
    "_id": "xBjHRTQ2SzTYkqpTW",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T13:05:15.659Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7418387b18cd8ef13fc2ae51285c3a60",
        "public_id": "avalanche2023spring/jd7z1slbnjfqletfaswq",
        "version": 1683291937,
        "version_id": "33e4d56873f91f5849f20cab8341ec72",
        "signature": "bdff3c7b9343e68d1580891308eb1ff8713e5b3e",
        "width": 1966,
        "height": 1064,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-05-05T13:05:37Z",
        "tags": [],
        "pages": 0,
        "bytes": 4815536,
        "type": "upload",
        "etag": "466307506cf27b8c81eb788d6a7539e7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1683291937/avalanche2023spring/jd7z1slbnjfqletfaswq.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1683291937/avalanche2023spring/jd7z1slbnjfqletfaswq.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1683291937/avalanche2023spring/jd7z1slbnjfqletfaswq.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "Main",
          "bit_rate": "5562440",
          "dar": "983:532",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 5569776,
        "duration": 6.916667,
        "rotation": 0,
        "nb_frames": 415,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:32:06.915Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-05-06T03:17:26.335Z" }
      },
      {
        "voter_id": null,
        "category": "nerdy",
        "created_at": { "$date": "2023-05-06T03:17:26.957Z" }
      }
    ],
    "title": "",
    "description": "Understanding animation on OpenSCAD",
    "comments": []
  },
  {
    "_id": "xHM5RHg7bh6aJwmHd",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": { "$date": "2023-02-03T14:31:00.718Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b01e8c64785c67fee84f4c814265c47a",
        "public_id": "avalanche2023spring/edazraqngeygv7ubfwva",
        "version": 1675434672,
        "version_id": "581140da43e42265e49c06c3267dff7b",
        "signature": "e6b01e0a278a7232b1219564f936c429b668c51b",
        "width": 1668,
        "height": 2388,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-03T14:31:12Z",
        "tags": [],
        "bytes": 2057346,
        "type": "upload",
        "etag": "3f7706b580284adb77e1404a9133da37",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675434672/avalanche2023spring/edazraqngeygv7ubfwva.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675434672/avalanche2023spring/edazraqngeygv7ubfwva.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T16:24:52.851Z" }
      }
    ],
    "lesson": "Introduction",
    "title": "",
    "description": "Custom Typeface from Brian Instructions.",
    "inspiration_url": "https://sharptype.co/",
    "comments": []
  },
  {
    "_id": "xKbRpKWiLsqyCR9pJ",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-09T18:50:21.352Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d3ca4f2a18b0e1991c0cd6d1103cec50",
        "public_id": "avalanche2023spring/shkiyiifwd9wheeo1710",
        "version": 1683658271,
        "version_id": "855a079d1a77f6266b597fd50de15a09",
        "signature": "3491cd69d4b5db48e34f3e8a5d97626bf5ee41a2",
        "width": 1440,
        "height": 1446,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-09T18:51:11Z",
        "tags": [],
        "bytes": 163603,
        "type": "upload",
        "etag": "14a37a02c7ff9c60bb182e65cac2cf86",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683658271/avalanche2023spring/shkiyiifwd9wheeo1710.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683658271/avalanche2023spring/shkiyiifwd9wheeo1710.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-05-09T19:03:05.6Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "funny",
        "created_at": { "$date": "2023-05-09T19:03:07.158Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "nerdy",
        "created_at": { "$date": "2023-05-09T19:03:08.88Z" }
      }
    ],
    "title": "",
    "description": "Experimenting with the push+pop example sketch",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(900, 900);\n  noFill();\n  stroke(255);\n  background(50);\n  noLoop();\n\n  myTurtle = new Turtle(width/2, height/2);\n}\n\nfunction draw() {\n  const numCircles = 10;\n  const circleSpacing = 30;\n  const circleSize = 200;\n\n  for (let i = 0; i < numCircles; i++) {\n    myTurtle.pushState();\n    myTurtle.penUp();\n    myTurtle.moveForward(i * circleSpacing);\n    myTurtle.penDown();\n    drawCircle(circleSize - i * 20);\n    myTurtle.popState();\n  }\n}\n\nfunction drawCircle(radius) {\n  const numPoints = 60;\n  const angle = 360 / numPoints;\n\n  myTurtle.moveForward(radius);\n  for (let i = 0; i < numPoints; i++) {\n    myTurtle.turnLeft(angle);\n    myTurtle.moveForward(2 * radius * Math.PI / numPoints);\n  }\n}",
    "comments": []
  },
  {
    "_id": "xNu7xHnGbcZcBGkw7",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T03:18:36.897Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8c45d2da8803b353dbffc813bff06d7d",
        "public_id": "avalanche2023spring/mxsvngstdmudacxt8hn6",
        "version": 1682047133,
        "version_id": "0e64421695206f461e97a222e7774040",
        "signature": "62a323d9e1990bbada1e7e2bde323b4a3a2532e5",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T03:18:53Z",
        "tags": [],
        "bytes": 53715,
        "type": "upload",
        "etag": "19edee0a0977028c3721c8bed15780db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682047133/avalanche2023spring/mxsvngstdmudacxt8hn6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682047133/avalanche2023spring/mxsvngstdmudacxt8hn6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T03:29:33.262Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T13:43:39.001Z" }
      }
    ],
    "title": "",
    "description": "Tried to get ChatGPT to work on the isometric sketch that I did for the noise week pair sketch. \n\nChatGPT had a really tough time understanding isometric perspective which made this pretty difficult to work on. Ultimately, ChatGPT didn't seem to be able to get what I was asking it so the result isn't exactly where I would want it to be.",
    "code": "let buildings = [];\n\nfunction setup() {\n  createCanvas(600,600, WEBGL);\n  rectMode(CENTER);\n  noStroke();\n  for (let i = 0; i < 20; i++) {\n    let building = new Building(random(50, width-50), random(50, height-50), random(20, 80), 3);\n    buildings.push(building);\n  }\n}\n\nfunction draw() {\n  background(220);\n  \n  // Set the camera position and target\n  camera(width/2, -height/2, 400, width/2, height/2, 0, 0, 1, 0);\n\n  for (let building of buildings) {\n    building.display();\n  }\n}\n\nclass Building {\n  constructor(x, z, size, maxSubdivisions) {\n    this.x = x;\n    this.y = 0;\n    this.z = z;\n    this.width = size * random(0.5, 1.5);\n    this.depth = size * random(0.5, 1.5);\n    this.height = size * random(0.5, 1.5);\n    this.color = color(random(50, 200), random(50, 200), random(50, 200));\n    this.maxSubdivisions = maxSubdivisions;\n    this.subdivided = false;\n  }\n\n  display() {\n    fill(this.color);\n    push();\n    translate(this.x, this.y + this.height / 2, this.z);\n    box(this.width, this.height, this.depth);\n    pop();\n    if (!this.subdivided && this.maxSubdivisions > 0 && random() < 0.2) {\n      this.subdivided = true;\n      this.maxSubdivisions--;\n      let newSize = this.width/2;\n      let building1 = new Building(this.x-newSize, this.z, newSize, this.maxSubdivisions);\n      let building2 = new Building(this.x+newSize, this.z, newSize, this.maxSubdivisions);\n      buildings.push(building1, building2);\n    }\n  }\n  \n  getBoundingBox() {\n    return {\n      minX: this.x - this.width / 2,\n      minY: this.y,\n      minZ: this.z - this.depth / 2,\n      maxX: this.x + this.width / 2,\n      maxY: this.y + this.height,\n      maxZ: this.z + this.depth / 2\n    }\n  }\n  \n  getBottomCenter() {\n    const bbox = this.getBoundingBox();\n    return createVector((bbox.minX + bbox.maxX) / 2, bbox.minY, (bbox.minZ + bbox.maxZ) / 2);\n  }\n}",
    "comments": []
  },
  {
    "_id": "xPGmr58wRXFARnhZf",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T02:53:28.499Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "27c386f0659362003c41d92ea62f0864",
        "public_id": "avalanche2023spring/sigidt4ytgeaztlbwws5",
        "version": 1676602596,
        "version_id": "82cf9759c8a704fa4921e92ed5718a41",
        "signature": "6d2653fb54d232f13e385c5fdf41879e9ba8215d",
        "width": 820,
        "height": 878,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T02:56:36Z",
        "tags": [],
        "pages": 0,
        "bytes": 9602545,
        "type": "upload",
        "etag": "f4cb089aa9fb62d5dbb53152ea4e2a55",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676602596/avalanche2023spring/sigidt4ytgeaztlbwws5.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676602596/avalanche2023spring/sigidt4ytgeaztlbwws5.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676602596/avalanche2023spring/sigidt4ytgeaztlbwws5.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "Main",
          "bit_rate": "6203097",
          "dar": "410:439",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 6279593,
        "duration": 12.233333,
        "rotation": 0,
        "nb_frames": 735,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:10.79Z" }
      }
    ],
    "title": "",
    "description": "Simple sketch inspired by the Circle Grid example, I used the slider value to manipulate the circle grid and diameter",
    "inspiration_name": "Circle Grid Study Example",
    "inspiration_url": "https://compform.net/js_lab/js_lab.html?/noise/sketches/study_2D.js",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\nlet slider;\n\nfunction setup() {\n  createCanvas(400, 400);\n  slider = createSlider(10, 100, 50, 1);\n}\n\nfunction draw() {\n  background(220);\n  noStroke();\n  \n  //map value of slider\n  let size = slider.value();\n  \n  //Draw the grid of cricles\n  for (let x = 0; x <= width; x += size) {\n    for (let y = 0; y <= height; y += size) {\n      // Get noise value for this position\n      let noiseVal = noise(x * 0.01, y * 0.01);\n      // Set fill color based on noise value\n      fill(noiseVal * 255, noiseVal * 255, 300); \n      // circle with diameter based on noise value\n      circle(x, y, size * noiseVal);\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "xT32CXjJ3SsJGTJCw",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-12T02:25:54.604Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "a7ba6a4d220b406bdf62acea10089004",
        "public_id": "avalanche2023spring/beb2nssrzxtzh5vlyvch",
        "version": 1683858358,
        "version_id": "7dbb9eb3135bca8bd2349953dba1b4e9",
        "signature": "a6fffaeea7dc460ec737c4659a5d609f08e30a20",
        "width": 751,
        "height": 749,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-12T02:25:58Z",
        "tags": [],
        "bytes": 53515,
        "type": "upload",
        "etag": "746a4b884aab9d49eec1061276fa90e2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683858358/avalanche2023spring/beb2nssrzxtzh5vlyvch.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683858358/avalanche2023spring/beb2nssrzxtzh5vlyvch.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T04:35:34.733Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T16:17:20.763Z" }
      }
    ],
    "title": "",
    "description": "Second iteration of the individual challenge. Was able to expand on the details I drew and brushed up this sketch to a more presentable state that I'm happy with.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  stroke(255);\n}\n\nfunction draw() {\n  background(50);\n  \n  // Body\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(0, 90);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 3; i++) {\n    myTurtle.moveForward(1000);\n    myTurtle.turnRight(120);\n    //curveSides(myTurtle);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(20, 90);\n  myTurtle.penDown();\n  myTurtle.moveTo(104, 125);\n  myTurtle.penUp();\n  myTurtle.moveTo(10, 105);\n  myTurtle.penDown();\n  myTurtle.moveTo(94, 145);\n  myTurtle.penUp();\n  myTurtle.moveTo(207, 165);\n  myTurtle.penDown();\n  myTurtle.moveTo(500, 275);\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 185);\n  myTurtle.penDown();\n  myTurtle.moveTo(500, 305);\n  \n  // Eye\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(1);\n    myTurtle.turnRight(1);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 116);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(0.7);\n    myTurtle.turnRight(1);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(165, 110);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(0.3);\n    myTurtle.turnRight(1);\n  }\n  \n  // Lips\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(64, 200);\n  myTurtle.penDown();\n  myTurtle.moveTo(150, 300);\n  myTurtle.penUp();\n  myTurtle.moveTo(73, 217);\n  myTurtle.penDown();\n  myTurtle.moveTo(270, 500);\n  \n  myTurtle.pushState();\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(500, 400);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(135);\n    drawGills();\n  }\n  \n  myTurtle.popState();\n  \n  // Gills\n  \n  myTurtle.pushState();\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(350, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(350, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  \n  myTurtle.popState();\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(450, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  \n  noLoop();\n}\n\n/* function curveSides(t) {\n  for(i = 0; i < 3; i++) {\n    t.moveForward(100);\n    t.turnRight(120);\n  }\n} */\n\nfunction drawGills() {\n  for(i = 0; i < 100; i++) {\n    myTurtle.moveForward(3);\n    myTurtle.turnRight(0.5);\n  }\n}",
    "comments": []
  },
  {
    "_id": "xYrbwmCRKbditDppp",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-28T01:04:02.615Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "83ec586df2c7490c51dc24e8a58edf88",
        "public_id": "avalanche2023spring/vueueed4o3luymcshd4e",
        "version": 1674868065,
        "version_id": "09091677abd7e9d25eab31015c1f97c7",
        "signature": "36f79d8dcbc4bde978fa231e2c66e47d0f1b1b37",
        "width": 960,
        "height": 960,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-28T01:07:45Z",
        "tags": [],
        "bytes": 81353,
        "type": "upload",
        "etag": "9e7bc8b0746dc65a825ef24c67378e6e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1674868065/avalanche2023spring/vueueed4o3luymcshd4e.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1674868065/avalanche2023spring/vueueed4o3luymcshd4e.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-02T16:10:29.672Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T06:51:05.965Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:25:14.47Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:25.467Z" }
      }
    ],
    "title": "",
    "description": "Instructions for Group Activity",
    "inspiration_name": "Instructions from Group Activity",
    "comments": []
  },
  {
    "_id": "xZYsjfzsgw45Et5gH",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-17T04:05:54.597Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7b58fa34b0b16235380f5e8d0fb81fe4",
        "public_id": "avalanche2023spring/mdpsjzgfwafhqvxhnjj3",
        "version": 1676606766,
        "version_id": "802d7b866fdcffa9efed30b2d9492dda",
        "signature": "120a207d85c8b936122f88d33b7a7a6e045ae6d9",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-02-17T04:06:06Z",
        "tags": [],
        "pages": 0,
        "bytes": 6719542,
        "type": "upload",
        "etag": "a85dc20b52266373de5589121caf43db",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1676606766/avalanche2023spring/mdpsjzgfwafhqvxhnjj3.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1676606766/avalanche2023spring/mdpsjzgfwafhqvxhnjj3.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1676606766/avalanche2023spring/mdpsjzgfwafhqvxhnjj3.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "mpeg4",
          "level": 1,
          "profile": "Simple Profile",
          "bit_rate": "5363909",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "frame_rate": 60,
        "bit_rate": 5366510,
        "duration": 10.016667,
        "rotation": 0,
        "nb_frames": 601,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Finally got a good way to export ShaderPark code! Here's my take on the map challenge. I used noise to simulate the terrain and water as well as to color the objects. The scene looks better on the ShaderPark site but I like how it looks here too!",
    "code": "//shaderpark link:\n//https://shaderpark.com/embed/-NORMF5Y1eUzQ_fSkDnZ",
    "comments": []
  },
  {
    "_id": "xaJeMZYTQfDetxtmm",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T01:11:05.985Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4701e79b78b77f7241e3f0288410c005",
        "public_id": "avalanche2023spring/shhfodszyzmletuxth9l",
        "version": 1683249076,
        "version_id": "50e603337f1f3c6074401fd34fbe286c",
        "signature": "a6ecd74636df7032a4d1171efbf428e82c2aee3a",
        "width": 716,
        "height": 427,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T01:11:16Z",
        "tags": [],
        "bytes": 9852,
        "type": "upload",
        "etag": "600a25637b6528dd1528dabd23dfd1d5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683249076/avalanche2023spring/shhfodszyzmletuxth9l.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683249076/avalanche2023spring/shhfodszyzmletuxth9l.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T02:17:34.533Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T03:56:20.289Z" }
      }
    ],
    "title": "",
    "description": "Started building a sandcastle! This was more fun than building a stone castle, so I abandoned my other trial.",
    "comments": []
  },
  {
    "_id": "xafACaEZXjZYJBxyt",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-02-28T23:00:01.871Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d036c1d4804ae261fd937181be2961c6",
        "public_id": "avalanche2023spring/gzz0jlvw7sbfwpek7zeu",
        "version": 1677625205,
        "version_id": "42cf7cc4e05679d45e2cade33f7c949f",
        "signature": "06f1223ed29e34de5804524295af1bb2e388b746",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-28T23:00:05Z",
        "tags": [],
        "bytes": 289479,
        "type": "upload",
        "etag": "e204cb44ac6b96e58cb456bd6fe1d10f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677625205/avalanche2023spring/gzz0jlvw7sbfwpek7zeu.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677625205/avalanche2023spring/gzz0jlvw7sbfwpek7zeu.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b36ea42d768d61e8cb0bb26676149197",
        "public_id": "avalanche2023spring/a0lawzwclsn9dmnesdrp",
        "version": 1677625207,
        "version_id": "56b9dc65a5b37f07662db3785e3a40d0",
        "signature": "086850e94253f286b5c1ded2dcf57baba500e8e3",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-28T23:00:07Z",
        "tags": [],
        "bytes": 326777,
        "type": "upload",
        "etag": "8c0403031c649e1345a388879e274f25",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677625207/avalanche2023spring/a0lawzwclsn9dmnesdrp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677625207/avalanche2023spring/a0lawzwclsn9dmnesdrp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T00:54:37.875Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-03T07:58:24.087Z" }
      }
    ],
    "title": "",
    "description": "My extension of the first challenge. Used a nested for loop to distinguish more in the x and y directions. Did some noise math to get these cool patterns",
    "code": "function setup() {\n  createCanvas(800, 800);\n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(100);\n  let noiseScale = .5;\n  for (let i=0; i<50; i++) {\n    for (let j=0; j<50; j++) {\n      let x = (noise(i*noiseScale)*2 - 1) * 400 + 400;\n      let y = (noise(j*noiseScale)*2 - 1) * 400 + 400;\n\n      let d = noise (i * j * noiseScale) * 20 + 5;\n      \n      let h = noise (i * noiseScale, j * noiseScale) * 50 + 10;\n      strokeWeight(.2);\n      fill(h, 90, 50);\n      circle(x, y, d);\n      \n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "xdgxfgYR3wgRxc3uz",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T14:33:31.591Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ec8b2cf196a1a0bf1cf0ca437d4fb2e1",
        "public_id": "avalanche2023spring/mge8jbb8fpvz0zocaazj",
        "version": 1681482824,
        "version_id": "f8faf198070a9b4197a806e164261d55",
        "signature": "e69f3ad76f32652d2af7ae79c85f5e7eedc684b0",
        "width": 1564,
        "height": 540,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T14:33:44Z",
        "tags": [],
        "bytes": 88852,
        "type": "upload",
        "etag": "598004848c1eff7a6ba6ce5642e1e993",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681482824/avalanche2023spring/mge8jbb8fpvz0zocaazj.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681482824/avalanche2023spring/mge8jbb8fpvz0zocaazj.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "92208cb65b256122fd7be72bba6bfbc4",
        "public_id": "avalanche2023spring/e80qmgl3tgxgagwnbszz",
        "version": 1681482884,
        "version_id": "47f6e7045706f471b2da721c73a0616f",
        "signature": "a805505a4b0a99934ccad7396eb5ec5d54614e18",
        "width": 1564,
        "height": 540,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T14:34:44Z",
        "tags": [],
        "bytes": 90169,
        "type": "upload",
        "etag": "a79fe8d9049c4368042158a7bf97f33d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681482884/avalanche2023spring/e80qmgl3tgxgagwnbszz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681482884/avalanche2023spring/e80qmgl3tgxgagwnbszz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6016d7692d786f5df701297b5fbebe3b",
        "public_id": "avalanche2023spring/uu0xxwiorl6hvg2j6seh",
        "version": 1681483286,
        "version_id": "301cc5246051b25b20df56bdddc6811c",
        "signature": "27bdcd881ac24c15e3d942d25332db4da13b46fd",
        "width": 1564,
        "height": 540,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T14:41:26Z",
        "tags": [],
        "bytes": 90484,
        "type": "upload",
        "etag": "07809bcfa1ecbd92c9e6a332bb519aa7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681483286/avalanche2023spring/uu0xxwiorl6hvg2j6seh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681483286/avalanche2023spring/uu0xxwiorl6hvg2j6seh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T15:00:51.649Z" }
      }
    ],
    "title": "",
    "description": "A Netflix description generator using Tracery",
    "comments": []
  },
  {
    "_id": "xhXLwMcztWuNbHt3M",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T15:39:01.492Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8647f41a344b8197f0c4c92c4915e9b3",
        "public_id": "avalanche2023spring/u7ia1rzruxotls3g4hmc",
        "version": 1680277260,
        "version_id": "709f653fee71e347e155e52aa8656b42",
        "signature": "ed86d5d9a4e65f37c929edd39803df5f9f5143b7",
        "width": 1842,
        "height": 1376,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T15:41:00Z",
        "tags": [],
        "bytes": 4482315,
        "type": "upload",
        "etag": "d52dcbec84144019cba90d35cf3680a7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680277260/avalanche2023spring/u7ia1rzruxotls3g4hmc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680277260/avalanche2023spring/u7ia1rzruxotls3g4hmc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "56fb94410d6c14f0985d075beddd52bc",
        "public_id": "avalanche2023spring/ihb1jxh28r2o5kkmdr8c",
        "version": 1680277333,
        "version_id": "1137b1090c7a930da6c70aee5e610854",
        "signature": "ddafa2467acad702907f66b671de68a8bcf686df",
        "width": 2044,
        "height": 1340,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-31T15:42:13Z",
        "tags": [],
        "pages": 0,
        "bytes": 6555637,
        "type": "upload",
        "etag": "5f3a337ec2111c1f0b653afaadc8c150",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680277333/avalanche2023spring/ihb1jxh28r2o5kkmdr8c.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680277333/avalanche2023spring/ihb1jxh28r2o5kkmdr8c.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680277333/avalanche2023spring/ihb1jxh28r2o5kkmdr8c.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "130358",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "5207442",
          "dar": "511:335",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5564860,
        "duration": 9.424333,
        "rotation": 0,
        "nb_frames": 578,
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T15:44:46.167Z" }
      },
      {
        "voter_id": "eeksZiGaSD3xMNF54",
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T19:03:50.84Z" }
      }
    ],
    "title": "",
    "description": "My attempt at recording a song without using code. I can't stop laughing. Shoutout to my amazing band",
    "comments": []
  },
  {
    "_id": "xmWy2u6eh5e5WJFJa",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T05:28:37.396Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "b0d2acda80a16e08aa938571772e1213",
        "public_id": "avalanche2023spring/gnrw2yhyeuzqibnxaame",
        "version": 1678426132,
        "version_id": "062368a5ff11102337fed1ce0e537e04",
        "signature": "fab50de7b6818c91e2b483e1a1c758c3cf85df65",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-10T05:28:52Z",
        "tags": [],
        "bytes": 138602,
        "type": "upload",
        "etag": "17514a7740c7dffa7989af5663376a49",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678426132/avalanche2023spring/gnrw2yhyeuzqibnxaame.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678426132/avalanche2023spring/gnrw2yhyeuzqibnxaame.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:43.093Z" }
      }
    ],
    "title": "",
    "description": "Playing with pixels!",
    "comments": []
  },
  {
    "_id": "xqqt6Ggj4pL5d88WX",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T02:53:59.097Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c5dc3688917269511601f44a38402168",
        "public_id": "avalanche2023spring/zxqwzft0xqrr0ksvyjqi",
        "version": 1680836045,
        "version_id": "4f78a77d0898892eb2d95431831ff65d",
        "signature": "53b019a03a61ec33540c88e0bd0ca87861009bb9",
        "width": 1002,
        "height": 1000,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T02:54:05Z",
        "tags": [],
        "pages": 0,
        "bytes": 448063,
        "type": "upload",
        "etag": "8aecd93ca315e9a2ba0498f3723147d6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680836045/avalanche2023spring/zxqwzft0xqrr0ksvyjqi.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680836045/avalanche2023spring/zxqwzft0xqrr0ksvyjqi.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680836045/avalanche2023spring/zxqwzft0xqrr0ksvyjqi.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "102693",
          "dar": "501:500",
          "time_base": "1/6000"
        },
        "frame_rate": 60,
        "bit_rate": 135776,
        "duration": 26.4,
        "rotation": 0,
        "nb_frames": 1579,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:48:12.344Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T12:08:31.047Z" }
      }
    ],
    "title": "",
    "comments": [],
    "code": "// initialize variables\nlet playerX = 50;\nlet playerY = 50;\nlet playerSize = 20;\nlet playerSpeed = 5;\nlet coinX;\nlet coinY;\nlet coinSize = 15;\nlet score = 0;\nlet obstacleX = 300;\nlet obstacleY = 100;\nlet obstacleWidth = 50;\nlet obstacleHeight = 80;\n\nfunction setup() {\n  createCanvas(500, 500);\n  // set the initial position of the coin randomly\n  coinX = random(width - coinSize);\n  coinY = random(height - coinSize);\n}\n\nfunction draw() {\n  background(200);\n\n  // move the player based on arrow key inputs\n  if (keyIsDown(LEFT_ARROW)) {\n    playerX -= playerSpeed;\n  }\n  if (keyIsDown(RIGHT_ARROW)) {\n    playerX += playerSpeed;\n  }\n  if (keyIsDown(UP_ARROW)) {\n    playerY -= playerSpeed;\n  }\n  if (keyIsDown(DOWN_ARROW)) {\n    playerY += playerSpeed;\n  }\n\n  // check if the player has collided with the coin\n  if (dist(playerX, playerY, coinX, coinY) < playerSize/2 + coinSize/2) {\n    // increase the score and reset the coin's position\n    score++;\n    coinX = random(width - coinSize);\n    coinY = random(height - coinSize);\n  }\n\n  // check if the player has collided with the obstacle\n  if (playerX + playerSize > obstacleX &&\n      playerX < obstacleX + obstacleWidth &&\n      playerY + playerSize > obstacleY &&\n      playerY < obstacleY + obstacleHeight) {\n    // reset the player's position and score\n    playerX = 50;\n    playerY = 50;\n    score = 0;\n  }\n\n  // draw the player, coin, and obstacle\n  fill(255, 0, 0);\n  rect(obstacleX, obstacleY, obstacleWidth, obstacleHeight);\n  fill(255, 255, 0);\n  ellipse(coinX, coinY, coinSize);\n  fill(0, 0, 255);\n  rect(playerX, playerY, playerSize, playerSize);\n\n  // display the score\n  textSize(24);\n  fill(0);\n  text(`Score: ${score}`, 20, 30);\n}"
  },
  {
    "_id": "xtPANFos22cvNqCuh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-10T02:29:21.009Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "caab538bfa16f2f7c50147992723ba89",
        "public_id": "avalanche2023spring/cokch8jqouga4psku4d1",
        "version": 1678415367,
        "version_id": "5bbd05176ba4092f5c9898b323bfca7e",
        "signature": "c5fb0619506d42667fd68ba23a4aace3ef046a2f",
        "width": 3200,
        "height": 3200,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-10T02:29:27Z",
        "tags": [],
        "bytes": 3313292,
        "type": "upload",
        "etag": "937f1ffa3c3a9f79663158d25bd7f8e4",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678415367/avalanche2023spring/cokch8jqouga4psku4d1.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678415367/avalanche2023spring/cokch8jqouga4psku4d1.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:47:29.261Z" }
      }
    ],
    "title": "",
    "description": "Using Justin's heart sketch from the noise week as input, tried to create a chaotic mosaic visual",
    "code": "let img;\n\nfunction preload() {\n  img = loadImage('heart.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  image(img, 0, 0);\n  \n  // Get pixel values\n  loadPixels();\n  let tileSize = 10;\n  for (let x = 0; x < img.width; x += tileSize) {\n    for (let y = 0; y < img.height; y += tileSize) {\n      let tileX = x + tileSize / 2;\n      let tileY = y + tileSize / 2;\n      let index = (tileX + tileY * img.width) * 4;\n      let r = pixels[index];\n      let g = pixels[index + 1];\n      let b = pixels[index + 2];\n      \n      // Draw random mosaic tile\n      noStroke();\n      fill(r, g, b, 100);\n      push();\n      translate(x, y);\n      rotate(random(-PI/4, PI/4));\n      rect(0, 0, tileSize + random(-5, 5), tileSize + random(-5, 5));\n      pop();\n    }\n  }\n}",
    "comments": []
  },
  {
    "_id": "xwQKf57co4PrqqQAd",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T12:36:39.372Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d9fb2720ab458eaa0413ae865de8b199",
        "public_id": "avalanche2023spring/ggj8aqxh5ls01qzcr9cp",
        "version": 1680871005,
        "version_id": "d64722ebbd7593897c6e8ba7ce46f904",
        "signature": "82e57e91e7db829c0271303fdf068dd60e40dae2",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-07T12:36:45Z",
        "tags": [],
        "pages": 0,
        "bytes": 20806562,
        "type": "upload",
        "etag": "419f80bdfd72c7282244f8c1cb9ebeaa",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680871005/avalanche2023spring/ggj8aqxh5ls01qzcr9cp.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680871005/avalanche2023spring/ggj8aqxh5ls01qzcr9cp.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680871005/avalanche2023spring/ggj8aqxh5ls01qzcr9cp.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "2274",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 42,
          "profile": "High",
          "bit_rate": "4992001",
          "dar": "16:9",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 5003531,
        "duration": 33.266667,
        "rotation": 0,
        "nb_frames": 1996,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T13:52:45.247Z" }
      }
    ],
    "title": "",
    "description": "you are baby. baby do not like brogli",
    "code": "let baby, bottomBox;\nlet babyImg, brogliImg;\nlet allBrogli\nlet bottomBounds\nfunction preload() {\n  babyImg = loadImage('bebe.png')\n  brogliImg = loadImage('brogli.png')\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  allBrogli = new Group()\n  babyImg.resize(110, 0)\n  brogliImg.resize(82, 0)\n  baby = createSprite(400+(110/2), 600, 100, 307);\n  baby.addImage(babyImg);\n  bottomBounds = createSprite(0, 810, 1600, 10)\n  for (let i = 0; i < 20; i++) {\n    let brogli = createSprite(0, -100 , 82, 78);\n    brogli.addToGroup(allBrogli)\n    brogli.addImage(brogliImg)\n    brogli.rotation = 180\n\n  }\n}\nlet initGameState = 0\nlet gameOverState = 0\nlet brogliOverlap = 0\nlet speedIncrease = 0;\nlet gameCount = 0\nfunction draw() {\n  background(227, 196, 242);\n  textAlign(CENTER)\n  let time = millis();\n  if (time > 1000) {\n    textSize(48)\n    text('you are baby', 400, 200)\n  }\n\n  if (time > 2000) {\n    textSize(48)\n    text('baby do not like brogli', 400, 270)\n  }\n\n  if (time > 4000) {\n    push();\n    strokeWeight(0)\n    fill(227,196,242)\n    rect(160, 160, 500, 200)\n    pop();\n  }\n\n  if ( time > 4000 && initGameState === 0) {\n    push();\n    strokeWeight(0)\n    fill(227,196,242)\n    rect(160, 160, 500, 200)\n    textSize(62)\n    fill('black')\n    text('AVOID!!!', 400, 230)\n    pop();\n  }\n\n  if (time > 4000 && initGameState === 0) {\n    initGameState = 1\n    initGame()\n  }\n  drawSprites()\n  if (keyDown(37)) {\n    baby.position.x -= 10;\n\n  }\n\n  if (keyDown(39)) {\n    baby.position.x += 10;\n  }\n\n  if (baby.collide(allBrogli)) {\n\n    gameOverState = 1\n  }\n\n  if (gameOverState === 1 ) {\n\n    endGame();\n    push();\n    strokeWeight(0)\n    fill(227,196,242)\n    rect(140, 160, 520, 200)\n    textSize(38)\n    fill('black')\n    text('there is no win against brogli', 400, 220)\n    textSize(30)\n    text('the struggle continues', 400, 280)\n    text('press space to tread forth', 400, 320)\n    pop();\n  }\n\n  if (gameOverState === 1 && keyWentDown(32) ) {\n    resetGame()\n    gameOverState = 0\n    baby.position.y = 600\n    baby.position.x = 400+(110/2)\n    speedIncrease = 0\n  }\n\n  if (allBrogli.overlap(bottomBounds)) {\n    brogliOverlap = 1\n    console.log(brogliOverlap)\n  }\n\n  if (brogliOverlap === 1) {\n    console.log('game reset')\n    resetGame();\n    brogliOverlap = 0\n  }\n  \n}\n\nfunction endGame() {\n  for (let i = 0; i < allBrogli.length; i++) {\n    allBrogli[i].setVelocity(0,0);\n    allBrogli[i].position.y = Math.floor(Math.random() * 600 + 100)\n    allBrogli[i].position.x = Math.floor(Math.random() * 600 + 100)\n  }\n}\n\nfunction resetGame() {\n  speedIncrease += .5\n  for (let i = 0; i < allBrogli.length; i++) {\n    allBrogli[i].setVelocity(0,0);\n    allBrogli[i].position.y = -100\n    \n  }\n  initGame()\n}\n\nfunction initGame() {\n  console.log('game init')\n\n  let safePoint = Math.floor(Math.random() * 400 + 200);\n  let lowerDiv = (safePoint - 200) / (allBrogli.length / 2)\n  let higherDiv = (700 - (safePoint + 200)) / (allBrogli.length / 2)\n  for (let i = 0; i < allBrogli.length; i++) {\n    allBrogli[i].position.y = Math.random() * 80 + 10;\n\n    if ( i < allBrogli.length / 2) {\n      let distX = 100 + (lowerDiv*i)\n      allBrogli[i].position.x = distX; \n    } else {\n      let distX = (safePoint + 100) + (higherDiv * i)\n      allBrogli[i].position.x = distX; \n    }\n    allBrogli[i].setVelocity(0, 4 + speedIncrease)\n  }\n}",
    "comments": [
      {
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "comment": "brogli 😭",
        "created_at": { "$date": "2023-04-07T13:52:43.157Z" }
      }
    ]
  },
  {
    "_id": "xxieCRS46H3AByPEE",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-02T15:15:40.282Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "8cf47dab768ae076385138fa88a25255",
        "public_id": "avalanche2023spring/ijehmjluhsmqn0ytd4je",
        "version": 1675350983,
        "version_id": "5bb59ccf496cc26cbb73f50643eccc69",
        "signature": "d00ab4894482139c2779e543c24b5e110db3e0b2",
        "width": 3508,
        "height": 5807,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-02T15:16:23Z",
        "tags": [],
        "bytes": 3310460,
        "type": "upload",
        "etag": "00c9b8dd7584c04a84a4956f4a82d3fc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675350983/avalanche2023spring/ijehmjluhsmqn0ytd4je.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675350983/avalanche2023spring/ijehmjluhsmqn0ytd4je.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-03T14:26:55.746Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "nerdy",
        "created_at": { "$date": "2023-02-10T02:00:44.236Z" }
      }
    ],
    "title": "",
    "description": "Poster using Juliana's instructions",
    "comments": []
  },
  {
    "_id": "xxjMq4SLa3tRNkxx8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": { "$date": "2023-04-28T06:19:04.498Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37dde3d1c131ad5ddd7f21cee7977207",
        "public_id": "avalanche2023spring/dlko9y9ikygyzqv4oxed",
        "version": 1682662749,
        "version_id": "1984500a16d610a332ccb45ab436234a",
        "signature": "ef3185b8038eb9a86bba8277cbdbe35b37a9ac18",
        "width": 734,
        "height": 920,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-28T06:19:09Z",
        "tags": [],
        "bytes": 68753,
        "type": "upload",
        "etag": "2e890e1679fbe1b18996cf2d481e34cd",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682662749/avalanche2023spring/dlko9y9ikygyzqv4oxed.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682662749/avalanche2023spring/dlko9y9ikygyzqv4oxed.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "lesson": "API",
    "title": "",
    "description": "Super simple sketch where I made a standings table using the Football API! I decided to use the current standings for the Brazilian Serie A. I was actually surprised that there's a free-to-use API for almost every major sport and it's all incredibly well-maintained and documented, who knew?",
    "code": "const url = 'https://api-football-v1.p.rapidapi.com/v3/standings?season=2023&league=71';\nconst options = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'content-type': 'application/octet-stream',\n\t\t'X-RapidAPI-Key': '0b101e81b2mshd4f788c3dbddae8p13f927jsn98ed3394b228',\n\t\t'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n\t}\n};\n\n  fetch(url, options)\n  .then(response => response.json())\n  .then(data => buildSite(data.response[0]))\n  .catch(error => console.error(error))\n\n\n  function buildSite(data) {\n    const main = document.getElementById('main')\n \n    main.innerHTML = `\n      <header>\n      <img src='${data.league.logo}'>\n      <h1>${data.league.name}</h1>\n\n      </header>\n      <article id='standings'></article>\n    `\n    const standingsContainer = document.getElementById('standings')\n    const topEntry = document.createElement('section')\n\n    topEntry.innerHTML = `\n    <section class='rank'>\n\n    </section>\n\n    <h3 class='name'>Team Name</h3>\n\n    <section class='points'>\n    League Points\n    </section>\n\n    <section class='goals-diff'>\n    Goal Differential\n    </section>\n    \n    `\n    topEntry.classList.add('team')\n    topEntry.classList.add('top')\n    standingsContainer.append(topEntry)\n    data.league.standings[0].forEach(team => {\n      const currentTeamEntry = document.createElement('section')\n\n      currentTeamEntry.innerHTML = `\n      <section class='rank'>\n      ${team.rank}\n      </section>\n\n      <h3 class='name'>${team.team.name}</h3>\n\n      <section class='points'>\n      ${team.points}\n      </section>\n\n      <section class='goals-diff'>\n      ${team.goalsDiff}\n      </section>\n      \n      `\n      currentTeamEntry.classList.add('team')\n      standingsContainer.append(currentTeamEntry)\n    });\n    console.log(data.league.standings[0][0])\n  }",
    "comments": []
  },
  {
    "_id": "xzeh7CQkAfgSPk3tK",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-21T14:31:46.781Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "54d0a154428bcdc0543a029a7846713f",
        "public_id": "avalanche2023spring/bozg6wbywxcivl9sr4lb",
        "version": 1682087562,
        "version_id": "c51d36b0176d8a9d25e5ac605c874102",
        "signature": "98426c5e5df1ec26c2fd0aeef646d4828882e8ec",
        "width": 568,
        "height": 558,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:32:42Z",
        "tags": [],
        "bytes": 332776,
        "type": "upload",
        "etag": "c4ca4160e1269970a593342ff0e47a1c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682087562/avalanche2023spring/bozg6wbywxcivl9sr4lb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682087562/avalanche2023spring/bozg6wbywxcivl9sr4lb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "c487c2bbc140fe9a9888a223c5c0fdd9",
        "public_id": "avalanche2023spring/rqwe1ppub8tigzjgrs7y",
        "version": 1682087614,
        "version_id": "2ec704be5553dce46829b74cbc99e0ff",
        "signature": "80ef2725f3fa95954b1753e4d18230ee30aa59cd",
        "width": 572,
        "height": 564,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:33:34Z",
        "tags": [],
        "bytes": 562945,
        "type": "upload",
        "etag": "a1fb88c6289638ae786caa1fe5f099fe",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682087614/avalanche2023spring/rqwe1ppub8tigzjgrs7y.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682087614/avalanche2023spring/rqwe1ppub8tigzjgrs7y.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "1c8116f5030b1d82e598d49f2740a1f4",
        "public_id": "avalanche2023spring/g0folbgazbcwz1bnt9po",
        "version": 1682087624,
        "version_id": "faa5e7966171f6fad2c163ff21467326",
        "signature": "f8a747902e44c58f7f701e596d1591a96f0f9438",
        "width": 568,
        "height": 566,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-21T14:33:44Z",
        "tags": [],
        "bytes": 606822,
        "type": "upload",
        "etag": "71aa585a262918fa91d2a8bc0cc8b869",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682087624/avalanche2023spring/g0folbgazbcwz1bnt9po.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682087624/avalanche2023spring/g0folbgazbcwz1bnt9po.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T15:24:34.344Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-21T16:08:26.056Z" }
      }
    ],
    "title": "",
    "description": "WEEK 11 ( 3/4): I wanted to use Midjourney so badly but it kept asking me to pay so I tried to look for other AI image/art generators and fed it prompts for my strawberry themed game and to create a cgi character of my cat for my animation finals. ( I now have a folder of 50+ images to help me with my animation moodboard and character creation ideas.) These were the cutest ones I found.",
    "comments": []
  },
  {
    "_id": "y2JF9rjKBGqroQcJA",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-31T17:52:00.878Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e530c07b12a4b092659ad5cb26114266",
        "public_id": "avalanche2023spring/bqmfj6vbacuvgicfycmg",
        "version": 1680285147,
        "version_id": "f1e8571f283201f1e6dbca071dc0ae59",
        "signature": "9c5f6dc81973512e7b613ab1cb2d34d0d7ddaeab",
        "width": 3584,
        "height": 1838,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-31T17:52:27Z",
        "tags": [],
        "bytes": 2221604,
        "type": "upload",
        "etag": "84bde338314d017e3ae5d22aa7cf4b6b",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680285147/avalanche2023spring/bqmfj6vbacuvgicfycmg.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680285147/avalanche2023spring/bqmfj6vbacuvgicfycmg.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "tried to make a music player",
    "code": "// Display Operator\n\nfunction set(op) {\n    document.getElementById(\"display\").value += op;\n    document.getElementById(\"display-mobile\").value += op;\n    console.log(op)\n}\n\n// Operation functions\n\nfunction sine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.sin(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.sin(tempStoreM));\n}\n\nfunction cosine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.cos(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.cos(tempStoreM));\n}\n\nfunction tan() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.tan(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.tan(tempStoreM));\n}\n\nfunction asine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.asin(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.asin(tempStoreM));\n}\n\nfunction acosine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.acos(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.acos(tempStoreM));\n\n}\n\nfunction atan() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.atan(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.atan(tempStoreM));\n\n}\n\nfunction sqrRoot() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.sqrt(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.sqrt(tempStoreM));\n\n}\n\nfunction fLog() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.log(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.log(tempStoreM));\n \n}\n\n// Result function \n\nfunction answer() {\n    let phrase = random();\n    let gentext = document.querySelector(\".genText\")\n    gentext.innerHTML=phrase\n    let Exp = document.getElementById(\"display\");\n    Exp.value = 1;\n    let Exp1 = document.getElementById(\"display-mobile\");\n    Exp1.value = 1;\n    if (randomNum < 6) {\n        randomNum = randomNum + 1;\n    } else {\n        randomNum = 0;\n    }\n}\n\ndocument.addEventListener(\"keyup\", function(event) {\n    if (event.code === 'Enter') {\n    answer();\n    }\n});\n\n// CE and AC functions\n\nfunction ce() {\n    let elem = document.getElementById(\"display\").value;\n    let elem1 = document.getElementById(\"display-mobile\").value;\n    let length = elem.length;\n    length--;\n    let a = elem.substr(0, length);\n    document.getElementById(\"display\").value = a;\n    let b = elem1.substr(0, length);\n    document.getElementById(\"display-mobile\").value = b;\n}\n\nfunction ac() {\n    let elem = document.getElementById(\"display\").value;\n    let elem1 = document.getElementById(\"display-mobile\").value;\n    let length = 0;\n    let a = elem.substr(0, length);\n    let b = elem1.substr(0, length);\n    document.getElementById(\"display\").value = a;\n    document.getElementById(\"display-mobile\").value = b;\n}\n\n// Randomm text generated after result \n \nlet randomNum = 0;\n\nfunction random() {\n    // let randomNum = Math.floor(Math.random() * 7);   \n    let phrase;\n    switch (randomNum) {\n        case 0:\n        phrase = `wow you're fucking dumb <img class=\"emoji\" src=\"assets/crying.png\"><img class=\"emoji\" src=\"assets/crying.png\">`;\n        break;\n        case 1:\n        phrase = `you can't even do basic math <img class=\"emoji\" src=\"assets/skull.png\">`;\n        break;\n        case 2:\n        phrase = \"lmao\";\n        break;\n        case 3:\n        phrase = \"you're a failure\";\n        break;\n        case 4:\n        phrase = `are you even trying <img class=\"emoji\" src=\"assets/crying.png\">`;\n        break;\n        case 5:\n        phrase = \"you're a failure\";\n        break;\n        case 6:\n        phrase = \"just give up man\";\n    }\n    return phrase;\n}\n\n// Fx and 123 table on mobile view\n\nlet table1 = document.querySelector(\".table1\")\nlet table2 = document.querySelector(\".table2\")\n\nlet e1 = document.querySelector(\".e1\")\nlet e2 = document.querySelector(\".e2\");\n\ne1.onclick = function() {\n    table1.classList.remove(\"hide\");\n    table2.classList.add(\"hide\");\n    e1.classList.add(\"active\");\n    e2.classList.remove(\"active\");\n\n}\n\ne2.onclick = function() {\n    table1.classList.add(\"hide\");\n    table2.classList.remove(\"hide\");\n    e1.classList.remove(\"active\");\n    e2.classList.add(\"active\");\n}\n\n// Rad and Deg \n\nlet btnRadM = document.querySelector(\"#btnRadM\");\nlet btnDegM = document.querySelector(\"#btnDegM\");\n\nbtnDegM.onclick = function() {\n    btnDegM.classList.add(\"btnBorder\");\n    btnRadM.classList.remove(\"btnBorder\");\n}\n\nbtnRadM.onclick = function() {\n    btnRadM.classList.add(\"btnBorder\");\n    btnDegM.classList.remove(\"btnBorder\");\n}\n\nlet btnRad = document.querySelector(\"#btnRad\");\nlet btnDeg = document.querySelector(\"#btnDeg\");\n\nbtnDeg.onclick = function() {\n    btnDeg.classList.add(\"btnBorder\");\n    btnRad.classList.remove(\"btnBorder\");\n}\n\nbtnRad.onclick = function() {\n    btnRad.classList.add(\"btnBorder\");\n    btnDeg.classList.remove(\"btnBorder\");\n}",
    "comments": []
  },
  {
    "_id": "y82w2qHxqNHhJkMMe",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-07T02:46:03.113Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dd25ae448707baf0604e1ad4933c73b8",
        "public_id": "avalanche2023spring/qq5eo7qqz328bwgkaeo7",
        "version": 1678157167,
        "version_id": "19ee00f60ecd4aeb19353789c3109427",
        "signature": "889cd9a2fd3bdbc55a8673ec055c5d9144dd52f8",
        "width": 599,
        "height": 598,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-03-07T02:46:07Z",
        "tags": [],
        "bytes": 96380,
        "type": "upload",
        "etag": "c76422a35c662aed096e61444aacac25",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678157167/avalanche2023spring/qq5eo7qqz328bwgkaeo7.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678157167/avalanche2023spring/qq5eo7qqz328bwgkaeo7.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:46:03.774Z" }
      }
    ],
    "title": "",
    "description": "Wanted to create something else but it wasn't working out the way I wanted it to. Instead I ended up taking my work and made a pixel gradient grid that is influenced by user inputs for each of the hues.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet c;\nlet r;\nlet g;\nlet b;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  createP(\"Red\");\n  r_slider = createSlider(0, 255, 50);\n  \n  createP(\"Green\");\n  g_slider = createSlider(0, 255, 50);\n  \n  createP(\"Blue\");\n  b_slider = createSlider(0, 255, 50);\n}\n\nfunction draw() {\n  background(10);\n  \n  img = createImg(600, 600);\n  loadPixels();\n  \n  r = r_slider.value();\n  g = g_slider.value();\n  b = b_slider.value();\n  \n  for(y = 0; y < height; y = y + 10) {\n    for(x = 0; x < width; x = x + 10) {\n        c = color(y * (r/50), x * (g/50), y * b/50);\n        set(x, y, c);\n    }\n  }\n  \n  updatePixels();\n  image(img, 0, 0, width, height);\n}",
    "comments": []
  },
  {
    "_id": "y8y2DEihNwwR8rE3M",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-02-01T09:43:49.14Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4a8b3bd258d12531a9dccc6596ef2574",
        "public_id": "avalanche2023spring/y5vaog0ohs94kwkwc9ig",
        "version": 1675244635,
        "version_id": "974c9f20f3c406f5dc8bad78a04c67f6",
        "signature": "8eebab327c21da36bec286661b10cccae81ecc1b",
        "width": 1500,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T09:43:55Z",
        "tags": [],
        "bytes": 625609,
        "type": "upload",
        "etag": "fc22437420876a4dc048b52e80ee7021",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675244635/avalanche2023spring/y5vaog0ohs94kwkwc9ig.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675244635/avalanche2023spring/y5vaog0ohs94kwkwc9ig.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "6f01ad40082e97ae6071ca6b1843853a",
        "public_id": "avalanche2023spring/bmosuzdq5su2dqq0eglo",
        "version": 1675244713,
        "version_id": "9707e4a22f25d2dafb99152d69163503",
        "signature": "3e70a4f9b27291f6611d31e14bebd9d993e2bd6c",
        "width": 565,
        "height": 467,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-02-01T09:45:13Z",
        "tags": [],
        "bytes": 47628,
        "type": "upload",
        "etag": "6e0ef9ed93c332b232edd302b5a8d733",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675244713/avalanche2023spring/bmosuzdq5su2dqq0eglo.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675244713/avalanche2023spring/bmosuzdq5su2dqq0eglo.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-02T02:02:08.941Z" }
      }
    ],
    "title": "",
    "description": "Thought I'd do a sketch following my own instructions.",
    "comments": []
  },
  {
    "_id": "yQKbLcj8PpqrNwKYP",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-03T04:01:36.198Z" },
    "posted": false,
    "cloudinary_media": [{}, {}, {}],
    "votes": [
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-03-03T16:09:50.78Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-03-24T02:06:31.475Z" }
      }
    ],
    "title": "",
    "description": "",
    "inspiration_name": "",
    "inspiration_url": "",
    "code": "",
    "comments": []
  },
  {
    "_id": "yh42KRaWciJnJGgTc",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-20T23:37:51.499Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37bbdf8b74e37e81534699a946706a9e",
        "public_id": "avalanche2023spring/w89uffngp5gbtwrprdlb",
        "version": 1676936299,
        "version_id": "7a16fce089a6f278e66f943a0208b6d7",
        "signature": "857b4464238707129e5a374f37fc32dbb5558aed",
        "width": 601,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-20T23:38:19Z",
        "tags": [],
        "bytes": 327756,
        "type": "upload",
        "etag": "b0a5603392fea91c7298c5a79ce6730f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676936299/avalanche2023spring/w89uffngp5gbtwrprdlb.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676936299/avalanche2023spring/w89uffngp5gbtwrprdlb.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "e1284cb9f2290e7aee60f12ff72c3300",
        "public_id": "avalanche2023spring/knvqipuzipdzhjy2f0lc",
        "version": 1676936320,
        "version_id": "958b69cae3c869db6ee07f1f5d69a4b3",
        "signature": "323f81ea85adea6231e5720cbdadb36de6b5fad1",
        "width": 598,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-20T23:38:40Z",
        "tags": [],
        "bytes": 336222,
        "type": "upload",
        "etag": "eadf8c3cd0a7759e376d0d6be591db93",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676936320/avalanche2023spring/knvqipuzipdzhjy2f0lc.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676936320/avalanche2023spring/knvqipuzipdzhjy2f0lc.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "0e08a3f584cd50d58760edce89e8243e",
        "public_id": "avalanche2023spring/zhqfx0vnebnvewjqrnrw",
        "version": 1676936323,
        "version_id": "62e5b21a0dbdd491d5ac81aba831b080",
        "signature": "b4c0902f678c4be3fe67bdbe6e1218886a9be36e",
        "width": 595,
        "height": 783,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-20T23:38:43Z",
        "tags": [],
        "bytes": 347717,
        "type": "upload",
        "etag": "01894b2d3438b3daae35694dd847b9b5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676936323/avalanche2023spring/zhqfx0vnebnvewjqrnrw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676936323/avalanche2023spring/zhqfx0vnebnvewjqrnrw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T00:15:12.039Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T00:19:28.675Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T02:00:38.157Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T06:00:16.951Z" }
      },
      {
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-21T23:39:13.498Z" }
      },
      {
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T00:15:05.891Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-22T10:26:30.674Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-02-23T16:55:37.57Z" }
      }
    ],
    "title": "",
    "description": "Goofy sketch for the face generator. I used clippings from various fruit still lifes and parameterized their positions to generate faces with them! Would've like to add some sort of background/head but ran out of time",
    "code": "// p5js editor link:\n//https://editor.p5js.org/avs-codes/sketches/jw6vEnf5Q",
    "comments": []
  },
  {
    "_id": "yrs6XMngkj9LvuAzR",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-07T01:13:35.683Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "bf381a6da857f110512c71ca861b659d",
        "public_id": "avalanche2023spring/vgxotiln6bvetehbyog4",
        "version": 1680830037,
        "version_id": "33889f5e97ae9896e012699f0986e1e9",
        "signature": "4192c834b1348a1fe73f8142c3842f071d946215",
        "width": 897,
        "height": 912,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-07T01:13:57Z",
        "tags": [],
        "bytes": 42800,
        "type": "upload",
        "etag": "d7691d45f414c1d4c44a2bfe4850edb7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680830037/avalanche2023spring/vgxotiln6bvetehbyog4.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680830037/avalanche2023spring/vgxotiln6bvetehbyog4.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-07T03:47:17.899Z" }
      }
    ],
    "title": "",
    "description": "Tackled the challenge for this week. Created a microgame where two players have to cooperate to keep a block from breaking the floor by jumping up and pushing the block. Didn't have enough time to iron out the bugs though so there may be some issues here and there.\n\nPlayer on left uses s, f, e and Player on the right uses the arrow keys.",
    "code": "function setup() {\n  createCanvas(600, 800);\n  world.gravity.y = 10;\n\n  // Establish sprites\n  \n  player1 = new Sprite();\n  player1.x = 200;\n  player1.y = 600;\n  player1.collision = 'kinematic';\n  \n  player2 = new Sprite();\n  player2.x = 400;\n  player2.y = 600;\n  player2.collision = 'kinematic';\n  \n  obstacle = new Sprite();\n  obstacle.y = 100;\n  obstacle.width = random(100, 400);\n  obstacle.height = random(100, 400);\n  \n  floor = new Sprite(400, 700, 800, 30, 'static');\n}\n\nfunction draw() {\n  background(220);\n  \n  // Establish movement\n  \n  // Player 1 - use s, f, e\n  \n  if(kb.pressing('s')) {\n    player1.vel.x = -3;\n  } else if(kb.pressing('f')) {\n    player1.vel.x = 3;\n  } else if(kb.pressing('e')) {\n    player1.vel.y = -5;\n  } else {\n    player1.vel.x = 0;\n  }\n  \n  // Player 2 - uses arrow keys\n  \n  if(kb.pressing('left')) {\n    player2.vel.x = -3;\n  } else if(kb.pressing('right')) {\n    player2.vel.x = 3;\n  } else if(kb.pressing('up')) {\n    player2.vel.y = -5;\n  } else {\n    player2.vel.x = 0;\n  }\n  \n  // Establish lose condition\n  \n  if(obstacle.collides(floor)) {\n    floor.collider = 'dynamic';\n  }\n}",
    "comments": []
  },
  {
    "_id": "ysv5ZaRKABmiuBvmR",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "lesson": "Params",
    "created_at": { "$date": "2023-02-27T16:42:27.418Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "e1ca3e969306f5ef79cf9c39be00bc27",
        "public_id": "avalanche2023spring/xml7hgaodoqp23c2odbc",
        "version": 1677516192,
        "version_id": "cfb5ea20240a55d43338f7e6ee2f0e75",
        "signature": "090b4c13cf4bda95582d78458ab2661b9774b4bb",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-02-27T16:43:12Z",
        "tags": [],
        "pages": 0,
        "bytes": 9527418,
        "type": "upload",
        "etag": "3c3ccdfd778dd9fc98cddedc2a0c985d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677516192/avalanche2023spring/xml7hgaodoqp23c2odbc.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677516192/avalanche2023spring/xml7hgaodoqp23c2odbc.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677516192/avalanche2023spring/xml7hgaodoqp23c2odbc.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "192138",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Constrained Baseline",
          "bit_rate": "2720363",
          "dar": "1:1",
          "time_base": "1/15360"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 2912025,
        "duration": 26.127007,
        "rotation": 0,
        "nb_frames": 783,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:31:17.623Z" }
      }
    ],
    "title": "",
    "description": "Pair challenge with Keren's code, I loved her flower pattern, I decided to make one of the circles look like rain, so the whole composition looks like a field of flowers in the rain",
    "comments": []
  },
  {
    "_id": "yswJoi6KskXpQncHa",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Creative AI",
    "created_at": { "$date": "2023-04-24T22:04:23.049Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7aee42fd0be2dd256bd5ce28d7a66a56",
        "public_id": "avalanche2023spring/twnzwtojeebae6obsx2w",
        "version": 1682373892,
        "version_id": "35211296c29fc4220657595fb994ec14",
        "signature": "3b59d9c388d669d6e0db57a10ba48f28fb8c7dab",
        "width": 2136,
        "height": 1099,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-24T22:04:52Z",
        "tags": [],
        "bytes": 216266,
        "type": "upload",
        "etag": "4d9a8a91e39f2e6ea4d4858b279373f5",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682373892/avalanche2023spring/twnzwtojeebae6obsx2w.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682373892/avalanche2023spring/twnzwtojeebae6obsx2w.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8d017f92bc2c8a3a9fbd55158a93ae61",
        "public_id": "avalanche2023spring/iy2sh18qprvze3qi55pk",
        "version": 1682373894,
        "version_id": "e0ec1b227290fb76717bad2aab128b48",
        "signature": "6484553069f493dc49d81169f40d8ca0fe776f37",
        "width": 1296,
        "height": 1043,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-24T22:04:54Z",
        "tags": [],
        "bytes": 112733,
        "type": "upload",
        "etag": "7c94202e3a55aeace52fe900bf88e1c2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682373894/avalanche2023spring/iy2sh18qprvze3qi55pk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682373894/avalanche2023spring/iy2sh18qprvze3qi55pk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "2c038512311e54c239408134645c3f10",
        "public_id": "avalanche2023spring/kcbc4vdast0uy17ahrns",
        "version": 1682373907,
        "version_id": "791a86d8a6d72a01a2c3c4c19a3b0cc2",
        "signature": "2b11291de182442a55a6175523129e78915d5b30",
        "width": 1048,
        "height": 778,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-24T22:05:07Z",
        "tags": [],
        "pages": 0,
        "bytes": 19852852,
        "type": "upload",
        "etag": "ad8314a13bd6b17f48f42eddc834556d",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1682373907/avalanche2023spring/kcbc4vdast0uy17ahrns.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1682373907/avalanche2023spring/kcbc4vdast0uy17ahrns.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1682373907/avalanche2023spring/kcbc4vdast0uy17ahrns.m3u8",
        "folder": "avalanche2023spring",
        "audio": {},
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 32,
          "profile": "High",
          "bit_rate": "9525960",
          "dar": "524:389",
          "time_base": "1/15360"
        },
        "frame_rate": 30,
        "bit_rate": 9529178,
        "duration": 16.666667,
        "rotation": 0,
        "nb_frames": 500,
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Comparing Google's Bard with ChatGPT.  \n1 - Asked Bard to solve a coding problem. It randomly invented an ml5.js class, which absolutely does not exist, and wrote a piece of code which obv doesn't work. Trying to get it to iterate on its solution was very little help.  \n2 - Asked ChatGPT to solve the same problem. Its initial solution didn't work, but at least it didn't make up classes and methods.  \n3 - Made ChatGPT go through a few iterations, and worked with the code it came up with to vary output with speed of movement of a tracked point.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n\nlet video;\nlet poseNet;\nlet pose;\nlet prevNosePos;\nlet noseVelocity;\n\nlet col;\n\nfunction setup() {\n  createCanvas(640, 480);\n  noStroke();\n\n  video = createCapture(VIDEO);\n  video.size(width, height);\n\n  poseNet = ml5.poseNet(video, modelReady);\n  poseNet.on('pose', gotPose);\n}\n\nfunction modelReady() {\n  console.log('PoseNet model loaded');\n}\n\nfunction gotPose(results) {\n  if (results.length > 0) {\n    pose = results[0].pose;\n  }\n}\n\nfunction draw() {\n    push();\n    tint(255, 30);\n    image(video, 0, 0);\n    pop();\n    \n  if (pose) {\n    let nose = pose.keypoints[0];\n    let nosePos = createVector(nose.position.x, nose.position.y);\n\n    if (prevNosePos) {\n      let deltaTime = 1 / frameRate();\n      noseVelocity = p5.Vector.sub(nosePos, prevNosePos).div(deltaTime);\n      console.log('Nose velocity:', noseVelocity.mag());\n      \n      if (noseVelocity.mag() > 200) {\n          col = 255;\n      } else {\n          col = 0;\n      }\n    }\n\n    prevNosePos = nosePos;\n    \n    fill(col, 0, 0);\n    ellipse(nose.position.x, nose.position.y, 10);\n  }\n}",
    "comments": []
  },
  {
    "_id": "yxcGsJ4co2E4fsxmP",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:56:11.151Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "0c24246ab50133aaab03fd03b39a2b60",
        "public_id": "avalanche2023spring/j2790fld1zcrg5hbzqt6",
        "version": 1683302185,
        "version_id": "e2674c6e942ba08504b2c2158cc7bfcf",
        "signature": "6cc2044fdbae2852717d5c880479190c346768cb",
        "width": 1200,
        "height": 856,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:56:25Z",
        "tags": [],
        "bytes": 71000,
        "type": "upload",
        "etag": "956632b6d3302f6b12b635d2b4563690",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683302185/avalanche2023spring/j2790fld1zcrg5hbzqt6.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683302185/avalanche2023spring/j2790fld1zcrg5hbzqt6.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8423335b2474e8a5b4a29d696b86682a",
        "public_id": "avalanche2023spring/bihhyfp8ctqxyhizow4x",
        "version": 1683302192,
        "version_id": "8e6cc07dba1ac1b0a8d512bc8ae98eb2",
        "signature": "c82314403db8e2dfaeb026127c026ab9f6c9b9bb",
        "width": 892,
        "height": 790,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:56:32Z",
        "tags": [],
        "bytes": 45152,
        "type": "upload",
        "etag": "eaea9dc87cd7ff4c98e48cc09f729558",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683302192/avalanche2023spring/bihhyfp8ctqxyhizow4x.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683302192/avalanche2023spring/bihhyfp8ctqxyhizow4x.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "f83a71fb50161f26a23a329d7fed6d20",
        "public_id": "avalanche2023spring/f2homzl5d8zsop3jupst",
        "version": 1683302199,
        "version_id": "3ff1fd3300ad26e13a13165942fc6b6b",
        "signature": "acc69bc0b059a13b07cb266846d2950d01d6ad58",
        "width": 1282,
        "height": 866,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:56:39Z",
        "tags": [],
        "bytes": 68792,
        "type": "upload",
        "etag": "12108f4827c53e2c80b83f0f9ec8ff43",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683302199/avalanche2023spring/f2homzl5d8zsop3jupst.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683302199/avalanche2023spring/f2homzl5d8zsop3jupst.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:50.637Z" }
      }
    ],
    "title": "",
    "description": "My take on the challenge! It's giving Princess Peach's castle.",
    "comments": []
  },
  {
    "_id": "yy6rR8nJtbopgPhR9",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": { "$date": "2023-04-28T04:06:03.768Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "fd21d608b06f22e3201819e5d5197940",
        "public_id": "avalanche2023spring/vn9t1o69opmdext397vy",
        "version": 1682654842,
        "version_id": "603cde30e8535fe17747d2b83fe22438",
        "signature": "d1faedd70c2eb9148ca86496eae42d830b4c5bde",
        "width": 716,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-04-28T04:07:22Z",
        "tags": [],
        "bytes": 332729,
        "type": "upload",
        "etag": "7f0d4cb47eca270666129d47653b0cd7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1682654842/avalanche2023spring/vn9t1o69opmdext397vy.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1682654842/avalanche2023spring/vn9t1o69opmdext397vy.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-05-12T13:22:04.528Z" }
      }
    ],
    "lesson": "Creative AI",
    "title": "",
    "description": "My friend and I were playing around with AI generated photos and used an AI face erasure tool to create some interesting visuals.",
    "comments": []
  },
  {
    "_id": "yyyZbax2pBAtXzrGT",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-16T02:35:56.643Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "3bcb26170f7c6f2628debab33075d112",
        "public_id": "avalanche2023spring/cxzbv6ugmfyl1km51hi8",
        "version": 1676514967,
        "version_id": "2597707a4a645b1c2c0e6e98c9c471f2",
        "signature": "0961d9de4922cd965382b0c006b14ccaf0764eb4",
        "width": 1356,
        "height": 1294,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-16T02:36:07Z",
        "tags": [],
        "bytes": 906142,
        "type": "upload",
        "etag": "e5e658b410130a0c065b96f879bc27bc",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676514967/avalanche2023spring/cxzbv6ugmfyl1km51hi8.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676514967/avalanche2023spring/cxzbv6ugmfyl1km51hi8.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T05:06:43.813Z" }
      },
      {
        "voter_id": "DgrD5so94kzZH8ktA",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T20:13:54.745Z" }
      }
    ],
    "title": "",
    "description": "VARWAVE",
    "code": "var col = 0;\nvar inc = 0.01;\nvar start = 0\n\nfunction setup() {\n   createCanvas(windowWidth, windowHeight);\n\t\n}\n\nfunction draw() {\n\tbackground(0,10);\n\tfill(120);\n\tvar xoff = start;\n\tfor (var x = 0; x < width; x++) {\n\n\t\tvar y = noise(xoff)*height;\n\t\t\n\t\tellipse(x,y,y)\n\t\t\n\t\txoff += inc;\n}\n\t\n\tstart += inc;\n\t\n\t//endShape();\n\t//noLoop();\n\t\n\tif (col <= 255) {\n\t\tcol++;\n\t} else if (col > 255) {\n\t\tcol = 0;\n}\n\t\n}",
    "comments": []
  },
  {
    "_id": "z6bLu6cvPFCQNJz6A",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-05T15:11:12.488Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "1d010e3ef5dbbc587ce8255d8addb65c",
        "public_id": "avalanche2023spring/e2ewprljl8hpnrjnnivp",
        "version": 1683299905,
        "version_id": "cd119af5d6220cbd0d5464d2674e8dd0",
        "signature": "ca0d6697aa6260b2cc3923c73b964e499d8569c0",
        "width": 928,
        "height": 1130,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-05-05T15:18:25Z",
        "tags": [],
        "bytes": 61800,
        "type": "upload",
        "etag": "b8c042b2a5448123b80f490e0a52f09a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683299905/avalanche2023spring/e2ewprljl8hpnrjnnivp.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683299905/avalanche2023spring/e2ewprljl8hpnrjnnivp.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T16:31:58.973Z" }
      }
    ],
    "title": "",
    "description": "Castle",
    "code": "// Define variables\ntower_height = 50;\ntower_radius = 10;\nwall_length = 100;\nwall_thickness = 5;\nwall_height = 20;\nroof_height = 30;\n\n// Define tower module\nmodule tower() {\n  difference() {\n    cylinder(h=tower_height, r=tower_radius, center=true);\n    translate([0, 0, tower_height/2]) cylinder(h=5, r=tower_radius*2, center=true);\n  }\n}\n\n// Draw castle walls\ndifference() {\n  color(\"gray\") cube([wall_length, wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([0, -wall_length/2 + wall_thickness/2, 0]) cube([wall_thickness, wall_length - wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([0, wall_length/2 - wall_thickness/2, 0]) cube([wall_thickness, wall_length - wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([-wall_length/2 + wall_thickness/2, 0, 0]) cube([wall_length - wall_thickness*2, wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([wall_length/2 - wall_thickness/2, 0, 0]) cube([wall_length - wall_thickness*2, wall_thickness, wall_height], center=true);\n}\n\n// Draw towers\ntranslate([-wall_length/2 + tower_radius, -wall_length/2 + tower_radius, 0]) color(\"darkred\") tower();\ntranslate([-wall_length/2 + tower_radius, wall_length/2 - tower_radius, 0]) color(\"darkred\") tower();\ntranslate([wall_length/2 - tower_radius, wall_length/2 - tower_radius, 0]) color(\"darkred\") tower();\ntranslate([wall_length/2 - tower_radius, -wall_length/2 + tower_radius, 0]) color(\"darkred\") tower();\n\n// Roof\ntranslate([0, 0, wall_height + 20]) color(\"darkgray\") cube([wall_length, wall_length, roof_height], center=true);\n\n// Add tower on top of roof\ntranslate([0, 0, wall_height + roof_height + 10]) color(\"darkred\") tower();\n\n// Add triangle on top of top tower\ntranslate([0, 0, 85]) color(\"gold\") polyhedron(points=[[-10, -10, 0], [10, -10, 0], [0, 0, 20], [0, 10, 0]], faces=[[0, 1, 2], [1, 3, 2], [3, 0, 2], [0, 3, 1]]);",
    "comments": []
  },
  {
    "_id": "z6pbRWcEnW4k92Qpx",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-13T04:11:37.44Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "f630d742d3edb9a24b0fb8f86c1e3c12",
        "public_id": "avalanche2023spring/yorlshb3mai4p8orb6wa",
        "version": 1681359107,
        "version_id": "0d6c1b06c1d4db0b444576d5c6de70a8",
        "signature": "c8b118e4491b3dee164655fc0ae154d45f3045e0",
        "width": 1270,
        "height": 610,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T04:11:47Z",
        "tags": [],
        "bytes": 66063,
        "type": "upload",
        "etag": "1fabe9c5b1a77ed6834b44ddaaf62891",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681359107/avalanche2023spring/yorlshb3mai4p8orb6wa.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681359107/avalanche2023spring/yorlshb3mai4p8orb6wa.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "02abe1da91f85c120373408485fe49f4",
        "public_id": "avalanche2023spring/afclcyd7cjrqnbx49jcq",
        "version": 1681359109,
        "version_id": "ff5d5e982fa7ad375565c02d7e494b4f",
        "signature": "681014e563cf8ffd42dcea794840ac0c805c4796",
        "width": 1270,
        "height": 610,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-13T04:11:49Z",
        "tags": [],
        "bytes": 64351,
        "type": "upload",
        "etag": "d1f2fac286fcd138b44fa2be87b5ef8a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681359109/avalanche2023spring/afclcyd7cjrqnbx49jcq.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681359109/avalanche2023spring/afclcyd7cjrqnbx49jcq.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T01:13:57.16Z" }
      }
    ],
    "title": "",
    "description": "Layered poetry experimentation using context free grammars",
    "comments": []
  },
  {
    "_id": "zCwWrfRBKbpc46gGt",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-04T06:27:09.494Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "14d3ca6d6bad1effda9429bb62c14c55",
        "public_id": "avalanche2023spring/niyfjredyzyqvthcxrsw",
        "version": 1680589674,
        "version_id": "c64114c5c8708fa56e72b3f00da6ad27",
        "signature": "175c970c4d6369cdc1d5e67b66361fa3511bcf74",
        "width": 818,
        "height": 822,
        "format": "mp4",
        "resource_type": "video",
        "created_at": "2023-04-04T06:27:54Z",
        "tags": [],
        "pages": 0,
        "bytes": 1432157,
        "type": "upload",
        "etag": "1b0a98b69b2082b06260dbdc1ecdc292",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680589674/avalanche2023spring/niyfjredyzyqvthcxrsw.mp4",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680589674/avalanche2023spring/niyfjredyzyqvthcxrsw.mp4",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680589674/avalanche2023spring/niyfjredyzyqvthcxrsw.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "317150",
          "frequency": 48000,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 41,
          "profile": "Main",
          "bit_rate": "149628",
          "dar": "409:411",
          "time_base": "1/30000"
        },
        "is_audio": false,
        "frame_rate": 30,
        "bit_rate": 473596,
        "duration": 24.166667,
        "rotation": 0,
        "nb_frames": 725,
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-04T22:57:05.093Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:33:33.697Z" }
      }
    ],
    "title": "",
    "description": "Made a bouncing ball game, inspired by the coding challenge we did in class. Also added some sound effects",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\n//sound from https://pixabay.com/sound-effects/search/bounce/\n\nlet topwall;\nlet leftwall;\nlet rightwall;\nlet wallwidth = 10;\n\nlet object;\nlet objectwidth = 20;\nlet playerwall;\nlet playerwallwidth = 100;\n\nlet gamespeed = 5;\nlet score = 0;\nlet bouncesound;\n\nlet mode = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  object = createSprite(width/2, 50, objectwidth, objectwidth);\n  object.setSpeed(gamespeed, random(360));\n\n  walls = new Group();\n  topwall = createSprite(width/2, wallwidth/2, width, wallwidth);\n  topwall.immovable = true;\n  walls.add(topwall);\n  leftwall = createSprite(wallwidth/2, height/2, wallwidth, height);\n  leftwall.immovable = true;\n  walls.add(leftwall);\n  rightwall = createSprite(width - wallwidth/2, height/2, wallwidth, height);\n  rightwall.immovable = true;\n  walls.add(rightwall);\n\n  playerwall = createSprite(width/2, height - wallwidth/2 , playerwallwidth, wallwidth);\n  playerwall.immovable = true;\n\n  bouncesound = createAudio('bounce.mp3');\n\n}\n\nfunction draw() {\n  background(30);\n  \n  object.bounce(walls);\n  object.bounce(playerwall);\n\n  drawSprites();\n\n  if(keyIsDown(37)){\n    playerwall.position.x-=gamespeed;\n  }\n  if(keyIsDown(39)){\n    playerwall.position.x+=gamespeed;\n  }\n  if(playerwall.position.x < playerwallwidth/2){\n    playerwall.position.x = playerwallwidth/2;\n  }\n  if(playerwall.position.x > width - playerwallwidth/2){\n    playerwall.position.x = width - playerwallwidth/2;\n  }\n\n  push();\n    fill(255);\n    textAlign(LEFT);\n    text(\"Score: \" + score, 20, 30);\n    textAlign(RIGHT);\n    text(\"Use ← → to navigate\", width - 20, 30);\n  pop();\n\n  if (object.position.y >= height - wallwidth - objectwidth/2 && object.position.y < 1 + height - wallwidth - objectwidth/2) {\n    console.log(\"bounce\");\n    score++;\n    bouncesound.play();\n  }\n  \n  if (object.position.y > height) {\n    push();\n      fill(255);\n      textAlign(CENTER, CENTER);\n      text(\"Oops\", width/2, height/2 - 10);\n      text(\"Press right arrow to try again\", width/2, height/2 + 10);\n      if (keyIsDown(39)) {\n        window.location.reload();\n      }\n    pop();\n  }\n}",
    "comments": []
  },
  {
    "_id": "zECXeTYEwMpMnjfXC",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-11T03:16:59.731Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "ebfcfbfc824f3dc444acc247d7ad1e25",
        "public_id": "avalanche2023spring/q9aripahqcwar9esp9d7",
        "version": 1681184288,
        "version_id": "2b2013cf7630e129e1e7506d959d2ae1",
        "signature": "d29c37608fc6dd6ab0dbb1b8bcd2ca787fd24336",
        "width": 1518,
        "height": 1518,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-11T03:38:08Z",
        "tags": [],
        "pages": 0,
        "bytes": 17847127,
        "type": "upload",
        "etag": "8ada03b261214a7af5287cf7eda06ce7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1681184288/avalanche2023spring/q9aripahqcwar9esp9d7.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1681184288/avalanche2023spring/q9aripahqcwar9esp9d7.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1681184288/avalanche2023spring/q9aripahqcwar9esp9d7.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "126169",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 50,
          "profile": "Main",
          "bit_rate": "3102587",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3608517,
        "duration": 39.566667,
        "rotation": 0,
        "nb_frames": 2435,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "ac4f624ac8b71a60747c4a9c3c5e385a",
        "public_id": "avalanche2023spring/nvr9j5lpvdwqbzfvzqcs",
        "version": 1681184308,
        "version_id": "3bf52a5f6197b5772d621ce0468ba0cd",
        "signature": "e0b476459efc239282af00d23386cef7502dccdd",
        "width": 1518,
        "height": 1518,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-11T03:38:28Z",
        "tags": [],
        "bytes": 239839,
        "type": "upload",
        "etag": "42f723f5e66479fc83159e0556c90457",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681184308/avalanche2023spring/nvr9j5lpvdwqbzfvzqcs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681184308/avalanche2023spring/nvr9j5lpvdwqbzfvzqcs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "107984a89c6d411eec3c8191313c1bbf",
        "public_id": "avalanche2023spring/pruwrh38bxzaznzzbhuo",
        "version": 1681184343,
        "version_id": "8cafb67837b6d047c67ed78bfcdd405b",
        "signature": "c6f3a097bd234fd80409c1079964d02aac77b5e7",
        "width": 1518,
        "height": 1518,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-11T03:39:03Z",
        "tags": [],
        "bytes": 525782,
        "type": "upload",
        "etag": "37c920a86b994cd5f19b24641e4f7fe2",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681184343/avalanche2023spring/pruwrh38bxzaznzzbhuo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681184343/avalanche2023spring/pruwrh38bxzaznzzbhuo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-11T17:02:38.488Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T05:59:00.398Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-12T05:59:01.202Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-12T16:28:47.612Z" }
      }
    ],
    "title": "",
    "description": "**UX Persona Generator using the Markov Model** as an attempt to comment on the templatisation prevalent in UX case studies, using a training set of 15 ChatGPT generated personas. No one reads the fine print on personas anyway. Stuff them with keywords.",
    "comments": [],
    "code": "const personaDetail =\n    \"She's a 32-year-old working mother of two children (ages 4 and 6) who frequently travels for work. She's often stressed about keeping her kids occupied during flights, and finds it difficult to come up with new activities and games to keep them engaged. They're a 35-year-old couple with one child (age 8), who are planning a family vacation to Europe. They've never flown with their child before, and are worried about how he'll handle the long flight and potential boredom. He's a 40-year-old single father of three children (ages 3, 5, and 7) who often travels for leisure with his kids. He's always looking for new and creative ways to keep his children entertained during flights, and values apps that offer educational and interactive content. She's a 27-year-old new mother traveling with her first child (age 10 months). She's never flown with a baby before, and is nervous about how she'll manage to keep him entertained and comfortable during the flight. He's a 29-year-old father of two children (ages 3 and 5) who often travels with his family for leisure. He's always looking for apps that offer age-appropriate content and activities that can keep his kids entertained during flights. They're a 42-year-old couple with two children (ages 7 and 10) who are planning a long-haul flight to visit family overseas. They're looking for an app that offers a mix of educational and entertaining content that can keep their kids engaged for the duration of the flight. She's a 33-year-old mother of two children (ages 2 and 4) who often travels with her family for leisure. She's looking for an app that offers content specifically tailored to young children, such as interactive stories and games that can be played offline. They're a 38-year-old couple with three children (ages 4, 7, and 9) who are planning a family vacation to Hawaii. They're looking for an app that offers a variety of content and activities that can be customized to each child's age and interests, such as puzzles, coloring pages, and interactive quizzes.\";\n\nconst names = [\"Aaran\", \"Aaren\", \"Aarez\", \"Aarman\", \"Aaron\", \"Aaron-James\", \"Aarron\", \"Aaryan\", \"Aaryn\", \"Aayan\", \"Aazaan\", \"Abaan\", \"Abbas\", \"Abdallah\", \"Abdalroof\", \"Abdihakim\", \"Abdirahman\", \"Abdisalam\", \"Abdul\", \"Abdul-Aziz\", \"Abdulbasir\", \"Abdulkadir\", \"Abdulkarem\", \"Abdulkhader\", \"Abdullah\", \"Abdul-Majeed\", \"Abdulmalik\", \"Abdul-Rehman\", \"Abdur\", \"Abdurraheem\", \"Abdur-Rahman\", \"Abdur-Rehmaan\", \"Abel\", \"Abhinav\", \"Abhisumant\", \"Abid\", \"Abir\", \"Abraham\", \"Abu\", \"Abubakar\", \"Ace\", \"Adain\", \"Adam\", \"Adam-James\", \"Addison\", \"Addisson\", \"Adegbola\", \"Adegbolahan\", \"Aden\", \"Adenn\", \"Adie\", \"Adil\", \"Aditya\", \"Adnan\", \"Adrian\", \"Adrien\", \"Aedan\", \"Aedin\", \"Aedyn\", \"Aeron\", \"Afonso\", \"Ahmad\", \"Ahmed\", \"Ahmed-Aziz\", \"Ahoua\", \"Ahtasham\", \"Aiadan\", \"Aidan\", \"Aiden\", \"Aiden-Jack\", \"Aiden-Vee\", \"Aidian\", \"Aidy\", \"Ailin\", \"Aiman\", \"Ainsley\", \"Ainslie\", \"Airen\", \"Airidas\", \"Airlie\", \"AJ\", \"Ajay\", \"A-Jay\", \"Ajayraj\", \"Akan\", \"Akram\", \"Al\", \"Ala\", \"Alan\", \"Alanas\", \"Alasdair\", \"Alastair\", \"Alber\", \"Albert\", \"Albie\", \"Aldred\", \"Alec\", \"Aled\", \"Aleem\", \"Aleksandar\", \"Aleksander\", \"Aleksandr\", \"Aleksandrs\", \"Alekzander\", \"Alessandro\", \"Alessio\", \"Alex\", \"Alexander\", \"Alexei\", \"Alexx\", \"Alexzander\", \"Alf\", \"Alfee\", \"Alfie\", \"Alfred\", \"Alfy\", \"Alhaji\", \"Al-Hassan\", \"Ali\", \"Aliekber\", \"Alieu\", \"Alihaider\", \"Alisdair\", \"Alishan\", \"Alistair\", \"Alistar\", \"Alister\", \"Aliyaan\", \"Allan\", \"Allan-Laiton\", \"Allen\", \"Allesandro\", \"Allister\", \"Ally\", \"Alphonse\", \"Altyiab\", \"Alum\", \"Alvern\", \"Alvin\", \"Alyas\", \"Amaan\", \"Aman\", \"Amani\", \"Ambanimoh\", \"Ameer\", \"Amgad\", \"Ami\", \"Amin\", \"Amir\", \"Ammaar\", \"Ammar\", \"Ammer\", \"Amolpreet\", \"Amos\", \"Amrinder\", \"Amrit\", \"Amro\", \"Anay\", \"Andrea\", \"Andreas\", \"Andrei\", \"Andrejs\", \"Andrew\", \"Andy\", \"Anees\", \"Anesu\", \"Angel\", \"Angelo\", \"Angus\", \"Anir\", \"Anis\", \"Anish\", \"Anmolpreet\", \"Annan\", \"Anndra\", \"Anselm\", \"Anthony\", \"Anthony-John\", \"Antoine\", \"Anton\", \"Antoni\", \"Antonio\", \"Antony\", \"Antonyo\", \"Anubhav\", \"Aodhan\", \"Aon\", \"Aonghus\", \"Apisai\", \"Arafat\", \"Aran\", \"Arandeep\", \"Arann\", \"Aray\", \"Arayan\", \"Archibald\", \"Archie\", \"Arda\", \"Ardal\", \"Ardeshir\", \"Areeb\", \"Areez\", \"Aref\", \"Arfin\", \"Argyle\", \"Argyll\", \"Ari\", \"Aria\", \"Arian\", \"Arihant\", \"Aristomenis\", \"Aristotelis\", \"Arjuna\", \"Arlo\", \"Armaan\", \"Arman\", \"Armen\", \"Arnab\", \"Arnav\", \"Arnold\", \"Aron\", \"Aronas\", \"Arran\", \"Arrham\", \"Arron\", \"Arryn\", \"Arsalan\", \"Artem\", \"Arthur\", \"Artur\", \"Arturo\", \"Arun\", \"Arunas\", \"Arved\", \"Arya\", \"Aryan\", \"Aryankhan\", \"Aryian\", \"Aryn\", \"Asa\", \"Asfhan\", \"Ash\", \"Ashlee-jay\", \"Ashley\", \"Ashton\", \"Ashton-Lloyd\", \"Ashtyn\", \"Ashwin\", \"Asif\", \"Asim\", \"Aslam\", \"Asrar\", \"Ata\", \"Atal\", \"Atapattu\", \"Ateeq\", \"Athol\", \"Athon\", \"Athos-Carlos\", \"Atli\", \"Atom\", \"Attila\", \"Aulay\", \"Aun\", \"Austen\", \"Austin\", \"Avani\", \"Averon\", \"Avi\", \"Avinash\", \"Avraham\", \"Awais\", \"Awwal\", \"Axel\", \"Ayaan\", \"Ayan\", \"Aydan\", \"Ayden\", \"Aydin\", \"Aydon\", \"Ayman\", \"Ayomide\", \"Ayren\", \"Ayrton\", \"Aytug\", \"Ayub\", \"Ayyub\", \"Azaan\", \"Azedine\", \"Azeem\", \"Azim\", \"Aziz\", \"Azlan\", \"Azzam\", \"Azzedine\", \"Babatunmise\", \"Babur\", \"Bader\", \"Badr\", \"Badsha\", \"Bailee\", \"Bailey\", \"Bailie\", \"Bailley\", \"Baillie\", \"Baley\", \"Balian\", \"Banan\", \"Barath\", \"Barkley\", \"Barney\", \"Baron\", \"Barrie\", \"Barry\", \"Bartlomiej\", \"Bartosz\", \"Basher\", \"Basile\", \"Baxter\", \"Baye\", \"Bayley\", \"Beau\", \"Beinn\", \"Bekim\", \"Believe\", \"Ben\", \"Bendeguz\", \"Benedict\", \"Benjamin\", \"Benjamyn\", \"Benji\", \"Benn\", \"Bennett\", \"Benny\", \"Benoit\", \"Bentley\", \"Berkay\", \"Bernard\", \"Bertie\", \"Bevin\", \"Bezalel\", \"Bhaaldeen\", \"Bharath\", \"Bilal\", \"Bill\", \"Billy\", \"Binod\", \"Bjorn\", \"Blaike\", \"Blaine\", \"Blair\", \"Blaire\", \"Blake\", \"Blazej\", \"Blazey\", \"Blessing\", \"Blue\", \"Blyth\", \"Bo\", \"Boab\", \"Bob\", \"Bobby\", \"Bobby-Lee\", \"Bodhan\", \"Boedyn\", \"Bogdan\", \"Bohbi\", \"Bony\", \"Bowen\", \"Bowie\", \"Boyd\", \"Bracken\", \"Brad\", \"Bradan\", \"Braden\", \"Bradley\", \"Bradlie\", \"Bradly\", \"Brady\", \"Bradyn\", \"Braeden\", \"Braiden\", \"Brajan\", \"Brandan\", \"Branden\", \"Brandon\", \"Brandonlee\", \"Brandon-Lee\", \"Brandyn\", \"Brannan\", \"Brayden\", \"Braydon\", \"Braydyn\", \"Breandan\", \"Brehme\", \"Brendan\", \"Brendon\", \"Brendyn\", \"Breogan\", \"Bret\", \"Brett\", \"Briaddon\", \"Brian\", \"Brodi\", \"Brodie\", \"Brody\", \"Brogan\", \"Broghan\", \"Brooke\", \"Brooklin\", \"Brooklyn\", \"Bruce\", \"Bruin\", \"Bruno\", \"Brunon\", \"Bryan\", \"Bryce\", \"Bryden\", \"Brydon\", \"Brydon-Craig\", \"Bryn\", \"Brynmor\", \"Bryson\", \"Buddy\", \"Bully\", \"Burak\", \"Burhan\", \"Butali\", \"Butchi\", \"Byron\", \"Cabhan\", \"Cadan\", \"Cade\", \"Caden\", \"Cadon\", \"Cadyn\", \"Caedan\", \"Caedyn\", \"Cael\", \"Caelan\", \"Caelen\", \"Caethan\", \"Cahl\", \"Cahlum\", \"Cai\", \"Caidan\", \"Caiden\", \"Caiden-Paul\", \"Caidyn\", \"Caie\", \"Cailaen\", \"Cailean\", \"Caileb-John\", \"Cailin\", \"Cain\", \"Caine\", \"Cairn\", \"Cal\", \"Calan\", \"Calder\", \"Cale\", \"Calean\", \"Caleb\", \"Calen\", \"Caley\", \"Calib\", \"Calin\", \"Callahan\", \"Callan\", \"Callan-Adam\", \"Calley\", \"Callie\", \"Callin\", \"Callum\", \"Callun\", \"Callyn\", \"Calum\", \"Calum-James\", \"Calvin\", \"Cambell\", \"Camerin\", \"Cameron\", \"Campbel\", \"Campbell\", \"Camron\", \"Caolain\", \"Caolan\", \"Carl\", \"Carlo\", \"Carlos\", \"Carrich\", \"Carrick\", \"Carson\", \"Carter\", \"Carwyn\", \"Casey\", \"Casper\", \"Cassy\", \"Cathal\", \"Cator\", \"Cavan\", \"Cayden\", \"Cayden-Robert\", \"Cayden-Tiamo\", \"Ceejay\", \"Ceilan\", \"Ceiran\", \"Ceirin\", \"Ceiron\", \"Cejay\", \"Celik\", \"Cephas\", \"Cesar\", \"Cesare\", \"Chad\", \"Chaitanya\", \"Chang-Ha\", \"Charles\", \"Charley\", \"Charlie\", \"Charly\", \"Chase\", \"Che\", \"Chester\", \"Chevy\", \"Chi\", \"Chibudom\", \"Chidera\", \"Chimsom\", \"Chin\", \"Chintu\", \"Chiqal\", \"Chiron\", \"Chris\", \"Chris-Daniel\", \"Chrismedi\", \"Christian\", \"Christie\", \"Christoph\", \"Christopher\", \"Christopher-Lee\", \"Christy\", \"Chu\", \"Chukwuemeka\", \"Cian\", \"Ciann\", \"Ciar\", \"Ciaran\", \"Ciarian\", \"Cieran\", \"Cillian\", \"Cillin\", \"Cinar\", \"CJ\", \"C-Jay\", \"Clark\", \"Clarke\", \"Clayton\", \"Clement\", \"Clifford\", \"Clyde\", \"Cobain\", \"Coban\", \"Coben\", \"Cobi\", \"Cobie\", \"Coby\", \"Codey\", \"Codi\", \"Codie\", \"Cody\", \"Cody-Lee\", \"Coel\", \"Cohan\", \"Cohen\", \"Colby\", \"Cole\", \"Colin\", \"Coll\", \"Colm\", \"Colt\", \"Colton\", \"Colum\", \"Colvin\", \"Comghan\", \"Conal\", \"Conall\", \"Conan\", \"Conar\", \"Conghaile\", \"Conlan\", \"Conley\", \"Conli\", \"Conlin\", \"Conlly\", \"Conlon\", \"Conlyn\", \"Connal\", \"Connall\", \"Connan\", \"Connar\", \"Connel\", \"Connell\", \"Conner\", \"Connolly\", \"Connor\", \"Connor-David\", \"Conor\", \"Conrad\", \"Cooper\", \"Copeland\", \"Coray\", \"Corben\", \"Corbin\", \"Corey\", \"Corey-James\", \"Corey-Jay\", \"Cori\", \"Corie\", \"Corin\", \"Cormac\", \"Cormack\", \"Cormak\", \"Corran\", \"Corrie\", \"Cory\", \"Cosmo\", \"Coupar\", \"Craig\", \"Craig-James\", \"Crawford\", \"Creag\", \"Crispin\", \"Cristian\", \"Crombie\", \"Cruiz\", \"Cruz\", \"Cuillin\", \"Cullen\", \"Cullin\", \"Curtis\", \"Cyrus\", \"Daanyaal\", \"Daegan\", \"Daegyu\", \"Dafydd\", \"Dagon\", \"Dailey\", \"Daimhin\", \"Daithi\", \"Dakota\", \"Daksh\", \"Dale\", \"Dalong\", \"Dalton\", \"Damian\", \"Damien\", \"Damon\", \"Dan\", \"Danar\", \"Dane\", \"Danial\", \"Daniel\", \"Daniele\", \"Daniel-James\", \"Daniels\", \"Daniil\", \"Danish\", \"Daniyal\", \"Danniel\", \"Danny\", \"Dante\", \"Danyal\", \"Danyil\", \"Danys\", \"Daood\", \"Dara\", \"Darach\", \"Daragh\", \"Darcy\", \"D'arcy\", \"Dareh\", \"Daren\", \"Darien\", \"Darius\", \"Darl\", \"Darn\", \"Darrach\", \"Darragh\", \"Darrel\", \"Darrell\", \"Darren\", \"Darrie\", \"Darrius\", \"Darroch\", \"Darryl\", \"Darryn\", \"Darwyn\", \"Daryl\", \"Daryn\", \"Daud\", \"Daumantas\", \"Davi\", \"David\", \"David-Jay\", \"David-Lee\", \"Davie\", \"Davis\", \"Davy\", \"Dawid\", \"Dawson\", \"Dawud\", \"Dayem\", \"Daymian\", \"Deacon\", \"Deagan\", \"Dean\", \"Deano\", \"Decklan\", \"Declain\", \"Declan\", \"Declyan\", \"Declyn\", \"Dedeniseoluwa\", \"Deecan\", \"Deegan\", \"Deelan\", \"Deklain-Jaimes\", \"Del\", \"Demetrius\", \"Denis\", \"Deniss\", \"Dennan\", \"Dennin\", \"Dennis\", \"Denny\", \"Dennys\", \"Denon\", \"Denton\", \"Denver\", \"Denzel\", \"Deon\", \"Derek\", \"Derick\", \"Derin\", \"Dermot\", \"Derren\", \"Derrie\", \"Derrin\", \"Derron\", \"Derry\", \"Derryn\", \"Deryn\", \"Deshawn\", \"Desmond\", \"Dev\", \"Devan\", \"Devin\", \"Devlin\", \"Devlyn\", \"Devon\", \"Devrin\", \"Devyn\", \"Dex\", \"Dexter\", \"Dhani\", \"Dharam\", \"Dhavid\", \"Dhyia\", \"Diarmaid\", \"Diarmid\", \"Diarmuid\", \"Didier\", \"Diego\", \"Diesel\", \"Diesil\", \"Digby\", \"Dilan\", \"Dilano\", \"Dillan\", \"Dillon\", \"Dilraj\", \"Dimitri\", \"Dinaras\", \"Dion\", \"Dissanayake\", \"Dmitri\", \"Doire\", \"Dolan\", \"Domanic\", \"Domenico\", \"Domhnall\", \"Dominic\", \"Dominick\", \"Dominik\", \"Donald\", \"Donnacha\", \"Donnie\", \"Dorian\", \"Dougal\", \"Douglas\", \"Dougray\", \"Drakeo\", \"Dre\", \"Dregan\", \"Drew\", \"Dugald\", \"Duncan\", \"Duriel\", \"Dustin\", \"Dylan\", \"Dylan-Jack\", \"Dylan-James\", \"Dylan-John\", \"Dylan-Patrick\", \"Dylin\", \"Dyllan\", \"Dyllan-James\", \"Dyllon\", \"Eadie\", \"Eagann\", \"Eamon\", \"Eamonn\", \"Eason\", \"Eassan\", \"Easton\", \"Ebow\", \"Ed\", \"Eddie\", \"Eden\", \"Ediomi\", \"Edison\", \"Eduardo\", \"Eduards\", \"Edward\", \"Edwin\", \"Edwyn\", \"Eesa\", \"Efan\", \"Efe\", \"Ege\", \"Ehsan\", \"Ehsen\", \"Eiddon\", \"Eidhan\", \"Eihli\", \"Eimantas\", \"Eisa\", \"Eli\", \"Elias\", \"Elijah\", \"Eliot\", \"Elisau\", \"Eljay\", \"Eljon\", \"Elliot\", \"Elliott\", \"Ellis\", \"Ellisandro\", \"Elshan\", \"Elvin\", \"Elyan\", \"Emanuel\", \"Emerson\", \"Emil\", \"Emile\", \"Emir\", \"Emlyn\", \"Emmanuel\", \"Emmet\", \"Eng\", \"Eniola\", \"Enis\", \"Ennis\", \"Enrico\", \"Enrique\", \"Enzo\", \"Eoghain\", \"Eoghan\", \"Eoin\", \"Eonan\", \"Erdehan\", \"Eren\", \"Erencem\", \"Eric\", \"Ericlee\", \"Erik\", \"Eriz\", \"Ernie-Jacks\", \"Eroni\", \"Eryk\", \"Eshan\", \"Essa\", \"Esteban\", \"Ethan\", \"Etienne\", \"Etinosa\", \"Euan\", \"Eugene\", \"Evan\", \"Evann\", \"Ewan\", \"Ewen\", \"Ewing\", \"Exodi\", \"Ezekiel\", \"Ezra\", \"Fabian\", \"Fahad\", \"Faheem\", \"Faisal\", \"Faizaan\", \"Famara\", \"Fares\", \"Farhaan\", \"Farhan\", \"Farren\", \"Farzad\", \"Fauzaan\", \"Favour\", \"Fawaz\", \"Fawkes\", \"Faysal\", \"Fearghus\", \"Feden\", \"Felix\", \"Fergal\", \"Fergie\", \"Fergus\", \"Ferre\", \"Fezaan\", \"Fiachra\", \"Fikret\", \"Filip\", \"Filippo\", \"Finan\", \"Findlay\", \"Findlay-James\", \"Findlie\", \"Finlay\", \"Finley\", \"Finn\", \"Finnan\", \"Finnean\", \"Finnen\", \"Finnlay\", \"Finnley\", \"Fintan\", \"Fionn\", \"Firaaz\", \"Fletcher\", \"Flint\", \"Florin\", \"Flyn\", \"Flynn\", \"Fodeba\", \"Folarinwa\", \"Forbes\", \"Forgan\", \"Forrest\", \"Fox\", \"Francesco\", \"Francis\", \"Francisco\", \"Franciszek\", \"Franco\", \"Frank\", \"Frankie\", \"Franklin\", \"Franko\", \"Fraser\", \"Frazer\", \"Fred\", \"Freddie\", \"Frederick\", \"Fruin\", \"Fyfe\", \"Fyn\", \"Fynlay\", \"Fynn\", \"Gabriel\", \"Gallagher\", \"Gareth\", \"Garren\", \"Garrett\", \"Garry\", \"Gary\", \"Gavin\", \"Gavin-Lee\", \"Gene\", \"Geoff\", \"Geoffrey\", \"Geomer\", \"Geordan\", \"Geordie\", \"George\", \"Georgia\", \"Georgy\", \"Gerard\", \"Ghyll\", \"Giacomo\", \"Gian\", \"Giancarlo\", \"Gianluca\", \"Gianmarco\", \"Gideon\", \"Gil\", \"Gio\", \"Girijan\", \"Girius\", \"Gjan\", \"Glascott\", \"Glen\", \"Glenn\", \"Gordon\", \"Grady\", \"Graeme\", \"Graham\", \"Grahame\", \"Grant\", \"Grayson\", \"Greg\", \"Gregor\", \"Gregory\", \"Greig\", \"Griffin\", \"Griffyn\", \"Grzegorz\", \"Guang\", \"Guerin\", \"Guillaume\", \"Gurardass\", \"Gurdeep\", \"Gursees\", \"Gurthar\", \"Gurveer\", \"Gurwinder\", \"Gus\", \"Gustav\", \"Guthrie\", \"Guy\", \"Gytis\", \"Habeeb\", \"Hadji\", \"Hadyn\", \"Hagun\", \"Haiden\", \"Haider\", \"Hamad\", \"Hamid\", \"Hamish\", \"Hamza\", \"Hamzah\", \"Han\", \"Hansen\", \"Hao\", \"Hareem\", \"Hari\", \"Harikrishna\", \"Haris\", \"Harish\", \"Harjeevan\", \"Harjyot\", \"Harlee\", \"Harleigh\", \"Harley\", \"Harman\", \"Harnek\", \"Harold\", \"Haroon\", \"Harper\", \"Harri\", \"Harrington\", \"Harris\", \"Harrison\", \"Harry\", \"Harvey\", \"Harvie\", \"Harvinder\", \"Hasan\", \"Haseeb\", \"Hashem\", \"Hashim\", \"Hassan\", \"Hassanali\", \"Hately\", \"Havila\", \"Hayden\", \"Haydn\", \"Haydon\", \"Haydyn\", \"Hcen\", \"Hector\", \"Heddle\", \"Heidar\", \"Heini\", \"Hendri\", \"Henri\", \"Henry\", \"Herbert\", \"Heyden\", \"Hiro\", \"Hirvaansh\", \"Hishaam\", \"Hogan\", \"Honey\", \"Hong\", \"Hope\", \"Hopkin\", \"Hosea\", \"Howard\", \"Howie\", \"Hristomir\", \"Hubert\", \"Hugh\", \"Hugo\", \"Humza\", \"Hunter\", \"Husnain\", \"Hussain\", \"Hussan\", \"Hussnain\", \"Hussnan\", \"Hyden\", \"I\", \"Iagan\", \"Iain\", \"Ian\", \"Ibraheem\", \"Ibrahim\", \"Idahosa\", \"Idrees\", \"Idris\", \"Iestyn\", \"Ieuan\", \"Igor\", \"Ihtisham\", \"Ijay\", \"Ikechukwu\", \"Ikemsinachukwu\", \"Ilyaas\", \"Ilyas\", \"Iman\", \"Immanuel\", \"Inan\", \"Indy\", \"Ines\", \"Innes\", \"Ioannis\", \"Ireayomide\", \"Ireoluwa\", \"Irvin\", \"Irvine\", \"Isa\", \"Isaa\", \"Isaac\", \"Isaiah\", \"Isak\", \"Isher\", \"Ishwar\", \"Isimeli\", \"Isira\", \"Ismaeel\", \"Ismail\", \"Israel\", \"Issiaka\", \"Ivan\", \"Ivar\", \"Izaak\", \"J\", \"Jaay\", \"Jac\", \"Jace\", \"Jack\", \"Jacki\", \"Jackie\", \"Jack-James\", \"Jackson\", \"Jacky\", \"Jacob\", \"Jacques\", \"Jad\", \"Jaden\", \"Jadon\", \"Jadyn\", \"Jae\", \"Jagat\", \"Jago\", \"Jaheim\", \"Jahid\", \"Jahy\", \"Jai\", \"Jaida\", \"Jaiden\", \"Jaidyn\", \"Jaii\", \"Jaime\", \"Jai-Rajaram\", \"Jaise\", \"Jak\", \"Jake\", \"Jakey\", \"Jakob\", \"Jaksyn\", \"Jakub\", \"Jamaal\", \"Jamal\", \"Jameel\", \"Jameil\", \"James\", \"James-Paul\", \"Jamey\", \"Jamie\", \"Jan\", \"Jaosha\", \"Jardine\", \"Jared\", \"Jarell\", \"Jarl\", \"Jarno\", \"Jarred\", \"Jarvi\", \"Jasey-Jay\", \"Jasim\", \"Jaskaran\", \"Jason\", \"Jasper\", \"Jaxon\", \"Jaxson\", \"Jay\", \"Jaydan\", \"Jayden\", \"Jayden-James\", \"Jayden-Lee\", \"Jayden-Paul\", \"Jayden-Thomas\", \"Jaydn\", \"Jaydon\", \"Jaydyn\", \"Jayhan\", \"Jay-Jay\", \"Jayke\", \"Jaymie\", \"Jayse\", \"Jayson\", \"Jaz\", \"Jazeb\", \"Jazib\", \"Jazz\", \"Jean\", \"Jean-Lewis\", \"Jean-Pierre\", \"Jebadiah\", \"Jed\", \"Jedd\", \"Jedidiah\", \"Jeemie\", \"Jeevan\", \"Jeffrey\", \"Jensen\", \"Jenson\", \"Jensyn\", \"Jeremy\", \"Jerome\", \"Jeronimo\", \"Jerrick\", \"Jerry\", \"Jesse\", \"Jesuseun\", \"Jeswin\", \"Jevan\", \"Jeyun\", \"Jez\", \"Jia\", \"Jian\", \"Jiao\", \"Jimmy\", \"Jincheng\", \"JJ\", \"Joaquin\", \"Joash\", \"Jock\", \"Jody\", \"Joe\", \"Joeddy\", \"Joel\", \"Joey\", \"Joey-Jack\", \"Johann\", \"Johannes\", \"Johansson\", \"John\", \"Johnathan\", \"Johndean\", \"Johnjay\", \"John-Michael\", \"Johnnie\", \"Johnny\", \"Johnpaul\", \"John-Paul\", \"John-Scott\", \"Johnson\", \"Jole\", \"Jomuel\", \"Jon\", \"Jonah\", \"Jonatan\", \"Jonathan\", \"Jonathon\", \"Jonny\", \"Jonothan\", \"Jon-Paul\", \"Jonson\", \"Joojo\", \"Jordan\", \"Jordi\", \"Jordon\", \"Jordy\", \"Jordyn\", \"Jorge\", \"Joris\", \"Jorryn\", \"Josan\", \"Josef\", \"Joseph\", \"Josese\", \"Josh\", \"Joshiah\", \"Joshua\", \"Josiah\", \"Joss\", \"Jostelle\", \"Joynul\", \"Juan\", \"Jubin\", \"Judah\", \"Jude\", \"Jules\", \"Julian\", \"Julien\", \"Jun\", \"Junior\", \"Jura\", \"Justan\", \"Justin\", \"Justinas\", \"Kaan\", \"Kabeer\", \"Kabir\", \"Kacey\", \"Kacper\", \"Kade\", \"Kaden\", \"Kadin\", \"Kadyn\", \"Kaeden\", \"Kael\", \"Kaelan\", \"Kaelin\", \"Kaelum\", \"Kai\", \"Kaid\", \"Kaidan\", \"Kaiden\", \"Kaidinn\", \"Kaidyn\", \"Kaileb\", \"Kailin\", \"Kain\", \"Kaine\", \"Kainin\", \"Kainui\", \"Kairn\", \"Kaison\", \"Kaiwen\", \"Kajally\", \"Kajetan\", \"Kalani\", \"Kale\", \"Kaleb\", \"Kaleem\", \"Kal-el\", \"Kalen\", \"Kalin\", \"Kallan\", \"Kallin\", \"Kalum\", \"Kalvin\", \"Kalvyn\", \"Kameron\", \"Kames\", \"Kamil\", \"Kamran\", \"Kamron\", \"Kane\", \"Karam\", \"Karamvir\", \"Karandeep\", \"Kareem\", \"Karim\", \"Karimas\", \"Karl\", \"Karol\", \"Karson\", \"Karsyn\", \"Karthikeya\", \"Kasey\", \"Kash\", \"Kashif\", \"Kasim\", \"Kasper\", \"Kasra\", \"Kavin\", \"Kayam\", \"Kaydan\", \"Kayden\", \"Kaydin\", \"Kaydn\", \"Kaydyn\", \"Kaydyne\", \"Kayleb\", \"Kaylem\", \"Kaylum\", \"Kayne\", \"Kaywan\", \"Kealan\", \"Kealon\", \"Kean\", \"Keane\", \"Kearney\", \"Keatin\", \"Keaton\", \"Keavan\", \"Keayn\", \"Kedrick\", \"Keegan\", \"Keelan\", \"Keelin\", \"Keeman\", \"Keenan\", \"Keenan-Lee\", \"Keeton\", \"Kehinde\", \"Keigan\", \"Keilan\", \"Keir\", \"Keiran\", \"Keiren\", \"Keiron\", \"Keiryn\", \"Keison\", \"Keith\", \"Keivlin\", \"Kelam\", \"Kelan\", \"Kellan\", \"Kellen\", \"Kelso\", \"Kelum\", \"Kelvan\", \"Kelvin\", \"Ken\", \"Kenan\", \"Kendall\", \"Kendyn\", \"Kenlin\", \"Kenneth\", \"Kensey\", \"Kenton\", \"Kenyon\", \"Kenzeigh\", \"Kenzi\", \"Kenzie\", \"Kenzo\", \"Kenzy\", \"Keo\", \"Ker\", \"Kern\", \"Kerr\", \"Kevan\", \"Kevin\", \"Kevyn\", \"Kez\", \"Khai\", \"Khalan\", \"Khaleel\", \"Khaya\", \"Khevien\", \"Khizar\", \"Khizer\", \"Kia\", \"Kian\", \"Kian-James\", \"Kiaran\", \"Kiarash\", \"Kie\", \"Kiefer\", \"Kiegan\", \"Kienan\", \"Kier\", \"Kieran\", \"Kieran-Scott\", \"Kieren\", \"Kierin\", \"Kiern\", \"Kieron\", \"Kieryn\", \"Kile\", \"Killian\", \"Kimi\", \"Kingston\", \"Kinneil\", \"Kinnon\", \"Kinsey\", \"Kiran\", \"Kirk\", \"Kirwin\", \"Kit\", \"Kiya\", \"Kiyonari\", \"Kjae\", \"Klein\", \"Klevis\", \"Kobe\", \"Kobi\", \"Koby\", \"Koddi\", \"Koden\", \"Kodi\", \"Kodie\", \"Kody\", \"Kofi\", \"Kogan\", \"Kohen\", \"Kole\", \"Konan\", \"Konar\", \"Konnor\", \"Konrad\", \"Koray\", \"Korben\", \"Korbyn\", \"Korey\", \"Kori\", \"Korrin\", \"Kory\", \"Koushik\", \"Kris\", \"Krish\", \"Krishan\", \"Kriss\", \"Kristian\", \"Kristin\", \"Kristofer\", \"Kristoffer\", \"Kristopher\", \"Kruz\", \"Krzysiek\", \"Krzysztof\", \"Ksawery\", \"Ksawier\", \"Kuba\", \"Kurt\", \"Kurtis\", \"Kurtis-Jae\", \"Kyaan\", \"Kyan\", \"Kyde\", \"Kyden\", \"Kye\", \"Kyel\", \"Kyhran\", \"Kyie\", \"Kylan\", \"Kylar\", \"Kyle\", \"Kyle-Derek\", \"Kylian\", \"Kym\", \"Kynan\", \"Kyral\", \"Kyran\", \"Kyren\", \"Kyrillos\", \"Kyro\", \"Kyron\", \"Kyrran\", \"Lachlainn\", \"Lachlan\", \"Lachlann\", \"Lael\", \"Lagan\", \"Laird\", \"Laison\", \"Lakshya\", \"Lance\", \"Lancelot\", \"Landon\", \"Lang\", \"Lasse\", \"Latif\", \"Lauchlan\", \"Lauchlin\", \"Laughlan\", \"Lauren\", \"Laurence\", \"Laurie\", \"Lawlyn\", \"Lawrence\", \"Lawrie\", \"Lawson\", \"Layne\", \"Layton\", \"Lee\", \"Leigh\", \"Leigham\", \"Leighton\", \"Leilan\", \"Leiten\", \"Leithen\", \"Leland\", \"Lenin\", \"Lennan\", \"Lennen\", \"Lennex\", \"Lennon\", \"Lennox\", \"Lenny\", \"Leno\", \"Lenon\", \"Lenyn\", \"Leo\", \"Leon\", \"Leonard\", \"Leonardas\", \"Leonardo\", \"Lepeng\", \"Leroy\", \"Leven\", \"Levi\", \"Levon\", \"Levy\", \"Lewie\", \"Lewin\", \"Lewis\", \"Lex\", \"Leydon\", \"Leyland\", \"Leylann\", \"Leyton\", \"Liall\", \"Liam\", \"Liam-Stephen\", \"Limo\", \"Lincoln\", \"Lincoln-John\", \"Lincon\", \"Linden\", \"Linton\", \"Lionel\", \"Lisandro\", \"Litrell\", \"Liyonela-Elam\", \"LLeyton\", \"Lliam\", \"Lloyd\", \"Lloyde\", \"Loche\", \"Lochlan\", \"Lochlann\", \"Lochlan-Oliver\", \"Lock\", \"Lockey\", \"Logan\", \"Logann\", \"Logan-Rhys\", \"Loghan\", \"Lokesh\", \"Loki\", \"Lomond\", \"Lorcan\", \"Lorenz\", \"Lorenzo\", \"Lorne\", \"Loudon\", \"Loui\", \"Louie\", \"Louis\", \"Loukas\", \"Lovell\", \"Luc\", \"Luca\", \"Lucais\", \"Lucas\", \"Lucca\", \"Lucian\", \"Luciano\", \"Lucien\", \"Lucus\", \"Luic\", \"Luis\", \"Luk\", \"Luka\", \"Lukas\", \"Lukasz\", \"Luke\", \"Lukmaan\", \"Luqman\", \"Lyall\", \"Lyle\", \"Lyndsay\", \"Lysander\", \"Maanav\", \"Maaz\", \"Mac\", \"Macallum\", \"Macaulay\", \"Macauley\", \"Macaully\", \"Machlan\", \"Maciej\", \"Mack\", \"Mackenzie\", \"Mackenzy\", \"Mackie\", \"Macsen\", \"Macy\", \"Madaki\", \"Maddison\", \"Maddox\", \"Madison\", \"Madison-Jake\", \"Madox\", \"Mael\", \"Magnus\", \"Mahan\", \"Mahdi\", \"Mahmoud\", \"Maias\", \"Maison\", \"Maisum\", \"Maitlind\", \"Majid\", \"Makensie\", \"Makenzie\", \"Makin\", \"Maksim\", \"Maksymilian\", \"Malachai\", \"Malachi\", \"Malachy\", \"Malakai\", \"Malakhy\", \"Malcolm\", \"Malik\", \"Malikye\", \"Malo\", \"Ma'moon\", \"Manas\", \"Maneet\", \"Manmohan\", \"Manolo\", \"Manson\", \"Mantej\", \"Manuel\", \"Manus\", \"Marc\", \"Marc-Anthony\", \"Marcel\", \"Marcello\", \"Marcin\", \"Marco\", \"Marcos\", \"Marcous\", \"Marcquis\", \"Marcus\", \"Mario\", \"Marios\", \"Marius\", \"Mark\", \"Marko\", \"Markus\", \"Marley\", \"Marlin\", \"Marlon\", \"Maros\", \"Marshall\", \"Martin\", \"Marty\", \"Martyn\", \"Marvellous\", \"Marvin\", \"Marwan\", \"Maryk\", \"Marzuq\", \"Mashhood\", \"Mason\", \"Mason-Jay\", \"Masood\", \"Masson\", \"Matas\", \"Matej\", \"Mateusz\", \"Mathew\", \"Mathias\", \"Mathu\", \"Mathuyan\", \"Mati\", \"Matt\", \"Matteo\", \"Matthew\", \"Matthew-William\", \"Matthias\", \"Max\", \"Maxim\", \"Maximilian\", \"Maximillian\", \"Maximus\", \"Maxwell\", \"Maxx\", \"Mayeul\", \"Mayson\", \"Mazin\", \"Mcbride\", \"McCaulley\", \"McKade\", \"McKauley\", \"McKay\", \"McKenzie\", \"McLay\", \"Meftah\", \"Mehmet\", \"Mehraz\", \"Meko\", \"Melville\", \"Meshach\", \"Meyzhward\", \"Micah\", \"Michael\", \"Michael-Alexander\", \"Michael-James\", \"Michal\", \"Michat\", \"Micheal\", \"Michee\", \"Mickey\", \"Miguel\", \"Mika\", \"Mikael\", \"Mikee\", \"Mikey\", \"Mikhail\", \"Mikolaj\", \"Miles\", \"Millar\", \"Miller\", \"Milo\", \"Milos\", \"Milosz\", \"Mir\", \"Mirza\", \"Mitch\", \"Mitchel\", \"Mitchell\", \"Moad\", \"Moayd\", \"Mobeen\", \"Modoulamin\", \"Modu\", \"Mohamad\", \"Mohamed\", \"Mohammad\", \"Mohammad-Bilal\", \"Mohammed\", \"Mohanad\", \"Mohd\", \"Momin\", \"Momooreoluwa\", \"Montague\", \"Montgomery\", \"Monty\", \"Moore\", \"Moosa\", \"Moray\", \"Morgan\", \"Morgyn\", \"Morris\", \"Morton\", \"Moshy\", \"Motade\", \"Moyes\", \"Msughter\", \"Mueez\", \"Muhamadjavad\", \"Muhammad\", \"Muhammed\", \"Muhsin\", \"Muir\", \"Munachi\", \"Muneeb\", \"Mungo\", \"Munir\", \"Munmair\", \"Munro\", \"Murdo\", \"Murray\", \"Murrough\", \"Murry\", \"Musa\", \"Musse\", \"Mustafa\", \"Mustapha\", \"Muzammil\", \"Muzzammil\", \"Mykie\", \"Myles\", \"Mylo\", \"Nabeel\", \"Nadeem\", \"Nader\", \"Nagib\", \"Naif\", \"Nairn\", \"Narvic\", \"Nash\", \"Nasser\", \"Nassir\", \"Natan\", \"Nate\", \"Nathan\", \"Nathanael\", \"Nathanial\", \"Nathaniel\", \"Nathan-Rae\", \"Nawfal\", \"Nayan\", \"Neco\", \"Neil\", \"Nelson\", \"Neo\", \"Neshawn\", \"Nevan\", \"Nevin\", \"Ngonidzashe\", \"Nial\", \"Niall\", \"Nicholas\", \"Nick\", \"Nickhill\", \"Nicki\", \"Nickson\", \"Nicky\", \"Nico\", \"Nicodemus\", \"Nicol\", \"Nicolae\", \"Nicolas\", \"Nidhish\", \"Nihaal\", \"Nihal\", \"Nikash\", \"Nikhil\", \"Niki\", \"Nikita\", \"Nikodem\", \"Nikolai\", \"Nikos\", \"Nilav\", \"Niraj\", \"Niro\", \"Niven\", \"Noah\", \"Noel\", \"Nolan\", \"Noor\", \"Norman\", \"Norrie\", \"Nuada\", \"Nyah\", \"Oakley\", \"Oban\", \"Obieluem\", \"Obosa\", \"Odhran\", \"Odin\", \"Odynn\", \"Ogheneochuko\", \"Ogheneruno\", \"Ohran\", \"Oilibhear\", \"Oisin\", \"Ojima-Ojo\", \"Okeoghene\", \"Olaf\", \"Ola-Oluwa\", \"Olaoluwapolorimi\", \"Ole\", \"Olie\", \"Oliver\", \"Olivier\", \"Oliwier\", \"Ollie\", \"Olurotimi\", \"Oluwadamilare\", \"Oluwadamiloju\", \"Oluwafemi\", \"Oluwafikunayomi\", \"Oluwalayomi\", \"Oluwatobiloba\", \"Oluwatoni\", \"Omar\", \"Omri\", \"Oran\", \"Orin\", \"Orlando\", \"Orley\", \"Orran\", \"Orrick\", \"Orrin\", \"Orson\", \"Oryn\", \"Oscar\", \"Osesenagha\", \"Oskar\", \"Ossian\", \"Oswald\", \"Otto\", \"Owain\", \"Owais\", \"Owen\", \"Owyn\", \"Oz\", \"Ozzy\", \"Pablo\", \"Pacey\", \"Padraig\", \"Paolo\", \"Pardeepraj\", \"Parkash\", \"Parker\", \"Pascoe\", \"Pasquale\", \"Patrick\", \"Patrick-John\", \"Patrikas\", \"Patryk\", \"Paul\", \"Pavit\", \"Pawel\", \"Pawlo\", \"Pearce\", \"Pearse\", \"Pearsen\", \"Pedram\", \"Pedro\", \"Peirce\", \"Peiyan\", \"Pele\", \"Peni\", \"Peregrine\", \"Peter\", \"Phani\", \"Philip\", \"Philippos\", \"Phinehas\", \"Phoenix\", \"Phoevos\", \"Pierce\", \"Pierre-Antoine\", \"Pieter\", \"Pietro\", \"Piotr\", \"Porter\", \"Prabhjoit\", \"Prabodhan\", \"Praise\", \"Pranav\", \"Pravin\", \"Precious\", \"Prentice\", \"Presley\", \"Preston\", \"Preston-Jay\", \"Prinay\", \"Prince\", \"Prithvi\", \"Promise\", \"Puneetpaul\", \"Pushkar\", \"Qasim\", \"Qirui\", \"Quinlan\", \"Quinn\", \"Radmiras\", \"Raees\", \"Raegan\", \"Rafael\", \"Rafal\", \"Rafferty\", \"Rafi\", \"Raheem\", \"Rahil\", \"Rahim\", \"Rahman\", \"Raith\", \"Raithin\", \"Raja\", \"Rajab-Ali\", \"Rajan\", \"Ralfs\", \"Ralph\", \"Ramanas\", \"Ramit\", \"Ramone\", \"Ramsay\", \"Ramsey\", \"Rana\", \"Ranolph\", \"Raphael\", \"Rasmus\", \"Rasul\", \"Raul\", \"Raunaq\", \"Ravin\", \"Ray\", \"Rayaan\", \"Rayan\", \"Rayane\", \"Rayden\", \"Rayhan\", \"Raymond\", \"Rayne\", \"Rayyan\", \"Raza\", \"Reace\", \"Reagan\", \"Reean\", \"Reece\", \"Reed\", \"Reegan\", \"Rees\", \"Reese\", \"Reeve\", \"Regan\", \"Regean\", \"Reggie\", \"Rehaan\", \"Rehan\", \"Reice\", \"Reid\", \"Reigan\", \"Reilly\", \"Reily\", \"Reis\", \"Reiss\", \"Remigiusz\", \"Remo\", \"Remy\", \"Ren\", \"Renars\", \"Reng\", \"Rennie\", \"Reno\", \"Reo\", \"Reuben\", \"Rexford\", \"Reynold\", \"Rhein\", \"Rheo\", \"Rhett\", \"Rheyden\", \"Rhian\", \"Rhoan\", \"Rholmark\", \"Rhoridh\", \"Rhuairidh\", \"Rhuan\", \"Rhuaridh\", \"Rhudi\", \"Rhy\", \"Rhyan\", \"Rhyley\", \"Rhyon\", \"Rhys\", \"Rhys-Bernard\", \"Rhyse\", \"Riach\", \"Rian\", \"Ricards\", \"Riccardo\", \"Ricco\", \"Rice\", \"Richard\", \"Richey\", \"Richie\", \"Ricky\", \"Rico\", \"Ridley\", \"Ridwan\", \"Rihab\", \"Rihan\", \"Rihards\", \"Rihonn\", \"Rikki\", \"Riley\", \"Rio\", \"Rioden\", \"Rishi\", \"Ritchie\", \"Rivan\", \"Riyadh\", \"Riyaj\", \"Roan\", \"Roark\", \"Roary\", \"Rob\", \"Robbi\", \"Robbie\", \"Robbie-lee\", \"Robby\", \"Robert\", \"Robert-Gordon\", \"Robertjohn\", \"Robi\", \"Robin\", \"Rocco\", \"Roddy\", \"Roderick\", \"Rodrigo\", \"Roen\", \"Rogan\", \"Roger\", \"Rohaan\", \"Rohan\", \"Rohin\", \"Rohit\", \"Rokas\", \"Roman\", \"Ronald\", \"Ronan\", \"Ronan-Benedict\", \"Ronin\", \"Ronnie\", \"Rooke\", \"Roray\", \"Rori\", \"Rorie\", \"Rory\", \"Roshan\", \"Ross\", \"Ross-Andrew\", \"Rossi\", \"Rowan\", \"Rowen\", \"Roy\", \"Ruadhan\", \"Ruaidhri\", \"Ruairi\", \"Ruairidh\", \"Ruan\", \"Ruaraidh\", \"Ruari\", \"Ruaridh\", \"Ruben\", \"Rubhan\", \"Rubin\", \"Rubyn\", \"Rudi\", \"Rudy\", \"Rufus\", \"Rui\", \"Ruo\", \"Rupert\", \"Ruslan\", \"Russel\", \"Russell\", \"Ryaan\", \"Ryan\", \"Ryan-Lee\", \"Ryden\", \"Ryder\", \"Ryese\", \"Ryhs\", \"Rylan\", \"Rylay\", \"Rylee\", \"Ryleigh\", \"Ryley\", \"Rylie\", \"Ryo\", \"Ryszard\", \"Saad\", \"Sabeen\", \"Sachkirat\", \"Saffi\", \"Saghun\", \"Sahaib\", \"Sahbian\", \"Sahil\", \"Saif\", \"Saifaddine\", \"Saim\", \"Sajid\", \"Sajjad\", \"Salahudin\", \"Salman\", \"Salter\", \"Salvador\", \"Sam\", \"Saman\", \"Samar\", \"Samarjit\", \"Samatar\", \"Sambrid\", \"Sameer\", \"Sami\", \"Samir\", \"Sami-Ullah\", \"Samual\", \"Samuel\", \"Samuela\", \"Samy\", \"Sanaullah\", \"Sandro\", \"Sandy\", \"Sanfur\", \"Sanjay\", \"Santiago\", \"Santino\", \"Satveer\", \"Saul\", \"Saunders\", \"Savin\", \"Sayad\", \"Sayeed\", \"Sayf\", \"Scot\", \"Scott\", \"Scott-Alexander\", \"Seaan\", \"Seamas\", \"Seamus\", \"Sean\", \"Seane\", \"Sean-James\", \"Sean-Paul\", \"Sean-Ray\", \"Seb\", \"Sebastian\", \"Sebastien\", \"Selasi\", \"Seonaidh\", \"Sephiroth\", \"Sergei\", \"Sergio\", \"Seth\", \"Sethu\", \"Seumas\", \"Shaarvin\", \"Shadow\", \"Shae\", \"Shahmir\", \"Shai\", \"Shane\", \"Shannon\", \"Sharland\", \"Sharoz\", \"Shaughn\", \"Shaun\", \"Shaunpaul\", \"Shaun-Paul\", \"Shaun-Thomas\", \"Shaurya\", \"Shaw\", \"Shawn\", \"Shawnpaul\", \"Shay\", \"Shayaan\", \"Shayan\", \"Shaye\", \"Shayne\", \"Shazil\", \"Shea\", \"Sheafan\", \"Sheigh\", \"Shenuk\", \"Sher\", \"Shergo\", \"Sheriff\", \"Sherwyn\", \"Shiloh\", \"Shiraz\", \"Shreeram\", \"Shreyas\", \"Shyam\", \"Siddhant\", \"Siddharth\", \"Sidharth\", \"Sidney\", \"Siergiej\", \"Silas\", \"Simon\", \"Sinai\", \"Skye\", \"Sofian\", \"Sohaib\", \"Sohail\", \"Soham\", \"Sohan\", \"Sol\", \"Solomon\", \"Sonneey\", \"Sonni\", \"Sonny\", \"Sorley\", \"Soul\", \"Spencer\", \"Spondon\", \"Stanislaw\", \"Stanley\", \"Stefan\", \"Stefano\", \"Stefin\", \"Stephen\", \"Stephenjunior\", \"Steve\", \"Steven\", \"Steven-lee\", \"Stevie\", \"Stewart\", \"Stewarty\", \"Strachan\", \"Struan\", \"Stuart\", \"Su\", \"Subhaan\", \"Sudais\", \"Suheyb\", \"Suilven\", \"Sukhi\", \"Sukhpal\", \"Sukhvir\", \"Sulayman\", \"Sullivan\", \"Sultan\", \"Sung\", \"Sunny\", \"Suraj\", \"Surien\", \"Sweyn\", \"Syed\", \"Sylvain\", \"Symon\", \"Szymon\", \"Tadd\", \"Taddy\", \"Tadhg\", \"Taegan\", \"Taegen\", \"Tai\", \"Tait\", \"Taiwo\", \"Talha\", \"Taliesin\", \"Talon\", \"Talorcan\", \"Tamar\", \"Tamiem\", \"Tammam\", \"Tanay\", \"Tane\", \"Tanner\", \"Tanvir\", \"Tanzeel\", \"Taonga\", \"Tarik\", \"Tariq-Jay\", \"Tate\", \"Taylan\", \"Taylar\", \"Tayler\", \"Taylor\", \"Taylor-Jay\", \"Taylor-Lee\", \"Tayo\", \"Tayyab\", \"Tayye\", \"Tayyib\", \"Teagan\", \"Tee\", \"Teejay\", \"Tee-jay\", \"Tegan\", \"Teighen\", \"Teiyib\", \"Te-Jay\", \"Temba\", \"Teo\", \"Teodor\", \"Teos\", \"Terry\", \"Teydren\", \"Theo\", \"Theodore\", \"Thiago\", \"Thierry\", \"Thom\", \"Thomas\", \"Thomas-Jay\", \"Thomson\", \"Thorben\", \"Thorfinn\", \"Thrinei\", \"Thumbiko\", \"Tiago\", \"Tian\", \"Tiarnan\", \"Tibet\", \"Tieran\", \"Tiernan\", \"Timothy\", \"Timucin\", \"Tiree\", \"Tisloh\", \"Titi\", \"Titus\", \"Tiylar\", \"TJ\", \"Tjay\", \"T-Jay\", \"Tobey\", \"Tobi\", \"Tobias\", \"Tobie\", \"Toby\", \"Todd\", \"Tokinaga\", \"Toluwalase\", \"Tom\", \"Tomas\", \"Tomasz\", \"Tommi-Lee\", \"Tommy\", \"Tomson\", \"Tony\", \"Torin\", \"Torquil\", \"Torran\", \"Torrin\", \"Torsten\", \"Trafford\", \"Trai\", \"Travis\", \"Tre\", \"Trent\", \"Trey\", \"Tristain\", \"Tristan\", \"Troy\", \"Tubagus\", \"Turki\", \"Turner\", \"Ty\", \"Ty-Alexander\", \"Tye\", \"Tyelor\", \"Tylar\", \"Tyler\", \"Tyler-James\", \"Tyler-Jay\", \"Tyllor\", \"Tylor\", \"Tymom\", \"Tymon\", \"Tymoteusz\", \"Tyra\", \"Tyree\", \"Tyrnan\", \"Tyrone\", \"Tyson\", \"Ubaid\", \"Ubayd\", \"Uchenna\", \"Uilleam\", \"Umair\", \"Umar\", \"Umer\", \"Umut\", \"Urban\", \"Uri\", \"Usman\", \"Uzair\", \"Uzayr\", \"Valen\", \"Valentin\", \"Valentino\", \"Valery\", \"Valo\", \"Vasyl\", \"Vedantsinh\", \"Veeran\", \"Victor\", \"Victory\", \"Vinay\", \"Vince\", \"Vincent\", \"Vincenzo\", \"Vinh\", \"Vinnie\", \"Vithujan\", \"Vladimir\", \"Vladislav\", \"Vrishin\", \"Vuyolwethu\", \"Wabuya\", \"Wai\", \"Walid\", \"Wallace\", \"Walter\", \"Waqaas\", \"Warkhas\", \"Warren\", \"Warrick\", \"Wasif\", \"Wayde\", \"Wayne\", \"Wei\", \"Wen\", \"Wesley\", \"Wesley-Scott\", \"Wiktor\", \"Wilkie\", \"Will\", \"William\", \"William-John\", \"Willum\", \"Wilson\", \"Windsor\", \"Wojciech\", \"Woyenbrakemi\", \"Wyatt\", \"Wylie\", \"Wynn\", \"Xabier\", \"Xander\", \"Xavier\", \"Xiao\", \"Xida\", \"Xin\", \"Xue\", \"Yadgor\", \"Yago\", \"Yahya\", \"Yakup\", \"Yang\", \"Yanick\", \"Yann\", \"Yannick\", \"Yaseen\", \"Yasin\", \"Yasir\", \"Yassin\", \"Yoji\", \"Yong\", \"Yoolgeun\", \"Yorgos\", \"Youcef\", \"Yousif\", \"Youssef\", \"Yu\", \"Yuanyu\", \"Yuri\", \"Yusef\", \"Yusuf\", \"Yves\", \"Zaaine\", \"Zaak\", \"Zac\", \"Zach\", \"Zachariah\", \"Zacharias\", \"Zacharie\", \"Zacharius\", \"Zachariya\", \"Zachary\", \"Zachary-Marc\", \"Zachery\", \"Zack\", \"Zackary\", \"Zaid\", \"Zain\", \"Zaine\", \"Zaineddine\", \"Zainedin\", \"Zak\", \"Zakaria\", \"Zakariya\", \"Zakary\", \"Zaki\", \"Zakir\", \"Zakk\", \"Zamaar\", \"Zander\", \"Zane\", \"Zarran\", \"Zayd\", \"Zayn\", \"Zayne\", \"Ze\", \"Zechariah\", \"Zeek\", \"Zeeshan\", \"Zeid\", \"Zein\", \"Zen\", \"Zendel\", \"Zenith\", \"Zennon\", \"Zeph\", \"Zerah\", \"Zhen\", \"Zhi\", \"Zhong\", \"Zhuo\", \"Zi\", \"Zidane\", \"Zijie\", \"Zinedine\", \"Zion\", \"Zishan\", \"Ziya\", \"Ziyaan\", \"Zohaib\", \"Zohair\", \"Zoubaeir\", \"Zubair\", \"Zubayr\", \"Zuriel\"];\n\nconst markovModel = generateModel(personaDetail);\nconst output_text1 = generateText(markovModel, \"They're\");\nconst output_text2 = generateText(markovModel, \"She's\");\nconst name1 = pick(names);\nconst name2 = pick(names);\nconst name3 = pick(names);\n\ndocument.body.innerHTML \n    = \"<h2> Persona Generation </h2>\" \n        + \"<p id = 'subtitle'> Generating user personas for an app that helps parents keep children busy on flights. </p> &#10;&#13;\" \n        + \"<p> <b> PERSONA 01 </b> </p>\" \n        + name1 + \" and \" + name2 + \": \"\n        + output_text1\n        + \"<p> <b> PERSONA 02 </b> </p>\" \n        + name3 + \": \"\n        + output_text2;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}"
  },
  {
    "_id": "zFXRP4iYXtcb56AJS",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "Turtles",
    "created_at": { "$date": "2023-05-10T00:16:31.189Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "7b209210d2b9f259aa40c308a1b2535c",
        "public_id": "avalanche2023spring/a346kakgbqaj2lsc86ia",
        "version": 1683677795,
        "version_id": "55b88cbc59bb5545a05100301ea9d693",
        "signature": "e104c4483101293891972ac05fd6b54b73cf95e1",
        "width": 599,
        "height": 597,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-10T00:16:35Z",
        "tags": [],
        "bytes": 25856,
        "type": "upload",
        "etag": "e95d85e30223574a8c7550a6756ed23f",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683677795/avalanche2023spring/a346kakgbqaj2lsc86ia.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683677795/avalanche2023spring/a346kakgbqaj2lsc86ia.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "Sketch that I developed. Wanted to create some code that highlighted the growth of the shapes and create a reference in a sense as well.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(50);\n  stroke(255);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  \n  // 1st Row\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(50, 50);\n  myTurtle.penDown();\n  \n  myTurtle.moveTo(100, 50);\n  \n  for(i = 0; i < 3; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(120);\n  }\n  \n  myTurtle.moveTo(200, 50);\n  \n  for(i = 0; i < 4; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(90);\n  }\n  \n  myTurtle.moveTo(300, 50);\n  \n  for(i = 0; i < 5; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(72);\n  }\n  \n  // 2nd Row\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(50, 125);\n  myTurtle.penDown();\n  \n  myTurtle.moveTo(100, 125);\n  \n  for(i = 0; i < 6; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(60);\n  }\n  \n  myTurtle.moveTo(200, 125);\n  \n  for(i = 0; i < 7; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(51.4);\n  }\n  \n  myTurtle.moveTo(300, 125);\n  \n  for(i = 0; i < 8; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(45);\n  }\n  \n  // 3rd Row\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(50, 225);\n  myTurtle.penDown();\n  \n  myTurtle.moveTo(100, 225);\n  \n  for(i = 0; i < 9; i++) {\n    myTurtle.moveForward(25);\n    myTurtle.turnRight(40);\n  }\n  \n  myTurtle.moveTo(200, 225);\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(25);\n    myTurtle.turnRight(36);\n  }\n  \n  myTurtle.moveTo(315, 225);\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(.8);\n    myTurtle.turnRight(1);\n  }\n  \n  noLoop();\n}",
    "comments": []
  },
  {
    "_id": "zFswJAR3fMpZdk3Ro",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-31T02:04:40.854Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "dc26f84d3d908160816336452c983c05",
        "public_id": "avalanche2023spring/vyxms6hx9eurhjn3dppt",
        "version": 1675130762,
        "version_id": "0f44133a06723f8063ed198b5823140b",
        "signature": "3bc14459ae97cc334759fc3e1b5c76eb855ed472",
        "width": 1125,
        "height": 1842,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-01-31T02:06:02Z",
        "tags": [],
        "bytes": 173215,
        "type": "upload",
        "etag": "85d1d68cc8a737a7067e6df11af93f80",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675130762/avalanche2023spring/vyxms6hx9eurhjn3dppt.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675130762/avalanche2023spring/vyxms6hx9eurhjn3dppt.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-01-31T02:21:43.388Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-01T03:28:25.976Z" }
      }
    ],
    "title": "",
    "description": "🖤",
    "inspiration_name": "Your Creative Pattern",
    "inspiration_url": "https://mycreativetype.com/",
    "comments": []
  },
  {
    "_id": "zJbvNcKd2NyAWaXa6",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Microgames",
    "created_at": { "$date": "2023-04-05T01:36:38.812Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "52fd36e00770028d6c9b1033c2e24744",
        "public_id": "avalanche2023spring/g0d93v3lwpef0oatdz0x",
        "version": 1680658610,
        "version_id": "b71554bcc08580e3c029d4939c4aa973",
        "signature": "fcbf153d9f886a91b6a672c5b85e964d63697bce",
        "width": 3456,
        "height": 2002,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-04-05T01:36:50Z",
        "tags": [],
        "pages": 0,
        "bytes": 14256745,
        "type": "upload",
        "etag": "fbb2af17a646470cfa3b3b5acd9854c3",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680658610/avalanche2023spring/g0d93v3lwpef0oatdz0x.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680658610/avalanche2023spring/g0d93v3lwpef0oatdz0x.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680658610/avalanche2023spring/g0d93v3lwpef0oatdz0x.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "110356",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 51,
          "profile": "Main",
          "bit_rate": "3857096",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 3980570,
        "duration": 28.652667,
        "rotation": 0,
        "nb_frames": 1655,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "21e7e380e8fa8a4453453117e5203cc6",
        "public_id": "avalanche2023spring/l7nqcgxxikcdxkfxrfrz",
        "version": 1680658807,
        "version_id": "cf774d79e378310298ce3aa9a3fea258",
        "signature": "57427761afc3ebe30fca29e94bb9adf908642250",
        "width": 3456,
        "height": 1998,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-05T01:40:07Z",
        "tags": [],
        "bytes": 820308,
        "type": "upload",
        "etag": "5a3a00f73fe7f05efae7a986d0dac46e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680658807/avalanche2023spring/l7nqcgxxikcdxkfxrfrz.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680658807/avalanche2023spring/l7nqcgxxikcdxkfxrfrz.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:00:51.872Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-05T19:45:37.557Z" }
      },
      {
        "voter_id": null,
        "category": "funny",
        "created_at": { "$date": "2023-04-05T19:45:38.103Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-04-06T20:14:58.899Z" }
      }
    ],
    "title": "",
    "description": "Help the witch-initiate collect all the items she needs to become a legit WITCH. Used a lot of the practice code from in the session. Ran out of time to figure out a score-tracker that works.",
    "code": "let witch;\nlet vessel;\nlet trinket1, trinket2, trinket3;\nlet obstacles;\nlet score = 0;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n// frameRate(10);\n\nwitch = createSprite(width/2,100);\nwitch.addImage(loadImage('img/witch.png'));\n\n\n\n// obstacles = new Group();\n\n\ttrinket1 = createSprite(random(0+50,width-250), random(0+50,height-250));\n\ttrinket1.addImage(loadImage('img/ob1.png'));\n\n\ttrinket2 = createSprite(random(0+50,width-250), random(0+50,height-250));\n\ttrinket2.addImage(loadImage('img/ob2.png'));\n\n\ttrinket3 = createSprite(random(0+50,width-250), random(0+50,height-250));\n\ttrinket3.addImage(loadImage('img/ob3.png'));\n\n\ttrinket4 = createSprite(random(50,width-250), random(0+50,height-250));\n\ttrinket4.addImage(loadImage('img/ob4.png'));\n\n\tvessel = createSprite(width-200,height-150);\n\tvessel.addAnimation('normal', 'img/pot1.png','img/pot1.png', 'img/pot2.png','img/pot2.png');\n\n\n// for (let i = 0; i < 4; i++) {\n// \tlet box = createSprite(random(0, width), random(0, height));\n// \tbox.addAnimation('default', 'assets/box0001.png', 'assets/box0003.png');\n// \tobstacles.add(box);\n// }\n\n\n\t//assets should be preloaded in the preload() function\n\t//to avoid delays in the visualization\n\t//but they can be loaded in setup() and draw() as well\ntextAlign(CENTER);\n}\n\nfunction draw(){\n\tbackground(250, 130, 180);\n\tdrawSprites();\ntextSize(100);\ntext(\"A Witch's Concoction\", width/2,100)\nwitch.position.x = mouseX;\nwitch.position.y = mouseY;\n\nvessel.scale = 0.5;\nwitch.scale = 0.5;\ntrinket1.scale = 0.5;\ntrinket2.scale = 0.75;\ntrinket3.scale = 0.5;\n\nwitch.collide(vessel);\n\nwitch.displace(trinket1);\nwitch.displace(trinket2);\nwitch.displace(trinket3);\nwitch.displace(trinket4);\n\nif (trinket1.overlap(vessel)){\ntrinket1.remove();\n}\n\nif (trinket2.overlap(vessel)){\n\ttrinket2.remove();\n\t}\n\nif (trinket3.overlap(vessel)){\n\ttrinket3.remove();\n\t}\n\n\tif (trinket4.overlap(vessel)){\n\t\ttrinket4.remove();\n\t\t}\n\n \n}",
    "comments": []
  },
  {
    "_id": "zR9TigB8cTtixR9S2",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "lesson": "3D Forms",
    "created_at": { "$date": "2023-05-02T21:38:30.427Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "37bd88095086fc03e5b4f2e46f0ba984",
        "public_id": "avalanche2023spring/onuw7v8edhqgqrr9rbid",
        "version": 1683063518,
        "version_id": "98bf8a8a54ae512ef4a1a5696e8f14da",
        "signature": "b51a595fd2795ef620185983b975414e7d5fe290",
        "width": 963,
        "height": 706,
        "format": "jpg",
        "resource_type": "image",
        "created_at": "2023-05-02T21:38:38Z",
        "tags": [],
        "bytes": 61544,
        "type": "upload",
        "etag": "8fc46ffac9526de9b11657a1aca90de6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1683063518/avalanche2023spring/onuw7v8edhqgqrr9rbid.jpg",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1683063518/avalanche2023spring/onuw7v8edhqgqrr9rbid.jpg",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T06:51:36.91Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-05-03T23:17:48.563Z" }
      },
      {
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "category": "pretty",
        "created_at": { "$date": "2023-05-05T05:13:34.087Z" }
      }
    ],
    "title": "",
    "description": "Made some keys to experiment with varying designs on the same object. Had some fun making this one and messing around with when to use the union() function vs the difference() function.",
    "code": "//I can spend an hour on this\n\n// Key 1\n\nunion(){\n    color(\"grey\"){\n        difference(){\n        cylinder(1, 2, 2,    center = true);\n            \n        translate([-1, 0, 0]){\n        cylinder(2, .5, .5, center = true);\n        }\n    }\n    \n    difference(){\n        translate([3, 0, 0]){\n        cube([5, 2, 1], center = true);\n            }\n        \n        difference(){\n        translate([3, -1, 0]){\n        rotate([0, 0, 13]){\n        cylinder(3, 2, 2);\n            }\n            }\n            \n        }\n        }\n    }\n}\n\n// Key 2\n\ntranslate([0, 5, 0]){\n    union(){\n        difference(){\n        cylinder(1, 2, 2,    center = true);\n            \n        translate([-0.2, 0, 0]){\n        rotate([0, 0, 36]){\n        cylinder(2, 1.5, 1.5, center = true);\n            }\n        }\n    }\n    \n        translate([5, 0, 0]){\n        cube([7, 1, 1], center = true);\n        }\n        \n        translate([6, -1, 0]){\n        cube([1, 1, 0.5], center = true);    \n        }\n        \n        translate([8, -1, 0]){\n        cube([1, 1, 0.5], center = true);    \n        }\n}\n}\n\n// Key 3\n\ntranslate([0, 10, 0]){\n    union(){\n    color(\"white\"){\n        difference(){\n            cylinder(1, 2, 2,    center = true);\n            \n            translate([-1, 0, 0]){\n            cylinder(2, .5, .5, center = true);\n        }\n    }\n    \n        translate([3, 0, 0]){\n        cube([3, 1, 1], center = true);\n        }\n        \n        translate([3, 0.5, 0]){\n        cube([7, 1, 1], center = true);    \n        }\n        \n        \n       translate([2, -1, 0]){\n         cube([1, 1, 1], center = true);    \n            }\n    \n        translate([4, -1, 0]){\n         cube([1, 1, 1], center = true);    \n            }\n        }\n    }\n}\n\n// Key 4\n\ntranslate([0, 15, 0]){\n    union(){\n    color(\"brown\"){\n        difference(){\n            cube([3, 3, 1],    center = true);\n            \n            translate([-0.7, 0, 0]){\n            cylinder(4, .5, .5, center = true);\n        }\n    }\n    \n    difference(){\n        translate([3, 0, 0]){\n        cube([5, 2, 0.5], center = true);\n        }\n        translate([3, -0.7, 0]){\n        cube([3, 1.5, 3], center = true);\n        }    \n    }\n    }\n}\n}",
    "comments": []
  },
  {
    "_id": "zb2kX9Fk4sQ47D5bC",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "lesson": "Text",
    "created_at": { "$date": "2023-04-14T15:41:13.836Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "93abaf61fbc7226fee2e168cace505d0",
        "public_id": "avalanche2023spring/isnybgcfigja3llh6sva",
        "version": 1681486889,
        "version_id": "f84ba0280d35e4eab6c615da195d7fed",
        "signature": "a584bc91520439bacc1fe6389ed869a32dba7ced",
        "width": 1072,
        "height": 846,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:41:29Z",
        "tags": [],
        "bytes": 153442,
        "type": "upload",
        "etag": "9faa2733813ba144fc33057aa552c504",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681486889/avalanche2023spring/isnybgcfigja3llh6sva.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681486889/avalanche2023spring/isnybgcfigja3llh6sva.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8b76fef16ff28d08f969ec5f6e5f7e44",
        "public_id": "avalanche2023spring/r9m2bnetzqpauhn6fm2z",
        "version": 1681486907,
        "version_id": "5d20d94a099f92793586a93bdb38763c",
        "signature": "c6c1356902f89e191df3c0b0d4918a5cff926c22",
        "width": 996,
        "height": 756,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:41:47Z",
        "tags": [],
        "bytes": 137073,
        "type": "upload",
        "etag": "96f87129cbacb37a825b5f6a7c049969",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681486907/avalanche2023spring/r9m2bnetzqpauhn6fm2z.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681486907/avalanche2023spring/r9m2bnetzqpauhn6fm2z.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "8ae317b2daf51cb8936d6f9e06e0ff0a",
        "public_id": "avalanche2023spring/dvubrqnktk7akvlf8qfh",
        "version": 1681486912,
        "version_id": "87a619ac920e08971f42e45a5698cb47",
        "signature": "ea8d5824ec08d470182f442f64fdea3da0a1ea76",
        "width": 1012,
        "height": 850,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-04-14T15:41:52Z",
        "tags": [],
        "bytes": 157030,
        "type": "upload",
        "etag": "a9b88780cb32e531ccba6924bf9b6ad7",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1681486912/avalanche2023spring/dvubrqnktk7akvlf8qfh.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1681486912/avalanche2023spring/dvubrqnktk7akvlf8qfh.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-04-14T16:19:15.378Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-04-17T14:12:12.436Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "funny",
        "created_at": { "$date": "2023-04-17T14:12:13.771Z" }
      }
    ],
    "title": "",
    "description": "I modified the tracery story teller example from the chapter to create stories about ALL OF YOU and comp form :)",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n  story: [\"#person# #feeling#. So, for their comp form sketch, they #sketch#. This week, they made #number# sketches! Finally, #reason#, they #verb#, and #verb#.\"],\n  \n  number: [\"4\", \"5\", \"10\", \"100\", \"500\", \"1000\", \"1 million\"],\n  person: [\"Chris\", \"Isha\", \"Justin\", \"Rama\", \"Reshma\", \"Alex\", \"Aabha\", \"Brian\", \"Shristi\", \"Sora\", \"John\", \"Sahiti\", \"Ishaan\", \"Keren\"],\n  reason: [\"before it was too late\", \"just for the hell of it\", \"because they wanted to go above and beyond\"], \n  feeling: [\"felt determined\", \"felt stressed\", \"felt inspired\", \"felt cRaZy\"],\n  adjective: [\"cool\", \"weird\", \"strange\", \"nice\", \"insane\", \"crazy\", \"comical\", \"wild\", \"quirky\", \"funky\"],\n  sketch: [\"did something #adjective# with circles\", \"made a #adjective# animation\", \"created #adjective# custom type\", \"made a #adjective# beat with tone.js\", \"generated #adjective# text\", \"made a #adjective# microgame\", \"tried to figure out the strategies homework but failed\", \"tried to figure out the strategies homework and SUCCEEDED\" ],\n  verb: [\"read the chapter\", \"asked #number# questions on the notion page\", \"did the solo challenge\", \"tried something new in p5\", \"did the pair challenge with #person#\", \"printed a sketch in the laser lab\"],\n};\n\nfunction main() {\n  const grammar = tracery.createGrammar(storyGrammar);\n  const story = grammar.flatten(\"#story#\");\n  display(story);\n}\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}\n\n// tracery doesn't load immediately, not sure why, so kludge it\nsetTimeout(main, 10);",
    "comments": [
      {
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "comment": "Love it!",
        "created_at": { "$date": "2023-04-17T14:12:43.863Z" }
      }
    ]
  },
  {
    "_id": "zbmTkSbKKWnTnmHYL",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Pixels",
    "created_at": { "$date": "2023-03-06T04:21:55.015Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "4138fcc2d2fd19476860760737a95c91",
        "public_id": "avalanche2023spring/g3awplvur6ezpgbzhgvs",
        "version": 1678076544,
        "version_id": "ad39f94020a4aeb5fcb77bb9c42b6080",
        "signature": "26fe8a308489ac77ea1af7c0df31773498fefe1d",
        "width": 1628,
        "height": 792,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-06T04:22:24Z",
        "tags": [],
        "bytes": 52653,
        "type": "upload",
        "etag": "c42b90e818d045dfff332685ea113b54",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678076544/avalanche2023spring/g3awplvur6ezpgbzhgvs.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678076544/avalanche2023spring/g3awplvur6ezpgbzhgvs.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "eaabaa3e7a2ea296539887e98175f084",
        "public_id": "avalanche2023spring/y4o0fipmr5114c2smf8x",
        "version": 1678076930,
        "version_id": "b6b45b24a2a7319f14e9ebbf50acaaf5",
        "signature": "ccdbed9c570afea3c0fdd74961f0318888188a2f",
        "width": 1562,
        "height": 772,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-06T04:28:50Z",
        "tags": [],
        "bytes": 51059,
        "type": "upload",
        "etag": "cdbcb6056f3660dfcbe0690cbc11521a",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1678076930/avalanche2023spring/y4o0fipmr5114c2smf8x.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1678076930/avalanche2023spring/y4o0fipmr5114c2smf8x.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {}
    ],
    "votes": [
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-06T06:26:00.726Z" }
      },
      {
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "category": "funny",
        "created_at": { "$date": "2023-03-07T02:15:52.639Z" }
      },
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-07T23:01:54.367Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-10T08:45:56.972Z" }
      }
    ],
    "title": "",
    "description": "Recreated our YouTube friend, the Nyan Cat, pixel by pixel",
    "comments": []
  },
  {
    "_id": "zbsr4yqzQGrZiFc3N",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "lesson": "Music",
    "created_at": { "$date": "2023-03-30T17:54:31.339Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "9631ff154c85f65677c09f85ba9d4b1d",
        "public_id": "avalanche2023spring/xnl4f6waum9xg25uoytw",
        "version": 1680198959,
        "version_id": "dde8686a3aa4ff575eca7cf1c9fa0ebb",
        "signature": "93731bb1fa3ce65d56ed4c7ab3735e2c738232d4",
        "width": 888,
        "height": 980,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-30T17:55:59Z",
        "tags": [],
        "bytes": 77306,
        "type": "upload",
        "etag": "6a7981f999dbabd39744c10af7ef435c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1680198959/avalanche2023spring/xnl4f6waum9xg25uoytw.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1680198959/avalanche2023spring/xnl4f6waum9xg25uoytw.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "878739b29ee65a63b2c595361b25607a",
        "public_id": "avalanche2023spring/bwu2srowz8edoii4kumz",
        "version": 1680198963,
        "version_id": "d5bd290674ec00b3b0f3db00673e89be",
        "signature": "a0b665bffea33a6a3dcf01f420fa8c585baaeec2",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-30T17:56:03Z",
        "tags": [],
        "pages": 0,
        "bytes": 1594004,
        "type": "upload",
        "etag": "867b4cb60351201a6a03387b76d9baa6",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680198963/avalanche2023spring/bwu2srowz8edoii4kumz.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680198963/avalanche2023spring/bwu2srowz8edoii4kumz.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680198963/avalanche2023spring/bwu2srowz8edoii4kumz.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "193691",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "31914",
          "dar": "801:413",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 234070,
        "duration": 54.4795,
        "rotation": 0,
        "nb_frames": 3263,
        "api_key": "547729558371987"
      },
      {
        "asset_id": "61c4da167207418e7bcff1e8504f8c0e",
        "public_id": "avalanche2023spring/ln1lc8v3eutykkbmpkzn",
        "version": 1680199138,
        "version_id": "f38ef54f66e78c48ea228db333e06b53",
        "signature": "e21b17a4b558015165828ecc913c015fef3075ef",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-30T17:58:58Z",
        "tags": [],
        "pages": 0,
        "bytes": 239315,
        "type": "upload",
        "etag": "a63cf7441e34dd4dfeebe6c26a1ed5ca",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1680199138/avalanche2023spring/ln1lc8v3eutykkbmpkzn.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1680199138/avalanche2023spring/ln1lc8v3eutykkbmpkzn.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1680199138/avalanche2023spring/ln1lc8v3eutykkbmpkzn.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "196615",
          "frequency": 44100,
          "channels": 2,
          "channel_layout": "stereo"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 40,
          "profile": "Main",
          "bit_rate": "31945",
          "dar": "801:413",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 240885,
        "duration": 7.947833,
        "rotation": 0,
        "nb_frames": 477,
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-30T19:10:49.779Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-03-31T03:38:28.813Z" }
      }
    ],
    "title": "",
    "description": "Inspired by Imagine by John Lennon - I played with the melody generator and the notes from the chorus. I've also included the non-randomized version here",
    "comments": []
  },
  {
    "_id": "zcKheuJqtMcPxQMDJ",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "lesson": "Introduction",
    "created_at": { "$date": "2023-01-30T18:58:40.048Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "5611c908132c79683a42c9d82d739d07",
        "public_id": "avalanche2023spring/u27spqbdbvayf9lhk5no",
        "version": 1675105124,
        "version_id": "c7d2346fbff3a98c09a956b9dc51ee03",
        "signature": "fcbf12af2c5c053140f4e57eb5099a1488c08f5d",
        "width": 1014,
        "height": 572,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-01-30T18:58:44Z",
        "tags": [],
        "bytes": 127487,
        "type": "upload",
        "etag": "3e33f84bee6febac28f8627a7853ce30",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1675105124/avalanche2023spring/u27spqbdbvayf9lhk5no.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1675105124/avalanche2023spring/u27spqbdbvayf9lhk5no.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [],
    "title": "",
    "description": "My instructions :)",
    "comments": []
  },
  {
    "_id": "zdZrPsuxkDdqstoeE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "lesson": "Noise",
    "created_at": { "$date": "2023-02-15T16:40:33.955Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "44e4c57df8a168878f8f4440cfa35009",
        "public_id": "avalanche2023spring/imkkqohestusonr03vyo",
        "version": 1676479453,
        "version_id": "e3ebbf2cec5dd7257b8a71f22820567b",
        "signature": "c1899f8fe4cd91ed578629c93ef0f98ce65b9604",
        "width": 1922,
        "height": 1198,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T16:44:13Z",
        "tags": [],
        "bytes": 1404345,
        "type": "upload",
        "etag": "be65f35696c099cb05b98c19130a581c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676479453/avalanche2023spring/imkkqohestusonr03vyo.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676479453/avalanche2023spring/imkkqohestusonr03vyo.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "23598620284c484513f7f5506c8b4836",
        "public_id": "avalanche2023spring/tcc7xri0tycn7pzth9kk",
        "version": 1676479456,
        "version_id": "a88fbffdbf3728913b97c50cf85f0d64",
        "signature": "f79a068878194e7b547970b284a0e49dc22a4759",
        "width": 1732,
        "height": 920,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T16:44:16Z",
        "tags": [],
        "bytes": 865234,
        "type": "upload",
        "etag": "5b819cf6b730c805e8ce2d172a58121e",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676479456/avalanche2023spring/tcc7xri0tycn7pzth9kk.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676479456/avalanche2023spring/tcc7xri0tycn7pzth9kk.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "b9c6cc5672a23758eee5ef24643ba07f",
        "public_id": "avalanche2023spring/xofn1yijmni1nxyyitk3",
        "version": 1676479466,
        "version_id": "0a55e5485888cf87c01fa863ebd83a4e",
        "signature": "f5fcd7e2152ab19d798909875b7c2bbb9922ca96",
        "width": 1634,
        "height": 1080,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-02-15T16:44:26Z",
        "tags": [],
        "bytes": 1178985,
        "type": "upload",
        "etag": "4cc78250e4e534865bc15c9bce0000bf",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1676479466/avalanche2023spring/xofn1yijmni1nxyyitk3.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1676479466/avalanche2023spring/xofn1yijmni1nxyyitk3.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      }
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T16:49:21.904Z" }
      },
      {
        "voter_id": "aFZYuqXuhejWXg6yv",
        "category": "pretty",
        "created_at": { "$date": "2023-02-15T18:43:01.62Z" }
      },
      {
        "voter_id": "me69bqQXDu4jtokwu",
        "category": "pretty",
        "created_at": { "$date": "2023-02-16T23:42:50.196Z" }
      },
      {
        "voter_id": null,
        "category": "pretty",
        "created_at": { "$date": "2023-04-28T02:31:34.397Z" }
      }
    ],
    "title": "",
    "description": "**Terrain Map using Perlin Noise on Unity** [View on itch.io here](https://reshmarosethomas.itch.io/noise-map) Made of cylinders placed at varying heights. Wanted to pick a random spot and mark treasure. Also wanted to generate some movement of terrain map over time, or some response from the map when the mouse is close to the treasure.",
    "code": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.Diagnostics;\n\npublic class PlaceTerrain : MonoBehaviour\n{\n    public GameObject terrainCyl;\n    public int NoOfCyls = 6400; //16*30\n\n    // Start is called before the first frame update\n    void Start()\n    {\n\n        int RandomI = Random.Range(0, 80);\n        int RandomJ = Random.Range(0, 80);\n\n        for (int i = 1; i <= NoOfCyls/80; i++)\n        {\n            for (int j = 1; j <= NoOfCyls /80; j++)\n            {\n                Vector3 position;\n                float y = Mathf.PerlinNoise(i * 0.1f, j * 0.1f) * -4.6f + 3;\n              \n                if (i%2 == 0)\n                {\n                    position = new(i * 0.8f, y, j * 0.8f);\n\n                }\n                else\n                {\n                    position = new(i * 0.8f, y, j * 0.8f - 0.4f);\n                }\n\n                Instantiate(terrainCyl, position, Quaternion.identity, transform);\n            }\n\n        }\n\n\n    }\n\n\n}",
    "comments": []
  },
  {
    "_id": "zgqhD85Gx986F6QT3",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "lesson": "Vectors",
    "created_at": { "$date": "2023-03-23T19:11:03.518Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "d987413eda68b4ff3a89508da6dbaf8d",
        "public_id": "avalanche2023spring/emkqavmaae26ondamaqi",
        "version": 1679598668,
        "version_id": "1a419c8c08c0cfefd6d0451749fbec82",
        "signature": "636a7010a85a8c19c0064629bc267dc831c9e794",
        "width": 1198,
        "height": 1194,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-23T19:11:08Z",
        "tags": [],
        "bytes": 56116,
        "type": "upload",
        "etag": "fe5ea3409170fdf6e10600afbab7d24c",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1679598668/avalanche2023spring/emkqavmaae26ondamaqi.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1679598668/avalanche2023spring/emkqavmaae26ondamaqi.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {},
      {}
    ],
    "votes": [
      {
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T19:22:33.801Z" }
      },
      {
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T19:53:28.028Z" }
      },
      {
        "voter_id": "dPng55tLHcDzdX24f",
        "category": "pretty",
        "created_at": { "$date": "2023-03-23T20:40:02.379Z" }
      }
    ],
    "title": "",
    "description": "WEEK 7 (3/4): My original first sketch on paper.js, I got very confused with points and for some reason had a very hard time with this but it make the creations i did later easier to understand.",
    "comments": []
  },
  {
    "_id": "zw2MF7rESxmxY2u3o",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "lesson": "Strategies",
    "created_at": { "$date": "2023-03-02T06:53:45.995Z" },
    "posted": true,
    "cloudinary_media": [
      {
        "asset_id": "c390a9e0d5369bf0a0dcbfcecf9c648c",
        "public_id": "avalanche2023spring/njrd0rzon8xyb5j9nuyf",
        "version": 1677740411,
        "version_id": "400f6c9ed2c31d7bb70bea689f09ecf8",
        "signature": "35af5f1aba522504a6afd8e566c4f7ac67b63332",
        "width": 798,
        "height": 796,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T07:00:11Z",
        "tags": [],
        "bytes": 181822,
        "type": "upload",
        "etag": "14d2780cacbe7aa7fe6c0202543d48ee",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677740411/avalanche2023spring/njrd0rzon8xyb5j9nuyf.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677740411/avalanche2023spring/njrd0rzon8xyb5j9nuyf.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "9f71437e3038d5669bb39bad2ccd28cc",
        "public_id": "avalanche2023spring/dwxykrw6osofxopm9cds",
        "version": 1677740416,
        "version_id": "14e503ecc8909e1f8b58ddb7871a1f1b",
        "signature": "142ce7985a306f16b0bbca179060a2d252b73ec3",
        "width": 596,
        "height": 596,
        "format": "png",
        "resource_type": "image",
        "created_at": "2023-03-02T07:00:16Z",
        "tags": [],
        "bytes": 65553,
        "type": "upload",
        "etag": "f6e42a38f4ee647311aa99ad5da31544",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/image/upload/v1677740416/avalanche2023spring/dwxykrw6osofxopm9cds.png",
        "secure_url": "https://res.cloudinary.com/compform2023spring/image/upload/v1677740416/avalanche2023spring/dwxykrw6osofxopm9cds.png",
        "folder": "avalanche2023spring",
        "api_key": "547729558371987"
      },
      {
        "asset_id": "4f7222b161dbcc171e44142381255fcf",
        "public_id": "avalanche2023spring/ymxzhpn53q3wn90xs8f8",
        "version": 1677741510,
        "version_id": "b98e3830c76940018f6cf6d90a88f991",
        "signature": "5b29bf6c5f40c5bea12ad2c71db0430df07f7211",
        "width": 794,
        "height": 792,
        "format": "mov",
        "resource_type": "video",
        "created_at": "2023-03-02T07:18:30Z",
        "tags": [],
        "pages": 0,
        "bytes": 2865639,
        "type": "upload",
        "etag": "2b2f9af3ed8b498c941b4367f1363143",
        "placeholder": false,
        "url": "http://res.cloudinary.com/compform2023spring/video/upload/v1677741510/avalanche2023spring/ymxzhpn53q3wn90xs8f8.mov",
        "secure_url": "https://res.cloudinary.com/compform2023spring/video/upload/v1677741510/avalanche2023spring/ymxzhpn53q3wn90xs8f8.mov",
        "playback_url": "https://res.cloudinary.com/compform2023spring/video/upload/sp_auto/v1677741510/avalanche2023spring/ymxzhpn53q3wn90xs8f8.m3u8",
        "folder": "avalanche2023spring",
        "audio": {
          "codec": "aac",
          "bit_rate": "143704",
          "frequency": 44100,
          "channels": 1,
          "channel_layout": "mono"
        },
        "video": {
          "pix_format": "yuv420p",
          "codec": "h264",
          "level": 31,
          "profile": "Main",
          "bit_rate": "7155873",
          "time_base": "1/6000"
        },
        "is_audio": false,
        "frame_rate": 60,
        "bit_rate": 7349363,
        "duration": 3.119333,
        "rotation": 0,
        "nb_frames": 188,
        "api_key": "547729558371987"
      }
    ],
    "votes": [],
    "title": "",
    "description": "Coding Challenge 1. \nThe noise() was strong in this one (for me). Worked with the starting code in the textbook.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\nlet diameter;\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(20);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    let x = noise(i * 20, 0) * 400;\n    let y = noise(i * 20, 1000) * 400;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    if(x>120&&x<280&&y>120&&y<280){\n         \n       fill(max(random(280),random(290),random(300)),100,100);\n      diameter = random(12,18)+ noise(1.05)*2;\n    }\n    else{\n          fill(max(random(100),random(110),random(120)),100,100);\n      diameter = random(4,10)+noise(1.001)*5;\n    }\n \n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n\n\n    ellipse(x+noise(1)*10, y+noise(1.001)*10, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "comments": []
  }
]
