[
  {
    "_id": "27vdvsA9c6FTbMgDa",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-28T03:30:50.328Z",
    "posted": true,
    "lesson": "API",
    "description": "I really wanted the joke generator to work so I took another stab at it. Turns out I was able to get it to function by simply trying out a different API. This one generates a new dad joke every time you refresh the page.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uibymrddapzlsxp2iekr",
        "width": 1266,
        "height": 1132,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/irieoay9blockaj64qad",
        "width": 2376,
        "height": 1126,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/w0ytzzndnirzkngeqpwt",
        "width": 2376,
        "height": 1124,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-28T04:54:36.353Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2H4dv4GFFGCBmZdyJ",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-21T00:08:16.108Z",
    "posted": true,
    "lesson": "Params",
    "description": "Inspired by a rather bubbly drink I had this weekend with uncontrollable flow of bubbles 🙃",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet bubbleSize;\nlet t=0;\nlet densityX;\nlet densityY;\n\nfunction setup() {\n  createCanvas(800, 800);\n  // noLoop();\n  \n  densityX = createSlider(50, 300, 50);\n  densityX.position(20, 40);\n  densityX.style('width', '100px');\n\n  createP(\"Vertical Density\");\n  densityY = createSlider(50, 300, 50);\n  densityY.position(350, 40);\n  densityY.style('width', '100px');\n  \n  createP(\"Bubble Size\");\n  bubbleSize = createSlider(5, 12, 5);\n  bubbleSize.position(600, 40);\n  bubbleSize.style('width', '100px');\n}\n\nfunction draw() {\n  background(110, 195, 196)\n  \n  push()\n  noStroke()\n  fill(30)\n  textSize(14)\n  text('Horizontal Density', 20, 30);\n  text('Vertical Density', 350, 30);\n  text('Bubble Size', 600, 30);\n  pop()\n  \n  for(let x=width/2-densityX.value(); x<width/2+densityX.value(); x+=10){\n    for (let y=height/2-densityY.value();y<height/2+densityY.value(); y+=10){\n      \n      let n;\n      \n      n = noise(x, y)*60-30\n      \n      let s;\n      \n      s = noise(x*0.01, y*0.01)*20-10\n      \n      noiseDetail(t);\n      \n      fill (255, 50+n)\n      stroke(255, 200+n)\n      \n      ellipse(x+n, y+n, bubbleSize.value()+s, bubbleSize.value()+s)\n      \n    }\n    \n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ntbjybauklzeroilu5jm",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/qfmddm8h3u0ibhk7vqso",
        "width": 1080,
        "height": 1920,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-21T06:00:19.289Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-22T04:46:16.765Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2Ttxhsdd8PJ2oabH6",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-12T17:04:16.49Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "MY GARDEn",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/o1kcgav26rzbn4ibkjd6",
        "width": 984,
        "height": 990,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "2iaHrSGnqnjyv9fXS",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-16T15:14:47.7Z",
    "posted": true,
    "lesson": "Noise",
    "description": "My pair challenge for Srishti - just playing around with noise to create flow-y motions",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(800, 800);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(0, 95, 130);\n  \n  noStroke()\n  \n  for(let x=5; x<width; x+=5){\n    \n    let r = 228;\n    let g = 148;\n    let b = 255;\n//     228, 148, 255\n//     145, 255, 105\n    \n    t = noise(x*0.01, frameCount * 0.05) * 200 - 100;\n    \n   \n\n//     144, 255, 107\n    \n    for(let y=10; y<height + 20; y+=10){\n       fill(r + t, g+ t, b + t);\n    let n = noise(x * 0.01, y*0.001) * 40 - 20\n    ellipse(x, y + n, 5, 5);\n    noiseDetail(0.9);\n      // rect(x, y + n, 5, 5 + n)\n      \n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lcxv0dey9h5avihoye2t",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xcvoyd6foyfhkbdkb54p",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T18:31:10.631Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-17T00:57:39.26Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2ibejdZEaTakQweSW",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-12T04:58:32.152Z",
    "posted": true,
    "lesson": "Random",
    "description": "Malevich-inspired sketch with rectangles and ellipses.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\n//shape positions and angle\nlet x;\nlet y;\nlet r;\n\n//colors\nlet shapeColR;\nlet shapeColG;\nlet shapeColB;\n\n//texture\nlet texture;\n\n//no. of shapes\nlet shapeNum;\n\nfunction preload() {\n  texture = loadImage('papertexture.jpeg');\n}\n\nfunction setup() {\n  frameRate(1);\n  createCanvas(500, 500);\n  angleMode(DEGREES);\n  noStroke();\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(220);\n  image(texture,0,0);\n  randomStuff(); \n  // blendMode(LIGHTEST); -- Can't figure out how to blend it with the texture\n  \n}\n\n\nfunction randomStuff() {\n  shapeNum = floor(random(5,42));\n  \n  for(let i = 0;  i < shapeNum; i++) {\n    x = random(0, width-200);\n    y = random(0, height-150);\n    w = (random(10, 200));\n    h = (random(10, 200));\n    r = (random(-40, 80));\n    shapeColR =  floor(random(0, 360));\n    shapeColG =  floor(random(0, 360));\n    shapeColB =  floor(random(0, 360));\n    \n    makeRect(x, y, w, h, r);\n    makeCircle(x,y,w,h);\n  }\n}\n\nfunction makeRect(x, y, w, h, r){\n  fill(shapeColR,shapeColG,shapeColB);\n  push();\n    translate(x, y);\n    rotate(r);\n    rect(x, y, w, h);\n  pop();\n}\n\nfunction makeCircle(x,y,w,h) {\n  fill(shapeColR,shapeColG,shapeColB);\n  ellipse(x,y,w,h);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hljh7scrkxqdhnbmvuix",
        "width": 1006,
        "height": 1000,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-17T04:45:56.864Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T06:00:07.346Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2mZBSqyhF7u9av2gp",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-02T18:02:19.948Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Inspired by Alex's instructions",
    "code": "//require https://cdnjs.cloudfare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gap = 16;              //gap between each point\nlet l = 32;               //l = half the line length\nlet spacingH;             //horizontal spacing btw points\nlet spacingV;             //vertical spacing btw points\nlet angX = 90;              //starting angle 1\nlet angY = 90;              //starting angle 2\nlet colorA, colorB, colorC;\n\nfunction setup() {\n  colorMode(RGB);\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  \n  spacingH = height / gap;\n  spacingV = width / gap;\n  colorA = color(255, 0, 0);\n  colorB = color(0, 0, 255);\n}\n\nfunction draw() {\n  background('black');\n  \n  angX = map(mouseX, 0, width, 0, 360);\n  angY = map(mouseY, 0, height, 0, 360);\n  \n  push();\n  colorC =\n  //stroke('white'); \n  strokeWeight(2);\n  \n  for (let i = spacingH; i<width; i+=spacingH) {\n    for (let j = spacingV; j<height; j+=spacingV) {\n      //point(i, j); //ref points\n      push();\n        translate(i, j);\n        strokeWeight(4);\n        line (l*sin(angX), l*sin(angY), l*cos(angX), l*cos(angY));\n      pop();\n      \n      angX+=1; angY+=1;\n    }\n  }   \n  pop();\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ndsv7afhixf48qdutsej",
        "width": 1200,
        "height": 1200,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T18:07:35.566Z"
      },
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T18:07:40.486Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-02T23:18:09.41Z"
      },
      {
        "category": "funny",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-03T00:24:51.356Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-03T06:50:59.266Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2otbeGoS59NeFuPDa",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-22T00:12:25.569Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "First part of the individual assignment! I brought these designs to the laser lab which I then realized was pretty ambitious... I ended up printing the first design!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pykjuwzwfnlyxcjerrvh",
        "width": 1440,
        "height": 1441,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tsovzcufpfw1qsrqwren",
        "width": 1440,
        "height": 1441,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/otwtb6e0uhoz1ybbxzq7",
        "width": 1440,
        "height": 1441,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-22T08:19:32.558Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T16:59:52.439Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2pwnpLAnsLYMHYHzN",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-07T03:11:09.959Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "\"Mad Scientists\" couch co-op to produce maximum possible science juice!\nFor further iterations I would want to set a timer for the response action to increase the challenge and add some animations and sound effects. But a pretty straightforward interaction inspired by the slamming button games at Barcade 😬",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vcqmmqv1mqe1jvyf2dch",
        "width": 2800,
        "height": 1600,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T03:22:07.49Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:48:25.571Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2qp7eQr5DQaBcXLsY",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-14T09:31:45.082Z",
    "posted": true,
    "lesson": "Text",
    "description": "WEEK 10 (3/4): If this is not spooky then idk what is. THIS NOT FOUND ERROR KEPT POPPING UP AND I WAS SO TIRED WHEN I WAS DOING THIS AND GAVE UP.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uz6pg45djj6sp3v5dj9d",
        "width": 1336,
        "height": 704,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "2rgMjdzGAQoi5MTug",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-10T02:32:44.637Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Created this fabric pattern for the pair challenge. I used Keren's sketch here!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pivzsk4whlxap5ka99fq",
        "width": 496,
        "height": 497,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T02:39:22.509Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-10T05:30:29.752Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:35.406Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "2thFTmKpEkkpHuDJA",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-07T22:12:10.128Z",
    "posted": true,
    "lesson": "Random",
    "description": "Recreation of Piet Mondrian's Composition with Yellow, Blue and Red 1937–42. I still need to change elements to make the rectangles line up better, space the lines out and change the sketch cosmetically. This took me around two hours to make using the random () function.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yg5it2agtpo3cyuv1dds",
        "width": 506,
        "height": 497,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/mfr4jlcesuxhb7r3p94t",
        "width": 510,
        "height": 501,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-08T04:58:28.261Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-08T20:10:47.433Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:36.247Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "36PTf5bKSJvf72GvA",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-09T01:13:50.445Z",
    "posted": true,
    "lesson": "Random",
    "description": "WEEK 2 SKETCH (1/4) : PAIRED CHALLENGE \nWe had an unnecessary amount of funny moments doing this assignment. Here is the sauce",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar deck = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar deckPos = 0;\nvar d;\n\nfunction setup() {\n  createCanvas(800, 800);\n  deck = shuffle(deck);\n  frameRate(.5);\n}\n\nfunction draw() {\n  for(let i = 0; i < 10; i++) {\n    var d = deck[deckPos];\n    drawScenes(d);\n\n    deckPos++;\n    if (deckPos > deck.length - 1) {\n      deck = shuffle(deck);\n      deckPos = 0;\n    }\n\n    return d;\n  }\n}\n\nfunction drawScenes(dVar) {\n  switch(dVar){\n    case 0:\n      scene0();\n      break;\n    case 1:\n      scene1();\n      break;\n    case 2:\n      scene2();\n      break;\n    case 3:\n      scene3();\n      break;\n    case 4:\n      scene4();\n      break;\n    case 5:\n      scene5();\n      break;\n    case 6:\n      scene6();\n      break;\n    case 7:\n      scene7();\n      break;\n    case 8:\n      scene8();\n      break;\n    case 9:\n      scene9();\n      break;\n  }\n}\n\nfunction scene0() {\n  background(\"red\");\n  fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 20;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10)\n      ellipse(x+space/2,y+space/2,10)\n    }\n  }\n}\n\n\nfunction scene1() {\n  background(\"orange\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 25;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene2() {\n  background(\"yellow\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 30;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene3() {\n  background(\"green\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 35;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene4() {\n  background(\"blue\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 40;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene5() {\n  background(\"purple\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 45;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene6() {\n  background(\"black\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 50;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene7() {\n  background('grey');\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 55;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene8() {\n  background(\"lightgreen\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 60;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene9() {\n  background(\"pink\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 65;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/b17tbeke2qckotunz14x",
        "width": 1190,
        "height": 1188,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "nerdy",
        "voter_id": "EZGFdZAsGvyhaQ3Gi",
        "created_at": "2023-02-09T01:16:03.11Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3EKhc79unMtdPn498",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-23T02:44:54.644Z",
    "posted": true,
    "lesson": "Params",
    "description": "Changing some fun filters with slider.",
    "code": "/change pixel to fluroscent on mouse move\n//image\n//change canvas size to image size\n//get pixel information\n//change the ones we cant to change\n//let slider;\n\nlet slider;\nlet filterModes;\n\nfunction preload() {\n  img = loadImage(\"dog.jpg\");\n}\n\nfunction setup() {\n  img.resize(windowWidth, 0);\n  createCanvas(img.width, img.height);\n \n\n   filterModes = [\n    GRAY,\n    OPAQUE,\n    INVERT,\n    POSTERIZE,\n    BLUR,\n    ERODE,\n    DILATE,\n    BLUR,\n    THRESHOLD,\n  ];\nslider =  sliderMaker(filterModes.length-1);\n\n}\n\nfunction draw() {\n  image(img, 0, 0);\n\n\n  let val = slider.value();\n  \n  filter(filterModes[val]);\n}\n\nfunction sliderMaker(maxValue) {\n  //createSlider(min, max, [value], [step])\n  slider = createSlider(0, maxValue, 1, 1);\n  slider.position(10, 40);\n  return slider;\n}\n\n// function changeFilter() {\n//   if (index < filterModes.length - 1) index++;\n//   else index = 0;\n//   currFilterMode = filterModes[index];\n\n//   console.log(\"Current filter: \" + currFilterMode, \"Sahiti\");\n// }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nko8iqm62j3sp1e86egg",
        "width": 5184,
        "height": 3456,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hb2tcqhb25gzgrutpptb",
        "width": 861,
        "height": 572,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wp0k9i5mn0wjwjebtx41",
        "width": 861,
        "height": 576,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T04:12:44.821Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-23T17:18:20.808Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:21.451Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3HYkBxCo4iJXpH6yB",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-01T03:23:10.185Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Attempt at Challenge 2...",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet frequency_slider;\nlet amplitude_slider;\nlet time_speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 100);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n  createP(\"Time Speed\");\n  time_speed_slider = createSlider(0, 100, 100);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let frequency = frequency_slider.value();\n  let amplitude = amplitude_slider.value() / 10;\n  let time_speed = time_speed_slider.value() / 1000\n\n  noiseDetail(1, 0.5);\n  // noiseDetail(1, 1);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = (random() - 0.5) * amplitude * 10;\n    // let offsetY = (random() - 0.5) * amplitude * 10;\n\n    let offsetX = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n    let offsetY = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vqzj2nvoqxjqnds4oew4",
        "width": 1028,
        "height": 1130,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "3JBQ754Gp4d6DhNp4",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-12T17:05:43.592Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "SPIROGRAPH",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hqpiomang3ylf32ddevl",
        "width": 258,
        "height": 224,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "3LeLS4jsJt4c2Du85",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-05T15:51:08.289Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "MY CHESS CASTLE: COLORED EDITION",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vlkucwviblozetvt8frs",
        "width": 692,
        "height": 686,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/mxjin8tlnci2bgp71bsz",
        "width": 692,
        "height": 686,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zcyphgz52dlttqdjq7jt",
        "width": 1404,
        "height": 884,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-05T16:01:14.72Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:52.389Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T22:58:00.764Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:18:23.999Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3RfQa25G5hLHSEE8x",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-11T17:16:58.093Z",
    "posted": true,
    "lesson": "Text",
    "description": "Using textToPoints()  to display the word \"microbe\"",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/humuwo0kzj2tsvrbxu6z",
        "width": 963,
        "height": 616,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-11T20:01:54.878Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-12T03:23:05.339Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-12T19:05:30.409Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3YZcGAG5BfQDEZi9Z",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-07T05:53:44.005Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "**Pacman with Doors:** Followed [this Noobtuts tutorial](https://noobtuts.com/unity/2d-pacman-game) to make Pacman with and without doors in Unity. This was done in collaboration with another classmate (Marina Pace)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ytixuj52qurxop3b6ofz",
        "width": 2880,
        "height": 1800,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T07:33:09.672Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-07T14:28:45.303Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-11T03:23:15.15Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:31:33.889Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3c4vaCu9X535tMqSW",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-24T00:35:35.57Z",
    "posted": true,
    "lesson": "Params",
    "description": "**Play of Ball's instantiated position, bounciness as params on Unity** Continuing my struggle with learning Unity - finding it too difficult to even start considering aesthetics in the sketch.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/afiyc88lg9e4g7xtsyan",
        "width": 1480,
        "height": 820,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-24T01:04:14.452Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T03:52:03.446Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:45.582Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3j8XkDag3aPseoZD6",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-01T23:02:31.046Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Decoded John's instruction set!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hrrarxttkv6mkhcp9aus",
        "width": 702,
        "height": 504,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T02:02:03.429Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3jZdKQqoSpSmuq4G2",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-03T07:55:49.594Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "My attempt at challenge 2! This is where I got within the time limit. I'm still trying to figure out the time speed slider.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sqglap8fmnxfiflxaivl",
        "width": 936,
        "height": 978,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "3kN4Hhjmad6yzv8hM",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-08T07:19:12.298Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Building upon challenge 2",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet amplitude_slider;\nlet frequency_slider;\nlet speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 10, 5, 0.1);\n\n  createP(\"Speed\");\n  speed_slider = createSlider(0, 10, 5, 0.1);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = frequency_slider.value();\n  let timespeed = speed_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  // create a color array with random colors\n  let colors = [\n    color(255, 0, 0),\n    color(0, 255, 0),\n    color(0, 0, 255),\n    color(255, 255, 0),\n    color(0, 255, 255),\n    color(255, 0, 255)\n  ];\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    let offsetX = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n    let offsetY = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n\n    // randomly choose a color from the array\n    let col = random(colors);\n\n    // set the fill color to the randomly chosen color\n    fill(col);\n\n    // draw the ellipse with a random size between 5 and 20\n    ellipse(x + offsetX, y + offsetY, random(5, 20), random(5, 20));\n\n    // draw a line from the previous ellipse to the current one\n    stroke(col);\n    strokeWeight(2);\n    if (i > 0) {\n      let px = lerp(startX, endX, i - 0.02);\n      let py = lerp(startY, endY, i - 0.02);\n      line(px + offsetX, py + offsetY, x + offsetX, y + offsetY);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ozkxmdbo9uxshgdayth2",
        "width": 1018,
        "height": 1086,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "3kRSSBQNLMxXgnNrR",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-27T23:41:47.368Z",
    "posted": true,
    "lesson": "API",
    "description": "Using sound levels to control outputs to experiment with p5 sound",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zvcez7rlct9b9wx8evsj",
        "width": 2548,
        "height": 1548,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/wtlgov0vfsdnmyewcqzj",
        "width": 2548,
        "height": 1548,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "3o4uYdWakaGFQJvYm",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-10T02:36:09.86Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Tried to create a glitch distortion on a collage I had made",
    "code": "let img;\nlet glitchImg;\n\nfunction preload() {\n  img = loadImage('1.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  image(img, 0, 0);\n  \n  // Get pixel values\n  loadPixels();\n  \n  // Apply glitch effect\n  glitchImg = createImage(img.width, img.height);\n  glitchImg.loadPixels();\n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n      let index = (x + y * img.width) * 4;\n      let glitchIndex = (x + y * glitchImg.width) * 4;\n      let r = pixels[index];\n      let g = pixels[index + 1];\n      let b = pixels[index + 2];\n      \n      // Add random offset to pixel\n      glitchImg.pixels[glitchIndex] = pixels[index + int(random(-10, 10))];\n      glitchImg.pixels[glitchIndex + 1] = pixels[index + 1 + int(random(-10, 10))];\n      glitchImg.pixels[glitchIndex + 2] = pixels[index + 2 + int(random(-10, 10))];\n      glitchImg.pixels[glitchIndex + 3] = pixels[index + 3];\n    }\n  }\n  \n  // Update glitch image pixels\n  glitchImg.updatePixels();\n  image(glitchImg, 0, 0);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t0dhl7z1dbcm0kxqko7f",
        "width": 1376,
        "height": 1830,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T02:39:04.253Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:37.521Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3rnEQ8q6WyhdHRX4f",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-09T18:57:26.432Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "**Generating Pixel Images**",
    "code": "function setup() {\n  createCanvas(600, 600);\n}\n\nfunction draw() {\n  background(0);\n\n  img = createImage(100, 100);\n  img.loadPixels();\n  let c;\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      if (x%2==0) \n        c = color(noise(x)*255, 0, noise(x, y)*255);\n      else if (y%2==0)\n        c = color(noise(x, y)*225, 30, noise(y)*200);\n      else \n        c = color(noise(x)*100, 60, noise(y)*255);\n      img.set(x, y, c);\n    }\n  }\n\n  img.updatePixels();\n\n  //noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/azvhu5fkpepqrt4vvm3y",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/m7bp7jzqg3jxwzovma25",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/euxsinneiohqyqlcccto",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T21:15:47.653Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:03.093Z"
      },
      {
        "category": "funny",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-16T11:28:08.873Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-16T11:28:08.959Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3tEBBvWKq8A6KNmsa",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-16T18:40:55.71Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I made an abstract mountain scene using noise and wave(). This piece was done for the map challenge by depicting abstract terrain.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cf37g7uu8wwuxufrwobs",
        "width": 942,
        "height": 720,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T18:50:09.112Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:34.618Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3vtLfBCfzrQJTzDG4",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-09T17:30:30.418Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "WEEK 6 (4/4): I PIXELATED IMAGES. THIS IS SO FUN. LOOK AT MY CAT. This was surprisingly easier to understand how to do.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yg7zvanisjm7ill7pvph",
        "width": 580,
        "height": 668,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/az88ng8tsicrbmxybqax",
        "width": 596,
        "height": 596,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:46.842Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3weHc57zkE2ASmpc5",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-15T06:50:43.018Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Trying to understand noise. Variation in curves controlled by noise and millis.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet dim = 400;\n\nfunction setup() {\n  createCanvas(dim, dim);\n}\n\nfunction draw() {\n  // background(220);\n  \n  let col = color(81, 19, 117, 10);\n  background(col);\n  fill(col);\n  stroke(219, 203, 31);\n  strokeWeight(dim / 175);\n\n  let num = round(dim / 25);\n  let offset = 200 / num;\n  let delta = 10 * cos(TWO_PI * millis() / 2000);\n\n  for (let x = 0; x < num; x++) {\n    for (let y = 0; y < num; y++) {\n      let nx = noise(x) * 10;\n      let ny = noise(y) * 10;\n\n      bezier(\n        0,\n        ny + offset + (y * dim) / num,\n        y + ny * delta,\n        offset + (y * dim) / num - delta * ny,\n        y + ny * delta * 10,\n        offset + (y * dim) / num + delta * ny,\n        dim,\n        ny + offset + (y * dim) / num\n      );\n      bezier(\n        nx + offset + (x * dim) / num,\n        0,\n        offset + (x * dim) / num - delta * nx,\n        x + nx * delta,\n        offset + (x * dim) / num + delta * nx,\n        x + nx * delta * 10,\n        nx + offset + (x * dim) / num,\n        dim\n      );\n      \n    }\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tximloi6b7g4tbqmlcms",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-15T16:40:21.586Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "3whbHEsb6jNykmB3i",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-02T21:00:21.863Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Warming up and playing around with the random sketch from the lesson",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/en29dmtfkiz6ifieuk16",
        "width": 1650,
        "height": 1620,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hy6k0tggcmrydpaa5ors",
        "width": 1650,
        "height": 1620,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sb9shfnb1vhdpotyu7hq",
        "width": 1650,
        "height": 1620,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-02T21:58:40.704Z"
      },
      {
        "category": "pretty",
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "created_at": "2023-02-02T23:53:37.235Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-02-03T02:19:08.054Z"
      }
    ],
    "comments": [
      {
        "comment": "How did you achieve such a beautiful analogous color palette?",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T03:32:48.569Z"
      },
      {
        "comment": "I had set by R and G values to be random and B was 255. (R, G, 255) colors",
        "commenter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-03T15:01:29.298Z"
      }
    ]
  },
  {
    "_id": "3xkjTuEDZS3bgqPGd",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-07T02:23:41.182Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Microgame with Reshma!\nWe made a ping pong game with the end goal of pushing the ball into the hole using the paddles.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xfsbfr7spf4kycdynay2",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T02:37:53.951Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:47:21.426Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "46LbNsiyH4jLi5Ja7",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-23T20:36:50.162Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "I think I was feeling inspired with Earth Hour coming up this weekend. Here are some patterns I created playing around with parameters in Paper.js!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bq37frhkieem1ltjwbsx",
        "width": 1288,
        "height": 1220,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/n7gofuch9reekf9i8c3u",
        "width": 1300,
        "height": 1224,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xx0zf43yarchfhcfj5kx",
        "width": 1292,
        "height": 1124,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T20:39:59.585Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T21:21:23.2Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "47QEyRdHRF5JCuAXu",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-02T19:58:04.079Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "WEEK 1 SKETCH (1/4) : SAHITI'S INSTRUCTIONS",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hhhnzwc68xdjzq2sp4zp",
        "width": 2160,
        "height": 2297,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T01:37:52.649Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "47WBGAoPiQTqPMApF",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-29T20:37:50.855Z",
    "posted": true,
    "lesson": "Music",
    "description": "The intro to My Humps by The Blacked Eyed Peas... but make it techno. Extremely random but I think the intro was just begging to be replicated in tone.js? Still playing around with the timing of the notes",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\n//changes the speed of the overall song - will scane 3n, etc in each\nTone.Transport.bpm.value = 250;\n\nconst melody = [\n  [\"E5\", \"1n\"],\n  [\"D#5\", \"6n\"],\n  [\"E5\", \"6n\"],\n  \n  [\"F#5\", \"6n\"],\n  \n  [\"E5\", \"6n\"],\n  [\"F#5\", \"6n\"],\n  [\"E5\", \"6n\"],\n  [\"F#5\", \"6n\"],\n  [\"E5\", \"6n\"],\n  [\"F#5\", \"6n\"],\n  \n  [\"E5\", \"5n\"],\n  [\"D#5\", \"5n\"],\n  [\"E5\", \"5n\"],\n  [\"D#5\", \"5n\"],\n  \n  [\"rest\", \"2n\"],\n  \n  [\"D#5\", \"2n\"],\n  [\"C5\", \"2n\"],\n  [\"Ab4\", \"1n\"],\n];\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n\t\t\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};\n\nconsole.log(\"click for music!\");",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/edi4nykodtpqpzcvpu5e",
        "width": 2162,
        "height": 1276,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-29T21:42:45.722Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-29T21:42:47.034Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:19.641Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "49hfoTfoSx7ACabrz",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-07T02:38:02.116Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "I was playing with sprites/sprite sheets and thinking about Rubik's cubes/those puzzle games where you slide tiles around to make an image. Ran out of time but it's almost there",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/j1d1cni5i1e70o8iwmxs",
        "width": 1196,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qgcquiscdfsrkjspojzr",
        "width": 1532,
        "height": 1464,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:47:39.326Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4ACaWs8wmdXtDvCtk",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-12T00:19:43.923Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Pair challenge with Shristi",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/udjmrny5uzfqge1e6ehx",
        "width": 1350,
        "height": 848,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:14:02.64Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4DnREvN3HDwJb7Yi3",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-01-31T02:45:28.139Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Response to Alex's Instructions",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/m5ynbk1rjkmffotvxkql",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-01-31T17:57:59.953Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T22:40:24.278Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-03T06:51:04.544Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:23.407Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4PBvwLrDBrESrDfJc",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-02T01:32:29.331Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Line challenge. Movement isn't identical to the goal sketch, but parameters work parallely.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet amplitude_slider;\nlet frequency_slider;\nlet timespeed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 0);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 0);\n  createP(\"Time Speed\");\n  timespeed_slider = createSlider(0, 100, 0);\n\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = frequency_slider.value() / 100;\n  let timespeed = timespeed_slider.value();\n\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n    \n    //offset with amplitude\n    let aX = (noise(amplitude)-0.5)*100;\n    let aY = (noise(amplitude)-0.5)*100;\n    \n    //offset with frequency\n    let fX = noise(i*frequency*10)*amplitude*200\n    let fY = noise(i*frequency*10)*amplitude*200\n    \n    //combine amplitude and frequency offsets\n    let xPos = x+aX+fX;\n    let yPos = y+aY+fY;\n    \n    //animate with noise as a function of time, controlled by amplitude value\n    let tX_offset = timespeed * sin(i * noise(x*(millis()%(amplitude+1))));\n    let tY_offset = timespeed * sin(i * noise(y*(millis()%(amplitude+1))));\n    let tX = map(tX_offset,0,20,0,5)\n    let tY = map(tY_offset,0,20,0,5)\n    xPos += tX;\n    yPos += tY; \n    \n    //draw ellipse\n    fill(255);\n    noStroke();\n    ellipse(xPos , yPos , 10, 10);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/j9gjfqfdgq0s6mhfuhxh",
        "width": 816,
        "height": 880,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "4Q9ScmXrrW6WqnFXu",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-05T12:04:22.442Z",
    "posted": false,
    "lesson": "3D Forms",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "4krAvb6gtzAyCojxx",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-10T13:06:34.72Z",
    "posted": true,
    "lesson": "Random",
    "description": "Rainy day with Keren and Abha 🌧",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/owi4hy2il6bttby8gfoi",
        "width": 1192,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-10T15:51:40.004Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4nPdkJ6EwE8SLuQDK",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-12T22:28:30.987Z",
    "posted": true,
    "lesson": "Text",
    "description": "Continuation from class, a haiku generator lol, I used a template and kept the number of syllables consistent with each line to get the 5-7-5 format",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fq6cvsxklsj2u07e2zn9",
        "width": 1196,
        "height": 1198,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pompuao58w8dwzcvcwgm",
        "width": 1196,
        "height": 1198,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-12T23:12:56.678Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-13T03:31:35.708Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T01:14:35.039Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4qHqs6XgJYLCSLvhE",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-10T01:50:56.755Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Pair Challenge with Sora. Took her material, first edited it with some interactivity, then for the second pass used getQuick() but messed around with img.set() to see if I could manipulate the processing.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet img;\n\nfunction preload(){\n  img = loadImage(\"Image/Material.jpg\"); \n}\n\nfunction setup(){\n  createCanvas(400, 400);\n  //pixelDensity(0.5);\n}\n\nfunction draw() {\n  background(51);\n\n  img.loadPixels();\n  \n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      //used for first pass of editing new script\n      \n      /* var index = (x + y * width) * 4;\n      pixels[index + 0] = mouseX * noise(x * width, 0);\n      pixels[index + 1] = random(255);\n      pixels[index + 2] = mouseY * noise(y * height, 1000);\n      pixels[index + 3] = 255; */\n      \n      c = getQuick(img, x, y);\n      img.set(x * -100, y, c);\n    }\n  }\n  \n  img.updatePixels();\n  \n  image(img, 0, 0, width, height);\n}\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uvvtnudbokqmvqvqo0zy",
        "width": 600,
        "height": 599,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:22.863Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4sCekSTpG8XwCpdoi",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-05T01:40:23.967Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Since we're on the topic of microgames one of the facets of this project for my Major Studio is a card/board game where the cards are your board pieces. This is still in its microgame stage as I only have the base mechanics down for this project but hopefully through this semester this game will grow into a fully fleshed-out game.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/eg9r7udsok9b5pqaf8r0",
        "width": 1848,
        "height": 2755,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/imqarcsfcw6af3pmp87s",
        "width": 1280,
        "height": 1920,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-05T19:00:53.091Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-05T19:45:39.755Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T16:20:24.529Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4tNTjxvwguTZxieDA",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-31T13:46:32.393Z",
    "posted": true,
    "lesson": "Music",
    "description": "Pair challenge with Sahiti - We played around with bass, metal synth and tweaked different parameters for this upbeat-ish \"music\" thing 😅",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/iev1isuxiwafzmml19x4",
        "width": 1398,
        "height": 1396,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "4tXRLDTn6jMy7Tt3k",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-29T21:20:58.756Z",
    "posted": true,
    "lesson": "Music",
    "description": "I just created some interesting beats with recording my day and adding a little reverb and noise as base in audacity.\n\nI wanted to have a super electronic track added with beats signifying I am dealing too much with technology while time is passing by.",
    "code": "let song;\nlet fft;\n\nfunction preload() {\n  song = loadSound(\"audiotrial.mp3\");\n}\nfunction setup() {\n  // URL copied from the Glitch assets folder\n\n  createCanvas(1000, 1000);\n  background(0, 0, 0);\n\n  fft = new p5.FFT();\n}\n\nfunction draw() {\n  stroke(255);\n\n  let wave = fft.waveform(); //generates 1024 elements in array\n\n  for (i = 0; i < width; i = i + 1) {\n    //need to map because of width\n    //needs to be an integer\n    let size1 = floor(map(i, 0, width, 0, 1024));\n\n    //create x and y co-ordinate\n\n    xcord = i;\n\n    //need to scale because value is between -1,1\n    ycord = wave[size1] * 300 + height / 2;\n    point(xcord,ycord);\n  }\n}\n\nfunction mousePressed() {\n  if (song.isPlaying()) {\n    // start or pause\n    song.pause();\n    //background(255,0,0);//just some indication of what is happening\n  } else {\n    song.play();\n    // background(0,255,0);//just some indication of what is happening\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sypccmwoknildhrpjq1g",
        "width": 930,
        "height": 742,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-29T21:42:33.996Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-30T04:16:26.413Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:17.036Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:13:09.684Z"
      },
      {
        "category": "nerdy",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-31T13:07:56.217Z"
      }
    ],
    "comments": [
      {
        "comment": "So cool!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:37:06.803Z"
      }
    ]
  },
  {
    "_id": "4uSAQxMzLnQ8zuSbr",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-03T04:33:41.151Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Red crystal art",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sujgkyeaym84meqvyi1g",
        "width": 984,
        "height": 980,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/glendazxgk3bc6ftxwda",
        "width": 984,
        "height": 980,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fevrzgxkqtrlux8zei6o",
        "width": 984,
        "height": 980,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:20:24.647Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-03T15:58:18.751Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "4utEkrykwCnnvGmFb",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-13T20:06:24.208Z",
    "posted": true,
    "lesson": "Text",
    "description": "I was playing Colossal Cave Adventure and was transported to the times when text based input games were so fun!!!!!!!\n\nhttps://rickadams.org/adventure/advent/",
    "code": "let i;\nlet j;\nlet disa;\n\nfunction setup() {\n  i = createInput();\n  j = 0;\n  let disa = 0;\n  createP(\"You are My greates treasure, the friend of Sahiti\");\n  createP(\"You wake up  and yawn, when you notice there is something weird in the air. There is something not right, you feel it!. Should you call the police?\");\n}\n\nfunction draw() {\n  //call police\n  if (i.value() == \"yes\" && j == 0) {\n    createP(\"You know you shouldn't go into this on your own. You pick up your phone and dial 911.\");\n    createP(\"911, what's you emergency?\");\n    createP(\"I just found a ransom note on my table. Can you help?\");\n    createP(\"Of course. We'll be right there.\");\n    createP('After a minute or two, the police show up. They ask if they can see the note, and you hand it to them. They read it, then tell you to get into the car. Then they drive you there and open the door to a huge mansion. They go in, and after a few minutes, gunshots are heard. The guy in the car with you is about to call for backup, when he gets shot in the shoulder, and cries out in pain. Unsure of what to do, you ask yourself, should I KEEP GOING? Should I DRIVE BACK, or just GIVE THEM THE MONEY.');\n    j = 1;\n  }\n\n  \n    if (i.value() == \"no\" && j == 0) {\n    createP(\"You know you shouldn't go to the police right away but, you need help. You pick your phone and dial who then? family, friend?\");\n\n    j = 1;\n  }\n   //give them the money\n  if (i.value() == \"give them the money\" && j == 1) {\n    createP(\"You walk up to the masion with your hands up, and someone invites you in. You hand them the money, and they give you your son. You stroll right out the door and walk happily to your car, when you get pulled back by one of the guys. The man starts talking.\");\n    createP(\"I can't have you two talking about what happened tonight. Do you promise you won't tell anyone?\");\n    createP(\"Yes, we won't tell anyone.\");\n    createP(\"I'm afraid that won't be enough. I'm going to have to kill you both now. At least you'll die togethor.\");\n    createP(\"Your screams for help, ironically, don't help. Your last words are: AAAAAAAUGH! DON'T KILL ME! PLEASE! AAAAAHHHH!\");\n    j = 1000;\n    h = 0;\n  }\n\n }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qeng8w2ykcokax5alcdg",
        "width": 896,
        "height": 390,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "4xjSWudTXMi2536hn",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-02T17:10:07.943Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Here's a sketch using my own instructions, an upside down drawing flipped again.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wg2mcib83keosbwwbkht",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T18:08:40.843Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "524JZhfQjXpMb9ejg",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-05-12T14:21:08.696Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Bringing motion with random in turtle.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  stroke(255);\n}\n\nfunction draw() {\n  background(50);\n  \n  // Body\n  \n//   myTurtle.penUp();\n//   myTurtle.moveTo(0, 0);\n//   myTurtle.penDown();\n//     myTurtle.moveTo(104, 125);\n    \n    \n  \n  for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n  \n    for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(100, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n  \n      for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(300, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n        for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n        for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 200);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n          for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 100);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n  \n            for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(400, 300);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n              for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 300);\n   myTurtle.penDown();\n   myTurtle.moveForward(random(0,255));\n    myTurtle.turnRight(5);\n  }\n  \n          for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 100);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }\n  \n            for(i = 0; i < 360; i++) {\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 400);\n   myTurtle.penDown();\n   myTurtle.moveForward(100);\n    myTurtle.turnRight(5);\n  }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/h9aionxpv8jnf6cvabdt",
        "width": 496,
        "height": 498,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "5Afbrqvxu7fCmnfSg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-20T20:52:48.075Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Part 1 of Individual Project. I was experimenting with recursive subdivision and I got this really weird result that was nowhere near what I wanted. But it looked cooler so I was happy with it. Curious to see how the cut is going to go tomorrow!",
    "code": "var initSideLength = 800;\nfunction recurseRect (h, k, recurse) {\n\n            var currentRectBounds = new Rectangle(\n                                        new Point(h  * (400 * recurse )  + 2.5, k  * 400 * recurse + 2.5 ), \n                                        new Point(initSideLength / (recurse * 4), initSideLength/ (recurse * 4) )\n                                        );\n            var currentRectangle = new Path.Rectangle(currentRectBounds);\n            currentRectangle.strokeColor= 'black';\n            currentRectangle.strokeWidth= 5\n            var subdivide = Math.random();\n            if (subdivide < 0.3 && recurse < 6) {\n                recurseRect(h / (recurse * 4), k / (recurse * 4), Math.round(recurse) + 1)\n                var circle1 = new Path.Circle([h * recurse + 80 * recurse, k * recurse + 80 * recurse ], 60 * recurse);\n                circle1.strokeColor= 'black';\n                circle1.strokeWidth= 5\n            }\n\n}\n\n    for (var x = 0; x < 5; x++) {\n        for (var y = 0; y < 5; y++) {\n            recurseRect(x,y , 1/4)\n        }\n    }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uhxwhyftyduuhxbwbo90",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ednzjypnjbb6uhhtxvhr",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sw8f2pfemux05g0437ba",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-21T07:08:31.024Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:10.526Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5KNZ5sH8dyfShhwG9",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-27T16:50:52.37Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Challenge 1 extension. Added dynamics controlled by parameters.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst points = [];\n\nconst pane = new Tweakpane.Pane();\nconst params = {\n  speed: 1/1750,\n  max_size: 20,\n  min_size: 5,\n  noise_factor: 1.1,\n  transparency: 0.75,\n};\npane.addInput(params, \"speed\", { min: 1/7500, max: 1/500 });\npane.addInput(params, \"max_size\", { min: 15, max: 45 });\npane.addInput(params, \"min_size\", { min: 2, max: 14 });\npane.addInput(params, \"noise_factor\", { min: 0.5, max: 3 });\npane.addInput(params, \"transparency\", { min: 0.25, max: 1 });\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  ellipseMode(CENTER);\n  colorMode(HSB,360,100,100,100);\n  frameRate(40);\n\n  for (let y = 0; y < 30; y++) {\n    for (let x = 0; x < 30; x++) {\n      points.push({\n        x: (random(width)+random(width)+random(width))/3,\n        y: (random(width)+random(width)+random(width))/3,\n      });\n    }\n  }\n}\n\nfunction draw() {\n  background(60,0,20);\n\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];   \n    \n    let dMin = params.min_size;\n    let dMax = params.max_size;\n    let dSize = map(i,0,points.length,dMin,dMax);\n    \n    p.x += params.noise_factor*sin(i*noise(p.x));\n    p.y += params.noise_factor*sin(i*noise(p.y));\n    \n    let colH = map(dSize,dMin,dMax,0,320);\n    let alpha = (noise(i,100)*100 + (75 * cos(TWO_PI * millis() * params.speed)) + i)%100 * params.transparency;\n    \n    fill(colH,100,100,alpha);\n    ellipse(p.x, p.y, dSize);\n    \n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/oxxjvkqskgxktlgwmrh7",
        "width": 1380,
        "height": 974,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T00:57:25.365Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5NdhZmF2xKsDPDEn9",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-21T03:27:29.377Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Midjourney was not working for me this week. I tried to follow their instructions, but I think something's been going on that has been affecting their free trial use. I don't think I'll be able to get around to this so I talked a bit to ChatGPT about Mijdourney and what it thinks about image generation. Hopefully I can maybe squeeze something out of Midjourney but after trying for a few hours to generate something my chances seem slim.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kzmim9gevlviftrc4lji",
        "width": 1525,
        "height": 835,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pi3sflojtny0gvzxqiir",
        "width": 1519,
        "height": 1013,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-21T04:18:27.396Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:43:05.785Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5QxFrbxKmxpZSFutT",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-05-12T12:47:02.681Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "**Recursive Spirographs** using Turtles",
    "code": "let myTurtle;\n\n\nfunction setup() {\n  \n  createCanvas(500, 500);\n  myTurtle = new Turtle(0, 0);\n  //myTurtle = new Turtle(-120, 170);\n  \n  noFill();\n  stroke(255, 160, 180);\n  strokeWeight(8);\n\n  frameRate(90);\n  //noLoop();\n}\n\nfunction draw() {\n  \n  background(255);\n  translate(width/2, height/2);\n  // rotate(frameCount/90);\n  \n  \n  drawSpiro(450, -160, 200);\n  \n}\n\nfunction drawSpiro(length, x, y) {\n  \n  myTurtle.pushState();\n  rotate(frameCount/450);\n  \n  strokeWeight(length/60);\n  stroke(length/1.8, length/2, length/1.5);\n  \n  if (length < 2)\n    return;\n  myTurtle.penUp();\n  myTurtle.moveTo(x, y);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 36; i++) {\n    myTurtle.moveForward(length);\n    myTurtle.turnLeft(70);\n  }\n  \n  myTurtle.popState();\n  \n  let reduce = 0.72;\n  drawSpiro(length*reduce, x*reduce, y*reduce);\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qm2koc7h1frxblnviltt",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tfpqnu1dnx88rlnttvnw",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/aml5v8irxalfsc5fd49z",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:14.566Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5TxbMnjKy8fmAoK2u",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-04T16:08:23.954Z",
    "posted": true,
    "lesson": "Music",
    "description": "**Pair Sketch with Isha:** We added a poly-synth to Justin's moderator, choosing the third or 5th notes randomly to accompany the current note being played, and we coded the last note of the second measure to be the 5th note of the scale to hopefully improve musicality",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.49/Tone.js\n/* global Tone */\n\nconst synth = new Tone.PolySynth(Tone.Synth)\nsynth.set({\n    \"oscillator\": {\n    \"type\": \"sine\",\n  },\n    \"envelope\" : {\n        \"attack\": 0.1,\n    \"decay\": 0.1,\n    \"sustain\": 0.5,\n    \"release\": 1,\n    }\n});\nsynth.toDestination();\n\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n  const melody = generate();\n  play(melody);\n};\n\nconst cmajor = [\"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\"];\n// const cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst notesnew = [\n  \"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\", \n  \"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\"\n];\nconst notes = notesnew;\n\nlet degree = 0;\n\nfunction generate() {\n  degree = randomInt(0, 7);\n\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  b[b.length - 1][0] = notes[4];\n  c[c.length - 1][0] = notes[0];\n\n  return [].concat(a, b, a, c);\n}\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n\n    let change = sample([-1, -1, -1, 1, 1, -2, 2, 2, 2, -3]); \n    degree = constrain(degree + change, 0, notes.length - 1);\n    const note = notes[degree];\n\n    let length = Tone.Time(\"4n\");\n    // let r = Math.random();\n    if (Math.random() < 0.5) {\n        length = Tone.Time(\"2n\");\n    }\n    // if (r > 0.3333 && r < 0.6666) {\n    //   length = Tone.Time(\"2n\");\n    // } else if (r > 0.6666) {\n    //   length = Tone.Time(\"8n\");\n    // }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n    timeLeft = Tone.Time(timeLeft - length);\n  \n    m.push([note, length, degree]);\n    \n  }\n\n  return m;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n      if (note[2] < notes.length - 3 && Math.random() < 0.5) {\n          synth.triggerAttackRelease(notes[note[2] + 2], Tone.Time(note[1]) - 0.1, t);\n      }\n      if (note[2] < notes.length - 5 && Math.random() < 0.3) {\n          synth.triggerAttackRelease(notes[note[2] + 4], Tone.Time(note[1]) - 0.1, t);\n      }\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vyqekskixpufc48brvqb",
        "width": 650,
        "height": 300,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-04T21:08:27.862Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T02:19:11.446Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:38.486Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5gRHQQNPgaHDCdrcp",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-26T02:00:10.072Z",
    "posted": true,
    "lesson": "API",
    "description": "Revisited WebGL since it's been a while and I wanted to see if I could work in some topics we covered at the beginning of the semester. It took me a bit but I was able to bend the shapes to create a vortex pattern instead of letting the objects fly around as they please.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x;\nlet y;\nlet v;\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  //debugMode();\n}\n\nfunction draw() {\n  background(66, 54, 19);\n  \n  v = 55;\n  pointLight(v, v, v, 0, 500, 0);\n  emissiveMaterial(190, 232, 179);\n  \n  noStroke();\n  shapes();\n  \n  camera(0, -500, 500, 0, 1000, -100);\n  //orbitControl();\n}\n\nfunction shapes() {\n  for (y = 0; y < 100; y = y + 10) {\n    for (x = 0; x < 100; x = x + 10) {\n      for(i = 0; i < width; i = i + 10) {\n        n = noise(i) * frameCount + 20;\n        rotateX(n / 100000);\n        rotateY(n / 4500);\n      }\n      push();\n      translate(10 * x - 100, y + 40 / 18, 0);\n      box(50);\n      pop();\n      \n      translate(10, y + 40, 0);\n      torus(50);\n      \n      translate(10, y + 40, 0);\n      cone(50);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vp7w6gefai16qm5piexj",
        "width": 900,
        "height": 901,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-26T02:28:24.015Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-26T03:10:27.621Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5hu5nXXhoWwBXtn38",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-07T14:35:28.141Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "WEEK 9 ( 3/4): This was after class when I went to finish the pong game but I needed help and looked online to do the velocity stuff and it looks like an EYEBALL YEAHHHH",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/brxeudgrmkdqqz40xwo4",
        "width": 988,
        "height": 976,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/oacketwkjwuyv2yvyyg9",
        "width": 976,
        "height": 962,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "5ieRySbnX8NtDzNTA",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-09T07:43:47.351Z",
    "posted": true,
    "lesson": "Random",
    "description": "I finally stopped procrastinating working with Processing.\nFirst sketch ever!",
    "code": "//require https://cdnjs.cloudflare.comajax/libs/p5.js/0.5.14/p5.js\n\nfloat x;\nfloat y;\nWalker w;\nWalker a;\nWalker s;\nWalker d;\nWalker m;\nWalker l;\nWalker r;\n\nvoid setup(){\n  size(600,600);\n  colorMode(HSB,360,100,100,60);\nframeRate(300);\n  w = new Walker(0,height, 15);\n  a = new Walker(width,0, 15);\n  s = new Walker(0,0, 15);\n  d = new Walker(width,height, 15);\n  m = new Walker(width/2,height/2,15);\n  l = new Walker(0,height/2,15);\n  r = new Walker(width/2,0,15);\n  \n  background(color(300, 30,80,40));\n}\n\nvoid draw(){\n    w.display();\n  w.walk();\n \n a.display();\n a.walk();\n \n s.display();\n s.walk();\n \n d.display();\n d.walk();\n \n m.display();\n m.walk();\n \n l.display();\n l.walk();\n \n r.display();\n r.walk();\n}\n\n class Walker{\n//float r;\n//float g;\n//float b;\nfloat x;\nfloat y;\nfloat rsize;\n\n Walker(float tempX, float tempY, float tempS){ //constructor\n//r = tempR;\n//g = tempG;\n//b = tempB;\nx = tempX;\ny = tempY;\nrsize = tempS;\n}\n\nvoid display(){ //make it visible\n  noStroke(); //give it color\n  fill(color(random(360), random(100), random(100)));\n  //fill(random(133),random(50),random(255));\n  rect(x,y,rsize,rsize); //give it location\n}\n  void walk(){\n    int choice = int(random(4));\n    \n    if (choice == 0) {\n      x=x+5;\n    }\n    else if(choice==1){\n       x=x-5;\n    }\n    else if(choice==2){\n      y=y+5;\n    }\n    else {\n      y=y-5;\n    }\n    \n    x = constrain(x,0,width-1);\n    y = constrain(y,0,height-1);\n    \n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/copduuckzff51cmztwbl",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xn2zmdvtyp80163xcgvu",
        "width": 1200,
        "height": 1172,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dn4qxorajvh8yz5zxvah",
        "width": 1440,
        "height": 1440,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-09T14:43:03.8Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-09T17:16:52.88Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:44:44.537Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5mFTwSRW7Y2NPuWz5",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-07T14:15:50.715Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "WEEK 9 ( 2/4): Here is another game I made on unity with sprites and images on top of them. This is a story game hehe.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gpv1dfzsa5bjpnzo2v9j",
        "width": 652,
        "height": 512,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/z4hnldmfxrevhxfxwceb",
        "width": 1374,
        "height": 958,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "5mZ4Yshpv9s2Hznmn",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-31T02:28:50.884Z",
    "posted": true,
    "lesson": "Music",
    "description": "using polysynth to create an overlapping melody",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/aiaq7siko7mgy4glngzb",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T02:34:55.697Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T03:18:24.239Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5nZs9FtkaDntZ2snD",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-28T05:25:43.891Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Had fun playing with Reshma's concentric shapes on Illustrator.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xqdujofpuicwi5d61hdp",
        "width": 723,
        "height": 723,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kcxhkluq5gzd6e3seufg",
        "width": 732,
        "height": 732,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dcmfkcumc5kxsxhzdpf2",
        "width": 555,
        "height": 555,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:31:21.72Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-08T21:57:03.327Z"
      }
    ],
    "comments": [
      {
        "comment": "Whoaa... I feel BOOOOM!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:31:37.332Z"
      }
    ]
  },
  {
    "_id": "5uNtzAXCWeCARSNhD",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-07T04:00:57.547Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Pong with paddles controlled by the mouseY position. I also played with a Game Over message and mousePressed() functions to start/restart the game",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/oonodb79tlks1hwmshxw",
        "width": 1080,
        "height": 1068,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xowggdlcpfndwqrfvwef",
        "width": 1044,
        "height": 1038,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-07T04:23:45.627Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T04:23:59.7Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5v7hqvkBWJXSAtXhF",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-28T19:00:14.627Z",
    "posted": true,
    "lesson": "Music",
    "description": "Modified the example sketch from the lesson to create sketch that creates random melodies in C scale with different pitches based on the mouse position - It's not always pleasant except occasional decent sounding ones - Then used the audio as input sounds to visualize",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nlet notes = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"]\nlet timeInt = [\"2n\", \"4n\", \"6n\", \"8n\"]\n\nlet scaleNotes = []\n\nlet mousePos;\n\nlet newMelody = [];\n\nlet hueCol;\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n  if(e.clientX < width && e.clientY < height){\n    \n    mousePos = Math.floor(map(e.clientX+e.clientY, 0, 1200, 0, 7));\n    \n    setNotes(mousePos);\n    \n    console.log(scaleNotes);\n    \n    hueCol = map(e.clientX+e.clientY, 0, 1200, 0, 350, 0.5)\n    \n  for(let i=0; i<7; i++){\n    newMelody[i] = [scaleNotes[Math.floor(random(scaleNotes.length))], timeInt[Math.floor(random(timeInt.length))]]\n  }\n  newMelody[7] = [\"rest\", \"2n\"]\n\n  let t = Tone.now();\n\n  for (const note of newMelody) {\n    // console.log(note);\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n  }\n};\n\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  mic = new p5.AudioIn();\n  mic.start();\n  \n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(0, 0.1);\n  \n  level = mic.getLevel();\n  \n  visualizer();\n\n}\n\nfunction visualizer(){\n  \n  elSize = map(level, 0.1, 0.6, 100, 400);\n  \n  noStroke();\n  \n  fill(hueCol, 100, 60);\n  \n  ellipse(mouseX, mouseY, elSize, elSize);\n}\n\nfunction setNotes(scale){\n  \n  for(let i=0; i<notes.length; i++){\n    scaleNotes[i] = String(notes[i] + scale)\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/a4fzgpejhnjt3ncont3w",
        "width": 1200,
        "height": 1202,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-29T00:12:07.383Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-29T20:00:39.267Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-29T21:04:26.364Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "5y7m6cvxoAe8xqNgF",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-14T03:06:16.429Z",
    "posted": true,
    "lesson": "Text",
    "description": "**Using Perlin Noise to Generate Hs and Hyphens**",
    "code": "let noise;\nnoise = new Noise(Math.random());\n\n\ndocument.getElementById(\"line1\").textContent = generateLine();\ndocument.getElementById(\"line2\").textContent = generateLine();\ndocument.getElementById(\"line3\").textContent = generateLine();\ndocument.getElementById(\"line4\").textContent = generateLine();\n\nfunction generateLine() {\n    console.log(\"check\");\n    var rand = Math.random();\n\n    var line1 = \"\";\n    \n    for (let i = 0; i<100; i++) {\n        for (let j = 0; j<100; j++) {\n            var val = noise.perlin2(i*0.01, j*0.01);\n            if (val <0.2) line1+=\"H\";\n            else if (val<0.3) line1+=\"I\";\n            else if (val<0.5) line1+=\"/\";\n            else line1+=\"...\";\n        }\n        \n    }\n    \n    return line1;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sr1e6mcwq3bsiry4adkz",
        "width": 1528,
        "height": 1528,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/fqc1lqycjmdt21wceeob",
        "width": 1528,
        "height": 1528,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/kpduajctktwmfbipgwjb",
        "width": 1528,
        "height": 1528,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-14T03:53:48.183Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T04:55:40.303Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T15:01:43.053Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-14T16:12:56.425Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-04-14T16:19:24.668Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-14T16:21:05.73Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6AeXuRFaXNrkjjr3E",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-16T04:39:04.145Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Treasure Map reveal: I tried to use the noise as both clouds and terrain where the former slowly fades away to reveal the latter.\nTreasure Map vector attributed to Freepik.",
    "code": "let t = 0;\nlet l = 1;\nlet spot;\n\nfunction setup() {\n  createCanvas(600, 600);\n  ellipseMode(CENTER);\n  fill(200, 50, 100);\n  noStroke();\n  // frameRate(10);\n  spot = loadImage('spot.png');\n}\n\nfunction draw() {\n  background(\"rgb(46,150,185)\");\n  let n;\n\n  for (let y = -25; y < height+15; y += 3) {\n    for (let x = -25; x < width+15; x += 3) {\n       // n = noise(y);\n n = noise(x*0.01, y*0.01);\n      let r = 3;\n      // fill(x+n, n*second()*10,200);\n      fill(x+n, n*millis()*0.04,200);\n      ellipse(x+n*20+10, y+n*20+10, r, r);\n      // image(spot, width-100, height-100,spot.width*0.3, spot.height*0.3);\n      // ellipse(x+n*50, y+n*50, r, r); //for a terrain\n          // point(x+n*50, y+n*50);\n    }\n  }\n  \n \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gecsk7bpqxhvgi7k9ikd",
        "width": 1166,
        "height": 1124,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/lg8oyzektlweounrkitd",
        "width": 1280,
        "height": 1233,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T18:00:06.214Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:22.936Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6EYHmvSLSuoSG9CJR",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-19T18:50:23.421Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Target practice as way of mapping treasure. Was thinking about satisfaction of alignment. Thinking of a new perception with Ishaan's sketch.",
    "code": "let xoff = 0;\nlet xoff1 = 0.9;\nlet yoff = 100;\nlet yoff1 = 0.1;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(51);\n  // let x = random(width);\n\n  push();\n  \n  strokeWeight(32);\n  strokeCap(SQUARE);\n  noFill();\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 64, 64, 0, PI);\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 64, 64, PI, 0);\n\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 160, 160, PI / 6, (PI * 5) / 6);\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 160, 160, (PI * 5) / 6, (PI * 3) / 2);\n  stroke(random(255), random(255), random(255));\n  arc(200, 200, 160, 160, (PI * 3) / 2, PI / 6);\n\n\n  pop();\n  \n  push();\n  fill(\"rgba(255,255,255,0.73)\");\n  stroke(\"grey\");\n  ellipse(width/2, height/2, 50,50);\n  \npop();\n  \n  push();\n  \n stroke(126);\nline(200, 170, 200, 230);\n  \n  line(170, 200, 230, 200);\n\n  pop();\n  \n  \n    push();\n    let x = map(noise(xoff), 0, 1, 0, width);\n    console.log(noise(xoff), \"sahiti1\");\n    let y = map(noise(yoff1), 0, 1, 0, height);\n    console.log(noise(yoff1), \"sahiti2\");\n\n    xoff += 0.009;\n    yoff1 = yoff1 + 0.01;\n    // ellipse(x, y, 10, 10);\n    // ellipse(y, x, 10, 10);\n    // ellipse(y, 20 + x, 10, 10);\n    // ellipse(20 + y, x, 10, 10);\n    for (i = 1; i < width; i = i + 10) {\n      noStroke();\n      fill(\"rgb(255,0,0)\");\n     // rect(x + i, y, 10, 5);\n      //rect(x, y + i, 5, 10);\n\n      rect(10 + i, y, 10, 5);\n      rect(x, 80 + i, 5, 10);\n      pop();\n      \n  //noLoop();\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gpolhz6yzyezhf4axarv",
        "width": 370,
        "height": 370,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "6GDuXG5Mod9T76H8X",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-02T22:32:23.204Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "These sketches come from one of my favorite libraries to use, shaderpark! Message me if you'd like an intro to this library, it's fun and pretty easy to use!",
    "code": "// shader-park runs on its proprietary website (but can be exported elsewhere)\n// you can fork my code but I believe you have to sign up first\n// https://shaderpark.com/sculpture/-NNIzQDTGLzsA_ouUmbY?hideeditor=true&hidepedestal=true\n// zoom in to see the sculpture! (NOTE this library is GPU intensive)\n// Inspired by this sketch from Torin Blankensmith:\n// https://shaderpark.netlify.app/sculpture/-NIFkhuu5L2CXK4T-Zq3?hideeditor=true&hidepedestal=true",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/isfdq6fef7ybl198yfty",
        "width": 1919,
        "height": 771,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/buverywiuzuturqmd0go",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T22:37:52.758Z"
      },
      {
        "category": "pretty",
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "created_at": "2023-02-02T23:53:20.667Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-03T00:24:29.517Z"
      },
      {
        "category": "funny",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-03T00:24:36.456Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6SuHYctRwkmJ7S6hf",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-21T23:32:29.216Z",
    "posted": true,
    "lesson": "Params",
    "description": "Face generator challenge using type and characters! With more time I could definitely add more character options and tweak the positioning of the features.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rtebtsppkwtksfn9wf66",
        "width": 2260,
        "height": 1392,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/rn8ijacl8l4xketmxr8g",
        "width": 2262,
        "height": 1452,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ob1hpxi0mprayutemq4s",
        "width": 2264,
        "height": 1458,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-22T00:15:01.889Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-22T02:31:59.898Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-22T02:59:11.38Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-22T04:46:14.584Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-22T10:26:28.243Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-22T14:58:00.018Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:34.36Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6YYs8XrTrWk4suCFX",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-05-12T03:00:16.838Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Dandelions or fireworks?\n\nI was experimenting with the spirograph starter code and started to get some dandelion-y forms",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jbtufp6kvnnlze5csbjq",
        "width": 1984,
        "height": 1950,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fkdxecgvz870chadcxcz",
        "width": 1986,
        "height": 1958,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/n4arkn8edafdaisxawtq",
        "width": 1990,
        "height": 1974,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-12T04:36:12.774Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T11:43:56.672Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6bvE5tf9xaxx3owmF",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-06T04:47:21.012Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "I'm calling this the dev texture build. I have a really good idea of where to take this but ran out of time.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/idxi0jyfbk5sfbovhvbp",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "6eY2PCBnX5p7ma8gH",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-07T14:26:41.634Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Tried creating connect with p5js.\n\n//sample code of https://editor.p5js.org/simontiger/sketches/gb3gVSd5K",
    "code": "const cols = 3;\nconst rows = 6;\nconst w = 100;\nconst dw = 80;\nconst board = Array(6).fill().map(() => Array(3).fill(0));\n\nlet player = 1;\nlet playerPos;\nlet win = 0;\n\nfunction setup() {\n  createCanvas(cols*w, rows*w + w);\n}\n\nfunction hasWon() {\n  // Test Horizontal\n  for (let j = 0; j < rows; j++) {\n    for (let i = 0; i <= cols-3; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j][i+k] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  // Test Vertical\n  for (let j = 0; j <= rows-3; j++) {\n    for (let i = 0; i < cols; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j+k][i] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  // Test Diagonal\n  for (let j = 0; j <= rows-3; j++) {\n    for (let i = 0; i <= cols-3; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j+k][i+k] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  // Test Antidiagonal\n  for (let j = 0; j <= rows-3; j++) {\n    for (let i = 2; i < cols; i++) {\n      const test = board[j][i];\n      if (test != 0) {\n        let temp = true;\n        for (let k = 0; k < 3; k++) {\n          if (board[j+k][i-k] !== test) {\n            temp = false;\n          }\n        }\n        if (temp == true) {\n          return true;\n        }\n      }\n    }\n  }\n  \n  return false;\n}\n\nfunction draw() {\n  background(255, 255, 0);\n  \n  playerPos = floor(mouseX/w)\n  \n  stroke(0);\n  fill(255);\n  rect(-1, -1, width+2, w);\n  for (let j = 0; j < rows; j++) {\n    for (let i = 0; i < cols; i++) {\n      fill(255);\n      if (board[j][i] == 1) {\n        fill(0, 0, 255);\n      } else if (board[j][i] == 2) {\n        fill(255, 0, 0);\n      }\n      ellipse(i*w + w/2, j*w + 3*w/2, dw);\n    }\n  }\n  \n  stroke(102, 102, 0);\n  for (let x = w; x < width; x += w) {\n    line(x, w, x, height);\n  }\n  \n  stroke(0);\n  if (player == 1) {\n    fill(0, 0, 255);\n  } else if (player  == 2) {\n    fill(255, 0, 0);\n  }\n  ellipse((playerPos + 0.5) * w, w/2, dw);\n  \n  if (win != 0) {\n    noStroke();\n    fill(0);\n    if (win == 1) {\n      fill(0, 0, 255);\n    } else if (win  == 2) {\n      fill(255, 0, 0);\n    }\n    textAlign(CENTER, CENTER);\n    textSize(64);\n    if (win == 4) {\n      text(\"Game Over!\", width/2, w/2);\n    } else if (win == 3) {\n      text(\"It is a tie.\", width/2, w/2);\n    } else {\n      text(`${win > 1 ? 'Red' : 'Blue'} won!`, width/2, w/2);\n    }\n    noLoop();\n  }\n}\n\nfunction mousePressed() {\n  if (board[0][playerPos] != 0) {\n    win = 4;\n  }\n  \n  board[0][playerPos] = player;\n  let i = 0;\n  while (true) {\n    if (i >= rows-1) {\n      break;\n    }\n    if (board[i+1][playerPos] != 0) {\n      break;\n    }\n    [board[i+1][playerPos], board[i][playerPos]] = [board[i][playerPos], board[i+1][playerPos]];\n    i++;\n  }\n  \n  if (hasWon()) {\n    //console.log(`${player > 1 ? 'Red' : 'Blue'} won!`);\n    win = player;\n  } else {\n    let drop = true;\n    for (let i = 0; i < cols; i++) {\n      if (board[rows-1][i] == 0) {\n        drop = false;\n      }\n    }\n    if (drop) {\n      for (let j = rows-2; j >= 0; j--) {\n        for (let i = 0; i < cols; i++) {\n          board[j+1][i] = board[j][i];\n        }\n      }\n      for (let i = 0; i < cols; i++) {\n        board[0][i] = 0;\n      }\n    }\n  }\n  \n  player = 3 - player;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/seszes8jifvvk7xrig8i",
        "width": 234,
        "height": 548,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:58.264Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6frJeH3EW3nj7kDZs",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-12T02:48:11.083Z",
    "posted": true,
    "lesson": "Text",
    "description": "letters for 36 Days of Type: thank you Aabha for setting the precedent with text to Points, I can now post mine. Gonna get to actually generating text real soon.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/p82dpvc9csm8juodfl8x",
        "width": 1634,
        "height": 1634,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/bvzmzydhmnfboavvzfb9",
        "width": 1280,
        "height": 1280,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/msavqovsxroueutcfpng",
        "width": 2000,
        "height": 2000,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-04-12T03:13:55.907Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-12T04:06:14.332Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-12T05:58:17.375Z"
      },
      {
        "category": "nerdy",
        "voter_id": null,
        "created_at": "2023-04-12T05:58:26.766Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-12T05:59:18.352Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-12T07:09:06.091Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6hqtZ4HgYsD7oDf3p",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-10T02:29:51.188Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Prompt for Shristi for the pair challenge",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sbvosmjpro9qzokfoc2r",
        "width": 900,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/knrfzs8rcbarmhmiayhv",
        "width": 900,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:30.842Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6pLCxb8d75PC6bDGA",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-10T00:13:39.611Z",
    "posted": true,
    "lesson": "Random",
    "description": "WEEK 2 SKETCH (2/4) :  I tried to mimic PIET MODRIANs style and I had a lot of fun, it was more technical in terms of thinking with how to organize the shapes but it was still pretty good.",
    "code": "function setup() {\n  createCanvas(600, 600);\n  background(225,0,0);\n \nvar a = color(240,240,240);\n  \n    //White Squares\n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(0, 140, 40, 500);  // Draw rectangle  \n  \n    //White Bottom Left\n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 435, 200, 200);  // Draw rectangle  \n  \n    //White Top Right\n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 0, 200, 140);  // Draw rectangle \n  \n    //White Top \n\tfill(a);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(220, 0, 120, 70);  // Draw rectangle \n  \n  \n  \n var b = color(0,0,190);\n    //Blue Squares\n\tfill(b);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(0, 0, 40, 140);  // Draw rectangle  \n  \n  //BlueBottom Left\n\tfill(b);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 140, 200, 200);  // Draw rectangle  \n  \n  //BlueBottom Right\n\tfill(b);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 440, 100, 200);  // Draw rectangle  \n  \n  var c = color(244, 223, 66);\n    //Yellow\n  \n    //Top left\n\tfill(c);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 0, 200, 140);  // Draw rectangle \n  \n    //MIddle\n\tfill(c);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 140, 260, 290);  // Draw rectangle  \n  \nvar d = color(40, 40, 40);\n    //Black\n  \n    //1st lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 0, 8, 600);  // Draw rectangle\n  \n    //1st v2 lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 0, 8, 600);  // Draw rectangle\n  \n    //2nd lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(340, 0, 8, 140);  // Draw rectangle \n  \n    //3rd lines vertical\n\tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 0, 8, 600);  // Draw rectangle \n  \n    //1st Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(0, 135, 600, 8);  // Draw rectangle \n  \n    //2nd Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 65, 100, 12);  // Draw rectangle\n    \n    //3rd Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(500, 430, 100, 10);  // Draw rectangle \n  \n    //4th Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 330, 200, 8);  // Draw rectangle \n  \n    //5th Black Horizontal\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(40, 430, 200, 8);  // Draw rectangle \n  \n  \n    //Top Left\n  \tfill(d);  // Use 'c' as fill color\n\tnoStroke();  // Don't draw a stroke around shapes\n\trect(240, 430, 260, 800);  // Draw rectangle \n\n \n  \n  \n  \n \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qsay2xjcefygzmtq8ais",
        "width": 1192,
        "height": 1194,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:44:24.624Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6qWudpSyvwsCdukCF",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-28T11:48:35.507Z",
    "posted": true,
    "lesson": "API",
    "description": "WEEK 12 (2/4): This is basically what I was trying to do",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ywufmdqez9f0i4zl4agd",
        "width": 1600,
        "height": 676,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/btho5epkwvoid1aknnq7",
        "width": 1352,
        "height": 308,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "6qy4CtMLQ9AmBwNzR",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-15T23:28:14.143Z",
    "posted": true,
    "lesson": "Noise",
    "description": "CODING SYMPHONY",
    "code": "let t;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tstrokeWeight(1);\n  //stroke(random(255), random(255), random(255));\n  //noFill();\n  \tframeRate(60);\n\tt = 0;\n  \n}\n\nfunction draw() {\n\tbackground(255);\n  //stroke(random(255), random(255), random(255));\n\tframeRate(60);\n\tcircling(0, 600, 200);\n\tcircling (200, 0, 140);\n\tcircling(100, 200, 80);\n\tcircling(40, 800, 30);\n    circling(100, 60, 30);\n\tcircling(50, 30, 200);\n\tcircling(50, 40, 600);\n\tcircling(300, 10, 170);\n  \n   //fill(random(100), random(100), random(255));\n}\n\nfunction circling(xPos, yPos, circleSize) {\n  let x = width/2; //position of circling\n  let y = height * noise(t + yPos);\n  let size = width/2 * noise(t + circleSize);\n\n  ellipse(x, y, size, size);\n\n  t += 0.0008;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ubciked8raddo5sba0ne",
        "width": 1370,
        "height": 1274,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "6sYtZnq2HyoCLnPmt",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-10T08:42:56.798Z",
    "posted": true,
    "lesson": "Random",
    "description": "WEEK 2 SKETCH (4/4): I WAS HONESTLY TRYING TO SEE WHAT THIS WOULD MAKE AND TO PLAY WITH TRANSPARENCY",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lclwbcq93neq5bkvgvim",
        "width": 1168,
        "height": 1174,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T14:19:06.434Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "6yj4iwY2z2fBYY5rS",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-04T05:04:58.564Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "I made a little couch situation 🛋 I mainly used translate and rotate.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hhfp2ieknqhmp8htslnb",
        "width": 1614,
        "height": 808,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dqmt8i0oijzovraqq3cl",
        "width": 1626,
        "height": 824,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lysq24f4ze1pwbruc9lg",
        "width": 1002,
        "height": 594,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-04T05:28:11.391Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T02:17:42.533Z"
      }
    ],
    "comments": [
      {
        "comment": "piet mondrian doing interior design  ",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-05T07:59:50.416Z"
      }
    ]
  },
  {
    "_id": "6z85L9oJcSh5ghMNJ",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-01T09:40:37.561Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Sketch based off of Reshma's instruction. My hand hurts lol",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nailkxg5y6tdlmgthx8g",
        "width": 1500,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-01T14:42:21.359Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T02:02:21.058Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "733nx3FccJ3AxBz8c",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-27T03:45:49.994Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Started with the Starting Code for Challenge 1, got pretty close surprisingly since at the start of this challenge I was struggling to even get the distribution of the ellipses right.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(50);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 1;\n  let r = float(random(0, 255));\n  let g = float(random(0, 255));\n  let b = float(random(0, 255));\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    let x = noise(i * noiseFrequency, 0) * width;\n    let y = noise(i * noiseFrequency, 1000) * height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    let diameter = float(random(1, 20));\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    //fill(r, g, b);\n\n    colorMode(HSB, 100);\n    \n    for (let j = 0; j < 100; j++) {\n      for (let k = 0; k < 100; k++) {\n        fill(i, j, k);\n      }\n    }\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mowy6gwkxlqhciswmkzz",
        "width": 596,
        "height": 592,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "73brcn2g5xPCHcmkE",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-05-05T15:10:11.714Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "A futuristic pod/flower castle!!!My first ever Individual challenge!!",
    "code": "//color (\"LimeGreen\") {\n//    square([200000,200000],true);\n//}\n\n\n$fn=4;\n// Define brick\nbrick_length = 10;\nbrick_height = 5;\nbrick_depth = 30;\n// Define ring\nbricks_per_ring = 20;\ncircumference_ring = brick_length*bricks_per_ring-300;\nradius_ring = circumference_ring/(2*PI);\nradius_ring_plus_space = radius_ring+90;\n// Define wall\nnumber_of_rings = 60;\n\nmodule wall_ring () {\n    for (r = [0:bricks_per_ring]) {\n        rotate([0,0,4/bricks_per_ring*r]) translate([0,radius_ring_plus_space,0]) cube([  brick_length,brick_depth,brick_height],false);\n    }\n}\nmodule wall() {\n    for (l = [0:number_of_rings]) {\n        rotate([0,0,180/bricks_per_ring*l]) translate([0,0,(brick_height)*l]) wall_ring();\n    }\n}\n\nwall();\n\n// Archi\nmodule top () {\n    for (i = [0:180]) {\n//    rotate([i,-i,i]) \n    rotate([0,0,0])\n    translate([0,0,0]) rotate([i*0.05,i*0.1,i]) sphere(30);\n    }\n}\n\n\n\nmodule soft_ice(height) {\n\nlinear_extrude(height = height, twist = -180, scale = 0, center = false, slices = 800)\ncircle(10, center = true, $fn=8);\n}\n\n\n\nmodule banana() {\n    for (i = [0:180]) {\n        translate([sin(i)*40,0,i*3]) \n        rotate([0,0,0]) \n        sphere(sin(i)*10);\n    }\n}\n\nmodule spiky_tower_base() {\n    for (i = [0:4]) {\n        rotate(-360/5*i,0,0)\n        translate([47,0,0])\n        rotate([0,7,180]) \n        banana();\n    }\n}\n\nspiky_tower_base();\n\ntranslate([0,0,190]) sphere(15, $fn=9);\nmodule spike() {\n    for (i = [0:130]) {\n        translate([sin(i)*5,0,i*0.18]) \n        rotate([0,0,0]) \n        sphere(sin(i)*4.5);\n    }\n}\n\nmodule center_spike() {\n    translate([-46,0,45]) rotate([0,100,0]) spike();\n}\n\nmodule spiky_crown(number, translate, rotate) {\n    for (i = [0:(number-1)]) {\n        rotate(-360/number*i,0,0)\n        translate([translate,0,0])\n        rotate([0,rotate,180]) \n        center_spike();\n    }\n}\n\n\ntranslate([0,0,150]) spiky_crown(number=40, translate=0, rotate=10);\ntranslate([0,0,155]) spiky_crown(number=20, translate=0, rotate=20);\n\ntranslate([0,0,158]) spiky_crown(number=3, translate=4, rotate=30);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ms0twqfyq925p4fxa31x",
        "width": 952,
        "height": 870,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pfey9incyktqyrqqgmuv",
        "width": 1222,
        "height": 861,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:00.99Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T13:23:48.607Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7T84Rftjxkdt3nKiW",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-09T17:07:58.104Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "WEEK 6 (1/4): Minecraft Block ( I was following some tutorial on pixels to refresh my memory and I did it soooo wrong but ended up with this)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dm4lyll7vjlecsqfb4h9",
        "width": 796,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T18:59:39.832Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:39.887Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7dHSR6iZ5DwiwDiEy",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-19T21:15:34.367Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "\"Planetary Intelligence\" I gave the same prompt to midjourney again and again and eventually they all came out looking similar aesthetics.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yxbcibvrubyetiwa4zlt",
        "width": 2073,
        "height": 2100,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vxtbvjjh1jp7rrryri0v",
        "width": 2073,
        "height": 2100,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-20T06:44:17.702Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-20T17:58:51.134Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-04-20T22:41:28.253Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-21T03:59:36.561Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7kmeCRmK52Nw3E66D",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-21T05:07:35.046Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Stable Diffusion is Midjourney's weird cousin. I asked it to place known characters, like Shrek and Mario (lol) in different scenarios. The results were INTERESTING. Stable Diffusion REALLY wants Princess Peach to have a moustache. I even used a negative prompt, saying that Princess Peach should not have a moustache, but it didn't always listen. The second image is it's interpretation of Shrek and Mario eating cake together. These images sort of resemble those off brand characters/mascots that roam Times Square.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xqtsgucqmzosfajbr6iz",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dbmx9mfuzjdlfcmr8xxc",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/i7agfoykmxyrshupw2it",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:42:41.571Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-21T16:07:01.706Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7mb5pH7tfnwNAPfK7",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-10T02:22:20.224Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Using Shrishti's prompt sketch for the pair challenge - I'm not sure if this also qualifies for Ouroboros? 😬\n\nI sped up the video quite a lot for the full effect. The video seems rather low quality - feel free to try the sketch out instead!\n\nP.S. It's a heavy sketch",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet worldImage;\nlet threshold = 180;\n\nfunction preload() {\n  worldImage = loadImage(\"world.png\");\n}\n\nfunction setup() {\n  createCanvas(750, 400);\n  pixelDensity(1);\n  rectMode(CENTER);\n  \n  frameRate(2)\n}\n\nfunction draw() {\n  background(0, 0, 0);\n  \n  noStroke()\n  \n  // threshold = abs(sin(millis()) * 255);\n\n  worldImage.loadPixels();\n\n  for (let y = 0; y < worldImage.height; y++) {\n    for (let x = 0; x < worldImage.width; x++) {\n      // console.log(x);\n      \n      t = (noise(x+y+millis())-0.5)*10-5\n      \n      const in_color = worldImage.get(x, y);\n\n      const r = red(in_color);\n      const g = green(in_color);\n      const b = blue(in_color);\n      \n       avg = (r + g + b) / 3;\n\n      let out_color;\n\n      if (avg > (threshold * 2) / 4) {\n        // if (r > threshold && g > threshold && b > threshold){\n        fill(\"red\")\n        // rect(x, y, 10, 10)\n        // out_color = color(\"red\");\n      } else if (avg > threshold / 3 && avg < (threshold * 2) / 3) {\n        // out_color = color(\"white\");\n        fill(\"white\")\n        // rect(x, y, 10, 10)\n      } else {\n        // out_color = color(\"black\");\n        fill(\"black\")\n      }\n      \n      p = map(x, 0, worldImage.width, 0, width)\n      q = map(y, 0, worldImage.height, 0, height)\n      \n      rect(p, q, 10+t, 10+t)\n      \n      // console.log(q)\n    \n      // console.log(r,g,b);\n      // let out_color;\n      // if (r > 120) {\n      //   out_color = color(\"white\");\n      // } else {\n      //   out_color = color(\"black\");\n      // }\n\n      // if (g < 100 || b > 150) {\n      //   out_color = color(\"#d97c4a\");\n      // }\n      // else if (r > 200  && b > 180) {\n      //   out_color = color(\"white\");\n      // } else\n      // {\n      //   out_color = color(\"black\");\n      // }\n\n      // worldImage.set(x, y, out_color);\n    }\n  }\n\n  // worldImage.updatePixels();\n\n  // noSmooth();\n  // image(worldImage, 0, 0, width, height);\n\n  // noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/o6mboxes151dnkr171ck",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:27.055Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7oYPZWFbzSG7DjxoC",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-15T03:47:29.961Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "🤯😧 I used ChatGPT to code a little something that I've been wanting to do for a while but didn't know how! I would say I'm very new to ChatGPT, I've only used it a few times and never for any coding before this class so a lot of it is new to me but I was impressed that it was able to do what I wanted.\n\nIt was an interesting experience and a lot of trial and error, I think for me I was learning how to phrase my inputs to get more accurate outcomes (it made me think of how you can use Google more effectively if you know what you're Googling and can use more specific terms).\n\nI was impressed by the way you can modify the code continuously by telling ChatGPT to fix something, or that something isn't working the way you want it to, and then it's able to go back and change things in the code. The commenting was also really helpful to understand what the code was doing when I wasn't familiar with something.\n\nStill a lot to explore but from a coding perspective I can see ChatGPT being a helpful tool to maybe get to a result faster than having to start coding something yourself from scratch. Once it was functioning more or less how I wanted, it was pretty simple for me to go in and tweak things. So overall I'm excited by it's potential!",
    "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Curved Text with SVG</title>\n    <style>\n      body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        background: black;\n      }\n\n      text {\n        font-family: 'Helvetica';\n        font-size: 2rem;\n        /* fill: white; */\n      }\n    </style>\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap\" rel=\"stylesheet\">\n  </head>\n  <body>\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1920 1080\">\n      <path stroke=\"black\" stroke-width=\"2\" fill=\"none\" id=\"path\"></path>\n      <text>\n        <textPath xlink:href=\"#path\" id=\"text-path\">\n          COMP FORM!\n        </textPath>\n      </text>\n    </svg>\n    <script>\n      let path = document.getElementById('path');\n      let textPath = document.getElementById('text-path');\n      let text = document.querySelector('text');\n      let isDrawing = false;\n      let pathData = '';\n\n      function onMouseMove(event) {\n        if (!isDrawing) {\n          pathData = `M ${event.clientX} ${event.clientY}`;\n          path.setAttribute('d', pathData);\n          isDrawing = true;\n        } else {\n          pathData += ` L ${event.clientX} ${event.clientY}`;\n          path.setAttribute('d', pathData);\n        }\n\n        pathLength = path.getTotalLength();\n        let startOffset = pathLength - 215;\n        textPath.setAttribute('startOffset', startOffset);\n        text.setAttribute('fill', getRandomColor());\n      }\n\n      function onMouseUp(event) {\n        isDrawing = false;\n      }\n\n      function getRandomColor() {\n        let letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n          color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n      }\n\n      window.addEventListener('mousemove', onMouseMove);\n      window.addEventListener('mouseup', onMouseUp);\n    </script>\n  </body>\n</html>",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nsvv4xt6f92vjo5tkiik",
        "width": 1306,
        "height": 1270,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/g1b7cho2m4cxiwkbkwy6",
        "width": 1484,
        "height": 1486,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-15T19:19:33.746Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-16T00:05:08.701Z"
      },
      {
        "category": "nerdy",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-16T00:05:11.055Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-16T21:25:04.015Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-17T01:15:55.671Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-19T07:15:21.154Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-19T20:37:06.218Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7ohXTuy8bSrBtjY7H",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-10T18:54:44.413Z",
    "posted": true,
    "lesson": "Text",
    "description": "Gave ChatGPT a line and asked it to come up with rhyming lines for it, then mixed them all up using Tracery to come up with nonsensical, mostly grammatically-correct rhymes.",
    "code": "// require /text/tracery.min.js\n\nconst lineGrammar = {\n    line: [\"I committed a crime, #line2#\"],\n    line2: [\"#optionA#\", \"#optionB#\"],\n    \n    optionA: [\"I'm #A1#\"],\n    A1: [\"#A1a# the #A1b#\", \"#A1c#\"],\n    A1a: [\"doing\", \"paying\"],\n    A1b: [\"fine\", \"time\"],\n    A1c: [\"in a bind\"],\n    \n    optionB: [\"#B1# #B2# #B3#\"],\n    B1: [\"my\", \"the\"],\n    B2: [\"future\", \"reputation\", \"guilt\", \"conscience\", \"forgiveness\", \"regret\", \"redemption\", \"freedom\", \"evidence\", \"past\", \"action\", \"life\", \"punishment\", \"mistake\"],\n    B3: [\"#B3a# #B3b#\", \"#B3c#\"],\n    B3a: [\"is\", \"has been\"],\n    B3b: [\"undefined\", \"declined\", \"intertwined\", \"on my mind\", \"defined\", \"confined\", \"aligned\", \"maligned\", \"redefined\", \"outlined\", \"enshrined\"],\n    B3c: [\"reminds\"],\n};\n\nfunction main() {\n  const grammar = tracery.createGrammar(lineGrammar);\n  const rhyme = grammar.flatten(\"#line#\");\n  display(rhyme);\n}\n\nfunction display(...strings) {\n    const div = document.createElement(\"div\");\n    div.style = `\n        display: table; \n        padding: 50px; \n        margin: 50px auto; \n        text-align: center; \n        font-family: 'Roboto', sans-serif;\n        font-size: 40px; \n        font-weight: bold; \n        text-transform: \n        uppercase; line-height: .9em;\n    `\n    div.innerText = strings.join(\"\\n\");\n    document.body.append(div);\n}\n\nsetTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yz0tbmcwohvsuvxupmbm",
        "width": 1194,
        "height": 1182,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xr6iklv7ijxxp12fg1ig",
        "width": 883,
        "height": 582,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-04-10T21:05:33.855Z"
      },
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-11T01:18:41.055Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-11T01:18:42.409Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-12T05:58:43.672Z"
      },
      {
        "category": "funny",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-12T06:52:26.244Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-13T00:46:36.725Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7pqxu8o7iQG6vLAhA",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-23T19:53:44.159Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "gonna call this one \"the Pacman that fell in love and started a family\"",
    "code": "var Circle1 = new Path.Circle({\n\tcenter: [250, 350],\n\tradius: 150,\n\tfillColor: 'blue',\n});\nCircle1.add(position);\n\n\nvar copy1 = Circle1.clone();\ncopy1.fillColor = 'red';\ncopy1.scale(0.5);\n\nvar copy = Circle1.clone();\n// copy.radius = 100;\ncopy.fillColor = 'yellow';\ncopy.scale(0.8);\n\nfunction onFrame(event){\n     Circle1.rotate(2);\n      copy1.rotate(2);\n  copy.rotate(-2);\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mpstzcolnglingwe3sb3",
        "width": 972,
        "height": 958,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/apvpeg9kfqtsz68gth2a",
        "width": 992,
        "height": 864,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sfyzahjkp4ncmoz5cbux",
        "width": 998,
        "height": 814,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T20:19:37.509Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-03-23T20:40:00.029Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T21:21:15.487Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7qT6F9mhhSpvxCF5e",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-23T16:17:23.984Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "WEEK 7 (2/4): I forgot what the name of this kind of spiral is but I wanted to remake it, how cool would it be to print this one out? and the white parts be see through. It is a bunch or triangles drawn over and over again in +20 radius and +20 rotation. idk it just looked cool to do and a lot of people in class were making spirals so I was inspired.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/q4ohu7h3jgl23f48zk4p",
        "width": 444,
        "height": 404,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:34.624Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T21:23:26.248Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "7t9HZGCxj2Snp74S2",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-12T16:01:44.331Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Testing out some shapes for the garden challenge",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fs5aazfn2shg3bukxtor",
        "width": 500,
        "height": 500,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/awgmnxkirdunduz14mks",
        "width": 500,
        "height": 500,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/c5jmuaw0bydff31tr4ri",
        "width": 548,
        "height": 728,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "7u8rQi4LGeWyiKX8X",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-17T04:38:25.154Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Modification off of the Tame Impala sketch. Reduced the scale of some numbers which result in this really cool soap bubble-esque orb.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/emklaapfcyiy3akymyva",
        "width": 1080,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-17T04:44:32.894Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-17T05:00:44.898Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-17T05:46:17.472Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "82ZGDFhXfrmAmsL6W",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-15T03:01:32.121Z",
    "posted": true,
    "lesson": "Noise",
    "description": "My attempt at the individual challenge this week. I was able to have each of the corridor sections of the map change in size with a combination of noise and random. I wish I could have randomized the map generation more but I couldn't figure something out with the time that I allotted myself for this sketch.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet num = 10;\nlet n;\n\nfunction setup() {\n  createCanvas(700, 600);\n  rectMode(CENTER);\n  frameRate(4);\n}\n\nfunction draw() {\n  background(142, 212, 102);\n  \n  //base map foundation\n  \n  push();\n  fill(255, 50);\n  //noStroke();\n  stroke(1);\n  /* rect(200, 0, 50, 100);\n  rect(200, 600, 50, 100);\n  rect(100, 300, 100, 500);\n  rect(300, 300, 100, 500);\n  rect(500, 0, 50, 100);\n  rect(500, 600, 50, 100);\n  rect(400, 300, 100, 500);\n  rect(600, 300, 100, 500); */\n  pop();\n  \n  for(i = 0; i < width; i += 20) {\n    n = noise(i * frameCount);\n    //noStroke();\n    stroke(255, 255, 112);\n    fill(199, 247, 126, 80);\n    \n    //Bridges\n    \n    rect(350, 100, 600 * n, 100 * n);\n    rect(350, 500, 600 * n, 100 * n);\n    \n    // Floor manipulation through noise\n    \n    rect(200, 0, 50, 100 * n * 2);\n    rect(200, 600, 50, 100 * n * 2);\n    rect(100, 300, 100, 500 * n / (random(1.3, 1.7)));\n    rect(300, 300, 100, 500 * n / (random(1, 2)));\n    rect(500, 0, 50, 100 * n * 2);\n    rect(500, 600, 50, 100* n * 2);\n    rect(400, 300, 100, 500 * n / (random(1, 2.5)));\n    rect(600, 300, 100, 500 * n / (random(1.2, 3)));\n    \n    //Red dot treasure location\n    \n    noStroke();\n    fill(255, 0, 0, random(0, 100));\n    ellipse(125, 375, 25, 25);\n    \n    //Red dot recording button\n    \n    ellipse(150, 25, 10, 10);\n  }\n  \n  //screen flickering\n  \n  for(i = 0; i < num; i++) {\n    fill(125, 50);\n    noStroke();\n    translate(random(0, 255));\n    rect(floor(random(-10, 150)) * 5, floor(random(-10, 150)) * 5, 300, 50); \n  }\n  \n  stroke(255, 255, 112);\n  strokeWeight(3);\n  \n  push();\n  translate(-25, -25);\n  \n  line(50, 50, 150, 50);\n  line(50, 50, 50, 150);\n  pop();\n  \n  push();\n  translate(625, -25);\n  \n  line(50, 50, -50, 50);\n  line(50, 50, 50, 150);\n  pop();\n  \n  push();\n  translate(-25, 525);\n  \n  line(50, 50, 150, 50);\n  line(50, 50, 50, -50);\n  pop();\n\n  push();\n  translate(625, 525);\n  \n  line(50, 50, -50, 50);\n  line(50, 50, 50, -50);\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/utam6uopi7klvhydz9nu",
        "width": 1049,
        "height": 900,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-15T04:10:07.402Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-15T04:52:34.055Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "84v76kLBpGC2z7LFs",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-08T17:08:38.773Z",
    "posted": false,
    "lesson": "Random",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "87D6J6E4cqHNPXy3B",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-10T14:45:02.893Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Inspired fro Daniel Shiffman's bright video code!!! Love creating with pixels. Using pixel with video!",
    "code": "// Daniel Shiffman\n// https://youtu.be/rNqaw8LT2ZU\n// http://thecodingtrain.com\n\nvar video;\n\nvar vScale = 16;\n\nfunction setup() {\n  createCanvas(640, 480);\n  pixelDensity(1);\n  video = createCapture(VIDEO);\n  video.size(width / vScale, height / vScale);\n}\n\nfunction draw() {\n  background(51);\n  video.loadPixels();\n  for (var y = 0; y < video.height; y++) {\n    for (var x = 0; x < video.width; x++) {\n      var index = (video.width - x + 1 + (y * video.width)) * 4;\n      var r = video.pixels[index + 0];\n      var g = video.pixels[index + 1];\n      var b = video.pixels[index + 2];\n      var bright = r + g + b;\n     var w = map(bright, 0, 255, 0, vScale);\n      noStroke();\n      fill(255);\n      rectMode(CENTER);\n      rect(x * vScale, y * vScale, w, w);\n    }\n  }\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tznxh5eimofxthjfxcce",
        "width": 588,
        "height": 444,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-10T15:50:06.62Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T15:54:13.514Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "87MXwTmo62LwjRHF8",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-06T18:43:39.394Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "I wanted to explore the camera function in p5.play, so I studied the tutorial on the website and brought the bunny character back for an Easter egg hunt. Would love to add some sort of animation when the bunny collides with the Easter egg",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sxiwvsnux96wn9vmkvl4",
        "width": 1668,
        "height": 856,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/i23rlvkgjogj4dnld6pw",
        "width": 1630,
        "height": 838,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:46:45.324Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8DzbDoYXKboXMYv9r",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-26T19:20:20.846Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "First, second and third attempts at the challenge - I used culling placement for this. I wanted to try the tighten code from the text book but I couldn't get it to work very well (wasn't able to debug why)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fduseubjyrugrymcut2q",
        "width": 802,
        "height": 798,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/v8ibmythjzqdzaebcy06",
        "width": 802,
        "height": 798,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/y2b3uiimu0ryslylznbd",
        "width": 802,
        "height": 798,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "8GoyMAZ8zJkZDg2yj",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-22T21:05:13.328Z",
    "posted": true,
    "lesson": "Params",
    "description": "I put a sketch in Photoshop to make the colors brighter. I was building off my noise map sketch from last week. The second picture is the original.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/enebi1sfi8rhmepqbt04",
        "width": 1812,
        "height": 1604,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wn8ilfnybmp7vv9swjbr",
        "width": 1586,
        "height": 1586,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-23T03:06:01.909Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-23T14:56:27.168Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:29.871Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T02:16:08.816Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8KRpk45xvJrRi9qh6",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-10T16:19:09.323Z",
    "posted": true,
    "lesson": "Random",
    "description": "More rain 🌧",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bhimeo5wpndn27i5mcfm",
        "width": 1492,
        "height": 1334,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/yumlgzzdmy2qfui8dqvw",
        "width": 1190,
        "height": 1194,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-10T16:47:39.978Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8LrxJqAmhQNysA6Yq",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-31T05:53:28.657Z",
    "posted": true,
    "lesson": "Music",
    "description": "Failed Attempt at making something new out of example code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\nconst synth = new Tone.Synth().toMaster();\nconst notes = [\"C2\", \"D2\", \"E2\", \"F2\", \"G2\", \"A2\", \"B2\"];\nlet tempo = 120;\nlet sequence = [];\n\nfunction generateSequence() {\n  sequence = [];\n  const length = Math.floor(Math.random() * 16) + 4;\n  for (let i = 0; i < length; i++) {\n    const noteIndex = Math.floor(Math.random() * notes.length);\n    const note = notes[noteIndex];\n    sequence.push(note);\n  }\n}\n\nfunction playSequence() {\n  let index = 0;\n  const loop = new Tone.Loop((time) => {\n    const note = sequence[index];\n    synth.triggerAttackRelease(note, \"8n\", time);\n    index++;\n    if (index >= sequence.length) {\n      index = 0;\n    }\n  }, \"8n\");\n  loop.start(0);\n}\n\nfunction changeTempo() {\n  tempo += Math.floor(Math.random() * 20) - 10;\n  if (tempo < 60) {\n    tempo = 60;\n  } else if (tempo > 200) {\n    tempo = 200;\n  }\n  Tone.Transport.bpm.value = tempo;\n}\n\nwindow.onclick = () => {\n  generateSequence();\n  playSequence();\n  changeTempo();\n};\n\nconsole.log(\"click for music!\");",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qvhn5e7seggpupnbvsxv",
        "width": 3584,
        "height": 1818,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "8NPdnWYmjLrvp9TTC",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "created_at": "2023-02-02T04:17:08.363Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Some more typography! \nRandom Exploration in p5.js😊\n\nBut beware of the code it is still super messy and inefficient!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\n\n\nlet font_one;\nlet fontSize = 100;\nlet point_amount = 0.3;\n\nlet e_letter;\nlet d_letter;\nlet u_letter;\nlet c_letter;\nlet a_letter;\nlet t_letter;\nlet i_letter;\nlet o_letter;\nlet n_letter;\n\nlet enumber = 1;\nlet dnumber = 1;\nlet unumber = 1;\nlet cnumber = 1;\nlet anumber = 1;\nlet tnumber = 1;\nlet inumber = 1;\nlet onumber = 1;\nlet nnumber = 1;\n\n\nlet x_location;\nlet y_location;\n\nfunction preload() {\n  font_one = loadFont(\"CaslonOS-Regular.otf\");\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  textFont(font_one);\n  textSize(fontSize);\n\n  x = width / 2 - 80;\n  y = height / 2 + 65;\n\n  // the amount of points have to be exactly the same for both letters, therefore we need to make the SampleFactor different for both letters (match it perfectly)\n\n  e_letter = font_one.textToPoints(\"E\", 100, 100, fontSize, {\n    sampleFactor: 0.35,\n  });\n  d_letter = font_one.textToPoints(\"D\", 300, 100, fontSize, {\n    sampleFactor: 0.365,\n  });\n  u_letter = font_one.textToPoints(\"U\", 500, 100, fontSize, {\n    sampleFactor: 0.383,\n  });\n  c_letter = font_one.textToPoints(\"C\", 100, 300, fontSize, {\n    sampleFactor: 0.405,\n  });\n  a_letter = font_one.textToPoints(\"A\", 300, 300, fontSize, {\n    sampleFactor: 0.395,\n  });\n  t_letter = font_one.textToPoints(\"T\", 500, 300, fontSize, {\n    sampleFactor: 0.438,\n  });\n  i_letter = font_one.textToPoints(\"I\", 125, 500, fontSize, {\n    sampleFactor: 0.76,\n  });\n  o_letter = font_one.textToPoints(\"O\", 300, 500, fontSize, {\n    sampleFactor: 0.3745,\n  });\n  n_letter = font_one.textToPoints(\"N\", 500, 500, fontSize, {\n    sampleFactor: 0.322,\n  });\n}\n\nfunction draw() {\n    // enumber -= 1;\n    // dnumber -= 1;\n    // unumber -= 1;\n    // cnumber -= 1;\n    // anumber -= 1;\n    // tnumber -= 1;\n    // inumber -= 1;\n    // onumber -= 1;\n    // nnumber -= 1;\n  \n  // A\n  if (mouseX>0 && mouseX<200 && mouseY>0 && mouseY<200){\n    enumber += 4;\n    dnumber += 2;\n    unumber -= 3;\n    cnumber += 2;\n    anumber -= 3;\n    tnumber -= 3;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  //B\n  if (mouseX>200 && mouseX<400 && mouseY>0 && mouseY<200){\n    enumber += 2;\n    dnumber += 4;\n    unumber += 2;\n    cnumber -= 3;\n    anumber += 2;\n    tnumber -= 3;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  //C\n  if (mouseX>400 && mouseX<600 && mouseY>0 && mouseY<200){\n    enumber -= 3;\n    dnumber += 1;\n    unumber += 2;\n    cnumber -= 3;\n    anumber -= 3;\n    tnumber += 1;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  // D\n  if (mouseX>0 && mouseX<200 && mouseY>200 && mouseY<400){\n    enumber += 1;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber += 2;\n    anumber += 1;\n    tnumber -= 3;\n    inumber += 1;\n    onumber -= 3;\n    nnumber -= 3;\n  }\n  \n  //E\n  if (mouseX>200 && mouseX<400 && mouseY>200 && mouseY<400){\n    enumber -= 3;\n    dnumber += 1;\n    unumber -= 3;\n    cnumber += 2;\n    anumber += 2;\n    tnumber += 1;\n    inumber -= 3;\n    onumber += 1;\n    nnumber -= 3;\n  }\n  \n  //F\n  if (mouseX>400 && mouseX<600 && mouseY>200 && mouseY<400){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber += 1;\n    cnumber -= 3;\n    anumber += 1;\n    tnumber += 2;\n    inumber -= 3;\n    onumber -= 3;\n    nnumber += 1;\n  }\n  // G\n  if (mouseX>0 && mouseX<200 && mouseY>400 && mouseY<600){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber += 1;\n    anumber -= 3;\n    tnumber -= 3;\n    inumber += 2;\n    onumber += 1;\n    nnumber -= 3;\n  }\n  \n  //H\n  if (mouseX>200 && mouseX<400 && mouseY>400 && mouseY<600){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber -= 3;\n    anumber += 1;\n    tnumber -= 3;\n    inumber += 1;\n    onumber += 2;\n    nnumber += 1;\n  }\n  \n  //I\n  if (mouseX>400 && mouseX<600 && mouseY>400 && mouseY<600){\n    enumber -= 3;\n    dnumber -= 3;\n    unumber -= 3;\n    cnumber -= 3;\n    anumber -= 3;\n    tnumber += 1;\n    inumber -= 3;\n    onumber += 1;\n    nnumber += 2;\n  }\n  \n  if (enumber < 1){\n    enumber = 1;\n  }\n  if (dnumber < 1){\n    dnumber = 1;\n  }\n  if (unumber < 1){\n    unumber = 1;\n  }\n  if (cnumber < 1){\n    cnumber = 1;\n  }\n  if (anumber < 1){\n    anumber = 1;\n  }\n  if (tnumber < 1){\n    tnumber = 1;\n  }\n  if (inumber < 1){\n    inumber = 1;\n  }\n  if (onumber < 1){\n    onumber = 1;\n  }\n  if (nnumber < 1){\n    nnumber = 1;\n  }\n  \n  if (enumber > e_letter.length-20){\n    enumber = e_letter.length-20;\n  }\n  if (dnumber > e_letter.length-20){\n    dnumber = e_letter.length-20;\n  }\n  if (unumber > e_letter.length-20){\n    unumber = e_letter.length-20;\n  }\n  if (cnumber > e_letter.length-20){\n    cnumber = e_letter.length-20;\n  }\n  if (anumber > e_letter.length-20){\n    anumber = e_letter.length-20;\n  }\n  if (tnumber > e_letter.length-20){\n    tnumber = e_letter.length-20;\n  }\n  if (inumber > e_letter.length-20){\n    inumber = e_letter.length-20;\n  }\n  if (onumber > e_letter.length-20){\n    onumber = e_letter.length-20;\n  }\n  if (nnumber > e_letter.length-20){\n    nnumber = e_letter.length-20;\n  }\n  \n  background(220);\n  textAlign(CENTER);\n  // text(\"EDUCATION\", width/2, 187)\n  strokeWeight(1);\n  push();\n  fill(\"black\")\n  translate(-40, 35)\n\n  // E\n  beginShape();\n  for (i = 0; i < e_letter.length; i += enumber) {\n    vertex(e_letter[i].x, e_letter[i].y);\n  }\n  endShape();\n\n  // D\n  beginShape();\n  for (i = 0; i < e_letter.length; i += dnumber) {\n    vertex(d_letter[i].x, d_letter[i].y);\n  }\n  endShape();\n\n  // U\n  beginShape();\n  for (i = 0; i < e_letter.length; i += unumber) {\n    vertex(u_letter[i].x, u_letter[i].y);\n  }\n  endShape();\n\n  // C\n  beginShape();\n  for (i = 0; i < e_letter.length; i += cnumber) {\n    vertex(c_letter[i].x, c_letter[i].y);\n  }\n  endShape();\n\n  // A\n  beginShape();\n  for (i = 0; i < e_letter.length; i += anumber) {\n    vertex(a_letter[i].x, a_letter[i].y);\n  }\n  endShape();\n\n  // T\n  beginShape();\n  for (i = 0; i < e_letter.length; i += tnumber) {\n    vertex(t_letter[i].x, t_letter[i].y);\n  }\n  endShape();\n\n  // I\n  beginShape();\n  for (i = 0; i < e_letter.length; i += inumber) {\n    vertex(i_letter[i].x, i_letter[i].y);\n  }\n  endShape();\n\n  // O\n  beginShape();\n  for (i = 0; i < e_letter.length; i += onumber) {\n    vertex(o_letter[i].x, o_letter[i].y);\n  }\n  endShape();\n\n  // N\n  beginShape();\n  for (i = 0; i < e_letter.length; i += nnumber) {\n    vertex(n_letter[i].x, n_letter[i].y);\n  }\n  endShape();\n\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tknmnysunuexlk9fgxg1",
        "width": 1200,
        "height": 1204,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T16:11:40.623Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8XKDN8YwaKSgvqQ4i",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-19T23:14:11.567Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Basic experimentations/learning with paper js that I did over Spring Break. A lot of my time that went into this sketch was learning the syntax for paper and getting things to appear.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar boundary = new Rectangle(new Point(0, 0), new Point(500, 500));\nvar rect1 = new Path.Rectangle(boundary);\nrect1.fillColor = \"grey\";\n\nvar circle1Location = new Point(250, 250);\nvar circle1 = new Path.Circle(circle1Location, 100);\ncircle1.fillColor = \"red\";\n\nvar circle2Location = new Point(400, 400);\nvar circle2 = new Path.Circle(circle2Location, 50);\ncircle2.fillColor = \"#ebc265\";\n\nvar rect1 = new Rectangle(new Point(10, 20), new Size(100, 200));\nvar rect1path = new Path.Rectangle(rect1);\nrect1path.fillColor = \"#3252a8\";\n\nvar rect2 = new Rectangle(new Point(390, 20), new Size(100, 200));\nvar rect2path = new Path.Rectangle(rect2);\nrect2path.fillColor = \"#36cf52\";\n\nvar rect3 = new Rectangle(new Point(10, 390), new Size(200, 100));\nvar rect3path = new Path.Rectangle(rect3);\nrect3path.fillColor = \"#e3da36\";\n\nconsole.log(\"Hello, Paper\");",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ypdxwqlngxa2n9mrnfoa",
        "width": 750,
        "height": 749,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:04.799Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8aWLfw3ENLr35JSRo",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-01-31T07:50:53.827Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "https://music.apple.com/us/playlist/while-you-were-sketching/pl.u-8aAVodVuoBjrPYk",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/znhycfslmq7yjp6euina",
        "width": 1176,
        "height": 1502,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T13:57:09.922Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8bXjMxpY4MRh8or6A",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-21T16:25:05.586Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "WEEK 11 (4/4): I forgot to post this but I wanted to see what a variety of these AI's do so I played with nearly all of them this week from RIZZGPT, CATGPT, a lot of image generating ones since midjourney was trying to charge me. I WANTED TO ADD THAT THEY DID AN AI CHAT FEATURE ON SNAP CHAT. I THOUGHT THAT WAS SO COOL and halfway through I was trying to get it to say something an AI would not say or break into consciousness idk. I spent like a whole day chatting and asking random questions to try to HUMAN'fy it.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yogmqfczswalafnvxwtx",
        "width": 1364,
        "height": 1366,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/im5rcwyrscmg2fs4pmha",
        "width": 1524,
        "height": 976,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:38:22.229Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8dyPtE5yXvJKuhL4z",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-23T18:57:36.482Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "**Regular Polygon + Perlin Noise + OnFrame Event Handler** Thumbnails look a little dull, so open it to view. [Using this library for 2D Perlin noise by Seph Gentle](https://github.com/josephg/noisejs)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ckobfokyddhhbhunkqat",
        "width": 1006,
        "height": 1006,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/hnkvxileojh9gcsbhwmo",
        "width": 480,
        "height": 480,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/y2a4ngladuptjc3ptv0o",
        "width": 924,
        "height": 924,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:33.257Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T20:19:48.275Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-28T05:19:49.106Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T14:33:37.145Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "8kMWTs9Twt99P4Jry",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-08T19:30:26.164Z",
    "posted": true,
    "lesson": "Random",
    "description": "I don't quite have a title for this - just some experiments with randomness",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet skew;\nlet points = [];\nlet increase;\n\nfunction setup() {\n  // noLoop();\n  // frameRate(10)\n  createCanvas(windowWidth, windowHeight);\n  \n  skew = false;\n  increase = false;\n}\n\nfunction draw() {\n \n  background(40);\n  \n  if(!skew){\n    points = [min(random(0,60), random(0,60), random(0,60), random(0,60), random(0,60)), max(random(10,100), random(10,100), random(10,100), random(10,100), random(10,100)), (random(150,200), random(150,200), random(150,200), random(150,200), random(150,200))*0.2, random(windowWidth/2,windowHeight)];\n    point1 = random(points);\n    point2 = random(points);\n    point3 = random(points);\n    point4 = random(points);\n    skew = true;\n  }\n  else {\n    if(point1<100 && !increase){\n    point1++;\n    point2++;\n    point3++;\n    point4++;\n    }\n    else{\n    point1--;\n    point2--;\n    point3--;\n    point4--;\n    increase = true;\n    }\n  }\n  if(point1<0 && point2<0 && point3<0 && point4){\n    if(increase){\n    skew = false;\n      increase = false;\n    }\n  }\n  \n  noFill();\n  for(let i=0; i<100; i++){\n  shapeDrawing(point1, point2, point3, point4, i);\n  shapeDrawing(point2, point3, point4, point1, i+10);\n  shapeDrawing(point3, point4, point1, point2, i+20);\n  shapeDrawing(point4, point1, point2, point3, i+30);\n  }\n  \n}\n\nfunction shapeDrawing(p1, p2, p3, p4, r){\n  \n  R = 50+p1;\n  G = 100+p4;\n  B = 80 + p3;\n  A = 150 + p2;\n  \n  stroke(R, G, B, A)\n  \n  beginShape();\n      vertex(width/2 - r - p1, height/2 + r + p2);\n      vertex(width/2 - r - p2, height/2 - r - p3);\n      vertex(width/2 + r + p3, height/2 - r - p4);\n      vertex(width/2 + r + p4, height/2 + r + p1);\n      endShape(CLOSE);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dcuzbxx4fjxm3x2udjvk",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/zlzwij5zmaqrbj4icm5r",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xtms9ffobaebzqwptig9",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-08T21:24:38.969Z"
      },
      {
        "category": "nerdy",
        "voter_id": null,
        "created_at": "2023-02-08T21:26:28.174Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "97TyWMcQjnjQhkGmA",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-10T15:42:21.327Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Had so much fun manipulating Isha's sketch. She gave me an very colorful playground to play with!",
    "code": "//Pair CHallenge\n//load pixel color and change values\n\nlet img;\n\nlet smallPoint;\nlet largePoint;\n\nfunction preload() {\n  img = loadImage(\"assets/isha.png\");\n}\nfunction setup() {\n  \n  createCanvas(720, 700);\n  smallPoint = 4;\n  largePoint = 40;\n  imageMode(CENTER);\n  img.resize(700,700);\n  noStroke();\n  background(255);\n  img.loadPixels();\n}\n\nfunction draw() {\n  let pointillize = map(mouseX, 0, width, smallPoint, largePoint);\n  let x = floor(random(img.width));\n  let y = floor(random(img.height));\n  let pix = img.get(x, y);\n  fill(pix, 128);\n  rect(x, y, pointillize, pointillize);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/y7tgsc5g046xmvnp5g4y",
        "width": 671,
        "height": 650,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/annyug7ccmkwvjoqhagn",
        "width": 672,
        "height": 654,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/enatsac1hl9qrsjyerra",
        "width": 938,
        "height": 937,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:09.962Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9E8xrGLDToZ5x6QLQ",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-05-12T16:19:10.538Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Took turtle graphics literally and made a sketch in illustrator to laser cut.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xcdcjkezqz5qn5lcjhwo",
        "width": 470,
        "height": 707,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/njjtpb34jfggikraobzn",
        "width": 955,
        "height": 2048,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-05-12T21:04:27.607Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:18:31.011Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9EyAiHg6CDRBLLpuq",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-22T02:34:22.039Z",
    "posted": true,
    "lesson": "Params",
    "description": "Face Generator challenge, except I dove into using social media icons to create the elements of each part of the face. Social media has conglomerated into a big force in our lives, why not give it a face as well?",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  instagram = loadImage(\"Image/instagram.png\");\n  instagramHolo = loadImage(\"Image/sm-icons-instagram-glyph-logo.png\");\n  pinterest = loadImage(\"Image/pinterest.png\");\n  facebook = loadImage(\"Image/sm-icons-facebook-logo.png\");\n  linkedin = loadImage(\"Image/sm-icons-linkedin-in-logo.png\");\n  linkedinFull = loadImage(\"Image/sm-icons-linkedin-logo.png\");\n  snapchat = loadImage(\"Image/sm-icons-snapchat-ghost.png\");\n  youtubeFull = loadImage(\"Image/sm-icons-youtube-full.png\");\n  youtube = loadImage(\"Image/sm-icons-youtube.png\");\n  twitter = loadImage(\"Image/twitter.png\");\n  twitch = loadImage(\"Image/twitch-logo_project_use.png\");\n  \n  createCanvas(350, 350);\n  \n  createP(\"Eyes\");\n  eyeSlider = createSlider(1, 3, 1);\n  \n  createP(\"Nose\");\n  noseSlider = createSlider(1, 3, 1);\n  \n  createP(\"Mouth\");\n  mouthSlider = createSlider(1, 3, 1);\n}\n\nfunction draw() {\n  background(220);\n  image(twitch, 0, 0);\n  \n  if(eyeSlider.value() == 1) {\n    push();\n    scale(0.3);\n    image(instagram, 375, 280);\n    image(instagram, 675, 280);\n    pop();\n  } else if(eyeSlider.value() === 2) {\n    push();\n    scale(0.4);\n    image(pinterest, 295, 205);\n    image(pinterest, 520, 205);\n    pop();\n  } else if(eyeSlider.value() == 3) {\n    push();\n    scale(0.35);\n    image(facebook, 305, 210);\n    image(facebook, 570, 210);\n    pop();\n  }\n  \n  if(noseSlider.value() == 1) {\n    push();\n    scale(0.4);\n    image(snapchat, 400, 325);\n    pop();\n  } else if(noseSlider.value() == 2) {\n    push();\n    scale(0.3);\n    image(instagramHolo, 550, 450);\n    pop();\n  } else if(noseSlider.value() == 3) {\n    push();\n    scale(0.35);\n    image(twitter, 465, 375);\n    pop();\n  }\n  \n  if(mouthSlider.value() == 1) {\n    push();\n    scale(0.4);\n    image(youtubeFull, 250, 450);\n    pop();\n  } else if(mouthSlider.value() == 2) {\n    push();\n    scale(0.06);\n    image(linkedinFull, 1900, 3100);\n    pop();\n  } //Slot 3 is empty to have no mouth\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rn48mrmwsi480ox3ohbb",
        "width": 520,
        "height": 871,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dek5etyngw6kukp79jb0",
        "width": 533,
        "height": 487,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/nyqf925aow40hfmre3pq",
        "width": 542,
        "height": 490,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-22T03:29:27.815Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-22T04:46:12.067Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-22T10:26:34.205Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9FokYneTrzozjZFnZ",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-03T00:09:02.787Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "**Challenge 2 Extended**",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet amplitude_slider;\nlet timeSpeed_slider;\nlet frequency_slider;\n\nlet startX = 0;\nlet endX = 540;\n\nlet amplitude, frequency, timeSpeed;\n\nlet fromCol ;\nlet toCol ;\n\nfunction setup() {\n  createCanvas(500, 320);\n  stroke(240);\n  strokeWeight(0.2);\n  //noStroke();\n  push();\n  fill(\"white\");\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(10, 400, 100);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 30);\n  createP(\"TimeSpeed\");\n  timeSpeed_slider = createSlider(0, 50, 30);\n  pop();\n  \n  fromCol = color(floor(random(255)), floor(random(255)), floor(random(255)));\n  toCol = color(floor(random(255)), floor(random(255)), floor(random(255)));\n}\n\nfunction draw() {\n  background(240);\n  ellipseMode(CENTER);\n\n  amplitude = amplitude_slider.value() / 2;\n  frequency = frequency_slider.value() / 3;\n  timeSpeed = timeSpeed_slider.value() / 15000;\n\n  noiseDetail(1, 0.5);\n\n  //noStroke();\n\n  for (\n    let start = 0, end = -10, n1 = 3.4, n2 = 5.4;\n    start < 361;\n    start += 12, end += 12, n1 -= 0.3, n2 -= 0.3\n  ) {\n    drawLine(start, end, n1, n2);\n  }\n}\n\nfunction drawLine(startY_, endY_, noiseX, noiseY) {\n  for (let i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY_, endY_, i);\n\n    let nX = noise(i * frequency + millis() * timeSpeed, noiseX);\n    let nY = noise(i * frequency + millis() * timeSpeed, noiseY);\n    \n    let offsetX = (nX - 0.5) * amplitude;\n    let offsetY = (nY - 0.5) * amplitude;\n    \n    let finCol = lerpColor(fromCol, toCol, (nX+nY)/2);\n    fill(finCol);\n\n    rect(x + offsetX, y + offsetY, 12, 12);\n    rect(x - offsetX, y - offsetY, 12, 12, 2,2,2,2);\n  }\n}\n\nfunction mouseClicked() {\n  if (mouseX > 0 && mouseX < 500 && mouseY > 0 && mouseY < 320) {\n    fromCol = color(floor(random(255)), 40, floor(random(255)));\n    toCol = color(floor(random(255)), 200, floor(random(255)));\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/p3thhed8mwv8o1yjqhhy",
        "width": 1016,
        "height": 1112,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/qsl4opbjsvx4uqiyi2eq",
        "width": 1016,
        "height": 658,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xgf2ajofhgo3yhpovcao",
        "width": 984,
        "height": 634,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-03-03T03:01:47.121Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T04:14:33.714Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-03T04:17:44.808Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-03T16:53:53.912Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:08.035Z"
      }
    ],
    "comments": [
      {
        "comment": "crazy it kind of looks like crocodile!",
        "commenter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-03-03T03:01:43.624Z"
      }
    ]
  },
  {
    "_id": "9FxDRPsT8ithh7ZFs",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-21T18:53:23.124Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Face generator code written by ChatGPT with very minimal corrections",
    "code": "let button;\nlet faceColor, eyeColor, mouthColor;\nlet mouthSize;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // initialize colors and mouth size\n  faceColor = color(255);\n  eyeColor = color(0);\n  mouthColor = color(255, 0, 0);\n  mouthSize = 30;\n  \n  // create button\n  button = createButton('Change');\n  button.mousePressed(changeFeatures);\n  \n  // create slider for mouth size\n  slider = createSlider(10, 60, mouthSize);\n  slider.position(20, height - 50);\n}\n\nfunction draw() {\n  background(220);\n  \n  // draw face\n  fill(faceColor);\n  ellipse(width/2, height/2, 200, 200);\n  \n  // draw eyes\n  fill(eyeColor);\n  ellipse(width/2 - 50, height/2 - 20, 30, 30);\n  ellipse(width/2 + 50, height/2 - 20, 30, 30);\n  \n  // draw mouth\n  fill(mouthColor);\n  ellipse(width/2, height/2 + 40, mouthSize, 30);\n}\n\nfunction changeFeatures() {\n  // change colors randomly\n  faceColor = color(random(255), random(255), random(255));\n  eyeColor = color(random(255), random(255), random(255));\n  mouthColor = color(random(255), random(255), random(255));\n  \n  // change mouth size randomly\n  mouthSize = random(20, 50);\n  slider.value(mouthSize);\n}\n\nfunction mouseDragged() {\n  // update mouth size with slider\n  if (mouseX > 20 && mouseX < width - 20 && mouseY > height - 50 && mouseY < height - 20) {\n    mouthSize = slider.value();\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qlodfjxsmn3xf99fimtx",
        "width": 848,
        "height": 892,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-04-26T05:09:16.951Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9GEKG97SDfdyYu79J",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-28T02:08:47.853Z",
    "posted": true,
    "lesson": "API",
    "description": "Revisited my treasure map sketch from noise week and made a different sketch, building on that",
    "code": "let rows = 8;\nlet cols = 8;\nlet tileSize = 50;\nlet colorOptions = ['#FF6F61', '#6B5B95', '#88B04B', '#F7CAC9', '#92A8D1'];\nlet selectedColor;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noStroke();\n  selectedColor = colorOptions[0];\n}\n\nfunction draw() {\n  background(220);\n  \n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * tileSize;\n      let y = j * tileSize;\n      \n      let c = color(random(255), random(255), random(255));\n      if (selectedColor) {\n        c = selectedColor;\n      }\n      fill(c);\n      \n      push();\n      translate(x + tileSize/2, y + tileSize/2);\n      rotate(random(TWO_PI));\n      rect(0, 0, tileSize/2, tileSize/2);\n      pop();\n      \n      push();\n      translate(x + tileSize/2, y + tileSize/2);\n      rotate(random(TWO_PI));\n      rect(0, 0, tileSize/4, tileSize/4);\n      pop();\n      \n    }\n  }\n}\n\nfunction mousePressed() {\n  selectedColor = color(random(colorOptions));\n}\n\nfunction mouseDragged() {\n  let x = floor(mouseX / tileSize);\n  let y = floor(mouseY / tileSize);\n  if (x >= 0 && x < cols && y >= 0 && y < rows) {\n    let c = color(random(255), random(255), random(255));\n    fill(c);\n    rect(x * tileSize, y * tileSize, tileSize, tileSize);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/h9t2hhgqswhdmbhouyur",
        "width": 822,
        "height": 824,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-28T05:48:50.995Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9JJ2n5dwqceq6NKHi",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-09T21:33:49.015Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "**Exploring the benefit of working at the pixel level,** noise + random at the pixel level. Some of these images makes me feel dizzy - it gives me the impression that I am not able to focus on the image or that the image is not focussed.",
    "code": "function setup() {\n  createCanvas(500, 500);\n}\n\nfunction draw() {\n  background(0);\n\n  img = createImage(100, 100);\n  img.loadPixels();\n  let factor = 0.04;\n  for (let i = 0; i < img.width; i++) {\n    for (let j = 0; j < img.height; j++) {\n      let c;\n      let n = noise(i*factor, j*factor);\n      if (n < 0.25)  \n        //c = color(255, random(220, 230), random(190, 210));\n        c = color(255, random(220, 250), random(190, 210));\n      else if (n < 0.35)  \n        //c = color(255, random(205, 215), random(178, 190));\n        c = color(255, random(205, 235), random(178, 190));\n      else if (n < 0.5)\n        //c = color(255, random(180, 195), random(162, 178));\n        c = color(255, random(180, 215), random(162, 178));\n      else if (n < 0.6)\n        //c = color(random(229, 230), random(152, 162), random(154, 162));\n        c = color(random(229, 230), random(152, 182), random(154, 162));\n      else if (n < 0.7)\n        //c = color(random(181, 191), random(131, 141), 141);\n        c = color(random(181, 191), random(131, 161), 141);\n      else\n        //c = color(random(90, 109), random(104, 112), random(104,127));\n        c = color(random(90, 109), random(104, 132), random(104,127));\n      img.set(i, j, c);\n    }\n  }\n\n  img.updatePixels();\n\n  noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/balisoni0ve47ylye7ku",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wsz1gmoue9v4my82al6r",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/iexpyfdshtl1hx70lfar",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T07:51:29.848Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:09.035Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9JLfTLYRFQuWX5aYt",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-28T15:59:05.077Z",
    "posted": true,
    "lesson": "API",
    "description": "Built off of my previous sketch, and added a randomize function. I used chatGPT to help me trouble shoot how to prevent the pupil from going outside of the outer circle. It works pretty well, but sometimes the pupil starts to move around in a circle when it collides with the outer circle, and then stops. I'm going to try to fix that!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fy6jy7g0opbhwnfd7131",
        "width": 754,
        "height": 374,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pmcl8rjvb1n5554lplyn",
        "width": 768,
        "height": 401,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kb6bbrxyz2nigoes390e",
        "width": 1410,
        "height": 726,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "9QcpDD9pRgx7gKHBd",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-06T23:01:28.994Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "I wanted to try doing the Pixel Ouroboros challenge physically (by scanning an image and printing the results over and over). I did that 10 times with this image. I plan to process it through code as well to compare the physical and digital results! My printer definitely started to run out of ink towards the end but I think it created a cool effect.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u5bd1ekrme0rtu9an4gp",
        "width": 1090,
        "height": 1444,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/omdxyifkwxmx2mceycqt",
        "width": 1650,
        "height": 975,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-03-07T00:52:44.88Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-08T04:43:59.704Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:00.722Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9ReonyY9RJ9pggo8a",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-31T04:47:09.161Z",
    "posted": true,
    "lesson": "Music",
    "description": "Wanted to play with drawing sound",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/oaunuseaieschl5yzhgp",
        "width": 1610,
        "height": 1546,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/eyik2r1trgv37c6zp5j8",
        "width": 640,
        "height": 612,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:15:54.176Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9WrZtXcQqF4uZ6h9w",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-20T05:59:48.61Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Press the button to make the J Jiterrrrr. Another type exploration made in collaboration with Chat GPT. It set up the button functionality and style for me pretty well. It did not, however, succeed in forming a \"J\" with shapes like I asked it to. Had to do that one myself. But nonetheless, cut down my trial and error time significantly.",
    "code": "let myFont;\nlet textArray1 = [];\nlet textArray2 = [];\nlet r = 0;\nlet button;\nlet fSize = 800;\nlet isJittering = false;\n\n// Define an array of shapes\nlet shapes = [];\nconst palette = ['#610FA9', '#A246DD', '#7E00CC', '#8A00E0'];\n\nfunction preload() {\n  myFont = loadFont(\"TestUntitledSerif-Bold.otf\");\n\n}\n\nfunction setup() {\n  createCanvas(1000, 1000);\ntextAlign(CENTER);\n  textFont(myFont);\n  // Create the button\n  button = createButton(\"JITTER\");\n  button.addClass(\"button\");\n  button.mousePressed(toggleJitter);\n  button.position(width-200,height-170);\n  \n  frameRate(10);\n  angleMode(DEGREES);\n  textArray1 = myFont.textToPoints(\"J\", width / 2 - 200, height / 2+120, fSize, {\n\n    sampleFactor: 0.1,\n    // sampleFactor: 0.0241 for lines effect\n  });\n\n  textArray2 = myFont.textToPoints(\"j\", width / 2 - 200, height / 2+250, fSize, {\n\n    sampleFactor: 0.114,\n    // sampleFactor: 0.0306\n  });\n  // textAlign(CENTER);\n  print(textArray1.length, textArray2.length);\n  \n}\n\nfunction draw() {\n  background(236,206,255);\n stroke(color('#9757EB'));\n strokeWeight(2);\n  // textSize(fSize);\n\n  // text('D', width / 2+40, height / 2+250)\n  // text('d', width / 2+40, height / 2+250)\n\n    for(let i = 0; i < textArray1.length;i++){ \n     \n      // fill(palette[Math.floor(Math.random()*palette.length)]);\n      fill(color('#6b40e0'));\n      if (isJittering) {\n        // translate(random(-2, 2), random(0)); // Apply the jitter motion\n        noStroke();\n        rect(random(textArray1[i].x-20,textArray1[i].x+20), random(textArray1[i].y-20,textArray1[i].y+20), width/10, height/10, 100);\n      }\n      else {\n        rect(textArray1[i].x, textArray1[i].y, width/10, height/10, 20);\n      }\n      \n    \n   \n     \n\n// circle(textArray1[i].x, textArray1[i].y, val);\n   \n      \n      if(keyCode===65){\n         if(textArray1[i].x<=textArray2[i].x){\n       textArray1[i].x++;\n     }\n\n      if(textArray1[i].x>=textArray2[i].x){\n       textArray1[i].x--;\n     }\n\n         if(textArray1[i].y>=textArray2[i].y){\n       textArray1[i].y--;\n     }\n\n      if(textArray1[i].y<=textArray2[i].y){\n       textArray1[i].y++;\n     }\n\n      }\n    \n    }\n  // endShape();\n}\n\n\nfunction toggleJitter() {\n  // Toggle the isJittering variable\n  isJittering = !isJittering;\n  \n  // Change the button text to reflect the new state\n  if (isJittering) {\n    button.html(\"DON'T JITTER\");\n  } else {\n    button.html(\"JITTER\");\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/v4dc0zpdvc3kq7cb4ms4",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/gqk9ka2hjtmzkwlj4qcy",
        "width": 1012,
        "height": 1380,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/d0elzo8w0km3378stnhw",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-20T15:01:22.099Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-20T17:42:07.67Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9dWeMnN26v7wLMajJ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-23T22:21:59.066Z",
    "posted": true,
    "lesson": "Params",
    "description": "Playing with Sloppy Rect and parameters",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet gridSizeX = 50;\nlet gridSizeY = 50;\nlet rectWidth = gridSizeX;\nlet rectHeight = gridSizeY;\nlet slopX;\n\nfunction setup() {\n  createCanvas(1000, 1000);\n  background(\"black\");\n  noLoop();\n}\n\nfunction draw() {\n  background(250);\n\n  // fill(0, 0, 0, 100);\n\n  for (x=gridSizeX; x< width - gridSizeX; x+=gridSizeX) {\n\n    // print(noise(x*10)*10);\n    // slopX = noise(x)*100;\n    // slopX = noise(x)*20;\n    slopX = x;\n    slopX = x/2;\n    slopX = x/20;\n\n    // slopX = mouseX/50;\n\n    for (y=gridSizeY; y< height - gridSizeY; y+=gridSizeY) {\n\n      fill(x/5+10, y/5, x, 0 + x/6);\n      fill(y/5+10, x/5, x, 0 + x/6);\n      fill(x/4, x/6, x/4, 0 + x/5);\n\n      fill(x/10, y/8, x/10, 0 + x/4);\n      // fill(x, y/5, 0, noise(y+x)*30);\n      // stroke(y/10, 0, 0, 0 + x/6);\n      // stroke(y/10, 0, 0, 0 + x/6);\n\n  // fill(0, 0, 0, random(100));\n      sloppyRect(x, y, rectWidth, rectHeight, slopX);\n      fill(x/2+10, y/2, y/5, 0 + x/6);\n      sloppyRect(x, y, rectWidth, rectHeight, slopX);\n      fill(y/3+10, x/5, x/3, 0 + x/6);\n      sloppyRect(x, y, rectWidth, rectHeight, slopX);\n    }\n  }\n}\n\nfunction sloppyRect(x, y, w, h, slop) {\n  beginShape();\n  vertex(\n    x + random(-slop, slop), //\n    y + random(-slop, slop)\n  );\n  vertex(\n    x + w + random(-slop, slop), //\n    y + random(-slop, slop)\n  );\n  vertex(\n    x + w + random(-slop, slop), //\n    y + h + random(-slop, slop)\n  );\n  vertex(\n    x + random(-slop, slop), //\n    y + h + random(-slop, slop)\n  );\n  endShape(CLOSE);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sgt2dkfdhitcpwfmkb3y",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cjfvn2khmtroiskvo6zc",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/i9cci23h9pexzargs91d",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-23T23:44:05.607Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T00:23:40.271Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-24T16:14:41.798Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-27T00:28:39.831Z"
      }
    ],
    "comments": [
      {
        "comment": "Love the colours on the last one!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T02:13:13.879Z"
      },
      {
        "comment": "Light Stroke has such a glass breaking feel",
        "commenter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-24T20:04:40.522Z"
      }
    ]
  },
  {
    "_id": "9kmdZhNJhTh4vRvTT",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-05T06:48:21.846Z",
    "posted": true,
    "lesson": "Random",
    "description": "My attempt at a Rothko 😩\nUsing the grass coding challenge as a starting point",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kl9mso0r7tg56mq2dahp",
        "width": 1600,
        "height": 2000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-05T14:37:39.172Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-05T15:12:21.208Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-05T16:52:00.069Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-05T22:20:47.163Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-06T21:24:52.038Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-09T14:43:52.041Z"
      }
    ],
    "comments": [
      {
        "comment": "Wow!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-05T14:37:57.087Z"
      }
    ]
  },
  {
    "_id": "9mgtRdAwhMg6zkkom",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-02T15:25:41.418Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "WEEK 5 (3/4): Take it or leave it, I couldn't figure out how to actually get the colors to range based on the diameters.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vdi00dtahbunumg9fxxi",
        "width": 732,
        "height": 762,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "9r6Hptu2XXyWShXWf",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-24T01:23:51.591Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Pair Challenge with Sora. I took her initial sketch of the triangle spiral that she sent me and tinkered around with it in Illustrator, experimenting with blending using more than 2 targets.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/isr9yytbpa6kpe8ycfbn",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-24T02:02:46.556Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:56:54.956Z"
      }
    ],
    "comments": [
      {
        "comment": "This looks lovely! I love the balance of chaos and order here...",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-24T02:03:31.973Z"
      }
    ]
  },
  {
    "_id": "9wHhnqt2qNReoW7qj",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-05-05T03:40:57.638Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Here's my final castle render! All elements were created in OpenScad except the shells. I rendered this in Blender and I really had fun using modifiers and creating the shells.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yxhng6cms49kxjqveyrk",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T03:52:09.943Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-05T03:57:14.149Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T04:32:02.089Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "9wT8z6ttLbrbgnxsY",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-04T03:44:49.923Z",
    "posted": true,
    "lesson": "Random",
    "description": "**Brownian Motion inspired by CompForm Textbook**: Yet to figure out how to avoid coloring over a section that has already been colored - like the textbook seems to do. On mouse click, the gradient color scheme being followed by the painted pixels change to another random scheme. In order to create an aesthetic I want, I click past color schemes I don't like much (but not without leaving a tiny mark of it behind with no assurance that it'll be covered up).",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x, y;\nlet startColor, endColor;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n // noLoop();\n  background(240);\n  x=width/2; y=height/2;\n  frameRate(64);\n  \n  noStroke();\n  startColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n  endColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n  \n  push();\n    fill(startColor);\n    textSize(20);\n    text('Click to change colour', 24, 32);\n  pop();\n}\n\nfunction draw() {\n    \n    //Recalibrate in case x or y lies outside the canvas\n    if (x<0) x+=24; \n    if (x >width-12) x-=24;\n    \n    if (y<0) y+=24;\n    if (y>height-12) y-=24;\n  \n    //Draw square\n    let tempColor = lerpColor (startColor, endColor, random());\n    fill(tempColor);\n    rect(x, y, 12, 12);\n    \n    //Calculate next random adjacent x/y position\n    let a = random();\n    if ( a < 0.33 && frameCount!=0) {\n      x-=12;\n    } else if (a < 0.66){ \n      x+=12;\n    }\n    a = random();\n    if ( a < 0.33 && frameCount!=0) {\n      y-=12;\n    } else if (a < 0.66){ \n      y+=12;\n    }\n  \n  \n}\n\nfunction mouseClicked(){\n  startColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n  endColor = color (floor(random(255)), floor(random(255)), floor(random(255)));\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nbgfisuic7sb6k6c3yf9",
        "width": 1306,
        "height": 1306,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/uojtqn0ykzgdmtmc6itb",
        "width": 1300,
        "height": 1302,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/s8skhdsqxnq7sfnenmpf",
        "width": 1300,
        "height": 1302,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-04T04:06:42.083Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-05T08:41:02.397Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-05T15:12:19.533Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-05T19:55:41.429Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-06T03:50:52.353Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-06T06:16:50.926Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-06T17:43:53.356Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:16.438Z"
      }
    ],
    "comments": [
      {
        "comment": "very nice!",
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-05T15:12:17.206Z"
      }
    ]
  },
  {
    "_id": "A5WxjYsB3dSB8xpBF",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-30T02:11:24.444Z",
    "posted": true,
    "lesson": "Music",
    "description": "This sketch didn't turn out as I hoped it would. I wanted the music note to randomly move every time a sound is played but unfortunately I struggled with realizing my idea and ended up cutting this down to what it is right now. At least I got the note to vibrate but I ran out of time from trying to get to this point.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/addons/p5.dom.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nlet x = 200;\nlet y = 200;\nlet mousebuttonClicked = false;\n\nfunction setup() {\n  createCanvas(400, 400);\n  frameRate(30);\n}\n\nconst synth = new Tone.Synth({\n    envelope: {\n    attack: 0.1,\n    decay: 1,\n    sustain: 3,\n    release: 3,\n  },\n});\n\nsynth.toMaster();\nconst notes = [\"G3\", \"A3\", \"B3\", \"C3\", \"D3\", \"E3\", \"F3\"];\n\nfunction mousePressed() {\n  mousebuttonClicked = true;\n  synth.triggerAttackRelease(random(notes), \"8n\");\n}\n\nfunction mouseReleased() {\n  mousebuttonClicked = false;\n}\n\nfunction draw() {\n  background(50);\n  \n  fill(255);\n  strokeWeight(2);\n  \n  if(mousebuttonClicked === true){\n      translate(random(-50, 50) + 10, random(-50, 50) + 10);\n  }\n  \n  rect(x + 5, y - 100, 40, 20);\n  rect(x + 5, y - 100, 20, 100);\n  ellipse(x, y, 50, 50);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u2grx080vcqumli8zkvz",
        "width": 600,
        "height": 596,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-30T04:21:23.88Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:49.876Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "A6ZhQRRpctfobpcc2",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-19T05:45:49.616Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I used chatgpt to debug the code for this interactive letter I. I fed it the JS code and asked it to pinpoint any mistakes. It was able to figure out syntax errors like missing or incorrect quotation marks but it did struggle to spot errors with names and variables. I think it’s a great debugging tool but you probably shouldn’t use it for starter sketches unless you’re good at prompting.",
    "code": "const letters = document.querySelectorAll(\".fill\");\n/*pink, yellow, orange, skin, teal*/\nconst palette = ['#EAC435', '#1E96FC', '#FF6F59', '#D90368','#A246DD']\n\n// \n\nfor (const letter of letters){\n  let parts = letter.querySelectorAll(\".fill\");\n  letter.addEventListener(\"mouseenter\", function(){\n      // loop through the parts\n     // letter.style.borderRadius = \"80%\";\n        // set the \"transform\" style to random translation and rotation within a range\n          letter.style.transform = `translateY(${Math.random()*300 - 150}%) translateX(${Math.random()*300 - 150}%) rotate(${Math.random()*800 - 250}deg)`;\n        // pick a random color for their background\n        letter.style.background = palette[Math.floor(Math.random()*palette.length)];\n      });\n\n  }\n\ndocument.addEventListener(\"mousedown\", function(){\n  for (const letter of letters){\n    // clear the \"style\" attribute that we added earlier\n    letter.removeAttribute(\"style\");\n  }\n});",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/srcqcegu8xx5inzgw8ux",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tnm2bqcwd7whgratcyek",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-19T19:24:52.624Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ABrbgWfRRqDoqnfta",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-20T22:49:41.502Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Playing with Skybox Lab! I wanted to put in my idea for my studio project to see what this program would come up but it did not do a great job. The sketches are beautiful but I wanted a 3d rendered painting of a cyber microbial world. I believe midjourney will give me better output",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zlukfodihiattbcmsqwl",
        "width": 6144,
        "height": 3072,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fbyixjnpkrwkrrtg2cpj",
        "width": 6144,
        "height": 3072,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/df9v715ctkx5hdow9ar5",
        "width": 6144,
        "height": 3072,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T01:01:13.897Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:01:10.541Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ACnWWYwAY53dXZ7et",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-20T14:49:42.689Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I enjoyed training my own model using Playform. I wanted to test which elements, features of the images it takes up. I used my 36 Days of Type from 3-4 years ago and used it as the input collection - It gave some interesting results.  I noticed a lot of the patterns, ink-ness and shadows in each of the output images consistently. If you look closely at the generated images, you can almost see some features of animals in some of them but in the most abstract way. The last image I have put here is the input for the training model.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wfjamyifn148aqx5lcnm",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/habpksgwjugpcaq0qtag",
        "width": 3320,
        "height": 1762,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/t2pbssxsqoridhzsiifi",
        "width": 3308,
        "height": 922,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-20T17:42:20.288Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-20T19:02:38.641Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "AJzYJRNXqLBfn4R2h",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-23T00:57:07.649Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pretty mild sketch that I passed on to Rama for the pair sketch! Here I was experimenting with making shapes using mathematical graph equations and passing functions as objects. I got the math part to work but wasn't able to do anything particularly interesting in manipulating the forms that I produced. A really powerful technique that I think I can work on more!",
    "code": "function setup() {\n  createCanvas(1000, 1000);\n  noLoop();\n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(220);\n  let cloverLeaf = buildCurve(cloverFunction, 50);\n \n  translate (100, 50);\n  for(let i = 0; i < 80; i++) {\n    rotate(360/(i));\n      fill(360, 20+i,40);\n    beginShape();\n      for (let j = 0; j < cloverLeaf.length; j++) {\n        translate(.8,.8)\n        vertex(cloverLeaf[j].x*4, cloverLeaf[j].y*4)\n      }\n    endShape(CLOSE);\n  }\n}\n\n  function cloverFunction(t){\n    let point = {\n      x:pow(sin(2*PI*t), 3) * 16,\n      y:(13*cos(2*PI*t))-(5*cos(2*PI*t*2))-(2*cos(2*PI*t*3))-(cos(2*PI*t*4))\n    };\n    return point;\n  }\n\n  function buildCurve(f, npts)\n    {\n        let pts = [];\n        for (var i = 0; i < npts; i++) \n        {\n            let pt = f(i / (npts-1));\n            pts.push(pt);\n        }\n        return pts;\n\n    }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vbksvb619fqm9wqsibyt",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T04:12:49.567Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-23T13:22:59.569Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ANPX2SF7xDgWr7Lyb",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-10T05:59:58.98Z",
    "posted": true,
    "lesson": "Random",
    "description": "Randomly generated combinations of breakfast items and a side by combining two arrays (based on my own eating habits lately). \n\nI wanted to use this to do a bit of basic dom-manipulation with javascript and try to implement biases outside of p5 but didn't have enough time to explore the latter properly.",
    "code": "//food options arrays\nconst mainFood = [\"Omlette\", \"Instant Noodles\", \"Cereal & Milk\", \"Chicken Sandwich\"];\nconst sideFood = [\"Milk\", \"Nothing\", \"Bread\", \"Yogurt\", \"Grapes\", \"Potatoes\", \"Banana\"];\n\nconst getRandomNumber = (max) => Math.floor(Math.random() * max);\n\n//get a random item from list\nconst getRandomFood = () => `${mainFood[getRandomNumber(mainFood.length)]} and ${sideFood[getRandomNumber(sideFood.length)]}`;\n\n//update DOM\nconst setRandomFood = () => {\n  document.getElementById('item-name').innerText = getRandomFood();\n};\n\n\n//generate on button click event\ndocument.getElementById('generate')\n  .addEventListener('click', setRandomFood);\n\n// console.log(getRandomFood());\n\n// setRandomFood();",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xv83aujhenmfbe3n2mud",
        "width": 800,
        "height": 442,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-10T17:14:28.236Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T05:59:55.335Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "APEAhF32bE3fNtK6S",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-16T04:33:14.15Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Attempt at a treasure map, the treasure is supposed to be at the \"lowest\" (darkest) point, indicated by the empty square, while the \"highest\" point is indicated by the white square",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kfiaqygfe8w2s4xspfbc",
        "width": 1419,
        "height": 1419,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T05:06:21.021Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:27.817Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-17T01:47:26.544Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "AStMp65XQhe73oK9E",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-23T20:07:04.172Z",
    "posted": true,
    "lesson": "Params",
    "description": "More shader-park! Found an interesting way to make cloud-like textures 😍",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wi6ekxjsjxefipac748m",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/w5mrmfxojyxxboczslby",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/m7jwqhsm6lty1cytfofn",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-24T02:55:45.043Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Ah7hut66qg5THhinc",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-28T10:39:02.257Z",
    "posted": true,
    "lesson": "API",
    "description": "WEEK 12 (1/4): I COULD NOT FIGURE OUT THE NODE THING :(  Using ChatGPT to basically mimic the assignment just because I wanted to see how different it would be from the way we were doing things in class.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ffpkxd8tjhpzyr0sl2hc",
        "width": 1468,
        "height": 722,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vevesnnxyegtkx4whyuh",
        "width": 1372,
        "height": 684,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Amedyak7cPwTbmPK8",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-03T15:42:27.478Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "KINETIC ENERGY",
    "code": "function setup() {\n\tcreateCanvas(800,800);\n\tbackground(255);\n}\n\nfunction draw() {\n\tbackground(100);\n\tfill(random(255)); \n\tcircle(mouseX, mouseY, random(0,800));\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/w2jt4qargl9vfgfpjnos",
        "width": 752,
        "height": 730,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-03T16:25:12.884Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "AufZop6x9n3jBj5BT",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-10T04:53:06.176Z",
    "posted": true,
    "lesson": "Random",
    "description": "I was doing some more testing with color palette generation and limiting the scope of some random variables. Really beautiful results, I especially like the first one, very Monet-esque!",
    "code": "let arr = [];\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB);\n  noLoop();\n}\n\nfunction draw() {\n  noStroke();\nfor (let y = 0; y < 10; y++) {\n    for (let x = 0; x < 7; x++) {\n      let xpos = x *(floor(windowWidth/7));\n      let ypos = y *(floor(windowHeight/10));\n      \n      //set brightness to 95 and cap saturation to 70 = pastels\n      // let hue = floor(random()*360);\n      // let sat = floor(random()*70);\n      // let bright = 95;\n      \n      //set sat to 20 = neutrals\n      // let hue = floor(random()*360);\n      // let sat = 20;\n      // let bright = floor(random()*100);\n      \n      //'salad' color palette\n      // let hue = floor(random()*100);\n      // let sat = floor(random()*70);\n      // let bright = 95;\n      \n      //same idea but rotated around color wheel. Super beautiful Monet palette\n      let hue = floor(random()*100+200);\n      let sat = floor(random()*50);\n      let bright = 90;\n      \n      //Limited hue range for a nice monochrome and muted palette\n      // let hue = floor(random()*20+200);\n      // let sat = floor(random()*30);\n      // let bright = 90;\n      \n      fill(hue,sat,bright);\n      \n      rect(xpos, ypos, floor(windowWidth/7), floor(windowHeight/10));\n\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/v5or9yn4jf4xrdwyfdl4",
        "width": 963,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/exz3wr1ubxv12swkilon",
        "width": 963,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fsxhgkcypcmrwxznkyeu",
        "width": 963,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-10T07:07:48.305Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "B7TDT7YpfAncqtEaM",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-16T18:03:51.63Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Pose detection and mapping using ml5.js and an Azure Kinect. Asked ChatGPT for help with the animated lines. Its initial code was very basic but it improved with each correction.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n\n//initialise image detection variables\nlet video;\nlet poseNet;\n\n//initialise position variables\nlet nose;\nlet lefteye, righteye;\nlet leftwrist, rightwrist;\nlet xPos, yPos;\n\n//initialise draw variables\nlet lines = [];\n\nfunction setup() {\n  createCanvas(window.innerWidth, window.innerHeight);\n  \n  //create video and capture images; detect poses from feed\n  video = createCapture(VIDEO);\n  video.hide();\n  poseNet = ml5.poseNet(video, modelLoaded);\n  poseNet.on('pose', gotPoses);\n}\n\n//if pose detected, define keypoints and required body parts\nfunction gotPoses(poses) {\n  if (poses.length > 0) {\n    nose = poses[0].pose.keypoints[0];  \n    lefteye = poses[0].pose.keypoints[1];  \n    righteye = poses[0].pose.keypoints[2]; \n    leftwrist = poses[0].pose.keypoints[9]; \n    rightwrist = poses[0].pose.keypoints[10];\n  }\n}\n\n//check if model loaded\nfunction modelLoaded() {\n  console.log('loaded');\n}\n\nfunction draw() {\n  \n  // image(video, 0, 0);\n  push();\n    translate(128, 0);\n    scale(-0.2, 0.2);\n    image(video, 0, 0);\n  pop();\n\n  if (nose && lefteye && righteye && leftwrist && rightwrist) {\n    if (nose.score > 0.6) {\n\n      let cam_width = 640; //frontcam: 640; kinect:\n      let cam_height = 480; //frontcam: 480; kinect:\n\n      //movement mapped to nose position\n      xPos = map(nose.position.x, 0, cam_width, width, 0);\n      yPos = map(nose.position.y, 0, cam_height, 0, height);\n\n      //line length mapped to eye distance aka distance from camera\n      let lengthFactor = map(lefteye.position.x - righteye.position.x, 0, 200, 30, 200);\n\n      //colour inversion mapped to wrist postition\n      let wristFactor = leftwrist.position.y + rightwrist.position.y;\n      let lineCol = map(wristFactor, 200, 1000, 255, 0);\n      let bgCol = map(wristFactor, 200, 1000, 0, 255);\n      console.log(wristFactor);\n      \n      //draw background\n      background(bgCol, 10);\n      //draw lines\n      // ellipse(leftwrist.position.x, leftwrist.position.y, 10, 10);\n      // ellipse(rightwrist.position.x, rightwrist.position.y, 10, 10);\n      if (lines.length < 100) {\n        lines.push(new Line());\n      }\n      let mousePos = createVector(xPos, yPos);\n      lines.forEach(line => line.update(mousePos, noise(line.pos.x * 0.01, line.pos.y * 0.01)));\n      lines.forEach(line => line.draw(lengthFactor, lineCol));\n      lines = lines.filter(line => line.alpha > 0);\n    } \n  }\n}\n\nclass Line {\n  constructor() {\n    this.pos = createVector(random(width), random(height));\n    this.angle = random(TWO_PI);\n    this.speed = random(1, 3);\n    this.alpha = random(50, 200);\n  }\n\n  update(target, noiseVal) {\n    //calculate the direction towards the target\n    let dir = p5.Vector.sub(target, this.pos);\n    dir.normalize();\n\n    //update the angle of the line based on the direction towards the target and some noise\n    this.angle = atan2(dir.y, dir.x) + noiseVal * TWO_PI * 0.5 - TWO_PI * 0.25;\n\n    //move the line in the direction of the angle at a speed proportional to the distance to the target\n    let distance = p5.Vector.dist(target, this.pos);\n    this.pos.add(p5.Vector.fromAngle(this.angle).mult(this.speed * distance / 100));\n\n    //transparency\n    this.alpha -= 0.5;\n    if (this.alpha < 0) {\n      this.alpha = 0;\n    }\n  }\n\n  draw(lengthFactor, lineCol) {\n    stroke(lineCol, this.alpha);\n    strokeWeight(1);\n    line(\n      this.pos.x, this.pos.y, \n      this.pos.x + cos(this.angle) * lengthFactor, \n      this.pos.y + sin(this.angle) * lengthFactor\n    );\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ankvxtophwv2ycwm1xqg",
        "width": 2880,
        "height": 1580,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/irdg1l8tnozrq6rhpltw",
        "width": 2872,
        "height": 1580,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xdwwnkrsuelnl3uoxbr9",
        "width": 2874,
        "height": 1578,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-16T21:44:11.507Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-17T01:06:06.566Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-17T20:45:54.605Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-19T20:37:24.888Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "B83dohuvo8MNvCDCc",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-17T15:12:21.671Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I was trying to map different patterns on noise with Isha's sketch!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jwdo11wxlscsgn3iwge6",
        "width": 484,
        "height": 394,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jnimoq6odwmgqcvvqra7",
        "width": 583,
        "height": 581,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:26.191Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "BD6MJKCKJvLQdETfE",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-21T14:06:15.696Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "WEEK 11 ( 1/4): I could not just pick one. I never used AI before or ChatGPT so I had no Idea what I was allowed to ask it. I was assigned a prototype theme this week and asked ChatGPT for help on it and I just got lost playing with it.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nrmwyd0hpqacpimwkkud",
        "width": 1004,
        "height": 1292,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dza7blj0vdywt0lmluh7",
        "width": 822,
        "height": 988,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/plkbvx64zfhk4e80xosc",
        "width": 702,
        "height": 1016,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "BJr9mCtv69A4QnC5o",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-20T04:34:20.676Z",
    "posted": true,
    "lesson": "Params",
    "description": "Type experiments are best done in parameters week! \nFollowed Xin Xin's tutorial:",
    "code": "let chrom; //hold my font\nlet chromArray = []; //set up an array to receive coordinates\n// let fontSize=150; //initialize size of text\n\nconst params = {\n  circle_size: 5,\n  bg_color: \"#40E0D0\",\n  color: \"#6B40E0\",\n};\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"circle_size\", { min: 0, max: 20 });\npane.addInput(params, \"bg_color\");\npane.addInput(params, \"color\");\n\nfunction preload() {\n  chrom = loadFont(\"Chromatica.otf\");\n}\n\n\nfunction setup() {\n  createCanvas(600, 600);\n  textFont(chrom);\n  frameRate(30);\n  textSize(150);\n  noStroke();\n  textAlign(CENTER);\n  textWrap(CHAR);\n     stroke(2);\n  // rectMode(CENTER);\n  chromArray1 = chrom.textToPoints(\"comp form\", width / 2, height / 2, 100, {\n    sampleFactor: 0.08,\n  });\n\n  // chromArray2 = chrom.textToPoints(\"form\", width / 2, height / 2, params.fontSize, {\n  //   sampleFactor: 0.08,\n  // });\n\n  // print(chromArray);\n\n}\n\nfunction draw() {\n  background(params.bg_color);\n  fill(params.color);\n  addRect();\n  \n}\n\nfunction addRect() {\n  for (let i = 0; i < chromArray1.length; i++) {\n    push();\n    translate(chromArray1[i].x, chromArray1[i].y);\n    circle(-275, -150,  params.circle_size);\n circle(-275, 25,  params.circle_size);\n     circle(-275, 200,  params.circle_size);\n    // rect(-200, -100,  12);\n    pop();\n    \n    \n //     for (let i = 0; i < chromArray2.length; i++)\n //    push();\n //    translate(chromArray2[i].x, chromArray2[i].y);\n // circle(-200, 100,  params.circle_size);\n //    pop();\n  // \n}\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nqlvnisckwvdkutencvx",
        "width": 1200,
        "height": 1200,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/yhz7ndwudpqldd8x7k3f",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-20T06:06:17.442Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-20T22:16:47.627Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-20T23:44:46.922Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-21T00:19:33.775Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-21T19:42:30.913Z"
      }
    ],
    "comments": [
      {
        "comment": "cuutel!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-20T05:14:59.776Z"
      }
    ]
  },
  {
    "_id": "BYgTZzorcsBpLFYzp",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-28T05:22:17.014Z",
    "posted": true,
    "lesson": "API",
    "description": "Chords Progression Generator with openAI: Spent most of the 2 hours setting up and troubleshooting, the culprit: an expired API key. I did manage to sample a quick song-maker that takes inputs of a person's favorite song for lyrics and their favorite key for music to spit out a new composition. You can see the difference in both harmony and words with the temperature being 0.2 and 0 respectively. I also played out the chords to see if they’re in tune (only at 0) and yes very much so! the 0.2 was off key so that's for my ears only.",
    "code": "import { ask, gpt, end } from \"./shared.js\";\n\nmain();\n\nasync function main() {\n  console.log(\"Hello, GPT!\");\n  const name = await ask(\"What is you favorite song?\");\n  const chord = await ask(\"What is your favorite key in music?\");\n  // let prompt = await ask(\"What do you want to ask?\");\n\n  // let result = await gpt(prompt, { temperature: 0.3 });\n  // console.log(`\"\"\"\\n${result}\\n\"\"\"`);\n\n  console.log(\"\");\n\n  const prompt = `My name is ${name} and I am from ${chord}. Make a new song based on the favorite key and suggest a chord pattern in the same key.`;\n\n  const song = await gpt(prompt, { temperature: 0.2 });\n  console.log(`\"\"\"\\n${song}\\n\"\"\"`);\n\n  end();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vqxvsgm7skrocbrqijdj",
        "width": 898,
        "height": 1182,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ennpkfhp0wrj8g2d7pqo",
        "width": 914,
        "height": 1352,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/eijz9rvicakrtp5sw7qe",
        "width": 1280,
        "height": 720,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-28T05:48:15.789Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Bhnmp6tuT2kbxS4Wu",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-24T12:27:34.819Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Interesting pattern I came across when experimenting",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/isr6hxwe12oxo3extek3",
        "width": 1151,
        "height": 919,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Bki6ay7XaZko7ByFX",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-28T00:00:02.708Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "For the extension of Challenge 1, I tried integrating the dots challenge code with the \"cull close before placing\" code from the Point Placing demo. Would love to try to push this further in a future week",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xmiuala23jd0pn0n12nz",
        "width": 996,
        "height": 996,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-03-01T14:21:03.964Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T05:38:57.769Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "BmN6p8ADzqQ7wE6wC",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-05-12T03:09:45.782Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "some fur tests for the animal challenge... I can kind of see it with some more time!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/df8n1ayv9wczvkmcckib",
        "width": 1944,
        "height": 1926,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sijqdkhcxyqg1ppwmzoe",
        "width": 1978,
        "height": 1934,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qvpxd2ay5f66lwiz0rrj",
        "width": 1964,
        "height": 1952,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-12T04:36:17.377Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T16:18:16.068Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:14:30.955Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "BsPcMGxyqofP2kZHR",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-28T14:32:25.866Z",
    "posted": true,
    "lesson": "API",
    "description": "Messing around with spotify API. I am stuck in understanding how to re_create access tokens.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tpbp85cdqdqrgzi2rbig",
        "width": 1832,
        "height": 907,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "CArjPT2NNG5AbZTr6",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-24T15:45:34.344Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Played around with paths and made a random egg generator 🍳",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yos5fw1wmr6n3oo3lcc0",
        "width": 950,
        "height": 948,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sjgnhdk0ewpftjosgent",
        "width": 952,
        "height": 948,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jb5mhauqgyyf2rkmpcia",
        "width": 926,
        "height": 934,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "CNXaK2LYudWt4DjWR",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-08T05:04:33.707Z",
    "posted": true,
    "lesson": "Random",
    "description": "An interface that generates randomly positioned notes (cards) on button.mousePressed(). I set the max and min range for the position of the cards based on the canvas size and size of the cards so that they are always generated within the viewport of the canvas.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n//Global variables\nlet x = 900/2;\nlet y = 900/2;\nlet cardW = 300;\nlet cardH = 150;\nlet button;\nlet cards = [];\n\n//return random integer within parameters\nfunction getRandomInt(min, max) {\n  return (Math.random()*(max - min + 1) ) + min;\n}\n\n\nfunction setup() {\n  createCanvas(900, 900);\n  //create input field interface\n  noteTitle = createInput('').attribute('placeholder', 'Title');\n  noteText = createInput('').attribute('placeholder', 'Note');\n  button = createButton(\"Add Entry\");\n  \n  //generate cards on mouse press on button\n  button.mousePressed(()=>{\n    x = getRandomInt(100,800)\n    y = getRandomInt(75,825)\n    drawCard(x,y)\n    //json object\n    cards.push({\n      noteTitle: noteTitle.value(),\n      noteText: noteText.value(),\n    })\n    console.log(cards);\n  });\n}\n\n\n// function to draw a card\nfunction drawCard (x,y) {\n  fill(0);\n  rectMode(CENTER)\n  rect(x-8,y+8,cardW+5,cardH+5)\n  fill(400);\n  rectMode(CENTER)\n  rect(x, y, cardW, cardH)\n  fill(0);\n  drawText(x, y);\n\n}\n\n// text inside card\nfunction drawText (x, y) {\n  push();\n  translate(0, 0);\n  translate (0, -30);\n  textAlign(CENTER);\n  textSize(15)\n  text(noteTitle.value(), x, y);\n  text(noteText.value(), x, y + 40);\n  pop();\n}\n\nfunction draw() {\n  background(200, 0, 0);\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kpgwe4vawr02h2oovjvc",
        "width": 1818,
        "height": 1832,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-08T14:31:14.971Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-10T17:14:29.552Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T05:59:58.483Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-01T19:03:20.879Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "CRfSX9ycXHhrkMozy",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-31T04:29:53.608Z",
    "posted": true,
    "lesson": "Music",
    "description": "Had some fun pair coding with Rama and worked with reverb, and bass synth and metal.",
    "code": "// Beginning of code to be declared\n//bass sound\n\nlet reverb;\n\n//const distort = new Tone.Distortion(0.8).toMaster();\n\nreverb = new Tone.JCReverb({\n  roomSize: 0.8,\n  wet: 0.5,\n}).toMaster();\n\nconst bassSynth = new Tone.MembraneSynth({\n  pitchDecay: 0.02,\n  octaves: 10,\n  oscillator: {\n    type: \"sine\",\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.1,\n    sustain: 0.1,\n    release: 2,\n  },\n})\n  .connect(reverb)\n  .toMaster();\nTone.Transport.bpm.value = 200;\n\n//cymbal sound\nconst cymbalSynth = new Tone.MetalSynth({\n  frequency: 40,\n  envelope: {\n    attack: 0.01,\n    decay: 0.3,\n    release: 0.2,\n  },\n  harmonicity: 4.1,\n  modulationIndex: 14,\n  resonance: 3500,\n  octaves: 2.5,\n})\n  .connect(reverb)\n  .toMaster();\n\n//mousedown function is the same\nwindow.onmousedown = () => {\n  const melody = generate();\n  play(melody);\n};\n\n//haven't changed these - can be replaced\nconst fmajor = [\"F3\", \"G3\", \"A3\", \"Bb3\", \"C3\", \"D3\", \"E3\"];\nconst cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst notes1 = fmajor;\nconst notes2 = cminor;\n\nlet degree = 0;\n\n//generate function is the same\nfunction generate() {\n  degree = randomInt(0, 7);\n\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  // last note should be the tonic\n  c[c.length - 1][0] = notes1[0];\n\n  return [].concat(a, c, a, b);\n}\n\nfunction generateMeasure() {\n  const m = [];\n  const n = [];\n\n  let timeLeft = Tone.Time(\"1m\"); //\n\n  while (timeLeft.toSeconds() > 0) {\n    //changed sample\n    const change = sample([-1, -1, 1, 1, 1, 2, 2, 2, 3, 4, -3]);\n    degree = constrain(degree + change, 0, 8);\n    const note1 = notes1[degree];\n    const note2 = notes2[degree];\n\n    // increased length\n    let length = Tone.Time(\"8n\"); // time in a sequence\n\n    if (Math.random() < 0.7) {\n      //increased tonetime\n      length = Tone.Time(\"4n\");\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n\n    timeLeft = Tone.Time(timeLeft - length);\n\n    m.push([note1, length]);\n    n.push([note2, length]);\n  }\n\n  return m, n;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    if (note[0] !== \"rest\") {\n      //added bass and cymbal sounds here\n      cymbalSynth.triggerAttackRelease(Tone.Time(note[1]) - 0.1, t);\n    }\n    if (note[0] !== \"rest\") {\n      bassSynth.triggerAttackRelease(note[0], note[1], t);\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\nconsole.log(\"click for music!\");\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}\n\nvar time;\nvar wait = 100; // change this to change the 'ticking'\nvar c;\n\nfunction setup() {\n  createCanvas(700, 700);\n\n  time = millis(); // store the current time\n  // millis() returns the current number of milliseconds since starting the program.\n\n  //This information is often used for timing events and animation sequences.\n\n  c = color(255); // black\n}\n\nfunction draw() {\n  background(c);\n\n  //check the difference between now and the previously stored time is greater than the wait interval\n  if (millis() - time >= wait) {\n    c = color(random(255), random(255), random(255)); //if it is, change the background color\n    time = millis(); //also update the stored time\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/d81sjzdkjxsrzpyuyull",
        "width": 652,
        "height": 654,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:15:14.104Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-01T16:54:09.799Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "CSC6JETK7ZyyuyfBe",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-08T15:57:22.246Z",
    "posted": true,
    "lesson": "Random",
    "description": "PERLIN NOISE",
    "code": "var phase = 1;\nvar slider;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n  \n\tslider = createSlider(2, 12, 2.5, 0.1);\n  \n  \tbgColor = color( random(255), random(255), random(255) );\n\n}\n\nfunction draw() {\n\tbackground(bgColor);\n\tnoFill();\n\tstroke(255);\n\tstrokeWeight(4);\n\ttranslate(width/2, height/2); // position\n\n\t\n\tnoiseMax = slider.value();\n\t\n\tbeginShape(); // Curvature values\n\tfor (a = 0; a < TWO_PI; a+=0.2) {\n\t\txoff = map(cos(a+phase)+phase, -1, 1, 0, noiseMax);\n\t\tyoff = map(sin(a+phase)+phase, -1, 1, 0, noiseMax);\n    r = map(noise(xoff, yoff), 0, 1, 75, 125);\n\t\tx = r * cos(a);\n\t\ty = r * sin(a);\n\t\tvertex(x, y);\n\t}\n\tendShape(CLOSE);\n\t\n\tphase += 0.07; // Speed of geometry\n}\n\nfunction mousePressed(){\n\tbgColor = color( random(255), random(255), random(255) ); // changing color when clicking\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uitfilggfkjeakc6wxyi",
        "width": 807,
        "height": 712,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-08T21:24:42.635Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:46:37.691Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "CTNeWEopQvoNyEDHk",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-31T00:05:08.506Z",
    "posted": true,
    "lesson": "Music",
    "description": "**Two Bots on Synths:** Two random walkers were hooked to two different synths to create this effect. Does it seem easier to sense  musicality with major scales or the minor? Is this conditioning based on the (pop) music we largely listen to? \n.\n.\nIn addition to this, I wanted to improve musicality to create a sense of time. I tried to add random pauses to the music but that obviously isn't enough",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fbk4owgnjekjtdjj0tss",
        "width": 1200,
        "height": 1194,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/oafldwrecdf5gfpfxsof",
        "width": 1212,
        "height": 1194,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ibkoejk8urjll2z5przx",
        "width": 1200,
        "height": 1194,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T03:38:37.411Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T04:11:06.084Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:13:54.121Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "CZfLR2D4CxjTZNJkT",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-03T07:40:46.43Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "i stared at this for so long that it simply stopped making sense. but my brain feels challenged.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet amplitude_slider;\nlet frequency_slider;\nlet tSpeed_slider;\nlet start = 0;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 60);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 0.02);\n  createP(\"Time Speed\");\n  tSpeed_slider = createSlider(0, 100, 50);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value()/100;\n  let frequency = frequency_slider.value()/100;\n  let speedW = tSpeed_slider.value()/100;\n \n noiseDetail(1,0.5);\n  fill(255);\n  noStroke();\n  \n  for(i=0; i<1;i+=0.02){\n    let x = lerp(startX,endX,i);\n     let y = lerp(startY,endY,i);\n    let xoff = start;\n   xoff = noise(i*30+frequency)*amplitude*100 + sin(i)*10;\n   // yoff = noise(i*30)*amplitude + frequency;\n     ellipse(x+xoff, y+xoff+start, 10, 10);\n    \n\n  }\n  start+=0.02;\n      \n\n  // study this loop. do you understand how the line of ellipses is created?\n//   for (i = 0; i < 1; i += 0.02) {\n//     let x = lerp(startX, endX, i);\n//     let y = lerp(startY, endY, i);\n\n//   let offsetX =  noise(i * 30, 0) * amplitude;\n//     let offsetY = noise(i * 30, 0) * amplitude;\n    \n//       ellipse(x + offsetX, y + offsetY, 10, 10);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = (random() - 0.5) * amplitude * 10;\n    // let offsetY = (random() - 0.5) * amplitude * 10;\n\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zhtx9qijveohpdpnzqkz",
        "width": 1000,
        "height": 600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "CjMixEgKumhj5G93P",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-15T02:16:17.648Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Teachable Machine is ML so replugging my sketch from microgames week!! Use common house objects instead of arrow keys to control your character. \nEvery time you reach the T.A.R.D.I.S you're relocated and have to find your way back again. The moving black box at the top keeps track of collisions.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gcob89zgldzi9ksrzjh0",
        "width": 3456,
        "height": 1666,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jjrpvudgndjpl1kae3yu",
        "width": 2472,
        "height": 1682,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ppgpdlfrtkq6cuyrykqf",
        "width": 1188,
        "height": 976,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-15T04:10:49.398Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-16T00:05:37.772Z"
      },
      {
        "category": "nerdy",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-16T00:06:06.983Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-16T23:02:44.967Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-17T01:15:56.878Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "CqMM8Cp2uQt2xwmWF",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-20T06:04:51.171Z",
    "posted": true,
    "lesson": "Params",
    "description": "Challenge: Face Generator 😩",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/eq5ei474dl1zqcvt9yab",
        "width": 1428,
        "height": 1428,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wolkad6k575z6tygpfcv",
        "width": 1962,
        "height": 1438,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-20T06:07:40.265Z"
      },
      {
        "category": "funny",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-20T06:52:34.392Z"
      },
      {
        "category": "nerdy",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-20T07:23:56.288Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-02-20T21:10:45.815Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-20T22:16:48.705Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-20T22:28:44.312Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-22T00:09:51.745Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:40.117Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Cypru3eSTZ76Azq8H",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-23T04:56:55.766Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "More experiments with Midjourney.  \n1 - Gave Midjourney its own image from the last Midjourney sketch, told it to describe that image in a prompt, and then generate an image based on that prompt. Turned out VERY different from the original image.  \n2 - Gave it two images from the last sketch and asked it to blend them. The purple is very dominating.  \n3 - Asked it to blend images #1 and #2. The blurry style dominates.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ps7bgiga4n002vghey6a",
        "width": 1065,
        "height": 1065,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/defkjz1dftnatoodlpra",
        "width": 1065,
        "height": 1065,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xxgwyfjnruf9nlvmwift",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "D2E6KScKxqnquyMTq",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-28T01:31:34.804Z",
    "posted": true,
    "lesson": "Music",
    "description": "My attempt at the Individual Challenge while tinkering around with tone.js. Decided to quite literally write a song and I quite like it. Currently thinking about continuing to expand on this for an open sketch this week.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// partially adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/simple_song.js\n/* global Tone */\n\nconst synth = new Tone.Synth().toMaster();\n\nTone.Transport.bpm.value = 120;\n\nconst melody = [\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n\"],\n    [\"d5\", \"4n\"],\n    \n    [\"c5\", \"2n\"],\n]; \n\nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/a65sgfe8qwkfcb3hhpvn",
        "width": 1920,
        "height": 987,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:35.99Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "D8jXRyZ5dpkhHZk4y",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-10T00:30:41.879Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Pixel Ouroboros challenge! I processed the image 6 times. Images shown are the first processed version, and the sixth. Interesting that on the computer, the image got lighter, and when I scanned and reprinted the result, the image got darker.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gevfkplrxbhwflov9lfq",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lwxq8vwmpkplacw5tyle",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:18.844Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-13T19:49:46.49Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DB7Fn2YSddubA8yYS",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-04T16:11:22.19Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "**Pair Pipe Maze with Isha:** We tried to create a pipe maze out of the Trebuchet tiles we'd made earlier. We got the tiles to rotate on mouse click but we are yet to code the path that tracks and signals the player's success on connecting tiles from one point to the other",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\nlet pattern = [];\nconst patternSize = 50;\nconst xNum = 7;\nconst yNum = 6;\n\nlet pipeImages = [];\n// const pipeImagesSize = 50;\n\nfunction setup() {\n  createCanvas(xNum*patternSize, yNum*patternSize);\n  background(0);\n\n  for (let i=0; i<9; i++) {\n    pipeImages[i] = loadImage(\"Frame_\" + i + \".png\");\n  }\n  // let pipeImage = loadImage(\"pipe.jpg\");\n\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      pattern[x + y*10] = createSprite(\n        patternSize/2 + x*patternSize,\n        patternSize/2 + y*patternSize,\n        patternSize,\n        patternSize\n      );\n      pattern[x + y*10].addImage(\"main\", random(pipeImages))\n      // pattern[x + y*10].scale = patternSize/pipeImagesSize;\n      pattern[x + y*10].mouseActive = true;\n      pattern[x + y*10].rotation = 90 * (floor(random(0,4)));\n    }\n  }\n\n}\n\nfunction draw() {\n  drawSprites();\n}\n\nfunction mousePressed() {\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      if (pattern[x + y*10].mouseIsOver) {\n        pattern[x + y*10].rotation += 90;\n      } \n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/m5bbo5dw2xq1rod7knev",
        "width": 718,
        "height": 620,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-04T21:08:37.284Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-04T22:57:08.302Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T02:19:05.23Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:31:30.945Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DDTzzkSfMbpMzMqeu",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-24T04:45:39.875Z",
    "posted": true,
    "lesson": "Params",
    "description": "I really liked the pair challenge this week so I did it again! This time I passed some shader-park code to Torin Blankensmith (who co-developed the shader-park library 🤯). My code is the second video and Torin's remix is the first.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jzjbxf2pabkenl4fzble",
        "width": 1080,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/su50xeahhmnynownqybo",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "DDzYmtYQ8D4gpHpnT",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-05T15:57:27.646Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Made a little ~martini glass~ I was experimenting with the transparency of the glass and the pink drink. I wish you could see the pink drink through the sides of the glass.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/oh0ookxsqn2apu2cbxjf",
        "width": 1072,
        "height": 748,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xopkeoywk8guxcw9zp0l",
        "width": 1322,
        "height": 848,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:48.872Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T12:55:56.691Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DQrrZQgSTkdS7bzwk",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-10T01:43:32.771Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "My response to Ishaan's sketch. I was a bit stuck on where to go but this is where I got. I sampled every pixel in each grid square and got the average R, G, and B values. I then intensified the difference between the average color values and the mean 127. This way, the color of each grid space is that space's average color.",
    "code": "function setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\n\nfunction preload() {\n  testImage = loadImage(\"/sketch_pixeldata.png\");\n  noLoop();\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  testImage.loadPixels();\n  noSmooth();\n}\n\nfunction draw() {\n  background(0,0,0);\n  \n  testImage.loadPixels(); \n  let redAvg \n  let greenAvg\n  let blueAvg\n\n  let redAtPoint\n  let greenAtPoint\n  let blueAtPoint  \n  \n  let pixelColor\n \n  for (let startPointX = 0; startPointX < 20; startPointX++) {\n    for (let startPointY = 0; startPointY < 20; startPointY++) {\n      redAvg = 0\n      greenAvg = 0\n      blueAvg = 0\n      \n      for (let x = 1 + (20*startPointX); x < (20*(startPointX+1)); x++) {\n        for (let y = 1 + (20*startPointY); y < (20*(startPointY+1)); y++) {\n          pixelColor = getQuick(testImage, x, y);\n          \n          redAtPoint = pixelColor[0];\n          greenAtPoint = pixelColor[1];\n          blueAtPoint = pixelColor[2];\n          \n          redAvg = redAvg + redAtPoint;\n          greenAvg = greenAvg + greenAtPoint;\n          blueAvg = blueAvg + blueAtPoint;\n        \n        }\n       \n      }\n      \n      redAvg = round(redAvg / pow(19,2));\n      greenAvg = round(greenAvg / pow(19,2));\n      blueAvg = round(blueAvg / pow(19,2));\n      \n      extraRed = (abs(127-redAvg)*7) + redAvg;\n      extraGreen = (abs(127-greenAvg)*7) + greenAvg;\n      extraBlue = (abs(127-blueAvg)*7) + blueAvg;\n      \n      for (let x = 1 + (20*startPointX); x < (20*(startPointX+1)); x++) {\n        for (let y = 1 + (20*startPointY); y < (20*(startPointY+1)); y++) {\n          setQuick(testImage, x, y, [extraRed, extraGreen, extraBlue, 255])\n        }\n      }\n      \n    }\n  }\n \n  testImage.updatePixels();\n  \n  image(testImage, 0, 0, 600, 600);\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lgktqs4kkl8ipz55vlsd",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/uyou1mmdrkckpje8i2ta",
        "width": 400,
        "height": 400,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:21.182Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DT54zjqaTqjjmaZ4P",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-05T17:42:45.861Z",
    "posted": true,
    "lesson": "Random",
    "description": "Trial 1 of replicating a print by Anni Albers.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 60;\nlet border = 20;\nlet dim = 480 / 450;\n\nfunction setup() {\n  createCanvas(450, 450 * dim);\n  noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(245, 246, 251);\n\n  let triLength = (width - 2 * border) / num;\n  let colour = [color(94, 172, 211), color(253, 85, 14)];\n\n  translate(width / 2, height / 2);\n  translate(triLength, triLength);\n\n  for (let i = (-1 * num) / 4; i < num / 4; i++) {\n    for (let j = (-1 * num * dim) / 4; j < (num * dim) / 4; j++) {\n      let triX = i * 2 * triLength;\n      let triY = j * 2 * triLength;\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX - triLength,\n        triY - triLength,\n        triX - triLength,\n        triY + triLength\n      );\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX - triLength,\n        triY - triLength,\n        triX + triLength,\n        triY - triLength\n      );\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX + triLength,\n        triY - triLength,\n        triX + triLength,\n        triY + triLength\n      );\n\n      fill(random(colour));\n      triangle(\n        triX,\n        triY,\n        triX + triLength,\n        triY + triLength,\n        triX - triLength,\n        triY + triLength\n      );\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sryr63cr8brbjc8sqhkk",
        "width": 932,
        "height": 1004,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-05T18:06:18.985Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-05T19:55:32.605Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-05T22:21:08.809Z"
      },
      {
        "category": "funny",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-05T22:21:11.509Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DaTbgWCyvDWPnhahk",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-23T12:35:57.378Z",
    "posted": true,
    "lesson": "Params",
    "description": "WEEK 4 (1/4): This was the sketch I handed to Johnny. I saw a picture of this type of code somewhere and found a tutorial on how to make one but I added parameters and played around with it for an hour to see the different things I could do with it. ( I might change this because I really love the way this looks and might re- experiment with it. I am a bit in love with it and I took a lot of time to understand the youtube guys explanation and now I actually understand)",
    "code": "function setup() {\n  createCanvas(600, 600);\n  \n  strokeWeight(0.002);\n  \n  //An edit of Jonnys Code :D\n  createP(\"Circles\");\n  circlecountSlider = createSlider(0, 1000, 10);\n     \n  createP(\"Background Color\");\n  bgcSlider = createInput(\"#648EDE\", \"color\");\n  \n  createP(\"Color\");\n  colorSlider = createInput(\"#C4D2EC\", \"color\");\n                          \n  \n}\n \n\nconst radius = Math.sqrt(0.5);\nconst dSize = 0.05;\nconst Yourmom = (1 + Math.sqrt(5)) / 2;\n\nfunction draw() {\n  scale(width, height);\n  background(bgcSlider.value());\n  stroke(colorSlider.value());\n  noFill();\n\n  \n  let count = circlecountSlider.value();\n  \n  for (let i = 1; i < count; i++) {\n    const f = i / count;\n    \n    const angle = i * Yourmom;\n    const distance = f * radius;\n\n    const x = 0.5 + cos(angle * TWO_PI) * distance;\n    const y = 0.5 + sin(angle * TWO_PI) * distance;\n\n    const r = f * dSize;\n\n    circle(x, y, r);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yo6aevb5ti4qbvdf6siw",
        "width": 1194,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vaa3rfciftixwrnr1pry",
        "width": 1198,
        "height": 1194,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-23T13:22:35.614Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T14:53:17.617Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:14.297Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T00:24:38.08Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DeHqECbKx7knZ2wm6",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-25T23:49:26.57Z",
    "posted": true,
    "lesson": "API",
    "description": "I spent some time setting up Codespaces and getting my ChatGPT key up and running. Then, I created an app that can create poems for any type of occasion for friends.  Here are some of the best (+ funniest) results. I wanted the poem to include puns, but without using the actual word \"pun\". The final prompt that seemed to work was: `Send a ${tone} ${occasion} poem to my friend, ${friend}, using lots of puns. Never use the actual word pun, puns, nor punny in the poem, ever.`",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fpd5z0mezz7rktcdkyts",
        "width": 1078,
        "height": 892,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/oej55kwjcb1g1ihh6ncs",
        "width": 1094,
        "height": 876,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/iinkgz0ffztavqvfohvd",
        "width": 1060,
        "height": 886,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-26T02:28:15.753Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-26T03:10:25.341Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DejMSBHs5EsDJ8dXy",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-10T02:31:55.481Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Created this firey gif using random, noise and pixel",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vspe0nukccfpcm83nsgg",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:33.672Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:08.59Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DoSKRwvhRR5q9C4fC",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-01-29T20:35:37.58Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Excited for this and also hoping people end up with TV show recommendations!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/um0svamufubzm7irzsyv",
        "width": 2091,
        "height": 1595,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "DvJYitDmF97u2jquc",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-25T05:25:35.661Z",
    "posted": true,
    "lesson": "API",
    "description": "Twist Challenge: tried to recreate the last sketch using just the ChatGPT interface fairly successfully. I did have to prompt it many times to actually *answer* the prompt, not just repeat it back to me, which it took a while to understand. Even after it understood once, if I changed the prompts around or redefined the initial question, I had to tell it again to actually answer the prompt after repeating it.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/l3jyozbzuv1rttob556r",
        "width": 1502,
        "height": 1064,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/r5uu8vuirpx26qklkjek",
        "width": 1390,
        "height": 918,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-26T03:10:21.085Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "DvkXxvTtQW7WnkeyP",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-17T15:29:42.509Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Apparently I'm very into pink this week. A mix of using noise and random!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zu8h3s92zclw8pobpdk1",
        "width": 1104,
        "height": 1086,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T20:01:27.904Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "E7E5mbTrrcCn2B33X",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-12T03:30:49.203Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Interesting patterns almost like being made on the rotating bases",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jcncbpoerztvucbo3z1l",
        "width": 1358,
        "height": 1348,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jibqqluysfkffhpgonwt",
        "width": 1358,
        "height": 1348,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "EA3Rddz65JJzS3f3F",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-08T22:16:02.679Z",
    "posted": true,
    "lesson": "Random",
    "description": "I've added buttons to switch between shapes/beziers",
    "code": "//require https://cdnjs.cloudfare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(600, 620);\n  frameRate(30);\n  background(\"white\");\n\n  radio = createRadio();\n  radio.position(width / 2, height - 20);\n  radio.option(1);\n  radio.option(2);\n  radio.option(3);\n  radio.option(4);\n}\n\nfunction draw() {\n  let val = radio.value();\n  let c, r, g, b, x, y;\n  c = random(40, 80);\n  r = random(255);\n  g = random(255);\n  b = random(255);\n  x = random(width);\n  y = random(height - 20);\n\n  fill(r, g, b, 50);\n  stroke(r, g, b);\n\n  if (val == 1) {\n    strokeWeight(1);\n    ellipse(x, y, c);\n  }\n\n  if (val == 2) {\n    strokeWeight(1);\n    rect(x, y, c);\n  }\n\n  if (val == 3) {\n    strokeWeight(3);\n\n    // bezier(x, y, x-50, y+20, x+100, 80, y, x);\n bezier(x, y, 40, 80, 10, 20, x, y); //petal effect\n    // bezier(x, y, 50, x, y, 100, x, y, 250, x, y, 300);\n  }\n  \n if (val == 4) {\n    strokeWeight(3);\n       bezier(x, y, 40, 80, x, y, x, y); //line effect\n  }\n\n  if (mouseIsPressed) {\n    background(\"white\");\n  }\n\n  if (keyIsPressed) {\n    if (keyCode == 49) {\n      saveCanvas(\"myCanvas\", \"png\");\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xkozoeofqjx1f45yordm",
        "width": 1204,
        "height": 1208,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bkblymnainx6wtapm8r1",
        "width": 1204,
        "height": 1210,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/yx9tdtlusy1nbslbjror",
        "width": 1202,
        "height": 1194,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-10T02:03:05.762Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EBsrpJfamq9YP8DZB",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-05-02T04:11:44.751Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Wanted to play with movement on three.js, so took an old sketch and added animation.",
    "code": "var scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\ncamera.position.y = 0.4;\ncamera.position.z = 7;\nvar renderer = new THREE.WebGLRenderer({antialias: true});\nrenderer.setClearColor(0x212121);\nrenderer.setSize(window.innerWidth,window.innerHeight);\n\ndocument.body.appendChild(renderer.domElement);\nwindow.addEventListener('resize',()=>{\n    renderer.setSize(window.innerWidth,window.innerHeight);\n    camera.aspect = window.innerWidth/window.innerHeight;   \n    camera.updateProjectionMatrix();\n});\n\nlet boxes = [];\nlet boxMaterials = [];\nlet boxMeshes = [];\nlet boxRows = 14;\n\nlet max = 2.5;\nlet offset = max/6.25;\nlet squareSize = max/10;\nlet squareHeightBase = max*1.6;\nlet sinOffset = (max*1.2) / 4.5;\n\nfor (let i=-1*max; i<max+offset; i+=offset) {\n    for (let j=-1*max; j<max+offset; j+=offset) {\n        boxes[i + j*boxRows] = new THREE.BoxGeometry(\n            squareSize, squareSize, \n            squareHeightBase + Math.sin(i*sinOffset) + Math.sin(j*sinOffset)\n        );\n        boxMaterials[i + j*boxRows] = new THREE.MeshLambertMaterial(\n            {color: \"hsl(\" +  Math.abs(((i*j)%15) + 10 ) + \", 80%, 50%)\"}\n        );\n        boxMeshes[i + j*boxRows] = new THREE.Mesh(boxes[i + j*boxRows], boxMaterials[i + j*boxRows]);\n        boxMeshes[i + j*boxRows].position.set(i,j,0);\n        scene.add(boxMeshes[i + j*boxRows]);\n    }  \n}\n\nlet spheres = [];\nlet sphereMaterials = [];\nlet sphereMeshes = [];\nlet sphereRows = 50;\nlet sphereoffset = 1;\n\nfor (let i=-1*max; i<max+sphereoffset; i+=sphereoffset) {\n    for (let j=-1*max; j<max+sphereoffset; j+=sphereoffset) {\n        for (let k=0; k<5; k+=sphereoffset) {\n            spheres[i + j*sphereRows] = new THREE.SphereGeometry((Math.random()*0.075), 25, 25);\n            sphereMaterials[i + j*sphereRows] = new THREE.MeshLambertMaterial({color: 0xFFFFFF});\n            sphereMeshes[i + j*sphereRows] = new THREE.Mesh(spheres[i + j*sphereRows], sphereMaterials[i + j*sphereRows]);\n            sphereMeshes[i + j*sphereRows].position.set(\n                (Math.random()*2*max)-max,\n                (Math.random()*2*max)-max,\n                (Math.random()*3.25)\n            );\n            scene.add(sphereMeshes[i + j*sphereRows]);\n        }\n    }  \n}\n\nvar light = new THREE.PointLight(0xFFFFFF, 1, 500);\nlight.position.set(-4,-4,18);\nscene.add(light);\n\nlet boxTheta = 0;\nlet sphereTheta = 0;\n\nvar render = function(){\n    requestAnimationFrame(render);\n\n    for (let i=-1*max; i<max+offset; i+=offset) {\n        for (let j=-1*max; j<max+offset; j+=offset) {\n            boxMeshes[i + j*boxRows].rotation.z += 0.05;\n            boxMeshes[i + j*boxRows].position.z += (Math.sin(boxTheta + i + j))/20;\n            boxTheta += 0.001;\n        }\n    }\n\n    for (let i=-1*max; i<max+sphereoffset; i+=sphereoffset) {\n        for (let j=-1*max; j<max+sphereoffset; j+=sphereoffset) {\n            sphereMeshes[i + j*sphereRows].position.x += (Math.sin(sphereTheta + i + j))/100;\n            sphereMeshes[i + j*sphereRows].position.y += (Math.sin(sphereTheta + i + j))/100;\n            sphereMeshes[i + j*sphereRows].position.z += (Math.sin(sphereTheta + i + j))/100;            \n            sphereTheta += 0.001;\n        }\n    }\n\n    renderer.render(scene,camera);\n}\nrender();",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sopjexiryuzmpnwwylom",
        "width": 1638,
        "height": 1542,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/crveodgedb5ijjmgoend",
        "width": 1192,
        "height": 1154,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/y6jooda5zrf19qesviph",
        "width": 1224,
        "height": 1144,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:49.658Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T08:26:49.803Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EDTCZ4ZPjG76cBmMY",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-17T13:26:39.884Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Pair challenge with Aabha!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nspqjmtvivrsbp2vboje",
        "width": 940,
        "height": 750,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-18T01:33:05.782Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EMBPmwGhBSohrW44G",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-12T00:18:35.62Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Maximum zoomies",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ecvcx0zv09zaxfpg7vsw",
        "width": 854,
        "height": 694,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pmsq4ljx8b0bg9vwfaat",
        "width": 1350,
        "height": 844,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:13:41.264Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EMWMkgFdPfNvWZPN2",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-10T03:53:47.673Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Extension of Brian's sketch for the pair challenge!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kr42nlurvdpjl4pkkirm",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/w10lv6qczryd4m5egiu0",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:39.132Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ESLPDDnQwQPWrvEsK",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-05T15:59:08.13Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "An attempt at pseudo-randomness",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hkijehmjonafpjrcur4s",
        "width": 1788,
        "height": 1078,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:46.669Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EdGNKygbjo33SR4eh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-05T04:57:04.995Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Tried to make a flower with cylinders",
    "code": "// Define variables\nPETAL_WIDTH = 20;\nPETAL_LENGTH = 60;\nPETAL_THICKNESS = 5;\nSTEM_LENGTH = 80;\nSTEM_THICKNESS = 5;\n\n// Define petal module\nmodule petal() {\n  difference() {\n    cylinder(h=PETAL_LENGTH, r=PETAL_WIDTH/2, center=true);\n    translate([0, 0, PETAL_THICKNESS]) cylinder(h=PETAL_LENGTH, r=PETAL_WIDTH/4, center=true);\n  }\n}\n\n// Define flower module\nmodule flower() {\n  union() {\n    for(i=[0:4]) {\n      rotate([0, 0, i*72]) translate([0, PETAL_LENGTH/2, 0]) petal();\n    }\n    cylinder(h=STEM_LENGTH, r=STEM_THICKNESS/2, center=true);\n  }\n}\n\n// Draw flowers in a 2x2 square pattern\nfor(x=[-100:100:200]) {\n  for(y=[-100:100:200]) {\n    translate([x, y, 0]) flower();\n  }\n}\n\n// Draw big cube below flowers\ntranslate([0, 0, -50]) color(\"blue\") cube([500, 500, 50]);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rhzoqlfq5cxq81lxy3jp",
        "width": 772,
        "height": 794,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:27.806Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EeA8YvMiLL24BSRhT",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-21T03:25:00.047Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "another alphabet series! each letter is composed of an object that starts with that letter. I've been meaning to work with PoseNet and the premise is pretty simple. It lets you use your body as a console to input whatever you want and I'm thinking of the countless applications. Maybe make music out of dance moves? Record poses and input them into other ai tools like the example talked about in class. Or just take something old and make it with something new, like the letters!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pwnrssmdazzm0lkwjt8p",
        "width": 1502,
        "height": 821,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ov6wnqgbjzdohl3to08m",
        "width": 1280,
        "height": 956,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jcszyho2xe0nne23i83s",
        "width": 1280,
        "height": 956,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-21T03:27:01.61Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-21T03:27:32.044Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-21T03:29:31.986Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:48:11.916Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:06:11.59Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EeQnnEuKshfA3h8uC",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-05-10T22:10:31.403Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "I worked on a project that actually used a turtle drawer as the main technique. Here, you can input text and the turtle drawer will take that text as a series of instructions and draw each character one by one as a continuous spiral.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jr7vkc17omvqeqj4ev4a",
        "width": 1510,
        "height": 1134,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-10T22:20:25.28Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T11:44:40.506Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EheJyKcaXb9agvBg6",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-05T11:18:22.485Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Golden castle rendered off of the openSCAD STL export. The possibilities are too many so I have to stop now!",
    "code": "echo(version=version());\n\n// rotate_extrude() rotates a 2D shape around the Z axis. \n// Note that the 2D shape must be either completely on the \n// positive or negative side of the X axis.\n$fn = 80;\n\ncolor(\"gray\")\ntranslate([-15,-50,5])\ncube([200,200,5]);\n//translate([85,45,7])\n//cylinder(h = 5, r = 120, center = true);\n\n\nmodule tower(){\ncolor(\"cyan\")\n \n    union(){\n         translate([40, 0, 20])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n         translate([40, 0, 120])\n    cylinder (h=50, r=16, center = true);\n            color(\"cyan\")\n              translate([40, 0, 90])\n        rotate_extrude($fn = 80)\n            text(\"  J\");\n                translate([40, 0, 60])\n        rotate_extrude($fn = 80)\n            text(\"  T\");\n                 translate([40, 0, 70])\n          cylinder (h=60, r=10, center = true);\n    }\n    color(\"cyan\")\n              translate([40, 0, 30])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n    \n       color(\"cyan\")\n              translate([40, 0, 10])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n            \n            \ncolor(\"cyan\")\n      translate([40, 0, 0])\n        rotate_extrude($fn = 80)\n            text(\"  W\");\n\n// rotate_extrude() uses the global $fn/$fa/$fs settings, but\n// it's possible to give a different value as parameter.\ncolor(\"cyan\")\n    translate([40, 0, -10])\n        rotate_extrude($fn = 80)\n            text(\"  H\");\n\n// Using a shape that touches the X axis is allowed and produces\n// 3D objects that don't have a hole in the center.\ncolor(\"cyan\")\n    translate([40, 00, -35])\n        rotate_extrude($fn = 80)\n            polygon( points=[[0,0],[18,14],[14,18],[14,22],[22,26],[0,20]] );\n        }\n        \n        for (x = [0:1], y = [0:1]) {\n    translate([x * 80, y * 80, 150]) {\n           rotate([0,180,180])\n    tower();\n    }\n}\n\n  \n\n\n// combining both relatively complex shapes can be created\n\nmodule spire(){\n\n    \ncolor(\"orange\")\n   \n    \n    translate([100, 100, 110])\n        linear_extrude(height = 60, twist = -360, scale = 0, center = true, slices = 200)\n            square([20, 10], center = true);\n\ncolor(\"gray\")\n    translate([100, 100, 0])  // Changed y-coordinate from -30 to -40\n        linear_extrude(height = 80)\n            square([20, 10], center = true);\n    \n}\n\ntranslate([-90,-130,10])\nfor (x = [0:1], y = [0:1]) {\n    translate([x * 150, y * 150, 0]) {\n spire();\n    }\n}\n\n\ncolor(\"gray\")\n  translate([160, 120, 30])\n    rotate([0-45,90,90])\ncube([10,210,5]);\ncolor(\"gray\")\n      translate([160, -30, 30])\n    rotate([-45+90,90,90])\ncube([10,210,5]);\n\ncolor(\"gray\")\n  translate([120, -10, 105])\n    rotate([45,90,90])\ncube([10,120,5]);\ncolor(\"gray\")\n  translate([120, 80, 105])\n    rotate([-45,90,90])\ncube([10,120,5]);\n\nmodule walls(){\n  translate([10, 90, 40])\n  rotate([0,90,0])\n  scale([1.5,1.5,1.5])\ndifference() {\n    union() {\n        translate([0, -10, -3]) cube([25, 20, 6]);\n        cylinder(h = 6, r = 10, center = true);\n    }\n    cylinder(h = 10, r = 5, center = true);\n}\n}\n\n//module sidewall(){\n//for (x=[0:4]){\n//color(\"gray\")\n //   translate([0, -105+x*31, 0])\n      //  walls();\n//}\n//}\n\n//sidewall();\n//\n//translate([150, 0, 5])\n//    rotate([0,0,0])\n//sidewall();\n//\n//translate([130, 110, 5])\n//    rotate([0,0,90])\n//sidewall();\n//\n//translate([130, -40, 5])\n//    rotate([0,0,90])\n//sidewall();\n//color(\"gray\")\n  //translate([10, -30, 60])\n    //rotate([90,90,90])\n//cube([10,150,5]);\n\n        \n\n// By default rotate_extrude forms a full 360 degree circle, \n// but a partial rotation can be performed by using the angle \n\n\n// Written in 2015 by Torsten Paul <Torsten.Paul@gmx.de>\n//\n// To the extent possible under law, the author(s) have dedicated all\n// copyright and related and neighboring rights to this software to the\n// public domain worldwide. This software is distributed without any\n// warranty.\n//\n// You should have received a copy of the CC0 Public Domain\n// Dedication along with this software.\n// If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qmceauqt8rxlhjyaxfah",
        "width": 1024,
        "height": 768,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cqriklo8n6ndhgbmuk62",
        "width": 1544,
        "height": 1444,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ul1jg5jhqu8ndd5y4ynf",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:20:49.109Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:16:32.641Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T10:20:39.8Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Ejm5BLbvqEcmEPxCs",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-23T20:32:58.061Z",
    "posted": true,
    "lesson": "Params",
    "description": "Failed sketch that I made this week. I wanted this to be an adjustable gameboard that would grow/shrink depending on the size of the squares but I couldn't get that to work, so instead I improvised and came out with this.\n\nEventually I would use this as a part of my Pair Challenge for this week.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  noStroke();\n  \n  createP(\"Square Size\");\n  squaresizeSlider = createSlider(0, 50, 10);\n  \n  createP(\"Circle Size\");\n  circlesizeSlider = createSlider(0, 50, 10);\n  \n  createP(\"Red Slider\");\n  r_Slider = createSlider(0, 255, 220);\n  \n  createP(\"Green Slider\");\n  g_Slider = createSlider(0, 255, 220);\n  \n  createP(\"Blue Slider\");\n  b_Slider = createSlider(0, 255, 220);\n}\n\nfunction draw() {\n  background(r_Slider.value(), g_Slider.value(), b_Slider.value());\n  drawShapes(); \n}\n\nfunction drawShapes() {\n  squareSize = squaresizeSlider.value();\n  circleSize = circlesizeSlider.value();\n  \n  rect(0, 0, squareSize, squareSize);\n  ellipse(0, 0, circleSize, circleSize);\n\n  for(y = 0; y < height; y++) {\n    for(x = 0; x < width; x++) {\n      translate(x + 10, y + 20);\n      rect(x * 10 + 5, y * 10 + 5, squareSize, squareSize);\n      \n      ellipse(x * 5, y + 40, circleSize, circleSize);\n      \n      rect(x, y + 100, squareSize, squareSize);\n      \n      ellipse(x / 10, y + 200, circleSize, circleSize);\n      \n      ellipse(x * 20 + 5, y, circleSize, circleSize);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mykorffma70af4cgphwo",
        "width": 598,
        "height": 596,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "EkodnpBdgbLMChAmN",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-06T06:12:27.218Z",
    "posted": true,
    "lesson": "Random",
    "description": "1,026 dice rolls later! I assigned a color to each side of a 6 sided die. The number rolled determined which color would fill each square.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/d5elnhaqxgu325t7c2qb",
        "width": 3213,
        "height": 2342,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-06T15:27:01.502Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-06T16:36:58.589Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-06T17:44:37.065Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T19:02:28.793Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:02:33.839Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "EoW7ibvbhaQ5rt6iZ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-05-12T03:02:07.247Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "crystals? I was playing around with random to get these crystal-y shapes",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fmyifohjrm12lqqcydf2",
        "width": 1982,
        "height": 1948,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/a7g3gyzlnhcsh8ifyrft",
        "width": 1982,
        "height": 1924,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ivxunqkrhhmhxhibizgr",
        "width": 1982,
        "height": 1952,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-12T04:36:14.378Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ExgfpzA3JG8qCPWAM",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-03T05:50:38.081Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "sticking to primitives this week! The 2 open sketches made me realize I much prefer polygons over ellipses to create with.",
    "code": "https://cdnjs.cloudfare.com/ajax/libs/p5/js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  frameRate(80);\n}\n\nfunction draw() {\n  background(220);\n\n  g = map(mouseX, 0, width, 0, 50);\n\n  for (i = 25; i <= width; i = i + 50) {\n    for (j = 25; j <= height; j = j + 50) {\n      circle(i, j, g);\n      if (g > 40) {\n        fill(\"#F44336\");\n      } else {\n        fill(\"#00BCD4\");\n       \n      }\n    }\n  }\n\n  // if(mouseIsPressed){\n  //   fill(random(0,155),random(0,155),random(0,155));\n  // }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/o0kfupya1ffgncjphsi6",
        "width": 800,
        "height": 800,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:19:05.588Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "F54bJQzovCeDGFK2i",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-23T19:44:39.586Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Playing around with a reference sketch as a warm up!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gnrutgo6fpzduwdtix2t",
        "width": 1996,
        "height": 576,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:41.738Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T20:40:01.23Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "F8ppdZTNNLkMBxNtL",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-16T10:13:04.14Z",
    "posted": true,
    "lesson": "Noise",
    "description": "WEEK 3 (4/4): Playing with the example code to try to achieve a pixelated map look. LISTEN, I STRUGGLED TOO MUCH WITH TRYING TO MANIPULATE NOISE SO THIS IS WHAT UR GONNA GET JUST PRETEND ITS MINECRAFT LAND OK?",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xd8tahqqdc2vzdpshbai",
        "width": 976,
        "height": 886,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T17:59:35.668Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:32.792Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FEcjpPn9KjJYXPvQP",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-04T22:46:16.346Z",
    "posted": true,
    "lesson": "Random",
    "description": "I originally had different plans with this piece but shifted gears to using p5.js for this. With the time I had allotted for this piece, unfortunately a lot of things that I wanted to implement did not come to fruition (e.g. wanting to spawn in multiple 3D shapes, randomizing positions), so I took what I was able to do and spun it into this piece.\n\nControls:\n\nEnter: Randomly generates one of the six shapes used in WebGL p5.js\nMouse: Click and drag to look around the scene\n\nLink for full screen can be found in code",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n//Link: https://editor.p5js.org/kimj828/full/shqKOJvQr\n\n// This was my original idea I was going to do in 3D but I changed gears and tried this idea here:\n// 1D6 for shapes:\n// 1: Plane\n// 2: Box\n// 3: Cylinder\n// 4: Cone\n// 5: Sphere\n// 6: Torus\n\n// 1D20 - take value * 20 to determine point in space\n\n/////////////////////////////////////////////////////\n\nlet shapeVal;\n//let colorVal;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight, WEBGL);\n  //debugMode();\n}\n\nfunction draw() {\n  background(15);\n  noStroke();\n  orbitControl();\n  //ambientLight(255);\n  //directionalLight(255, 255, 255, 0, 1, 0);\n  spotLight(205, 205, 205, 0, -1000, 0, 0, 1, 0, PI/3, 25);\n  spotLight(205, 205, 205, 0, 0, 1000, 0, 0, -1, PI/3, 100);\n  ambientMaterial(175);\n  \n  structure();\n  extraPillars();\n  \n  normalMaterial();\n  generateShape();\n}\n\nfunction keyPressed(ENTER) {\n  shapeVal = floor(random(1, 7));\n  console.log(shapeVal);\n}\n\nfunction generateShape() {\n  if(shapeVal == 1) {\n    push();\n    rotateY(frameCount * 0.03);\n    plane(150);\n    pop();\n  }\n  \n  if(shapeVal == 2) {\n    push();\n    rotateY(frameCount * 0.03);\n    box(150);\n    pop();\n  }\n  \n  if(shapeVal == 3) {\n    push();\n    rotateY(frameCount * 0.03);\n    cylinder(150);\n    pop();\n  }\n  \n  if(shapeVal == 4) {\n    push();\n    rotateY(frameCount * 0.03);\n    cone(150);\n    pop();\n  }\n  \n  if(shapeVal == 5) {\n    push();\n    rotateY(frameCount * 0.03);\n    sphere(150);\n    pop();\n  }\n  \n  if(shapeVal == 6) {\n    push();\n    rotateY(frameCount * 0.03);\n    torus(130);\n    pop();\n  }\n}\n\nfunction structure() {\n  push();\n  translate(0, 200, 0);\n  box(750, 100, 750);\n  pop();\n  \n  push();\n  translate(263, 0, -263);\n  box(100, 300, 100);\n  pop();\n  \n  push();\n  translate(-263, 0, -263);\n  box(100, 300, 100);\n  pop();\n  \n  push();\n  translate(-263, 0, 263);\n  box(100, 300, 100);\n  pop();\n  \n  push();\n  translate(263, 0, 263);\n  box(100, 300, 100);\n  pop();\n}\n\nfunction extraPillars() {\n  push();\n  translate(500, 0, -500);\n  box(100, 2000, 100);\n  pop();\n  \n  push();\n  translate(-500, 0, -500);\n  box(100, 2000, 100);\n  pop();\n  \n  push();\n  translate(-500, 0, 500);\n  box(100, 2000, 100);\n  pop();\n  \n  push();\n  translate(500, 0, 500);\n  box(100, 2000, 100);\n  pop();\n}\n\n/* function keyPressed(SHIFT) {\n  colorVal = floor(random(8, 13));\n  console.log(colorVal);\n} */",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ff81ciomubmnrnwlsimw",
        "width": 1905,
        "height": 945,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-04T23:32:29.376Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-05T06:52:03.274Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-05T22:20:53.438Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FG5sPQuY2RK8saKud",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-20T23:56:26.572Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "**Humans tend to have no body hair in cyberpunk action games,** is what DALLE's generation seems to reveal. The model translated \"body hair on arms\" to scars, tattoos and cyborg-parts. The build and attire also seem homogenous. Can we use these models as a way to highlight biases prevalent in visual and written discourse made by humans?",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gkrnvcjyoudrpsrtnpi3",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vire0igqscxca3gk7uol",
        "width": 2428,
        "height": 596,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ghm4x9nlj9ayhvzrl6x6",
        "width": 2428,
        "height": 596,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T05:05:23.461Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:00:17.374Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:42:37.387Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FQy4SteYxAaLkcmdn",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-05T01:35:47.622Z",
    "posted": false,
    "lesson": "Microgames",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/isek3bns9oqem1datyab",
        "width": 3456,
        "height": 2002,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "FWH6BDBHgC2faYHWH",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-05-05T14:39:25.853Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Plugging my cinema 3d sketch with animation.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rxpoppvgi1e71nqiqygg",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:04.268Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-05-07T08:09:51.023Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FiD8wsNJc93RT2rMo",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-16T02:28:16.004Z",
    "posted": true,
    "lesson": "Noise",
    "description": "WEEK 3 (2/4): I wanted to try to make one of those Tv screens with the random colors flashing but I ended up with this and it looked like an optical illusion. It looks a bit cool idk. It was lagging a lot so I couldn't even mess with it more",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hke2d2otoj3ytufnens1",
        "width": 1182,
        "height": 1168,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/mmclq3unt9npkpnlskpx",
        "width": 1186,
        "height": 1176,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:48.569Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FoXiGcxNn8pqZNyM6",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-28T23:59:17.858Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Finally finished my laser cut. I had this lamp I made last semester for xFab, but it was too bright to light. So I used paper.js to make this lampshade for it",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fqlbpyqad0jsaiqqunnf",
        "width": 3000,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tulmjdejwbpbj8s0orww",
        "width": 3000,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tpakdbsr8f146cgxijll",
        "width": 4000,
        "height": 3000,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-29T20:34:50.75Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-30T18:05:13.918Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:31:03.284Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-08T21:57:11.259Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FqkL2XB8n5t98ZJMJ",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-03T15:00:30.572Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Self Portrait from Chris Instructions.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ihmecporzlaqedpkrpmw",
        "width": 1668,
        "height": 2388,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-03T16:24:23.7Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T18:02:28.034Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Ft338QGZY3J5vfybE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-11T05:31:31.493Z",
    "posted": true,
    "lesson": "Text",
    "description": "**Javascript template literals inside HTML Image tags** in order to add Random DALL.E-produced images for the personas. Next, try positioning & laying out HTML content better using template literals? Procedurally generated layouts?",
    "code": "const personaDetail =\n    \"She's a 32-year-old working mother of two children, ages 4 and 6, who frequently travels for work. She's often stressed about keeping her kids occupied during flights, and finds it difficult to come up with new activities and games to keep them engaged. They're a 35-year-old couple with one child, age 8, who are planning a family vacation to Europe. They've never flown with their child before, and are worried about how he'll handle the long flight and potential boredom. He's a 40-year-old single father of three children, ages 3, 5, and 7, who often travels for leisure with his kids. He's always looking for new and creative ways to keep his children entertained during flights, and values apps that offer educational and interactive content. She's a 27-year-old new mother traveling with her first child, age 10 months. She's never flown with a baby before, and is nervous about how she'll manage to keep him entertained and comfortable during the flight. He's a 29-year-old father of two children, ages 3 and 5, who often travels with his family for leisure. He's always looking for apps that offer age-appropriate content and activities that can keep his kids entertained during flights. They're a 42-year-old couple with two children, ages 7 and 10, who are planning a long-haul flight to visit family overseas. They're looking for an app that offers a mix of educational and entertaining content that can keep their kids engaged for the duration of the flight. She's a 33-year-old mother of two children, ages 2 and 4, who often travels with her family for leisure. She's looking for an app that offers content specifically tailored to young children, such as interactive stories and games that can be played offline. They're a 38-year-old couple with three children, ages 4, 7, and 9, who are planning a family vacation to Hawaii. They're looking for an app that offers a variety of content and activities that can be customized to each child's age and interests, such as puzzles, coloring pages, and interactive quizzes.\";\n\nconst names = [\"Aaran\", \"Aaren\", \"Aarez\", \"Aarman\", \"Aaron\", \"Aaron-James\", \"Aarron\", \"Aaryan\", \"Aaryn\", \"Aayan\", \"Aazaan\", \"Abaan\", \"Abbas\", \"Abdallah\", \"Abdalroof\", \"Abdihakim\", \"Abdirahman\", \"Abdisalam\", \"Abdul\", \"Abdul-Aziz\", \"Abdulbasir\", \"Abdulkadir\", \"Abdulkarem\", \"Abdulkhader\", \"Abdullah\", \"Abdul-Majeed\", \"Abdulmalik\", \"Abdul-Rehman\", \"Abdur\", \"Abdurraheem\", \"Abdur-Rahman\", \"Abdur-Rehmaan\", \"Abel\", \"Abhinav\", \"Abhisumant\", \"Abid\", \"Abir\", \"Abraham\", \"Abu\", \"Abubakar\", \"Ace\", \"Adain\", \"Adam\", \"Adam-James\", \"Addison\", \"Addisson\", \"Adegbola\", \"Adegbolahan\", \"Aden\", \"Adenn\", \"Adie\", \"Adil\", \"Aditya\", \"Adnan\", \"Adrian\", \"Adrien\", \"Aedan\", \"Aedin\", \"Aedyn\", \"Aeron\", \"Afonso\", \"Ahmad\", \"Ahmed\", \"Ahmed-Aziz\", \"Ahoua\", \"Ahtasham\", \"Aiadan\", \"Aidan\", \"Aiden\", \"Aiden-Jack\", \"Aiden-Vee\", \"Aidian\", \"Aidy\", \"Ailin\", \"Aiman\", \"Ainsley\", \"Ainslie\", \"Airen\", \"Airidas\", \"Airlie\", \"AJ\", \"Ajay\", \"A-Jay\", \"Ajayraj\", \"Akan\", \"Akram\", \"Al\", \"Ala\", \"Alan\", \"Alanas\", \"Alasdair\", \"Alastair\", \"Alber\", \"Albert\", \"Albie\", \"Aldred\", \"Alec\", \"Aled\", \"Aleem\", \"Aleksandar\", \"Aleksander\", \"Aleksandr\", \"Aleksandrs\", \"Alekzander\", \"Alessandro\", \"Alessio\", \"Alex\", \"Alexander\", \"Alexei\", \"Alexx\", \"Alexzander\", \"Alf\", \"Alfee\", \"Alfie\", \"Alfred\", \"Alfy\", \"Alhaji\", \"Al-Hassan\", \"Ali\", \"Aliekber\", \"Alieu\", \"Alihaider\", \"Alisdair\", \"Alishan\", \"Alistair\", \"Alistar\", \"Alister\", \"Aliyaan\", \"Allan\", \"Allan-Laiton\", \"Allen\", \"Allesandro\", \"Allister\", \"Ally\", \"Alphonse\", \"Altyiab\", \"Alum\", \"Alvern\", \"Alvin\", \"Alyas\", \"Amaan\", \"Aman\", \"Amani\", \"Ambanimoh\", \"Ameer\", \"Amgad\", \"Ami\", \"Amin\", \"Amir\", \"Ammaar\", \"Ammar\", \"Ammer\", \"Amolpreet\", \"Amos\", \"Amrinder\", \"Amrit\", \"Amro\", \"Anay\", \"Andrea\", \"Andreas\", \"Andrei\", \"Andrejs\", \"Andrew\", \"Andy\", \"Anees\", \"Anesu\", \"Angel\", \"Angelo\", \"Angus\", \"Anir\", \"Anis\", \"Anish\", \"Anmolpreet\", \"Annan\", \"Anndra\", \"Anselm\", \"Anthony\", \"Anthony-John\", \"Antoine\", \"Anton\", \"Antoni\", \"Antonio\", \"Antony\", \"Antonyo\", \"Anubhav\", \"Aodhan\", \"Aon\", \"Aonghus\", \"Apisai\", \"Arafat\", \"Aran\", \"Arandeep\", \"Arann\", \"Aray\", \"Arayan\", \"Archibald\", \"Archie\", \"Arda\", \"Ardal\", \"Ardeshir\", \"Areeb\", \"Areez\", \"Aref\", \"Arfin\", \"Argyle\", \"Argyll\", \"Ari\", \"Aria\", \"Arian\", \"Arihant\", \"Aristomenis\", \"Aristotelis\", \"Arjuna\", \"Arlo\", \"Armaan\", \"Arman\", \"Armen\", \"Arnab\", \"Arnav\", \"Arnold\", \"Aron\", \"Aronas\", \"Arran\", \"Arrham\", \"Arron\", \"Arryn\", \"Arsalan\", \"Artem\", \"Arthur\", \"Artur\", \"Arturo\", \"Arun\", \"Arunas\", \"Arved\", \"Arya\", \"Aryan\", \"Aryankhan\", \"Aryian\", \"Aryn\", \"Asa\", \"Asfhan\", \"Ash\", \"Ashlee-jay\", \"Ashley\", \"Ashton\", \"Ashton-Lloyd\", \"Ashtyn\", \"Ashwin\", \"Asif\", \"Asim\", \"Aslam\", \"Asrar\", \"Ata\", \"Atal\", \"Atapattu\", \"Ateeq\", \"Athol\", \"Athon\", \"Athos-Carlos\", \"Atli\", \"Atom\", \"Attila\", \"Aulay\", \"Aun\", \"Austen\", \"Austin\", \"Avani\", \"Averon\", \"Avi\", \"Avinash\", \"Avraham\", \"Awais\", \"Awwal\", \"Axel\", \"Ayaan\", \"Ayan\", \"Aydan\", \"Ayden\", \"Aydin\", \"Aydon\", \"Ayman\", \"Ayomide\", \"Ayren\", \"Ayrton\", \"Aytug\", \"Ayub\", \"Ayyub\", \"Azaan\", \"Azedine\", \"Azeem\", \"Azim\", \"Aziz\", \"Azlan\", \"Azzam\", \"Azzedine\", \"Babatunmise\", \"Babur\", \"Bader\", \"Badr\", \"Badsha\", \"Bailee\", \"Bailey\", \"Bailie\", \"Bailley\", \"Baillie\", \"Baley\", \"Balian\", \"Banan\", \"Barath\", \"Barkley\", \"Barney\", \"Baron\", \"Barrie\", \"Barry\", \"Bartlomiej\", \"Bartosz\", \"Basher\", \"Basile\", \"Baxter\", \"Baye\", \"Bayley\", \"Beau\", \"Beinn\", \"Bekim\", \"Believe\", \"Ben\", \"Bendeguz\", \"Benedict\", \"Benjamin\", \"Benjamyn\", \"Benji\", \"Benn\", \"Bennett\", \"Benny\", \"Benoit\", \"Bentley\", \"Berkay\", \"Bernard\", \"Bertie\", \"Bevin\", \"Bezalel\", \"Bhaaldeen\", \"Bharath\", \"Bilal\", \"Bill\", \"Billy\", \"Binod\", \"Bjorn\", \"Blaike\", \"Blaine\", \"Blair\", \"Blaire\", \"Blake\", \"Blazej\", \"Blazey\", \"Blessing\", \"Blue\", \"Blyth\", \"Bo\", \"Boab\", \"Bob\", \"Bobby\", \"Bobby-Lee\", \"Bodhan\", \"Boedyn\", \"Bogdan\", \"Bohbi\", \"Bony\", \"Bowen\", \"Bowie\", \"Boyd\", \"Bracken\", \"Brad\", \"Bradan\", \"Braden\", \"Bradley\", \"Bradlie\", \"Bradly\", \"Brady\", \"Bradyn\", \"Braeden\", \"Braiden\", \"Brajan\", \"Brandan\", \"Branden\", \"Brandon\", \"Brandonlee\", \"Brandon-Lee\", \"Brandyn\", \"Brannan\", \"Brayden\", \"Braydon\", \"Braydyn\", \"Breandan\", \"Brehme\", \"Brendan\", \"Brendon\", \"Brendyn\", \"Breogan\", \"Bret\", \"Brett\", \"Briaddon\", \"Brian\", \"Brodi\", \"Brodie\", \"Brody\", \"Brogan\", \"Broghan\", \"Brooke\", \"Brooklin\", \"Brooklyn\", \"Bruce\", \"Bruin\", \"Bruno\", \"Brunon\", \"Bryan\", \"Bryce\", \"Bryden\", \"Brydon\", \"Brydon-Craig\", \"Bryn\", \"Brynmor\", \"Bryson\", \"Buddy\", \"Bully\", \"Burak\", \"Burhan\", \"Butali\", \"Butchi\", \"Byron\", \"Cabhan\", \"Cadan\", \"Cade\", \"Caden\", \"Cadon\", \"Cadyn\", \"Caedan\", \"Caedyn\", \"Cael\", \"Caelan\", \"Caelen\", \"Caethan\", \"Cahl\", \"Cahlum\", \"Cai\", \"Caidan\", \"Caiden\", \"Caiden-Paul\", \"Caidyn\", \"Caie\", \"Cailaen\", \"Cailean\", \"Caileb-John\", \"Cailin\", \"Cain\", \"Caine\", \"Cairn\", \"Cal\", \"Calan\", \"Calder\", \"Cale\", \"Calean\", \"Caleb\", \"Calen\", \"Caley\", \"Calib\", \"Calin\", \"Callahan\", \"Callan\", \"Callan-Adam\", \"Calley\", \"Callie\", \"Callin\", \"Callum\", \"Callun\", \"Callyn\", \"Calum\", \"Calum-James\", \"Calvin\", \"Cambell\", \"Camerin\", \"Cameron\", \"Campbel\", \"Campbell\", \"Camron\", \"Caolain\", \"Caolan\", \"Carl\", \"Carlo\", \"Carlos\", \"Carrich\", \"Carrick\", \"Carson\", \"Carter\", \"Carwyn\", \"Casey\", \"Casper\", \"Cassy\", \"Cathal\", \"Cator\", \"Cavan\", \"Cayden\", \"Cayden-Robert\", \"Cayden-Tiamo\", \"Ceejay\", \"Ceilan\", \"Ceiran\", \"Ceirin\", \"Ceiron\", \"Cejay\", \"Celik\", \"Cephas\", \"Cesar\", \"Cesare\", \"Chad\", \"Chaitanya\", \"Chang-Ha\", \"Charles\", \"Charley\", \"Charlie\", \"Charly\", \"Chase\", \"Che\", \"Chester\", \"Chevy\", \"Chi\", \"Chibudom\", \"Chidera\", \"Chimsom\", \"Chin\", \"Chintu\", \"Chiqal\", \"Chiron\", \"Chris\", \"Chris-Daniel\", \"Chrismedi\", \"Christian\", \"Christie\", \"Christoph\", \"Christopher\", \"Christopher-Lee\", \"Christy\", \"Chu\", \"Chukwuemeka\", \"Cian\", \"Ciann\", \"Ciar\", \"Ciaran\", \"Ciarian\", \"Cieran\", \"Cillian\", \"Cillin\", \"Cinar\", \"CJ\", \"C-Jay\", \"Clark\", \"Clarke\", \"Clayton\", \"Clement\", \"Clifford\", \"Clyde\", \"Cobain\", \"Coban\", \"Coben\", \"Cobi\", \"Cobie\", \"Coby\", \"Codey\", \"Codi\", \"Codie\", \"Cody\", \"Cody-Lee\", \"Coel\", \"Cohan\", \"Cohen\", \"Colby\", \"Cole\", \"Colin\", \"Coll\", \"Colm\", \"Colt\", \"Colton\", \"Colum\", \"Colvin\", \"Comghan\", \"Conal\", \"Conall\", \"Conan\", \"Conar\", \"Conghaile\", \"Conlan\", \"Conley\", \"Conli\", \"Conlin\", \"Conlly\", \"Conlon\", \"Conlyn\", \"Connal\", \"Connall\", \"Connan\", \"Connar\", \"Connel\", \"Connell\", \"Conner\", \"Connolly\", \"Connor\", \"Connor-David\", \"Conor\", \"Conrad\", \"Cooper\", \"Copeland\", \"Coray\", \"Corben\", \"Corbin\", \"Corey\", \"Corey-James\", \"Corey-Jay\", \"Cori\", \"Corie\", \"Corin\", \"Cormac\", \"Cormack\", \"Cormak\", \"Corran\", \"Corrie\", \"Cory\", \"Cosmo\", \"Coupar\", \"Craig\", \"Craig-James\", \"Crawford\", \"Creag\", \"Crispin\", \"Cristian\", \"Crombie\", \"Cruiz\", \"Cruz\", \"Cuillin\", \"Cullen\", \"Cullin\", \"Curtis\", \"Cyrus\", \"Daanyaal\", \"Daegan\", \"Daegyu\", \"Dafydd\", \"Dagon\", \"Dailey\", \"Daimhin\", \"Daithi\", \"Dakota\", \"Daksh\", \"Dale\", \"Dalong\", \"Dalton\", \"Damian\", \"Damien\", \"Damon\", \"Dan\", \"Danar\", \"Dane\", \"Danial\", \"Daniel\", \"Daniele\", \"Daniel-James\", \"Daniels\", \"Daniil\", \"Danish\", \"Daniyal\", \"Danniel\", \"Danny\", \"Dante\", \"Danyal\", \"Danyil\", \"Danys\", \"Daood\", \"Dara\", \"Darach\", \"Daragh\", \"Darcy\", \"D'arcy\", \"Dareh\", \"Daren\", \"Darien\", \"Darius\", \"Darl\", \"Darn\", \"Darrach\", \"Darragh\", \"Darrel\", \"Darrell\", \"Darren\", \"Darrie\", \"Darrius\", \"Darroch\", \"Darryl\", \"Darryn\", \"Darwyn\", \"Daryl\", \"Daryn\", \"Daud\", \"Daumantas\", \"Davi\", \"David\", \"David-Jay\", \"David-Lee\", \"Davie\", \"Davis\", \"Davy\", \"Dawid\", \"Dawson\", \"Dawud\", \"Dayem\", \"Daymian\", \"Deacon\", \"Deagan\", \"Dean\", \"Deano\", \"Decklan\", \"Declain\", \"Declan\", \"Declyan\", \"Declyn\", \"Dedeniseoluwa\", \"Deecan\", \"Deegan\", \"Deelan\", \"Deklain-Jaimes\", \"Del\", \"Demetrius\", \"Denis\", \"Deniss\", \"Dennan\", \"Dennin\", \"Dennis\", \"Denny\", \"Dennys\", \"Denon\", \"Denton\", \"Denver\", \"Denzel\", \"Deon\", \"Derek\", \"Derick\", \"Derin\", \"Dermot\", \"Derren\", \"Derrie\", \"Derrin\", \"Derron\", \"Derry\", \"Derryn\", \"Deryn\", \"Deshawn\", \"Desmond\", \"Dev\", \"Devan\", \"Devin\", \"Devlin\", \"Devlyn\", \"Devon\", \"Devrin\", \"Devyn\", \"Dex\", \"Dexter\", \"Dhani\", \"Dharam\", \"Dhavid\", \"Dhyia\", \"Diarmaid\", \"Diarmid\", \"Diarmuid\", \"Didier\", \"Diego\", \"Diesel\", \"Diesil\", \"Digby\", \"Dilan\", \"Dilano\", \"Dillan\", \"Dillon\", \"Dilraj\", \"Dimitri\", \"Dinaras\", \"Dion\", \"Dissanayake\", \"Dmitri\", \"Doire\", \"Dolan\", \"Domanic\", \"Domenico\", \"Domhnall\", \"Dominic\", \"Dominick\", \"Dominik\", \"Donald\", \"Donnacha\", \"Donnie\", \"Dorian\", \"Dougal\", \"Douglas\", \"Dougray\", \"Drakeo\", \"Dre\", \"Dregan\", \"Drew\", \"Dugald\", \"Duncan\", \"Duriel\", \"Dustin\", \"Dylan\", \"Dylan-Jack\", \"Dylan-James\", \"Dylan-John\", \"Dylan-Patrick\", \"Dylin\", \"Dyllan\", \"Dyllan-James\", \"Dyllon\", \"Eadie\", \"Eagann\", \"Eamon\", \"Eamonn\", \"Eason\", \"Eassan\", \"Easton\", \"Ebow\", \"Ed\", \"Eddie\", \"Eden\", \"Ediomi\", \"Edison\", \"Eduardo\", \"Eduards\", \"Edward\", \"Edwin\", \"Edwyn\", \"Eesa\", \"Efan\", \"Efe\", \"Ege\", \"Ehsan\", \"Ehsen\", \"Eiddon\", \"Eidhan\", \"Eihli\", \"Eimantas\", \"Eisa\", \"Eli\", \"Elias\", \"Elijah\", \"Eliot\", \"Elisau\", \"Eljay\", \"Eljon\", \"Elliot\", \"Elliott\", \"Ellis\", \"Ellisandro\", \"Elshan\", \"Elvin\", \"Elyan\", \"Emanuel\", \"Emerson\", \"Emil\", \"Emile\", \"Emir\", \"Emlyn\", \"Emmanuel\", \"Emmet\", \"Eng\", \"Eniola\", \"Enis\", \"Ennis\", \"Enrico\", \"Enrique\", \"Enzo\", \"Eoghain\", \"Eoghan\", \"Eoin\", \"Eonan\", \"Erdehan\", \"Eren\", \"Erencem\", \"Eric\", \"Ericlee\", \"Erik\", \"Eriz\", \"Ernie-Jacks\", \"Eroni\", \"Eryk\", \"Eshan\", \"Essa\", \"Esteban\", \"Ethan\", \"Etienne\", \"Etinosa\", \"Euan\", \"Eugene\", \"Evan\", \"Evann\", \"Ewan\", \"Ewen\", \"Ewing\", \"Exodi\", \"Ezekiel\", \"Ezra\", \"Fabian\", \"Fahad\", \"Faheem\", \"Faisal\", \"Faizaan\", \"Famara\", \"Fares\", \"Farhaan\", \"Farhan\", \"Farren\", \"Farzad\", \"Fauzaan\", \"Favour\", \"Fawaz\", \"Fawkes\", \"Faysal\", \"Fearghus\", \"Feden\", \"Felix\", \"Fergal\", \"Fergie\", \"Fergus\", \"Ferre\", \"Fezaan\", \"Fiachra\", \"Fikret\", \"Filip\", \"Filippo\", \"Finan\", \"Findlay\", \"Findlay-James\", \"Findlie\", \"Finlay\", \"Finley\", \"Finn\", \"Finnan\", \"Finnean\", \"Finnen\", \"Finnlay\", \"Finnley\", \"Fintan\", \"Fionn\", \"Firaaz\", \"Fletcher\", \"Flint\", \"Florin\", \"Flyn\", \"Flynn\", \"Fodeba\", \"Folarinwa\", \"Forbes\", \"Forgan\", \"Forrest\", \"Fox\", \"Francesco\", \"Francis\", \"Francisco\", \"Franciszek\", \"Franco\", \"Frank\", \"Frankie\", \"Franklin\", \"Franko\", \"Fraser\", \"Frazer\", \"Fred\", \"Freddie\", \"Frederick\", \"Fruin\", \"Fyfe\", \"Fyn\", \"Fynlay\", \"Fynn\", \"Gabriel\", \"Gallagher\", \"Gareth\", \"Garren\", \"Garrett\", \"Garry\", \"Gary\", \"Gavin\", \"Gavin-Lee\", \"Gene\", \"Geoff\", \"Geoffrey\", \"Geomer\", \"Geordan\", \"Geordie\", \"George\", \"Georgia\", \"Georgy\", \"Gerard\", \"Ghyll\", \"Giacomo\", \"Gian\", \"Giancarlo\", \"Gianluca\", \"Gianmarco\", \"Gideon\", \"Gil\", \"Gio\", \"Girijan\", \"Girius\", \"Gjan\", \"Glascott\", \"Glen\", \"Glenn\", \"Gordon\", \"Grady\", \"Graeme\", \"Graham\", \"Grahame\", \"Grant\", \"Grayson\", \"Greg\", \"Gregor\", \"Gregory\", \"Greig\", \"Griffin\", \"Griffyn\", \"Grzegorz\", \"Guang\", \"Guerin\", \"Guillaume\", \"Gurardass\", \"Gurdeep\", \"Gursees\", \"Gurthar\", \"Gurveer\", \"Gurwinder\", \"Gus\", \"Gustav\", \"Guthrie\", \"Guy\", \"Gytis\", \"Habeeb\", \"Hadji\", \"Hadyn\", \"Hagun\", \"Haiden\", \"Haider\", \"Hamad\", \"Hamid\", \"Hamish\", \"Hamza\", \"Hamzah\", \"Han\", \"Hansen\", \"Hao\", \"Hareem\", \"Hari\", \"Harikrishna\", \"Haris\", \"Harish\", \"Harjeevan\", \"Harjyot\", \"Harlee\", \"Harleigh\", \"Harley\", \"Harman\", \"Harnek\", \"Harold\", \"Haroon\", \"Harper\", \"Harri\", \"Harrington\", \"Harris\", \"Harrison\", \"Harry\", \"Harvey\", \"Harvie\", \"Harvinder\", \"Hasan\", \"Haseeb\", \"Hashem\", \"Hashim\", \"Hassan\", \"Hassanali\", \"Hately\", \"Havila\", \"Hayden\", \"Haydn\", \"Haydon\", \"Haydyn\", \"Hcen\", \"Hector\", \"Heddle\", \"Heidar\", \"Heini\", \"Hendri\", \"Henri\", \"Henry\", \"Herbert\", \"Heyden\", \"Hiro\", \"Hirvaansh\", \"Hishaam\", \"Hogan\", \"Honey\", \"Hong\", \"Hope\", \"Hopkin\", \"Hosea\", \"Howard\", \"Howie\", \"Hristomir\", \"Hubert\", \"Hugh\", \"Hugo\", \"Humza\", \"Hunter\", \"Husnain\", \"Hussain\", \"Hussan\", \"Hussnain\", \"Hussnan\", \"Hyden\", \"I\", \"Iagan\", \"Iain\", \"Ian\", \"Ibraheem\", \"Ibrahim\", \"Idahosa\", \"Idrees\", \"Idris\", \"Iestyn\", \"Ieuan\", \"Igor\", \"Ihtisham\", \"Ijay\", \"Ikechukwu\", \"Ikemsinachukwu\", \"Ilyaas\", \"Ilyas\", \"Iman\", \"Immanuel\", \"Inan\", \"Indy\", \"Ines\", \"Innes\", \"Ioannis\", \"Ireayomide\", \"Ireoluwa\", \"Irvin\", \"Irvine\", \"Isa\", \"Isaa\", \"Isaac\", \"Isaiah\", \"Isak\", \"Isher\", \"Ishwar\", \"Isimeli\", \"Isira\", \"Ismaeel\", \"Ismail\", \"Israel\", \"Issiaka\", \"Ivan\", \"Ivar\", \"Izaak\", \"J\", \"Jaay\", \"Jac\", \"Jace\", \"Jack\", \"Jacki\", \"Jackie\", \"Jack-James\", \"Jackson\", \"Jacky\", \"Jacob\", \"Jacques\", \"Jad\", \"Jaden\", \"Jadon\", \"Jadyn\", \"Jae\", \"Jagat\", \"Jago\", \"Jaheim\", \"Jahid\", \"Jahy\", \"Jai\", \"Jaida\", \"Jaiden\", \"Jaidyn\", \"Jaii\", \"Jaime\", \"Jai-Rajaram\", \"Jaise\", \"Jak\", \"Jake\", \"Jakey\", \"Jakob\", \"Jaksyn\", \"Jakub\", \"Jamaal\", \"Jamal\", \"Jameel\", \"Jameil\", \"James\", \"James-Paul\", \"Jamey\", \"Jamie\", \"Jan\", \"Jaosha\", \"Jardine\", \"Jared\", \"Jarell\", \"Jarl\", \"Jarno\", \"Jarred\", \"Jarvi\", \"Jasey-Jay\", \"Jasim\", \"Jaskaran\", \"Jason\", \"Jasper\", \"Jaxon\", \"Jaxson\", \"Jay\", \"Jaydan\", \"Jayden\", \"Jayden-James\", \"Jayden-Lee\", \"Jayden-Paul\", \"Jayden-Thomas\", \"Jaydn\", \"Jaydon\", \"Jaydyn\", \"Jayhan\", \"Jay-Jay\", \"Jayke\", \"Jaymie\", \"Jayse\", \"Jayson\", \"Jaz\", \"Jazeb\", \"Jazib\", \"Jazz\", \"Jean\", \"Jean-Lewis\", \"Jean-Pierre\", \"Jebadiah\", \"Jed\", \"Jedd\", \"Jedidiah\", \"Jeemie\", \"Jeevan\", \"Jeffrey\", \"Jensen\", \"Jenson\", \"Jensyn\", \"Jeremy\", \"Jerome\", \"Jeronimo\", \"Jerrick\", \"Jerry\", \"Jesse\", \"Jesuseun\", \"Jeswin\", \"Jevan\", \"Jeyun\", \"Jez\", \"Jia\", \"Jian\", \"Jiao\", \"Jimmy\", \"Jincheng\", \"JJ\", \"Joaquin\", \"Joash\", \"Jock\", \"Jody\", \"Joe\", \"Joeddy\", \"Joel\", \"Joey\", \"Joey-Jack\", \"Johann\", \"Johannes\", \"Johansson\", \"John\", \"Johnathan\", \"Johndean\", \"Johnjay\", \"John-Michael\", \"Johnnie\", \"Johnny\", \"Johnpaul\", \"John-Paul\", \"John-Scott\", \"Johnson\", \"Jole\", \"Jomuel\", \"Jon\", \"Jonah\", \"Jonatan\", \"Jonathan\", \"Jonathon\", \"Jonny\", \"Jonothan\", \"Jon-Paul\", \"Jonson\", \"Joojo\", \"Jordan\", \"Jordi\", \"Jordon\", \"Jordy\", \"Jordyn\", \"Jorge\", \"Joris\", \"Jorryn\", \"Josan\", \"Josef\", \"Joseph\", \"Josese\", \"Josh\", \"Joshiah\", \"Joshua\", \"Josiah\", \"Joss\", \"Jostelle\", \"Joynul\", \"Juan\", \"Jubin\", \"Judah\", \"Jude\", \"Jules\", \"Julian\", \"Julien\", \"Jun\", \"Junior\", \"Jura\", \"Justan\", \"Justin\", \"Justinas\", \"Kaan\", \"Kabeer\", \"Kabir\", \"Kacey\", \"Kacper\", \"Kade\", \"Kaden\", \"Kadin\", \"Kadyn\", \"Kaeden\", \"Kael\", \"Kaelan\", \"Kaelin\", \"Kaelum\", \"Kai\", \"Kaid\", \"Kaidan\", \"Kaiden\", \"Kaidinn\", \"Kaidyn\", \"Kaileb\", \"Kailin\", \"Kain\", \"Kaine\", \"Kainin\", \"Kainui\", \"Kairn\", \"Kaison\", \"Kaiwen\", \"Kajally\", \"Kajetan\", \"Kalani\", \"Kale\", \"Kaleb\", \"Kaleem\", \"Kal-el\", \"Kalen\", \"Kalin\", \"Kallan\", \"Kallin\", \"Kalum\", \"Kalvin\", \"Kalvyn\", \"Kameron\", \"Kames\", \"Kamil\", \"Kamran\", \"Kamron\", \"Kane\", \"Karam\", \"Karamvir\", \"Karandeep\", \"Kareem\", \"Karim\", \"Karimas\", \"Karl\", \"Karol\", \"Karson\", \"Karsyn\", \"Karthikeya\", \"Kasey\", \"Kash\", \"Kashif\", \"Kasim\", \"Kasper\", \"Kasra\", \"Kavin\", \"Kayam\", \"Kaydan\", \"Kayden\", \"Kaydin\", \"Kaydn\", \"Kaydyn\", \"Kaydyne\", \"Kayleb\", \"Kaylem\", \"Kaylum\", \"Kayne\", \"Kaywan\", \"Kealan\", \"Kealon\", \"Kean\", \"Keane\", \"Kearney\", \"Keatin\", \"Keaton\", \"Keavan\", \"Keayn\", \"Kedrick\", \"Keegan\", \"Keelan\", \"Keelin\", \"Keeman\", \"Keenan\", \"Keenan-Lee\", \"Keeton\", \"Kehinde\", \"Keigan\", \"Keilan\", \"Keir\", \"Keiran\", \"Keiren\", \"Keiron\", \"Keiryn\", \"Keison\", \"Keith\", \"Keivlin\", \"Kelam\", \"Kelan\", \"Kellan\", \"Kellen\", \"Kelso\", \"Kelum\", \"Kelvan\", \"Kelvin\", \"Ken\", \"Kenan\", \"Kendall\", \"Kendyn\", \"Kenlin\", \"Kenneth\", \"Kensey\", \"Kenton\", \"Kenyon\", \"Kenzeigh\", \"Kenzi\", \"Kenzie\", \"Kenzo\", \"Kenzy\", \"Keo\", \"Ker\", \"Kern\", \"Kerr\", \"Kevan\", \"Kevin\", \"Kevyn\", \"Kez\", \"Khai\", \"Khalan\", \"Khaleel\", \"Khaya\", \"Khevien\", \"Khizar\", \"Khizer\", \"Kia\", \"Kian\", \"Kian-James\", \"Kiaran\", \"Kiarash\", \"Kie\", \"Kiefer\", \"Kiegan\", \"Kienan\", \"Kier\", \"Kieran\", \"Kieran-Scott\", \"Kieren\", \"Kierin\", \"Kiern\", \"Kieron\", \"Kieryn\", \"Kile\", \"Killian\", \"Kimi\", \"Kingston\", \"Kinneil\", \"Kinnon\", \"Kinsey\", \"Kiran\", \"Kirk\", \"Kirwin\", \"Kit\", \"Kiya\", \"Kiyonari\", \"Kjae\", \"Klein\", \"Klevis\", \"Kobe\", \"Kobi\", \"Koby\", \"Koddi\", \"Koden\", \"Kodi\", \"Kodie\", \"Kody\", \"Kofi\", \"Kogan\", \"Kohen\", \"Kole\", \"Konan\", \"Konar\", \"Konnor\", \"Konrad\", \"Koray\", \"Korben\", \"Korbyn\", \"Korey\", \"Kori\", \"Korrin\", \"Kory\", \"Koushik\", \"Kris\", \"Krish\", \"Krishan\", \"Kriss\", \"Kristian\", \"Kristin\", \"Kristofer\", \"Kristoffer\", \"Kristopher\", \"Kruz\", \"Krzysiek\", \"Krzysztof\", \"Ksawery\", \"Ksawier\", \"Kuba\", \"Kurt\", \"Kurtis\", \"Kurtis-Jae\", \"Kyaan\", \"Kyan\", \"Kyde\", \"Kyden\", \"Kye\", \"Kyel\", \"Kyhran\", \"Kyie\", \"Kylan\", \"Kylar\", \"Kyle\", \"Kyle-Derek\", \"Kylian\", \"Kym\", \"Kynan\", \"Kyral\", \"Kyran\", \"Kyren\", \"Kyrillos\", \"Kyro\", \"Kyron\", \"Kyrran\", \"Lachlainn\", \"Lachlan\", \"Lachlann\", \"Lael\", \"Lagan\", \"Laird\", \"Laison\", \"Lakshya\", \"Lance\", \"Lancelot\", \"Landon\", \"Lang\", \"Lasse\", \"Latif\", \"Lauchlan\", \"Lauchlin\", \"Laughlan\", \"Lauren\", \"Laurence\", \"Laurie\", \"Lawlyn\", \"Lawrence\", \"Lawrie\", \"Lawson\", \"Layne\", \"Layton\", \"Lee\", \"Leigh\", \"Leigham\", \"Leighton\", \"Leilan\", \"Leiten\", \"Leithen\", \"Leland\", \"Lenin\", \"Lennan\", \"Lennen\", \"Lennex\", \"Lennon\", \"Lennox\", \"Lenny\", \"Leno\", \"Lenon\", \"Lenyn\", \"Leo\", \"Leon\", \"Leonard\", \"Leonardas\", \"Leonardo\", \"Lepeng\", \"Leroy\", \"Leven\", \"Levi\", \"Levon\", \"Levy\", \"Lewie\", \"Lewin\", \"Lewis\", \"Lex\", \"Leydon\", \"Leyland\", \"Leylann\", \"Leyton\", \"Liall\", \"Liam\", \"Liam-Stephen\", \"Limo\", \"Lincoln\", \"Lincoln-John\", \"Lincon\", \"Linden\", \"Linton\", \"Lionel\", \"Lisandro\", \"Litrell\", \"Liyonela-Elam\", \"LLeyton\", \"Lliam\", \"Lloyd\", \"Lloyde\", \"Loche\", \"Lochlan\", \"Lochlann\", \"Lochlan-Oliver\", \"Lock\", \"Lockey\", \"Logan\", \"Logann\", \"Logan-Rhys\", \"Loghan\", \"Lokesh\", \"Loki\", \"Lomond\", \"Lorcan\", \"Lorenz\", \"Lorenzo\", \"Lorne\", \"Loudon\", \"Loui\", \"Louie\", \"Louis\", \"Loukas\", \"Lovell\", \"Luc\", \"Luca\", \"Lucais\", \"Lucas\", \"Lucca\", \"Lucian\", \"Luciano\", \"Lucien\", \"Lucus\", \"Luic\", \"Luis\", \"Luk\", \"Luka\", \"Lukas\", \"Lukasz\", \"Luke\", \"Lukmaan\", \"Luqman\", \"Lyall\", \"Lyle\", \"Lyndsay\", \"Lysander\", \"Maanav\", \"Maaz\", \"Mac\", \"Macallum\", \"Macaulay\", \"Macauley\", \"Macaully\", \"Machlan\", \"Maciej\", \"Mack\", \"Mackenzie\", \"Mackenzy\", \"Mackie\", \"Macsen\", \"Macy\", \"Madaki\", \"Maddison\", \"Maddox\", \"Madison\", \"Madison-Jake\", \"Madox\", \"Mael\", \"Magnus\", \"Mahan\", \"Mahdi\", \"Mahmoud\", \"Maias\", \"Maison\", \"Maisum\", \"Maitlind\", \"Majid\", \"Makensie\", \"Makenzie\", \"Makin\", \"Maksim\", \"Maksymilian\", \"Malachai\", \"Malachi\", \"Malachy\", \"Malakai\", \"Malakhy\", \"Malcolm\", \"Malik\", \"Malikye\", \"Malo\", \"Ma'moon\", \"Manas\", \"Maneet\", \"Manmohan\", \"Manolo\", \"Manson\", \"Mantej\", \"Manuel\", \"Manus\", \"Marc\", \"Marc-Anthony\", \"Marcel\", \"Marcello\", \"Marcin\", \"Marco\", \"Marcos\", \"Marcous\", \"Marcquis\", \"Marcus\", \"Mario\", \"Marios\", \"Marius\", \"Mark\", \"Marko\", \"Markus\", \"Marley\", \"Marlin\", \"Marlon\", \"Maros\", \"Marshall\", \"Martin\", \"Marty\", \"Martyn\", \"Marvellous\", \"Marvin\", \"Marwan\", \"Maryk\", \"Marzuq\", \"Mashhood\", \"Mason\", \"Mason-Jay\", \"Masood\", \"Masson\", \"Matas\", \"Matej\", \"Mateusz\", \"Mathew\", \"Mathias\", \"Mathu\", \"Mathuyan\", \"Mati\", \"Matt\", \"Matteo\", \"Matthew\", \"Matthew-William\", \"Matthias\", \"Max\", \"Maxim\", \"Maximilian\", \"Maximillian\", \"Maximus\", \"Maxwell\", \"Maxx\", \"Mayeul\", \"Mayson\", \"Mazin\", \"Mcbride\", \"McCaulley\", \"McKade\", \"McKauley\", \"McKay\", \"McKenzie\", \"McLay\", \"Meftah\", \"Mehmet\", \"Mehraz\", \"Meko\", \"Melville\", \"Meshach\", \"Meyzhward\", \"Micah\", \"Michael\", \"Michael-Alexander\", \"Michael-James\", \"Michal\", \"Michat\", \"Micheal\", \"Michee\", \"Mickey\", \"Miguel\", \"Mika\", \"Mikael\", \"Mikee\", \"Mikey\", \"Mikhail\", \"Mikolaj\", \"Miles\", \"Millar\", \"Miller\", \"Milo\", \"Milos\", \"Milosz\", \"Mir\", \"Mirza\", \"Mitch\", \"Mitchel\", \"Mitchell\", \"Moad\", \"Moayd\", \"Mobeen\", \"Modoulamin\", \"Modu\", \"Mohamad\", \"Mohamed\", \"Mohammad\", \"Mohammad-Bilal\", \"Mohammed\", \"Mohanad\", \"Mohd\", \"Momin\", \"Momooreoluwa\", \"Montague\", \"Montgomery\", \"Monty\", \"Moore\", \"Moosa\", \"Moray\", \"Morgan\", \"Morgyn\", \"Morris\", \"Morton\", \"Moshy\", \"Motade\", \"Moyes\", \"Msughter\", \"Mueez\", \"Muhamadjavad\", \"Muhammad\", \"Muhammed\", \"Muhsin\", \"Muir\", \"Munachi\", \"Muneeb\", \"Mungo\", \"Munir\", \"Munmair\", \"Munro\", \"Murdo\", \"Murray\", \"Murrough\", \"Murry\", \"Musa\", \"Musse\", \"Mustafa\", \"Mustapha\", \"Muzammil\", \"Muzzammil\", \"Mykie\", \"Myles\", \"Mylo\", \"Nabeel\", \"Nadeem\", \"Nader\", \"Nagib\", \"Naif\", \"Nairn\", \"Narvic\", \"Nash\", \"Nasser\", \"Nassir\", \"Natan\", \"Nate\", \"Nathan\", \"Nathanael\", \"Nathanial\", \"Nathaniel\", \"Nathan-Rae\", \"Nawfal\", \"Nayan\", \"Neco\", \"Neil\", \"Nelson\", \"Neo\", \"Neshawn\", \"Nevan\", \"Nevin\", \"Ngonidzashe\", \"Nial\", \"Niall\", \"Nicholas\", \"Nick\", \"Nickhill\", \"Nicki\", \"Nickson\", \"Nicky\", \"Nico\", \"Nicodemus\", \"Nicol\", \"Nicolae\", \"Nicolas\", \"Nidhish\", \"Nihaal\", \"Nihal\", \"Nikash\", \"Nikhil\", \"Niki\", \"Nikita\", \"Nikodem\", \"Nikolai\", \"Nikos\", \"Nilav\", \"Niraj\", \"Niro\", \"Niven\", \"Noah\", \"Noel\", \"Nolan\", \"Noor\", \"Norman\", \"Norrie\", \"Nuada\", \"Nyah\", \"Oakley\", \"Oban\", \"Obieluem\", \"Obosa\", \"Odhran\", \"Odin\", \"Odynn\", \"Ogheneochuko\", \"Ogheneruno\", \"Ohran\", \"Oilibhear\", \"Oisin\", \"Ojima-Ojo\", \"Okeoghene\", \"Olaf\", \"Ola-Oluwa\", \"Olaoluwapolorimi\", \"Ole\", \"Olie\", \"Oliver\", \"Olivier\", \"Oliwier\", \"Ollie\", \"Olurotimi\", \"Oluwadamilare\", \"Oluwadamiloju\", \"Oluwafemi\", \"Oluwafikunayomi\", \"Oluwalayomi\", \"Oluwatobiloba\", \"Oluwatoni\", \"Omar\", \"Omri\", \"Oran\", \"Orin\", \"Orlando\", \"Orley\", \"Orran\", \"Orrick\", \"Orrin\", \"Orson\", \"Oryn\", \"Oscar\", \"Osesenagha\", \"Oskar\", \"Ossian\", \"Oswald\", \"Otto\", \"Owain\", \"Owais\", \"Owen\", \"Owyn\", \"Oz\", \"Ozzy\", \"Pablo\", \"Pacey\", \"Padraig\", \"Paolo\", \"Pardeepraj\", \"Parkash\", \"Parker\", \"Pascoe\", \"Pasquale\", \"Patrick\", \"Patrick-John\", \"Patrikas\", \"Patryk\", \"Paul\", \"Pavit\", \"Pawel\", \"Pawlo\", \"Pearce\", \"Pearse\", \"Pearsen\", \"Pedram\", \"Pedro\", \"Peirce\", \"Peiyan\", \"Pele\", \"Peni\", \"Peregrine\", \"Peter\", \"Phani\", \"Philip\", \"Philippos\", \"Phinehas\", \"Phoenix\", \"Phoevos\", \"Pierce\", \"Pierre-Antoine\", \"Pieter\", \"Pietro\", \"Piotr\", \"Porter\", \"Prabhjoit\", \"Prabodhan\", \"Praise\", \"Pranav\", \"Pravin\", \"Precious\", \"Prentice\", \"Presley\", \"Preston\", \"Preston-Jay\", \"Prinay\", \"Prince\", \"Prithvi\", \"Promise\", \"Puneetpaul\", \"Pushkar\", \"Qasim\", \"Qirui\", \"Quinlan\", \"Quinn\", \"Radmiras\", \"Raees\", \"Raegan\", \"Rafael\", \"Rafal\", \"Rafferty\", \"Rafi\", \"Raheem\", \"Rahil\", \"Rahim\", \"Rahman\", \"Raith\", \"Raithin\", \"Raja\", \"Rajab-Ali\", \"Rajan\", \"Ralfs\", \"Ralph\", \"Ramanas\", \"Ramit\", \"Ramone\", \"Ramsay\", \"Ramsey\", \"Rana\", \"Ranolph\", \"Raphael\", \"Rasmus\", \"Rasul\", \"Raul\", \"Raunaq\", \"Ravin\", \"Ray\", \"Rayaan\", \"Rayan\", \"Rayane\", \"Rayden\", \"Rayhan\", \"Raymond\", \"Rayne\", \"Rayyan\", \"Raza\", \"Reace\", \"Reagan\", \"Reean\", \"Reece\", \"Reed\", \"Reegan\", \"Rees\", \"Reese\", \"Reeve\", \"Regan\", \"Regean\", \"Reggie\", \"Rehaan\", \"Rehan\", \"Reice\", \"Reid\", \"Reigan\", \"Reilly\", \"Reily\", \"Reis\", \"Reiss\", \"Remigiusz\", \"Remo\", \"Remy\", \"Ren\", \"Renars\", \"Reng\", \"Rennie\", \"Reno\", \"Reo\", \"Reuben\", \"Rexford\", \"Reynold\", \"Rhein\", \"Rheo\", \"Rhett\", \"Rheyden\", \"Rhian\", \"Rhoan\", \"Rholmark\", \"Rhoridh\", \"Rhuairidh\", \"Rhuan\", \"Rhuaridh\", \"Rhudi\", \"Rhy\", \"Rhyan\", \"Rhyley\", \"Rhyon\", \"Rhys\", \"Rhys-Bernard\", \"Rhyse\", \"Riach\", \"Rian\", \"Ricards\", \"Riccardo\", \"Ricco\", \"Rice\", \"Richard\", \"Richey\", \"Richie\", \"Ricky\", \"Rico\", \"Ridley\", \"Ridwan\", \"Rihab\", \"Rihan\", \"Rihards\", \"Rihonn\", \"Rikki\", \"Riley\", \"Rio\", \"Rioden\", \"Rishi\", \"Ritchie\", \"Rivan\", \"Riyadh\", \"Riyaj\", \"Roan\", \"Roark\", \"Roary\", \"Rob\", \"Robbi\", \"Robbie\", \"Robbie-lee\", \"Robby\", \"Robert\", \"Robert-Gordon\", \"Robertjohn\", \"Robi\", \"Robin\", \"Rocco\", \"Roddy\", \"Roderick\", \"Rodrigo\", \"Roen\", \"Rogan\", \"Roger\", \"Rohaan\", \"Rohan\", \"Rohin\", \"Rohit\", \"Rokas\", \"Roman\", \"Ronald\", \"Ronan\", \"Ronan-Benedict\", \"Ronin\", \"Ronnie\", \"Rooke\", \"Roray\", \"Rori\", \"Rorie\", \"Rory\", \"Roshan\", \"Ross\", \"Ross-Andrew\", \"Rossi\", \"Rowan\", \"Rowen\", \"Roy\", \"Ruadhan\", \"Ruaidhri\", \"Ruairi\", \"Ruairidh\", \"Ruan\", \"Ruaraidh\", \"Ruari\", \"Ruaridh\", \"Ruben\", \"Rubhan\", \"Rubin\", \"Rubyn\", \"Rudi\", \"Rudy\", \"Rufus\", \"Rui\", \"Ruo\", \"Rupert\", \"Ruslan\", \"Russel\", \"Russell\", \"Ryaan\", \"Ryan\", \"Ryan-Lee\", \"Ryden\", \"Ryder\", \"Ryese\", \"Ryhs\", \"Rylan\", \"Rylay\", \"Rylee\", \"Ryleigh\", \"Ryley\", \"Rylie\", \"Ryo\", \"Ryszard\", \"Saad\", \"Sabeen\", \"Sachkirat\", \"Saffi\", \"Saghun\", \"Sahaib\", \"Sahbian\", \"Sahil\", \"Saif\", \"Saifaddine\", \"Saim\", \"Sajid\", \"Sajjad\", \"Salahudin\", \"Salman\", \"Salter\", \"Salvador\", \"Sam\", \"Saman\", \"Samar\", \"Samarjit\", \"Samatar\", \"Sambrid\", \"Sameer\", \"Sami\", \"Samir\", \"Sami-Ullah\", \"Samual\", \"Samuel\", \"Samuela\", \"Samy\", \"Sanaullah\", \"Sandro\", \"Sandy\", \"Sanfur\", \"Sanjay\", \"Santiago\", \"Santino\", \"Satveer\", \"Saul\", \"Saunders\", \"Savin\", \"Sayad\", \"Sayeed\", \"Sayf\", \"Scot\", \"Scott\", \"Scott-Alexander\", \"Seaan\", \"Seamas\", \"Seamus\", \"Sean\", \"Seane\", \"Sean-James\", \"Sean-Paul\", \"Sean-Ray\", \"Seb\", \"Sebastian\", \"Sebastien\", \"Selasi\", \"Seonaidh\", \"Sephiroth\", \"Sergei\", \"Sergio\", \"Seth\", \"Sethu\", \"Seumas\", \"Shaarvin\", \"Shadow\", \"Shae\", \"Shahmir\", \"Shai\", \"Shane\", \"Shannon\", \"Sharland\", \"Sharoz\", \"Shaughn\", \"Shaun\", \"Shaunpaul\", \"Shaun-Paul\", \"Shaun-Thomas\", \"Shaurya\", \"Shaw\", \"Shawn\", \"Shawnpaul\", \"Shay\", \"Shayaan\", \"Shayan\", \"Shaye\", \"Shayne\", \"Shazil\", \"Shea\", \"Sheafan\", \"Sheigh\", \"Shenuk\", \"Sher\", \"Shergo\", \"Sheriff\", \"Sherwyn\", \"Shiloh\", \"Shiraz\", \"Shreeram\", \"Shreyas\", \"Shyam\", \"Siddhant\", \"Siddharth\", \"Sidharth\", \"Sidney\", \"Siergiej\", \"Silas\", \"Simon\", \"Sinai\", \"Skye\", \"Sofian\", \"Sohaib\", \"Sohail\", \"Soham\", \"Sohan\", \"Sol\", \"Solomon\", \"Sonneey\", \"Sonni\", \"Sonny\", \"Sorley\", \"Soul\", \"Spencer\", \"Spondon\", \"Stanislaw\", \"Stanley\", \"Stefan\", \"Stefano\", \"Stefin\", \"Stephen\", \"Stephenjunior\", \"Steve\", \"Steven\", \"Steven-lee\", \"Stevie\", \"Stewart\", \"Stewarty\", \"Strachan\", \"Struan\", \"Stuart\", \"Su\", \"Subhaan\", \"Sudais\", \"Suheyb\", \"Suilven\", \"Sukhi\", \"Sukhpal\", \"Sukhvir\", \"Sulayman\", \"Sullivan\", \"Sultan\", \"Sung\", \"Sunny\", \"Suraj\", \"Surien\", \"Sweyn\", \"Syed\", \"Sylvain\", \"Symon\", \"Szymon\", \"Tadd\", \"Taddy\", \"Tadhg\", \"Taegan\", \"Taegen\", \"Tai\", \"Tait\", \"Taiwo\", \"Talha\", \"Taliesin\", \"Talon\", \"Talorcan\", \"Tamar\", \"Tamiem\", \"Tammam\", \"Tanay\", \"Tane\", \"Tanner\", \"Tanvir\", \"Tanzeel\", \"Taonga\", \"Tarik\", \"Tariq-Jay\", \"Tate\", \"Taylan\", \"Taylar\", \"Tayler\", \"Taylor\", \"Taylor-Jay\", \"Taylor-Lee\", \"Tayo\", \"Tayyab\", \"Tayye\", \"Tayyib\", \"Teagan\", \"Tee\", \"Teejay\", \"Tee-jay\", \"Tegan\", \"Teighen\", \"Teiyib\", \"Te-Jay\", \"Temba\", \"Teo\", \"Teodor\", \"Teos\", \"Terry\", \"Teydren\", \"Theo\", \"Theodore\", \"Thiago\", \"Thierry\", \"Thom\", \"Thomas\", \"Thomas-Jay\", \"Thomson\", \"Thorben\", \"Thorfinn\", \"Thrinei\", \"Thumbiko\", \"Tiago\", \"Tian\", \"Tiarnan\", \"Tibet\", \"Tieran\", \"Tiernan\", \"Timothy\", \"Timucin\", \"Tiree\", \"Tisloh\", \"Titi\", \"Titus\", \"Tiylar\", \"TJ\", \"Tjay\", \"T-Jay\", \"Tobey\", \"Tobi\", \"Tobias\", \"Tobie\", \"Toby\", \"Todd\", \"Tokinaga\", \"Toluwalase\", \"Tom\", \"Tomas\", \"Tomasz\", \"Tommi-Lee\", \"Tommy\", \"Tomson\", \"Tony\", \"Torin\", \"Torquil\", \"Torran\", \"Torrin\", \"Torsten\", \"Trafford\", \"Trai\", \"Travis\", \"Tre\", \"Trent\", \"Trey\", \"Tristain\", \"Tristan\", \"Troy\", \"Tubagus\", \"Turki\", \"Turner\", \"Ty\", \"Ty-Alexander\", \"Tye\", \"Tyelor\", \"Tylar\", \"Tyler\", \"Tyler-James\", \"Tyler-Jay\", \"Tyllor\", \"Tylor\", \"Tymom\", \"Tymon\", \"Tymoteusz\", \"Tyra\", \"Tyree\", \"Tyrnan\", \"Tyrone\", \"Tyson\", \"Ubaid\", \"Ubayd\", \"Uchenna\", \"Uilleam\", \"Umair\", \"Umar\", \"Umer\", \"Umut\", \"Urban\", \"Uri\", \"Usman\", \"Uzair\", \"Uzayr\", \"Valen\", \"Valentin\", \"Valentino\", \"Valery\", \"Valo\", \"Vasyl\", \"Vedantsinh\", \"Veeran\", \"Victor\", \"Victory\", \"Vinay\", \"Vince\", \"Vincent\", \"Vincenzo\", \"Vinh\", \"Vinnie\", \"Vithujan\", \"Vladimir\", \"Vladislav\", \"Vrishin\", \"Vuyolwethu\", \"Wabuya\", \"Wai\", \"Walid\", \"Wallace\", \"Walter\", \"Waqaas\", \"Warkhas\", \"Warren\", \"Warrick\", \"Wasif\", \"Wayde\", \"Wayne\", \"Wei\", \"Wen\", \"Wesley\", \"Wesley-Scott\", \"Wiktor\", \"Wilkie\", \"Will\", \"William\", \"William-John\", \"Willum\", \"Wilson\", \"Windsor\", \"Wojciech\", \"Woyenbrakemi\", \"Wyatt\", \"Wylie\", \"Wynn\", \"Xabier\", \"Xander\", \"Xavier\", \"Xiao\", \"Xida\", \"Xin\", \"Xue\", \"Yadgor\", \"Yago\", \"Yahya\", \"Yakup\", \"Yang\", \"Yanick\", \"Yann\", \"Yannick\", \"Yaseen\", \"Yasin\", \"Yasir\", \"Yassin\", \"Yoji\", \"Yong\", \"Yoolgeun\", \"Yorgos\", \"Youcef\", \"Yousif\", \"Youssef\", \"Yu\", \"Yuanyu\", \"Yuri\", \"Yusef\", \"Yusuf\", \"Yves\", \"Zaaine\", \"Zaak\", \"Zac\", \"Zach\", \"Zachariah\", \"Zacharias\", \"Zacharie\", \"Zacharius\", \"Zachariya\", \"Zachary\", \"Zachary-Marc\", \"Zachery\", \"Zack\", \"Zackary\", \"Zaid\", \"Zain\", \"Zaine\", \"Zaineddine\", \"Zainedin\", \"Zak\", \"Zakaria\", \"Zakariya\", \"Zakary\", \"Zaki\", \"Zakir\", \"Zakk\", \"Zamaar\", \"Zander\", \"Zane\", \"Zarran\", \"Zayd\", \"Zayn\", \"Zayne\", \"Ze\", \"Zechariah\", \"Zeek\", \"Zeeshan\", \"Zeid\", \"Zein\", \"Zen\", \"Zendel\", \"Zenith\", \"Zennon\", \"Zeph\", \"Zerah\", \"Zhen\", \"Zhi\", \"Zhong\", \"Zhuo\", \"Zi\", \"Zidane\", \"Zijie\", \"Zinedine\", \"Zion\", \"Zishan\", \"Ziya\", \"Ziyaan\", \"Zohaib\", \"Zohair\", \"Zoubaeir\", \"Zubair\", \"Zubayr\", \"Zuriel\"];\n\nconst markovModel = generateModel(personaDetail);\nconst output_text1 = generateText(markovModel, \"They're\");\nconst output_text2 = generateText(markovModel, \"She's\");\nconst output_text3 = generateText(markovModel, \"He's\");\nconst name1 = pick(names);\nconst name2 = pick(names);\nconst name3 = pick(names);\nconst name4 = pick(names);\nconst img1 = document.createElement(\"IMG\");\nconst img2 = document.createElement(\"IMG\");\nconst img3 = document.createElement(\"IMG\");\n\nimg1.setAttribute(\"src\", \"profiles/p1.png\");\nimg2.setAttribute(\"src\", \"profiles/p5.png\");\nimg3.setAttribute(\"src\", \"profiles/p10.png\");\nimg1.setAttribute(\"width\", \"100\");\nimg1.setAttribute(\"height\", \"100\");\nimg2.setAttribute(\"width\", \"100\");\nimg2.setAttribute(\"height\", \"100\");\nimg3.setAttribute(\"width\", \"100\");\nimg3.setAttribute(\"height\", \"100\");\n\n\nconst x1 = Math.floor(Math.random()*18) + 1;\nconst x2 = Math.floor(Math.random()*18) + 1;\nwhile (x1==x2) {\n    x2 = Math.floor(Math.random()*18) + 1;\n}\nconst x3 = Math.floor(Math.random()*18) + 1;\nconst x4 = Math.floor(Math.random()*18) + 1;\nconst imgStr1 = `<div> <img src='profiles/p${x1}.png' width='100' height='100'> <img src='profiles/p${x2}.png' width='100' height='100'> </div>`;\nconst imgStr2 = `<div> <img src='profiles/p${x3}.png' width='100' height='100'> </div>`;\nconst imgStr3 = `<div> <img src='profiles/p${x4}.png' width='100' height='100'> </div>`;\ndocument.body.innerHTML \n    = \"<h2> Persona Generation </h2>\" \n        + \"<p id = 'subtitle'> Generating user personas for an app that helps parents keep children busy on flights. </p> &#10;&#13;\" \n        + \"<p class = 'persona'> <b> PERSONA 01 </b> </p>\" \n        + \"<div>\" + imgStr1 + \"</div>\"\n        + \"<b>\" + name1 + \" and \" + name2 + \": </b>\"\n        + output_text1 \n        + \"<p class = 'persona'> <b> PERSONA 02 </b> </p>\" \n        + \"<div>\" + imgStr2 + \"</div>\"\n        + \"<b>\" + name3 + \": </b>\"\n        + output_text2\n        + \"<p class = 'persona'> <b> PERSONA 03 </b> </p>\" \n        + \"<div>\" + imgStr3 + \"</div>\"\n        + \"<b>\" + name4 + \": </b>\"\n        + output_text3 + \"&#10; &#13; \";\n\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ha6q2rnetpyrxe6yxfl6",
        "width": 1518,
        "height": 1518,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-11T17:03:04.66Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-12T05:59:04.47Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-13T15:50:14.157Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FxT3DmDwYRkusr5u6",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-15T23:01:08.7Z",
    "posted": true,
    "lesson": "Noise",
    "description": "WEEK 3 (1/4) : I Honestly just wanted to show off my super jank pasta mix. this is actually part of my pair challenge as I sent it to John because I thought it was funny.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jed9xzdz1zm4g2pbeoxn",
        "width": 1192,
        "height": 1190,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/o7uqsu87nedvuevqalns",
        "width": 1192,
        "height": 1190,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xcus1ei1ewteyrfrjhsx",
        "width": 986,
        "height": 1002,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "F64LC2E5aSDKftSj9",
        "created_at": "2023-02-15T23:02:32.524Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T03:35:49.909Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "FzGNicqsPo7xbaori",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-03T00:56:41.321Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Playing with random distributions, an attempt at recreating a Vera Molnar piece in p5",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pcrfgsjiwbcc3mvqd3ct",
        "width": 1700,
        "height": 1700,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T01:12:33.155Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-03T15:20:41.535Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-03T17:22:45.433Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "G2ZptN37zYo42S6pt",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-14T02:23:57.905Z",
    "posted": true,
    "lesson": "Text",
    "description": "It was a dark and stormy night feat. Taylor Swift. I used context-free grammar and a Markov chain with her song lyrics",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/r8jbmgbkr8q4zavptebx",
        "width": 1946,
        "height": 1834,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/yyghupakc2jmx5z8kl9s",
        "width": 1936,
        "height": 1850,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T02:41:08.142Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T03:11:49.286Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-14T03:53:14.054Z"
      }
    ],
    "comments": [
      {
        "comment": "this is so creative!",
        "commenter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T02:41:05.913Z"
      }
    ]
  },
  {
    "_id": "G2iefRC5KfJQb2gZd",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-03T05:00:12.612Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "i love colors but i can never decide which ones to use so i let random choose for me.",
    "code": "https://cdnjs.cloudfar.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(500, 500);\n  strokeWeight(3);\n  frameRate(3);\n  background(220);\n}\n\nfunction draw() {\n  \n  \n  for(i=0;i<=width; i=i+100){\n    // fill(random(i,255),random(0,i),random(133));\n    fill(random(0,100), random(100,200), random(200,255))\n  rect(i,0,100,50);\n  }\n    for(i=-50;i<=width; i=i+100){\n   fill(random(100,200), random(200,255), random(0,100))\n  rect(i,50,100,50);\n  }\n  \n  for(i=0;i<=width; i=i+100){\n    fill(random(200,255),random(0,100),random(100,200));\n  rect(i,100,100,50);\n  }\n  \n   for(i=-50;i<=width; i=i+100){\n    fill(random(0,55),random(85,270),random(90,250));\n  rect(i,150,100,50);\n  }\n  \n  // -------------------------------------------- //\n  for(i=0;i<=width; i=i+100){\n    // fill(random(i,255),random(0,i),random(133));\n    fill(random(0,100), random(100,200), random(200,255))\n  rect(i,200,100,50);\n  }\n    for(i=-50;i<=width; i=i+100){\n   fill(random(100,200), random(200,255), random(0,100))\n  rect(i,250,100,50);\n  }\n  \n  for(i=0;i<=width; i=i+100){\n    fill(random(200,255),random(0,100),random(100,200));\n  rect(i,300,100,50);\n  }\n  \n   for(i=-50;i<=width; i=i+100){\n    fill(random(0,55),random(85,270),random(90,250));\n  rect(i,350,100,50);\n  }\n  \nfor(i=0;i<=width; i=i+100){\n    fill(random(200,255),random(0,100),random(100,200));\n  rect(i,400,100,50);\n  }\n  \n   for(i=-50;i<=width; i=i+100){\n    fill(random(10,95),random(85,170),random(160,250));\n  rect(i,450,100,50);\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fa4hdhzvarmkeou0zex2",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "G2tDtKWMWM3fnPSZD",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-08T20:56:46.126Z",
    "posted": true,
    "lesson": "Random",
    "description": "Different version of the last sketch. The number of petals on the flowers are also randomised now.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 10;\nlet eMax = 30;\nlet eMin = 5;\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n  noStroke();\n  frameRate(3);\n  colorMode(HSB)\n}\n\nfunction draw() {\n  background(220);\n\n  for (let i = 2 * num; i < width; i += 4 * num) {\n    for (let j = 2 * num; j < height; j += 4 * num) {\n      \n      let inner;\n      let outer;\n      let d = dist(i, j, mouseX, mouseY);\n      let colBrt = map(d, 0, width, 100, 10);\n      let colHue = map(d, 0, width, 250,350);\n\n      if (d < width / 4) {\n        inner = min(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = min(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      } else if (d < width / 2) {\n        inner =\n          (random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin)) /\n          5;\n        outer =\n          (random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax)) /\n          5;\n      } else {\n        inner = max(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = max(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      }\n\n      push();\n\n      translate(i, j);\n      \n      let petalNum = floor(random(8,25));\n      for (let a = 0; a < petalNum; a++) {\n        rotate(a * (360 / petalNum));\n        fill(colHue, colBrt, 100);\n        beginShape();\n        curveVertex(0, 0);\n        curveVertex(inner, 0);\n        curveVertex(outer + inner, outer - inner);\n        curveVertex(outer + inner, outer + inner);\n        curveVertex(outer - inner, outer + inner);\n        curveVertex(0, inner);\n        curveVertex(0, 0);\n        endShape();\n      }\n      fill(colHue, colBrt, 50);\n      ellipse(0, 0, 2*inner, 2*inner);\n\n      pop();\n      \n    }\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vnxcxw682drz2olwzeey",
        "width": 1300,
        "height": 1300,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:50:04.512Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "G6fqqdbScCoP4Anqu",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-17T06:02:37.131Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Part 2 of the pair challenge. Used Sahiti's sketch (image 2) as a module for the overlapping circles in the background.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lackmxxdyd6pew6iqjx3",
        "width": 372,
        "height": 372,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/odwncxig3gcdmmznv1qg",
        "width": 358,
        "height": 372,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-17T15:13:59.41Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "G7GtGGPk7QRchad9v",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-03T03:37:30.658Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "My attempt at challenge 2. I could not fully capture the smooth wave effect but I did spend quite some time on this, so I decided to post it as it is. The frequency slider also has a subtler effect than what I would have liked.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u8v9ip5lbtozbabgsc9h",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "G9QwQ37hYWhZGFmDq",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-10T17:08:53.145Z",
    "posted": true,
    "lesson": "Random",
    "description": "**Instantiating Cubes at Random Positions on Unity** New to Unity so taking some time to figure this out. I'm trying to position new prefabs at random positions but not sure if it works yet",
    "code": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.Diagnostics;\n\npublic class PlaceCubes : MonoBehaviour\n{\n    public int period = 1000;\n    public GameObject prefab;\n    float prevMs = 0f;\n\n    Stopwatch sw = new Stopwatch();\n\n   \n    // Start is called before the first frame update\n    void Start()\n    {\n        sw.Start();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        float currentMs = sw.ElapsedMilliseconds;\n        if (currentMs - prevMs > period)\n        {\n            var position = new Vector3(Random.Range(-20.0f, 20.0f), Random.Range(-20.0f, 20.0f), 0);\n            Instantiate(prefab, position, Quaternion.identity);\n            prevMs = currentMs;\n        }\n\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/eiyqakvklkzhcb4bhiji",
        "width": 1390,
        "height": 854,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-12T04:58:28.086Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T14:36:04.666Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:07.414Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GEJu2WfRkuebZrSt7",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-15T23:01:28.264Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Worked with Sora again for the pair challenge this week. You guys probably already saw her pasta mix that she sent me so with WebGL and Photoshop in hand I found an opportunity that I couldn't afford to pass up.\n\nCode for how I made the sauce is provided.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet n;\nlet fc;\n\nfunction setup() {\n  createCanvas(600, 400, WEBGL);\n  //debugMode();\n  //frameRate();\n  noLoop();\n}\n\nfunction draw() {\n  background(50);\n  //orbitControl();\n  camera(0, -400, 400);\n  noStroke();\n  ambientLight(255);\n  //ambientMaterial(255, 0, 0);\n  \n  push();\n  drawPlanes();\n  pop();\n}\n\nfunction drawPlanes() {\n  for(i = 0; i < width; i += 10) {\n    for(x = 10; x < width; x = x + 10) {\n      for(y = 10; y < height; y = y + 10){\n        n = noise(i * y);\n        fc = frameCount / 2;\n    \n        rotateY(fc / 2);\n        \n        ambientMaterial(255, 0, 0);\n        \n        push();\n        translate(x * noise(x), y * noise(y), 0);\n        plane(150 * n);\n        pop();\n        \n        ambientMaterial(200, 50, 50);\n        \n        push();\n        translate(x * noise(x) / 2, y * noise(y) / 2, 0);\n        plane(150 * n);\n        pop();\n      }\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nhrcuu3irn8nketwacho",
        "width": 899,
        "height": 594,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T00:13:04.114Z"
      },
      {
        "category": "nerdy",
        "voter_id": "EZGFdZAsGvyhaQ3Gi",
        "created_at": "2023-02-16T02:12:33.108Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GFRx4sPQJDQ2jztoh",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-21T20:15:22.64Z",
    "posted": true,
    "lesson": "Params",
    "description": "I want to try different kind of image collages and distortion for this chapter. Here is my spiral and image trial. (Pair challenge for Shristi)",
    "code": "//Image processing\n//parametric modelling and design\n\nlet img;\n\nlet tileSize = 50;\n\nfunction preload() {\n  img = loadImage(\"autumn.jpg\");\n}\n\nfunction setup() {\n  createCanvas(700, 500);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(220);\n  imageMode(CENTER);\n  image(img, width/2, height/2, width, height);\n\n  // raster vs vector\n  //Use pixels to create pattern\n  //aaray of pixels\n  //rgba data\n  //so every pixel is the 4th element in the list!!!!!\n // loadPixels();\n\n  // let px = get(0,0);\n  // console.log(px, \"Sahiti\");\n\n  //Get one color\n\n  // console.log(px[0], \"Sahiti2\");\n\n  // for (let x = 0; x < 4; x++) {\n  //   px = get(x, 0);\n  //   console.log(px, \"Sahiti3\");\n\n    //randomly change pixel color\n\n    let radius = 5;\n    let angle = 0; //change as rotate?\n\n    while (radius < width / 2 - 50) {\n      let portionX = int(random(0, img.width - tileSize));\n      let portionY = int(random(0, img.height - tileSize));\n      let portion = img.get(portionX, portionY, tileSize, tileSize);\n      //I want to console log \"portion\" to know if I am getting the tiles on the image.\n      \n      push();\n      translate(width/2, height/2);\n      rotate(angle);\n      translate(radius, 0);\n   rotate(random(0, 90));\n      image(portion, 0, 0);\n      pop();\n      \n      angle = angle+ degrees(0.1);\n      radius = radius + 0.2;\n    }\n  \n   noLoop();\n\n  }\n\n//}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/micldl4iwc2solbxzizf",
        "width": 656,
        "height": 471,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/b8dzkhtdymzlmb6adpiz",
        "width": 657,
        "height": 471,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/t2zfcgomtybozvgzg5bx",
        "width": 657,
        "height": 470,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-21T23:41:20.958Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-22T02:03:38.645Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-22T03:29:30.89Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-22T10:26:32.904Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-23T17:18:31.653Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GH62qb5ZgSeNewEzH",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-20T22:16:27.973Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Part 2 of the individual challenge. Paid a visit to the laser lab this morning and was able to take my project and printed it on some spare plywood I found in the material recycling bin. This project came out well and I'm glad that I had another opportunity to visit the laser lab.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/e6uldei6bko61vlilmqp",
        "width": 2447,
        "height": 1981,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/y1jctm5hpilnztdbrww4",
        "width": 721,
        "height": 588,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-21T03:00:26.561Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GHgEzGrjX4ePDevjf",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-17T17:12:39.223Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Map challenge!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kcyzsltfrjfrdwk3qoiw",
        "width": 1306,
        "height": 1302,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T20:01:24.284Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GLNDzEhnRAwh2YfYi",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-31T01:40:30.037Z",
    "posted": true,
    "lesson": "Music",
    "description": "My attempt at some original music 😅 lots of experimentation with pairing notes. Also added a few drum sounds to this track",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/spufps6irava1zpb2dmc",
        "width": 0,
        "height": 0,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T02:19:56.002Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GNLFMdBNE73uxAnSi",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-14T15:17:08.034Z",
    "posted": true,
    "lesson": "Text",
    "description": "Spinoff Series Generator - because I watched the films recently and it's all fresh in my head\nBackground image generated using stable diffusion to match the vibe",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ay2mcvm6nmnip4kkv3xr",
        "width": 1472,
        "height": 1458,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/nakxayapgseoortpblf2",
        "width": 1472,
        "height": 1458,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-14T15:44:13.071Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GTdF2hMaqTvP8qean",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-24T02:09:47.534Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Laser cut coasters :D",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kppakvxryhuombicuvhi",
        "width": 2471,
        "height": 3269,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pr541himmyfc6mma7jhh",
        "width": 3024,
        "height": 3251,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xzsqsihxrhickne1zblj",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:56:51.881Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-24T05:27:57.623Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:05.511Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GTtFg8XnE7nKRTX46",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-31T14:23:13.367Z",
    "posted": true,
    "lesson": "Music",
    "description": "Spent some time playing around with the melody generator!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mq13ozrumj7rjgefzdib",
        "width": 2248,
        "height": 1310,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "GWNXw2XgJsr7S9TGF",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-06T19:03:55.771Z",
    "posted": true,
    "lesson": "Random",
    "description": "Worked with Reshma on the Pair Challenge. 10 patterns picked randomly from a deck such that each pattern appears at least once in every row.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gridX = [0, 200, 0, 200];\nlet gridY =[0, 0, 200, 200];\n\nlet canvasW = 640;\nlet canvasH = 440;\nlet gridW = 500;\nlet gridH = 350;\n\nlet patterns = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet patternPos = 0;\n\nlet gridSize = 50;\n\nfunction setup() {\n  createCanvas(canvasW, canvasH);\n\n  strokeCap(SQUARE);\n  stroke(255); strokeWeight(2);\n  \n  //Initial Deck Shuffling\n  patterns = shuffle(patterns);\n  \n  frameRate (1);\n  //noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(255);\n  for (let j = 45; j < 350; j+=gridSize) {\n    for (let i = 70; i < 570; i+=gridSize) {\n      let p = patterns[patternPos]; \n      drawPattern(p, i, j);\n      \n      patternPos ++;\n      if (patternPos > patterns.length-1) {\n        patterns = shuffle(patterns);\n        patternPos = 0;\n      }\n    }\n  }\n  \n  \n}\n\nfunction drawPattern(pNum, posX, posY) {\n  switch (pNum){\n    case 0:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 1:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 2:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n      pop();\n      break;\n    case 3:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 4:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 5:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 6:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 7:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 8:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n      pop();\n      break;\n    case 9:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  line(posX, posY+25, posX+50, posY+25);\n      pop();\n      break;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bb3jak69i7em1hdz0saq",
        "width": 1282,
        "height": 882,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T19:06:32.905Z"
      },
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T19:06:36.193Z"
      },
      {
        "category": "nerdy",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T19:06:40.705Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-06T21:24:40.565Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-08T04:58:36.814Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GWmW2qfYdTS9rYy4A",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-06T23:55:36.15Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "We all have that one chair...\nA simple click and play to put clothes in the laundry hamper",
    "code": "let chair, clothes, initialX, initialY, newX, newY, destX, destY;\n\nlet chairPosSet=false;\n\nlet clothesToss;\n\nlet noNewCLothes=true;\n\nlet messCount = 0;\nlet collected = 0;\n\nlet allClothes = []\n\n\nfunction setup() {\n    createCanvas(800, 800);\n    noStroke();\n\n    initialX = random(0, width);\n    initialY = random(0, height-150);\n\n    newX = random(0, width);\n    newY = random(0, height-150);\n\n    chair = createSprite(initialX, initialY, 30, 30);\n    chair.setCollider(\"circle\", 0, 0, 60)\n    chair.addImage(loadImage('Laundry Hamper.svg'));\n\n    clothes = createSprite(width-70, height-80, 50, 50);\n    clothes.addImage(loadImage('chairAsset_1.svg'))\n\n    for(let i=0; i<19; i++){\n        allClothes[i]= ('Asset '+String(i+2)+'.svg');\n    }\n\n}\n\n  \n  \nfunction draw() {\n    background(245);\n\n    chair.attractionPoint(0.99, newX, newY);\n\t\n\tchair.maxSpeed = 3;\n\n    text(\"Mess     \"+String(messCount)+\"       Collected     \"+String(collected), 300, 300);\n\n\n    if(chair.overlapPoint(newX, newY)){\n        generatePos();\n    }\n\t\n    if(!noNewCLothes){\n        clothesToss.attractionPoint(0.2, destX, destY)\n        clothesToss.maxSpeed = 5;\n    }\n\n    if (!noNewCLothes && clothesToss.overlap(chair)){\n        collected +=1;\n\t\tclothesToss.remove();\n        noNewCLothes = true;\n\t}\n    else if(!noNewCLothes && clothesToss.overlapPoint(destX, destY)){\n        messCount +=1;\n        clothesToss.remove();\n        noNewCLothes = true;\n    }\n\n    drawSprites();\n\n    \n  }\n\nfunction mouseClicked() {\n\n    if(noNewCLothes){\n        let piece=random(allClothes);\n    clothesToss = createSprite(width-50, height-50, 20, 20);\n    clothesToss.setCollider(\"circle\", 0, 0, 60)\n    clothesToss.addImage(loadImage(piece));\n\n    destX = mouseX;\n    destY = mouseY;\n\n    noNewCLothes=false;\n    }\n\n}\n\nfunction generatePos(){\n    \n    initialX = newX;\n    initialY = newY;\n\n    newX = random(0,width);\n    newY = random(0,height-150);\n\n    // console.log(newX, newY)\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zqh6nw5q4up2osztz3lr",
        "width": 1600,
        "height": 1600,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:47:08.337Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GdSr4MAGjawWJ4per",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-13T23:23:55.605Z",
    "posted": true,
    "lesson": "Text",
    "description": "I was inspired by Shristi's DT bio generator so I decided to make one for CD using Tracery!",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n    top: [\"#div#\"],\n    div: [\n        '<div style=\"color: rgb(180, 180, 180); text-align: left; text-transform: uppercase; font-family: helvetica; font-size: 5vw; margin: 10px; padding: 10px\">#story#</div>',\n    ],\n    story: [\"#greeting# I am #descriptor# #role# who is passionate about #passion#. I am always eager to #eager##char2#\"],\n    greeting: ['<span style=\"font-family: helvetica\">#greetingword##char#</span>'],\n    greetingword: [\"hello\", \"hey\", \"hi\"],\n    char: [\"!\", \",\"],\n    descriptor: ['<span style=\"color: black; font-family: helvetica\">#descriptorword.a#</span>'],\n    descriptorword: [\n        \"multidisciplinary\",\n        \"freelance\"\n    ],\n    role: ['<span style=\"color: black; font-family: helvetica\">#roleword#</span>'],\n    roleword: [\n        \"graphic designer\",\n        \"graphic designer and art director\",\n        \"creative\",\n        \"art director\"\n    ],\n    passion: [\n        '<span style=\"color: black; font-family: helvetica\">#passionword1#</span>',\n        '<span style=\"color: black; font-family: helvetica\">#passionword1#</span> and <span style=\"color: black; font-family: helvetica\">#passionword2#</span>',\n        '<span style=\"color: black; font-family: helvetica\">#passionword1#</span>, <span style=\"color: black; font-family: helvetica\">#passionword2#</span>, and <span style=\"color: black; font-family: helvetica\">#passionword3#</span>'\n    ],\n    passionword1: [\"coding\", \"motion\", \"branding\"],\n    passionword2: [\"UI/UX\", \"web design\", \"interaction\"],\n    passionword3: [\"dogs\", \"cats\", \"ice cream\", \"hiking\"],\n\n    eager: ['<span style=\"font-family: helvetica\">#eagerword#</span>'],\n    eagerword: [\n        \"#eagerword1#\",\n        \"#eagerword1# or #eagerword2#\"\n    ],\n    eagerword1: [\n        \"meet new people\",\n        \"work with like-minded creatives\",\n        \"learn new things\"],\n    eagerword2: [\"chat\", \"grab a coffee\"],\n    char2: [\"!\", \".\"]\n};\n\nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten(\"#top#\");\n\n    const storyDiv = document.createElement(\"div\");\n    storyDiv.innerHTML = story;\n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    }\n\nsetTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zpt8nr4sssorbaf44pfy",
        "width": 1484,
        "height": 1486,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/g5rhqiuzqhssgjp1n52m",
        "width": 1484,
        "height": 1486,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T02:41:43.737Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-14T14:15:11.152Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GfzpzQfem93twoxRp",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-12T22:25:41.35Z",
    "posted": true,
    "lesson": "Text",
    "description": "My take on the individual challenge this week while trying out Tracery. I think for my story I may have been a little too hands-on with writing the story, still considering if I want to expand on this or one of my sketches.",
    "code": "// require /text/tracery.min.js\n\nconst storyElements = {\n  story: [\"It was a dark and stormy night. Jake was getting ready to pull an all nighter studying for his exam tomorrow because he didn't study until this night. He #verb# around before grabbing a cup of coffee in the kitchen. But as he #verb# to his room, his #noun# was missing. Did someone break in? Did he misplace it during the day? Nonetheless, Jake became distraught. He felt #adjective#. He #action#, hoping that through some miracle his #noun# would show up. And by some miracle the #noun# did show up. But the true horror soon struck as Jake saw the sun rise, and in this whole incident he didn’t spend even a single minute studying…\"],\n  adjective: [\"anxious\", \"exhausted\", \"scared\", \"hopeless\", \"terrified\"],\n  noun: [\"textbook\", \"coffee\", \"bed\", \"cat\", \"dog\", \"fish\", \"computer\"],\n  verb: [\"sauntered\", \"walked\", \"returned\", \"ran\", \"skipped\", \"sauntered\"],\n  action: [\"paced back and forth\", \"sat around thinking\", \"went on his phone\", \"prayed\"],\n};\n\nfunction main() {\n  const grammar = tracery.createGrammar(storyElements);\n  const story = grammar.flatten(\"#story#\");\n  display(story);\n}\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 15px; margin: 10%; line-height: 1.5;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}\n\nsetTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hkjzowwhggtwxtvuvjmn",
        "width": 712,
        "height": 520,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "GgJhrZF7ecqEg6WLB",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-24T03:22:23.888Z",
    "posted": true,
    "lesson": "Params",
    "description": "A parameters week sketch without parameters. The user only gets one affordance---a mouse hover. I started out wanting them to control each letter but at the end of the day, the added interactions would have served no real purpose so maybe this was an excercise in building mindful constraints. Or maybe I ran out of time.",
    "code": "body{\n  background: #F9EBE0;\n}\n\n.container{\n  position:fixed;\n  width:1000px;\n  height: 250px;\n\n    \n/*  CENTER ON PAGE */\n  position: fixed;\n  top:50vh;\n  left:50vw;\n  transform:translate(-50%, -50%);\n}\n\n.cut{\n  width: 60px;\n  height: 215px;\n  position:absolute;\n/*   box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\n  transition: 1s;\n   background-image: url(\"https://i.ibb.co/ZXSM8dz/bacon.png\");\n}\n\n.strip{\n  width: 60px;\n  height: 215px;\n  position:absolute;\n/*   box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\n  transition: 1s;\n  background-image: url(\"https://i.ibb.co/ZXSM8dz/bacon.png\");\n}\n\n#m1{ \n  left: 0px;\n  transform: rotate(1.98deg);\n  \n \n}\n#m2{ \n  left: 5%;\n  transform: rotate(-33deg);\n  \n \n}\n#m3{ \n  left: 15%;\n  transform: rotate(33deg);\n  \n\n}\n#m4{ \n  left: 20%;\n  transform: rotate(-1.98deg);\n \n  \n}\n\n#e1{ \n  left: 30%;\n  transform: rotate(-2.98deg);\n  \n}\n#e2{ \n  left: 35%;\n  top: -25%;\n  transform: rotate(89.37deg);\n  \n}\n#e3{ \n  left: 35%;\n  top: 10%;\n  transform: rotate(89deg);\n \n}\n#e4{ \n  left: 35%;\n  top: 40%;\n  transform: rotate(89deg);\n  \n}\n\n#a1{ \n  left: 55%;\n  transform: rotate(20deg);\n}\n\n#a2{ \n  left: 65%;\n  transform: rotate(-20deg);\n  \n}\n\n#a3{ \n  left: 60%;\n  transform: rotate(-89deg);\n  \n}\n\n/* #i{ \n  left: 50%;\n  background: #4786e6;\n} */\n\n#t1{ \n  left: 85%;\n  top:-30%;\n  transform: rotate(88deg);\n \n}\n\n#t2{ \n  left: 85%;\n  transform: rotate(3deg);\n  top:15%;\n  \n}\n\n\n/* —————————————————————————— */\n/*         TRANSITIONS        */\n/* —————————————————————————— */\n\n/* —————————————————————————— */\n/* PART TRANSITION */\n\n\n\n/* —————————————————————————— */\n/* NESTED HOVERING */\n\n\n\n.container:hover > #m1{\n   left: 31%;\n  transform: rotate(-2.98deg);\n}\n\n.container:hover > #m2{\n    left: 35%;\n  top: -25%;\n  transform: rotate(85.37deg);\n}\n\n.container:hover > #m3{\n left: 35%;\n  top: 10%;\n  transform: rotate(85deg);\n}\n\n.container:hover > #m4{\n left: 35%;\n  top: 40%;\n  transform: rotate(86deg);\n}\n\n/* —————————————————————————— */",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uk4hkm54ut8prj51soyb",
        "width": 2108,
        "height": 1802,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": [
      {
        "comment": "Yum!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T03:33:17.275Z"
      }
    ]
  },
  {
    "_id": "Gi25QaKheyDvcNj73",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-06T03:51:02.159Z",
    "posted": true,
    "lesson": "Random",
    "description": "I made a tree using random! This was my first time figuring this out, so I thought it would be interesting to use the p5.js reference guide to help me get started.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vwf5woymuz4m6ljvbt9t",
        "width": 522,
        "height": 751,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-06T06:15:18.682Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-06T15:26:54.655Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-06T17:44:32.817Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T19:03:13.198Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:08:35.687Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GoTA3EDySgYromJBh",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-13T23:44:23.638Z",
    "posted": true,
    "lesson": "Text",
    "description": "My take on the individual challenge. I just improved the Markov model by sampling many more texts and the same text multiple times to bias the model a little bit. Also added some conditions for longevity and concision. Markov models are nuts, it's crazy how much you can get out of a relatively simple technique",
    "code": "const bill_of_rights =\n  \"Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances. A well regulated Militia, being necessary to the security of a free State, the right of the people to keep and bear Arms, shall not be infringed. No Soldier shall, in time of peace be quartered in any house, without the consent of the Owner, nor in time of war, but in a manner to be prescribed by law. The right of the people to be secure in their persons, houses, papers, and effects, against unreasonable searches and seizures, shall not be violated, and no Warrants shall issue, but upon probable cause, supported by Oath or affirmation, and particularly describing the place to be searched, and the persons or things to be seized. No person shall be held to answer for a capital, or otherwise infamous crime, unless on a presentment or indictment of a Grand Jury, except in cases arising in the land or naval forces, or in the Militia, when in actual service in time of War or public danger; nor shall any person be subject for the same offence to be twice put in jeopardy of life or limb; nor shall be compelled in any criminal case to be a witness against himself, nor be deprived of life, liberty, or property, without due process of law; nor shall private property be taken for public use, without just compensation. In all criminal prosecutions, the accused shall enjoy the right to a speedy and public trial, by an impartial jury of the State and district wherein the crime shall have been committed, which district shall have been previously ascertained by law, and to be informed of the nature and cause of the accusation; to be confronted with the witnesses against him; to have compulsory process for obtaining witnesses in his favor, and to have the Assistance of Counsel for his defence. In Suits at common law, where the value in controversy shall exceed twenty dollars, the right of trial by jury shall be preserved, and no fact tried by a jury, shall be otherwise re-examined in any Court of the United States, than according to the rules of the common law. Excessive bail shall not be required, nor excessive fines imposed, nor cruel and unusual punishments inflicted. The enumeration in the Constitution, of certain rights, shall not be construed to deny or disparage others retained by the people. The powers not delegated to the United States by the Constitution, nor prohibited by it to the States, are reserved to the States respectively, or to the people.\";\nconst hansel_and_gretel =\n  \"Hard by a great forest dwelt a poor wood-cutter with his wife and his two children. The boy was called Hansel and the girl Gretel. He had little to bite and to break, and once when great dearth fell on the land, he could no longer procure even daily bread. Now when he thought over this by night in his bed, and tossed about in his anxiety, he groaned and said to his wife: ‘What is to become of us? How are we to feed our poor children, when we no longer have anything even for ourselves?’ ‘I’ll tell you what, husband,’ answered the woman, ‘early tomorrow morning we will take the children out into the forest to where it is the thickest; there we will light a fire for them, and give each of them one more piece of bread, and then we will go to our work and leave them alone. They will not find the way home again, and we shall be rid of them.’ ‘No, wife,’ said the man, ‘I will not do that; how can I bear to leave my children alone in the forest?—the wild animals would soon come and tear them to pieces.’ ‘O, you fool!’ said she, ‘then we must all four die of hunger, you may as well plane the planks for our coffins,’ and she left him no peace until he consented. ‘But I feel very sorry for the poor children, all the same,’ said the man.The two children had also not been able to sleep for hunger, and had heard what their stepmother had said to their father. Gretel wept bitter tears, and said to Hansel: ‘Now all is over with us.’ ‘Be quiet, Gretel,’ said Hansel, ‘do not distress yourself, I will soon find a way to help us.’ And when the old folks had fallen asleep, he got up, put on his little coat, opened the door below, and crept outside. The moon shone brightly, and the white pebbles which lay in front of the house glittered like real silver pennies. Hansel stooped and stuffed the little pocket of his coat with as many as he could get in. Then he went back and said to Gretel: ‘Be comforted, dear little sister, and sleep in peace, God will not forsake us,’ and he lay down again in his bed. When day dawned, but before the sun had risen, the woman came and awoke the two children, saying: ‘Get up, you sluggards! we are going into the forest to fetch wood.’ She gave each a little piece of bread, and said: ‘There is something for your dinner, but do not eat it up before then, for you will get nothing else.’ Gretel took the bread under her apron, as Hansel had the pebbles in his pocket. Then they all set out together on the way to the forest. When they had walked a short time, Hansel stood still and peeped back at the house, and did so again and again. His father said: ‘Hansel, what are you looking at there and staying behind for? Pay attention, and do not forget how to use your legs.’ ‘Ah, father,’ said Hansel, ‘I am looking at my little white cat, which is sitting up on the roof, and wants to say goodbye to me.’ The wife said: ‘Fool, that is not your little cat, that is the morning sun which is shining on the chimneys.’ Hansel, however, had not been looking back at the cat, but had been constantly throwing one of the white pebble-stones out of his pocket on the road.When they had reached the middle of the forest, the father said: ‘Now, children, pile up some wood, and I will light a fire that you may not be cold.’ Hansel and Gretel gathered brushwood together, as high as a little hill. The brushwood was lighted, and when the flames were burning very high, the woman said: ‘Now, children, lay yourselves down by the fire and rest, we will go into the forest and cut some wood. When we have done, we will come back and fetch you away.’Hansel and Gretel sat by the fire, and when noon came, each ate a little piece of bread, and as they heard the strokes of the wood-axe they believed that their father was near. It was not the axe, however, but a branch which he had fastened to a withered tree which the wind was blowing backwards and forwards. And as they had been sitting such a long time, their eyes closed with fatigue, and they fell fast asleep. When at last they awoke, it was already dark night. Gretel began to cry and said: ‘How are we to get out of the forest now?’ But Hansel comforted her and said: ‘Just wait a little, until the moon has risen, and then we will soon find the way.’ And when the full moon had risen, Hansel took his little sister by the hand, and followed the pebbles which shone like newly-coined silver pieces, and showed them the way.They walked the whole night long, and by break of day came once more to their father’s house. They knocked at the door, and when the woman opened it and saw that it was Hansel and Gretel, she said: ‘You naughty children, why have you slept so long in the forest?—we thought you were never coming back at all!’ The father, however, rejoiced, for it had cut him to the heart to leave them behind alone.Not long afterwards, there was once more great dearth throughout the land, and the children heard their mother saying at night to their father: ‘Everything is eaten again, we have one half loaf left, and that is the end. The children must go, we will take them farther into the wood, so that they will not find their way out again; there is no other means of saving ourselves!’ The man’s heart was heavy, and he thought: ‘It would be better for you to share the last mouthful with your children.’ The woman, however, would listen to nothing that he had to say, but scolded and reproached him. He who says A must say B, likewise, and as he had yielded the first time, he had to do so a second time also.The children, however, were still awake and had heard the conversation. When the old folks were asleep, Hansel again got up, and wanted to go out and pick up pebbles as he had done before, but the woman had locked the door, and Hansel could not get out. Nevertheless he comforted his little sister, and said: ‘Do not cry, Gretel, go to sleep quietly, the good God will help us.’Early in the morning came the woman, and took the children out of their beds. Their piece of bread was given to them, but it was still smaller than the time before. On the way into the forest Hansel crumbled his in his pocket, and often stood still and threw a morsel on the ground. ‘Hansel, why do you stop and look round?’ said the father, ‘go on.’ ‘I am looking back at my little pigeon which is sitting on the roof, and wants to say goodbye to me,’ answered Hansel. ‘Fool!’ said the woman, ‘that is not your little pigeon, that is the morning sun that is shining on the chimney.’ Hansel, however little by little, threw all the crumbs on the path.The woman led the children still deeper into the forest, where they had never in their lives been before. Then a great fire was again made, and the mother said: ‘Just sit there, you children, and when you are tired you may sleep a little; we are going into the forest to cut wood, and in the evening when we are done, we will come and fetch you away.’ When it was noon, Gretel shared her piece of bread with Hansel, who had scattered his by the way. Then they fell asleep and evening passed, but no one came to the poor children. They did not awake until it was dark night, and Hansel comforted his little sister and said: ‘Just wait, Gretel, until the moon rises, and then we shall see the crumbs of bread which I have strewn about, they will show us our way home again.’ When the moon came they set out, but they found no crumbs, for the many thousands of birds which fly about in the woods and fields had picked them all up. Hansel said to Gretel: ‘We shall soon find the way,’ but they did not find it. They walked the whole night and all the next day too from morning till evening, but they did not get out of the forest, and were very hungry, for they had nothing to eat but two or three berries, which grew on the ground. And as they were so weary that their legs would carry them no longer, they lay down beneath a tree and fell asleep.It was now three mornings since they had left their father’s house. They began to walk again, but they always came deeper into the forest, and if help did not come soon, they must die of hunger and weariness. When it was mid-day, they saw a beautiful snow-white bird sitting on a bough, which sang so delightfully that they stood still and listened to it. And when its song was over, it spread its wings and flew away before them, and they followed it until they reached a little house, on the roof of which it alighted; and when they approached the little house they saw that it was built of bread and covered with cakes, but that the windows were of clear sugar. ‘We will set to work on that,’ said Hansel, ‘and have a good meal. I will eat a bit of the roof, and you Gretel, can eat some of the window, it will taste sweet.’ Hansel reached up above, and broke off a little of the roof to try how it tasted, and Gretel leant against the window and nibbled at the panes. Then a soft voice cried from the parlour: ‘Nibble, nibble, gnaw, Who is nibbling at my little house?’ The children answered: ‘The wind, the wind, The heaven-born wind,’ and went on eating without disturbing themselves. Hansel, who liked the taste of the roof, tore down a great piece of it, and Gretel pushed out the whole of one round window-pane, sat down, and enjoyed herself with it. Suddenly the door opened, and a woman as old as the hills, who supported herself on crutches, came creeping out. Hansel and Gretel were so terribly frightened that they let fall what they had in their hands. The old woman, however, nodded her head, and said: ‘Oh, you dear children, who has brought you here? do come in, and stay with me. No harm shall happen to you.’ She took them both by the hand, and led them into her little house. Then good food was set before them, milk and pancakes, with sugar, apples, and nuts. Afterwards two pretty little beds were covered with clean white linen, and Hansel and Gretel lay down in them, and thought they were in heaven.The old woman had only pretended to be so kind; she was in reality a wicked witch, who lay in wait for children, and had only built the little house of bread in order to entice them there. When a child fell into her power, she killed it, cooked and ate it, and that was a feast day with her. Witches have red eyes, and cannot see far, but they have a keen scent like the beasts, and are aware when human beings draw near. When Hansel and Gretel came into her neighbourhood, she laughed with malice, and said mockingly: ‘I have them, they shall not escape me again!’ Early in the morning before the children were awake, she was already up, and when she saw both of them sleeping and looking so pretty, with their plump and rosy cheeks she muttered to herself: ‘That will be a dainty mouthful!’ Then she seized Hansel with her shrivelled hand, carried him into a little stable, and locked him in behind a grated door. Scream as he might, it would not help him. Then she went to Gretel, shook her till she awoke, and cried: ‘Get up, lazy thing, fetch some water, and cook something good for your brother, he is in the stable outside, and is to be made fat. When he is fat, I will eat him.’ Gretel began to weep bitterly, but it was all in vain, for she was forced to do what the wicked witch commanded.And now the best food was cooked for poor Hansel, but Gretel got nothing but crab-shells. Every morning the woman crept to the little stable, and cried: ‘Hansel, stretch out your finger that I may feel if you will soon be fat.’ Hansel, however, stretched out a little bone to her, and the old woman, who had dim eyes, could not see it, and thought it was Hansel’s finger, and was astonished that there was no way of fattening him. When four weeks had gone by, and Hansel still remained thin, she was seized with impatience and would not wait any longer. ‘Now, then, Gretel,’ she cried to the girl, ‘stir yourself, and bring some water. Let Hansel be fat or lean, tomorrow I will kill him, and cook him.’ Ah, how the poor little sister did lament when she had to fetch the water, and how her tears did flow down her cheeks! ‘Dear God, do help us,’ she cried. ‘If the wild beasts in the forest had but devoured us, we should at any rate have died together.’ ‘Just keep your noise to yourself,’ said the old woman, ‘it won’t help you at all.’Early in the morning, Gretel had to go out and hang up the cauldron with the water, and light the fire. ‘We will bake first,’ said the old woman, ‘I have already heated the oven, and kneaded the dough.’ She pushed poor Gretel out to the oven, from which flames of fire were already darting. ‘Creep in,’ said the witch, ‘and see if it is properly heated, so that we can put the bread in.’ And once Gretel was inside, she intended to shut the oven and let her bake in it, and then she would eat her, too. But Gretel saw what she had in mind, and said: ‘I do not know how I am to do it; how do I get in?’ ‘Silly goose,’ said the old woman. ‘The door is big enough; just look, I can get in myself!’ and she crept up and thrust her head into the oven. Then Gretel gave her a push that drove her far into it, and shut the iron door, and fastened the bolt. Oh! then she began to howl quite horribly, but Gretel ran away and the godless witch was miserably burnt to death.Gretel, however, ran like lightning to Hansel, opened his little stable, and cried: ‘Hansel, we are saved! The old witch is dead!’ Then Hansel sprang like a bird from its cage when the door is opened. How they did rejoice and embrace each other, and dance about and kiss each other! And as they had no longer any need to fear her, they went into the witch’s house, and in every corner there stood chests full of pearls and jewels. ‘These are far better than pebbles!’ said Hansel, and thrust into his pockets whatever could be got in, and Gretel said: ‘I, too, will take something home with me,’ and filled her pinafore full. ‘But now we must be off,’ said Hansel, ‘that we may get out of the witch’s forest.’When they had walked for two hours, they came to a great stretch of water. ‘We cannot cross,’ said Hansel, ‘I see no foot-plank, and no bridge.’ ‘And there is also no ferry,’ answered Gretel, ‘but a white duck is swimming there: if I ask her, she will help us over.’ Then she cried: ‘Little duck, little duck, dost thou see, Hansel and Gretel are waiting for thee? There’s never a plank, or bridge in sight, Take us across on thy back so white.’ The duck came to them, and Hansel seated himself on its back, and told his sister to sit by him. ‘No,’ replied Gretel, ‘that will be too heavy for the little duck; she shall take us across, one after the other.’ The good little duck did so, and when they were once safely across and had walked for a short time, the forest seemed to be more and more familiar to them, and at length they saw from afar their father’s house. Then they began to run, rushed into the parlour, and threw themselves round their father’s neck. The man had not known one happy hour since he had left the children in the forest; the woman, however, was dead. Gretel emptied her pinafore until pearls and precious stones ran about the room, and Hansel threw one handful after another out of his pocket to add to them. Then all anxiety was at an end, and they lived together in perfect happiness. My tale is done, there runs a mouse; whosoever catches it, may make himself a big fur cap out of it.\";\nconst lovecraft =\n  \"What I heard in my youth about the shunned house was merely that people died there in alarmingly great numbers. That, I was told, was why the original owners had moved out some twenty years after building the place. It was plainly unhealthy, perhaps because of the dampness and fungous growths in the cellar, the general sickish smell, the drafts of the hallways, or the quality of the well and pump water. These things were bad enough, and these were all that gained belief among the persons whom I knew. Only the notebooks of my antiquarian uncle, Doctor Elihu Whipple, revealed to me at length the darker, vaguer surmises which formed an undercurrent of folklore among old-time servants and humble folk; surmises which never travelled far, and which were largely forgotten when Providence grew to be a metropolis with a shifting modern population. The general fact is, that the house was never regarded by the solid part of the community as in any real sense 'haunted.' There were no widespread tales of rattling chains, cold currents of air, extinguished lights, or faces at the window. Extremists sometimes said the house was 'unlucky,' but that is as far as even they went. What was really beyond dispute is that a frightful proportion of persons died there; or more accurately, had died there, since after some peculiar happenings over sixty years ago the building had become deserted through the sheer impossibility of renting it. These persons were not all cut off suddenly by any one cause; rather did it seem that their vitality was insidiously sapped, so that each one died the sooner from whatever tendency to weakness he may have naturally had. And those who did not die displayed in constying degree a type of anemia or consumption, and sometimes a decline of the mental faculties, which spoke ill for the salubriousness of the building. Neighboring houses, it must be added, seemed entirely free from the noxious quality. This much I knew before my insistent questioning led my uncle to show me the notes which finally embarked us both on our hideous investigation. In my childhood the shunned house was vacant, with barren, gnarled and terrible old trees, long, queerly pale grass and nightmarishly misshapen weeds in the high terraced yard where birds never lingered. We boys used to overrun the place, and I can still recall my youthful terror not only at the morbid strangeness of this sinister vegetation, but at the eldritch atmosphere and odor of the dilapidated house, whose unlocked front door was often entered in quest of shudders. The small-paned windows were largely broken, and a nameless air of desolation hung round the precarious panelling, shaky interior shutters, peeling wall-paper, falling plaster, rickety staircases, and such fragments of battered furniture as still remained. The dust and cobwebs added their touch of the fearful; and brave indeed was the boy who would voluntarily ascend the ladder to the attic, a vast raftered length lighted only by small blinking windows in the gable ends, and filled with a massed wreckage of chests, chairs, and spinning-wheels which infinite years of deposit had shrouded and festooned into monstrous and hellish shapes. But after all, the attic was not the most terrible part of the house. It was the dank, humid cellar which somehow exerted the strongest repulsion on us, even though it was wholly above ground on the street side, with only a thin door and window-pierced brick wall to separate it from the busy sidewalk. We scarcely knew whether to haunt it in spectral fascination, or to shun it for the sake of our souls and our sanity. For one thing, the bad odor of the house was strongest there; and for another thing, we did not like the white fungous growths which occasionally sprang up in rainy summer weather from the hard earth floor. Those fungi, grotesquely like the vegetation in the yard outside, were truly horrible in their outlines; detestable parodies of toadstools and Indian-pipes, whose like we had never seen in any other situation. They rotted quickly, and at one stage became slightly phosphorescent; so that nocturnal passers-by sometimes spoke of witch-fires glowing behind the broken panes of the fetor-spreading windows. We never—even in our wildest Halloween moods—visited this cellar by night, but in some of our daytime visits could detect the phosphorescence, especially when the day was dark and wet. There was also a subtler thing we often thought we detected—a very strange thing which was, however, merely suggestive at most. I refer to a sort of cloudy whitish pattern on the dirt floor—a vague, shifting deposit of mold or niter which we sometimes thought we could trace amidst the sparse fungous growths near the huge fireplace of the basement kitchen. Once in a while it struck us that this patch bore an uncanny resemblance to a doubled-up human figure, though generally no such kinship existed, and often there was no whitish deposit whatever. On a certain rainy afternoon when this illusion seemed phenomenally strong, and when, in addition, I had fancied I glimpsed a kind of thin, yellowish, shimmering exhalation rising from the nitrous pattern toward the yawning fireplace, I spoke to my uncle about the matter. He smiled at this odd conceit, but it seemed that his smile was tinged with reminiscence. Later I heard that a similar notion entered into some of the wild ancient tales of the common folk—a notion likewise alluding to ghoulish, wolfish shapes taken by smoke from the great chimney, and queer contours assumed by certain of the sinuous tree-roots that thrust their way into the cellar through the loose foundation-stones.\";\nconst the_raven =\n  \"Once upon a midnight dreary, while I pondered, weak and weary, Over many a quaint and curious volume of forgotten lore— While I nodded, nearly napping, suddenly there came a tapping, As of some one gently rapping, rapping at my chamber door. '’Tis some visitor,' I muttered, 'tapping at my chamber door— Only this and nothing more.' Ah, distinctly I remember it was in the bleak December; And each separate dying ember wrought its ghost upon the floor. Eagerly I wished the morrow;—vainly I had sought to borrow From my books surcease of sorrow—sorrow for the lost Lenore— For the rare and radiant maiden whom the angels name Lenore— Nameless here for evermore. And the silken, sad, uncertain rustling of each purple curtain Thrilled me—filled me with fantastic terrors never felt before; So that now, to still the beating of my heart, I stood repeating '’Tis some visitor entreating entrance at my chamber door— Some late visitor entreating entrance at my chamber door;— This it is and nothing more.' Presently my soul grew stronger; hesitating then no longer, 'Sir,' said I, 'or Madam, truly your forgiveness I implore; But the fact is I was napping, and so gently you came rapping, And so faintly you came tapping, tapping at my chamber door, That I scarce was sure I heard you'—here I opened wide the door;— Darkness there and nothing more. Deep into that darkness peering, long I stood there wondering, fearing, Doubting, dreaming dreams no mortal ever dared to dream before; But the silence was unbroken, and the stillness gave no token, And the only word there spoken was the whispered word, 'Lenore?' This I whispered, and an echo murmured back the word, 'Lenore!'— Merely this and nothing more. Back into the chamber turning, all my soul within me burning, Soon again I heard a tapping somewhat louder than before. 'Surely,' said I, 'surely that is something at my window lattice;  Let me see, then, what thereat is, and this mystery explore— Let my heart be still a moment and this mystery explore;— ’Tis the wind and nothing more!' Open here I flung the shutter, when, with many a flirt and flutter, In there stepped a stately Raven of the saintly days of yore; Not the least obeisance made he; not a minute stopped or stayed he; But, with mien of lord or lady, perched above my chamber door— Perched upon a bust of Pallas just above my chamber door— Perched, and sat, and nothing more.  Then this ebony bird beguiling my sad fancy into smiling, By the grave and stern decorum of the countenance it wore, 'Though thy crest be shorn and shaven, thou,' I said, 'art sure no craven, Ghastly grim and ancient Raven wandering from the Nightly shore— Tell me what thy lordly name is on the Night’s Plutonian shore!' Quoth the Raven 'Nevermore.' Much I marvelled this ungainly fowl to hear discourse so plainly, Though its answer little meaning—little relevancy bore; For we cannot help agreeing that no living human being Ever yet was blessed with seeing bird above his chamber door— Bird or beast upon the sculptured bust above his chamber door, With such name as 'Nevermore.' But the Raven, sitting lonely on the placid bust, spoke only That one word, as if his soul in that one word he did outpour. Nothing farther then he uttered—not a feather then he fluttered— Till I scarcely more than muttered 'Other friends have flown before— On the morrow he will leave me, as my Hopes have flown before.' Then the bird said 'Nevermore.' Startled at the stillness broken by reply so aptly spoken, 'Doubtless,' said I, 'what it utters is its only stock and store Caught from some unhappy master whom unmerciful Disaster Followed fast and followed faster till his songs one burden bore— Till the dirges of his Hope that melancholy burden bore Of ‘Never—nevermore’.' But the Raven still beguiling all my fancy into smiling, Straight I wheeled a cushioned seat in front of bird, and bust and door; Then, upon the velvet sinking, I betook myself to linking Fancy unto fancy, thinking what this ominous bird of yore— What this grim, ungainly, ghastly, gaunt, and ominous bird of yore Meant in croaking 'Nevermore.' This I sat engaged in guessing, but no syllable expressing To the fowl whose fiery eyes now burned into my bosom’s core; This and more I sat divining, with my head at ease reclining On the cushion’s velvet lining that the lamp-light gloated o’er, But whose velvet-violet lining with the lamp-light gloating o’er, She shall press, ah, nevermore! Then, methought, the air grew denser, perfumed from an unseen censer Swung by Seraphim whose foot-falls tinkled on the tufted floor. 'Wretch,' I cried, 'thy God hath lent thee—by these angels he hath sent thee Respite—respite and nepenthe from thy memories of Lenore; Quaff, oh quaff this kind nepenthe and forget this lost Lenore!' Quoth the Raven 'Nevermore.' 'Prophet!' said I, 'thing of evil!—prophet still, if bird or devil!— Whether Tempter sent, or whether tempest tossed thee here ashore, Desolate yet all undaunted, on this desert land enchanted— On this home by Horror haunted—tell me truly, I implore— Is there—is there balm in Gilead?—tell me—tell me, I implore!' Quoth the Raven 'Nevermore.' 'Prophet!' said I, 'thing of evil!—prophet still, if bird or devil! By that Heaven that bends above us—by that God we both adore— Tell this soul with sorrow laden if, within the distant Aidenn, It shall clasp a sainted maiden whom the angels name Lenore— Clasp a rare and radiant maiden whom the angels name Lenore.' Quoth the Raven 'Nevermore.' 'Be that word our sign of parting, bird or fiend!' I shrieked, upstarting— 'Get thee back into the tempest and the Night’s Plutonian shore! Leave no black plume as a token of that lie thy soul hath spoken! Leave my loneliness unbroken!—quit the bust above my door! Take thy beak from out my heart, and take thy form from off my door!' Quoth the Raven 'Nevermore.' And the Raven, never flitting, still is sitting, still is sitting On the pallid bust of Pallas just above my chamber door; And his eyes have all the seeming of a demon’s that is dreaming, And the lamp-light o’er him streaming throws his shadow on the floor; And my soul from out that shadow that lies floating on the floor Shall be lifted—nevermore!\";\n\nconst seuss =\n  \"One fish Two fish Red fish Blue fish. Black fish Blue fish Old fish New fish. This one has a little star. This one has a little car. Say! What a lot Of fish there are. Yes. Some are red. And some are blue. Some are old. And some are new. Some are sad. And some are glad. And some are very, very bad. Why are they Sad and glad and bad? I do not know. Go ask your dad. Some are thin. And some are fat. The fat one has A yellow hat. From there to here, from here to there, Funny things Are everywhere.  Here are some Who like to run. They run for fun In the hot, hot sun. Oh me! Oh my! Oh me! Oh my! What a lot Of funny things go by. Some have two feet And some have four. Some have six feet And some have more. Where do they come from? I can’t say. But I bet they have come a long, long way. We see them come. We see them go. Some are fast. And some are slow. Some are high And some are low. Not one of them Is like another. Don’t ask us why. Go ask your mother. Say! Look at his fingers! One, two, three… How many fingers Do I see? One, two, three, four, Five, six, seven, Eight, nine, ten. He has eleven! Eleven! This is something new. I wish I had Eleven, too!\";\n\nconst test = \"A B A B A C\";\nconst starters = ['but', 'and',]\nconst markovModel = generateModel(bill_of_rights, the_raven, hansel_and_gretel, lovecraft, lovecraft, lovecraft, the_raven);\nconst output_text = generateText(markovModel, 'I');\n\ndocument.body.innerHTML = `\n    <style> \n    body {\n        font-family: 'Garamond';\n        background-color: #0f0f0f;\n        color: #efefef;\n        font-size: 22px;\n        line-height: 1.3\n    }\n    </style>\n    <main>\n        ${output_text}\n    </main\n`;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let sentenceCount = 0\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    if (current_word !== `'`) {\n    output_text += current_word;\n    }\n    \n    if (current_word.length > 60) {\n      sentenceCount++\n      if (sentenceCount > 6){\n          break;\n          \n      }\n    }\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      sentenceCount++\n      if (sentenceCount > 6){\n          break;\n          \n      }\n    }\n  }\n  return 'It was a dark and stormy night, ' + output_text + '.';\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tmaiyjqt65pgaqwaaawl",
        "width": 797,
        "height": 424,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/rvshumcuxu59fnzw5hmw",
        "width": 797,
        "height": 456,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ym5rrxwf0dk0pdp5qajv",
        "width": 797,
        "height": 422,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "GpJe7R5ThejTqA67f",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-05-05T00:19:29.541Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Started building the walls of the castle, this took me some time but I got through it after watching a tutorial.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jmx7t7hjvrajck3llcbn",
        "width": 676,
        "height": 646,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T00:41:14.623Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GpRYQAYYJoG6P6aq5",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-03T15:49:18.232Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Based on Graeme's instructions!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uzmfe2auxnacfmyb9aex",
        "width": 595,
        "height": 842,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T17:15:42.64Z"
      },
      {
        "category": "pretty",
        "voter_id": "ThhLMCZBENKtw2dT6",
        "created_at": "2023-02-03T17:18:39.039Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "GwvKommrXcKiLoEeX",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-03T04:26:25.38Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Based on Keren's instruction set! :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tbkv2s4zowoeou4pjvrz",
        "width": 3389,
        "height": 2400,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-03T15:42:05.991Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "H7WEhjD2ony5DbXtW",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-05T05:49:00.485Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "not really 3D, but i did try to make this 2D sketch appear like it moves in 3D space.",
    "code": "let rects = []; //an array for the x and y positions of each shape\nlet rects1 = []; //anti-clockwise direction\nlet stepSize = 50;\n\n\nfunction setup() {\n  createCanvas(800, 800);\n  for (let i = 0; i < width; i++) {\n    rects.push({ x: i * stepSize, y: i * stepSize, angle: 0, delay: i * 500 }); \n  }\n  \n   for (let i = 0; i < width; i++) {\n    rects1.push({ x: width-i * stepSize, y: i * stepSize, angle: 0, delay: i * 500 });\n  }\n  rectMode(CENTER);\n  colorMode(HSB);\n  noStroke();\n}\n\nfunction draw() {\n  background(277,15,100);\n\n\nlet w = width/5;\nlet h = height/20;\n colorMode(HSB, 360, 100, 100, 1.0);\n  for (let i = 0; i < rects.length; i++) {\n    \n    const { x, y, angle, delay } = rects[i];\n    if (millis()*5 > delay) {\n      rects[i].angle += 1;\n    }\n    push();\n    translate(x, y);\n    rotate(radians(angle));\n      let colorValue = map(x, 0, rects.length, 290, 240); // map the index of the position to a color value\n    fill(colorValue, 60, 100,1);\n\n    rect(0, 0, w*angle*0.01, h);\n    pop();\n  }\n  \n\n for (let i = 0; i < rects1.length; i++) {\n    const { x, y, angle, delay } = rects1[i];\n    if (millis()*5 > delay) {\n      rects1[i].angle -= 1;\n    }\n    push();\n    translate(x, y);\n    rotate(radians(angle));\n    let colorValue = map(x, 0, rects.length, 240, 290); // map the index of the position to a color value\n    fill(colorValue, 60, 100,1);\n\n    rect(0, 0, w*angle*0.01, h);\n    pop();\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gbvmrg9dpjdunda9ikwb",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xydbltnzllehomaurht3",
        "width": 1600,
        "height": 1600,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/r3udrfjtfinaexqn2pam",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:24.613Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:15:49.38Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "H9bXAWNqHwWCBeeq7",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-28T02:21:40.166Z",
    "posted": true,
    "lesson": "API",
    "description": "Going analogue with a sketch because it's something I wanted to do for a while - this is watercolor on a black paper which gives a very interesting \"chalky\" effect. I find this particularly interesting because of how unusual it is compared to using water on regular white watercolor paper. I think watercolors are a great example of controlled randomness.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lkjsyhxmkpwmdzkgnxlf",
        "width": 2784,
        "height": 1746,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wgs9ytovg6huamclsvhc",
        "width": 2866,
        "height": 1575,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-28T03:08:41.207Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "HBz6CuGwNGioDukmw",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-13T21:21:49.462Z",
    "posted": true,
    "lesson": "Text",
    "description": "Some quite awful Markov Chain story generation with Abha and Shristi",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fl8vna9kxxjgv5ae6iwb",
        "width": 1478,
        "height": 524,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dhkjjdglqr1bnvdxyxch",
        "width": 1478,
        "height": 540,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "HEdkpcWsSyErqkqNE",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-14T13:44:51.907Z",
    "posted": true,
    "lesson": "Text",
    "description": "Using reading Peephole as a way of understand ambience.",
    "code": "var img;\n\nfunction preload() {\n  img = loadImage(\"alice.png\");\n}\n\nfunction setup() {\n  createCanvas(720, 800);\n  pixelDensity(1);\n  img.loadPixels();\n  loadPixels();\n}\n\nfunction draw() {\n  for (var x = 0; x < img.width; x++) {\n    for (var y = 0; y < img.height; y++ ) {\n      // Calculate the 1D location from a 2D grid\n      var loc = (x + y*img.width)*4;\n      // Get the R,G,B values from image\n      var r,g,b;\n      r = img.pixels[loc];\n      // Calculate an amount to change brightness based on proximity to the mouse\n      var maxdist = 50;\n      var d = dist(x, y, mouseX, mouseY);\n      var adjustbrightness = 255*(maxdist-d)/maxdist;\n      r += adjustbrightness;\n      // Constrain RGB to make sure they are within 0-255 color range\n      r = constrain(r, 0, 255);\n      // Make a new color and set pixel in the window\n      //color c = color(r, g, b);\n      var pixloc = (y*width + x)*4;\n      pixels[pixloc] = r;\n      pixels[pixloc+1] = r;\n      pixels[pixloc+2] = r;\n      pixels[pixloc+3] = 255;\n    }\n  }\n  updatePixels();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ktjyuoajapx8g6rq69oz",
        "width": 512,
        "height": 750,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T15:01:03.452Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:16:28.447Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-21T16:29:41.177Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "HJ4WQnDG3FbwEpwXa",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-06T20:58:59.696Z",
    "posted": true,
    "lesson": "Random",
    "description": "Malevich-inspired Challenge",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bkhtejltwndw6qyd9xd9",
        "width": 988,
        "height": 1432,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T21:11:40.762Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-06T21:24:42.085Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-07T00:15:20.99Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-07T01:42:21.474Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-07T20:15:36.227Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "HNsoqpnKwWRFMDriz",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-03T04:17:23.778Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "my challenge 2 extension!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zoflv6sdp2iasakd2xj9",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T04:47:00.063Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "HZfht7Rf8HRD5qnZd",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-05T03:27:51.011Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Inspired by Disney's castle - Used sine waves to create varying tower heights",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zpmcwhll09cepznculft",
        "width": 2166,
        "height": 1330,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/o2u98qjlvjccmaavuimg",
        "width": 2230,
        "height": 1366,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/pofl6z9l92kgtehghwre",
        "width": 1994,
        "height": 1332,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T04:31:31Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Hg8GzPh6ojkrnx6Jg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-09T00:20:05.147Z",
    "posted": true,
    "lesson": "Random",
    "description": "This was a goofy pair sketch that I did with Graeme. Basically, we use a deck system to pick a series of Garfield panels and then put them side by side in a 1x3 comic strip. This led to some pretty funny comics that really didn't feel too far off from Garfield's vibe.",
    "code": "//I actually uploaded this site as a github microsite\n\n//look at the code: https://github.com/avs-codes/comp-form-spring-2023/tree/main/garfield_deck\n\n//look at the site: https://avs-codes.github.io/comp-form-spring-2023/garfield_deck/index.html",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fhjyld0kqv7pjzgdwtcj",
        "width": 1930,
        "height": 1033,
        "format": "webm",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "nerdy",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:48:33.037Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "HgrLjt4sKEmkKkuPa",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-07T15:37:47.34Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Help the flower grow 🥺\n\nI tried to reset the game when the user presses the spacebar, and it ended up doing something chaotic but kind of cute and fun. I'll figure out how to reset it properly, but just thought I should share the chaos.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mbhnz5dm1yyovwhrdr7s",
        "width": 395,
        "height": 397,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-07T16:08:15.556Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T20:35:54.151Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "HphHiK2QxL78HTTqe",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-21T04:46:45.458Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "SVG output for Reshma. Had a lot of fun playing with star paths and colours.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar pathInner = [];\nvar pathOuter = [];\nvar radius1 = 7;\nvar col = [\n    'red',\n    'green',\n    'blue',\n    'yellow',\n    'orange',\n    'purple',\n    'cyan',\n    'magenta'\n];\nvar num = col.length;\nvar points = num*1.5;\n\nfor (i= 0; i<num; i++){\n    var radius2 = (radius1 * 30) + 20 + (i%num)*7;\n    pathOuter[i] = new Path.Star(view.center, points, radius1, radius2);\n    pathOuter[i].strokeColor = col[i];\n    // pathOuter[i].fillColor = col[i];\n    // pathOuter[i].blendMode = 'screen';\n    // pathOuter[i].opacity = 0.2;\n    pathOuter[i].rotate(i*360/(points*num));\n    pathOuter[i].smooth(1);\n}\n\nfor (i= 0; i<num; i++){\n    var radius2 = (radius1 * 30) - (i%num)*7;\n    pathInner[i] = new Path.Star(view.center, points, radius1, radius2);\n    pathInner[i].strokeColor = col[i];\n    // pathInner[i].fillColor = col[i];\n    // pathInner[i].blendMode = 'screen';\n    // pathInner[i].opacity = 0.2;\n    pathInner[i].rotate(i*360/(points*num));\n    pathInner[i].smooth(1);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pemmrm1q1araeksfdb65",
        "width": 1440,
        "height": 1403,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-21T07:08:19.563Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:15.817Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "HxB4vSM2RRdRJ56Mh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-09T18:02:36.091Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Pixel generated sketch that I handed off to Alex for the pair challenge",
    "code": "function setup() {\n  createCanvas(400, 400);\n  pixelDensity(1);\n}\n\nfunction draw() {\n  loadPixels();\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      let index = (x + y * width) * 4;\n      let r = random(255);\n      let g = random(255);\n      let b = random(255);\n      let a = 255;\n      if (x % 20 == 0 || y % 20 == 0) {\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 255;\n      }\n      if (x % 40 == 0 || y % 40 == 0) {\n        r = 255;\n        g = 255;\n        b = 255;\n        a = 255;\n      }\n      if (x % 60 == 0 || y % 60 == 0) {\n        r = 255;\n        g = 0;\n        b = 0;\n        a = 255;\n      }\n      if (x % 80 == 0 || y % 80 == 0) {\n        r = 0;\n        g = 255;\n        b = 0;\n        a = 255;\n      }\n      pixels[index + 0] = r;\n      pixels[index + 1] = g;\n      pixels[index + 2] = b;\n      pixels[index + 3] = a;\n    }\n  }\n  updatePixels();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/h56waxozg95qzhkuwy2j",
        "width": 400,
        "height": 400,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:48.362Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "J3HBHkcYLDXSvys5L",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-14T08:28:42.809Z",
    "posted": true,
    "lesson": "Text",
    "description": "WEEK 10: (1/4): WHAT MY CAT DID GENERATOR. I swear I did something like this in a previous class so I just tried to do it again.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mzor9jbox78wl5lzeqmj",
        "width": 986,
        "height": 208,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qffibesoycu7sph9hjb6",
        "width": 878,
        "height": 196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sxqmrbhlsndkkccpdgal",
        "width": 852,
        "height": 226,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "JAk9AcshZE6W5gfse",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-31T14:38:41.833Z",
    "posted": true,
    "lesson": "Music",
    "description": "Logging 2 hours worth of failures across editors...a JOURNEY:\n1) tried to set up a polysynth activated on mouseclick on codePen. big whoops\n2) followed a tutorial to source libraries that together can set up an entire synth keyboard with interactive background...the html wouldn't load \n3) for whatever reason, even fft analyzing didn't work out for input audio so couldn't visualize music frequencies. (this one I might be able to figure out though!)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vdpdep7tihnj91ba5b1f",
        "width": 1512,
        "height": 1298,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zby4qmqhzjbkgc0qlmrj",
        "width": 1588,
        "height": 1400,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jna1ox5prrjno6ti1oaj",
        "width": 1244,
        "height": 1252,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "JAxr7XmeqxBaKiMxN",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-01-29T04:48:57.121Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Instruction set for John and Graeme!\nHappy creating :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jrpzpl0ju1zcldqjqxec",
        "width": 1221,
        "height": 782,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "JDLZoHpyJjo8ysHF9",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-12T07:51:19.694Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Played around with Comp Form alum Angela Zhu's code because the forms they'd made were beautiful I just had to try!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup(){\n    createCanvas(600, 600);\n    noFill();\n    //stroke(255);\n    background(0);\n    noLoop();\n    myTurtle = new Turtle();\n}\n\nfunction draw(){\n\n      for (let n = 0; n < 30; n++ ){\n        Umbrella(); \n        // myTurtle.turnLeft(-70);\n        // Umbrella();\n        // myTurtle.turnRight(70);\n     }\n}\n\nfunction Umbrella(){\n    \n    myTurtle.pushState();\n    strokeWeight(1.5)\n    //stroke('#F4F269')\n    myTurtle.popState();\n    \n    myTurtle.penUp();\n    myTurtle.moveTo(300, 300);\n    myTurtle.penDown();\n    \n    \n    stroke('#DBCBD8')\n    for (let i = 0; i < 28; i++){\n        myTurtle.moveForward(10);\n        myTurtle.turnRight(6);\n        \n    }\n    stroke('#564787')\n    for (let i = 0; i < 30; i++){\n        myTurtle.moveBackward(3);\n        myTurtle.turnRight(-2);\n    }\n    \n    stroke('#6B40E0')\n    for (let i = 0; i < 28; i++){\n        myTurtle.moveForward(5);\n        myTurtle.turnRight(-2);\n    }\n    stroke('#ECCEFF')\n    for (let i = 0; i < 30; i++){\n        myTurtle.moveBackward(6);\n        myTurtle.turnLeft(-2);\n    }\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kiqud25pgqjbsw27es8a",
        "width": 894,
        "height": 896,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/w4wtsmyllicpffrmysce",
        "width": 900,
        "height": 896,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lwu47xpxa9mqnszt8t7i",
        "width": 892,
        "height": 896,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:16:38.321Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "JRmdjgaEf8YnbBveZ",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-24T03:19:31.996Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "experimenting with blend modes in paper.js",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qeoxgn9fjmkhbabgo1jv",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:01.01Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "JbcFPwaWyHuw4tSMK",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-12T16:03:13.692Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "My turtle garden! These flowers are more of a flower / lollipop hybrid. lol. I would like to add some element of randomness to the height of the stem and petals. I would also probably add some more detail to the stem. WOO GO COMP FORM!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qe7wvlqnu6qj9e8sra5k",
        "width": 1152,
        "height": 626,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "JeyYNNGRryCuC3SDF",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-25T21:59:14.605Z",
    "posted": true,
    "lesson": "API",
    "description": "Using this week as a free week to re-explore some past topics. I wanted to re-delve into the play chapter and continue exploring that a bit more. This sketch though didn't really go anywhere unfortunately, thinking I may expand on this if I have some inspiration later this week.",
    "code": "let sprite;\nlet velocity;\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  boxleft = new Sprite();\n  boxleft.x = 15;\n  boxleft.width = 15;\n  boxleft.height = 500;\n  boxleft.collider = 'static';\n  \n  boxright = new Sprite();\n  boxright.x = 585;\n  boxright.width = 15;\n  boxright.height = 500;\n  boxright.collider = 'static';\n  \n  boxup = new Sprite();\n  boxup.y = 15;\n  boxup.width = 500;\n  boxup.height = 15;\n  boxup.collider = 'static';\n  \n  boxdown = new Sprite();\n  boxdown.y = 585;\n  boxdown.width = 500;\n  boxdown.height = 15;\n  boxdown.collider = 'static';\n}\n\nfunction draw() {\n  background(220);\n  \n  sprite = new Sprite();\n  sprite.width = 50;\n  sprite.height = 50;\n  \n  sprite.x = mouseX;\n  sprite.y = mouseY;\n  sprite.rotation = 30 + frameCount;\n  \n  for(i = 0; i < width; i++){\n    velocity = i * noise(i) / 25;\n    \n    sprite.vel.x = random(-velocity, velocity);\n    sprite.vel.y = random(-velocity, velocity);\n  }\n  \n  if(sprite.collides(boxup)) {\n    sprite.remove();\n  }\n}\n\nfunction mousePressed() {\n  noLoop();\n}\n\nfunction mouseReleased() {\n  loop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kjgq3ca4fyboqfhjwttu",
        "width": 897,
        "height": 897,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-26T02:27:41.665Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-26T03:10:24.149Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "JfL3Bkh24zo6XACaP",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-14T14:10:51.816Z",
    "posted": true,
    "lesson": "Text",
    "description": "Oh how I love lit exterminators! I made a little design prompt generator.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sds4p168optqqwr4ehqz",
        "width": 2178,
        "height": 1448,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/quksbmbnqmwgh5jrpffd",
        "width": 2194,
        "height": 1462,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/od0fu3ns7cazflag6ywj",
        "width": 2160,
        "height": 1374,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T15:01:00.913Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "JhAXPxWN8cEzvfntg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-18T05:43:54.979Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I was really curious about how helpful ChatGPT might be in other applications I use. I like to work in TouchDesigner and thought it might be a good challenge so I opted for that. I went for the intermediate task of building a small hillside. \n\nInitially, it was quite fascinating that GPT was able to tell me the different operator types and the specific ones that I would need in order to create the effect of a hillside. However, it very quickly started to break down. \n\nFirstly, it started inventing new operators that aren't in the software 😭. It also got the purposes of several operators wrong which made the process quite annoying overall. \n\nWhat worked incredibly well though, was understanding abstractly the approach I needed and then just using my TouchDesigner knowledge to implement it.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cpipfirjppnn8p5lfty8",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/v62kpiedqsn9r0w1x6ff",
        "width": 1685,
        "height": 750,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-18T06:14:45.926Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-18T18:00:25.517Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-19T19:24:56.691Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "JhbdRCzn3XhoZwn2x",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-03T17:33:39.377Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Made a \"friend\" for the minecraft chickens... 🦊😋",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zoonf2o265pxslxx14tz",
        "width": 906,
        "height": 804,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vbdltsxgqmmsk2qjtj4z",
        "width": 1036,
        "height": 912,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tlndc24y8vlwfdlgsoeh",
        "width": 774,
        "height": 876,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-03T19:35:57.119Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:45.684Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-04T05:08:09.526Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-05T00:55:03.027Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T01:39:56.512Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "JigpKaNMrNdCzR2sM",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-25T23:35:58.004Z",
    "posted": false,
    "lesson": "API",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "JimFHnuKjiH8uffPX",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "created_at": "2023-01-29T19:45:29.433Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "This is my interpretation of Isha's instructions!😃",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tddubpuy9layx7bhhh4h",
        "width": 2909,
        "height": 2480,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-30T01:55:07.764Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-01T09:40:14.173Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Jp5r9fSqpbS4yx4z9",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-10T02:40:22.923Z",
    "posted": true,
    "lesson": "Random",
    "description": "Improved my initial Rothko Sketch! I just added some functionality to draw a few thousand circles with filled randomly according to the box they fill in. I also used an erode and blur filter to get some really interesting textures! I am also now a firm believer HSL is hands down the best color mode.",
    "code": "// I opted to use a class just because I find them more convenient to work with\nclass rothkoGenerator {\n\t\tconstructor() {\n//\t\t\tthis.rectCount = math.floor(math.random()+2);\n//this is where the coinflip is made to choose between a high or low contrast composition\n\t\t\tthis.paletteContrast = round(random());\n\t\t\tthis.colorList = [];\n//i then track the color values in the constructor\t\t\t\n          this.bkgColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.oneColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.twoColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n// I also want to implement the possibility for compositions with 3 rectangles but not quite there!          \n//\t\t\tthis.threeColor = {\n//\t\t\t\th: 0,\n//\t\t\t\ts: 0,\n//\t\t\t\tl: 0\n//\t\t\t}\n            this.oneBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }\n            this.twoBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }          \n\t\t\tthis.margin = 50;\n\t\t}\n// this could definitely be optimized but the basic idea is that I generate a random background color\n// I cap the saturation at 80 and light at 90 so the program doesn't get super neon colors which isn't like Rothko\n\t\tgenerateColors() {\n\t\t\tthis.bkgColor.h = floor(random()*360);\n\t\t\tthis.bkgColor.s = floor(random()*80);\n\t\t\tthis.bkgColor.l = floor(random()*80);\n// then, dependent on the contrast value I produce the colors for the two rectangles based off of the background color\n//a high-contrast composition uses end bias for the color whereas a low-contrast composition uses middle bias\n          if (this.paletteContrast === 1) {\n\t\t\tthis.oneColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t} else {\n\t\t\tthis.oneColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t}\n\t\t}\n  \n\t\tendBias() {\n\t\t\tlet value = random() + random();  \n\t\t\tvalue = value - 1;\n\t\t\tif (value < 0) value += 2;\n\t\t\treturn value;\n\t\t}\n  \n\t\tmiddleBias() {\n\t\t\tlet value = (random() + random() + random()) / 2;\n\t\t\treturn value;\n        }\n  // this is just a way to randomize the position of the line that bounds the two rectangles       \n        divideCanvas() {\n          this.oneBox.yMiddle = floor(windowHeight / 2) + (this.endBias()*100);\n          this.twoBox.yMiddle = windowHeight-(floor(windowHeight / 2) - this.oneBox.yMiddle);\n        }\n  //this is a function i use to create uneven texture in the final composition\n  //build off of Chris' idea of using many circles of a light opacity to blend them together\n        texturize() {\n            let randDiameter = random()*20+10;\n          for (let i=0; i<2000; i++) {\n            \n            \n            let randOneBoxX = (random() * (windowWidth - this.margin*1.5)) + (this.margin/2 + randDiameter/2);\n            let randOneBoxY = (random() * ((this.oneBox.yMiddle - randDiameter))) + (this.margin/2 + randDiameter/2); \n            \n            let oneBoxCircleColorH = floor(this.middleBias()*3+this.oneColor.h);\n\t\t\tlet oneBoxCircleColorS = floor(this.middleBias()*5+this.oneColor.s+2);\n\t\t\tlet oneBoxCircleColorL = floor(this.middleBias()*5+this.oneColor.l+2);\n            \n            fill(oneBoxCircleColorH, oneBoxCircleColorS, oneBoxCircleColorL, 40);\n            circle(randOneBoxX, randOneBoxY, randDiameter);\n          }\n            for (let i=0; i<1000; i++) {\n            let randTwoBoxX = (random() * (windowWidth - this.margin*1.5)) + (this.margin/2 + randDiameter/2);\n            //line 101-102 single-handedly took me the longest to solve. Damn math puzzles >:(\n            let twoBoxHeight = ( ( windowHeight - this.oneBox.yMiddle - (this. margin * 2)  ));\n            let randTwoBoxY = random() * twoBoxHeight + this.oneBox.yMiddle + this.margin;\n            \n            let twoBoxCircleColorH = floor(this.middleBias()*3+this.twoColor.h);\n\t\t\tlet twoBoxCircleColorS = floor(this.middleBias()*5+this.twoColor.s+2);\n\t\t\tlet twoBoxCircleColorL = floor(this.middleBias()*5+this.twoColor.l+2);\n            \n            fill(twoBoxCircleColorH, twoBoxCircleColorS, twoBoxCircleColorL, 40);\n            circle(randTwoBoxX, randTwoBoxY, randDiameter);\n                                                                                                   \n          }\n        }\n  //  here is where the rectangles are actually drawn and filled in\n  // I used quad() so I could be more granular with each point of the rectangle\n        draw() {\n          background(this.bkgColor.h, this.bkgColor.s, this.bkgColor.l);\n          noStroke()\n          fill(this.oneColor.h, this.oneColor.s, this.oneColor.l);\n          quad(this.margin, this.margin, \n               windowWidth - this.margin, this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle, \n               this.margin, this.oneBox.yMiddle\n              );\n          \n          fill(this.twoColor.h, this.twoColor.s, this.twoColor.l);\n          quad(this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, windowHeight - this.margin, \n               this.margin, windowHeight - this.margin\n              );\n          filter(BLUR, 3)\n        }\n          \n\t}\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tcolorMode(HSL);\n    frameRate(0.5);\n}\n\nfunction draw() {\n    let rothko = new rothkoGenerator();\n    rothko.generateColors();\n    rothko.divideCanvas();\n    rothko.draw();\n    rothko.texturize();\n    for(let i = 0; i<6; i++)  {\n      filter(ERODE);\n\n    }\n    filter(BLUR, 1);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lp0kyyay9ii8gg8u6txe",
        "width": 695,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/azfpf4fdhjeu3pevow54",
        "width": 695,
        "height": 783,
        "format": "webm",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/p1ptwh3aa3tgednjijkc",
        "width": 695,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "JsMvLdT5d34M2P6Z4",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-16T00:45:27.824Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Some of my favourite images from playing around on Midjourney.  \n  \nAll images are from a variation of the prompt \"close up of nose, wacky nose, brown woman, cartoon, abstract art, ai art, computationally generated art, unrealistic, alien features, human, close up, weird expression, droopy eyes, happy face, sparkling, rich, bluish purple light, zoomed in, red hair.\"   \n  \n \nSome observations:  \n• when I said 'eyes not visible', it gave me even more prominent eyes  \n• default images were always white men until I specified that I didn't want them to be  \n• variations became more and more similar the more detailed prompts I gave",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cz55qbrmjwt2vuyuiqwy",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/egxqtggqiyki366jz8xc",
        "width": 1034,
        "height": 1034,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pjlypez8ziyparlwbe00",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-16T15:53:21.806Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-16T21:24:26.815Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-17T01:15:55.728Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-19T07:15:24.846Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "JzjJ8Rdw2igK5tLXm",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-24T04:17:29.122Z",
    "posted": true,
    "lesson": "Params",
    "description": "I was inspired by our in-class spiral activity and tried to integrate it with parameters. I found a few online references as a starting point and played around with the code to create this",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pnfimhhq8buh3brufb0m",
        "width": 640,
        "height": 372,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jvg5b1bemvsfhlvsedwp",
        "width": 2546,
        "height": 1354,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gmvd5c2o7v0iqflrm2nx",
        "width": 2552,
        "height": 1350,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T14:21:52.605Z"
      }
    ],
    "comments": [
      {
        "comment": "Love this! Please share the code if you can...",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T14:27:10.317Z"
      }
    ]
  },
  {
    "_id": "KCg3pJhqac575vNvf",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-17T03:19:48.496Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Pair Challenge: I loved the sketch that Reshma sent me, this is my reinterpretation of it. I had a lot of fun compositing!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xvhi82rvwkeka0z0ca98",
        "width": 1735,
        "height": 1735,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ybj0tvdtd8iylkqdua9r",
        "width": 960,
        "height": 962,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:39:21.223Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-17T03:54:22.413Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-17T05:00:38.765Z"
      }
    ],
    "comments": [
      {
        "comment": "Crazy!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:36:27.221Z"
      }
    ]
  },
  {
    "_id": "KFpJkj9Gd5y2oAwtF",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-24T05:21:53.352Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Ring Experiment with Paper.js",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// Define the colors to use\nvar colors = [\n  '#ef476f',\n  '#ffd166',\n  '#06d6a0',\n  '#118ab2'\n];\n\nfor (var i = 0; i < 180; i++) {\n  // Create a new rectangle with random size and position\n  var size = new Size(Math.random() * 150, Math.random() * 150);\n  var point = new Point(Math.random() * view.size.width, Math.random() * view.size.height);\n  var rectangle = new Rectangle(point, size);\n  \n  // Choose a random color from the array of colors\n  var color = colors[Math.floor(Math.random() * colors.length)];\n  \n  // Create a new Path object and draw an ellipse with the chosen color\n  var path = new Path.Ellipse(rectangle);\n  path.strokeColor = color;\n  \n  // Rotate the ellipse\n  path.rotate(i * 10);\n  \n  // Scale the stroke width of the ellipse based on its size\n  path.strokeWidth = size.width / 50;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ynkc0e2xdnppgh0uqncg",
        "width": 1184,
        "height": 1026,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-04-14T12:08:35.337Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "KJf9gQpZnHJurXRHD",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-12T17:30:42.487Z",
    "posted": true,
    "lesson": "Text",
    "description": "Was really fascinated by how powerful just a simple Markov model can be. I made a model using 3 of Shakespeare's sonnets and used it to generate poetry. The confusing sentences actually work quite well here since it feels just like reading Shakespeare 😂",
    "code": "const sonnet1 =\n\"Shall I compare thee to a summer’s day? Thou art more lovely and more temperate: Rough winds do shake the darling buds of May, And summer’s lease hath all too short a date; Sometime too hot the eye of heaven shines, And often is his gold complexion dimm'd; And every fair from fair sometime declines, By chance or nature’s changing course untrimm'd; But thy eternal summer shall not fade, Nor lose possession of that fair thou ow’st; Nor shall death brag thou wander’st in his shade, When in eternal lines to time thou grow’st: So long as men can breathe or eyes can see, So long lives this, and this gives life to thee.\"\n\nconst sonnet2 =\n\"Let those who are in favour with their stars Of public honour and proud titles boast, Whilst I, whom fortune of such triumph bars Unlook’d for joy in that I honour most. Great princes’ favourites their fair leaves spread But as the marigold at the sun’s eye, And in themselves their pride lies buried, For at a frown they in their glory die. The painful warrior famoused for fight, After a thousand victories once foiled, Is from the book of honour razed quite, And all the rest forgot for which he toiled: Then happy I, that love and am beloved, Where I may not remove nor be removed.\"\n\nconst sonnet3 = \n\"My tongue-tied Muse in manners holds her still, While comments of your praise richly compiled, Reserve thy character with golden quill, And precious phrase by all the Muses filed. I think good thoughts, whilst others write good words, And like unlettered clerk still cry ‘Amen’ To every hymn that able spirit affords, In polished form of well-refined pen. Hearing you praised, I say ”tis so, ’tis true,’ And to the most of praise add something more; But that is in my thought, whose love to you, Though words come hindmost, holds his rank before. Then others, for the breath of words respect, Me for my dumb thoughts, speaking in effect.\"\n\nconst markovModel = generateModel(sonnet1, sonnet2, sonnet3);\nconst output_text1 = generateText(markovModel);\nconst lineBreak =  output_text1.replace(/,/g, '<br>')\ndocument.head.innerHTML = \n`\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Prata&display=swap\" rel=\"stylesheet\">\n`\n\ndocument.body.innerHTML = \n`\n<style>\n    body {\n        font-family: 'Prata', serif;\n        font-size: 28px;\n        margin-bottom: 30px;  \n    }\n</style>\n    ${lineBreak} \n`\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ybfbmtdxmjornpoade3z",
        "width": 797,
        "height": 256,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xuyewutetmmqnrrvloth",
        "width": 797,
        "height": 496,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ovyxp5mgb9jqerhctuwo",
        "width": 797,
        "height": 207,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "KJno7oneA339hF6CF",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-09T01:09:24.837Z",
    "posted": true,
    "lesson": "Random",
    "description": "Worked with Sora on the Pair Challenge, created 10 images that randomly appear in a deck-like fashion. It took us a bit since we had to work through even getting the deck set up, but we finally pulled through and created this.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nvar deck = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar deckPos = 0;\nvar d;\n\nfunction setup() {\n  createCanvas(800, 800);\n  deck = shuffle(deck);\n  frameRate(.5);\n}\n\nfunction draw() {\n  for(let i = 0; i < 10; i++) {\n    var d = deck[deckPos];\n    drawScenes(d);\n\n    deckPos++;\n    if (deckPos > deck.length - 1) {\n      deck = shuffle(deck);\n      deckPos = 0;\n    }\n\n    return d;\n  }\n}\n\nfunction drawScenes(dVar) {\n  switch(dVar){\n    case 0:\n      scene0();\n      break;\n    case 1:\n      scene1();\n      break;\n    case 2:\n      scene2();\n      break;\n    case 3:\n      scene3();\n      break;\n    case 4:\n      scene4();\n      break;\n    case 5:\n      scene5();\n      break;\n    case 6:\n      scene6();\n      break;\n    case 7:\n      scene7();\n      break;\n    case 8:\n      scene8();\n      break;\n    case 9:\n      scene9();\n      break;\n  }\n}\n\nfunction scene0() {\n  background(\"red\");\n  fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 20;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10)\n      ellipse(x+space/2,y+space/2,10)\n    }\n  }\n}\n\n\nfunction scene1() {\n  background(\"orange\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 25;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene2() {\n  background(\"yellow\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 30;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene3() {\n  background(\"green\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 35;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene4() {\n  background(\"blue\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 40;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene5() {\n  background(\"purple\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 45;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene6() {\n  background(\"black\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 50;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene7() {\n  background('grey');\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 55;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene8() {\n  background(\"lightgreen\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 60;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}\n\nfunction scene9() {\n  background(\"pink\");\n   fill(\"white\");\n  strokeWeight(0);\n  //rectMode(CENTER);\n  let space = 65;\n  for (x=0;x<width+50;x+=space){\n    for (y=0;y<height+50;y+=space){\n      // line(x,y,x+space,y);\n      // line(x,y,x,y+space);\n      ellipse(x,y,10);\n      ellipse(x+space/2,y+space/2,10);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/k5mlcfrywxazqy4oek4o",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "nerdy",
        "voter_id": "EZGFdZAsGvyhaQ3Gi",
        "created_at": "2023-02-09T01:19:16.337Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "KRAywSaEdu8dTjTbz",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-07T03:02:22.805Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Pong with Birdy!\nWant to improve on this but finally figured out how to make animation collides with sprite sheets.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\n\nlet topwall;\nlet leftwall;\nlet rightwall;\nlet wallwidth = 20;\n\nlet object;\nlet objectwidth = 20;\n\n\n// let playerwall;\n// let playerwallwidth = 100;\n\nlet gamespeed = 5;\nlet score = 0;\nlet bouncesound;\n\nlet mode = 0;\n\nlet birdSpriteSheet;\nlet birdAnimation;\nlet birdObj;\n\n\n\nfunction preload() {\n\n  birdSpriteSheet = loadSpriteSheet('assets/flying.png', 182, 150, 8);\n\n // birdAnimation = loadAnimation(birdSpriteSheet);\n\nbirdObj = createSprite(100, 700);\nbirdObj.addAnimation(\"flap\", birdSpriteSheet);\n   birdObj.immovable = true;\n\n\n\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n\n  // background(30);\n\n//drawSprites();\n\n\n  object = createSprite(width / 2, 50, objectwidth, objectwidth);\n  object.setSpeed(gamespeed, random(360));\n\n  walls = new Group();\n  topwall = createSprite(width / 2, wallwidth / 2, width, wallwidth);\n  topwall.immovable = true;\n  walls.add(topwall);\n  leftwall = createSprite(wallwidth / 2, height / 2, wallwidth, height);\n  leftwall.immovable = true;\n  walls.add(leftwall);\n  rightwall = createSprite(width - wallwidth / 2, height / 2, wallwidth, height);\n  rightwall.immovable = true;\n  walls.add(rightwall);\n\n  // playerwall = createSprite(width / 2, height - wallwidth / 2, playerwallwidth, wallwidth);\n  // playerwall.immovable = true;\n\n\n}\n\nfunction draw() {\n\n\n  background(30);\n\n  // Show the animation\n  //animation(birdAnimation, 100, 700);\n\n  //show the Sprite objects \n\n  object.bounce(walls);\n  object.bounce(birdObj);\n\n   drawSprites();\n\n  if (keyIsDown(37)) {\n    birdObj.position.x -= gamespeed;\n  }\n  if (keyIsDown(39)) {\n    birdObj.position.x += gamespeed;\n  }\n  if (birdObj.position.x < birdObj / 2) {\n    birdObj.position.x = birdObj / 2;\n  }\n  if (birdObj.position.x > width - birdObj / 2) {\n    birdObj.position.x = width - birdObj / 2;\n  }\n\n  push();\n  fill(255);\n  textAlign(LEFT);\n  text(\"Score: \" + score, 20, 30);\n  textAlign(RIGHT);\n  //text(\"Use ← → to navigate\", width - 20, 30);\n  pop();\n\n   if (object.position.y >= height - wallwidth - objectwidth / 2 && object.position.y < 1 + height - wallwidth - objectwidth / 2) {\n     console.log(\"bounce\");\n     score++;\n     bouncesound.play();\n   }\n\n   if (object.position.y > height) {\n     push();\n     fill(255);\n     textAlign(CENTER, CENTER);\n     //text(\"Oops\", width / 2, height / 2 - 10);\n     //text(\"Press right arrow to try again\", width / 2, height / 2 + 10);\n     if (keyIsDown(39)) {\n       window.location.reload();\n     }\n     pop();\n  }\n  drawSprites();\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/v7cotrngkeclm3tuyqyg",
        "width": 792,
        "height": 794,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:48:11.015Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:59.892Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "KS69q4uomfGw27wYa",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-28T03:30:20.131Z",
    "posted": true,
    "lesson": "API",
    "description": "I was inspired by Shristi and wanted to play around with type. I used a code from generative gestaltung as a starting point to try to get a better feel for OpenType.js",
    "code": "// P_3_2_5_01\n//\n// Generative Gestaltung – Creative Coding im Web\n// ISBN: 978-3-87439-902-9, First Edition, Hermann Schmidt, Mainz, 2018\n// Benedikt Groß, Hartmut Bohnacker, Julia Laub, Claudius Lazzeroni\n// with contributions by Joey Lee and Niels Poldervaart\n// Copyright 2018\n//\n// http://www.generative-gestaltung.de\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n* Animated type using loadPixels() method to get font area\n*\n* MOUSE\n* position x/y             : affect randomness\n*\n* KEYS\n* A-Z                      : type letters\n* Arrow left/right         : toggle through draw modes\n* Arrow up/down            : increase/decrease point density\n* CONTROL                  : save png\n*\n* CONTRIBUTED BY\n* [Joey Lee](http://jk-lee.com)\n*/\n'use strict';\n\nlet cw = window.innerWidth;\nlet ch = window.innerHeight;\n\nvar font;\n\nvar textTyped = 'COMP FORM';\nvar drawMode = 1;\nvar fontSize = 250;\nvar padding = 10;\nvar nOff = 0;\nvar pointDensity = 5;\n\nvar paths;\nvar textImg;\n\nfunction preload() {\n  font = loadFont('assets/ABCGravity-ExtraCondensed-Trial.otf');\n}\n\nfunction setup() {\n  createCanvas(cw, ch);\n  rectMode(CENTER);\n\n  pixelDensity(1);\n\n  setupText();\n}\n\nfunction setupText() {\n  // create an offscreen graphics object to draw the text into\n  textImg = createGraphics(width, height);\n  textImg.pixelDensity(1);\n  textImg.background(255);\n  textImg.textFont(font);\n  textImg.textSize(fontSize);\n  textImg.text(textTyped, 100, fontSize + 50);\n  textImg.loadPixels();\n}\n\nfunction draw() {\n  background(0);\n\n  nOff++;\n\n  for (var x = 0; x < textImg.width; x += pointDensity) {\n    for (var y = 0; y < textImg.height; y += pointDensity) {\n      // Calculate the index for the pixels array from x and y\n      var index = (x + y * textImg.width) * 4;\n      // Get the red value from image\n      var r = textImg.pixels[index];\n\n      if (r < 128) {\n\n        if (drawMode == 1){\n          strokeWeight(.5);\n\n          var noiseFac = map(mouseX, 0, width, 0, .3);\n          var heightFac = 1;\n          var widthFac = 20;\n          var num = noise((x + nOff) * noiseFac, y * noiseFac);\n\n          var num = noise((x + nOff) * noiseFac, y * noiseFac);\n          if (num < 0.6) {\n            fill(color(255,100,200))\n            stroke(color(255,255,255));\n          } else if (num < 0.7) {\n            stroke(color(255,255,255));\n          } else {\n            fill(color(200,200,100))\n            stroke(color(255,255,255));\n          }\n\n          push();\n          translate(x, y);\n          rotate(radians(30));\n          ellipse(0, 0, 12*widthFac, 12*heightFac);\n          pop();\n        }\n      }\n    }\n  }\n}\n\nfunction keyTyped() {\n  if (keyCode >= 32){\n    textTyped += key;\n    setupText();\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/enx5ljpnuf12iiftpupl",
        "width": 1528,
        "height": 1236,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/owbzbvoett82hur4zeno",
        "width": 1386,
        "height": 1118,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-28T04:09:49.077Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "KdneeJKMxHmiHLmoy",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-19T22:01:52.494Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "One of the myriad of things that I experimented with in ChatGPT was developing code for p5.js. I was interested in the coding capabilities of ChatGPT and incrementally created a WebGL sketch. It was interesting to start with small tasks like create a shape that moves and slowly asking the AI to keep incrementing on the previous work until we got to this point. I could've asked it to do more but I wanted to continue with asking ChatGPT other questions and trying out other tasks.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet cubePos, spherePos, conePos, torusPos;\nlet cubeSize = 50;\n\nfunction setup() {\n  createCanvas(400, 400, WEBGL);\n\n  // initialize positions\n  cubePos = createVector(-150, 0, 0);\n  spherePos = createVector(-50, 0, 0);\n  conePos = createVector(50, 0, 0);\n  torusPos = createVector(150, 0, 0);\n}\n\nfunction draw() {\n  background(220);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n\n  // draw cubes\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(cubePos.x + i * 150, cubePos.y + j * 150, cubePos.z);\n      box(cubeSize);\n      pop();\n    }\n  }\n\n  // draw spheres\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(spherePos.x + i * 150, spherePos.y + j * 150, spherePos.z);\n      sphere(50);\n      pop();\n    }\n  }\n\n  // draw cones\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(conePos.x + i * 150, conePos.y + j * 150, conePos.z);\n      cone(50, 100);\n      pop();\n    }\n  }\n\n  // draw tori\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      push();\n      translate(torusPos.x + i * 150, torusPos.y + j * 150, torusPos.z);\n      torus(50, 10);\n      pop();\n    }\n  }\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    cubePos.x -= 10;\n    spherePos.x -= 10;\n    conePos.x -= 10;\n    torusPos.x -= 10;\n  } else if (keyCode === RIGHT_ARROW) {\n    cubePos.x += 10;\n    spherePos.x += 10;\n    conePos.x += 10;\n    torusPos.x += 10;\n  } else if (keyCode === UP_ARROW) {\n    cubePos.y -= 10;\n    spherePos.y -= 10;\n    conePos.y -= 10;\n    torusPos.y -= 10;\n  } else if (keyCode === DOWN_ARROW) {\n    cubePos.y += 10;\n    spherePos.y += 10;\n    conePos.y += 10;\n    torusPos.y += 10;\n  } else if (key === 'w') {\n    cubePos.z -= 10;\n    spherePos.z -= 10;\n    conePos.z -= 10;\n    torusPos.z -= 10;\n  } else if (key === 's') {\n    cubePos.z += 10;\n    spherePos.z += 10;\n    conePos.z += 10;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/flpkuupf0ujpfxc4gkle",
        "width": 600,
        "height": 600,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-20T06:44:11.966Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T01:01:26.474Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "KmQSjRfp9PAbHPesz",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-03T12:03:11.17Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Here's my extension of the second challenge. I used some color and played with the subtleties of the parameters to create this patterning effect. I also removed the option for the user to change some of the parameters (some of them didn't look very pretty!)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dasyqckkyvgoybexviia",
        "width": 640,
        "height": 528,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jitbrvh8v1zmtkfq0dra",
        "width": 1144,
        "height": 966,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kncpis0zbrbii6cjmjf9",
        "width": 1156,
        "height": 986,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-05T03:00:46.581Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "KnZX4aef4Aoc5kEKq",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-20T20:30:38.162Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I went back to our first challenge and asked both Phind and ChatGPT to re-create an artwork in the style of Anni Albers. I specified that they should use p5.js and random values. Some observations: it’s interesting that you can toggle on/off expert, concise, and creative tabs with Phind. Moreover, I like how Phind explains each step - I think it's better at proactively explaining technical terms as opposed to ChatGPT. It also lists sources on the side, which could be helpful for further reading. Overall, I found the quality of work to be roughly as simplistic while regenerating these artworks--but both provided a template from which you can develop a more sophisticated piece of art. Compared to Phind, the ChatGPT interface is more streamlined and better geared for continuously iterating on top of previous commands (having more of a conversation)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lpxerc4vsbyb7hso7spa",
        "width": 986,
        "height": 988,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xd7k9kkeangj34jhp1z7",
        "width": 996,
        "height": 992,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cy9efhidm7nptyyharbz",
        "width": 992,
        "height": 1002,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T01:05:42.175Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-21T05:16:07.695Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Kww7QJo6RB79hxsbC",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-14T15:50:01.827Z",
    "posted": true,
    "lesson": "Text",
    "description": "Tried variations of my earlier dark and stormy night story with Rita.",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\n  start: \"On a dark and stormy night, the $noun1 $verb1 the trees, as $noun1 $verb1 the sky. As I $verb2_1 the $noun2_1, I saw $noun2_2 $verb2_3 in the $noun1, $verb2_1 me. The $noun1 grew stronger. I felt a sense of $noun3, as if something $adjective3 was about to happen.\",\n  \n  noun1: \"wind | storm | rain | darkness | lightning | thunder\",\n  verb1: \"howled through | blew through | flew through | illuminated | darkened | yelled through | shaded | fogged | obscured\",\n  \n  verb2_1: \"looking at | staring at | watching | observing | examining | studying\",\n  verb2_2: \"looked out | peeped through | glanced out | gazed at | stared through | peeked at\",\n  noun2_1: \"window | dor | wall | peephole | skylight | cracks | hole\",\n  noun2_2: \"figure.art | ghost.art | silhouette.art | shape.art | form.art | animal.art | person.art\",\n  verb2_3: \"standing | lingering | crouching | laying | sitting | squatting | pacing | walking\",\n  \n  noun3: \"foreboding | anxiety | apprehension | trepidation | intuition | alarm | dread\",\n  adjective3: \"terrible | awful | outrageous | horrible | appalling\",\n};\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\ndisplay(g.expand());\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 20px; margin: 10%; line-height: 1.5;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ll6y190rj6xgo3x7j1vc",
        "width": 976,
        "height": 241,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wvaydm4b4xvbhaozta27",
        "width": 1006,
        "height": 257,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/uieqkukbkbmzhuzakzr3",
        "width": 1011,
        "height": 249,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "KynKAZQxrcRJ94M5p",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-05T12:04:23.073Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "initial versions of the castle sketch",
    "code": "echo(version=version());\n\n// rotate_extrude() rotates a 2D shape around the Z axis. \n// Note that the 2D shape must be either completely on the \n// positive or negative side of the X axis.\n$fn = 80;\n\ncolor(\"gray\")\ntranslate([-15,-50,5])\ncube([200,200,5]);\n//translate([85,45,7])\n//cylinder(h = 5, r = 120, center = true);\n\n\nmodule tower(){\ncolor(\"cyan\")\n \n    union(){\n         translate([40, 0, 20])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n         translate([40, 0, 120])\n    cylinder (h=50, r=16, center = true);\n            color(\"cyan\")\n              translate([40, 0, 90])\n        rotate_extrude($fn = 80)\n            text(\"  J\");\n                translate([40, 0, 60])\n        rotate_extrude($fn = 80)\n            text(\"  T\");\n                 translate([40, 0, 70])\n          cylinder (h=60, r=10, center = true);\n    }\n    color(\"cyan\")\n              translate([40, 0, 30])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n    \n       color(\"cyan\")\n              translate([40, 0, 10])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n            \n            \ncolor(\"cyan\")\n      translate([40, 0, 0])\n        rotate_extrude($fn = 80)\n            text(\"  W\");\n\n// rotate_extrude() uses the global $fn/$fa/$fs settings, but\n// it's possible to give a different value as parameter.\ncolor(\"cyan\")\n    translate([40, 0, -10])\n        rotate_extrude($fn = 80)\n            text(\"  H\");\n\n// Using a shape that touches the X axis is allowed and produces\n// 3D objects that don't have a hole in the center.\ncolor(\"cyan\")\n    translate([40, 00, -35])\n        rotate_extrude($fn = 80)\n            polygon( points=[[0,0],[18,14],[14,18],[14,22],[22,26],[0,20]] );\n        }\n        \n        for (x = [0:1], y = [0:1]) {\n    translate([x * 80, y * 80, 150]) {\n           rotate([0,180,180])\n    tower();\n    }\n}\n\n  \n\n\n// combining both relatively complex shapes can be created\n\nmodule spire(){\n\n    \ncolor(\"orange\")\n   \n    \n    translate([100, 100, 110])\n        linear_extrude(height = 60, twist = -360, scale = 0, center = true, slices = 200)\n            square([20, 10], center = true);\n\ncolor(\"gray\")\n    translate([100, 100, 0])  // Changed y-coordinate from -30 to -40\n        linear_extrude(height = 80)\n            square([20, 10], center = true);\n    \n}\n\ntranslate([-90,-130,10])\nfor (x = [0:1], y = [0:1]) {\n    translate([x * 150, y * 150, 0]) {\n spire();\n    }\n}\n\n\ncolor(\"gray\")\n  translate([160, 120, 30])\n    rotate([0-45,90,90])\ncube([10,210,5]);\ncolor(\"gray\")\n      translate([160, -30, 30])\n    rotate([-45+90,90,90])\ncube([10,210,5]);\n\ncolor(\"gray\")\n  translate([120, -10, 105])\n    rotate([45,90,90])\ncube([10,120,5]);\ncolor(\"gray\")\n  translate([120, 80, 105])\n    rotate([-45,90,90])\ncube([10,120,5]);\n\nmodule walls(){\n  translate([10, 90, 40])\n  rotate([0,90,0])\n  scale([1.5,1.5,1.5])\ndifference() {\n    union() {\n        translate([0, -10, -3]) cube([25, 20, 6]);\n        cylinder(h = 6, r = 10, center = true);\n    }\n    cylinder(h = 10, r = 5, center = true);\n}\n}\n\n//module sidewall(){\n//for (x=[0:4]){\n//color(\"gray\")\n //   translate([0, -105+x*31, 0])\n      //  walls();\n//}\n//}\n\n//sidewall();\n//\n//translate([150, 0, 5])\n//    rotate([0,0,0])\n//sidewall();\n//\n//translate([130, 110, 5])\n//    rotate([0,0,90])\n//sidewall();\n//\n//translate([130, -40, 5])\n//    rotate([0,0,90])\n//sidewall();\n//color(\"gray\")\n  //translate([10, -30, 60])\n    //rotate([90,90,90])\n//cube([10,150,5]);\n\n        \n\n// By default rotate_extrude forms a full 360 degree circle, \n// but a partial rotation can be performed by using the angle \n\n\n// Written in 2015 by Torsten Paul <Torsten.Paul@gmx.de>\n//\n// To the extent possible under law, the author(s) have dedicated all\n// copyright and related and neighboring rights to this software to the\n// public domain worldwide. This software is distributed without any\n// warranty.\n//\n// You should have received a copy of the CC0 Public Domain\n// Dedication along with this software.\n// If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/trqin3bfojivqp0btwwy",
        "width": 1648,
        "height": 1442,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/yttriybgh1b8ieon5lts",
        "width": 1650,
        "height": 1434,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:16.023Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "L3t85gKnyZNjHJCeC",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-24T06:48:55.612Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair Challenge: Modified Sahiti's sketch by experimenting with a Monet classic via Tweakpane. Major milestone unlocked: I no longer fear angle-based functions in coding woohoo!",
    "code": "let img;\n\nconst params = {\n  rotate: 0,\n  radius: 5,\n  size: 10,\n\n};\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"rotate\", { min: 0, max: 90 });\npane.addInput(params, \"radius\", { min: 0, max: 200 });\npane.addInput(params, \"size\", { min: 10, max: 50 });\n// pane.addInput(params, \"color\");\n\nfunction preload() {\n  img = loadImage(\"paint.jpeg\");\n}\n\nfunction setup() {\n  createCanvas(700, 500);\n  angleMode(DEGREES);\n  frameRate(1);\n}\n\nfunction draw() {\n  background(220);\n  imageMode(CENTER);\n  image(img, width / 2, height / 2, width, height);\n \nlet tileSize = params.size;\n  let radius = params.radius;\n  let angle = 0; //change as rotate?\n\n  while (radius < width / 2 - 50) {\n    let portionX = int(random(0, img.width - tileSize));\n    let portionY = int(random(0, img.height - tileSize));\n    let portion = img.get(portionX, portionY, tileSize, tileSize);\n    //I want to console log \"portion\" to know if I am getting the tiles on the image.\n\n    push();\n    translate(width / 2, height / 2);\n    rotate(angle);\n    translate(radius, 0);\n    rotate(params.rotate);\n    image(portion, 0, 0);\n    pop();\n\n    angle = angle + degrees(0.1);\n    radius = radius + 0.2;\n  }\n\n  // noLoop();\n}\n\n//}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zdgvmn0zhgec6deqjk1u",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/v2cczgetgtxnx6z3qa23",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qob3e2unhny5qftik4eu",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-24T15:41:21.384Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "L6eXigoA2CeoCBXRc",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-13T21:23:21.821Z",
    "posted": true,
    "lesson": "Text",
    "description": "I tried exploring story generation using tracery to compare with the previous Markov chain to understand how much control you get trying to write stories this way vs how limited the output and structures can be. I used the basic template and modified some parameters for this.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ejwrsyvtb9uyu5ttflze",
        "width": 1340,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/d11mumjthd1uroprtfm2",
        "width": 1340,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "LDiMoTkCGDyFEtric",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-02T16:47:24.506Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "I think there is some miss tuning but I do believe logic seems to work.",
    "code": "let amplitude_slider;\nlet frquency_slider;\nlet timer_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 50);\n\n  createP(\"Timer\");\n  timer_slider = createSlider(0, 100, 50);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n\n  let frequency = frequency_slider.value() * 1000;\n\n  let timer = timer_slider.value()+millis();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = (random() - 0.5) * amplitude * 10;\n    // let offsetY = (random() - 0.5) * amplitude * 10;\n    \n    \n\n     let offsetX = noise(i*frequency+timer) * amplitude *10;\n     let offsetY = noise(i*frequency+timer) * amplitude*10;\n\n    // let offsetX = ((noise(30) +frequency)/ timer *amplitude);\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hrkgkgb1nzteosz53gz1",
        "width": 464,
        "height": 486,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "LDinZe7FfQzq4iP8p",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-12T08:03:53.749Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  background(50);\n\n  noFill();\n  stroke(255, 0, 0, 200); // red stroke color with 200 alpha\n  strokeWeight(4); // thicker stroke weight\n\n  // move to starting position (without drawing)\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 250); // start at center of canvas\n\n  // put the pen down to draw\n  myTurtle.penDown();\n\n  // draw the hexagon\n  for (let i = 0; i < 6; i++) {\n    myTurtle.moveForward(100);\n    myTurtle.turnRight(60);\n  }\n\n  // draw the circles\n  myTurtle.penUp(); // lift the pen to move to the center of the hexagon\n  myTurtle.moveTo(250, 250);\n  myTurtle.penDown();\n  circle(250, 250, 50); // draw a circle with radius 50 at the center of the hexagon\n  circle(250, 250, 80); // draw a larger circle with radius 80 at the center of the hexagon\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ehhlz2mypoo9ba2l1crq",
        "width": 900,
        "height": 898,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "LGLCKdtM5uGAPyjcn",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-31T10:17:00.35Z",
    "posted": true,
    "lesson": "Music",
    "description": "Redid the last sketch, but now with motion controlled ellipse(). User ml5.js again to track the x-position of the person in form of the camera, and mapped that to the ellipse so I can play the strings by moving around.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n\nlet poseNet;\nlet poses = [];\nlet video;\n\nlet rot = 0;\nconst noiseAmp = 50;\n\nlet canvasWidth = 500;\nlet canvasHeight = 500;\n\nlet ellipse0 = {\n    xPos: 0,\n    esize: 20\n};\nlet amplitude;\nlet vibration = 25;\nlet string = [\n    {deceleration: 0, stringX: canvasWidth/2 - 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n    {deceleration: 0, stringX: canvasWidth/2 - 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2, stringYoffset: 50, bezierYoffset: 100, note: \"B4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n  ];\n\nconst synth = new Tone.Synth(\n  {\n    oscillator: {\n      type: \"sine\",\n    },\n    envelope: {\n      attack: 0.1,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 1,\n    },\n  }\n);\nsynth.toMaster();\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  colorMode(HSB);\n  \n  video = createCapture(VIDEO);\n  video.size(width, height);\n  poseNet = ml5.poseNet(video, {multiplier:0.5}, modelReady);\n  poseNet.on('pose', function(results) {\n    poses = results;\n  });\n}\n\nfunction modelReady() {\n  select('#status').html('Model Loaded');\n}\n\nfunction draw() {\n  background(250, 50, 85);\n  \n  let imgsize = 80;\n  image(video, 0, 0, imgsize*1.2, imgsize);\n  \n  let xFactor;\n  let mapFactor;  \n  for (let i = 0; i < poses.length; i++) {\n    let skeleton = poses[i].skeleton;\n    for (let j = 0; j < skeleton.length; j++) {\n      mapFactor = skeleton[0][1]\n      xFactor = map(mapFactor.position.x,0,width,100,700)\n    }\n  }\n  \n  ellipse0.xPos = xFactor;\n\n  fill(0, 0, 100);\n  noStroke();\n  ellipse(xFactor, width/2, ellipse0.esize);\n  \n  for (let i=0; i<string.length; i++) {\n      \n    amplitude = (vibration/2) * sin(TWO_PI * (millis()/1000)) * string[i].deceleration;\n    \n    noFill();\n    stroke(0, 0, 100);\n    strokeWeight(1.75);\n    bezier(\n      string[i].stringX, string[i].stringYoffset,\n      amplitude + string[i].stringX, string[i].stringYoffset + string[i].bezierYoffset, \n      amplitude + string[i].stringX, height - string[i].stringYoffset - string[i].bezierYoffset, \n      string[i].stringX, height - string[i].stringYoffset\n    );\n    \n    string[i].deceleration -= 0.01;\n    if (string[i].deceleration < 0) {\n      string[i].deceleration = 0;\n    }\n    \n    if (\n        ellipse0.xPos > string[i].stringX - 5 && \n        ellipse0.xPos < string[i].stringX + 5 //&& \n    ) {\n      synth.triggerAttackRelease(string[i].note, \"4n\");\n      string[i].deceleration = 1;\n    }\n      \n  }\n   \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bpuadaygm0nopw6cjl8n",
        "width": 900,
        "height": 900,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-31T13:03:00.656Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-02T07:29:40.379Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LKhiMErXGQ6nX2Jvn",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-23T16:08:11.929Z",
    "posted": true,
    "lesson": "Params",
    "description": "A robotic face generator (with the ability to make it blush). I used a typeface called A. ABF Petit to create the facial features",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fjik6rwxiicgieksufgz",
        "width": 1700,
        "height": 1082,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-23T17:12:58.284Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LNrBk3EMeR7TsLx3h",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-12T01:38:03.591Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Inspired by the textbook example using the letter A. I decided to experiment with a decorative B letterform to create this pattern. At first glance it just looks like a pattern, but upon closer review you can see the strokes of the letter B.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yevkbvsrsukujzuwno41",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T11:44:00.75Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LQFynk4mhufaiPxQu",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-02T17:07:43.225Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My response to Reshma’s instructions!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hvmdjh5uqidfwve7nabb",
        "width": 1603,
        "height": 1604,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T17:54:56.695Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LTwG7hFpYbN3peh4r",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-03T20:46:43.807Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Just spent time understanding different possible forms that OpenSCAD can create to make this little succulent.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xibjd8ev3pu4i0wcguoy",
        "width": 1484,
        "height": 902,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:43.18Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-04T05:08:35.216Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-05T00:54:57.555Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:42.155Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LbzcXk3WXXT7mcKT6",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-05T01:19:08.5Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Second game, took an old concept that I scrapped a long time ago and shrunk it down into a microgame. Goal is to try and lap as many times as possible without hitting the obstacles.\n\nArrow keys to move the car around.",
    "code": "let laps = 0;\n\nfunction setup() {\n  createCanvas(600, 400);\n  \n  // Establish Sprites\n  \n  car = createSprite(50, 50, 450, 700);\n  car.scale *= 0.1;\n  car.img = loadImage(\"Image/Vehicle_SpriteProto.png\");\n  \n  obstacle3 = new Sprite();\n  obstacle3.width = 400;\n  obstacle3.height = 250;\n  obstacle3.collider = 'static';\n  \n  obstacle1 = new Sprite();\n  obstacle1.x = 300;\n  obstacle1.y = 160;\n  obstacle1.width = 350;\n  obstacle1.height = 150;\n  obstacle1.collider = 'kinematic';\n  \n  obstacle2 = new Sprite();\n  obstacle2.x = 300;\n  obstacle2.y = 260;\n  obstacle2.width = 150;\n  obstacle2.collider = 'kinematic';\n  obstacle2.overlap(obstacle1);\n  \n  goal = new Sprite();\n  goal.x = 50;\n  goal.y = 200;\n  goal.width = 100;\n  goal.height = 100;\n  goal.text = \"Finish Line\";\n  //goal.visible = false;\n  //goal.collider = 'static';\n  \n  rectSequence1();\n  rectSequence2();\n}\n\n// Obstacle movement\n\nasync function rectSequence1() {\n  await obstacle1.moveTo(300, 160);\n  await obstacle1.moveTo(300, 360);\n  rectSequence1();\n}\n\nasync function rectSequence2() {\n  await obstacle2.moveTo(300, 260);\n  await obstacle2.moveTo(300, 60);\n  rectSequence2();\n}\n\nfunction draw() {\n  clear();\n  background(107, 255, 122);\n  \n  // Car movement/collision\n  \n  car.speed = 3;\n\n  if(kb.pressing('up')) {\n    car.direction = -90;\n    car.rotation = 180;\n  } else if(kb.pressing('down')) {\n    car.direction = 90;\n    car.rotation = 0;\n  } else if(kb.pressing('left')) {\n    car.direction = 180;\n    car.rotation = 90;\n  } else if(kb.pressing('right')) {\n    car.direction = 0;\n    car.rotation = -90;\n  } else {\n    car.speed = 0;\n  }\n  \n  text('Laps: ' + laps, 10, 30);\n  \n  if(car.overlaps(goal)) {\n      laps++;\n  }\n  \n  if(car.collides(obstacle1) || car.collides(obstacle2) || car.collides(obstacle3)) {\n    gamereset();\n  }\n  \n  /* // Debug collisions\n  \n  car.debug = mouse.pressing();\n  obstacle1.debug = mouse.pressing();\n  obstacle2.debug = mouse.pressing();\n  obstacle3.debug = mouse.pressing();\n  goal.debug = mouse.pressing(); */\n}\n\nfunction gamereset() {\n  car.x = 50;\n  car.y = 50;\n    \n  obstacle1.x = 300;\n  obstacle1.y = 160;\n    \n  obstacle2.x = 300;\n  obstacle2.y = 260;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tqpahnhyg9zvcg96pt3y",
        "width": 900,
        "height": 598,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-05T19:00:55.488Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LifYECZvDashfX5Xn",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-02T07:18:57.653Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "In the spirit of our EOY thesis show, I visualized the theme Entropy on its chaotic extreme, as the extension on Coding Challenge 1",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rb6ty344xzf8mea10ztg",
        "width": 794,
        "height": 792,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "LmHbsQ5Wcav75cKS7",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-24T03:19:38.438Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Playing around with paths and mouse events",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/iqycrcayiohfnonfpoia",
        "width": 2072,
        "height": 1822,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hhzmtd2srasfhhe1rgie",
        "width": 1280,
        "height": 1112,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-24T03:49:42.666Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LoXyPe3cPhPCE5ksr",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-23T19:55:22.108Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair challenge for this week. This is my modification of Sora's code that I got to work with. Tweaked some settings, added some noise, and I was able to change the general shape of the sketch to what it is now.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  noStroke();\n  \n  createP(\"Circles\");\n  circlecountSlider = createSlider(100, 10000, 500);\n  \n  createP(\"Red Slider\");\n  r_Slider = createSlider(0, 255, 192);\n  \n  createP(\"Green Slider\");\n  g_Slider = createSlider(0, 255, 195);\n  \n  createP(\"Blue Slider\");\n  b_Slider = createSlider(0, 255, 231);\n}\n\nconst radius = Math.sqrt(0.5);\nconst Size = 0.1;\nconst variable = (1 + Math.sqrt(5)) / 2;\n\nfunction draw() {\n  scale(width, height);\n  background(r_Slider.value(), g_Slider.value(), b_Slider.value());\n \n  let count = circlecountSlider.value();\n  \n  for (let i = 1; i < count; i++) {\n    const f = i / count * noise(i);\n    \n    const angle = i * variable + noise(i);\n    const distance = f * radius;\n\n    const x = 0.5 + cos(angle * PI) * distance * noise(i);\n    const y = 0.5 + sin(angle * TWO_PI) * distance;\n\n    const r = f * Size;\n\n    fill(225, 240, 250, 50 * noise(distance));\n    circle(x, y, r);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tn3assnkdotypj38vofl",
        "width": 895,
        "height": 895,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "LuLxxXTbL2gDRT74Q",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-11T19:57:05.389Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Getting set up in Visual Studio Code and exploring different organic patterns and visuals with turtle graphics",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gp6ytwbsg5m4ucnjf3iy",
        "width": 996,
        "height": 994,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gjnnxdstxwudkirncvts",
        "width": 994,
        "height": 990,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xcjgrjgp42qlaecpgx0w",
        "width": 992,
        "height": 996,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T10:19:57.942Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:12:49.05Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "LuTGsCNuFBWTQSP75",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-10T00:13:36.898Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Experimentation with Turtles. This was from leftover code that I had from class that I wanted to continue experimenting with.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet current_step = 0;\nlet steps = 60;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  frameRate(24);\n}\n\nfunction draw() {\n  background(50);\n  stroke(255);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(235, 385);\n  myTurtle.penDown();\n\n// Draw Circle Path\n\n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(35, 150);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(435, 150);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(35, 625);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(435, 625);\n  myTurtle.penDown();\n  \n  for (let i = 0; i < 180; i++) {\n    myTurtle.moveForward(random(23, 27));\n    myTurtle.turnLeft(10);\n    drawCircle();\n  }\n  \n}\n\nfunction drawCircle() {\n  myTurtle.pushState();\n\n  for (i = 0; i < 10; i++) {\n    myTurtle.moveForward(10);\n    myTurtle.turnLeft(20);\n    stroke(random(0, 255),random(0, 255),random(0, 255));\n  }\n\n  myTurtle.popState();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/v2fg2o5wxvozyprqti1a",
        "width": 749,
        "height": 748,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T11:44:47.452Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Lw2Ea3kWm35W3mFbF",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-09T19:26:28.275Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "**Pixel x Noise x Modular / Division**\nI overwrote this code, but I wished I'd turned off noSmooth",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qrfjjagoc5ywme9ktoqk",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/nnyqequatcwzisgbf8va",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vdf1nfzm929ame1megr2",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T00:47:09.334Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:04.762Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "M6QvGDETjssksWTM7",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-27T22:31:34.068Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Pair challenge. Took Inspiration from Isha's sketch, I took the code to illustrator and lasercut some lines in PAPER!!!!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/a1vycsdbwjpcxqzrbi02",
        "width": 1800,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ktylwgxih60dxu0c9ilr",
        "width": 1800,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-28T03:25:27.851Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-08T21:57:50.728Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:06.691Z"
      }
    ],
    "comments": [
      {
        "comment": "This is so pretty!",
        "commenter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-28T03:25:41.793Z"
      }
    ]
  },
  {
    "_id": "M8vPAbnw4mCSmM2An",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-07T05:43:46.027Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "p5.play may be all about creating sprites, but in this game we hate sprites. Catch the Cokes, not the Sprites.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xgqxqbgvl8lnb18cne2p",
        "width": 588,
        "height": 590,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T05:48:49.356Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T07:33:27.493Z"
      }
    ],
    "comments": [
      {
        "comment": "Love it!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T05:49:15.723Z"
      }
    ]
  },
  {
    "_id": "MAc5LpQ5jJgrxveXh",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-20T19:18:08.308Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Playing around with event handlers on paper.js.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar triangle = [];\nvar num = 50;\nvar offset = 20;\n\nfor (var i=0; i<num; i++) {\n    // var center = [\n    //     view.center + (2*offset*Math.random()) - offset, \n    //     view.center + (2*offset*Math.random()) - offset\n    // ];\n    triangle[i] = new Path.RegularPolygon(view.center, 3, 150);\n    triangle[i].strokeColor = 'black';\n    triangle[i].strokeWidth = 0.5;\n    triangle[i].rotate(i*360/num);\n    triangle[i].onMouseMove = function(event) {\n        // this.strokeWidth+=0.2;\n        this.position.x+=((2*offset*Math.random())-offset);\n        this.position.y+=((2*offset*Math.random())-offset);\n    }\n    triangle[i].onMouseEnter = function(event) {\n        this.strokeWidth = 5;\n        // this.fillColor = new Color(1, 0, 0, 0.25);\n    }\n    triangle[i].onMouseLeave = function(event) {\n        this.strokeWidth = 0.5;\n        // this.fillColor = new Color(1, 0, 0, 0);\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/k0rdlt4kochkhkl8huxf",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xgsa7idi0itss8f4brq1",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/gu5zumxhlw6zxia8fc9c",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-21T16:36:37.927Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T21:19:12.194Z"
      }
    ],
    "comments": [
      {
        "comment": "Love these!\n",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T21:19:10.284Z"
      }
    ]
  },
  {
    "_id": "MKsFWALEmhvvX9ZDE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-31T01:55:14.089Z",
    "posted": true,
    "lesson": "Music",
    "description": "**Tried to improve Musicality** of Two Bots on Synths in terms of what notes should play together, but I may have made it worse",
    "code": "///////////////////////////////////////////////////////////////////\n// DECLARE ALL VARIABLES\n//\n\nlet Fscale = [\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"F3\", \"8n\"],\n  [\"G3\", \"8n\"],\n  [\"Ab3\", \"8n\"],\n  [\"Bb3\", \"8n\"],\n  [\"C4\", \"8n\"],\n  [\"Db4\", \"8n\"],\n  [\"E4\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"F4\", \"8n\"],\n  [\"G4\", \"8n\"],\n  [\"Ab4\", \"8n\"],\n  [\"Bb4\", \"8n\"],\n  [\"C5\", \"8n\"],\n  [\"Db5\", \"8n\"],\n  [\"E5\", \"8n\"],\n  [\"F5\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n  [\"rest\", \"8n\"],\n];\n\nlet freq1, freq2;\nlet hue = 0;\nlet x1, y1, x2, y2;\nlet startColor1, endColor1, startColor2, endColor2;\nlet circleWidth = 8;\n\n///////////////////////////////////////////////////////////////////\n//CREATE SYNTHS & CONNECT TO SPEAKERS\n//\n\nconst synth1 = new Tone.Synth({\n  oscillator: {\n    type: \"square\", // sine, square, triangle, sawtooth, fat*\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.4,\n    sustain: 0.1,\n    release: 1,\n  },\n});\n\nconst synth2 = new Tone.Synth({\n  oscillator: {\n    type: \"square\", // sine, square, triangle, sawtooth, fat*\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.1,\n    sustain: 0.1,\n    release: 1,\n  },\n});\n\n// Connect to Speakers\nsynth1.toMaster();\nsynth2.toMaster();\n\n///////////////////////////////////////////////////////////////////\n//SETUP\n//\nfunction setup() {\n  createCanvas(600, 600);\n  background(\"rgb(0,0,0)\");\n  frameRate(3);\n  colorMode(RGB);\n\n  for (let i = 0; i <= Fscale.length; i++) {\n    push();\n    fill(\"#272727\");\n    noStroke();\n    for (let j = 0; j < width; j += 3)\n      rect(j, (height * i) / Fscale.length, 4, 4);\n    pop();\n  }\n\n  x1 = width / 2;\n  y1 = height /2;\n  x2 = width / 2;\n  y2 = height;\n\n  noStroke();\n\n  startColor1 = color(\n    floor(random(255)),\n    floor(random(255)),\n    floor(random(255))\n  );\n  endColor1 = color(floor(random(255)), floor(random(255)), floor(random(255)));\n  startColor2 = color(\n    floor(random(255)),\n    floor(random(255)),\n    floor(random(255))\n  );\n  endColor2 = color(floor(random(255)), floor(random(255)), floor(random(255)));\n}\n\n// function mouseMoved() {\n//   freq = floor(map(mouseY, height, 0, 0, Fscale.length));\n//   synth1.triggerAttackRelease(Fscale[freq], \"8n\");\n//   synth2.triggerAttackRelease(Fscale[15 - freq], \"8n\");\n// }\n\nfunction draw() {\n  background(\"rgba(0,0,0,0.0001)\");\n\n  //Recalibrate in case x or y lies outside the canvas\n  if (x1 < 0) x1 += 24;\n  if (x1 > width - 12) x1 -= 24;\n\n  if (y1 < 0) y1 += 24;\n  if (y1 > height - 12) y1 -= 24;\n\n  if (x2 < 0) x2 += 24;\n  if (x2 > width - 12) x2 -= 24;\n\n  if (y2 < 0) y2 += 24;\n  if (y2 > height - 12) y2 -= 24;\n\n  //Lerp Colors\n  let tempColor1 = lerpColor(startColor1, endColor1, random());\n  let tempColor2 = lerpColor(startColor2, endColor2, random());\n\n  //Create Squares for the two Walkers\n  push();\n  noFill();\n  strokeWeight(2);\n  push();\n  stroke(tempColor1);\n  rect(x1, y1, x1 / 2 + 5, 20);\n  pop();\n  stroke(tempColor2);\n  //rect(x2, y2, x2/2 + 5, 20);\n  pop();\n\n  //Calculate next random adjacent x/y position\n  x1 = randomizePos(x1);\n  x2 = randomizePos(x2);\n  y1 = randomizePos(y1);\n  y2 = randomizePos(y2);\n\n  freq1 = floor(map(y1, height, 0, 0, Fscale.length )); console.log(freq1);\n  freq2 = floor(map(y2, height, 0, 0, Fscale.length - 1));\n\n  if (freq1>Fscale.length-1) freq1 = Fscale.length-1;\n  if (freq1<0) freq1 = 0;\n  \n  let n2 = random();\n  if (n2 > 0.3 && Fscale[freq1][0] != \"rest\") {\n    synth1.triggerAttackRelease(Fscale[freq1][0], \"4n\");\n    console.log(\"a\");\n  }\n\n  let n = random();\n  if (n < 0.33) {\n    if (freq1 > 6 && Fscale[freq1 - 2][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 - 2][0], \"4n\");\n      console.log(\"b\");\n    } else if (freq1 < Fscale.length - 3 && Fscale[freq1 + 2][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 + 2][0], \"2n\");\n      console.log(\"c\");\n    }\n  } else if (n < 0.66) {\n    if (freq1 > 6 && Fscale[freq1 - 3][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 - 3][0], \"8n\");\n      console.log(\"d\");\n    } else if (freq1 < Fscale.length - 4 && Fscale[freq1 + 3][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 + 3][0], \"2n\");\n      console.log(\"e\");\n    }\n  } else {\n    if (freq1 > 6 && Fscale[freq1 - 4][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 - 4][0], \"4n\");\n      console.log(\"f\");\n    } else if (freq1 < Fscale.length - 5 && Fscale[freq1 + 5][0] != \"rest\") {\n      synth2.triggerAttackRelease(Fscale[freq1 + 4][0], \"8n\");\n      console.log(\"g\");\n    }\n  }\n\n  //makeVisualizer();\n}\n\nfunction randomizePos(z) {\n  let a = random();\n  if (a < 0.33 && frameCount != 0) {\n    z -= height / Fscale.length;\n  } else if (a < 0.66) {\n    z += height / Fscale.length;\n  }\n  return z;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sqrindzpyf3levjqz51s",
        "width": 1200,
        "height": 1194,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jugb8lzih7otfn0fckfg",
        "width": 1200,
        "height": 1194,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T03:38:34.426Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:14:04.589Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-11T04:56:24.548Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MNEWjA8Avwmvmu626",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-05T15:40:23.116Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Abstract 3D Tree",
    "code": "// Define tree module\nmodule tree(height, radius, angle, iteration) {\n  if (iteration > 0) {\n    cylinder(h=height, r1=radius, r2=radius * 0.7, center=true);\n    translate([0, 0, height]) {\n      rotate([0, angle, 0]) {\n        scale(0.7) tree(height * 0.7, radius * 0.7, angle, iteration - 1);\n      }\n      rotate([0, -angle, 0]) {\n        scale(0.7) tree(height * 0.7, radius * 0.7, angle, iteration - 1);\n      }\n    }\n  } else {\n    sphere(r=height/5);\n  }\n}\n\n// Draw tree\ntree(50, 5, 20, 5);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cxd77arc2tbv3njpky7p",
        "width": 656,
        "height": 796,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:53.459Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:18:12.553Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MPDrXvJwhYs488oZe",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-06T21:47:34.349Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Figure out a way to use createGraphics() and copy() to make text into an image and then sampled the pixels from that image. Positioning is wonky though, wish there was a better way to do this. (Custom font may not work in preview!)",
    "code": "class Square {\n  constructor(x, y, imgWidth, imgHeight) {\n    this.x = x;\n    this.y = y;\n    this.color = noise(x*.3,y *.3)*360;\n    this.sideLength = 20;\n    this.width = imgWidth;\n    this.height = imgHeight;\n\n  }\n  draw() {\n    \n    push();\n    rectMode(CENTER);\n    angleMode(DEGREES);\n\n    fill(this.color);\n    strokeWeight(0);\n    rect(this.x *5 - this.width/2, this.y * 5, this.sideLength, this.sideLength);\n       \n    pop();\n  }\n}\n\nfunction dataDraw(img) {\n  img.loadPixels();\n    \n  for (let y = 0; y < img.height; y+=3) {\n      for (let x = 0; x < img.width; x+=3) {\n\n        \n        const c = getQuick(img, x, y)[0];\n        if (c === 0) {\n          var currentSquare = new Square(x,y, img.width, img.height);\n           \n          currentSquare.draw();\n          \n        }\n     \n        setQuick(img, x, y, c);\n      }\n    }\n  img.updatePixels();\n  }\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n\n\n}\n\nfunction draw() {\n  background(0);\n  textCanvas = createGraphics(200, 200)\n  textCanvas.background(255);\n  textCanvas.fill(0);\n  textCanvas.textSize(textCanvas.width);\n  textCanvas.textAlign(CENTER, CENTER)\n  textCanvas.textFont('UnifrakturMaguntia')\n  textCanvas.text('g', textCanvas.width/2,     textCanvas.height/3.5);\n  textImage = createImage(textCanvas.width,textCanvas.height)\n  textImage.copy(textCanvas, 0, 0, textCanvas.width, textCanvas.height, 0, 0, textCanvas.width, textCanvas.height);\n  dataDraw(textImage);\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gkk35y5jwprttiwjlb7o",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/x6ny11awk1cdzrodnsfs",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-03-07T00:53:08.988Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:45:59.322Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T10:36:07.788Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MPefN7onpDK2iRPZ9",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-05-12T11:38:45.784Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "**Parametric Flowers** using Turtle Graphics. Should have named the parameters *number of petals* and *size*. Yet to figure out how to center the flower, so that I can then begin to build a garden. Also need to fine tune the detailing",
    "code": "let myTurtle;\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Length: 20,\n  Sides: 9,\n}\n\npane.addInput(params, \"Length\", { min: 10, max: 30 });\npane.addInput(params, \"Sides\", { min: 3, max: 12 });\n\n\nfunction setup() {\n  \n  createCanvas(500, 500);\n  myTurtle = new Turtle(width*0.5, height*0.5);\n  \n  noFill();\n  stroke(255, 160, 180);\n  strokeWeight(3);\n  background(40);\n  frameRate(6);\n  //noLoop();\n}\n\nfunction draw() {\n  background(70);\n  \n  let length = params.Length;\n  let sides = params.Sides;\n  \n  translate(sides*5 + (9-sides), sides*2);\n  scale(0.8);\n  \n  for (let i = 0; i < sides; i++) {\n    \n    myTurtle.moveForward(length);\n    \n    for (let j=0; j<4; j++) {\n      \n      myTurtle.penUp();\n      myTurtle.pushState();\n      \n      strokeWeight(4-j);\n\n        myTurtle.moveBackward(length - j*8);\n        myTurtle.turnLeft(120);\n\n        for (let k=0; k < 9+((9-sides)/3)-(j*1); k++) {\n\n          myTurtle.penDown();\n          myTurtle.moveForward(25 - 3*j);\n          myTurtle.turnRight(22.75 + 0.75*j);\n\n        }\n    \n      myTurtle.popState();\n      myTurtle.penDown();\n      \n    }\n    \n    myTurtle.turnRight(360/sides);\n    \n  }\n  \n  console.log(360 - (360/sides));\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/awaqmzxcujmhstu1hqx6",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fr6qr2bxt9qda8zhr3ox",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dcely2koo3odga7svp61",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-12T14:11:12.967Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T14:36:15.573Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:12.661Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MXKP7oQdeAZw83gCC",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-05-03T08:52:33.547Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Trial 1 for the Castle challenge. Building the primitives took a while this time.",
    "code": "floorheight = 4;\nwallwidth = 0.25;\nmiddleroom = 3.5;\nturretsize = 0.5;\nwindowsize = 1.2;\nwindowjamb = 0.15;\nmiddlewindowheight = 5;\nouterwallsize = middleroom*3;\ntowerheight = floorheight*2;\ntowersize = 1;\ndoorsize = 2;\n\n///////////////////////////////////\n\n//WINDOW\n\nmodule window () {\n    difference () {\n        //window outer shell\n        union () {\n            cube([windowsize, wallwidth*2, windowsize], true);\n\n            rotate([90, 0, 0])\n            translate([0,windowsize/2,0])\n            cylinder($fn = 30, h=wallwidth*2, r=windowsize/2, center=true); \n        }\n\n        //window inner shell, cutout\n        union () {\n            translate([0, 0, windowjamb/2])\n            cube([windowsize - windowjamb*2, wallwidth*2 + 1, windowsize - windowjamb*2 + windowjamb], true);\n\n            rotate([90, 0, 0])\n            translate([0,windowsize/2,0])\n            cylinder($fn = 30, h=wallwidth*2 +1, r=windowsize/2 - windowjamb, center=true); \n        }\n    }\n\n    //window bars\n    for (i=[-windowsize/6:windowsize/3:windowsize/6]) {\n        translate([i,0,windowjamb*2])\n        cylinder($fn = 50, h=windowsize*1.3, r=windowjamb/2, center=true);\n    }\n}\n\n//window shell\nmodule window_outer () {\n    union () {\n        cube([windowsize, wallwidth*2, windowsize], true);\n\n        rotate([90, 0, 0])\n        translate([0,windowsize/2,0])\n        cylinder($fn = 30, h=wallwidth*2, r=windowsize/2, center=true); \n    }\n}\n\n///////////////////////////////////\n\n//MIDDLE TOWER\n\nmodule middle_tower () {\n    //tower with inner cutout\n    translate ([0, 0, floorheight]) \n    difference () {\n        cube([middleroom, middleroom , floorheight*2], true);\n        cube([middleroom - (wallwidth*2), middleroom - (wallwidth*2) , floorheight*2 + 1], true);\n    }\n}\n\nmodule middle_top () {\n    //inverted cut pyramid shape\n    translate ([0, 0, floorheight*2])\n    rotate ([0, 0, 45])\n    cylinder(wallwidth*3, middleroom*0.71,middleroom,$fn=4); //z, bottom, top\n\n    //roof parapet\n    translate ([0, 0, floorheight*2 + wallwidth*3 + wallwidth*2.5]) {\n        difference () {\n            cube([middleroom*1.45, middleroom*1.45 , wallwidth*5], true);\n            cube([middleroom*1.45 - (wallwidth*2), middleroom*1.45 - (wallwidth*2) , floorheight*2 + 1], true);\n        }\n    }\n}\n\nmodule middle_turret_cut () {\n    union () {\n        for (i=[-1.5:turretsize*2:1.5]) {\n            //y axis turret cutouts\n            translate([0,i,floorheight*2 + wallwidth*3 + wallwidth*5 - turretsize/2])\n            cube([10,turretsize,turretsize*1.1], true);\n            \n            //y axis turret cutouts\n            translate([i,0,floorheight*2 + wallwidth*3 + wallwidth*5 - turretsize/2]) \n            cube([turretsize,10,turretsize*1.1], true);\n        }\n    }\n}\n\nmodule middle_roof () {\n    difference () {\n        middle_top ();\n        middle_turret_cut ();\n    }\n}\n\nmodule middle_window_cutouts () {\n    union () {\n        translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n        window_outer ();\n\n        translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n        window_outer ();\n\n        rotate([0,0,90]) {\n            translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n            window_outer ();\n                \n            translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n            window_outer ();\n        }\n    }\n}\n\nmodule middle_windows () {\n    translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n    window ();\n\n    translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n    window ();\n\n    rotate([0,0,90]) {\n        translate([0,middleroom/2 - wallwidth/2,middlewindowheight])\n        window ();\n            \n        translate([0,-middleroom/2 + wallwidth/2,middlewindowheight])\n        window ();\n    }\n}\n\n///////////////////////////////////\n\n//OUTER WALL\n\nmodule outer_wall () {\n    //wall with inner cutout\n    translate ([0, 0, floorheight/2]) \n    difference () {\n        cube([outerwallsize, outerwallsize , floorheight], true);\n        cube([outerwallsize - (wallwidth*2), outerwallsize - (wallwidth*2) , floorheight + 1], true);\n    }\n}\n\nmodule outer_turret_cut () {\n    union () {\n        for (i=[-4.5:turretsize*2:4.5]) {\n            //y axis turret cutouts\n            translate([0,i,floorheight - turretsize/2])\n            cube([15,turretsize,turretsize*1.1], true);\n            \n            //y axis turret cutouts\n            translate([i,0,floorheight - turretsize/2]) \n            cube([turretsize,15,turretsize*1.1], true);\n        }\n    }\n}\n\n///////////////////////////////////\n\n//OUTER TOWERS\n\nmodule outer_tower_structure () {   \n    //tower\n    difference () {\n        cylinder($fn=75, h=towerheight, r=towersize, center=true);\n        cylinder($fn=75, h=towerheight + 1, r=towersize - wallwidth, center=true);\n    }\n\n    //roof\n    translate ([0, 0, towerheight/2])\n    cylinder(towerheight*0.4, towersize*1.75, 0, $fn=100); \n}\n\nmodule outer_tower () {\n    //cutting out window\n    color(\"grey\") difference () {\n        translate ([0, 0, towerheight/2])\n        outer_tower_structure ();\n\n        translate ([0, towersize*0.8, towerheight*0.7])\n        window_outer ();\n    }\n\n    //adding window\n    translate ([0, towersize*0.8, towerheight*0.7])\n    color([140/255, 105/255, 30/255])\n    window ();\n}\n\n//drawing all windows\nmodule all_towers () {\n    translate ([outerwallsize/2, outerwallsize/2, 0])\n    outer_tower ();\n    \n    translate ([-outerwallsize/2, outerwallsize/2, 0])\n    outer_tower ();\n    \n    translate ([-outerwallsize/2, -outerwallsize/2, 0])\n    rotate([0, 0, 180])\n    outer_tower ();\n    \n    translate ([outerwallsize/2, -outerwallsize/2, 0])\n    rotate([0, 0, 180])\n    outer_tower ();\n}\n\n///////////////////////////////////\n\n//DOOR\n\nmodule door () {\n    union () {\n        cube([doorsize, wallwidth*2, doorsize], true);\n\n        rotate([90, 0, 0])\n        translate([0,doorsize/2,0])\n        cylinder($fn = 30, h=wallwidth*2, r=doorsize/2, center=true); \n    }\n}\n\n///////////////////////////////////\n\n//middle tower\ncolor(\"grey\") {\n    difference () {\n        middle_tower ();\n        middle_window_cutouts ();\n    }\n    middle_roof ();\n}\ncolor([140/255, 105/255, 30/255]) middle_windows ();\n\n//outer boundary wall\ncolor(\"grey\") difference () {\n    outer_wall ();\n    outer_turret_cut ();\n}\ntranslate([0, outerwallsize/2 - wallwidth/2, doorsize/2]) color([140/255, 105/255, 30/255]) door ();\n\n//towers\nall_towers ();",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ihbigaahdgep4pniu7bk",
        "width": 1505,
        "height": 1249,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kannpcdwfxpjffjxso2q",
        "width": 1375,
        "height": 1177,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hnzqytgeargw7jiz5trt",
        "width": 1708,
        "height": 1265,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T22:37:22.659Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-04T14:44:13.942Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-05-04T23:59:17.981Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MYN8tpLL7DY8Ggp4D",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-28T16:04:06.561Z",
    "posted": true,
    "lesson": "API",
    "description": "I wanted to recreate the garden sketch I made in parameters week in paper.js. I've been planning to print this sketch on the risograph, and I thought paper.js would work well because it will allow me to easily separate the different colored layers in illustrator. I am still working out how to change some of the petal colors, but I think it might be easier to do that in illustrator.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bpaxpor8y0ocfu3puqfb",
        "width": 767,
        "height": 766,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/rque6anshxddhrohsjlv",
        "width": 762,
        "height": 766,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Mc7Prh4CCPubd5w2N",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-10T03:07:32.942Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Building on a previous sketch - ouroboros using HSL colors and noise",
    "code": "var img2;\nlet imgCheck = true;\n\nfunction preload() {\n  treeImg = loadImage(\"/trees.jpg\");\n}\n\nfunction setup() {\n  createCanvas(450, 600);\n  \n  colorMode(HSL)\n  \n  frameRate(1);\n  \n  img2 = createImage(width, height)\n  // noLoop();\n}\n\nfunction draw() {\n  background(240);\n  \n  if(imgCheck){\n  treeImg.loadPixels();\n    ref = treeImg\n    imgCheck = false\n  }\n  else{\n    img2.loadPixels();\n    ref = img2\n  }\n  \n  noStroke();\n\n  for (let y = 0; y < ref.height; y+=5) {\n    for (let x = 0; x < ref.width; x+=5) {\n\n      const in_color = ref.get(x, y);\n  \n      \n      const dot_size = (in_color[0] + in_color[1] + in_color[2])/90;\n      \n      p = map(x, 0, ref.width, 0, img2.width)\n      q = map(y, 0, ref.height, 0, img2.height)\n      \n      c = (noise(x, y+frameCount)-0.5)*200-100\n      \n      colorNewH = abs(in_color[0]-c)\n      colorNewS = abs(in_color[0]-50)\n      colorNewL = abs(in_color[0]-50)\n      \n      out_color = color(colorNewH, colorNewS, colorNewL)\n      \n      img2.set(p, q, out_color);\n      \n      // fill(in_color)\n      \n      // ellipse(\n      //   x,\n      //   y,\n      //   dot_size,\n      //   dot_size\n      // );\n    }\n  }\n  \n  img2.updatePixels();\n\n  noSmooth();\n  image(img2, 0, 0, width, height);\n  \n  // noLoop();\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ppr5u3zuymfg7iamjxnq",
        "width": 1280,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:41.522Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MgSceni5dXsv28Eb2",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-07T02:10:14.192Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "**Couch Co-op Pong Golf with Aabha:** We made pong, with the goal to push the ball into the black hole to score. W-S controls the left paddle, UP/DOWN arrow controls the right paddle. The hole is positioned in a random point in the play-space every round. Right now, we need to refine the mechanic though, the ball is hard to control, and you can score through luck very often",
    "code": "let topWall, bottomWall, leftWall, rightWall, ball, racketLeft, racketRight, basket;\nlet hole;\nlet holeX=250, holeY=250;\nlet score = 0;\nlet ballSpeed=10;\n\nlet leftPos = 250;\nlet rightPos = 250;\n\nfunction setup() {\n    createCanvas(500, 500);\n    noStroke();\n\n    topWall = createSprite(250, 10, 500, 20);\n    bottomWall = createSprite(250, 490, 500, 20);\n    leftWall = createSprite(10, 250, 20, 500);\n    rightWall = createSprite(490, 250, 20, 500);\n    racketLeft = createSprite(40, leftPos, 20, 70);\n    racketRight = createSprite(460, 250, 20, 70);\n\n    holeX = random(60, 440);\n    holeY = random(20, 480);\n    hole = createSprite(holeX, holeY, 30, 30);\n \n hole.shapeColor = color(0, 0, 0);\n  leftWall.shapeColor = color(100, 100, 100);\n  rightWall.shapeColor = color(100, 100, 100);\n  topWall.shapeColor = color(100, 100, 100);\n  bottomWall.shapeColor = color(100, 100, 100);\n  racketLeft.shapeColor = color(255, 0, 0);\n    racketRight.shapeColor = color(0, 0, 255);\n\n    // basket = createSprite(250, 455, 100, 81);\n    // basket.addAnimation('normal', 'assets/basket.png');\n\n    topWall.immovable = true;\n    bottomWall.immovable = true;\n    leftWall.immovable = true;\n    rightWall.immovable = true;\n    racketLeft.immovable = true;\n    racketRight.immovable = true;\n    hole.immovable = true;\n    // basket.immovable = true;\n\n    ball = createSprite(30, 30, 20, 20);\n    ball.setVelocity(setBiasedVelocity(), setBiasedVelocity());\n    ball.shapeColor = color(252, 169, 3);\n\n\n  }\n\n  function setBiasedVelocity() {\n    let a;\n    if (random()<0.5)\n        {a = min(random(-7, 7), random(-7, 7), random(-7, 7), random(-7, 7));}\n    else\n        {a = max(random(-ballSpeed, ballSpeed), random(-ballSpeed,ballSpeed), random(-ballSpeed, ballSpeed), random(-ballSpeed, ballSpeed));}\n    \n    \n    return a;\n  }\n \n \nfunction draw() {\n    background(220);\n       \n    ball.bounce(topWall);\n    ball.bounce(bottomWall);\n    ball.bounce(leftWall);\n    ball.bounce(rightWall);\n\n    ball.bounce(racketLeft);\n    ball.bounce(racketRight);\n\n    racketLeft.bounce(topWall);\n    racketLeft.bounce(bottomWall);\n    racketRight.bounce(topWall);\n    racketRight.bounce(bottomWall);\n\n    if (ball.overlap(hole)) {\n        score++;\n\n        ball.position.x = 250;\n        ball.position.y = 250;\n        ball.setVelocity(setBiasedVelocity(), setBiasedVelocity());\n\n        holeX = random(60, 440);\n        holeY = random(20, 480);\n        hole.position.x = holeX;\n        hole.position.y = holeY;\n\n        console.log(score);\n    }\n    textSize(25);\n  text(\"Score:\", 200, 250);\n \n    text(score, 280, 250);\n\n    racketLeft.position.y = constrain(leftPos, racketLeft.height / 2 + 20, height - 20 - racketLeft.height / 2);\n    racketRight.position.y = constrain(rightPos, racketRight.height / 2 + 20, height - 20 - racketRight.height / 2);\n\n    if (keyDown('w')) {\n        leftPos -=10;\n    }\n\n    if (keyDown('s')) {\n        leftPos +=10;\n    }\n\n    if (keyDown(DOWN_ARROW)) {\n        rightPos +=10;\n    }\n\n    if (keyDown(UP_ARROW)) {\n        rightPos -=10;\n    }\n\n   \n\n    drawSprites();\n\n\n  }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zqjb8ypwmunnlxaxkebi",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:47:20.201Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T04:17:55.923Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:31:29.59Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MhqLK8MXnTwLBfiip",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-24T06:17:59.493Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Pair challenge: worked on rama's svg file in illustrator",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rl0mahfy4bf92e9sqadp",
        "width": 1335,
        "height": 1268,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wj4sf17ceiwfof1rhqp2",
        "width": 1335,
        "height": 1268,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/a62xucejhcnj34hj0j3y",
        "width": 1335,
        "height": 1268,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-03-26T19:06:08.504Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-08T21:58:07.275Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:33:05.126Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Mk4JCM3EiCpyjxyA4",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-05-05T03:40:03.866Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Here is my unrendered sandcastle! I made the shells in Blender, but everything else was created in OpenScad",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hv7cwf8zkewg2aelyhhw",
        "width": 976,
        "height": 631,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T04:31:15.693Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Mpid3BSFhiJW4zRjD",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-07T14:07:37.326Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "WEEK 9 (1/4): I did not like using p5play.org at all, this was one of the worst weeks for me and I just couldn't figure anything out. So in light of that, here is a game I made using sprites through unity :D. It is like pacman. https://levtrix3.itch.io/cheese-chaser",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/o06f31nyxxdis70uf6tw",
        "width": 650,
        "height": 518,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/b6kb7e6llzwuvm0cvezd",
        "width": 1912,
        "height": 1142,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "MsideZJ957Sz7QQyC",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-05-11T19:41:02.409Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "**Pavilion** in progress on OpenSCAD.",
    "code": "for (i=[0: 4: 1000]) { \n    \n    translate ([i/1.5, sin(i)*90, cos(i)*90]) {\n        color(c = [(sin(i) + 1)/2, (cos(i) + 1)/2, 0.8]) \n        cube([i/50, i/5, i/50]);\n        if (i%20 == 0) {  color(c = [(sin(i) + 1)/2, (cos(i) + 1)/2, 0.8]) cube([4, 2, 200]); }\n    }\n   \n}\n\ntranslate([-50, -100, 100]) {\n    color(\"white\") cube([800, 300, 5]);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/beqzsoghg9mdp4r0fc1a",
        "width": 1220,
        "height": 1220,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/pkcqfklostkol3wp0mi6",
        "width": 1220,
        "height": 1220,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/az5njrijmzdcptsuwfwk",
        "width": 1220,
        "height": 1220,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:18.703Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "MvpcpoRgE8TsqpyT9",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-16T17:28:34.173Z",
    "posted": true,
    "lesson": "Noise",
    "description": "My attempt at a \"treasure map\" - I ran out of time, but I like how the river was starting to look as I was manipulating noise",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qgojwea3ap81lse0fp87",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T18:31:09.526Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:35.687Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "N4NjbvmriAGLPMjSR",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-27T23:20:40.707Z",
    "posted": true,
    "lesson": "API",
    "description": "Going back to vectors to play around for some practice - still having a hard time with it",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar rects = [];\n\n// #822362\n\nvar bgRect = new Rectangle([0, 0],[500,500]);\nvar bgPath = new Path.Rectangle(bgRect);\n// bgPath.fillColor = \"#ebe6c7\";\n// bgPath.fillColor = \"white\";\nbgPath.fillColor = \"#822362\"\n\nvar col = [\n    '#f4c7ff',\n    '#c592d1',\n    '#9c61ab',\n    '#6d387a',\n    '#531b61',\n    '#4a0c59',\n    '#410152',\n    '#fbebff'\n];\n\nvar num = col.length;\n\nfor (i= 0; i<500; i+=40){\n    for(var j=0; j<500; j+=40){\n    var rect = new Rectangle([i, j], [50, 50]);\n    rects[i*j] = new Path.Rectangle(rect);\n    // rects[i*j].strokeColor = 'red';\n    \n    rects[i*j].rotate(i*j+10);\n    \n    rects[i*j].style = {\n  strokeColor: col[i%7],\n  strokeWidth: 2,\n  dashArray: [4, 4],\n};\n    }\n    \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/iwiwuzao4ypxx9vzinsk",
        "width": 992,
        "height": 994,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "N5rXqR6oqTBR4GPNg",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-09T22:26:01.865Z",
    "posted": true,
    "lesson": "Random",
    "description": "For the pair challenge, Chris and I created a sketch that generates random images using a decorative typeface from Ohno called Casual Textile using the deck tactic",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ephea7uoh0irfoqjcbin",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bsta158zdwr5ozelvysg",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:44:36.965Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "N88cCyBZavY8botCZ",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-12T00:00:04.165Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Highly derivative SNAIL from Justin's drawLeaf()",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noFill();\n  stroke(255);\n  background(50);\n  noLoop();\n\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 255);\n  myTurtle.penDown();\n\n  for (let i = 0; i < 150; i++) {\n    myTurtle.moveForward(5 + i * 0.1);\n    myTurtle.turnLeft(10);\n    drawLeaf();\n  }\n    myTurtle.penUp();\n    myTurtle.moveTo(200, 325);\n    myTurtle.penDown();\n    myTurtle.turnTo(0);\n    myTurtle.moveBackward(80);  \n    drawLeaf();\n      myTurtle.penUp();\n    myTurtle.moveTo(110, 325);\n      myTurtle.penDown();\n      drawLeaf();\n    //  myTurtle.turnTo(20);\n    //   myTurtle.moveBackward(40);  \n}\n\nfunction drawLeaf() {\n  myTurtle.pushState();\n\n  for (i = 0; i < 15; i++) {\n    myTurtle.moveForward(2);\n    myTurtle.turnLeft(8);\n  }\n\n  myTurtle.popState();\n  \n\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sw7jvfibi6s1siqggart",
        "width": 856,
        "height": 858,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T16:17:05.662Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "NSfhXRZuQQP5kcwgj",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-08T17:09:04.348Z",
    "posted": true,
    "lesson": "Random",
    "description": "Recreation of Piet Mondrian's Composition with Yellow, Blue and Red 1937–42.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/n2kxpfaww3b0bons0dde",
        "width": 498,
        "height": 497,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/k2wltkbeqc0wresmdxxd",
        "width": 750,
        "height": 741,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ho8jdwdzpqoolotpwpjb",
        "width": 756,
        "height": 747,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-08T21:24:40.278Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:46:45.846Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "NTh7WDFkipFpEaWZM",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-17T00:35:13.913Z",
    "posted": true,
    "lesson": "Noise",
    "description": "The final piece for the pair challenge. For this piece, I used my random noise lines sketch and keren's piece that was inspired by grass",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tpzgf5au6qe6gabcqr2t",
        "width": 2480,
        "height": 2404,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vrjrjk2eg7qzrfa51uax",
        "width": 2480,
        "height": 2404,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:37:11.631Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "NWBenLXw8ijNZJrtP",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-12T08:56:17.278Z",
    "posted": true,
    "lesson": "Text",
    "description": "Take 1 on the text challenge. The program doesn't generate the story yet, but it reorders the sentences to create different narratives.",
    "code": "// require https://cdn.jsdelivr.net/npm/tracery@1.0.3/\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet story = [\n    \"The wind howled through the trees, as lightning illuminated the sky.\",\n    \"The darkness outside was palpable, and it felt like anything could be lurking in the shadows.\",\n    \"I heard a creaking sound, and my heart raced as I imagined what could be making it.\",\n    \"It was a night that made me feel like I was in a horror movie, and I couldn't wait for it to be over.\",\n    \"As I looked out the window, I saw a figure standing in the darkness, watching me.\",\n    \"The storm grew stronger, and the trees outside began to sway ominously.\",\n    \"I felt a sense of foreboding, as if something terrible was about to happen.\",\n    \"The lightning illuminated a nearby mirror, and for a moment, I saw a face that wasn't mine.\",\n    \"The thunder was so loud, I thought the roof was going to cave in.\",\n];\nlet sentence = 0;\n\nfunction setup() { story = shuffle(story) }\n\nfunction main() {\n    display(\"It was a dark and stormy night.\")\n    for (let i=0; i<story.length; i++) {\n        let order = story[sentence];\n        sentence++;\n        display(order);\n    }\n}\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 15px; margin: 1%; line-height: 1;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}\nsetTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cmgaaffkxmggkqqcca6e",
        "width": 1055,
        "height": 434,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ts6g1nqrh81db0kwqcym",
        "width": 1055,
        "height": 434,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "NY4KG3mhQRxbfageA",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-28T03:13:58.049Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Extension of Challenge 1. Threw in some squares into the mix and proceeded to mix my attempt with the starting sketch. Also turned off the noLoop() function so I can have this sketch continually produce randomly generated arrangements.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(50);\n\n  noStroke();\n  ellipseMode(CENTER);\n  rectMode(CENTER);\n\n  let noiseFrequency = 1;\n  let r = float(random(0, 255));\n  let g = float(random(0, 255));\n  let b = float(random(0, 255));\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    \n    //let x = noise(i * noiseFrequency, 0) * width;\n    //let y = noise(i * noiseFrequency, 1000) * height;\n    \n    let x1 = random(width);\n    let y1 = random(height);\n    \n    let x2 = noise(i * noiseFrequency, 0) * width;\n    let y2 = noise(i * noiseFrequency, 1000) * height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    let diameter = float(random(1, 20));\n    let Size = float(random(1, 20));\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    //fill(r, g, b);\n\n    colorMode(HSB, 100);\n    \n    for (let j = 0; j < 100; j++) {\n      for (let k = 0; k < 100; k++) {\n        fill(i, j, k, random(0, 256));\n      }\n    }\n    ellipse(x1, y1, diameter, diameter);\n    rect(x2, y2, Size, Size);\n  }\n\n  //noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/smjzeamu5djkinvssv8m",
        "width": 596,
        "height": 601,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Ncs3wjSfKRb8snRGE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-01-31T13:54:19.266Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Response to Shristi's instructions",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/brpfaobaysjlo0xwo1du",
        "width": 2048,
        "height": 2048,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-01-31T18:59:23.789Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T22:40:07.94Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-03T06:51:00.675Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:21.416Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Ndp9uJ6WYMWkxupyj",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-31T14:14:54.38Z",
    "posted": true,
    "lesson": "Music",
    "description": "I've always known this song but I was today years old when I learned that it's called Heart and Soul.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/b03cjjbku40gde0rvnlt",
        "width": 2248,
        "height": 1310,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "NgkRsbnAoZEf6NXNz",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-05-12T06:39:14.27Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "playing with the spirograph example",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dullvwe2nyhovrqjqy4n",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Nq88xuhBGzEvwak3w",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-01-28T19:23:35.672Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Instruction set for my group. Let me know if there's anything that needs clarification.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/veotzwzg8opnbm4gwu3t",
        "width": 1141,
        "height": 581,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-28T19:52:17.071Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "NuDLG5axTB6sTCxem",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-05-05T12:45:10.543Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "**Working with Difference, Loops & Procedural Generation in OpenSCAD:** One unit in a weird staircase that took too long to render",
    "code": "//Base\nfor (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\ntranslate([0, -50+j, -5 + j]) {\n    cube([250, 100, 5]);\n}\n}\n}\n\n\nrotate([0, 0, -90]){\n    translate([-250, 0, 0]) {\nfor (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\ntranslate([0, -50+j, -5 + j]) {\n    cube([250, 100, 5]);\n}\n}\n}\n}\n}\n\n\ndifference() {\n    for (a = [0: 50: 200]) {\n        for (b = [0: 50: 600]) {\n            if (rands(0, 1, 1)[0] < 0.8) {\n                translate ([a, b, b]) {\n                    //Cube\n                    difference() {\n                        cube ([50, 20, 50]);\n                        translate([25, 0, 25]) {\n                            rotate([0, 90, 90]) {\n                                cylinder(20, 20, 12);\n                            }\n                        }\n                    }\n                \n                    //Sphere\n                    translate([25, 10, 25]) {\n                        sphere(8);\n                    }\n                \n                    //Rod through sphere\n                    translate([25, 10, 25]) {\n                        rotate([0, 10, 0]) {\n                            cylinder(50, 1, 1, center=true); \n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\n            translate([i, j, j]) {\n                if (rands(0, 1, 1)[0] < 0.8) {\n                    sphere(rands(10, 24, 1)[0]);\n                }\n            }\n        }\n    }\n}\n\nrotate([0, 0, -90]){\n    translate([-250, 0, 0]) {\n        difference() {\n            for (a = [0: 50: 200]) {\n                for (b = [0: 50: 600]) {\n                    if (rands(0, 1, 1)[0] < 0.8) {\n                        translate ([a, b, b]) {\n                            //Cube\n                            difference() {\n                                cube ([50, 20, 50]);\n                                translate([25, 0, 25]) {\n                                    rotate([0, 90, 90]) {\n                                        cylinder(20, 20, 12);\n                                    }\n                                }\n                            }\n                        \n                            //Sphere\n                            translate([25, 10, 25]) {\n                                sphere(8);\n                            }\n                        \n                            //Rod through sphere\n                            translate([25, 10, 25]) {\n                                rotate([0, 10, 0]) {\n                                    cylinder(50, 1, 1, center=true); \n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            for (i = [0: 50: 250]) {\n        for (j = [0: 50: 600]) {\n            translate([i, j, j]) {\n                if (rands(0, 1, 1)[0] < 0.8) {\n                    sphere(rands(10, 24, 1)[0]);\n                }\n            }\n        }\n    }\n        }\n    }\n}\n\n\n//sphere(16);\n                //translate([50, 20, 0]) {\n                    //sphere(16);\n                //}\n                \n                //translate ([50, 0, 50]) {\n                    //sphere(18);\n                //}\n                \n                //translate ([0, 20, 50]) {\n                    //sphere(16);\n                //}//sphere(16);\n                //translate([50, 20, 0]) {\n                    //sphere(16);\n                //}\n                \n                //translate ([50, 0, 50]) {\n                    //sphere(18);\n                //}\n                \n                //translate ([0, 20, 50]) {\n                    //sphere(16);\n                //}\n// Legs\n// translate ([0, 0, 0]) {\n// cylinder (20, 8, 2);\n// }\n// translate ([50, 0, 0]) {\n// cylinder (20, 8, 2);\n// }\n// translate ([50, 20, 0]) {\n// cylinder (20, 8, 2);\n// }\n// translate ([0, 20, 0]) {\n// cylinder (20, 8, 2);\n// }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wr50prxlg5rw3jkcecyy",
        "width": 1198,
        "height": 1198,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ddww8oiemo4ojf8nl0lx",
        "width": 1198,
        "height": 1198,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ig8jdydbotb2sci0bprh",
        "width": 1276,
        "height": 1274,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:09.307Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-05T16:46:02.245Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T22:55:11.092Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:20.86Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "P4mTPm7hdn4kXaLBW",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-23T12:46:35.229Z",
    "posted": true,
    "lesson": "Params",
    "description": "WEEK 4 (2/4): This is what I made of Johnnys code for the pair challenge.",
    "code": "function setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  noStroke();\n\n\n\n  createP(\"Circle Size\");\n  circlesizeSlider = createSlider(0, 200, 10);\n\n \n}\nfunction draw() {\n  background(\"black\");\n  fill(\"white\");\n  drawShapes(); \n}\n\nfunction drawShapes() {\n\n  circleSize = circlesizeSlider.value();\n\n\n  ellipse(0, 0, circleSize, circleSize);\n\n  // noprotect\n  for(y = 0; y < 35; y++) {\n    for(x = 0; x < 30; x++) {\n      translate(x + 10, y + 20);\n      \n      \n  \n\n  //Center Line\n      ellipse(x , y, circleSize, circleSize)\n        fill(\"rgb(255,6,6)\");\n  \n   //Topper Line\n      ellipse(x + 300 , y - 55, circleSize, circleSize);\n      fill(\"rgb(255,129,0)\");\n    \n  //Top Line\n      ellipse(x + 150 , y - 55, circleSize, circleSize);\n      fill(\"rgb(111,255,0)\");\n      \n  //Bottom Line\n      ellipse(x -150 , y + 55, circleSize, circleSize);\n      fill(\"rgb(4,96,255)\");\n      \n  // Bottomer Line\n      ellipse(x -300 , y + 55, circleSize, circleSize);\n      fill(\"rgb(255,229,23)\");\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dswwo4kbfn2vbcpb9w00",
        "width": 798,
        "height": 734,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "P58YSvCtYN2BwFWys",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-06T19:40:12.292Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Smooth vs noSmooth experiments",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ld0qm84vtkqmypeo2exi",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/rx7haupad54nhiguy1ra",
        "width": 998,
        "height": 998,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-06T22:47:24.88Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-03-07T00:53:13.215Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:45:53.662Z"
      }
    ],
    "comments": [
      {
        "comment": "noSmooth>>>>>",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-06T22:47:22.635Z"
      },
      {
        "comment": "I usually use noSmooth, but the smoothing has some merit here\n\nseeing so many ways to roll with this\nwhat if you exported the tiny pixel perfect image and then tried different upscalers (like some of the AI ones, which might add in unexpected details)\nOr take this smoothed result and \"postererize\" it in PSP.\nOr take the smoothed one, and feed it back in to an oroborus sketc\n",
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-03-07T00:58:09.297Z"
      }
    ]
  },
  {
    "_id": "P8Rjrym9SWAHPtSef",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-08T14:18:12.837Z",
    "posted": true,
    "lesson": "Random",
    "description": "Played around with combining different biased random values. Flowers near mouseX are smaller and darker, turning larger and lighter the further they get. The proportion and size of the petals is controlled by a combination of different high and low biases.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 10;\nlet eMax = 30;\nlet eMin = 5;\nlet colHue = 285;\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n  noStroke();\n  frameRate(3);\n  colorMode(HSB)\n}\n\nfunction draw() {\n  background(220);\n\n  for (let i = 2 * num; i < width; i += 4 * num) {\n    for (let j = 2 * num; j < height; j += 4 * num) {\n      \n      let inner;\n      let outer;\n      let d = dist(i, j, mouseX, mouseY);\n      let c = map(d, 0, width, 100, 0);\n\n      if (d < width / 4) {\n        inner = min(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = min(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      } else if (d < width / 2) {\n        inner =\n          (random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin) +\n            random(eMin)) /\n          5;\n        outer =\n          (random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax) +\n            random(eMax)) /\n          5;\n      } else {\n        inner = max(\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin),\n          random(eMin)\n        );\n        outer = max(\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax),\n          random(eMax)\n        );\n      }\n\n      push();\n\n      translate(i, j);\n\n      for (let a = 0; a < 8; a++) {\n        rotate((a * 360) / 8);\n        fill(colHue, c, 100);\n        beginShape();\n        curveVertex(0, 0);\n        curveVertex(inner, 0);\n        curveVertex(outer + inner, outer - inner);\n        curveVertex(outer + inner, outer + inner);\n        curveVertex(outer - inner, outer + inner);\n        curveVertex(0, inner);\n        curveVertex(0, 0);\n        endShape();\n      }\n      fill(colHue, c, 50);\n      ellipse(0, 0, 2*inner, 2*inner);\n\n      pop();\n      \n    }\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gnkwh1ce5nmgccfxowse",
        "width": 1300,
        "height": 1300,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-08T14:31:13.602Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-08T19:32:41.992Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:50:05.66Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-10T00:57:49.423Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "PAXDjfymv3NNRyvXm",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-10T16:31:02.506Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Combining the Pixel Ouroboros with the pair challenge. Fed the \"pixelated\" screenCapture video sketch I made into Rama's code. And then put that image into my tapestry code.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cxtjiemeovgo26vix9cj",
        "width": 1196,
        "height": 802,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/tyvuwyz1f2rhz5cr3vxb",
        "width": 900,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/awrwxabytgmaebbscftl",
        "width": 1200,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "PG6htc4doo99MJHMt",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-24T12:27:14.654Z",
    "posted": false,
    "lesson": "Vectors",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "PLXQpjTWGc5mwoKZn",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-28T02:38:43.125Z",
    "posted": true,
    "lesson": "Music",
    "description": "Working on a good way to do chord progressions. I guess this would count as my individual but I want to improve it. I really want to work on the sound design for the synths as I'm curious about how far Tone.js can go!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\nconst synth = new Tone.PolySynth(11, Tone.Synth).toMaster();\nconst synth2 = new Tone.PolySynth(11, Tone.Synth).toMaster();\n\nconst chord1 = {\n    notes:[\"B4\", \"G4\", \"E4\", \"C4\"],\n    length: 2\n}\n\nconst chord2 = {\n    notes:[\"C5\", \"A4\", \"F4\", \"D4\"],\n    length: 2\n}\n\nconst chord3 = {\n    notes:[\"A4\", \"G4\", \"C4\", \"D#4\"],\n    length: 1\n}\n\nconst chord4 = {\n    notes:[\"G4\", \"C4\", \"D#4\", \"G#3\",],\n    length: 1\n}\n\nconst chordProg = [chord1, chord2, chord1, chord3, chord4, chord1, chord2, chord1, chord3, chord4];\nwindow.onmousedown = () => {\n\n  let t = Tone.now();\n  for (const chord of chordProg) {\n    if (chord.notes !== \"rest\") {\n      synth.triggerAttackRelease(chord.notes, Tone.Time(chord.length), t);\n    }\n    t += Tone.Time(chord.length);\n  }\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/imwat6xouurqmqqidyot",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-29T00:11:42.344Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "PYnFWbXbGzCNkDh52",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-09T16:05:25.04Z",
    "posted": true,
    "lesson": "Random",
    "description": "Bridget Riley-inspired artwork. I experimented with how the random colors appear, including the way the colors repeat to create larger blocks of color",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yxs8ikthpzo72ji6rkrw",
        "width": 1174,
        "height": 1410,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-09T17:16:54.145Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-10T00:39:27.875Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:51:12.247Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "PZSNQwAuhRLPxB2oF",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-09T23:04:30.275Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Started with an easy one!",
    "code": "var angle = 2.0;\nvar offset = 300;\nvar scalar = 3.5;\nvar speed = 0.1;\nvar col = {\n  r: 255,\n  g: 0,\n  b: 0\n};\n\nfunction setup() { \n  createCanvas(600, 600);\n  noStroke();\n  background (0);\n} \n\nfunction draw() { \n  \n // loadPixels();\n  \n  \n  \n  col.r = random(0, 200);\n  col.g = random(0, 250);\n  col.b = random(100, 250);\n  var x = offset + cos(angle) * scalar;\n  var y = offset + sin(angle) * scalar;\n  fill(col.r, col.g, col.b);\n  noStroke();\n  rect(x, y, 20, 20);\n  angle += speed;\n  scalar += speed;\n  \n  //updatePixels();\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/han0k58y5tqctaxty7iz",
        "width": 558,
        "height": 560,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:11.785Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:16.852Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Pc6c6b3Qdoz6vWnSB",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-02T04:44:25.885Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Challenge 2 - I struggled with figuring out where to place frameCount in the code",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/byu1dcnzfrqyvnpxkllc",
        "width": 1000,
        "height": 1102,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Q2aaQozk449CotCFM",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-01-29T03:36:54.887Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Sketch instructions for Julia! I hope this is clear enough, have fun trying it out :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zjwknspkf70q1pfwh0qr",
        "width": 2142,
        "height": 1208,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T23:04:26.347Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QBR7K8ygu6our6q3a",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-21T15:50:03.3Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "**Phind & ChatGPT attempts Spirals on p5.js, no code input:** I tried to recreate a spiral's sketch from Strategies week. The prompts were a variation of \"Using p5.js, how might we create three large loosely spaced spirals with the same center and starting point, spiraling outward clockwise, while each point on each spiral is slightly displaced by perlin noise.\" Phind gave the first two results (without any modifications by me, at this point). Chat GPT generated the third image for the same prompt. I think I'd need to refine the prompts much more, to get something closer to the original sketch",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nrqmnjaqfoo2mv3jsrsi",
        "width": 1262,
        "height": 1256,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/j4s0l7ihqt526lulovbz",
        "width": 1262,
        "height": 1256,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wa1bbuhwdukr0nk74daf",
        "width": 1204,
        "height": 1204,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:29.671Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QDB4s6HhzmrceR9oL",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-15T21:42:29.69Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Tried to do an ancient map with an ink-like path towards the treasure.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\n let homeStartX, homeStartY;\n\nlet treasureX, treasureY;\n\n let dispX;\n   let dispY;\n\nlet x = 30;\nlet y=30;\n\nfunction setup() {\n  createCanvas(800, 800);\n  // noLoop();\n  rectMode(CENTER);\n  \n   background(237, 226, 202);\n\n  noStroke();\n\n  for (let x = 5; x < width; x += 10) {\n    let r, g, b, t;\n    r = 30;\n    g = 20;\n    b = 10;\n    t = 150;\n    let c;\n\n    for (let y = 5; y < height; y += 10) {\n      let n;\n      n = noise(x * 0.01, y * 0.01) * 50 - 25;\n\n      c = noise(x * 0.1, y * 0.1) * 200 - 100;\n\n      fill(r + c, g + c, b + c, t + c);\n      // ellipse(x+ n , y+ n , 10 + n, 10 + n);\n      rect(x, y, 12 + n, 12 + n);\n    }\n\n    r -= c;\n    g -= c;\n    b -= c;\n  }\n  \n  homeStartX = random(width);\n  homeStartY = random(height);\n  \n  push()\n  fill(0, 0, 255)\n  ellipse(homeStartX, homeStartY, 30, 30);\n  pop\n  \n  treasureX = random(width);\n  treasureY = random(height);\n  \n  push()\n    stroke(255, 0, 0)\n  noFill();\n  strokeWeight(3)\n  ellipse(treasureX, treasureY, 40, 40);\n  pop()\n  \n  push()\n  fill(255,0,0)\n  ellipse(treasureX, treasureY, 20, 20);\n  pop()\n\n\n}\n\nfunction draw() {\n  \n  fill(0, 0, 255)\n  if (homeStartX < treasureX){\n    homeStartX = homeStartX+1;\n  }\n  else{\n    homeStartX = homeStartX-1\n  }\n  \n  if(homeStartY<treasureY){\n    homeStartY = homeStartY+1\n  }\n  else{\n    homeStartY = homeStartY-1\n  }\n  \n  let movement;\n  \n  movement = noise(frameCount*0.01) * 20 - 10;\n  noiseDetail(0)\n  \n  ellipse(homeStartX - movement, homeStartY + movement, 6 + movement, 6+ movement)\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wkawb4n5ynel1gjfjm5n",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T00:12:24.513Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QFxpQGy4tiXwXfdrY",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-12T16:02:49.43Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Last sketch ever",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup(){\n    createCanvas(600, 600);\n    noFill();\n    stroke(255);\n    background(0);\n    // noLoop();\n    myTurtle = new Turtle();\n}\n\nfunction draw(){\n  myTurtle.penUp();\n    myTurtle.moveTo(300, 300);\n\n      myTurtle.penDown();\n      for(let i =0; i<20; i++){\n          myTurtle.moveForward(50);\n          myTurtle.turnLeft(20);\n           myTurtle.pushState();\n\n      myTurtle.penDown();\n  myTurtle.turnLeft(20);\n  myTurtle.moveBackward(30);\n  myTurtle.pushState();\n\n      myTurtle.penDown();\n  myTurtle.turnLeft(40);\n  myTurtle.moveForward(40);\n  \n  myTurtle.popState();\n  myTurtle.popState();\n      }\n   \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tmjbl6uwlfync8nyu8lr",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/begboc8xdmkkspzlqway",
        "width": 908,
        "height": 902,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "QH6FowSNScGaAH4t2",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-30T14:39:39.441Z",
    "posted": true,
    "lesson": "Music",
    "description": "starting with some sound visualization via my ukulele. i say \"sound\" because whatever is being strummed, isn't music yet! Stay \"tuned\"",
    "code": "let mic;\nlet n = 0;\nlet c = 6;\nlet fft;\n\nfunction setup() {\n  createCanvas(500, 500);\n  //variable will carry the input audio\n  mic = new p5.AudioIn();\n    mic.start();\n  fft = new p5.FFT();\n  fft.setInput(mic);\nbackground(0);\n\n  angleMode(DEGREES);\n    colorMode(RGB);\n\n}\n\nfunction draw() {\n  let vol = mic.getLevel();\n  let spectrum = fft.analyze();\n   console.log(spectrum);\nlet a = n * 137.5;\n  let r = c * sqrt(n) ;\n  let x = r * cos(a)+width/2;\n  let y = r *sin(a)+width/2;\n  // noStroke();\n  stroke(n%255,x%255,y%255);\n    // line(x,y,x+vol*150,y+vol*150);\n  strokeWeight(1);\n  noFill();\n  ellipse(x,y,200*vol,200*vol);\n\n n++;",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mnliqseoz9gcg3n5qeun",
        "width": 3456,
        "height": 1850,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ilm5ompv2ilqjgc5vg6j",
        "width": 998,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-30T17:20:22.38Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:11:59.728Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-31T03:35:40.103Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T03:38:26.158Z"
      }
    ],
    "comments": [
      {
        "comment": "so good!",
        "commenter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-03-31T04:47:05.548Z"
      }
    ]
  },
  {
    "_id": "QK6xFTFEZWen3i5Wz",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-01T05:51:11.944Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Expanding on challenge one to create a glitch-type visual with rectangles",
    "code": "function setup() {\n  createCanvas(400, 400);\n  colorMode(HSB); // setting color mode to HSB\n}\n\nfunction draw() {\n  background(50, 0, 10);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  // let noiseFrequency = 0.9;\n\n  for (let i = 0; i < 100; i++) {\n    // using randomGaussian() to concentrate the ellipses towards the center\n    let x = randomGaussian(width/2, 100);\n    let y = randomGaussian(height/2, 150);\n\n    // varying the diameter\n    let rectHeight = random(5, 25);\n\n    // generating a random hue value\n    let hue = random(0, 360);\n  \n    // using the random hue value and fixed saturation and brightness values to create a colorful ellipse\n    fill(hue, 80, 80);\n    \n    // ellipse(x, y, diameter, diameter);\n    rect(x, y, 100, rectHeight);\n  }\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/n9a7lcnutqzsazyt3r9r",
        "width": 784,
        "height": 794,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "QKJvJMJ24ZhZbX3BG",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-05T06:46:35.424Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Based on my own instructions",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kjvfhj1dwcapl14gsxhw",
        "width": 375,
        "height": 925,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T05:59:50.634Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QSMF4s76AiNEibaBW",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-01-29T22:32:00.413Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My interpretation of Rama's instructions!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dxuzlieh8zcncbwfv84s",
        "width": 3049,
        "height": 2665,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-30T01:55:06.053Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-01T15:25:06.381Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Qi4X8JJyJLrqqYShW",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-07T15:26:09.137Z",
    "posted": false,
    "lesson": "Microgames",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "QnZoWAb3cMYwnwRwt",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-07T04:20:01.693Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Worked on a couch co-op with Shrishti! The player (arrow keys) has to get to the ice cream truck while avoiding fire and the broccoli (WASD) has to stop them. Still has bugs but we've spent a combined total of about 6 hours on this so far so it's done lol",
    "code": "// images sourced from:\n// player: https://dinopixel.com/preload/0223/Player.png\n// rock: https://e7.pngegg.com/pngimages/851/410/png-clipart-rock-stone-pixel-art-nature-hard-pixel-8-bit.png\n// ice cream truck: https://www.vecteezy.com/vector-art/20416376-cute-ice-cream-car-pixel-art-style-perfect-for-stickers-and-decorations\n\nlet blocker, player;\nlet playerdoor;\nlet rightwall = []; \nlet topwall = []; \nlet bottomwall = [];\nlet leftwall = [];\nlet rocknumwidth, rocknumheight, rockheight, rockwidth;\nlet wallwidth = 10;\nlet playerwidth = 50;\nlet playerheight = playerwidth*354/483;\nlet gamespeed = 2;\nlet mode = 0;\n\nlet fire;\nlet fires;\n\nfunction setup() {\n  createCanvas(800, 500);\n  textAlign(CENTER, CENTER);\n  fill(255);\n  textSize(15);\n  imageMode(CENTER);\n\n  font = loadFont('dogicapixelbold.otf');\n  \n  let playerImg = loadImage('player.png');\n  let boundaryImg = loadImage('rock.png');\n\n  blocker = createSprite(width/2, height/2, playerwidth, playerwidth);\n  blocker.addAnimation(\n    'normal', \n    'broccoli.png'\n  );\n  blocker.scale = 0.15;\n\n  player = createSprite(width-60, 50, playerwidth, playerwidth);\n  player.addImage('main', playerImg);\n  player.scale = playerwidth/483;\n  player.mirrorX(-1);\n\n  rocknumwidth = 14;\n  rocknumheight = 18;\n  rockwidth = width/rocknumwidth;\n  rockheight = 158*rockwidth/295;\n  for (let i=0; i<rocknumwidth; i++) {\n    bottomwall[i] = createSprite((rockwidth/2) + i*rockwidth, height - rockheight/2, rockwidth, rockheight);\n    bottomwall[i].addImage('main', boundaryImg);\n    bottomwall[i].scale = rockwidth/295;\n    bottomwall[i].immovable = true;\n    topwall[i] = createSprite((rockwidth/2) + i*rockwidth, rockheight/2, rockwidth, rockheight);\n    topwall[i].addImage('main', boundaryImg);\n    topwall[i].scale = rockwidth/295;\n    topwall[i].immovable = true;\n  }\n  for (let i=0; i<rocknumheight; i++) {\n    rightwall[i] = createSprite(width - rockwidth/2, (rockheight/2) + i*rockheight, rockwidth, rockheight);\n    rightwall[i].addImage('main', boundaryImg);\n    rightwall[i].scale = rockwidth/295;\n    rightwall[i].immovable = true;\n    leftwall[i] = createSprite(rockwidth/2, (rockheight/2) + i*rockheight, rockwidth, rockheight);\n    leftwall[i].addImage('main', boundaryImg);\n    leftwall[i].scale = rockwidth/295;\n    leftwall[i].immovable = true;\n  }\n\n  let icecreamImg = loadImage('icecream.png');\n  let leftheightfactor = (height- 2*rockheight)/3;\n  playerdoor = createSprite(wallwidth*13, (height/2) + leftheightfactor + 15, wallwidth, leftheightfactor);\n  playerdoor.addImage('main', icecreamImg);\n  playerdoor.scale = 0.09;\n\n  fire = new Group();\n\n  for (let i=0; i<5; i++) {\n    fires = createSprite(random(rockwidth+50+playerwidth, width-rockwidth-50-playerwidth), random(rockheight+100, height-rockheight-100), wallwidth, leftheightfactor);\n    fires.addAnimation('normal', 'fire1.png', 'fire2.png', 'fire2.png', 'fire1.png');\n    fire.add(fires);\n  }\n\n}\n\nfunction draw() {\n  switch(mode){\n    case 0:\n      gameplay();\n      break;\n    case 1:\n      playerwin();\n      break;\n    case 2:\n      playerlose();\n      break;\n  }\n}\n\nfunction gameplay() {\n  background(212,197,226);\n  drawSprites();\n\n  push();\n    fill(154, 137, 171);\n    textFont(font);\n    textSize(30);\n    text('BROCC-ATTACK', width/2, 60);\n  pop();\n\n  if(keyIsDown(65)){\n    blocker.position.x-=gamespeed;\n    blocker.mirrorX(-1);\n  }\n  if(keyIsDown(87)){\n    blocker.position.y-=gamespeed;\n  }\n  if(keyIsDown(68)){\n    blocker.position.x+=gamespeed;\n    blocker.mirrorX(1);\n  }\n  if(keyIsDown(83)){\n    blocker.position.y+=gamespeed;\n  }\n  \n  if(keyIsDown(37)){\n    player.position.x-=gamespeed;\n    player.mirrorX(-1);\n  }\n  if(keyIsDown(38)){\n    player.position.y-=gamespeed;\n  }\n  if(keyIsDown(39)){\n    player.position.x+=gamespeed\n    player.mirrorX(1);\n  }\n  if(keyIsDown(40)){\n    player.position.y+=gamespeed;\n  }\n\n  for (let i=0; i<rocknumheight; i++) {\n    blocker.collide(rightwall[i]);\n    player.collide(rightwall[i]);\n    blocker.collide(leftwall[i]);\n    player.collide(leftwall[i]);\n  }\n  for (let i=0; i<rocknumwidth; i++) {\n    blocker.collide(topwall[i]);\n    player.collide(topwall[i]);\n    blocker.collide(bottomwall[i]);\n    player.collide(bottomwall[i]);\n  }\n  \n  // player.displace(blocker);\n  blocker.displace(player);\n  \n  blocker.collide(playerdoor);\n  blocker.collide(fire);\n  fire.collide(fire);\n  \n  if (player.collide(playerdoor)) {\n    mode=1;\n  }\n  if (player.collide(fires)) {\n    mode=2;\n  }\n}\n\nfunction playerwin() {\n  background(0);\n  text(\"yay! player escaped the burning flames\", width/2, height/2 - 8);\n  text(\"press A to play again\", width/2, height/2 + 8);\n  if(keyIsDown(65)){\n    window.location.reload();\n  }\n}\n\nfunction playerlose() {\n  background(0);\n  text(\"oops. player was engulfed in fire\", width/2, height/2 - 8);\n  text(\"press A to play again\", width/2, height/2 + 8);\n  if(keyIsDown(65)){\n    window.location.reload();\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/txzlbynt4ik4tbdfqfnb",
        "width": 1650,
        "height": 1027,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/r4hfplqzdq9yaqo1674w",
        "width": 720,
        "height": 1280,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/pjllr6bxrimbaocylezs",
        "width": 1274,
        "height": 794,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T04:36:27.08Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-07T05:24:01.973Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QoxgbXCHKFQHh6P8q",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-14T03:15:01.842Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I was inspired by my friend's colorful sweater. I tried using noise to create some dimensionality.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jnwpgxisxonqj4mqgonc",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-14T06:43:05.45Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T06:43:41.815Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-14T07:05:20.538Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-14T20:46:33.773Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QpgX7g289jeGeJ7EQ",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-03T02:45:44.007Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "**Challenge 1 Extended** Pardon the double posting, was unwell early this week",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n  noStroke();\n  frameRate(1);\n}\n\nfunction draw() {\n  noiseSeed(frameCount);\n  drawPattern();\n  //noLoop();\n}\n\nfunction drawPattern() {\n  ellipseMode(CENTER);\n  background(\"rgb(246,246,246)\");\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 120; i++) \n  {\n    // POSITION\n    let x = noise(i*10, 0)*(width);\n    let y = noise(i*40, 5)*(height);\n\n    // DIAMETER\n    let diameterNoise = max(noise(i, 1), noise(i, 5));\n    let diameter = diameterNoise*i/4.5 + 6;\n\n    // COLOUR\n    let hue = diameter*15;\n    fill(hue, 50, 100);\n    \n    // DRAW \n    ellipse(x, y, diameter, diameter);\n    ellipse(width-x, y, diameter, diameter);\n    ellipse(x, height-y, diameter, diameter);\n    ellipse(width-x, height-y, diameter, diameter);\n    ellipse(y, x, diameter, diameter);\n    ellipse(y, height-x, diameter, diameter);\n    ellipse(width-y, x, diameter, diameter);\n    ellipse(width-y, height-x, diameter, diameter);\n    \n  }\n}\n\nfunction mouseClicked() {\n  noiseSeed(random(200));\n  drawPattern();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/szbvzgktwocavialvtif",
        "width": 814,
        "height": 814,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-05T03:01:00.202Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:19.839Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QqePzhtk9zEsu22PM",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-28T14:52:24.009Z",
    "posted": true,
    "lesson": "Music",
    "description": "Worked with the example code to visualize by mapping the sizes on p5 - still trying to understand and experiment with envelope and oscillator to understand tone.js",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gxxzwy7ecn38tmitl7yf",
        "width": 1200,
        "height": 1202,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/qqdikawz67bppoo25hh3",
        "width": 1200,
        "height": 1202,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-29T00:12:06.214Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-29T21:04:28.168Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QquAPwx5MyEWZF3By",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-14T12:33:32.407Z",
    "posted": true,
    "lesson": "Text",
    "description": "Uber for X",
    "code": "let variations = ['dogs', 'cats', 'birds', 'snakes', 'rabbits', 'hamsters', 'doctors', 'chef', 'artists', 'teachers', 'lawyers', 'drivers','plumbers', 'electricians', 'gardeners', 'cleaners', 'photographers'];\n\nfunction setup() {\n  createCanvas(400, 400);\n  textSize(20);\n  textAlign(CENTER);\n  noLoop();\n}\n\nfunction draw() {\n  background(220);\n  fill(0);\n  let variation = random(variations)\n  text(`Uber for ${variation}`, width/2, height/2);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yqwbbswqw60q3fnhdp6y",
        "width": 788,
        "height": 786,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-14T16:12:20.442Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "QuBfic2CcBDPR7SFH",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-31T11:34:50.579Z",
    "posted": true,
    "lesson": "Music",
    "description": "WEEK 8 (1/4): PAIR CHALLENGE WITH JOHN. THIS SOUNDS LIKE MORSE CODE. We tried to change quite a bit here but decided against changing EVERYTHING.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ckzzvtmauxg7irhxcmqy",
        "width": 2896,
        "height": 1604,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "QyC9tjLM6FfvQbAbE",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-20T18:31:17.228Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "I spent a good amount of time trying to set up a paper js file from scratch in vscode. But here is where I got within the time limit! It's inspired by one of the challenges from the textbook.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/knbzfvpzorzdogc9achj",
        "width": 994,
        "height": 990,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-21T05:16:19.544Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-21T16:36:28.885Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:57:31.878Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "R6hoYqmRNZcnLYeJW",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-01T20:52:10.424Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Started this alongside the helicopter sketch. I wanted to see if I could push the amount of objects through repeating patterns while also messing around with union() and difference() as well. The code could've been optimized a bit better but I wanted to manually place each pattern to create a system of pipes and cubes at specific spots of my choosing.",
    "code": "// Framework\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n\n// Repeat 1\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 2\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 3\n\ntranslate([40, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 4\n\ntranslate([40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 5\n\ntranslate([-40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Duplicate\n\nrotate([0, 180, 0]){\n    // Framework\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n\n// Repeat 1\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 2\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 3\n\ntranslate([40, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 4\n\ntranslate([40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 5\n\ntranslate([-40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n}\n\n// Duplicate 2\n\ntranslate([40, 0, 0]){\n// Framework\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n\n// Repeat 1\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 2\n\ntranslate([0, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 3\n\ntranslate([40, 60, 40]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 4\n\ntranslate([40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n\n// Repeat 5\n\ntranslate([-40, -40, -20]){\n// 4-piece\nunion(){\n    color(\"blue\"){\n    cube([5, 5, 5], center = true);\n    }\n    \n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    \n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, -20, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, -20, 0]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\ndifference() {\n    color(\"blue\"){\n    translate([-20, 0, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([-20, 0, 0]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 0, -20]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, -20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\n// 3-piece\n\nunion(){\n    color(\"blue\"){\n        translate([0, 0, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 0, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 20, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n}\n\nunion(){\n    color(\"blue\"){\n        translate([0, 40, 20]){\n        cube([10, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 40, 20]){\n    rotate([0, 90, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n    \n    translate([0, 60, 20]){\n    rotate([90, 0, 0]){\n    cylinder(40, 2, 2, center = true);\n    }\n    }\n\n}\n\n\n// Misc\n\ndifference(){\n    color(\"blue\"){\n    translate([0, 40, 0]){\n    cube([5, 5, 5], center = true);\n        }\n    }\n    \n    translate([0, 40, 0]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }\n}\n\ntranslate([0, 40, 20]){\n    rotate([0, 0, 90]){\n    cylinder(40, 2, 2, center = true);\n    }\n  }    \n}\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ofxnikiw61jsvz6uf3jf",
        "width": 961,
        "height": 699,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-02T00:03:00.011Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-02T04:18:34.134Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:52.805Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T22:59:02.743Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "RCLDttdWRsMPWciPM",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-17T17:05:27.344Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Heartbeat visualizer with noise in response to Justin's heart sketch",
    "code": "let t = 0;\nlet x = 0;\nlet y = 0;\nlet heartRate = 60; // in beats per minute\n\nfunction preload () {\n  heart = loadImage('heart.png');\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(0);\n  stroke(0);\n  fill(255);\n}\n\nfunction draw() {\n  background(0);\n  image(heart, 0, 0, 400, 400);\n  stroke(255);\n  noFill();\n  beginShape();\n  for (let i = 0; i < width; i++) {\n    let noiseVal = noise(t) * height/2;\n    let y = map(noiseVal, 0, height/2, height/2, 0);\n    vertex(i, y);\n    t += 0.01;\n  }\n  endShape();\n\n  stroke(255);\n  fill(255);\n  let heartRateInSecs = 60 / heartRate;\n  let beatTime = map(sin(frameCount / (heartRateInSecs * 60)), -1, 1, 0, 1);\n  x = beatTime * width;\n  y = map(noise(beatTime), 0, 1, height/2, 0);\n  ellipse(x, y, 20, 20);\n\n  // Draw the lines of the graph\n  stroke(255, 50);\n  for (let i = 0; i < width; i += 10) {\n    let noiseVal = noise(t + i / 100) * height/2;\n    let y1 = map(noiseVal, 0, height/2, height/2, 0);\n    let y2 = map(noiseVal, 0, height/2, height/2, height);\n    line(i, y1, i, y2);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jjkbdzmy0b7u0yrltwx6",
        "width": 828,
        "height": 826,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/dubv8l0rezhc9vetphpn",
        "width": 800,
        "height": 798,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T06:00:17.336Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "REzHWbBR4hFASqDGB",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-23T20:36:27.906Z",
    "posted": true,
    "lesson": "Params",
    "description": "WEEK 4 (4/4):  I wanted to try to recreate the noise p5.js thing where it follows your mouse but I don't know how you got that shape so here is a circle.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jizprc2fitwdg2hmggtu",
        "width": 784,
        "height": 790,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T00:24:14.571Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Rda55SpyapsqhW9M6",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-14T06:45:28.674Z",
    "posted": true,
    "lesson": "Noise",
    "description": "**Manipulating Object Rotations with Perlin Noise on Unity** [View project more clearly  on Itch.io here.](https://reshmarosethomas.itch.io/cuboids-in-love) Because of the structure of the for loops used to position the objects, there is a similarity in rotation of objects in the same column - would like to figure out how to manipulate that. The last image is a picture of when where I was trying to manipulate position instead of rotation with Noise.",
    "code": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CubeNoise : MonoBehaviour\n{\n    private float timer;\n    void Start()\n    {\n        timer = 0f; \n    }\n    \n    void Update()\n    {\n        int childCounter = 0;\n        timer += Time.deltaTime;\n\n        foreach (Transform child in this.transform)\n        {\n            GameObject obj = child.gameObject;\n            childCounter++;\n\n            float angX = Mathf.PerlinNoise(timer * 0.33f, childCounter * 0.1f) * 90;\n            Vector3 newRotation = new(angX, angX, angX);\n            obj.transform.eulerAngles = newRotation;\n\n        }\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gtlrjag46rawgjwli1fm",
        "width": 1442,
        "height": 904,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/nnmb2vllhrukce2bzg2h",
        "width": 1528,
        "height": 840,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/s9wiuznigwzwqxjhj4tn",
        "width": 1648,
        "height": 856,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T14:37:46.894Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-15T04:10:09.768Z"
      },
      {
        "category": "nerdy",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T03:54:35.207Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:05.511Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Rf4JSPQz7k6aFqnRz",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-05T15:16:27.212Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Building off my Pong sketch, I wanted to implement a system where player paddles impart their speed onto the ball. That way, a paddle moving down causes the ball to gain negative y velocity. I kinda got it to work but it is a bit buggy. It definitely should not have taken as long as it did for me to figure out how to remove the sprite trails but here we are.",
    "code": "let ball, topBox, leftBox, rightBox, bottomBox;\nlet leftScore = 0, rightScore = 0;\n\nfunction setup() {\n  createCanvas(800, 800)\n\n\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start = createSprite(250, 300, 200, 200) \n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n  \n}\nlet impartSpeed = 0\nlet ballHue = 0 \nlet resetState = true;\nfunction draw() {\n  if (resetState === true)  {  \n    \n    if (keyWentUp(32)) {\n    serve()  \n    resetState = false\n    start.draw = function () {\n      rect(0,0,300, 100)\n    }\n  }\n\n}\ndrawSprites() \n  background(255 )\n  textSize(32)\n  drawSprites()\n  textAlign(CENTER)\n  ballHue++\n  if (ballHue > 200) {\n    ballHue = 0\n  }\n  ball.shapeColor = [ballHue, ballHue, ballHue + 800]\n  ball.bounce(topBox);\n  ball.bounce(bottomBox); \n  ball.bounce(leftBox);\n  ball.bounce(rightBox);\n   if (ball.touching.right) {\n    scoreUp('right')\n   }\n\n   if (ball.touching.left) {\n    scoreUp('left')\n   }\n\n   if (keyWentDown(38)) {\n    rightPaddle.position.y -= 80;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed -= 1\n    impartSpeed = Math.max(impartSpeed, -2)\n\n  }\n\n  if (keyWentDown(40)) {\n    rightPaddle.position.y += 80;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed += 1\n    impartSpeed = Math.max(impartSpeed, 2)\n\n  }\n\n  \n  if (keyWentDown(87)) {\n    leftPaddle.position.y -= 80;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed -= 1\n    impartSpeed = Math.max(impartSpeed, - 1)\n\n  }\n\n  if (keyWentDown(83)) {\n    leftPaddle.position.y += 80;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n    impartSpeed += 1\n    impartSpeed = Math.max(impartSpeed, 1)\n  }\n\n \n\n  \n\n  if (ball.bounce(leftPaddle)) {\n    console.log(leftPaddle.getSpeed)\n    ball.velocity.y += impartSpeed \n  }\n\n  if (ball.bounce(rightPaddle)) {\n    console.log(leftPaddle.getSpeed)\n    ball.velocity.y += impartSpeed \n  }\n  \n\n\n\n\n\n\n\n\n  rect(40, 30, 80, 80)\n \n  text(leftScore + '', 80, 80)\n  rect(660, 30, 80, 80)\n  text(rightScore + '', 700, 80) \n}\n\nfunction scoreUp(side) {\n  if (side === 'left') {\n    rightScore++\n    resetGame()\n  } else {\n    leftScore++\n    resetGame()\n  }\n\n}\n\nfunction serve() {\n  ball.position.x = 400;\n  ball.position.y = 400;\n\n  let dir = Math.random();\n  let ang = (Math.random() - 0.5) * 60 + 10\n  if (dir <= 0.5) {\n    ball.setSpeed(8, ang )\n  } else {\n    ball.setSpeed(-8  , ang)\n  }\n\n}\n\nfunction resetGame() {\n  serve()\n  resetState = true\n  ball.velocity.x = 0;\n  ball.velocity.y = 0;\n  allSprites.removeSprites();\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zhk1xehd8mc034nvsyy0",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-05T19:45:41.239Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "RjB79Rsi6pdFroecQ",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-09T18:09:19.259Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "My extension of Keren's pixel image for the pair challenge - I pulled the colors from Keren's original piece (second image) and reinterpreted it into a space-like image",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/aua5kgndrr8neve7kmpt",
        "width": 2000,
        "height": 2000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/mhcywbamrz5gidk4ptgs",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T18:59:15.605Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-10T00:22:40.016Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:50.412Z"
      }
    ],
    "comments": [
      {
        "comment": "Love the space effect!\n",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T19:29:40.676Z"
      }
    ]
  },
  {
    "_id": "Rkxm7j42tpHgRLQC9",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-03T15:43:04.943Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Sketch based on Rama's instructions :) The show is New Girl!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ifokhmmvmtsg7mkixw35",
        "width": 1236,
        "height": 920,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-03T16:25:10.258Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-03T17:22:27.756Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "S3BcBbAJC9yiN98hN",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-10T09:36:26.238Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "**Raja Ravi Verma's painting as Input**",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pcgmyb7t9eybzvijcuzm",
        "width": 1368,
        "height": 1370,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jb2hnyy2lolexcyte51c",
        "width": 1368,
        "height": 1370,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dh9mrwak0qet6wgigupw",
        "width": 1368,
        "height": 1370,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-10T15:50:09.286Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T16:58:11.078Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-10T17:09:05.274Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:25.561Z"
      }
    ],
    "comments": [
      {
        "comment": "YAy!",
        "commenter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-10T15:50:16.378Z"
      }
    ]
  },
  {
    "_id": "S3ssAwJ6oN73QQBa9",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-23T03:33:45.466Z",
    "posted": true,
    "lesson": "Params",
    "description": "My starting place for this week's pair challenge - curious to see how this will be interpreted!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/shwh98yqpcmj5b1hn1j0",
        "width": 1280,
        "height": 712,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T04:12:42.116Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "S6yTqa2JN4dqzgewF",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-09T18:26:47.567Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Recolouring one of my own illustrations",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mpl2pj9ftfr2expz0byr",
        "width": 720,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T18:59:13.197Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:00.127Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "S7tqfesJ38NxS85kv",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-11T01:28:05.379Z",
    "posted": true,
    "lesson": "Text",
    "description": "Drew upon the book title generator example from the textbook for this sketch. I wanted to see if I could make a generator that would plug in random values from an array of numbers and do math. I don't think I was able to hit that as many of the equations came out wrong or my code is incapable of understanding PEDMAS.",
    "code": "// Partially adapted from https://compform.net/js_lab/js_lab.html?/text/sketches/title/title.js\n\ninjectInterface();\ndocument.getElementById(\"equation\").textContent = generateEquation();\n\n// Equation: v1 + v2 - v3 * v4\n\nfunction generateEquation() {\n  var numbers = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n  ];\n  \n  var number1 = sample(numbers);\n  var number2 = sample(numbers);\n  var number3 = sample(numbers);\n  var number4 = sample(numbers);\n  \n  var a = number3 * number4;\n  var b = number1 + number2;\n  \n  var equation = `${number1} + ${number2} - ${number3} * ${number4} = ${b - a}`;\n  \n  console.log(number1);\n  console.log(number2);\n  console.log(number3);\n  console.log(number4);\n  \n  return equation;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#equation {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"equation\">Equation</div>\n\t</div>\n`\n  );\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xpog2dbxsiab6bsybhiy",
        "width": 758,
        "height": 500,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-11T17:04:28.249Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-12T05:58:55.44Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "SAQrtkLeyHNC2b7wv",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-27T17:58:49.975Z",
    "posted": true,
    "lesson": "Music",
    "description": "Individual challenge. Creating different melodies using the mouse, with notes mapped to positions on the canvas. Added visuals using p5.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n//partly adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/synth.js\n\nvar canvasWidth = 500;\nvar canvasHeight = 500;\n\nconst synth = new Tone.Synth();\nsynth.toMaster();\n\nwindow.onpointermove = (e) => {\n  let freq = map(e.clientX+e.clientY, 0, canvasWidth+canvasHeight, 36, 83);\n  synth.triggerAttackRelease(Tone.Midi(freq), \"8n\");\n};\n\nfunction map(value, min1, max1, min2, max2) {\n  const n = (value - min1) / (max1 - min1);\n  return n * (max2 - min2) + min2;\n}\n\nlet button;\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  colorMode(HSB);\n  background(0, 0, 95);\n  button = createButton('reset');\n  button.mousePressed(redrawBG);\n}\n\nfunction draw() {\n  let hue = map(mouseY, 0, height, 0, 300);\n  let brt = map(mouseX, 0, width, 30, 100);\n  let size = map(mouseX, 0, height, 20, 60);\n  fill(hue, 100, brt);\n  noStroke();\n  ellipse(mouseX, mouseY, size);\n}\n\nfunction redrawBG() {\n  push();\n  fill(0, 0, 95);\n  rect(0, 0, width, height);\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rfljylgtxl5xemjlrr0j",
        "width": 850,
        "height": 880,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-27T22:06:56.191Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:17:01.922Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:14:14.756Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "SAeEWXuM5iBQk7zno",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-27T02:39:50.216Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "I'm sure there's more elegant code to achieve this, but this is where I got to within the time limit for the first challenge! I used a lot of arrays, if statements + played around with noise",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lxtgfnercbwdfpfh5whb",
        "width": 814,
        "height": 812,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "SCCznPDKE2Xtwm8Br",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-31T03:44:26.901Z",
    "posted": true,
    "lesson": "Music",
    "description": "This was a fun one - I experimented with Tone.MembraneSynth to create a looping beat sound effect using the chords in C minor. Then, I used After Effects to combine the beat soundtrack with an instrumental sample of Moth to a Flame (by Swedish House Mafia & The Weeknd).",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qrrf1g5nercf5bmjsnqc",
        "width": 0,
        "height": 0,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/u6twgjme1r7zaeymlt1x",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "SG5AHBJn2z6Tft5Tn",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-12T01:31:37.631Z",
    "posted": true,
    "lesson": "Text",
    "description": "Reworked my incorrect Math Equation generating sketch to have it instead generate responses. As of now it just spawns a message when you press play. I want to expand on this for another sketch, hopefully adding more messages and letting the user pick a question to prompt a response.",
    "code": "// Partially adapted from https://compform.net/js_lab/js_lab.html?/text/sketches/title/title.js\n\n//Thinking about those Magic 8 ball messages, thinking about messages in that vein\n//Can spend some more time on this now that I have the foundation\n\ninjectInterface();\ndocument.getElementById(\"message\").textContent = generateMessage();\n\nfunction generateMessage() {\n  \n  var emotions = [\n    \"content\",\n    \"happy\",\n    \"thoughtful\",\n    \"provoked\",\n    \"sad\",\n    \"scared\",\n    \"angry\",\n    \"tired\",\n    \"suprised\",\n    \"out of it\",\n  ];\n  \n  var thought = [\n    \"getting some homework done\",\n    \"grabbing lunch\",\n    \"check my email soon\",\n    \"getting back home soon\",\n    \"checking out the new book store\",\n    \"going home\",\n    \"taking a walk in the park\",\n  ];\n  \n  var action = [\n    \"go home\",\n    \"grab a snack\",\n    \"go for a run\",\n    \"take a break\",\n    \"play some games\",\n    \"read a book\",\n    \"take a nap\",\n  ];\n  \n  var emotionalstate = sample(emotions);\n  var thoughts = sample(thought)\n  var actions = sample(action)\n  \n  var message = \"\";\n  if(Math.random(0, 1) < 0.4) {\n    message = `Hello, right now I'm ${emotionalstate}.`;\n  } else if(Math.random(0, 1) < 0.3) {\n    message = `I'm thinking about ${thoughts}.`;\n  } else if(Math.random(0, 1) < 0.3) {\n    message = `I want to ${actions}.`;\n  }\n  \n  return message;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#message {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"message\">Message</div>\n\t</div>\n`\n  );\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/afy4jozejk4oavqmoi4y",
        "width": 1918,
        "height": 956,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "SJPurW9kMh8LFiRFa",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-01T23:31:55.348Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My own instruction set.\nCoded a small interaction from the book \"Like Water for Chocolate\"",
    "code": "//Instruction set Sahiti\n\n//book:\n//characters colour mix\n//Like water for chocolate\n//2 circles\n//changing sides mousemove\n//merging in the centre\n\n//Introduction to WebGL in p5.js - WebGL and p5.js Tutorial(coding train)\nlet colX;\nlet colY;\nlet angle=0\n\nfunction setup() {\n  createCanvas(400, 400, WEBGL);\n  //noStroke();\n}\n\nfunction draw() {\n  background(0);\n\n//   push();\n//   let dirX = (mouseX / width - 0.5) * 2;\n//   let dirY = (mouseY / height - 0.5) * 2;\n//   directionalLight(250, 250, 250, -dirX, -dirY, -1);\n//    noStroke();\n  \n//     for (let i = 0; i < width; i=i+40) {\n//   for (let j = 0; j < height; j=j+40){\n//     fill(255);\n//     sphere(i);\n// rotateX(-angle)\n//   }\n//     }\n// angle+=0.01\n//    pop();\n    noStroke();\n  for(let x = 0; x < width; x += 20) {\n    fill(random(255), random(255), random(255));\n    rect(x, 0, 10, height);\n    \n    \n   push();\n  colX = mouseX + 2;\n  colY = mouseY + 2;\n\n  for (var gridY = -height / 2; gridY < height; gridY += colY) {\n    for (var gridX = -width / 2; gridX < width; gridX += colX) {\n      fill(gridX, -height / 2 - gridY, 100);\n\n      noStroke();\n      rect(\n        mouseX - width / 2 + gridX,\n        mouseY + gridY,\n        mouseX + width / 2,\n        mouseY\n      );\n      //fill(51);\n      // ellipse(200, 200, 200, height-mouseY);\n    }\n  }\n   pop();\n}\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hwxlcg7vwb9lppsgaqr8",
        "width": 382,
        "height": 378,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T02:02:01.674Z"
      },
      {
        "category": "pretty",
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "created_at": "2023-02-02T04:07:52.876Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-10T04:29:36.001Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "SLGZRxgdDjNkw5qrG",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-05T15:29:28.966Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Revisiting noise for some extra sketching - made a particle field animation",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet particles = [];\nlet numParticles = 50;\nlet gravity = 0.5;\nlet repulsion = 50;\nlet noiseScale = 0.02;\n\nfunction setup() {\n  createCanvas(400, 400);\n  for (let i = 0; i < numParticles; i++) {\n    particles.push(new Particle(random(width), random(height)));\n  }\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < particles.length; i++) {\n    particles[i].update();\n    particles[i].display();\n    particles[i].attract(particles);\n    particles[i].repel(particles);\n  }\n}\n\nclass Particle {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(0, 0);\n    this.acc = createVector(0, 0);\n    this.size = random(5, 10);\n    this.color = color(random(255), random(255), random(255));\n    this.noiseOffset = createVector(random(1000), random(1000));\n  }\n\n  update() {\n    let noiseVal = noise(this.noiseOffset.x, this.noiseOffset.y);\n    let angle = map(noiseVal, 0, 1, 0, TWO_PI);\n    let mag = map(noiseVal, 0, 1, 0, 5);\n    let noiseVec = p5.Vector.fromAngle(angle);\n    noiseVec.setMag(mag);\n    this.acc.add(noiseVec);\n    this.vel.add(this.acc);\n    this.vel.limit(5);\n    this.pos.add(this.vel);\n    this.acc.mult(0);\n    if (this.pos.x < 0) {\n      this.pos.x = width;\n    }\n    if (this.pos.x > width) {\n      this.pos.x = 0;\n    }\n    if (this.pos.y < 0) {\n      this.pos.y = height;\n    }\n    if (this.pos.y > height) {\n      this.pos.y = 0;\n    }\n    this.noiseOffset.add(this.vel.copy().mult(noiseScale));\n  }\n\n  display() {\n    noStroke();\n    fill(this.color);\n    ellipse(this.pos.x, this.pos.y, this.size, this.size);\n  }\n\n  attract(particles) {\n    for (let i = 0; i < particles.length; i++) {\n      if (particles[i] !== this) {\n        let force = p5.Vector.sub(particles[i].pos, this.pos);\n        let distanceSq = force.magSq();\n        if (distanceSq < 40000) {\n          force.setMag(gravity);\n          this.acc.add(force);\n        }\n      }\n    }\n  }\n\n  repel(particles) {\n    for (let i = 0; i < particles.length; i++) {\n      if (particles[i] !== this) {\n        let force = p5.Vector.sub(this.pos, particles[i].pos);\n        let distanceSq = force.magSq();\n        if (distanceSq < 1000) {\n          force.setMag(repulsion);\n          this.acc.add(force);\n        }\n      }\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/khga4tnodpofgnuxolqc",
        "width": 796,
        "height": 796,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Sd2nMpdLpJoTGhnTL",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-01-30T21:21:02.818Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Good luck and let me know if you have any questions!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ztmrhjh1kp0vgrtagpvu",
        "width": 648,
        "height": 803,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T22:40:22.196Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "SdJx5tfGdbFEFCvw9",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-22T10:35:32Z",
    "posted": true,
    "lesson": "Params",
    "description": "Was experimenting with ML libraries for MS2, so tried to play with them for this parameters sketch. Modification of Reshma's sketch where instead of Tweakpane sliders, the size and angle are controlled by the user's x and y position, as seen in the video. It glitches a little bit, but works overall. \n   \n[Reference](https://editor.p5js.org/bestesaylar/sketches/QW8GKt6s_).",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n\nlet poseNet;\nlet poses = [];\nlet video;\n\nlet rot = 0;\nconst noiseAmp = 50;\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  strokeWeight(2);\n  \n  video = createCapture(VIDEO);\n  video.size(width, height);\n  poseNet = ml5.poseNet(video, {multiplier:0.5}, modelReady);\n  poseNet.on('pose', function(results) {\n    poses = results;\n  });\n}\n\nfunction modelReady() {\n  select('#status').html('Model Loaded');\n}\n\nfunction draw() {\n  background(240);\n  \n  let imgsize = 80;\n  image(video, 0, 0, imgsize*1.2, imgsize);\n  \n  let sizeFactor;\n  let angleFactor;\n  let mapFactor;  \n  for (let i = 0; i < poses.length; i++) {\n    let skeleton = poses[i].skeleton;\n    for (let j = 0; j < skeleton.length; j++) {\n      mapFactor = skeleton[0][1]\n      sizeFactor = map(mapFactor.position.x,0,width,75,400)\n      angleFactor = map(mapFactor.position.y,0,width,1,4)\n    }\n  }\n  \n  noStroke();\n  fill(\"rgba(218,38,38,0.42)\");\n  //noFill();\n  drawSpiral(width / 2, height / 2, sizeFactor, angleFactor, 0);\n  let flag = 2\n  rot += flag;\n  if (rot >= 360) rot=0;\n   \n}\n\nfunction drawSpiral(x, y, radiusMax, angleFactor) {\n  push();\n  translate(x, y);\n  rotate(rot);\n  scale(1.2);\n  for (\n    let angle = 0, radius = 0;\n    radius < radiusMax;\n    angle += noise(radius) * angleFactor\n  ) {\n    ellipse(sin(angle) * radius, cos(angle) * radius, 5);\n    radius +=\n      noise(sin(angle) * radius * noiseAmp, cos(angle) * radius * noiseAmp) *\n      0.1;\n    if (angle > 360) angle = 0;\n  }\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ins5b1ixosty6aek41fh",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-23T02:49:14.951Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T00:25:53.2Z"
      }
    ],
    "comments": [
      {
        "comment": "So cool!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T00:25:59.103Z"
      }
    ]
  },
  {
    "_id": "SjNh8nFYS3rDB2EpX",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-04T19:53:54.461Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "I recreated the MoMA Bubble pots and pans!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/h94mv7xqwe6g9mxqcepq",
        "width": 1432,
        "height": 612,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/af0iabfl80txss9j7syv",
        "width": 1156,
        "height": 732,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/t9ozvq7yhqomcttpyjxg",
        "width": 1470,
        "height": 502,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T00:41:12.813Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "SkeWmtfNGyJveTXx4",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-03T04:01:36.501Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Extension of Challenge 1",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ivz2wgwuinjsebog8aww",
        "width": 1598,
        "height": 1596,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-03T04:11:46.304Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-03-03T04:14:35.91Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T04:14:40.024Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "SqLdXqXH9YdFTGKMu",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-02T20:11:00.595Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "WEEK 1 SKETCH (2/4) : INSTRUCTION MANUAL",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/h3xqaau3dhwz4nzb32wk",
        "width": 1970,
        "height": 2788,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "SqtW9E2aZykshs2Mz",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-11T23:27:24.662Z",
    "posted": true,
    "lesson": "Text",
    "description": "I saw this on the course page where you can get randomly generated items for Dungeons & Dragons campaigns. I tried to make my own version to generate titles for mythical tomes.",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\n  start: \"The $title of $subject | $people's $title of $subject \",\n  title: \"$type | $adjective $type\",\n  subject: \"$topic | $adjective $topic\",\n  type: \"Compendium | Tome | Articles | Apocrypha | Leaves | Scroll | Libram | Book | Scripture | Manuscripts | Parchments | Shards | Tablets | Slates | Codex\",\n  topic: \"Necromancy | Metallurgy | Alchemy | Malaise | Astronomy | Geomancy | Clairvoyance | Sorcery | Magic | Rites | Spells | Potions\",\n  adjective: \"Eternal | Demonic | Astral | Celestial | True | Abbhorent | Sacred | Accursed | Vile | Grandiose | Infernal |\",\n  people: \"Musosil | Thelmior | Agrandir | Hamir | Melchior | Spongebob | Mario | Squidward | Bill | Kevin | Greg | John\",\n};\n\nconst listBkgColor = [\n    \"#5F2E4C\",\n    \"#2E4C5F\",\n    \"#4C5F2E\",\n    \"#b32b2b\"\n    ]\n\nconst randBkg =  pick(listBkgColor);\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\ndocument.head.innerHTML = \n`\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Viaoda+Libre&display=swap\" rel=\"stylesheet\">\n`\n\ndocument.body.innerHTML = \n`\n<style>\n    body {\n        font-family: 'Viaoda Libre', cursive;\n        font-size: 48px;\n        margin: 10%; \n        line-height: 1.5; \n        text-transform: uppercase;\n        text-align: center;\n        word-spacing: .15rem;\n        background-color : ${randBkg}\n\n    }\n</style>\n    ${g.expand()} \n`",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tlwqq87mg9xfco8mxxvt",
        "width": 797,
        "height": 879,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fn9onjw1iluruh99htz6",
        "width": 797,
        "height": 879,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qeuxtuyihplcmarekd0q",
        "width": 797,
        "height": 879,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-12T19:05:40.184Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "SqzecbhxGMbBcm3Pr",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-10T01:52:23.986Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Built off of my first sketch to create a logo for CodeLab!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fzfdygnj7jtrekz82vvo",
        "width": 1427,
        "height": 1427,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:25.248Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Srxda8qcp9tpnbEgx",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-05-12T06:52:20.075Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "I took animations I made using turtles and p5.js and added them to my aftereffects animation! This became a part of my cyber jellyfish project for studio!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lnugptfi5avitynsgogx",
        "width": 852,
        "height": 480,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "SuyZB2xE85c2yQGpR",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-23T20:28:53.924Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "**Pair Challenge:** Manipulated Isha's pretty spiral SVGs on Figma",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/itcv7ctx0mcqkflbny7s",
        "width": 834,
        "height": 769,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xycbuehhp46vsh4bdvqp",
        "width": 834,
        "height": 769,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/z2i3jc9srsamzdqa7bbh",
        "width": 834,
        "height": 769,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:34:17.978Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-03-23T20:39:53.549Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T20:39:58.609Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-24T16:19:15.826Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-03-31T14:33:39.594Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T14:33:41.196Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "T4DnhtJRYJg9QS7mo",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-06T22:36:08.903Z",
    "posted": true,
    "lesson": "Random",
    "description": "Just some random squiggles using the Brownian Path as a reference",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\nlet segmentLength = 10;\nlet nextX, nextY, x, y;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // noLoop();\n  // frameRate(6);\n  noStroke();\n  noFill();\n  angleMode = DEGREES;\n  \n  x = random(0, width);\n  y = random (0, height);\n  \n}\n\nfunction draw() {\n  \n  background(40, 40, 40, 15);\n\n  stroke(random(100, 255), random(100,255), random(100, 255))\n  // drawBrownianPath(0 , 0, segmentLength, steps);\n  \n  nextX = x + random(-segmentLength, segmentLength);\n  nextY = y + random(-segmentLength, segmentLength);\n  \n  x2 = mouseX;\n  y2 = mouseY\n  \n  CPx = (nextX - x)/2;\n  CPy = (nextY - y)/2;\n  \n    // arc(x, y, 30, 30, 135, 0);\n    curve(CPx, CPy, x, y, x2, y2, nextX, nextY);\n      // arc(nextX, nextY, 60, 60, 0, 135);\n      // line(x, y, nextX, nextY);\n      x = x2;\n      y = y2;\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kl7jak8ofoifapuaa0ij",
        "width": 1610,
        "height": 1618,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-07T00:15:56.427Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-07T02:40:12.565Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-07T20:15:19.211Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-07T21:45:08.123Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TD4Amc2fSDW4dG297",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-16T20:19:45.649Z",
    "posted": true,
    "lesson": "Noise",
    "description": "**A basic Perlin noise based sketch on p5** Back to p5, a piece with very little technical complexity that I used to revise Noise on p5, but just loved the visual effect achieved with so little effort.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(600, 600);\n\n  strokeWeight(1);\n  noFill();\n}\n\nfunction draw() {\n  background(0);\n\n  for (let j = 1; j < 25; j++) {\n    for (let i = 1; i < 25; i++) {\n      let w =\n        noise(i * 0.1 * millis() * 0.0001, j * 0.1 * millis() * 0.0001) * 80;\n\n      stroke(0, 0, 255);\n      ellipse(i * 24, j * 24, w, w);\n\n      stroke(255, 0, 0);\n      ellipse(i * 24, j * 24, w - 10, w - 10);\n\n      stroke(0, 255, 0);\n      ellipse(i * 24, j * 24, w - 20, w - 20);\n\n      stroke(0, 0, 255);\n      ellipse(i * 24, j * 24, w - 30, w - 30);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vwsto1fkmhtdsyvdynga",
        "width": 1208,
        "height": 1182,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/pqdwuxtr4yxjvcnow69u",
        "width": 1208,
        "height": 1182,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-16T23:42:48.941Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:38:01.96Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-17T05:47:36.523Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:35.756Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TPaQL3g4xtYeRwfye",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "created_at": "2023-01-30T19:12:47.904Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My sketch for Sahiti's instructions. Doubt this class will have a hard time guessing who's who",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/p4i7xrn8rixxnvkygwcl",
        "width": 2207,
        "height": 2327,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-01-30T22:31:19.149Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T00:23:30.286Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TPkdR7Qo96mufT2ou",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-05T07:56:54.334Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "My little foot soldiers for a castle that may or may not exist 👀 The rendering of the seemingly simple shapes took way longer than i expected and it was interesting to note how the boolean operators glitch.",
    "code": "//cylinder(h = 30, r = 8);\n\n\n$fn = 100;\n\n\n\n\n//disc\nmodule unit_brick (){\n    \n    //pillar\n  //  color(\"#F75C03\")\nunion() {\n  cylinder(h = 30, r = 8);\n  translate([0, 0, 40]) sphere(10);\n}\ntranslate([0, 0, 30]) //place translate outside the operator\ndifference() { //operator\n// color(\"#F896D8\")\n    cylinder (h=5, r=16, center = true); //action\n    cylinder (h=5, r=14, center = true);\n}\n\ntranslate([0, 0, 20]) //place translate outside the operator\ndifference() { //operator\n // color(\"#F896D8\")\n    cylinder (h=5, r=16, center = true); //action\n    cylinder (h=5, r=14, center = true);\n}\n\n\ntranslate([0, 0, 10]) //place translate outside the operator\ndifference() { //operator\n  //  color(\"#F896D8\")\n    cylinder (h=5, r=16, center = true); //action\n    cylinder (h=5, r=14, center = true);\n}\n}\n\nfor (x = [0:3], y = [0:3]) {\n    translate([x * 50, y * 50, 0]) {\n        unit_brick();\n    }\n}\n\n//cross\n//translate([0, 0, 60])\n//rotate ([0,90,90])\n\n//union() {\n   // cylinder (h=8, r=2, center = true);\n  //  rotate ([90,0,0]) cylinder (h=8, r=2, center=true);\n//}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gquihcxht1rlkpe2itch",
        "width": 1592,
        "height": 976,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ltv5f7wzjzq7d2ajpbao",
        "width": 1588,
        "height": 990,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:22.279Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TT5Tx4etXZHzLS6vt",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-01T16:13:51.99Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Custom typeface from Brian's instructions :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/je1nxuvduqo0lgtjfv6b",
        "width": 1800,
        "height": 1800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "THfyBvW9hRLZSLcRy",
        "created_at": "2023-02-01T17:34:09.016Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:27:17.293Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TYDFX3uekdK8bjGWS",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-13T19:28:20.066Z",
    "posted": true,
    "lesson": "Text",
    "description": "Shristi, Rama and I used Markov chains to write this \"bad\" story.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zcd5hzcwhyqd1v8tjr51",
        "width": 837,
        "height": 882,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-13T19:34:48.924Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-13T20:56:27.849Z"
      }
    ],
    "comments": [
      {
        "comment": "simply...compelling storytelling *applause*",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-13T20:56:50.549Z"
      }
    ]
  },
  {
    "_id": "TYk6zN7Jg6gvK7aH7",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-21T07:06:20.433Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "**Paper.js Set Up on VS Code + Lines and Rects:** When you look closely, some lines seem to be bending",
    "code": "window.onload = function () {\n    // Get a reference to the canvas object\n    const canvas = document.getElementById(\"myCanvas\");\n    // Create an empty project and a view for the canvas:\n    paper.setup(canvas);\n    \n    const paths = [];\n    const rectPaths = [];\n    const rects = [];\n\n    for (let i = 0; i < 200; i++) {\n        // Create a Paper.js Path to draw a line into it:\n        paths.push(new paper.Path());\n        rects.push(new paper.Point(i*10, i*12+10), new paper.Size(500, i*20));\n        rectPaths.push(new paper.Path.Rectangle(rects[i]));\n        // Give the stroke a color\n        paths[i].strokeColor = \"#702099\";\n        rectPaths[i].strokeColor = \"#209907\";\n\n        const start = new paper.Point(i*2, i*2 +100);\n\n        // Move to start and draw a line from there\n        paths[i].moveTo(start);\n\n        // Note that the plus operator on Point objects does not work\n        // in JavaScript. Instead, we need to call the add() function:\n        paths[i].lineTo(start.add([i*12 - 200, i*2 - 300]));\n    }\n    \n    // Draw the view now:\n    paper.view.draw();\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/piusmofn6xhy3qf27k8o",
        "width": 1006,
        "height": 1004,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gogwemgeet6qc65iw7ud",
        "width": 2880,
        "height": 1406,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-21T08:20:17.097Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-21T14:53:32.293Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-21T16:21:19.484Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:26.91Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Tcgfz7uitryZA3j8g",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-03T06:31:05.137Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "For these sketches, I was very inspired by Reshma’s instructions, and by those little colourful translucent circles I used as a kid (did anyone else use these…?)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fsh4hgu1s2o52m4pju0p",
        "width": 2752,
        "height": 1428,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/anh123fttnl9bbxi5ywf",
        "width": 2758,
        "height": 1420,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/aooia2lw0fnkqlaot0ty",
        "width": 2754,
        "height": 1432,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:18:57.984Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-03T16:25:20.644Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TgcDhgqYCgcQFcFc8",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-05-12T06:40:42.557Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Made a wheel using turtles and continued in p5.js and played around with p5's 3D functions.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rntcaf8h8pmfi1ag0v8y",
        "width": 1080,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Tgs4anQiuEJdMFFpW",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-05-12T16:03:05.56Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Was trying to animate 2 turtles!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\n// let tess = myTurtle;\n\nnames = [\"Tess\", \"Alia\"]\n\nlet tess;\n\n let alia;\n\n\nfunction setup() {\n  createCanvas(500, 500);\n  tess  = new Turtle();\n  alia = new Turtle();\n  stroke(255);\n  \n  // create tess and set some attributes\n// tess.color(\"hotpink\")\n// tess.pensize(5)\n}\n\nfunction draw() {\n  background(\"lightgreen\");\n  // Let tess draw an equilateral triangle\n   tess.penUp();\n  tess.moveTo(200, 200);\n   tess.penDown();\ntess.moveForward(80);\ntess.turnLeft(120);\ntess.moveForward(80);\ntess.turnLeft(120);\ntess.moveForward(80);\ntess.turnLeft(120);\n\n// turn tess around, and move her away from the origin\ntess.turnRight(180);\ntess.moveForward(80);\n\n// // make alia draw a square\nalia.moveForward(50)\nalia.turnLeft(90)\nalia.moveForward(50)\nalia.turnLeft(90)\nalia.moveForward(50)\nalia.turnLeft(90)\nalia.moveForward(50)\nalia.turnLeft(90)\n\nwn.exitonclick()\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kgzfhqzrnlegkrygdif8",
        "width": 502,
        "height": 498,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-09-12T18:46:40.348Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Tjv6d7WiqMnBqSAng",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-28T02:56:56.182Z",
    "posted": true,
    "lesson": "API",
    "description": "I was finally able to get another API to work - this one pulls data from the Alpha Vantage API and displays the latest CAD/USD exchange rate. I'd love to be able to add a drop-down menu so the user can view historical data from other dates",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/w6hvut8f7tu76epejvqm",
        "width": 2374,
        "height": 1128,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/m5cjt06jjqesltcfrisf",
        "width": 2012,
        "height": 418,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "TjvxyJHGW4t6epNaL",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-16T23:42:53.213Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I made a sketch for the pair challenge inspired by Keren's sketch. As her sketch was inspired by the grass example provided, I did the same",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fshbiwzlpcax1h3witat",
        "width": 487,
        "height": 492,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:25.484Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ToKG2HgSgzpf52LeK",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-24T08:19:15.218Z",
    "posted": true,
    "lesson": "Params",
    "description": "Tried some pixel swapping to create a dramatic  effect.",
    "code": "//declaring variable\nlet img;\n\nfunction preload() {\n  img = loadImage('scene.jpg');\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  noSmooth();\n  img.resize(width, height);\n}\n\nfunction draw() {\n  img.loadPixels();\n  for (let i = 0; i < 100; i++) {\n    swapPixels();\n    //Calling written func\n  }\n  img.updatePixels();\n\n  image(img, 0, 0, width, height);\n}\n\n\nfunction swapPixels() {\n  const xone = random(img.width);\n  const yone = random(img.height);\n  const colorOne = img.get(xone, yone);\n  averageColOne = color(random(255), random(255), random(255));\n\n\n  const xTwo = random(img.width);\n  const yTwo = random(img.height);\n  const colorTwo = img.get(xTwo, yTwo);\n  averageColTwo = color(random(255), random(255), random(255));\n\n\n  img.set(xone, yone, colorTwo);\n  img.set(xTwo, yTwo, colorOne);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xgtocnmudy8jspwlbmvk",
        "width": 370,
        "height": 370,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T16:28:18.648Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-24T16:36:28.502Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TrbJF4zNZjBrTedsf",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-22T19:27:11.364Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "WIP. Started cutting the panels, but had to pause in the middle because the tech at the D12 shop had to leave. Will finish this up next week when the tech comes back (can't move it to the main laser lab because of an alignment issue). Will update when done.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rnawok7wclmqjz0cehuz",
        "width": 4000,
        "height": 3000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/g9xcht9f4plunrivrtvt",
        "width": 3000,
        "height": 4000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T17:00:08.549Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:26.477Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "TvKuSFSGJhsd8BA7R",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-27T14:58:33.804Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Recreating the first challenge. Still want to figure out how to place similarly sized points closer together.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  noStroke();\n  ellipseMode(CENTER);\n  colorMode(HSB);\n  noLoop();\n}\n\nfunction draw() {\n  background(60,0,20);\n\n  let circlesNum = 100;\n  for (let i = 0; i < circlesNum; i++) {\n    let x = (random(width)+random(width)+random(width))/3;\n    let y = (random(height)+random(height)+random(height))/3;\n    let dMin = 5;\n    let dMax = 18;\n    let dSize = map(i,0,circlesNum,dMin,dMax);\n    let colH = map(dSize,dMin,dMax,30,285);\n\n    fill(colH,100,100);\n    ellipse(x, y, dSize);\n  }\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/soobi6nd4cemcbv6ltan",
        "width": 824,
        "height": 824,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "W57eYeATyDz32h7ir",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "created_at": "2023-02-03T17:13:59.548Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Followed my own instructions haha",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/niftj9b21a8yfhamnozx",
        "width": 616,
        "height": 876,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T17:15:40.358Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-03T18:01:58.254Z"
      },
      {
        "category": "funny",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-03T18:01:59.03Z"
      },
      {
        "category": "nerdy",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-03T18:01:59.724Z"
      }
    ],
    "comments": [
      {
        "comment": "Hi!",
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-03T18:02:20.492Z"
      }
    ]
  },
  {
    "_id": "WAvWkL9zt38p5eGrL",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-13T06:12:31.57Z",
    "posted": true,
    "lesson": "Text",
    "description": "Extending the Random bio generator using context-free grammar. Note to self: do not try this at 1 in the morning the nesting melts your brain. But I am wondering if the structure could be refined further? Right now, it still takes nearly as much work as templates and I want to use as few lines of code as possible. Suggestions are welcome!",
    "code": "// require /text/tracery.min.js //\n\nconst storyGrammar = {\n    story: [\"I am #phrase1# working at the intersection of #phrase2#. My practice explore themes of #phrase3#.\"],\n    phrase1: [\"#discipline.a# #adjective# #noun#\", \"#discipline# #noun#\", \"#adjective# #noun#\"],\n    phrase2:[\"#medium# and #medium#\"],\n    phrase3:[\"#theme# and #theme#\", \"#theme#, #theme#, and #theme#\"],\n    discipline: [\n        \"multidisciplinary\",\n        \"cross-disciplinary\",\n        \"interdiscilinary\",\n        \"transdisciplinary\",\n        \"innovation-driven\",\n        \"research-based\",\n        \"human-centered\",\n        \"award-winning\",\n        \"ambient\",\n        \"new media\"\n    ],\n    adjective: [ \"poetic\",\n    \"computational\",\n    \"technical\",\n    \"graphic\",\n    \"creative\",\n    \"experience\",\n    \"interaction\",\n    \"communication\",\n    \"UI/UX\",\n    \"product\"],\n    noun: [\n        \"storyteller\",\n        \"designer\",\n        \"director\",\n        \"coder\",\n        \"technologist\",\n        \"researcher\",\n        \"prototyper\",\n        \"artist\",\n        \"developer\",\n        \"problem solver\"\n      ],\n\n    medium: [ \"AR/VR/XR\",\n    \"Film\",\n    \"Multimedia art\",\n    \"the physical\",\n    \"UI/UX\",\n    \"analog structures\",\"electronics\",\n    \"web\",\n    \"machine learning and AI\",\n    \"digital technolgies\",\n    \"interactive installations\",\n    \"motion design\"],\n\n    theme: [\"social justice\",\n    \"feminism\",\n    \"journalism\",\n    \"political science\",\n    \"identities\",\n  \"social justice\",\n\"feminism\",\n\"journalism\",\n\"political science\",\n\"identities\",\n\"data-driven\",\n\"spatial immersions\",   \"data bias\",\n\"privacy\",\n\"trust and safety\",\n\"digital democracies\",\n\"media and culture\",\n\"data-driven\",\n\"gamification\",\n\"playful experiences\"\n    ]\n};\n  \n  function main() {\n    const grammar = tracery.createGrammar(storyGrammar);\n    const story = grammar.flatten(\"#story#\");\n    display(story);\n  }\n  \n  function display(...strings) {\n    const div = document.createElement(\"div\");\n    div.style = \"font-size: 30px; margin: 10%; line-height: 1.5; font-family: 'Roboto', sans-serif;\";\n    div.innerText = strings.join(\"\\n\");\n    document.body.append(div);\n  }\n  \n  // tracery doesn't load immediately, not sure why, so kludge it\n  setTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gormseq3h9itidlebrf0",
        "width": 1218,
        "height": 526,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hlbpozkwk00sr9sqxxeg",
        "width": 1180,
        "height": 416,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dlxknrok8tuhybrquk4h",
        "width": 1218,
        "height": 542,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-13T16:16:10.546Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "WM4Z2dKKqTsDmZGqn",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-24T02:14:35.181Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair challenge based on Alex's code!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lwqgu0tjmr3f4ovenngr",
        "width": 991,
        "height": 1182,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-24T02:51:15.115Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-24T02:55:14.099Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "WNJKDnPHSAoyfFWG5",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-27T19:21:39.179Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "My attempt at the first challenge",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fxro1xnbmuvgbrdvll1u",
        "width": 702,
        "height": 706,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "WP4fqHsY5MN6GcPm9",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-10T01:09:57.75Z",
    "posted": true,
    "lesson": "Random",
    "description": "For the pair challenge, Ishan and I created a sketch that generates happy/sad faces while also introducing a glitch.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hid7okbzsif6wwxvhjeh",
        "width": 370,
        "height": 374,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-10T02:02:52.277Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-10T04:29:25.412Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-15T03:50:51.979Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:29.369Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "WQhgwQ6texJzYWaRL",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-16T23:44:48.446Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Tried a \"rangoli pattern\" with P5js.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mz997ueo9zwwmdkhewky",
        "width": 464,
        "height": 364,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-17T00:57:26.559Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:37:49.226Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-17T05:47:21.179Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "WXKaCtqgDm6EaK8ZC",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-17T02:39:27.421Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Here's my response to Brian's sketch (second image)! Thought about expanding his design language to also incorporate squares and triangles.",
    "code": "let canvasHeight = 1700;\nfunction setup() {\n  createCanvas(1000, canvasHeight);\n  noLoop();\n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(0);\n  let x = 60;\n  let squareY = 60;\n  let triY = canvasHeight - 60;\n  let triLength = 100;\n  noStroke();\n  blendMode(DIFFERENCE)\n  for (let i = 0; i < 12; i++) {\n    let h = noise(x+i)*30+00;\n    let s = noise(x+i)*100+20;\n    let l = noise(x+i)*100+10;\n    fill(h, s, l);\n    square(x+i*65, squareY, 100+(noise(x+i)*280));\n  }\n  \n  for (let i = 0; i < 24; i++) {\n    let h = noise(x+i)*30+00;\n    let s = noise(x+i)*100+20;\n    let l = noise(x+i)*100+10;\n    fill(h, s, l);\n    triangle(\n      x+i*35, \n      triY, \n      x + i * 35 + (triLength-noise(x+i)*40+20), \n      triY, \n      x + i * 35 + (triLength/2-noise(x+i)*40+20),\n      triY-180-noise(x+i)*280\n    );\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uytkry9mcgka9kycwupz",
        "width": 2481,
        "height": 3508,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/miy4jvkluungcgo9uhu1",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:37:00.123Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-17T05:00:36.445Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "WbuLmFb6QjxeJmajd",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-16T02:38:47.916Z",
    "posted": true,
    "lesson": "Random",
    "description": "PAIR LOVECHALLENGE",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/j8ichlacx73qhomfxjiu",
        "width": 1379,
        "height": 1348,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "WctZijf9iCFcEN7MT",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-02T20:48:52.321Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "WEEK 1 SKETCH (3/4) : ALEX'S INSTRUCTIONS",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/arpu7j20cmubeplj5co6",
        "width": 1686,
        "height": 1770,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T21:33:04.969Z"
      },
      {
        "category": "pretty",
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "created_at": "2023-02-02T23:53:38.981Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-03T00:24:25.097Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "WmdCTTMmdmfTRsMrD",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-21T02:57:14.212Z",
    "posted": true,
    "lesson": "Params",
    "description": "Partly inspired by the cursor on the parameters site page. I came up with two iterations, but I still  couldn't quite make it do what I wanted it to before time was up.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet circles = [];\nconst numCircles = 8;\nconst radius = 40;\nconst spacing = 75;\nconst easing = 0.02;\n\nlet r = 0;\nlet theta = 0;\nlet inc = 0.02;\n\nlet colours = [\n  \"red\",\n  \"green\",\n  \"blue\",\n  \"yellow\",\n  \"purple\",\n  \"orange\",\n  \"cyan\",\n  \"magenta\",\n];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noStroke();\n  for (let i = 0; i < numCircles; i++) {\n    const x = mouseX + spacing * (i - 2);\n    const y = mouseY;\n    circles.push({ x, y });\n  }\n}\n\nfunction draw() {\n  background(230);\n  for (let i = 0; i < numCircles; i++) {\n    let circle = circles[i];\n    const dx = mouseX - circle.x;\n    const dy = mouseY - circle.y;\n    circle.x += dx * easing;\n    circle.y += dy * easing;\n\n    r = 50;\n    let a = r * cos(theta);\n    let b = r * sin(theta);\n    theta = theta += inc;\n\n    // let ex = noise(i * dx * 5) * 100;\n    // let ey = noise(i * dy * 5) * 100;\n    let ex = noise(i) * dx * 5;\n    let ey = noise(i) * dy * 5;\n\n    fill(colours[i]);\n    ellipse(circle.x + ex + a, circle.y + ey + b, radius);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tx9pzwfa9pdtuuothuc2",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ph6yma1ap8sxxbu08aba",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-21T06:00:20.791Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-22T03:30:17.472Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "WpERg24pSifLMGCJk",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-14T05:54:10.935Z",
    "posted": false,
    "lesson": "Creative AI",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "X3r73GjsEg7e7ZeW2",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-05-10T00:31:12.261Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "**Methodology Manipulative on Unity** Projects float around based on Perlin Noise, and placing the verbs in a specific order picks real world projects to explore.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/l67sudlidpdv0wodisqm",
        "width": 1776,
        "height": 1002,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/bztvg3dx6n3mphwumgem",
        "width": 1776,
        "height": 1002,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/sbvco6jed6me9myj0wk8",
        "width": 1776,
        "height": 1002,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-10T02:25:16.794Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-11T16:42:39.063Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:08.332Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "X6wTkvfPcqLTJgkL2",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-27T22:30:21.342Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "A small animation.",
    "code": "// // Create a circle shaped path at {x: 80, y: 50}\n// // with a radius of 30.\n// var circle = new Path.Circle(new Point(80, 50), 30);\n\n// // Pass a color name to the fillColor property, which is internally\n// // converted to a Color.\n// circle.fillColor = 'green';\n\nvar mousePoint = view.center;\n\nvar amount = 40;\n\n// function onMouseDown(event) {\n// \tconsole.log('You pressed the mouse!');\n\n// for (var i = 0; i < amount; i++) {\n// \tvar rect = new Rectangle([0, 0], [25, 25]);\n// \trect.center = mousePoint;\n// \tvar path = new Path.Rectangle(rect,1);\n// \tpath.fillColor = Color.random();\n// \tvar scale = (1 - i / amount) * 20;\n// \tpath.scale(scale);\n// }\n// }\n\nfunction onMouseDrag(event) {\n\t// The amount of drag events fired since the mouse\n\t// was pressed:\n\tconsole.log(event.count);\n\tfor (var i = 0; i < amount; i++) {\n\tvar rect = new Rectangle([0, 0], [25, 25]);\n\trect.center = mousePoint;\n\tvar path = new Path.Rectangle(rect,1);\n\tpath.fillColor = Color.random();\n\tvar scale = (1 - i / amount) * 20;\n\tpath.scale(scale);\n}\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/blyb6twicl7frikvnmaf",
        "width": 824,
        "height": 754,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-28T03:26:12.516Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "XDxa3nbQfHva84kye",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-23T20:34:47.513Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "using paperscript's keyboard interactions tutorial to make a simple drawing tool. made a little game out of it by asking my clearly unamused brother to try and draw a few prompts without literally stepping out of line.",
    "code": "var position = new Point(250, 350);\nvar path = new Path();\npath.strokeColor = '#FEFEFF';\npath.strokeWidth = 8;\npath.add(position);\n\nfunction onKeyDown(event) {\n\tif(event.key == 'a') {\n\t\tposition.x -= step;\n\t}\n\n\tif(event.key == 'd') {\n\t\tposition.x += step;\n\t}\n\n\tif(event.key == 'w') {\n\t\tposition.y -= step;\n\t}\n\n\tif(event.key == 's') {\n\t\tposition.y += step;\n\t}\n\tpath.add(position);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ubz0flrc33x7epqbn92q",
        "width": 996,
        "height": 1396,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pdwsseelksb2gzt5pl2v",
        "width": 1004,
        "height": 1002,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/onixpdttb1qqsedxmtvv",
        "width": 1080,
        "height": 1920,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T21:01:31.013Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T21:21:20.708Z"
      }
    ],
    "comments": [
      {
        "comment": "Love the second drawing! ",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T21:02:58.099Z"
      },
      {
        "comment": "that one's mine haha. gonna tell my brother i won XD",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T21:13:06.464Z"
      }
    ]
  },
  {
    "_id": "XPc4pEJda3q8NmBiY",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-12T07:14:18.938Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Pair Challenge: Rama and I made this",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bt8uk0tmixzhllcqe0xm",
        "width": 1350,
        "height": 848,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:16:44.114Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "XR7RfYMcDmnvcvSNG",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-21T02:08:57.452Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I tried using Hugging Face to recreate the treasure map challenge with specific prompt related to styles and elements. I want to try the same with Midjourney to see the difference and range of output.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bbyzcqgz5pwbqag8nlzt",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zefvbanrejskjzr3pejv",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pzuyu7dbohreo4jhacn4",
        "width": 1382,
        "height": 1382,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:43:54.087Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:02:09.591Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "XRpq7gZqis24GWTmj",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-16T23:43:59.04Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Wanted to play around with noise fields!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gycox4fpr2wbmecj3ew5",
        "width": 1598,
        "height": 1606,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-16T23:44:38.229Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-17T00:57:36.629Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:37:52.975Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "XSBnKznwNSTCmuALX",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-08T05:42:46.074Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Think I understand how Photoshop blending modes work now. Using some sketches from noise week.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n/* exported preload setup draw*/\nlet worldImage;\n\nfunction preload() {\n  worldImage = loadImage(\"grad.jpg\");\n}\n\nfunction setup() {\n  createCanvas(500, 500);\n  pixelDensity(1);\n}\n\nfunction draw() {\n  background(0);\n\n  worldImage.loadPixels();\n\n  for (let y = 0; y < worldImage.height; y++) {\n    for (let x = 0; x < worldImage.width; x++) {\n      const in_color = worldImage.get(x, y);\n\n      const r = red(in_color);\n      const g = green(in_color);\n       const b = blue(in_color);\n\n      let out_color;\n      if (r < 120) {\n        out_color = color(\"pink\");\n      } else if (g < 200 && b >130) {\n        out_color = color(\"teal\");\n      }\n      // else{\n      //   out_color = color(\"#34E3EB\");\n      // }\n\n      worldImage.set(x, y, out_color);\n    }\n  }\n\n  worldImage.updatePixels();\n\n  noSmooth();\n  image(worldImage, 0, 0, width, height);\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wxaakmwkqdqhbnwglh6d",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cbdbb997gapin3wzvcfg",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qtov7i7tqpmrw6y7mc9l",
        "width": 500,
        "height": 500,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-08T07:51:21.185Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:25.701Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Xa8dtG5X6tiY7JzMH",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-29T21:25:23.175Z",
    "posted": true,
    "lesson": "Music",
    "description": "Endlessly fascinated with Alexander Chen's music visualisations. Tried to mimic one of them, although it's obviously much less sophisticated. The ellipse moves randomly with noise().",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n//partly adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/synth.js\n\nlet canvasWidth = 500;\nlet canvasHeight = 500;\n\nlet ellipse0 = {\n    xoffset: 0,\n    yoffset: 0,\n    xPos: 0,\n    yPos: 0,\n    esize: 20\n};\nlet amplitude;\nlet vibration = 25;\nlet string = [\n    {deceleration: 0, stringX: canvasWidth/2 - 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n    {deceleration: 0, stringX: canvasWidth/2 - 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2, stringYoffset: 50, bezierYoffset: 100, note: \"B4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 50, stringYoffset: 100, bezierYoffset: 75, note: \"F4\"},\n    {deceleration: 0, stringX: canvasWidth/2 + 100, stringYoffset: 150, bezierYoffset: 50, note: \"C4\"},\n  ];\n\nconst synth = new Tone.Synth(\n  {\n    oscillator: {\n      type: \"sine\",\n    },\n    envelope: {\n      attack: 0.1,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 1,\n    },\n  }\n);\nsynth.toMaster();\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(250, 50, 85);\n  \n  ellipse0.xPos = map(noise(ellipse0.xoffset), 0, 1, 0, width);\n  ellipse0.yPos = map(noise(ellipse0.yoffset), 0, 1, 0, height);\n  \n  fill(0, 0, 100);\n  noStroke();\n  ellipse(ellipse0.xPos, ellipse0.yPos, ellipse0.esize);\n  \n  ellipse0.xoffset+=0.01;\n  ellipse0.yoffset+=0.001;\n  \n  for (let i=0; i<string.length; i++) {\n      \n    amplitude = (vibration/2) * sin(TWO_PI * (millis()/1000)) * string[i].deceleration;\n    \n    noFill();\n    stroke(0, 0, 100);\n    strokeWeight(1.75);\n    bezier(\n      string[i].stringX, string[i].stringYoffset,\n      amplitude + string[i].stringX, string[i].stringYoffset + string[i].bezierYoffset, \n      amplitude + string[i].stringX, height - string[i].stringYoffset - string[i].bezierYoffset, \n      string[i].stringX, height - string[i].stringYoffset\n    );\n    \n    string[i].deceleration -= 0.01;\n    if (string[i].deceleration < 0) {\n      string[i].deceleration = 0;\n    }\n    \n    if (\n        ellipse0.xPos > string[i].stringX - 5 && \n        ellipse0.xPos < string[i].stringX + 5 && \n        ellipse0.yPos > string[i].stringYoffset && \n        ellipse0.yPos < height - string[i].stringYoffset\n    ) {\n      synth.triggerAttackRelease(string[i].note, \"4n\");\n      string[i].deceleration = 1;\n    }\n      \n  }\n  \n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/f05jns6ag1tpoixafozl",
        "width": 818,
        "height": 816,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:30.23Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:12:23.738Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "XwoLSwJbnM6rJjmLd",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-28T03:58:28.789Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I used dall-e to generate an hdri background for my 3D illustration and animation (last image). I wanted very specific images with specific colours so I spent a lot of time on generating these images for my project!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ecjferxqox0mseolz3xp",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kaycrvqsby5ttovsd5fb",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/phvqjor1se8imw92gsvh",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T13:22:03.041Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Xx8XZ6TcwsWtCevi7",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-31T13:04:40.373Z",
    "posted": true,
    "lesson": "Music",
    "description": "WEEK 8 (2/4): Had to fix it as I forgot the half or quarter notes but i just kept these as halfnotes This is the song from Maleficent",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/myhygs31azxfzoje1zoz",
        "width": 756,
        "height": 812,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Y32Rptj7bwpiTEYGC",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-22T04:51:36.191Z",
    "posted": true,
    "lesson": "Params",
    "description": "Made a grid generator based on parameters HTML dom elements. Wasn't able to get the updateCanvasSize to work in time, it throws this error",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kgygpy3a3tcphr0dsiyz",
        "width": 1228,
        "height": 958,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/wpllchglv0vnasfm4ake",
        "width": 1726,
        "height": 804,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-22T10:26:36.85Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Y9tH3doeQBfiLtqwo",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-28T15:05:48.611Z",
    "posted": true,
    "lesson": "API",
    "description": "tried writing a small code for weather API, seems like no luck.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/teuom8xwjlgjlinnykn0",
        "width": 1757,
        "height": 842,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "YFy88kWksx9aEkAEL",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-09T23:19:54.42Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "interactive letterforms using characters built pixel-by-pixel. why did I do this to myself",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/eiluempzxrvhp2wgdbqf",
        "width": 1818,
        "height": 1262,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/mwemyp2yzhjdzttn6ikd",
        "width": 2470,
        "height": 1366,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/pplw5aftxs8ryqvmvlst",
        "width": 1710,
        "height": 1326,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T00:44:32.893Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:45:45.658Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "YGENfnaa7Ff2fNXNY",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-28T12:01:39.763Z",
    "posted": true,
    "lesson": "API",
    "description": "WEEK 12 (4/4): Originally I was playing with midjourney and other image generating AI's but I wanted to see if CHATGPT is image literate and i asked it to generate a coded cat image AND LOOK AT WHAT IT MADE AHAHAHHA. I did several of these but I think this one is the funniest one.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wvs718s4qhipbg27a4sv",
        "width": 716,
        "height": 702,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "YQu3e9CwWv49vo5kJ",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-21T08:44:27.652Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Asking ChatGPT for business ideas (using GPT-3) -\nAI-powered content creation platform: A SaaS platform that leverages the power of GPT-3/GPT-4 to generate high-quality, engaging content for businesses across various industries. The platform could offer features such as content optimization, topic research, and keyword analysis to help businesses improve their online presence.\n\nAI chatbot builder: A SaaS platform that allows businesses to build their own AI chatbots using GPT-3/GPT-4. The platform could offer various templates and customization options to help businesses create chatbots that are tailored to their specific needs.\n\nAI-powered customer service platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized customer service to businesses. The platform could offer features such as automated responses, real-time chat, and voice recognition to help businesses improve their customer experience.\n\nAI-powered job matching platform: A SaaS platform that uses GPT-3/GPT-4 to match job seekers with relevant job openings. The platform could analyze job descriptions and applicant resumes to provide personalized job recommendations to job seekers.\n\nAI-powered lead generation platform: A SaaS platform that uses GPT-3/GPT-4 to generate high-quality leads for businesses. The platform could analyze customer data and behavior to provide personalized lead recommendations to businesses.\n\nAI-powered language translation platform: A SaaS platform that uses GPT-3/GPT-4 to translate languages in real-time. The platform could offer features such as text-to-speech, speech-to-text, and multi-language support to help businesses communicate with customers around the world.\n\nAI-powered virtual assistant platform: A SaaS platform that uses GPT-3/GPT-4 to provide virtual assistant services to businesses. The platform could offer features such as appointment scheduling, email management, and task automation to help businesses streamline their operations.\n\nAI-powered data analysis platform: A SaaS platform that uses GPT-3/GPT-4 to analyze large datasets and provide insights to businesses. The platform could offer features such as predictive analytics, data visualization, and machine learning to help businesses make data-driven decisions.\n\nAI-powered e-commerce platform: A SaaS platform that uses GPT-3/GPT-4 to personalize the online shopping experience for customers. The platform could offer features such as product recommendations, personalized messaging, and targeted advertising to help businesses increase sales.\n\nAI-powered social media platform: A SaaS platform that uses GPT-3/GPT-4 to optimize social media content for businesses. The platform could offer features such as post scheduling, content curation, and social media analytics to help businesses improve their social media presence.\n\nAI-powered medical diagnosis platform: A SaaS platform that uses GPT-3/GPT-4 to analyze medical data and provide accurate diagnoses. The platform could offer features such as symptom analysis, medical record analysis, and personalized treatment recommendations to help healthcare providers make informed decisions.\n\nAI-powered financial forecasting platform: A SaaS platform that uses GPT-3/GPT-4 to analyze financial data and provide accurate forecasts for businesses. The platform could offer features such as cash flow analysis, financial modeling, and scenario planning to help businesses make informed financial decisions.\n\nAI-powered cybersecurity platform: A SaaS platform that uses GPT-3/GPT-4 to detect and prevent cyber threats for businesses. The platform could offer features such as threat detection, real-time monitoring, and automated response to help businesses protect their sensitive data.\n\nAI-powered project management platform: A SaaS platform that uses GPT-3/GPT-4 to manage projects for businesses. The platform could offer features such as task assignment, project timelines, and automated reporting to help businesses stay organized and on track.\n\nAI-powered personal shopping assistant platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized shopping recommendations to consumers. The platform could offer features such as product recommendations, price comparison, and personalized deals to help consumers make informed purchasing decisions.\n\nAI-powered legal research platform: A SaaS platform that uses GPT-3/GPT-4 to provide legal research services to businesses and individuals. The platform could offer features such as case analysis, legal document drafting, and contract review to help businesses and individuals navigate the legal system.\n\nAI-powered real estate platform: A SaaS platform that uses GPT-3/GPT-4 to provide real estate data and insights to businesses and individuals. The platform could offer features such as property valuation, market analysis, and investment recommendations to help businesses and individuals make informed real estate decisions.\n\nAI-powered language learning platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized language learning services to individuals. The platform could offer features such as language assessment, personalized curriculum, and conversation practice to help individuals learn a new language.\n\nAI-powered HR platform: A SaaS platform that uses GPT-3/GPT-4 to provide HR services to businesses. The platform could offer features such as employee engagement analysis, recruitment automation, and performance management to help businesses manage their workforce more effectively.\n\nAI-powered online education platform: A SaaS platform that uses GPT-3/GPT-4 to provide personalized online education services to individuals. The platform could offer features such as personalized curriculum, automated grading, and real-time feedback to help individuals learn more effectively.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/b6rbvhfro23ya42oavo8",
        "width": 1654,
        "height": 1428,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:42:58.731Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "YaPwjMSwgK6LCBzTN",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-01-30T16:39:49.125Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Group Sketch Challenge Instructions. Have fun!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/md9lrzuut9rmufnm0k9r",
        "width": 1125,
        "height": 1835,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-01T20:45:38.986Z"
      },
      {
        "category": "funny",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-10T01:59:51.352Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-10T02:00:24.55Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "YbHjdCoAyPuNnNjfC",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-02T15:22:26.955Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "WEEK 5 ( 2/4): Now, I fixed the time thing but this took me so long for no reason, its a bit jank but I think I can fix the range of speed it actually has. I had to play around with the arrangement of the equation but I got it.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t3tq8i6qsaefyrmpz0bg",
        "width": 1130,
        "height": 1044,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/e02xmmdmkem02jux7k8n",
        "width": 1010,
        "height": 1076,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "YczxKvCEM8J594BaJ",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-14T03:13:41.401Z",
    "posted": true,
    "lesson": "Text",
    "description": "I was analyzing the work of Aaron Marcus for inspiration and ended up with these poetic letterforms",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gqddy2meoe9fegwvwgwv",
        "width": 2560,
        "height": 1236,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/c0wypkcdctd6afdvw0e0",
        "width": 2560,
        "height": 1236,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/as52unk0381d1bfzuijh",
        "width": 2560,
        "height": 1236,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T03:55:19.453Z"
      },
      {
        "category": "funny",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-04-14T16:19:05.412Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-04-14T16:19:06.403Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Yfrr869pPBEvWbnFv",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-11T03:22:56.27Z",
    "posted": true,
    "lesson": "Random",
    "description": "Building upon the pair sketch done with Sahiti a bit further to add more randomness biased to have more :) than :(",
    "code": "let images = [];\nlet pos = 0;\nlet array = [5,7,8,9,11,10]\n\nfunction preload(){\n  images = [\n            loadImage('sad.png'), \n            loadImage('happy.png'),\n           ];\n}\nfunction setup() {\n  createCanvas(400, 400);\n  background(255);\n  \n\n  frameRate(1);\n}\nfunction draw() {\n drawFace();\n }\n\n\n//function to draw a face\nfunction drawFace() {\n  background(\"white\");\n  // const chosenImage =  valueFromDeck();\n  for (let i=0; i<400; i+=50) {\n    for (let j=0; j<400; j+=50) {    \n      let randomElement = array[Math.floor(Math.random() * array.length)];\n      if (randomElement%2 != 0) {\n        choosenImage = images[1]\n      } else {\n        choosenImage = images[0]\n      }\n      image(choosenImage, i, j, 48, 48);\n    }\n  }\n  \n}\n\n\n//return a number from the deck\nfunction valueFromDeck() {\n  let v = images[pos];\n  pos++;\n  if (pos >= images.length) {\n    shuffle(images, true);\n    pos = 0;\n  }\n  return v;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u1fujs39oe2lwqm7k6jd",
        "width": 802,
        "height": 836,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-12T03:09:29.957Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T06:00:08.853Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Yg9hxYZJEhC7kBvXw",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-20T15:25:08.276Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "It was very interesting to use ChatGPT for film recommendations, especially films in another language. It was funny because I was recommending the film The Lunchbox to someone repeatedly but they thought it would be wiser to ask ChatGPT for suggestions. And it was quite funny how that film was right up there in the suggestions. So am I as smart as ChatGPT? 👀\nAsking ChatGPT about opinions made me think about how AI, although very well trained with all the information available, still doesn't really have it's own \"self\" . I wonder how this all fits into the discussions and debates around AI.\nAnyway, if anyone needs movie recommendations, definitely ask ChatGPT.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lebh7gmviji3rdewigod",
        "width": 1968,
        "height": 1672,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lpl8y1xyuq4p3o2g1vmn",
        "width": 1968,
        "height": 1186,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lvkhralppbzdkw6ivvns",
        "width": 1968,
        "height": 1186,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": [
      {
        "comment": "did you do any fact checking?\neven just \"does this match what i already know\"?\n",
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-04-20T15:35:25.876Z"
      }
    ]
  },
  {
    "_id": "YjjfqRJJCfFerM9iJ",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-01T08:48:36.979Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Inspired by the discussion in class vis a vis Lego & building blocks. It works kind of the way I wanted it to, but not exactly.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet lego = [];\nlet legoX = [0,50,100,150,200,250,300];\nlet legoY = 0;\nlet legoNum = legoX.length*8;\n\nfunction setup() {\n  createCanvas(400, 400);\n  for (let i=0; i<legoNum; i++) {\n    lego[i] = new Lego(random(legoX),legoY-(400*i));\n  }\n}\n\nfunction draw() {\n  background(220);\n  let colour = [color('red'),color('yellow'),color('green'),color('blue')];\n  for (let i=0; i<legoNum; i++) {\n    lego[i].drawLego(colour[i%4]);\n    lego[i].moveLego();\n    lego[i].collision(lego);\n    lego[i].reloadScreen();\n  }\n}\n\nclass Lego {\n  constructor(LegoX, LegoY) {\n    this.x = LegoX;\n    this.y = LegoY;\n    this.legoWidth = 100;\n    this.speed = 3;\n  }\n  drawLego(LegoColour) {\n    noStroke();\n    fill(LegoColour);\n    rect(this.x, this.y, this.legoWidth, this.legoWidth/2);\n    rect(this.x+(this.legoWidth/8),this.y-(this.legoWidth/8),this.legoWidth/4,this.legoWidth/8);\n    rect(this.x+((5*this.legoWidth)/8),this.y-(this.legoWidth/8),this.legoWidth/4,this.legoWidth/8);\n  }\n  moveLego() {\n    this.y+=this.speed;\n    if (this.y > (height-(this.legoWidth/2))) {\n      this.speed=0;\n    }\n  }\n  collision(array) {\n    for (let i=0;i<legoNum;i++) {\n      if ( ((array[i].x-this.x)>=0) && ((array[i].x-this.x)<70) && ((array[i].y-this.y)>0) && ((array[i].y-this.y)<50)  ) {\n        this.speed = 0;\n      }\n    }\n  }\n  reloadScreen() {\n    if(this.y>0 && this.y<=50 && (this.speed<0.5)) {\n      window.location.reload();\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ubrqxvhokqmce6klkcsu",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T02:08:07.907Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "YjkBkjfgZ7pFQrJKr",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-01T08:55:14.993Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Response to Alex's instructions.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/oyyiglxy7nug0rleb8td",
        "width": 1500,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qhvmeoak3zptyp0usawa",
        "width": 1504,
        "height": 1504,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-01T14:42:20.006Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T02:08:04.745Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "YsJDS5z9CqZWsYEFX",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-01T20:49:48.863Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Had this done over the weekend. This was moreso a warmup for experimenting with OpenSCAD to see if I could build objects using basic shapes and using the translate() and rotate() modifiers while also getting myself into the new flow of code.",
    "code": "//Helicopter Blades\n\ncolor(\"white\"){\n    translate([0, 0, 20]){\n    cube([5, 50, 2], center = true);\n        \n    rotate([0, 0, 90]){    \n    cube([5, 50, 2], center = true);\n        }    \n    }\n}\n\ncolor(\"white\"){\n    translate([5, 40, 8]){\n    rotate([0, 90, 0]){\n    cube([3, 10, 1], center = true);\n        \n    rotate([0, 0, 90]){    \n    cube([3, 10, 1], center = true);\n    }\n        }    \n    }\n}\n\ncolor(\"white\"){\n    translate([0, 0, 10]){\n    cylinder(10, 2, 2);\n    }\n}\n\ncolor(\"white\"){\n    translate([0, 40, 8]){\n    rotate([0, 90, 0]){\n    cylinder(6, 1, 1);\n    }\n    }\n}\n\n// Body\n\ncolor(\"blue\"){\n    translate([0, 0, 5]){\n    cube([20, 20, 20], center = true);\n    }\n}\n\ncolor(\"blue\"){\n    translate([0, 20, 8]){\n    cube([5, 40, 5], center = true);\n    }\n}\n\ncolor(\"blue\"){\n    translate([0, 40, 8]){\n    cube([5, 10, 10], center = true);\n    }\n}\n\n// Base\n\ncolor(\"grey\"){\n    translate([7, 0, -10]){\n    cube([4, 20, 2], center = true);\n    }\n        \n    translate([-7, 0, -10]){\n    cube([4, 20, 2], center = true);\n    }\n}\n\ncolor(\"grey\"){\n    translate([7, 5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n    \n    translate([-7, 5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n    \n    translate([7, -5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n    \n    translate([-7, -5, -7]){\n    cube([3, 3, 7], center = true);\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hulspociyd6khdw2jtph",
        "width": 964,
        "height": 701,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-02T00:02:40.936Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-02T04:18:40.745Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:54.01Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "YswdACKXFzjcJ3JNS",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-25T02:54:06.53Z",
    "posted": true,
    "lesson": "API",
    "description": "Have been experimenting with AI & songs for a few months, so tried to use GPT to come up with lyrics for songs based on the format in the image. It doesn't really understand the genre or artist or any of the other prompts, it just puts all of the words in the prompt into the song in one specific order it recognises - verse 1, chorus, verse 2, chorus, optionally verse 3 and chorus, bridge, chorus. Increasing the temperature above 1.3 breaks out of this rigid format but makes everything nonsensical.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/esobnp3h5ow4nmu7df2u",
        "width": 1552,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/pjtvs3hm4bimx62j5rdz",
        "width": 549,
        "height": 187,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-26T03:10:19.961Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "YtwkogWMNGttZ7v3g",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-04T03:23:05.039Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "First attempt at a microgame, decided to try and recreate the OG Pong. Was able to get collisions, bouncing, two user input, angle variation, score system, and game resetting. For some reason p5.play has this weird thing where changing the position or speed of a sprite leaves behind this weird trail. Couldn't figure  out how to fix it",
    "code": "let ball, topBox, leftBox, rightBox, bottomBox;\nlet leftScore = 0, rightScore = 0;\n\nfunction setup() {\n  createCanvas(800, 800)\n\n\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start = createSprite(400, 300, 400, 200) \n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n\n}\nlet ballHue = 0 \nlet resetState = true;\nfunction draw() {\n  if (resetState === true)  {  \n    \n    if (keyWentUp(32)) {\n    serve()\n    resetState = false\n    start.draw = function () {\n      rect(0,0,300, 100)\n    }\n  }\n  \n}\n  textSize(32)\n\n  textAlign(CENTER)\n  ballHue++\n  if (ballHue > 200) {\n    ballHue = 0\n  }\n  ball.shapeColor = [ballHue, ballHue, ballHue + 800]\n  ball.bounce(topBox);\n  ball.bounce(bottomBox); \n  ball.bounce(leftBox);\n  ball.bounce(rightBox);\n   if (ball.touching.right) {\n    scoreUp('right')\n   }\n\n   if (ball.touching.left) {\n    scoreUp('left')\n   }\n\n   if (keyWentDown(38)) {\n    rightPaddle.position.y -= 60;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n  }\n\n  if (keyWentDown(40)) {\n    rightPaddle.position.y += 60;\n    rightPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n  }\n\n  \n  if (keyWentDown(87)) {\n    leftPaddle.position.y -= 60;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n\n  }\n\n  if (keyWentDown(83)) {\n    leftPaddle.position.y += 60;\n    leftPaddle.shapeColor = [random(0,255), random(0,255), random(0,255)];\n\n  }\n\n \n \n  ball.bounce(leftPaddle);\n  ball.bounce(rightPaddle);\n\n  \n\n\n\n\n\n\n  drawSprites()\n\n  rect(40, 30, 80, 80)\n \n  text(leftScore + '', 80, 80)\n  rect(660, 30, 80, 80)\n  text(rightScore + '', 700, 80) \n}\n\nfunction scoreUp(side) {\n  if (side === 'left') {\n    rightScore++\n    resetGame()\n  } else {\n    leftScore++\n    resetGame()\n  }\n\n}\n\nfunction serve() {\n  ball.position.x = 400;\n  ball.position.y = 400;\n\n  let dir = Math.random();\n  let ang = (Math.random() - 0.5) * 60 + 10\n  if (dir <= 0.5) {\n    ball.setSpeed(10, ang )\n  } else {\n    ball.setSpeed(-10, ang)\n  }\n\n}\n\nfunction resetGame() {\n  serve()\n  resetState = true\n  ball.velocity.x = 0;\n  ball.velocity.y = 0;\n  allSprites.removeSprites();\n  ball = createSprite(400, 400, 30, 30);\n  // ball.width = 40;\n  // ball.height = 40\n  topBox = createSprite(0, 0, 1600, 20);\n  bottomBox = createSprite(0, 800, 1600, 20);\n  leftBox = createSprite(0, 0 , 20, 1600);\n  rightBox = createSprite(800, 0, 20, 1600);\n  topBox.immovable = true;\n  bottomBox.immovable = true;\n  leftBox.immovable = true;\n  rightBox.immovable = true\n  leftPaddle = createSprite(40, 400 , 15, 200);\n  rightPaddle = createSprite(760, 400, 15, 200);\n  rightPaddle.immovable = true;\n  leftPaddle.immovable = true\n  start.draw = function () {\n    text('Press Space to Start', 0, 0)\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jfz2bhb78y2lbll34hbr",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-04T22:57:02.116Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Ywg82F24yvp6okEnw",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-14T06:37:22.747Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I came across this sketch on Reddit and I was really curious how it was done. I tried to recreate it but... It needs more work! I would like to figure out how to parameterize it so I can fine tune it more..",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jpq1seqvfuqx7fqymkhb",
        "width": 1348,
        "height": 1346,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T06:44:01.388Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-14T16:16:37.901Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-15T08:35:25.751Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "Z3kLCvwYJsevRMtZa",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-02T15:21:01.72Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "WEEK 5 ( 1/4) : I had sort of figured out how to do the noise thing but I somehow made it stop moving...",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fvb2jvkmkasnmv0adm6s",
        "width": 1010,
        "height": 1076,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Z7GGYazgdN5zcryKK",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-12T00:00:03.1Z",
    "posted": false,
    "lesson": "Turtles",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "Z96GsF5ch3PusT6mT",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-06T17:32:37.095Z",
    "posted": true,
    "lesson": "Random",
    "description": "Inspired by Mark Rothko - along with the reference image",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(windowHeight, windowHeight);\n  \n  noLoop();\n  \n  background(255, 201, 173);\n  \n  let c1 = color(237, 108, 43);\n  let c2 = color(107, 47, 16);\n  \n  for (let i = 0; i <= height; i++) {\n      a = random(0, 255);\n      let inter = map(i, 0, height, 0, 1);\n      let c = lerpColor(c1, c2, inter);\n      stroke(c, a);\n      line(0, i, width, i);\n    }\n}\n\nfunction draw() {\n  \n    for (row = height-350; row < height-50; row++) {\n    for (col = 50; col < width-50; col++) {\n     \n      a = random(-5,20);\n      b = random(-20, 20);\n      \n      if(row<height-300 || col <100 || col > width - 100 || row > height - 80){\n        opacity2 = min(random(0, 15), random(0, 15), random(0, 15), random(0, 15), random(0, 15));\n      }\n      else if(row<height-150 || col <250 || col > width - 250){\n        opacity2 = min(random(0, 40),random(0, 40),random(0, 40),random(0, 40), random(0, 40));\n      }\n      else{\n        opacity2 = min(random(0, 30), random(0, 30), random(0, 30), random(0, 30), random(0, 100))\n      }\n      \n      let shape2 = color(191, random(20, 40), random(60, 70), opacity2);\n      fill(shape2);\n      noStroke();\n      ellipse(col + b, row + b, 5 +a, 5+a);\n    }\n  }\n  \n  for (row = 50; row < height-300; row++) {\n    for (col = 50; col < width-50; col++) {\n      \n      if(row<100 || col <100 || col > width - 100){\n        opacity1 = min(random(0, 20), random(0, 20), random(0, 20), random(0, 20), random(0, 20));\n      }\n      \n      else if(row>height-350){\n        opacity1 = min(random(0, 10), random(0, 10), random(0, 10), random(0, 10), random(0, 10));\n      }\n      else{\n        opacity1 = min(random(0, 30),random(0, 30),random(0, 40),random(0, 40), random(0, 100));\n      }\n      \n      a = random(-5,20);\n      b = random(-20, 20);\n      \n      let shape1 = color(255, random(160, 200), random(0, 20), opacity1);\n      fill(shape1);\n      noStroke();\n      \n      ellipse(col + b, row + b, 5 +a, 5+a);\n     \n    }\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ghgwwdrxil4h1uugwvnt",
        "width": 1610,
        "height": 1618,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/guaemektfeahrs64ypx8",
        "width": 550,
        "height": 644,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T19:03:03.856Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:08:28.001Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-07T00:15:13.194Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-07T02:40:10.438Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZGjG64fpceSBqCToy",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-05-12T08:13:41.486Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Animal challenge. Was thinking about horses the other day. Used turtles to make the horse's mane.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yt4g1qnsupfhwdk22kl4",
        "width": 1153,
        "height": 1152,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T10:21:39.495Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:16:51.621Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZGvTWa9sdm6MYhWnb",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-05-01T22:43:47.61Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Wasn't sure what to make so I decided to recreate the Breuer chair in OpenSCAD! It was pretty finicky to get all the rotations and translations but I liked how it came out!",
    "code": "$fn = 100;\ncylHeight = 70;\ncylRadius = 3;\n\n\nmodule tubeJoint () {\n    rotate_extrude(angle=90, convexity = 10, $fn = 100)\n     translate([10, 0, 0])\n     circle(r = cylRadius, $fn = 100);\n}\n\nmodule mainConnector () {\n    rotate ([0,90,0]) {\n        cylinder( h = cylHeight, r =  cylRadius, center = false);\n    }\n\n\n    translate([cylHeight,0,10]) {\n        rotate([90,90,0]) {\n        \n        tubeJoint();\n        }\n    }\n}\n\nmodule bottomCushion () {\n    cylinder( h = cylHeight, r =  cylRadius, center = false);\n    \n    translate([-10,0,0]) {\n    rotate([90,90,0]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([-10,0,70]) {\n    rotate([90,0,0]) {\n        tubeJoint();\n        }\n    }\n    translate([-70,0,0]) {\n        cylinder( h = cylHeight, r =  cylRadius, center = false);\n            translate([10,0,0]) {\n    rotate([90,90,180]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([10,0,70]) {\n    rotate([90,0,180]) {\n        tubeJoint();\n        }\n    }\n    }\n    \n    translate([-60,0,80]) {\n    rotate([0,90,0]) {\n        cylinder( h = 50, r =  cylRadius, center = false);\n        }\n    }\n    \n    translate([-60,0,-10]) {\n    rotate([0,90,0]) {\n        cylinder( h = 50, r =  cylRadius, center = false);\n        }\n    }\n    \n}\n   \n\nmodule backCushion () {\n    cylinder( h = cylHeight, r =  cylRadius, center = false);\n    \n    translate([-10,0,0]) {\n    rotate([90,90,0]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([-10,0,70]) {\n    rotate([90,0,0]) {\n        tubeJoint();\n        }\n    }\n    translate([-45,0,0]) {\n        cylinder( h = cylHeight, r =  cylRadius, center = false);\n            translate([10,0,0]) {\n    rotate([90,90,180]) {\n        tubeJoint();\n        }\n    }\n    \n    translate([10,0,70]) {\n    rotate([90,0,180]) {\n        tubeJoint();\n        }\n    }\n    }\n    \n    translate([-35,0,80]) {\n    rotate([0,90,0]) {\n        cylinder( h = 25, r =  cylRadius, center = false);\n        }\n    }\n    \n    translate([-35,0,-10]) {\n    rotate([0,90,0]) {\n        cylinder( h = 25, r =  cylRadius, center = false);\n        }\n    }\n    \n}\n   \n\n\n\n\ncolor (\"grey\") {\nmainConnector();\ntranslate([-10,0,100]) {\n    cylinder( h = cylHeight, r =  cylRadius, center = false);\n}\n\ntranslate([80,0,10]) {\n    rotate([0,-90,0]) {\n        mainConnector();\n    }\n}\n\ntranslate([70,0,90]) {\n    rotate([0,0,180]) {\n        mainConnector();\n   }\n}\n\ntranslate([-10,80,0]) {\n    rotate([-90,0,-90]) {\n        mainConnector();\n    }\n}\n\ntranslate([70,90,0]) {\n    rotate([-90,0,180]) {\n        mainConnector();\n    }\n}\n\ntranslate([80,90,80]) {\n    rotate([0,90,180]) {\n        mainConnector();\n    }\n}\n\ntranslate([0,90,90]) {\n    rotate([180,0,0]) {\n        mainConnector();\n    }\n}\n\ntranslate([-10,90,170]) {\n    rotate([0,90,0]) {\n        mainConnector();\n    }\n}\n\n\ntranslate([70,10,95.5]) {\n    rotate([-90,0,0]) {\n        bottomCushion();\n    }\n}\n\ntranslate([-5,10,135]) {\n    \n    rotate([0,90,90]) {\n        backCushion(); \n    }\n}\n}\n\ntranslate([2.5,0,95.5]) {\n    rotate([-90,0,0]) {\n        cube([65,1,88], center = false);\n    }\n}\n\ntranslate([-5,02.5,180]) {\n    \n    rotate([0,90,90]) {\n        cube([45,1,86], center = false); \n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/iojnbxuwmofrctg7mzf0",
        "width": 573,
        "height": 808,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-02T00:02:58.926Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-02T04:18:24.99Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:50.715Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZJ3eBRgkpGWugQdEA",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-02T19:13:35.877Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Playing around with HSL and transparency",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nlet points = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  noLoop()\n  \n  ellipseMode(CENTER);\n  \n  rectMode(CENTER)\n}\n\nfunction draw() {\n  background(50);\n\n  noStroke();\n  \n\n  let noiseFrequency = 1;\n  \n  placePointsCullRange(50, width, height, 20, 100)\n  \n  for (let i = 0; i < points.length; i++) {\n    // pull the coordianates from the current point in array\n    let x = points[i].x;\n    let y = points[i].y;\n    \n    let n=noise(i*0.1) *60 - 30;\n\n       let colorPick = noise(i) \n       colorPick = map(colorPick, 0, 1, 90, 200)\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    colorMode(HSL, 360, 100, 100, 1)\n    // noFill()\n    stroke(colorPick, 100, 50);\n    \n    fill(colorPick, 100, 50, noise(i)-0.5)\n\n    rect(x, y, 50 - n, 50 + n);\n  }\n\n  // noLoop();\n}\n\nfunction placePointsCullRange(count, w, h, min_distance, max_distance) {\n\n  let current_try = 0;\n  let max_tries = count * 10;\n\n  // init with one point in center\n  points.push({\n    x: w * 0.5,\n    y: h * 0.5,\n  });\n\n  while (points.length < count && current_try < max_tries) {\n    current_try++;\n\n    let x = random() * w;\n    let y = random() * h;\n\n    let isTooClose = checkClose(x, y, points, min_distance);\n    let isCloseEnough = checkClose(x, y, points, max_distance);\n\n    if (!isTooClose && isCloseEnough) {\n      points.push({\n        x: x,\n        y: y,\n      });\n    }\n  }\n\n  return points;\n}\n\nfunction checkClose(x, y, points, min_distance) {\n  for (let i = 0; i < points.length; i++) {\n    if (dist(points[i].x, points[i].y, x, y) < min_distance) {\n      return true;\n    }\n  }\n  return false;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/r1k4mri7lrtnazz5z4tf",
        "width": 800,
        "height": 798,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/yanbpbqcclueusx0rzaz",
        "width": 800,
        "height": 798,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kb0onk153djsxqsbsroz",
        "width": 800,
        "height": 798,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T00:56:17.81Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-03T04:17:25.25Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZNJoovMQqLXoB4Gmx",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-06T19:59:49.989Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Couch Game Pair Challenge: Isha and I worked on Brocc-Attack—a two-player game about helping our main character reach the ice-cream truck as an annoyingly nosy broccoli tries to block him. And there’s fire too. We did hit a snag with the displace function overriding the immovable states of the walls (captured in the second, short clip). Play testing was fun though!!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/swpkixwgu9voocfxcoep",
        "width": 720,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/sgbqistthge01sfcagmz",
        "width": 1650,
        "height": 1027,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bg17nnnvm0zycpu9qi5g",
        "width": 720,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:46:14.642Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-07T14:10:14.079Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:55.979Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZPY87fiWBZEXcHbCh",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-02T03:16:51.245Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Sketch made using Sahiti's Instructions.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ufpym6h10blsjkt9bmqa",
        "width": 1814,
        "height": 2268,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T17:55:26.298Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZcaCYDoTmgHxsbB9v",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-06T03:31:30.247Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Took a shot at one of the prompts for this week's sketches. Experimented with making an image purely from pixels and I tried my hand at making a beach landscape from my experimentation.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  //background(220);\n  \n  img = createImg(1000, 1000);\n  loadPixels();\n  \n  // Beach color\n  \n  for(y = 0; y < height; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(230, 255)), floor(random(227, 255)), floor(random(120, 200)));\n      set(x, y, c);\n    }\n  }\n  \n  // Water Foam color\n  \n  for(y = 0; y < 250; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(220, 230)), floor(random(240, 255)), floor(random(230, 255)));\n      set(x, y, c);\n    }\n  }\n  \n  //Water color\n  \n  for(y = 0; y < 200; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(110, 120)),floor(random(210, 230)), floor(random(220, 230)));\n      set(x, y, c);\n    }\n  }\n  \n  // Sky color\n  \n  for(y = 0; y < 150; y++) {\n    for(x = 0; x < width; x++) {\n      let c = color(floor(random(150, 160)), floor(random(220, 230)), 255);\n      set(x, y, c);\n    }\n  }\n  \n  /* for(y = 0; y < 150; y++) {\n    for(x = 0; x < width; x++) {\n      //let c = color(255);\n      //set(x, y, c);\n    }\n  } */\n  \n  for(i = 0; i < 2500; i++) {\n    let c = color(255);\n    //let w = random(width) + random(width) + random(width) /3;\n    let w = noise(i * width, 0) * 200 + 200;\n    set(w, random(75, 150), c);\n  }\n  \n  // Cloud set\n  \n  for(i = 0; i < 2500; i++) {\n    let c = color(255);\n    //let w = random(width) + random(width) + random(width) /3;\n    let w = noise(i * width, 0) * 200 + 100;\n    set(w, random(50, 125), c);\n  }\n  \n  for(i = 0; i < 2500; i++) {\n    let c = color(255);\n    //let w = random(width) + random(width) + random(width) /3;\n    let w = noise(i * width, 0) * 200 + 250;\n    set(w, random(25, 100), c);\n  }\n  \n  updatePixels();\n  \n  noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dtgwjwv3qgwtd5yt32hc",
        "width": 596,
        "height": 596,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-08T04:44:10.158Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:45:52.203Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZdoZEWnkhG7aKDC5N",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-19T20:35:43.189Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Chat GPT made a circuit diagram for me. I gave it a very very random prompt and sensors that does not exist but it could create a diagram.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uudkrczerd23y9bq5o5b",
        "width": 432,
        "height": 725,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-20T17:58:52.355Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-20T19:40:19.183Z"
      },
      {
        "category": "nerdy",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-21T03:59:55.219Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-21T16:29:43.122Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZfbCw8xfZQuGLY47Y",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-01-28T20:40:26.084Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Instructions for my group, let me know if something doesn't make sense!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uvsn74ogknquangrpp3d",
        "width": 1144,
        "height": 1246,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T23:04:11.907Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZtPmjomioJQmLCdcM",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-05T04:07:47.682Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Cube-based Fractal shape",
    "code": "// Define the parameters of the fractal shape\nDEPTH = 4;\nTHETA = 60;\nSCALE = 0.7;\n\n// Define the recursive function to create the fractal shape\nmodule fractal(depth, size, color1, color2, color3) {\n  if (depth > 0) {\n    color(color1) cube(size = size, center = true);\n    translate([0, 0, size/2]) {\n      rotate([0, 0, THETA]) {\n        color(color2) fractal(depth - 1, size * SCALE, color1, color2, color3);\n      }\n    }\n    translate([0, 0, -size/2]) {\n      rotate([0, 0, -THETA]) {\n        color(color3) fractal(depth - 1, size * SCALE, color1, color2, color3);\n      }\n    }\n  }\n}\n\n// Draw the fractal shape\nfractal(DEPTH, 40, \"Red\", \"Green\", \"Blue\");",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/g2qdnb7bwhuyclpy57zz",
        "width": 958,
        "height": 888,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:26.202Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZwjqbGRkKFNLTCotv",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-24T03:23:59.348Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "I was playing around with trying to make an image filter...\n\nit looks kind of creepy 😶",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pik2pqolpkqg1es0q1w9",
        "width": 2142,
        "height": 1770,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "ZxvjNuZnncJnXMagJ",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "created_at": "2023-02-02T04:26:04.494Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Last Sketch for this week!! In this p5 sketch I used Perlin noise to move points generated using the textToPoints() function!",
    "code": "// horrible code - symbolisyng system falling apart\n\nlet font_one;\nlet fontSize = 100;\nlet point_amount = 0.3;\n\nlet e_letter;\nlet d_letter;\nlet u_letter;\nlet c_letter;\nlet a_letter;\nlet t_letter;\nlet i_letter;\nlet o_letter;\nlet n_letter;\nlet number = 1;\n\nlet t = 1;\nlet r = -1;\n\nlet x_location;\nlet y_location;\n\nlet perlin_1 = 1;\nlet perlin_2 = 2;\nlet perlin_3 = 3;\nlet perlin_4 =4;\nlet perlin_5 =5;\nlet perlin_6 = 6;\nlet perlin_7 = 7;\nlet perlin_8 = 8;\nlet perlin_9 = 9;\nlet perlin_10 = 10;\nlet perlin_11 = 11;\nlet perlin_12 = 12;\nlet perlin_13 = 13;\nlet perlin_14 = 14;\nlet perlin_15 = 15;\nlet perlin_16 = 16;\nlet perlin_17 = 17;\nlet perlin_18 = 18;\n\nfunction preload(){\n  font_one = loadFont(\"Fonts/CaslonOS-Regular.otf\")\n}\n\nfunction setup() {\n  \n  createCanvas(800, 300);\n  textFont(font_one)\n  textSize(fontSize)\n  \n  x = width/2-80;\n  y = height/2 +65;\n  \n  // the amount of points have to be exactly the same for both letters, therefore we need to make the SampleFactor different for both letters (match it perfectly)\n  \n  e_letter = font_one.textToPoints(\"E\", 61, 187, fontSize, {sampleFactor :0.35})\n  d_letter = font_one.textToPoints(\"D\", 128, 187, fontSize, {sampleFactor : 0.365})\n  u_letter = font_one.textToPoints(\"U\", 195, 187, fontSize, {sampleFactor : 0.383})\n  c_letter = font_one.textToPoints(\"C\", 262, 187, fontSize, {sampleFactor : 0.405})\n  a_letter = font_one.textToPoints(\"A\", 329, 187, fontSize, {sampleFactor : 0.395})\n  t_letter = font_one.textToPoints(\"T\", 396, 187, fontSize, {sampleFactor : 0.438})\n  i_letter = font_one.textToPoints(\"I\", 463, 187, fontSize, {sampleFactor : 0.76})\n  o_letter = font_one.textToPoints(\"O\", 530, 187, fontSize, {sampleFactor : 0.3745})\n  n_letter = font_one.textToPoints(\"N\", 597, 187, fontSize, {sampleFactor : 0.322})\n}\n\n\nfunction draw() {\n  background(220);\n  textAlign(CENTER)\n  // text(\"EDUCATION\", width/2, 187)\n  strokeWeight(0.1)\n  push()\n  noFill();\n  \n  // change location with perlin noise\n  for (i = 0; i < e_letter.length; i++){\n    e_letter[i].x = e_letter[i].x + map(noise(perlin_1), 0, 1, -0.5, 0.5);\n    e_letter[i].y = e_letter[i].y + map(noise(perlin_2), 0, 1, -0.5, 0.5);\n    d_letter[i].x = d_letter[i].x + map(noise(perlin_3), 0, 1, -0.5, 0.5);\n    d_letter[i].y = d_letter[i].y + map(noise(perlin_4), 0, 1, -0.5, 0.5);\n    u_letter[i].x = u_letter[i].x + map(noise(perlin_5), 0, 1, -0.5, 0.5);\n    u_letter[i].y = u_letter[i].y + map(noise(perlin_6), 0, 1, -0.5, 0.5);\n    c_letter[i].x = c_letter[i].x + map(noise(perlin_7), 0, 1, -0.5, 0.5);\n    c_letter[i].y = c_letter[i].y + map(noise(perlin_8), 0, 1, -0.5, 0.5);\n    a_letter[i].x = a_letter[i].x + map(noise(perlin_9), 0, 1, -0.5, 0.5);\n    a_letter[i].y = a_letter[i].y + map(noise(perlin_10), 0, 1, -0.5, 0.5);\n    t_letter[i].x = t_letter[i].x + map(noise(perlin_11), 0, 1, -0.5, 0.5);\n    t_letter[i].y = t_letter[i].y + map(noise(perlin_12), 0, 1, -0.5, 0.5);\n    i_letter[i].x = i_letter[i].x + map(noise(perlin_13), 0, 1, -0.5, 0.5);\n    i_letter[i].y = i_letter[i].y + map(noise(perlin_14), 0, 1, -0.5, 0.5);\n    o_letter[i].x = o_letter[i].x + map(noise(perlin_15), 0, 1, -0.5, 0.5);\n    o_letter[i].y = o_letter[i].y + map(noise(perlin_16), 0, 1, -0.5, 0.5);\n    n_letter[i].x = n_letter[i].x + map(noise(perlin_17), 0, 1, -0.5, 0.5);\n    n_letter[i].y = n_letter[i].y + map(noise(perlin_18), 0, 1, -0.5, 0.5);\n    \n  }\n  \n  // E-D\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(e_letter[i].x, e_letter[i].y)\n    vertex(d_letter[i].x, d_letter[i].y)\n  }\n  endShape();\n  \n  // D-U\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(d_letter[i].x, d_letter[i].y)\n    vertex(u_letter[i].x, u_letter[i].y)\n  }\n  endShape();\n  \n  // U-C\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(u_letter[i].x, u_letter[i].y)\n    vertex(c_letter[i].x, c_letter[i].y)\n  }\n  endShape();\n  \n  // C-A\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(c_letter[i].x, c_letter[i].y)\n    vertex(a_letter[i].x, a_letter[i].y)\n  }\n  endShape();\n  \n    // A-T\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(a_letter[i].x, a_letter[i].y)\n    vertex(t_letter[i].x, t_letter[i].y)\n  }\n  endShape();\n  \n    // T-I\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(t_letter[i].x, t_letter[i].y)\n    vertex(i_letter[i].x, i_letter[i].y)\n  }\n  endShape();\n  \n    // I-O\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(i_letter[i].x, i_letter[i].y)\n    vertex(o_letter[i].x, o_letter[i].y)\n  }\n  endShape();\n  \n    // O-N\n  beginShape();\n  for (i = 0; i < e_letter.length; i+= number){\n    vertex(o_letter[i].x, o_letter[i].y)\n    vertex(n_letter[i].x, n_letter[i].y)\n  }\n  endShape();\n  \n  perlin_1 += 0.0001;\n  perlin_2 += 0.0001;\n  perlin_3 += 0.0001;\n  perlin_4 += 0.0001;\n  perlin_5 += 0.0001; \n  perlin_6 += 0.0001;\n  perlin_7 += 0.0001;\n  perlin_8 += 0.0001;\n  perlin_9 += 0.0001;\n  perlin_10 += 0.0001;\n  perlin_11 += 0.0001;\n  perlin_12 += 0.0001;\n  perlin_13 += 0.0001;\n  perlin_14 += 0.0001;\n  perlin_15 += 0.0001;\n  perlin_16 += 0.0001;\n  perlin_17 += 0.0001;\n  perlin_18 += 0.0001;\n  \n  pop()\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dfowjvrotggprlqy3zle",
        "width": 1594,
        "height": 602,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T18:08:44.538Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ZySo9FJt28c8fg5rN",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-16T03:03:59.489Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Alex sent me this cool multi-dimensional, colorful structure (second image). For my response, I tried reinterpreting it from a different perspective. The final composited image resembles a crystal-like structure!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zkg0qokyh6qc374zyguk",
        "width": 912,
        "height": 912,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/luujuyd9jnldnuqepapt",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T03:35:34.816Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "a44r3nKeHFfNhYY6e",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-13T19:18:15.683Z",
    "posted": true,
    "lesson": "Text",
    "description": "**Using Templates to Explore Design Processes as a Branding Exercise.** P.S. I wish I'd modified the line-height of the title. I also wanted to add a diagram within which the four verbs lie.",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\ndocument.getElementById(\"verb1\").textContent = generateVerb(1);\ndocument.getElementById(\"verb2\").textContent = generateVerb(2);\ndocument.getElementById(\"verb3\").textContent = generateVerb(3);\ndocument.getElementById(\"verb4\").textContent = generateVerb(5);\n\nfunction generateTitle() {\n  var design_nouns = [\n    \"Thinking\",\n    \"Process\",\n    \"Methodology\",\n    \"Design\",\n    \"Design Process\",\n    \"Framework\",\n    \"System\",\n    \"Loop\",\n    \"Mindset\",\n    \"Frame\",\n    \"Technique\",\n    //\"Approach\",\n    \"Practice\",\n  ];\n  var adjectives = [\n    \"Diamond\",\n    \"Circular\",\n    \"Two-pronged\",\n    \"Trifactored\",\n    \"Spiral\",\n    \"Participatory\",\n    \"Community-centric\",\n    \"Critical\",\n    \"Imaginative\",\n    \"Fictionary\",\n    \"Value-centric\",\n    \"Planetary\",\n    \"Growth-centric\",\n    \"Research-driven\",\n    \"Decelerated\",\n    \"Accelerated\",\n    \"Deliberate\",\n    \"Humanist\",\n    \"Iterative\",\n    \"Accessible\",\n    \"Empathic\",\n    \"Hyperlocal\",\n    \"Localized\",\n    \"Globalized\",\n    \"Transparent\",\n    \"Social\",\n    \"Narrative\",\n    \"Dynamic\",\n    \"Interconnected\",\n    \"Transdisciplinary\",\n    \"Creative\",\n    \"Divergent\",\n    \"Emergent\",\n    \"Reflective\",\n    \"Effective\",\n    \"Looped\",\n    \"Continuative\",\n    \"Innovative\",\n    \"Progressive\",\n    \"Experimental\",\n    \"Facilitative\",\n  ];\n  \n\n  var adjective1 = sample(adjectives);\n  var adjective2 = sample(adjectives);\n  while (adjective1 === adjective2) {\n    adjective2 = sample(adjectives);\n  }\n\n  var noun1 = sample(design_nouns);\n  var noun2 = sample(design_nouns);\n  while (noun1 === noun2) {\n    noun2 = sample(design_nouns);\n  }\n  var title = \"\";\n  let rN = Math.random();\n  if (rN < 0.33) {\n    title = `The ${adjective1} ${adjective2} ${noun1}`;\n  } else if (rN < 0.66) {\n    title = `The ${noun1} of ${adjective1} ${noun2}`;\n  } else {\n    title = `The ${adjective1} ${noun1}`;\n  }\n\n  return title;\n}\n\nfunction generateSubtitle() {\n    var adjectives = [\n        \"A circular\",\n        \"A two-pronged\",\n        \"A trifactored\",\n        \"A participatory\",\n        \"A community-centric\",\n        \"A critical\",\n        \"An imaginative\",\n        \"A fictionary\",\n        \"A value-centric\",\n        \"A planetary\",\n        \"A growth-centric\",\n        \"A research-driven\",\n        \"A decelerated\",\n        \"An accelerated\",\n        \"A deliberate\",\n        \"A humanist\",\n        \"An iterative\",\n        \"An accessible\",\n        \"An empathic\",\n        \"A hyperlocal\",\n        \"A localized\",\n        \"A globalized\",\n        \"A transparent\",\n        \"A social\",\n        \"A narrative\",\n        \"A dynamic\",\n        \"An interconnected\",\n        \"A transdisciplinary\",\n        \"A creative\",\n        \"A divergent\",\n        \"An emergent\",\n        \"A reflective\",\n        \"An effective\",\n        \"A looped\",\n        \"A continuative\",\n        \"An innovative\",\n        \"A progressive\",\n        \"An experimental\",\n        \"A facilitative\",\n    ];\n\n  var powers = [\n    \"Stankord pSchool\",\n    \"uDEO\",\n    \"Boogle\",\n    \"Kritisch Council\",\n    \"Dom Normal\",\n    \"Macrosort\",\n    \"AirDnD\",\n    \"Fasepook\",\n    \"Barsons School of Design\",\n  ];\n\n  var adjective = sample(adjectives);\n  var power = sample(powers);\n  var subtitle = `${adjective} design approach by ${power}`;\n\n  return subtitle;\n}\n\nfunction generateVerb(a) {\n    var verb = \"\";\n        \n    var researchVerbs = [\n        \"Explore\",\n        \"Observe\",\n        \"Playtest\",\n        \"Collect\",\n        \"Learn\",\n        \"Research\",\n        \"Empathise\",\n        \"Measure\",\n        \"Enquire\",\n    ];\n\n    var analysisVerbs = [\n        \"Question\",\n        \"Re-map\",\n        \"Comverge\",\n        \"Reframe\",\n        \"Define\",\n        \"Synthesize\",\n        \"Empathise\",\n        \"Analyze\",\n        \"Strategize\",\n        \"Evaluate\",\n        \"Reflect\",\n    ];\n\n    var doVerbs = [\n        \"Create\",\n        \"Execute\",\n        \"Facilitate\",\n        \"Co-create\",\n        \"Develop\",\n        \"Build\",\n        \"Prototype\",\n        \"Visualize\",\n    ];\n\n    var dreamVerbs = [\n        \"Dream\",\n        \"Ideate\",\n        \"Conceptualize\",\n        \"Imagine\",\n        \"Speculate\",\n    ];\n\n    var launchVerbs = [\n        \"Present\",\n        \"Catalyze\",\n        \"Justify\",\n        \"Deliver\",\n        \"Release\",\n        \"Launch\",\n        \"Document\",\n        \"Share\",\n    ];\n\n    switch(a) {\n        case 1:\n            verb = sample(researchVerbs);\n            break;\n        case 2:\n            verb = sample(analysisVerbs);\n            break;\n        case 3:\n            verb = sample(doVerbs);\n            break;\n        case 4:\n            verb = sample(dreamVerbs);\n            break;\n        case 5:\n            verb = sample(launchVerbs);\n            break;\n        default:\n            verb = sample(analysisVerbs);\n            break;\n    }\n\n    return verb;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n    <style type=\"text/css\">\n        @import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n        @import url('https://fonts.googleapis.com/css2?family=Ubuntu&display=swap');\n        html {\n            \n        }\n        \n        body {\n\t\t\ttext-align: center;\n            font-family: 'Montserrat', sans-serif;\n            height = 100vh;\n            background: rgb(7,0,129);\nbackground: linear-gradient(0deg, rgba(7,0,129,1) 0%, rgba(0,0,0,1) 100%);\n            color: white;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n        .verb {\n            padding: 15px;\n\t\t\t\n        }\n        #methodology {\n            display: flex;\n            justify-content: space-between;\n            width: 80vw;\n            margin: 50px auto;\n            font-size: 28px;\n            padding-top: 80px;\n        }\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n        <div id=\"methodology\">\n            <div class=\"verb\" id=\"verb1\"> Verb1 </div>\n            <div class=\"verb\"> 👉 </div>\n            <div class=\"verb\" id=\"verb2\"> Verb2 </div>\n            <div class=\"verb\"> 👉 </div>\n            <div class=\"verb\" id=\"verb3\"> Verb3 </div>\n            <div class=\"verb\"> 👉 </div>\n            <div class=\"verb\" id=\"verb4\"> Verb4 </div>\n        </div>\n\t</div>\n`\n  );\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ejmnvjc0m5eau7vlfzw4",
        "width": 2054,
        "height": 1174,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/tldttkrl38pmojsru6ea",
        "width": 1760,
        "height": 1174,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jcoj9wxgldlvjhticdec",
        "width": 1760,
        "height": 1174,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T02:43:02.607Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T03:09:26.015Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:31:38.752Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "aBJTMtGPLkDgqL2tN",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-05T17:46:48.849Z",
    "posted": true,
    "lesson": "Random",
    "description": "Trial 2 of replicating the same print. I figured out the pattern better this time round, so it looks truer to the original. I have ideas to make it more accurate, but they're more about refining the geometry than exploring random values.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet num = 30;\nlet border = 20;\nlet dim = 480 / 450;\n\nfunction setup() {\n  createCanvas(450, 450 * dim);\n  noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(245, 246, 251);\n\n  let triLength = (width - 2 * border) / num;\n\n  for (let i = 0; i < num; i++) {\n    for (let j = 0; j < num * dim; j++) {\n      push();\n\n      translate(border, border);\n      translate((i * num) / 2.22, (j * num) / 2.22);\n      translate(triLength / 2, triLength / 2);\n\n      rotate((floor(random(0, 4)) * PI) / 2);\n\n      fill(94, 172, 211);\n      triangle(\n        -triLength / 2,\n        -triLength / 2,\n        triLength / 2,\n        -triLength / 2,\n        -triLength / 2,\n        triLength / 2\n      );\n      fill(253, 85, 14);\n      triangle(\n        triLength / 2,\n        triLength / 2,\n        triLength / 2,\n        -triLength / 2,\n        -triLength / 2,\n        triLength / 2\n      );\n\n      pop();\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/svotllzllsvs1rsnpbyu",
        "width": 928,
        "height": 990,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-05T18:06:17.936Z"
      },
      {
        "category": "nerdy",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-05T18:07:42.33Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-05T19:55:33.91Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-06T17:43:48.812Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "aGD2jeaTRj72zqABT",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-08T02:29:07.449Z",
    "posted": true,
    "lesson": "Random",
    "description": "I decided to reverse engineer my own Piet Mondrian inspired sketch to its base function and see what I could do with it. I didn't have a clear direction with this sketch so I messed around with plugging in the random() function into various parts of the sketch and got this randomized transparent layering out of it.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet shapes;\nlet num = 50;\nlet r;\nlet g;\nlet b;\n\nfunction setup() {\n  createCanvas(600, 600);\n  frameRate(10);\n}\n\nfunction draw() {\n  \n  background(r, g, b);\n  \n  //Generate rectangles that loop \n  \n  for(i = 0; i < num; i++) {\n    fill(random(0, 255), random(0, 255), random(0, 255));\n    stroke(1);\n    strokeWeight(2);\n    translate(random(0, 255));\n    rect(floor(random(-10, 150)) * 5, floor(random(-10, 150)) * 5, 50, 100); \n  }\n  \n  //Generate squares that stay on canvas  \n  \n  for(i = 0; i < num; i++) {\n    fill(random(0, 255), random(0, 255), random(0, 255), 50);\n    stroke(1);\n    strokeWeight(2);\n    translate(random(0, 255));\n    rect(floor(random(-10, 150)) * 5, floor(random(-10, 150)) * 5, 50, 50); \n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t2q7upc9faddtcd4npx8",
        "width": 900,
        "height": 897,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-08T04:58:25.197Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-08T20:10:44.817Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "aJrBMT7qP84csaLZj",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-17T20:15:32.962Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "One other silly output from ChatGPT when I asked it to create an artwork in the style of Dali. In the comments of ChatGPT's code it references a clock face, mountains, and sun - common elements in Dali's work, but not quite his style",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/s9xofazzs8kxf2khaubs",
        "width": 794,
        "height": 790,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/atyf8kftxhzdhizccuof",
        "width": 1200,
        "height": 800,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sjbmazwoekuncngicdjj",
        "width": 500,
        "height": 383,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-17T22:48:42.167Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-18T01:20:57.628Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-18T03:49:30.866Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T15:00:15.764Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "aN8jgWYBAFYfaKgn6",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-24T02:02:44.411Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "I generated different kinds of eyes using size.random and point.random!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ddzblyhgoy22oa6z2gr3",
        "width": 5506,
        "height": 7528,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-24T02:05:43.932Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-24T05:28:10.624Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "aRKRkgEeYhZu3X746",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-30T16:27:14.97Z",
    "posted": true,
    "lesson": "Music",
    "description": "Tried Polysynth.",
    "code": "//tone synth new instance\nconst synth = new Tone.PolySynth().toMaster();\n\nconst chord1 = {\n  notes: [\"B4\", \"G4\", \"E4\", \"C4\"],\n  length: 2,\n};\n\nconst chord2 = {\n  notes: [\"C5\", \"A4\", \"F4\", \"D4\"],\n  length: 2,\n};\n\nconst chord3 = {\n  notes: [\"A4\", \"G4\", \"C4\", \"D#4\"],\n  length: 1,\n};\n\nconst chord4 = {\n  notes: [\"G4\", \"C4\", \"D#4\", \"G#3\"],\n  length: 1,\n};\n\nconst melody = [\n  chord1,\n  chord2,\n  chord1,\n  chord3,\n  chord4,\n  chord1,\n  chord2,\n  chord1,\n  chord3,\n  chord4,\n];\n\n//trigger a note from synth\n//a note and the duration of note\n\n// function draw() {\n//  // start the audio context\n//   for (let i = 0; i < chordProg; i = i + 1) {\n//     if (mouseIsPressed) {\n//     }\n//  }\n// }\nfunction setup() {\n  createCanvas(800, 800);\n  background(0, 0, 0);\n\n}\n\nwindow.onmousedown = (e) => {\n  // Play the melody!\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    console.log(note);\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note.notes, Tone.Time(note[1]) - 0.1, t);\n      \n      background(0, 255, 0); //just some indication of what is happening\n    }\n    t += Tone.Time(note[1]);\n  }\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hagljb79vlwnp77vnjns",
        "width": 748,
        "height": 750,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-30T17:24:54.491Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:36:41.909Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "aSb5amXWS7sjqbbWD",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-28T05:05:27.45Z",
    "posted": true,
    "lesson": "API",
    "description": "A really random attempt at some McDonald's imagery using Midjourney",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jbtxdxc7mrvcmxv1k8ya",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/slqolbqh3dqclhjim9k8",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/rllucvwfucwfefhjh9ye",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "aShLjk5cTQxqXWbzo",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-23T20:24:52.147Z",
    "posted": true,
    "lesson": "Params",
    "description": "I really liked Chris' original code (second image) - I tried tweaking the noise and blend modes to build on the fabric-like feel I got out of the original sketch",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gdstqrfuswmj58quejav",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/t8mknqcebvkrknhk0tx5",
        "width": 1592,
        "height": 1410,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "aSoBuyQhscysfDMJG",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-12T17:12:31.677Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "MY FUNkY PIG",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ava3ra1yja9km0sgmxkc",
        "width": 896,
        "height": 872,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "aazFWJBiGpZYXp7QS",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-15T16:19:34.044Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I love experimenting with graphic aesthetic and art hence I tried  a sketch with pixel aesthetics.",
    "code": "function setup() {\n  createCanvas(600, 600);\n  background(0, 0, 0);\n  noStroke();\n}\n\nfunction draw() {\n  // background(220);\n  var n = noise(millis() / 1000);\n  y = map(n, 0, 1, -100, 100);\n\n  for (let i = 0; i < 8; i = i + 0.15) {\n    for (let j = 0; j < 250; j = j + 15) {\n      fill(random(0, 255), random(0, 255), random(0, 255));\n      rect((0+ y) * i, height/2+ j, 10, 10);\n      rect(width/2 + j, (0 + y) * i, 10, 10);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/idlwfe39jgd5qp9z0yvy",
        "width": 556,
        "height": 560,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-15T17:51:17.969Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-15T19:37:27.746Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T00:13:59.847Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "am6XHKKNwKQYjkxDp",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-07T05:39:34.295Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "**Match 3 Tile Puzzle**: Each game randomly positions colored tiles, match three of the same color to make them disappear, clear the board to win. For this game's challenge to be apparent, it is necessary to be able to layer many more tiles, however I'm still having trouble with selecting the tile that is on the top of a pile when tiles overlap. Also wanted to make custom tiles but ran out of time. Watch me win in the 3rd video!",
    "code": "let tiles = [];\nlet tileNum = 27;\nlet xPos = [50, 75, 100, 125, 150, 175, 200, 225, 250, 275, 300, 325, 350, 375, 400, 425, 450];\nlet yPos = [75, 100, 125, 150, 175, 200, 225, 250, 275, 300, 325, 350, 375, 400, 425, 450];\n\nlet tilePictures = [];\nlet selection1=999, selection2=998, selection3=997;\nlet numSelected = 0;\n\nlet cardWidth = 45;\nlet cardHeight = 70;\n\nlet score = 0;\n\nfunction setup() {\n    createCanvas(500, 500);\n    colorMode(HSL, 100);\n\n    \n\n    for (let i = 0; i < tileNum; i++) {\n        tiles[i] = { \n            \"sprite\":createSprite(random(xPos), random(yPos), cardWidth, cardHeight),\n            \"tileType\":i%9,\n            \"selected\": false,\n            \"index\": i,\n        };\n        tiles[i].sprite.shapeColor = color((i%9)*11, 50, 50);\n        tiles[i].sprite.setCollider('rectangle', 0, 0, cardWidth, cardHeight);\n        tiles[i].sprite.mouseActive;\n    }\n\n}\n\nfunction draw() {\n    background(\"black\");\n\n    \n\n    drawSprites();\n\n    push();\n    fill(\"white\");\n    textSize(20);\n    textAlign(CENTER, CENTER);\n    text (\"Score: \", 250, 20);\n    text (score, 290, 20);\n    text (\" / 9\", 310, 20);\n    pop();\n\n    if (score == 9) {\n        push();\n        fill(\"white\");\n        textSize(100);\n        textAlign(CENTER, CENTER);\n        text (\"YOU WON\", 250, 250);\n        pop();\n    }\n\n}\n\nfunction mouseClicked() {\n    for (let i = 0; i < tileNum; i++) {\n        tiles[i].sprite.onMousePressed = function() {\n            if (numSelected < 3) {\n            tiles[i].sprite.shapeColor = color(255, 255, 255);\n            tiles[i].selected = true;\n            numSelected ++;\n            if (numSelected == 1) {\n                selection1 = tiles[i];\n            } else if (numSelected == 2) {\n                selection2 = tiles[i];\n            } else if (numSelected == 3) {\n                selection3 = tiles[i];\n            }\n            console.log (i);\n            }\n        }\n    }\n\n    if (numSelected == 3) {\n        if (selection1.tileType === selection2.tileType) {\n            if (selection2.tileType === selection3.tileType) {\n                tiles[selection1.index].sprite.remove();\n                tiles[selection2.index].sprite.remove();\n                tiles[selection3.index].sprite.remove();\n                score++;\n            }\n\n            else {\n                tiles[selection1.index].sprite.shapeColor = color((selection1.index%9)*11, 50, 50);\n                tiles[selection2.index].sprite.shapeColor = color((selection2.index%9)*11, 50, 50);\n                tiles[selection3.index].sprite.shapeColor = color((selection3.index%9)*11, 50, 50);\n            }\n        }\n\n        else {\n            tiles[selection1.index].sprite.shapeColor = color((selection1.index%9)*11, 50, 50);\n            tiles[selection2.index].sprite.shapeColor = color((selection2.index%9)*11, 50, 50);\n            tiles[selection3.index].sprite.shapeColor = color((selection3.index%9)*11, 50, 50);\n        }\n\n        selection1=999; selection2=998; selection3=997;\n        numSelected=0;\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/islcy998e41zcqko2gkn",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/dbcfiefz7ydxm88iv6ar",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xhfvuhdy3q4j7fd4ozng",
        "width": 1000,
        "height": 998,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T15:35:28.466Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:31:28.051Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ar2hfMWMQJZvMxuec",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-09T19:34:00.428Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "**Three Effects on Changing just 1 Operator** in the expression setting the color of each pixel: c = color(noise(x * y) * sin(x * y), 0.7, 1); [Color Mode HSL]",
    "code": "function setup() {\n  createCanvas(600, 600);\n  colorMode(HSB, 1);\n}\n\nfunction draw() {\n  background(0);\n\n  img = createImage(100, 100);\n  img.loadPixels();\n  let c;\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      \n        c = color(noise(x*y)*sin(x*y), 0.7, 1);\n      \n      img.set(x, y, c);\n    }\n  }\n\n  img.updatePixels();\n\n  noSmooth();\n  image(img, 0, 0, width, height);\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wqbvg8g2iozrjerersw9",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/r4lhklxuymrqpycktcpb",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ayuty1ytq1tt3u5ujzbv",
        "width": 1198,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-10T04:13:19.778Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T06:12:24.174Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:07.297Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "b24thte5g4xAWXPgu",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-03T15:45:20.794Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My sketch based on Aabha's instructions! My version of Tweety is definitely off brand :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/x0qmb2ltxs6x8kadydyn",
        "width": 1240,
        "height": 966,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jpefbpcia0mgfm9qk5db",
        "width": 778,
        "height": 1332,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-03T16:25:11.438Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-03T17:22:32.085Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T18:02:01.115Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "b7Dn4JJtkDDmkMCWB",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-11T03:18:07.207Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "I started with the code for the Spirograph and adapted and added different instructions for the turtle to create this spinning visual. The stills show what it looks like when a single frame is captured",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zsbo5gadysy9zhgfdnzf",
        "width": 640,
        "height": 640,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/r4klwwlv1fsum7fgxtkt",
        "width": 976,
        "height": 978,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zyxvz8rydd1nqz0vnpj9",
        "width": 976,
        "height": 978,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "bA6uFuPwdLN7qsxMt",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-09T17:03:30.365Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "I drew an apple pixel by pixel",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kmatq11wi5sb82yu51dd",
        "width": 625,
        "height": 622,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T19:50:22.915Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:38.372Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "bAXSMFs5jj3RYW5qj",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-07T14:43:24.366Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "WEEK 9 (4/4): This is not necessarily a game or multiplayer but I just couldnt get anywhere with the p5play so YOU CNA HAVE THIS. I ALSO MADE THIS ON UNITY",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cjqtzqgumzqczecspkai",
        "width": 1888,
        "height": 1164,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lkl9uetcbktnnct80sru",
        "width": 1908,
        "height": 1180,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "bFx7zEznh5zYghwF3",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-22T02:01:10.506Z",
    "posted": true,
    "lesson": "Params",
    "description": "Channeling my inner panda thinking about bamboos 🎋🐼",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(800, 800);\n  // frameRate(40)\n\n  rectMode(CENTER);\n  \n}\n\nfunction draw() {\n  background(201, 230, 149);\n\n  // if (dist(mouseX, mouseY, px, py) > 30) {\n    push();\n    translate(width/2, height/2);\n    if (mouseX < width/2) {\n      rotate(PI + atan((mouseY - height/2) / (mouseX - width/2)));\n    } else {\n      rotate(atan((mouseY - height/2) / (mouseX - width/2)));\n    }\n\n    // push();\n    // rotate(PI / 2);\n    drawGrid();\n    // pop();\n\n    pop();\n}\n\nfunction drawGrid(){\n  \n  for(let i=-width; i<width; i+=50){\n    for(let j=-height; j<height; j+=50){\n      \n      stroke(112, 102, 74);\n      \n      let n;\n      \n      n = noise(i*0.01, j*0.01)*200-100\n      \n      let p;\n      p=noise(i, j)*6-3\n      \n      strokeWeight(2)\n      \n      fill(247+n, 232+n, 193+n)\n rect(j, i+j, 50, 20)\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/n8izmmr7xxmp8wgadkgk",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-22T04:46:08.106Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-22T10:26:35.556Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "bKHqinQ2xW3ey8jA8",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "created_at": "2023-03-07T16:57:48.195Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "I was playing a Chained Echos last night. I liked the pixel art for a city in the game so I took a screen grab thinking I might try to recreate the city with code. This morning, I ended up working on the mountain instead. I didn't really think about a broad strategy up front. I started with drawing a ridge line, and then started shading the left and right side. Then added some noise to the colors, then added some noise to make the sides less flat. Lots of trial and error, backing up, trying different things. I worked for about an hour and for 55 minutes i didn't much like how it looked. It turned a corner right at the end. I like where it is now, but now I want to make it better.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\n\nlet mainImage;\n\nlet bluePalette;\n\nconst W = 320;\nconst H = 240;\nfunction setup() {\n  const c = createCanvas(W, H).canvas;\n  c.style.width = `${W * 4}px`;\n  c.style.height = `${H * 4}px`;\n  c.style.imageRendering = \"pixelated\";\n  mainImage = createImage(320, 240);\n  noiseDetail(4, 0.5);\n  noLoop();\n\n  bluePalette = [\n    buildPalette([55, 55, 75, 255], [200, 220, 255, 255], 4),\n    buildPalette([200, 220, 255, 255], [245, 250, 255, 255], 3),\n  ].flat();\n}\n\nfunction draw() {\n  background(\"black\");\n\n  mainImage.loadPixels();\n\n  let x = 180; // randomInt(W * 0.25, W * 0.75);\n  let y = 10; // randomInt(H * -0.25, H * 0.25);\n\n  for (let i = 0; i < 200; i++) {\n    y += noiseInt(i * 0.3, 0, 0, 1, 2);\n    x += noiseInt(i * 0.3, 0, 1, -1, 2);\n\n    // ridge\n    setPixel(mainImage, x, y, bluePalette[3]);\n\n    let bump = 0;\n    for (let ii = 0; ii < 200; ii++) {\n      bump += noiseInt(ii * 0.3, 0, 2, -1, 2);\n      // left\n      const bright = noiseInt(\n        //\n        i * 0.2,\n        ii * 0.1,\n        0,\n        4,\n        7\n      );\n\n      setPixel(mainImage, x - ii, y + ii + bump, bluePalette[bright]);\n      setPixel(mainImage, x - ii, y + ii + 1 + bump, bluePalette[bright]);\n      setPixel(mainImage, x - ii, y + ii + 2 + bump, bluePalette[bright]);\n    }\n\n    bump = 0;\n    for (let ii = 0; ii < 200; ii++) {\n      bump += noiseInt(ii * 0.3, 0, 2, -1, 2);\n      // right\n      const dark = noiseInt(\n        //\n        i * 0.2,\n        ii * 0.1,\n        0,\n        0,\n        3\n      );\n      setPixel(mainImage, x + ii, y + ii + bump, bluePalette[dark]);\n      setPixel(mainImage, x + ii, y + ii + 1 + bump, bluePalette[dark]);\n      setPixel(mainImage, x + ii, y + ii + 2 + bump, bluePalette[dark]);\n    }\n  }\n\n  mainImage.updatePixels();\n\n  noSmooth();\n  image(mainImage, 0, 0, width, height);\n}\n\n// math utils\n\nfunction buildPalette(a, b, steps) {\n  const palette = [];\n  for (let i = 0; i < steps; i++) {\n    palette.push(blendColor(a, b, i / (steps - 1)));\n  }\n  return palette;\n}\n\nfunction clamp(value, minimum, maximum) {\n  if (value < minimum) return minimum;\n  if (value > maximum) return maximum;\n  return value;\n}\n\nfunction randomInt(a, b) {\n  return floor(random(a, b));\n}\n\nfunction noiseInt(x, y, z, a, b) {\n  noiseDetail(1);\n  return floor(map(noise(x, y, z), 0, 0.5, a, b));\n}\n\n// color utils\n\nfunction blendColor(a, b, mix) {\n  return [\n    lerp(a[0], b[0], mix),\n    lerp(a[1], b[1], mix),\n    lerp(a[2], b[2], mix),\n    lerp(a[3], b[3], mix),\n  ];\n}\n\nfunction lightestColor(a, b) {\n  return [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2]), max(a[3], b[3])];\n}\n\nfunction setPixel(img, x, y, color) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return;\n  }\n\n  const i = (clampY * img.width + clampX) * 4;\n  img.pixels[i] = color[0];\n  img.pixels[i + 1] = color[1];\n  img.pixels[i + 2] = color[2];\n  img.pixels[i + 3] = color[3];\n}\n\nfunction getPixel(img, x, y) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return [0, 0, 0, 0];\n  }\n  const i = (clampY * img.width + clampX) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction keyPressed() {\n  if (key === \"S\") {\n    save(\"canvas.jpg\");\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/icgecwogftd8kaz5qbwq",
        "width": 640,
        "height": 480,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vxnmwue2piccxupnsaw0",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-03-07T20:53:48.287Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-07T23:14:29.672Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:08.611Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-03-10T17:32:23.68Z"
      }
    ],
    "comments": [
      {
        "comment": "just looked at the code but it is still so wild to me that this wasn't built off of a reference input image. ",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-09T21:23:29.835Z"
      }
    ]
  },
  {
    "_id": "bLLyYvTecCtqP48JT",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-17T05:00:47.102Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I was trying to make something based off of Tyler Hobb's work. It didn't turn out quite how I wanted, but maybe I'll come back to this again another week",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ugrghtrggspp4kwicr8o",
        "width": 3200,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-17T16:41:59.892Z"
      }
    ],
    "comments": [
      {
        "comment": "i really like the thumbnail here, scaling it down a bit was enough to lose the \"circles\" ",
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-17T16:42:36.333Z"
      }
    ]
  },
  {
    "_id": "bW2zJcTNk7Q4g6m4p",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-07T16:08:15.422Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Was playing around with ball movement and directions! I was trying to have the ball slide/drag down each sprite, but ran out of time. So for now, it's a bouncy ball",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xscz1vzc7uadnc8nmnqk",
        "width": 1016,
        "height": 984,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T20:36:02.472Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "bctJdtTEP9F7AgQvy",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-20T04:12:58.062Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I asked chatGPT to complete the face generator challenge from the parameters week. I asked it to recreate what I had made, which used type and punctuation as the facial features. It completed the task very quickly, but what it really had issues with was changing the face shape from a square to a circle. After some troubleshooting, it got it right! \n\nI then asked chatGPT to think of other creative, more unconventional ways to make a face generator. It suggested making a face generator out of particles, like fireworks. I asked it to write that code for me. It did something cool (second video), but when I made modifications, it would leave out certain parts of the code, or completely change it and make something different (video 3). Towards the end, chatGPT would write out code but stop midway. It did that repeatedly , and then I ran out of time. Not sure if this is a temporary bug! Either way very cool to experiment with.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cwco8cctf0blyfj7x4v8",
        "width": 724,
        "height": 1170,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/wg4zecpikjwhvhti0ygw",
        "width": 706,
        "height": 698,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/oxmszm2uueiqw0zrpznz",
        "width": 706,
        "height": 764,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-20T06:44:08.31Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:36:03.392Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "bhuXEAxH4reZNfd29",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-13T00:30:56.021Z",
    "posted": true,
    "lesson": "Text",
    "description": "DT Bio Generator: Tired of always having to write 10 different bios to apply for 10 different opportunities? Look no further! This SUPER-sophisticated text generator will always offer you the perfect mish-mash of all the important industry buzzwords to impress your next interviewer!",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n        top: [\"#div#\"],\n    div: [\n        '<div style=\"color: rgb(150,150,150); text-align: left;  font-family: helvetica ; font-size: 5vw;  100px; margin: 50px; padding: 10px\">#story#</div>',\n    ],\n    story: [\"I am #phrase1# working at the intersection of #phrase2#. My practice involves the use of #phrase3#.\"],\n    phrase1: [\"#discipline# #adstyle# #nounstyle#\", \"#adstyle.a# #nounstyle#\"],\n    phrase2:[\"#mediumstyle# and #medium2style#\"],\n    phrase3:[\"#theme# and #theme#\", \"#theme#, #theme#, and #theme#\"],\n    discipline: ['<span style=\"color: teal; font-family: helvetica \">#disciplineword.a#</span>'],\n    disciplineword: [\n        \"multidisciplinary\",\n        \"interdisciplinary\",\n        \"new media\"\n    ],\n    \n    adstyle: ['<span style=\"color: teal; font-family: helvetica \">#adjective#</span>'],\n    adjective: [ \"poetic\",\n    \"computational\",\n    \"technical\",\n    \"visual\",\n    \"creative\",\n    \"experience\",\n    \"interaction\",\n    \"communication\",\n    \"UI/UX\",\n    \"product\"],\n    nounstyle: ['<span style=\"color: teal; font-family: helvetica \">#noun#</span>'],\n    noun: [\n        \"storyteller\",\n        \"designer\",\n        \"programmer\",\n        \"technologist\",\n        \"researcher\",\n        \"prototyper\",\n        \"artist\",\n        \"developer\",\n        \"problem-solver\"\n      ],\n\nmediumstyle: ['<span style=\"color: teal; font-family: helvetica\">#medium1#</span>'],\n    medium1: [ \"3D modeling\",\n    \"generative art\",\n    \"hybrid structures\",\n    \"branding identities\",\n\"branding\",\n    \"game design\"\n   ],\n    medium2style: ['<span style=\"color: teal; font-family: helvetica\">#medium2#</span>'],\n    medium2: [\n        \"education\",\n\"algorithmic identities\",\n\"immersive storytelling\", \n\"playful experiences\",\n\"browser-based experiences\"\n   \n  ],\n\n    theme: [ \"motion graphics\",\n    \"mixed media\",\n    \"alternate frameworks\",\n    \"analog creations\",\n    \"AI\",\n    \"digital interfaces\",\n    \"emerging technologies\",\n    \"interactive installations\",\n\n    ]\n};\n  \nfunction main() {\n    let grammar = tracery.createGrammar(storyGrammar);\n    let story = grammar.flatten(\"#top#\");\n\n    const storyDiv = document.createElement(\"div\");\n    storyDiv.innerHTML = story;\n    \n\n    document.body.insertAdjacentElement(\"beforeend\", storyDiv);\n    }\n  \n  // tracery doesn't load immediately, not sure why, so kludge it\n  setTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/w1pza1mt5ssnmkcd4opu",
        "width": 1194,
        "height": 968,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qzwckajmjaxlq4spfa9b",
        "width": 1282,
        "height": 1014,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/f6sloao22nvjzg5bt1tr",
        "width": 1288,
        "height": 746,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-13T01:35:25.848Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-13T16:16:48.859Z"
      }
    ],
    "comments": [
      {
        "comment": "need",
        "commenter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-13T01:35:30.626Z"
      }
    ]
  },
  {
    "_id": "bk2hWfsDmH49oBtxT",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-05T08:34:58.173Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "WEEK 13 (3/4): VIVIENNE WESTWOOD ORB THING",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mppsonzbkykmckwe9ebg",
        "width": 872,
        "height": 704,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-05-05T16:25:12.077Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:19.029Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "bq53PCuZAbkFixvaF",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-28T05:14:32.796Z",
    "posted": true,
    "lesson": "API",
    "description": "I used paper.js to make this sketch. The logo for my capstone project is a set of googly eyes, and i wanted to make the logo generative. Here is my first attempt at the logo generator - nothing is styled properly but I just wanted to get the basic functionality going. Ideally, I would like the pupils to stay within the bounds of the outer circle. I also want to add a randomize function, but this is where I got within the time limit!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uk76ndfusmnmhw6kxiq8",
        "width": 684,
        "height": 376,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lh0cdum4blufs2pvrnfx",
        "width": 728,
        "height": 387,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zvu17tdwslp7veysxiue",
        "width": 1410,
        "height": 726,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-28T06:10:00.639Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "buQovitgJ6p3rDXYy",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-01T14:54:30.198Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "WEEK 13(1/4): wanted to use difference and union again so I made a chess piece.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bf6iga1zzmcskrdeyocw",
        "width": 600,
        "height": 728,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pe5a1wpyuihjlksm9wqw",
        "width": 650,
        "height": 700,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gwl0sihqzdrvd6cfnmf6",
        "width": 500,
        "height": 480,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-01T17:50:06.471Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-02T00:02:28.72Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:58.78Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T01:39:34.493Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "bunCLfCDAsDKBgYtt",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-16T01:05:33.583Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Pair Challenge: Sketch prompt for Rama. Studying organic forms with noise.",
    "code": "float t = 0;\nfloat l = 1;\nvoid setup(){\n  size(600,600);\n  background(0);\n    //noStroke();\n}\n\nvoid draw(){\n  float x = noise(t);\n  float y = noise(l);\n  t = t+0.05;\n  l = l+0.05;\n  x = map(x,0,1,0, width);\n  y = map(y,0,1,0,height);\n  strokeWeight(1);\nstroke(255, 80);\n//noStroke();\nfloat r = map(x,0,1,0,255);\n  fill(130,y,x,80);\n  //ellipse(x,y/2,50,50);\n  bezier(x, y, 100, 100, 400, 400, x, y); //for petals\n    //bezier(x, y, 100, y, x, 600, y, x);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ug0vdlh4manmzbxrzmtb",
        "width": 1194,
        "height": 1190,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pi2zljkokl6v6uwwtggd",
        "width": 1186,
        "height": 1188,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:46.483Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "byjAsYMSSvoheEBfh",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-21T23:45:28.45Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Did the second part of the Individual Assignment! I cut my design on some vinyl and it turned out pretty cool! It's actually heat transfer vinyl so I can take the design and iron it onto a shirt which I plan on doing later 🤩🤩🤩",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zehtxwjfcru2l0vh8va9",
        "width": 1760,
        "height": 1616,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gqopare6j1kmfy3rxigo",
        "width": 1602,
        "height": 1461,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-22T00:00:51.467Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:23.978Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:57:35.357Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cCSA5TXJuGPyW7HEP",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "created_at": "2023-02-14T22:46:39.185Z",
    "posted": true,
    "lesson": "Noise",
    "description": "A quick heart. Don't feel like its \"there\" but i'm out of time! I kind of see  potential to take it in a  \"death metal\" direction. Or maybe just try something else.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nconsole.log(\"Hi\");\n\nfunction setup() {\n  createCanvas(800, 800);\n  colorMode(HSB, 1);\n}\n\nfunction draw() {\n  background(\"red\");\n\n  drawHeart();\n  pop();\n  mirror();\n}\n\nfunction drawHeart() {\n  push();\n  noStroke();\n  translate(width * 0.5, height * 0.3);\n  rotate(PI);\n  scale(-1, 1);\n\n  for (let i = 0; i < 200; i += 25) {\n    fill(\"black\");\n    drawPass(20, i, i);\n  }\n  for (let i = 0; i < 200; i += 25) {\n    fill(\"white\");\n    drawPass(10, i, i);\n  }\n}\n\nfunction drawPass(thickness = 20, noiseAmount = 50, noiseZ = 0) {\n  for (let a = 0.5 * PI; a < 1.5 * PI; a += 0.002) {\n    const x =\n      cos(a) * 125 * heart(a) + (noise(a * 10, 0, noiseZ) - 0.5) * noiseAmount;\n    const y =\n      sin(a) * 125 * heart(a) + (noise(a * 10, 1, noiseZ) - 0.5) * noiseAmount;\n    ellipse(x, y, thickness, thickness);\n  }\n}\n\nfunction heart(a) {\n  // heart function from Pavel Panchekha\n  // https://pavpanchekha.com/blog/heart-polar-coordinates.html\n  return (sin(a) * sqrt(abs(cos(a)))) / (sin(a) + 7 / 5) - 2 * sin(a) + 2;\n}\n\nfunction mirror() {\n  scale(-1, 1);\n  copy(0, 0, width * 0.5, height, -800, 0, width * 0.5, height);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dka9xavsqbo2hpkapm8h",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-15T00:46:11.377Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-15T04:10:04.008Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-15T05:07:16.466Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-15T08:33:01.52Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cKpx2qWi2sPxY528a",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-08T00:50:13.976Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "This is the image I created for Brian for the pair challenge!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/appl44pyqkotopqgzhkb",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-08T06:59:46.065Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:22.962Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cLeonxQXkkndNtsBG",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-19T02:32:27.265Z",
    "posted": true,
    "lesson": "Params",
    "description": "Took some inspiration from last week and sought to add parameters into the mix. Wanted to see where I could add parameters in working with WebGL and created a pulsing grid of 3D cubes.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet x;\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  \n  createP(\"Move x-axis\");\n  xSlider = createSlider(200, 500, 200);\n  \n  createP(\"Move y-axis\");\n  ySlider = createSlider(-500, 500, 0);\n  \n  createP(\"Move z-axis\");\n  zSlider = createSlider(0, 500, 0);\n  \n  createP(\"Shift Blocks\");\n  blockSlider = createSlider(-500, 500, 0);\n  \n  createP(\"Camera Shift\");\n  cameraSlider = createSlider(-200, 800, 0);\n  \n  //debugMode();\n}\n\nfunction draw() {\n  background(255, 202, 133);\n  //orbitControl();\n  camera(-400, 900, 600, 600 + cameraSlider.value(), 200, -100);\n  \n  normalMaterial();\n  \n  //creating rows of boxes, the translate methods are supposed to stack\n  push();\n\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/100), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/90), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/80), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/70), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/60), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/50), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/40), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/30), 0);\n  boxGrid();\n  \n  translate(blockSlider.value(), 200 * noise(frameCount/20), 0);\n  boxGrid();\n  \n  pop();\n}\n\nfunction boxGrid() {\n  \n  box(100);\n  \n  // x-axis\n  push();\n  for(x = 0; x < width; x = x + 10) {\n    translate(xSlider.value(), ySlider.value(), zSlider.value());\n    box(100);\n  }\n  pop();\n  \n/*  // y-axis (unused)\n  push();\n  for(y = 0; y < height; y = y + 10) {\n    translate(ySlider.value(), y + 200, 0);\n    box(100);\n  }\n  pop(); */\n  \n/*  //z-axis (unused)\n  push();\n  for(z = 0; z < width; z = z + 10) {\n    translate(0, 0, z + 200);\n    box(100);\n  }\n  pop(); */\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/i2ldi6badqnq7mpy4jcg",
        "width": 897,
        "height": 895,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-19T16:53:21.312Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-19T17:03:51.469Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-20T22:16:45.732Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cMW4yDMzHKHjgL6jw",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-04T06:48:08.585Z",
    "posted": true,
    "lesson": "Music",
    "description": "Worked on the melody generator with Reshma! We made a polysynth that plays notes from a scale that sound harmonious together.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.49/Tone.js\n/* global Tone */\n\nconst synth = new Tone.PolySynth(Tone.Synth)\nsynth.set({\n    \"oscillator\": {\n    \"type\": \"sine\",\n  },\n\t\"envelope\" : {\n\t\t\"attack\": 0.1,\n    \"decay\": 0.1,\n    \"sustain\": 0.5,\n    \"release\": 1,\n\t}\n});\nsynth.toDestination();\n\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n  const melody = generate();\n  play(melody);\n};\n\nconst cmajor = [\"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\"];\n// const cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst notesnew = [\n  \"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\", \n  \"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\"\n];\nconst notes = notesnew;\n\nlet degree = 0;\n\nfunction generate() {\n  degree = randomInt(0, 7);\n\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  b[b.length - 1][0] = notes[4];\n  c[c.length - 1][0] = notes[0];\n\n  return [].concat(a, b, a, c);\n}\n\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n\n    let change = sample([-1, -1, -1, 1, 1, -2, 2, 2, 2, -3]); \n    degree = constrain(degree + change, 0, notes.length - 1);\n    const note = notes[degree];\n\n    let length = Tone.Time(\"4n\");\n    // let r = Math.random();\n    if (Math.random() < 0.5) {\n        length = Tone.Time(\"2n\");\n    }\n    // if (r > 0.3333 && r < 0.6666) {\n    //   length = Tone.Time(\"2n\");\n    // } else if (r > 0.6666) {\n    //   length = Tone.Time(\"8n\");\n    // }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n    timeLeft = Tone.Time(timeLeft - length);\n  \n    m.push([note, length, degree]);\n    \n  }\n\n  return m;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n      if (note[2] < notes.length - 3 && Math.random() < 0.5) {\n          synth.triggerAttackRelease(notes[note[2] + 2], Tone.Time(note[1]) - 0.1, t);\n      }\n      if (note[2] < notes.length - 5 && Math.random() < 0.3) {\n          synth.triggerAttackRelease(notes[note[2] + 4], Tone.Time(note[1]) - 0.1, t);\n      }\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uiazxjjqcohlyafukd8g",
        "width": 650,
        "height": 300,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-04T16:10:48.332Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cMdpmva8SB8yLGiK2",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-23T16:14:50.957Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "WEEK 7 (1/4): My response to John's code. We did this one async but there was a part of the code that looked like it was asking to be completed and I tried to follow the direction in which it was going.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bwn7cwdohyjh6g8yauz2",
        "width": 1088,
        "height": 672,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:32.159Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cQZpLr9antrWkKEsQ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-28T05:08:03.338Z",
    "posted": true,
    "lesson": "API",
    "description": "I was trying to create an alphabet with Midjourney but it was very bad at drawing letters. The first one is supposed to be the letter B but it kept making forms more similar to an R. The second one is supposed to be a Z. The A I got to be more or less resembling an A. I tried seeing if I could specify typefaces but it didn't seem to make a difference.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wuftowg1yj1jj7y8p1ow",
        "width": 1298,
        "height": 1294,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/h3audaih8slqdjrmfy7n",
        "width": 1288,
        "height": 1298,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/q5swawyy829wjdjc4f7b",
        "width": 1286,
        "height": 1346,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-28T05:46:03.595Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cfEaMaGJ9WQfiz49P",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-03T04:52:15.259Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Here's my attempt at the second challenge - this involved a lot of trial and error.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zuw2osjbmqcppnzaxwol",
        "width": 1026,
        "height": 1074,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/g12ndfao7etv0ixoqwxc",
        "width": 1020,
        "height": 1060,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "cjyWgnn3XyPHfz4eG",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "created_at": "2023-02-02T04:11:05.002Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "A little typography exploration in p5!! Creating some Bots that eat letters.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\n\n/* Credits go to Xin Xin's \"Bot tutorial\" */\n\nlet font;\nlet res_Array = [];\nlet our_Array = [];\nlet ces_Array = [];\n\nlet res = [];\nlet our = [];\nlet ces = [];\n\nlet word_parts = [res, our, ces];\n\nlet students = [];\nlet amount_of_students = 10;\nlet rectangle_size = 30;\n\nfunction preload() {\n  font = loadFont(\"Typographica-Blp5.otf\");\n}\n\nfunction setup() {\n  rectMode(CENTER);\n  textFont(font);\n  createCanvas(440, 590);\n\n  // Code for creating points for the outlines of the word-parts\n  res_Array = font.textToPoints(\"RES\", 10, 210, 280, { sampleFactor: 0.15 });\n  our_Array = font.textToPoints(\"OUR\", 8, 370, 220, { sampleFactor: 0.15 });\n  ces_Array = font.textToPoints(\"CES\", 5, 570, 275, { sampleFactor: 0.15 });\n\n  // Passing each point of each word part throught the Point Class\n  for (let i = 0; i < res_Array.length; i++) {\n    res[i] = new Point(res_Array[i].x, res_Array[i].y, rectangle_size);\n  }\n  for (let i = 0; i < our_Array.length; i++) {\n    our[i] = new Point(our_Array[i].x, our_Array[i].y, rectangle_size);\n  }\n  for (let i = 0; i < ces_Array.length; i++) {\n    ces[i] = new Point(ces_Array[i].x, ces_Array[i].y, rectangle_size);\n  }\n\n  // Creating Students with the Student class (Inspired by Xin Xin)\n  for (let i = 0; i < amount_of_students; i++) {\n    students[i] = new Student();\n  }\n}\n\nfunction draw() {\n  background(220);\n  print(res.length);\n\n  // whenever the amount of resources decreases 100, student speed increased by 2\n\n  // SEE QUESTION below\n  // print(all_word_parts.length)\n  // print(typeof(all_word_parts[0].length))\n\n  // applying the \"show\" method to all objects in each array.\n  for (let i = 0; i < res.length; i++) {\n    res[i].show();\n  }\n  for (let i = 0; i < our.length; i++) {\n    our[i].show();\n  }\n  for (let i = 0; i < ces.length; i++) {\n    ces[i].show();\n  }\n\n  // applying several methods from the Student class to all objects in student array.\n  for (let i = 0; i < amount_of_students; i++) {\n    students[i].show();\n    students[i].move();\n    students[i].collision_detection();\n  }\n}\n\nclass Point {\n  constructor(x, y, rectangle_size) {\n    this.x = x;\n    this.y = y;\n    this.rectangle_size = rectangle_size;\n  }\n  show() {\n    rect(this.x, this.y, this.rectangle_size, this.rectangle_size);\n  }\n}\n\nclass Student {\n  constructor() {\n    this.x = random(0, width);\n    this.y = random(0, height);\n    // Each Student will have a random positive or negative direction assigned.\n    this.direction_1 = random(-2, 2);\n    this.direction_2 = random(-2, 2);\n    this.d;\n  }\n\n  show() {\n    push();\n    fill(\"red\");\n    ellipse(this.x, this.y, 10, 10);\n    pop();\n  }\n\n  move() {\n    if (res.length % 50 == 0) {\n      if (this.direction_1 > 0) {\n        this.direction_1 += 1;\n      }\n      if (this.direction_1 < 0) {\n        this.direction_1 -= 1;\n      }\n\n      if (this.direction_2 > 0) {\n        this.direction_2 += 1;\n      }\n      if (this.direction_2 < 0) {\n        this.direction_2 -= 1;\n      }\n    }\n\n    this.x = this.x + this.direction_1;\n    this.y = this.y + this.direction_2;\n\n    if (this.x > width || this.x < 0) {\n      this.direction_1 = -this.direction_1;\n    }\n    if (this.y > height || this.y < 0) {\n      this.direction_2 = -this.direction_2;\n    }\n  }\n\n  collision_detection() {\n    for (let i = 0; i < res.length; i++) {\n      this.d = dist(res[i].x, res[i].y, this.x, this.y);\n      if (this.d < 5) {\n        this.direction_1 = -this.direction_1 + 1;\n        this.direction_2 = -this.direction_2 + 1;\n        res[i].rectangle_size = res[i].rectangle_size + 2;\n      }\n    }\n\n    // detecting collision with \"OUR\"\n    for (let i = 0; i < our.length; i++) {\n      this.d = dist(our[i].x, our[i].y, this.x, this.y);\n      if (this.d < 5) {\n        this.direction_1 = -this.direction_1 + 1;\n        this.direction_2 = -this.direction_2 + 1;\n        our[i].rectangle_size = our[i].rectangle_size + 2;\n      }\n    }\n\n    // detecting collision with \"CES\"\n    for (let i = 0; i < ces.length; i++) {\n      this.d = dist(ces[i].x, ces[i].y, this.x, this.y);\n      if (this.d < 5) {\n        this.direction_1 = -this.direction_1 + 1;\n        this.direction_2 = -this.direction_2 + 1;\n        ces[i].rectangle_size = ces[i].rectangle_size + 2;\n      }\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fdxxa4qjdgy4wfniqoni",
        "width": 882,
        "height": 1184,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T16:11:38.559Z"
      }
    ],
    "comments": [
      {
        "comment": "Does this use text-to-point too?",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T21:32:32.136Z"
      },
      {
        "comment": "Yes totally! I used textToPoint() and passed all point objects through a class in which I created rectangles at (x,y). (code is linked)!",
        "commenter_id": "Bx8aBoWhfqwYX7sG4",
        "created_at": "2023-02-02T23:52:21.011Z"
      }
    ]
  },
  {
    "_id": "coq6zK68Svk73cMxj",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-24T16:22:03.8Z",
    "posted": true,
    "lesson": "Params",
    "description": "**Progress on the Perlin Noise Spirals** by Adrian",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Width: 480,\n  AngleFactor: 0.2, //Amt angle should increase in each interation\n  StrokeWidth: 2,\n  NoiseAmp: 20,\n  RadiusFactor: 0.01,\n  Smoothing: 0.001,\n};\n\npane.addInput(params, \"Width\", { min: 50, max: 480 });\npane.addInput(params, \"StrokeWidth\", { min: 1, max: 4 });\npane.addInput(params, \"AngleFactor\", { min: 0.05, max: 0.4 });\npane.addInput(params, \"RadiusFactor\", { min: 0.01, max: 0.2 });\npane.addInput(params, \"NoiseAmp\", { min: 0.1, max: 50 });\npane.addInput(params, \"Smoothing\", { min: 0.0001, max: 0.01 });\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  //strokeWeight(2);\n}\n\nfunction draw() {\n  background(\"rgb(0,0,0)\");\n\n  noStroke();\n\n  fill(\"rgb(218,38,38)\");\n  drawSpiral(width / 2, height / 2);\n\n  // fill(\"rgb(38,43,218)\");\n  // drawSpiral(width / 6, height / 8);\n\n  // fill(\"rgb(24,176,28)\");\n  // drawSpiral(width / 1.2, height / 1.4);\n}\n\nfunction drawSpiral(x, y) {\n  push();\n\n  for (\n    let angle = 0, radius = 0;\n    radius < params.Width;\n    angle += params.AngleFactor\n  ) {\n    \n    let xPos = x + sin(angle) * radius;\n    let yPos = y + cos(angle) * radius;\n\n    circle(\n      xPos + noise(xPos*params.Smoothing) * params.NoiseAmp,\n      yPos + noise(yPos*params.Smoothing) * params.NoiseAmp,\n      params.StrokeWidth\n    );\n\n    radius += params.RadiusFactor;\n\n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ts0t69cp8yhiq15un0w4",
        "width": 1198,
        "height": 1196,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T17:01:05.529Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:04.89Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "crEWDnbt3Xm3qZGBF",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-21T14:13:11.965Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "WEEK 11 (2/4): Since it knew how to come up wth code I asked it for help on pulsing effects for randomly placed circles and it ACTUALLY WORKED. I am SO SCARED AAHAH. I GUESS THIS WOULD FALL UNDER THE RANDOM WEEK.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ucyqqyiesogqmtzyovxj",
        "width": 908,
        "height": 128,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jhefjkbrnwmehgfo0fzm",
        "width": 1256,
        "height": 1166,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "ctSZndWJpK8iZwzRi",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-10T07:07:25.996Z",
    "posted": true,
    "lesson": "Random",
    "description": "WEEK 2 SKETCH (3/4): PLAYING WITH RANDOM STICKS AND CIRCLES BUT THE STICKS WERE SUPPOSED TO BE TRIANGLES",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/x6sqjqt3nf4lza6omts4",
        "width": 778,
        "height": 774,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-10T13:05:47.436Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T14:19:16.502Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ctfh4DQcjYq2KbqSe",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-17T07:30:00.228Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Building upon the previous sketch",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xihqjahhr1m2zppdctpn",
        "width": 828,
        "height": 1268,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-17T23:22:34.164Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cvghdyAb6jt8rDnkK",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "created_at": "2023-01-09T17:34:14.303Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tzmrecabp6mbuicw2wxu",
        "width": 1998,
        "height": 1392,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T23:04:20.298Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "cwbWgHgjop4fPAX89",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-21T04:16:51.329Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "More playing around with Midjourney... I asked it to make a glass face with flowers growing on it... after some tweaking ended up with these",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wrhrlutag2hkjnsz8fcj",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tb64b48qk8nitqspaejm",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jxrzjd9jejc1mdmpk74i",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:42:32.08Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:06:15.407Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:06:51.24Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "d4W4eMDWJeRAjsgaz",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-02T21:05:21.556Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "WEEK 1 SKETCH (4/4) : NOIRE BALANCE \nI wanted to imitate sort of sound waves but then the ocean came to mind and I ended u with this.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fmlngxm9c71xn3ekww8t",
        "width": 1187,
        "height": 1188,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "Bx8aBoWhfqwYX7sG4",
        "created_at": "2023-02-02T23:53:25.795Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T01:37:33.577Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-03T16:25:28.216Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-10T18:41:47.274Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "dC2LKie4x32R9HK5X",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-09T19:02:27.214Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Some more random geometry",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\n// Define a function to draw a circle\nfunction drawCircle(x, y, r) {\n  myTurtle.penUp();\n  myTurtle.moveTo(x + r, y);\n  myTurtle.penDown();\n\n  for (let i = 0; i < 120; i++) {\n    myTurtle.moveForward(2 * Math.PI * r / 120);\n    myTurtle.turnRight(3);\n  }\n}\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  background(50);\n\n  noFill();\n  stroke(255);\n  strokeWeight(3);\n\n  // draw the rectangle\n  myTurtle.penUp();\n  myTurtle.moveTo(100, 100);\n  myTurtle.penDown();\n  myTurtle.moveForward(300);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(200);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(300);\n  myTurtle.turnRight(90);\n  myTurtle.moveForward(200);\n\n  // draw the triangle\n  myTurtle.penUp();\n  myTurtle.moveTo(100, 100);\n  myTurtle.penDown();\n  for (let i = 0; i < 3; i++) {\n    myTurtle.moveForward(300);\n    myTurtle.turnRight(120);\n  }\n\n  // draw the circle inside the triangle\n  drawCircle(250, 200, 100);\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rtge2df0u33mwltykqta",
        "width": 900,
        "height": 896,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "dNYe5xkzSiTqiTC9y",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-10T03:35:22.866Z",
    "posted": true,
    "lesson": "Random",
    "description": "Andy Warhol, but with a randomized color wash!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pedu78fxfxlxetwzudq6",
        "width": 1602,
        "height": 1602,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tcdcdwrrgxbhanvruiqr",
        "width": 1602,
        "height": 1602,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T21:33:34.585Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "dQTrC8tizuxcmcojf",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-29T03:10:49.142Z",
    "posted": true,
    "lesson": "API",
    "description": "Tried a variation on my \"Uber for X\" sketch from text week with OpenAI API using gpt3.5 by following their docs",
    "code": "import { Configuration, OpenAIApi } from \"openai\";\n\nconst configuration = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n\nexport default async function (req, res) {\n  if (!configuration.apiKey) {\n    res.status(500).json({\n      error: {\n        message: \"OpenAI API key not configured, please follow instructions in README.md\",\n      }\n    });\n    return;\n  }\n\n  const animal = req.body.animal || '';\n  if (animal.trim().length === 0) {\n    res.status(400).json({\n      error: {\n        message: \"Please enter a valid animal\",\n      }\n    });\n    return;\n  }\n\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: generatePrompt(animal),\n      temperature: .9,\n    });\n    res.status(200).json({ result: completion.data.choices[0].text });\n  } catch(error) {\n    // Consider adjusting the error handling logic for your use case\n    if (error.response) {\n      console.error(error.response.status, error.response.data);\n      res.status(error.response.status).json(error.response.data);\n    } else {\n      console.error(`Error with OpenAI API request: ${error.message}`);\n      res.status(500).json({\n        error: {\n          message: 'An error occurred during your request.',\n        }\n      });\n    }\n  }\n}\n\nfunction generatePrompt(animal) {\n  const capitalizedAnimal =\n    animal[0].toUpperCase() + animal.slice(1).toLowerCase();\n  return `Suggest ideas in the format of \"Uber for X\"\n\nUber for Babies: A baby is delivered to you on demand for you to raise at any given point in time.\nUber for Dogs: Have a dog delivered to your front door whenever you want. Pricing varies on how long you have the dog for.\nUber for Dragons: A dragon descends upon you from the sky and burns down your house so that you can claim insurance.\nUber for Criminals: A criminal is delivered for you to rehabilitate on the spot in 10 minutes.\nUber for ${capitalizedAnimal}:`;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rbiqrlmituq63ts2nfzy",
        "width": 2022,
        "height": 888,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/jpdyzpey6lfjoncov2xe",
        "width": 2022,
        "height": 888,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "dSiRH8eDMFMK6TvPs",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-26T23:26:56.341Z",
    "posted": true,
    "lesson": "API",
    "description": "Took another shot at a p5 play sketch. Took some elements from the last attempt and explored other parts of p5 play. Ended up making a sketch that could be the basis for a small game if I spend some more time refining this idea.",
    "code": "let square1;\nlet square2;\nlet square3;\nlet square4;\nlet square5;\n\nlet border1;\nlet border2;\nlet border3;\nlet border4;\n\nlet circle;\n\nfunction setup() {\n  createCanvas(600, 600);\n  \n  // Boxes\n  \n  square1 = new Sprite();\n  square1.pos = {x: 200, y: 100};\n  \n  square2 = new Sprite();\n  square2.pos = {x: 400, y: 100};\n  \n  square3 = new Sprite();\n  square3.pos = {x: 100, y: 300};\n  \n  square4 = new Sprite();\n  square4.pos = {x: 500, y: 300};\n  \n  square5 = new Sprite();\n  \n  // Border\n  \n  border1 = new Sprite();\n  border1.width = 500; \n  border1.pos = {x: 300, y: 10};\n  border1.collider = 'static';\n  \n  /*border2 = new Sprite();\n  border2.width = 500; \n  border2.pos = {x: 300, y: 590};\n  border2.collider = 'static'; */\n  \n  border3 = new Sprite();\n  border3.height = 500; \n  border3.pos = {x: 10, y: 300};\n  border3.collider = 'static';\n  \n  border4 = new Sprite();\n  border4.height = 500; \n  border4.pos = {x: 590, y: 300};\n  border4.collider = 'static';\n  \n  // Circle\n  \n  circle = new Sprite();\n  circle.diameter = 50;\n}\n\nfunction draw() {\n  background(209, 246, 255);\n  \n  // Boxes\n  \n  /* square1.moveTowards(mouse, 0.05);\n  square2.moveTowards(mouse, 0.05);\n  square3.moveTowards(mouse, 0.05);\n  square4.moveTowards(mouse, 0.05); */\n  square5.moveTowards(mouse, 0.05);\n  \n  if(circle.colliding(square5)){\n    square5.vel.x = random(-50, 50);\n    square5.vel.y = -50;\n  }\n  \n  // Circle\n  \n  circle.moveTowards(mouse, 0.50);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xfggsfsevi9llepswszy",
        "width": 896,
        "height": 899,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "dX38su9QE8gzDFQJz",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-30T17:03:29.969Z",
    "posted": true,
    "lesson": "Music",
    "description": "An extension of the code with oscillator experiments that me and Shristi wrote in our breakout room.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ooqs0sahntkb8kfmdn25",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "daDALnmxCP5dgbFxr",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-03T00:43:37.629Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "challenge 1 extended",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fatqfssksx0ymojfs489",
        "width": 477,
        "height": 473,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/uliet1icaqdg1z7to9kl",
        "width": 483,
        "height": 482,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vhltqmxwh0kgt2nhiqs6",
        "width": 495,
        "height": 495,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T00:53:52.073Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "dpGumKqwm2ZfgBryt",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-28T04:17:11.711Z",
    "posted": true,
    "lesson": "API",
    "description": "I decided to include randomness in my 3D cinema4D scenes, I used a random number generator to generate the level of which the trees need to \"melt\"",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fuljkkn0lqnmoiwhrn71",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/alpjv2tsqow8iixcuhou",
        "width": 1280,
        "height": 720,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "dpp3B9XHWyPMqQHky",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-15T23:57:50.993Z",
    "posted": true,
    "lesson": "Noise",
    "description": "NOISEFLOW",
    "code": "let t;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tstrokeWeight(1);\n    stroke(255);\n    noFill();\n\tt = 0;\n\tframeRate(60); //Lines behind change accordingly\n}\n\nfunction draw() {\n\tbackground(0,10);\n\tcircling(0, 600, 400);\n\tcircling(200, 0, 1);\n\tcircling(100, 200, 40);\n\tcircling(40, 800, 30);\n    circling(0, 600, 400);\n\tcircling(200, 0, 500);\n\tcircling(100, 200, 40);\n\tcircling(4, 80, 300);\n    circling(20, 400, 15);\n    circling(100, 300, 800);\n\tcircling(50, 100, 2);\n    circling(20, 400, 15);\n\tcircling(5, 60, 600);\n}\n\nfunction circling(xPos, yPos, circleSize) {\n  let x = width * noise(t + xPos);\n  let y = height * noise(t - yPos); //Wanted to see the difference of plus \n let size = width/2 * noise(t + circleSize);\n\n  ellipse(x, y, size, size);\n\n  t += 0.001;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/etoleykxv8ezh02pgegj",
        "width": 1314,
        "height": 1282,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-16T04:45:28.267Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "duTb8WwLPzfbN2Jo2",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-03T03:11:16.558Z",
    "posted": true,
    "lesson": "Random",
    "description": "**Circle grid code challenge with lerpColor and endBias:** When I first completed the challenge, I wasn't happy with how the colors clashed (see screenshot at the end). So I modified the sketch to choose two random colors as the main colors, and choose random colors that lie in between the main colors for each column (using lerpColor). I also applied end bias to the column colors so that the contrast between the two main colors is more visible (as in some runs of the sketch they barely were). *End bias was inspired by Alex's question and Justin's answer on the notion page!*",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  //noLoop();\n  frameRate(1);\n\n  noStroke();\n  fill(255, 255, 255);\n}\n\nfunction draw() {\n  clear();\n  background(32);\n\n  fill('#fff');\n\n  let rows = height / 50;\n  let cols = width / 50;\n  \n  \n  let startR = floor(random(255));\n  let startG = floor(random(255));\n  let startB = floor(random(255)); \n  let startColor = color(startR, startG, startB);\n  \n  let endR = floor(random(255));\n  let endG = floor(random(255));\n  let endB = floor(random(255));\n  let endColor = color(endR, endG, endB);\n\n  //Stores colours for each column\n  let colColors = [];\n  \n  for (row = 0; row < rows; row++) {\n    \n    for (col = 0; col < cols; col++) {\n      let lerpVal = endBias();\n      if (!colColors[col]) colColors[col] = lerpColor (startColor, endColor, lerpVal);\n      let tempColor = colColors[col];\n      fill (tempColor);\n      drawThing(col * 50 + 25, row * 50 + 25);\n    }\n  }\n}\n\n//ENDBIAS INSPIRED BY ALEX SILVA & JUSTIN BAKSE\nfunction endBias() {\n  let value = random() + random();  \n\tvalue = value - 1;\n  if (value < 0) value += 2;\n\treturn value;\n}\n\nlet brownianRadius = 12;\n\nfunction drawThing(x, y) {\n  let radius;\n\n  // even\n  radius = random(0, 50);\n\n  ellipse(x, y, radius, radius);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ttzrgpnfmg2p3zh2aqpz",
        "width": 1198,
        "height": 1208,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/etxfzerxqolkiw6ry2rb",
        "width": 1208,
        "height": 1200,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/zu291pdyjcjspfuykjl2",
        "width": 1200,
        "height": 1184,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-03T05:55:12.446Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-03T06:50:56.252Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:25:08.494Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-05T15:12:26.605Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-05T19:55:39.122Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-06T03:50:56.225Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:19.08Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "e46ZSqRF38NFs7z7k",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-09T02:15:34.741Z",
    "posted": true,
    "lesson": "Random",
    "description": "I love these slow enthralling patterns random can create.",
    "code": "let a;\nvar color1;\nvar color2;\nvar color3;\n\nfunction setup() {\n  color1 = random(0, 255);\n  color2 = random(0, 255);\n  color3 = random(0, 255);\n  createCanvas(700, 700);\n  stroke(color1, color2, color3);\n  // a = height / 2;\n  a = 100;\n}\n\nfunction draw() {\n  background(0);\n  noFill();\n\n  for (let i = 0; i < 40; i = i + 1) {\n    ellipse(0, a, width, a + i * 100);\n    ellipse(width, a, width, a + i * 100);\n    ellipse(height / 2, width / 2, a + i * 100, a + i * 100);\n  }\n  strokeWeight(10);\n  a = a - 4;\n  if (a < 0) {\n    a = height;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qj8ptdawvozzolod2zze",
        "width": 848,
        "height": 850,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-09T14:43:10.044Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-10T04:29:30.327Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-15T03:50:58.705Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:34.145Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "e8bNj5YwgTgoSXxGa",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "created_at": "2023-02-02T04:22:52.367Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "This is a second iteration of the sketch I just posted! I removed the Perlin noise and instead adjusted the amounts of connections using the textToPoint() function in p5",
    "code": "// horrible code - symbolisyng system falling apart\n\nlet font_one;\nlet fontSize = 100;\nlet point_amount = 0.3;\n\nlet e_letter;\nlet d_letter;\nlet u_letter;\nlet c_letter;\nlet a_letter;\nlet t_letter;\nlet i_letter;\nlet o_letter;\nlet n_letter;\n\nlet e_number = 1;\nlet d_number = 1;\nlet u_number = 1;\nlet c_number = 1;\nlet a_number = 1;\nlet t_number = 1;\nlet i_number = 1;\nlet o_number = 1;\n\nlet t = 1;\nlet r = -1;\n\nlet x_location;\nlet y_location;\n\nfunction preload() {\n  font_one = loadFont(\"Fonts/CaslonOS-Regular.otf\");\n}\n\nfunction setup() {\n  createCanvas(600, 560);\n  textFont(font_one);\n  textSize(fontSize);\n  noFill();\n  textAlign(CENTER);\n  strokeWeight(0.1);\n\n  // the amount of points have to be exactly the same for both letters, therefore we need to make the SampleFactor different for both letters (match it perfectly)\n\n  e_letter = font_one.textToPoints(\"E\", 61, 187, fontSize, {\n    sampleFactor: 0.35,\n  });\n  d_letter = font_one.textToPoints(\"D\", 128, 187, fontSize, {\n    sampleFactor: 0.365,\n  });\n  u_letter = font_one.textToPoints(\"U\", 195, 187, fontSize, {\n    sampleFactor: 0.383,\n  });\n  c_letter = font_one.textToPoints(\"C\", 262, 187, fontSize, {\n    sampleFactor: 0.405,\n  });\n  a_letter = font_one.textToPoints(\"A\", 329, 187, fontSize, {\n    sampleFactor: 0.395,\n  });\n  t_letter = font_one.textToPoints(\"T\", 396, 187, fontSize, {\n    sampleFactor: 0.438,\n  });\n  i_letter = font_one.textToPoints(\"I\", 463, 187, fontSize, {\n    sampleFactor: 0.76,\n  });\n  o_letter = font_one.textToPoints(\"O\", 530, 187, fontSize, {\n    sampleFactor: 0.3745,\n  });\n  n_letter = font_one.textToPoints(\"N\", 597, 187, fontSize, {\n    sampleFactor: 0.322,\n  });\n}\n\nfunction draw() {\n  if (mouseY < 80 &&  mouseY>=0) {\n    e_number = 25;\n    d_number = 15;\n    u_number = 10;\n    c_number = 8;\n    a_number = 4;\n    t_number = 2;\n    i_number = 1;\n  } else if (mouseY < 160 && mouseY >=80) {\n    e_number = 15;\n    d_number = 25;\n    u_number = 15;\n    c_number = 10;\n    a_number = 8;\n    t_number = 4;\n    i_number = 2;\n  } else if (mouseY < 240 &&  mouseY >=160) {\n    e_number = 10;\n    d_number = 15;\n    u_number = 25;\n    c_number = 15;\n    a_number = 10;\n    t_number = 8;\n    i_number = 4;\n  } else if (mouseY < 320 &&  mouseY >=240) {\n    e_number = 8;\n    d_number = 10;\n    u_number = 15;\n    c_number = 25;\n    a_number = 15;\n    t_number = 10;\n    i_number = 8;\n  } else if (mouseY < 400 && mouseY >=320) {\n    e_number = 4;\n    d_number = 8;\n    u_number = 10;\n    c_number = 15;\n    a_number = 25;\n    t_number = 15;\n    i_number = 10;\n  } else if (mouseY < 480 && mouseY >=400) {\n    e_number = 2;\n    d_number = 4;\n    u_number = 8;\n    c_number = 10;\n    a_number = 15;\n    t_number = 25;\n    i_number = 15;\n    print(\"one\");\n  } else if (mouseY < 560 && mouseY >= 480) {\n    e_number = 1;\n    d_number = 2;\n    u_number = 4;\n    c_number = 6;\n    a_number = 10;\n    t_number = 15;\n    i_number = 25;\n    print(\"two\");\n  }\n  print(mouseY);\n\n  background(220);\n\n  push();\n  translate(-70, -110);\n  writetext(e_number);\n  push();\n  translate(0, 80);\n  writetext(d_number);\n  pop();\n  push();\n  translate(0, 160);\n  writetext(u_number);\n  pop();\n  push();\n  translate(0, 240);\n  writetext(c_number);\n  pop();\n  push();\n  translate(0, 320);\n  writetext(a_number);\n  pop();\n  push();\n  translate(0, 400);\n  writetext(t_number);\n  pop();\n  push();\n  translate(0, 480);\n  writetext(i_number);\n  pop();\n\n  pop();\n}\n\nfunction writetext(number) {\n  // E-D\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(e_letter[i].x, e_letter[i].y);\n    vertex(d_letter[i].x, d_letter[i].y);\n  }\n  endShape();\n\n  // D-U\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(d_letter[i].x, d_letter[i].y);\n    vertex(u_letter[i].x, u_letter[i].y);\n  }\n  endShape();\n\n  // U-C\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(u_letter[i].x, u_letter[i].y);\n    vertex(c_letter[i].x, c_letter[i].y);\n  }\n  endShape();\n\n  // C-A\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(c_letter[i].x, c_letter[i].y);\n    vertex(a_letter[i].x, a_letter[i].y);\n  }\n  endShape();\n\n  // A-T\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(a_letter[i].x, a_letter[i].y);\n    vertex(t_letter[i].x, t_letter[i].y);\n  }\n  endShape();\n\n  // T-I\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(t_letter[i].x, t_letter[i].y);\n    vertex(i_letter[i].x, i_letter[i].y);\n  }\n  endShape();\n\n  // I-O\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(i_letter[i].x, i_letter[i].y);\n    vertex(o_letter[i].x, o_letter[i].y);\n  }\n  endShape();\n\n  // O-N\n  beginShape();\n  for (i = 0; i < e_letter.length; i += number) {\n    vertex(o_letter[i].x, o_letter[i].y);\n    vertex(n_letter[i].x, n_letter[i].y);\n  }\n  endShape();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/y8t8yyhu11ovmkqqgmy1",
        "width": 1196,
        "height": 1116,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T18:08:48.834Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "eCgB4wRwDGd5f7WQR",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-23T09:19:05.193Z",
    "posted": true,
    "lesson": "Params",
    "description": "emoji face generator! i may never sleep again...",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet chrom; //hold my font\nlet eyes = [];\nlet nose = [];//set up an array to receive coordinates\n// let fontSize=150; //initialize size of text\n\nconst params = {\n  eyes: 0,\n  nose: 0,\n  lips:0,\n  size: 100,\n  color: \"#f00\",\n};\n\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"eyes\", { min: 0, max: 3 });\npane.addInput(params, \"nose\", { min: 0, max: 3 });\npane.addInput(params, \"lips\", { min: 0, max: 3 });\npane.addInput(params, \"size\", { min: 10, max: 400 });\npane.addInput(params, \"color\");\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  rectMode(CENTER);\ntextAlign(CENTER);\n  // if you change a params property tweakpane will reflect it\n  params.pos_x = width * 0.5;\n  params.pos_y = height * 0.5;\n  \n}\n\nfunction draw() {\n  background(params.color);\n  // fill(params.color);\n  textSize(params.size);\n  eyes = [\"👁 👁\", \"🌼 🌼\", \"👀\",\"⭐️ ⭐️\"]\n  nose = [\"👃\", \"🌷\", \"🐽\", \"⚡️\"]\n  lips = [\"👄\", \"🌱\", \"👅\", \"🌙\"]\n  // for(i=0;i<3;i++){\n      text(eyes[int(params.eyes)],width/2,height/2-50);\n  text(nose[int(params.nose)],width/2,height/2+20);\n  text(lips[int(params.lips)],width/2,height/2+110);\n \n      // }\n\n  // text(\"👁\",params.pos_x,params.pos_y)\n  // rect(params.pos_x, params.pos_y, params.size, params.size);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jzl2hc1oxssngh0gfv2q",
        "width": 1686,
        "height": 1196,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/tmk8vcxo8u1cmfivqllh",
        "width": 1130,
        "height": 1066,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zhi0wwcipeavmtpiemkh",
        "width": 1148,
        "height": 1114,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T14:53:16.249Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:17.802Z"
      },
      {
        "category": "funny",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-23T17:12:55.907Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-23T21:31:52.508Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "eJm2ewFabG2uediSw",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-09T03:38:45.118Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Feeling inspired by spirals again - this week using pixels",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/saoeb93szjsmgz9umkbo",
        "width": 900,
        "height": 900,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/i08xh5e01mod7wioqlw9",
        "width": 900,
        "height": 900,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:31.142Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "eNRRoYWT6ECgvgsv8",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-14T18:06:26.226Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I used the grass example as a starting point for these sketches! They're kind of inspired by basket weaving/thread/yarn.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/o0h2eihpz22cedetyojv",
        "width": 1074,
        "height": 1076,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jwld7wde7npiq9oy9h3v",
        "width": 1064,
        "height": 1066,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jyr4skmsp9ak4on6j05o",
        "width": 1188,
        "height": 1190,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T21:50:13.837Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-15T04:10:08.31Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-15T05:07:10.822Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ePCWKBpAov2tKyF9o",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-01-29T00:39:33.741Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Here are the instructions for my group. Apologies for the number of steps! Let me know if you have any questions/if the steps are confusing :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ec9o1fvxurqthtvxflze",
        "width": 1350,
        "height": 4050,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "eSmyXDZmD338zGzre",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-13T07:36:56.681Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Wrapping my head around noise still, had textiles on my mind",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(2000, 2000);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  noLoop(); \n  noStroke();\n  background(200);\n  // background(0);\n  ellipseMode(CENTER);\n  noiseDetail(.9);\n\n\nfor (let i = 10; i < width; i+=20 ) {\n  fill(noise(i * .01)*20);\n\n  print(noise(i*.01)*10);\n  rect(i, height/2, 10 + noise(i * .01)*20, height);\n}\nfor (let j = 10; j < height; j+=20 ) {\nfill(200 + noise(j*.01)*20, 100 + noise(j*.01)*20, random(255), random(255));\n// fill(200 + noise(j*.01)*20, 100 + noise(j*.01)*20, random(255), 150 + noise(j*.01)*10);\n\n  // print(noise(i*.01)*10);\n  rect(width/2, j, width, 10 + noise(j*.01)*20);\n}\n\nfor (let i = 10; i < width; i+=20 ) {\n  fill(0, 0, 0, random(255));\n  rect(i, height/2, 10 + noise(i * .01)*50, height);\n  // rect(i, height/2, 10 + noise(i * .1)*50, height);\n  // fill(0, 0, 0, random(100));\n  // rect(i, height/2, 10 + noise(i * .2)*50, height);\n}\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xhojtner28p4x9uzw2xv",
        "width": 2000,
        "height": 2000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-13T14:52:39.955Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T06:45:00.497Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "eW45NJ299uERhGvfp",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-05T15:39:41.781Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "MY CASTLE MADE OUT OF CHESS PIECES",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xthnxyj7xqajcgvzy0uo",
        "width": 742,
        "height": 834,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sddtmqbqyfub25gkfaw6",
        "width": 894,
        "height": 826,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/oewt2dryw6je3rxppykh",
        "width": 1404,
        "height": 884,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:55.622Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T22:58:07.088Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:18:05.941Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ed8mmb9ou5WjRxBdh",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-30T19:32:21.454Z",
    "posted": true,
    "lesson": "Music",
    "description": "Tried to figure out working with drums but I couldn't get two loops to overlap. This was the best I could do where I just started the same loop multiple times.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\nconst kick = new Tone.MembraneSynth({ \n  envelope: {\n  attack: 0,\n  decay: 0,\n  sustain: 0.3,\n  release: 0,\n  }\n}).toMaster();\n\nconst snare = new Tone.MembraneSynth({ \n  envelope: {\n  attack: 0.002,\n  decay: 0.0001,\n  sustain: 0,\n  release: 0,\n  }\n}).toMaster();\n\nconst hihat = new Tone.MembraneSynth({ \n  envelope: {\n  attack: 0.00009,\n  decay: 0.000,\n  sustain: 0,\n  release: 0,\n  }\n}).toMaster();\n\nwindow.onmousedown = () => {\n    \n    const hatLoop = new Tone.Loop((time) => {\n\t    hihat.triggerAttackRelease('C3', '8n');\n\t\n}, \"8n\").start();\n    const kickLoop = new Tone.Loop((time) => {\n\t    kick.triggerAttackRelease('C1', '8n');\n\t    const hatLoop = new Tone.Loop((time) => {\n\t    hihat.triggerAttackRelease('C3', '8n');\n\t\n}, \"8n\").start();\n}, \"1m\").start();\n    Tone.Transport.start();\n\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/evavm0qojtnbjvyb1ck6",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "ef3s5eRXoPvyeohDM",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-01-29T21:39:07.448Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "WEEK 1: Instructions\n\n1) Find an image of your favorite cartoon character. Make sure it isn't too simple.\n2) Flip is upside down/vertically \n3)Find a paper of any size.\n4) Using a bright marker, draw a line drawing of your upside down character. Don't get caught up in the proportions, try to mimic the shape and form. Also don't focus on thinking about what part of the body you're drawing, pretend the image is abstract and you are trying to copy the lines.\n5) Flip your paper to see your character \"the right way\". Revert your image back by flipping it vertically, and post both of them!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/o3urpp97oq0qbggpndci",
        "width": 1522,
        "height": 340,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "eiSz8Ct3fHa73Lj6a",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-29T04:06:55.46Z",
    "posted": true,
    "lesson": "Music",
    "description": "TONE.JS IS INSANE! I looked up a tutorial on how to design a particular synthesizer sound that was meant for a proper, high-grade, production-level synthesizer that you use in actual music production. I then did the same steps in tone.js and got this result. The sound quality is UNBELIEVABLE! I'm a bit sad because I couldn't quite get the newest version of tone.js to import onto my local server and the newer version has additional features that I'm curious about. But this is more then plenty for now!",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\nconst lowPass = new Tone.Filter({\n  frequency: 10,\n}).toMaster();\n\nconst synth = new Tone.PolySynth(11, Tone.Synth, {\n  oscillator : {\n    type : \"fatsawtooth\"\n  },\n  envelope: {\n    attack: 0,\n    decay: 0,\n    sustain: 0.8,\n    release: 0.9,\n  },\n}).connect(lowPass);\n\nconst synth2 = new Tone.PolySynth(8, Tone.Synth, {\n  oscillator : {\n    type : \"fatsawtooth\"\n  },\n  envelope: {\n    attack: 0,\n    decay: 0,\n    sustain: 0,\n    release: 0.9,\n  },\n}).connect(lowPass);\n\nvar lfo = new Tone.LFO(5.9, 10, 900); // hertz, min, max\nlfo.connect(lowPass.frequency);\nlfo.start();\n\nconst chord1 = {\n    notes:[\"B3\", \"G3\", \"E3\", \"C3\"],\n    length: 2\n}\n\nconst chord2 = {\n    notes:[\"C4\", \"A3\", \"F3\", \"D3\"],\n    length: 2\n}\n\nconst chord3 = {\n    notes:[\"A3\", \"G3\", \"C3\", \"D#3\"],\n    length: 1\n}\n\nconst chord4 = {\n    notes:[\"G3\", \"C3\", \"D#3\", \"G#2\",],\n    length: 1\n}\n\nconst chordProg = [chord1, chord2, chord1, chord3, chord4, chord1, chord2, chord1, chord3, chord4];\nwindow.onmousedown = () => {\n\n  let t = Tone.now();\n  for (const chord of chordProg) {\n    if (chord.notes !== \"rest\") {\n      synth.triggerAttackRelease(chord.notes, Tone.Time(chord.length), t);\n    }\n    t += Tone.Time(chord.length);\n  }\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rd5jutltmbsekpvu3g3x",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-29T21:04:21.237Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:41.852Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T16:29:01.928Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "emadZBgBboa6FNxp7",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-07T04:21:22.954Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "continuation of my earlier sketch... working puzzle!",
    "code": "// tiles tutorial by Steve's Makerspace\n// Video: https://youtu.be/3fUVUS4I3qM\n\n// sprite sheet from Coding Train:\n// https://editor.p5js.org/codingtrain/sketches/vhnFx1mml\n\nlet img;\nlet spritesheet;\nlet spritedata;\n\nlet tiles = [];\nlet sprites = [];\n\nfunction preload(){\n  spritedata = loadJSON('img.json');\n  spritesheet = loadImage('img/shibe.png');\n  spritesheet.resize(600,0);\n}\n\nfunction setup() {\n  createCanvas(600,600);\n  let frames = spritedata.frames;\n  for (let i = 0; i < frames.length; i++) {\n    let pos = frames[i].position;\n    let img = spritesheet.get(pos.x, pos.y, pos.w, pos.h);\n    tiles.push(img);\n    sprites[i] = new Sprite(img, 0, 0, 'dynamic');\n  }\n\n  sprites = shuffle(sprites);\n  sprites[0].position.x = 0+100;\n  sprites[0].position.y = 0+100;\n  sprites[1].position.x = 200+100;\n  sprites[1].position.y = 0+100;\n  sprites[2].position.x = 400+100;\n  sprites[2].position.y = 0+100;\n  sprites[3].position.x = 0+100;\n  sprites[3].position.y = 200+100;\n  sprites[4].position.x = 200+100;\n  sprites[4].position.y = 200+100;\n  sprites[5].position.x = 400+100;\n  sprites[5].position.y = 200+100;\n  sprites[6].position.x = 0+100;\n  sprites[6].position.y = 400+100;\n  sprites[7].position.x = 200+100;\n  sprites[7].position.y = 400+100;\n}\n\nfunction draw() {\n  background(0);\n  stroke(0);\n\n  for (sprite of sprites) {\n    if (mouse.pressing()) {\n      if (dist(mouseX, 0, sprite.position.x, 0) < 100 && dist(0, mouseY, 0, sprite.position.y) < 100) {\n        sprite.position.x = mouseX;\n        sprite.position.y = mouseY;\n      }\n    }\n\n    sprite.position.x = constrain(sprite.position.x, 100, width-100);\n    sprite.position.y = constrain(sprite.position.y, 100, height-100);\n    sprite.rotation = 0;\n    sprite.stroke = 'black';\n  }\n}\n\nfunction shuffle(array) {\n  let currentIndex = array.length,  randomIndex;\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xifm4lmrwowqxoi9szjp",
        "width": 1198,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/f3hzxjiqi8uh4sanl9rk",
        "width": 1196,
        "height": 1198,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T04:25:33.233Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T05:49:26.763Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-04-07T15:27:46.764Z"
      },
      {
        "category": "nerdy",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-04-07T15:27:47.467Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ertvg4sboptXzgkEQ",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-31T01:53:10.471Z",
    "posted": true,
    "lesson": "Music",
    "description": "Pair challenge that Sora and I worked on. We were able to get almost every change we wanted up to uploading this but we still missed one or two things that we wanted to change. Nonetheless, we did our take on modifying the melody generator.\n\nNew characteristics: \n•\tWe are going to use the G-Major key.\n•\tWe are going to use 4/4 time.\n•\tWe will use only half-notes and eighth-notes.\n•\tNo notes will be played across the barline.\n•\tOur melody will have rests!\n•\tOur melody will have 6 measures.\n•\tThese measures will have an A B B A B C structure.\n•\tOur melody will start at a random place in the scale, and move up and down the scale in random steps.\n•\tOur melody should contain random pitch steps (could not achieve unfortunately)\n•\tOur melody will end on the tonic: G.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// modifying this for challenge -> https://compform.net/js_lab/js_lab.html?/music/tone_sketches/melody.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth().toMaster();\nTone.Transport.bpm.value = 200;\n\nwindow.onmousedown = () => {\n  // Play the melody!\n\n  const melody = generate();\n  play(melody);\n};\n\n//const cmajor = [\"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\"];\n//const cminor = [\"C3\", \"D3\", \"Eb3\", \"F3\", \"G3\", \"Ab3\", \"B3\"];\nconst gmajor = [\"G3\", \"A3\", \"B3\", \"C3\", \"D3\", \"E3\", \"F#3\", \"rest\"];\nconst notes = gmajor;\n\nlet degree = 0;\n\nfunction generate() {\n  // choose a starting place\n  degree = randomInt(0, 7);\n\n  // generate some measures\n  const a = generateMeasure();\n  const b = generateMeasure();\n  const c = generateMeasure();\n\n  // last note should be the tonic\n  c[c.length - 1][0] = notes[0];\n\n  // arrange the measures and return\n  return [].concat(a, b, b, a, b, c);\n}\n\nfunction generateMeasure() {\n  const m = [];\n\n  let timeLeft = Tone.Time(\"1m\");\n\n  while (timeLeft.toSeconds() > 0) {\n    // choose note\n    const change = sample([-1, -1, -1, 1, 1, -2, 2, 2, 2, -3]);\n    degree = constrain(degree + change, 0, 7);\n    const note = notes[degree];\n\n    // choose length\n    let length = Tone.Time(\"4n\");\n    if (Math.random() < 0.5) {\n      length = Tone.Time(\"8n\");\n    }\n    if (length.toMilliseconds() > timeLeft.toMilliseconds()) {\n      length = timeLeft;\n    }\n\n    // keep track of time\n    timeLeft = Tone.Time(timeLeft - length);\n\n    // add the note to the melody\n    m.push([note, length]);\n  }\n\n  return m;\n}\n\nfunction play(melody) {\n  let t = Tone.now();\n  for (const note of melody) {\n    console.log(note[0], note[1].toNotation());\n    if (note[0] !== \"rest\") {\n      // synth.triggerAttackRelease(note[0], note[1]), t);\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n}\n\nconsole.log(\"click for music!\");\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction sample(data) {\n  const index = Math.floor(Math.random(data.length));\n  return data[index];\n}\n\nfunction constrain(v, min, max) {\n  return Math.min(max, Math.max(min, v));\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bhrielxyjqk4ennxl96r",
        "width": 1913,
        "height": 989,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "eso92Tx6P9ttvH6Fa",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-16T10:55:27.121Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Treasure map. I tried to make a series of islands, with water around them swelling and receding. Looks more like a bunch of blobs though lol",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  \n  background(255);\n  push();\n  noStroke();\n  fill(116, 171, 196, 190);\n  rect(0, 0, width, height);\n  pop();\n\n  for (let s = 110 + 25 * cos(TWO_PI * (millis()/3000)); s > 20; s -= 10) {\n    \n    let from = color(179, 136, 34); //ground\n    let to = color(143, 211, 242); //sea\n    let colour = lerpColor(from, to, s/175);\n    stroke(colour);\n    strokeWeight(s);\n\n    for (let t = 0; t < 5; t++) {\n      for (let i = 0; i < 15; i++) {\n        for (let j = 0; j < 15; j++) {\n          \n          let d = { x: 20, y: 30 };\n          let n = { x: noise(d.x) * 20, y: noise(d.y) * 20 };\n          let m = { i: noise(i) * 10, j: noise(j) * 10 };\n\n          let tValue = [\n            { x: 60,  y: 100 },\n            { x: 275, y: 25  },\n            { x: 125, y: 300 },\n            { x: 300, y: 200 },\n            { x: 350, y: 375 },\n          ];\n\n          push();\n          translate(tValue[t].x, tValue[t].y);\n          rotate(t * i * 36 + m.i, t * j * 36 + m.j);\n          line(-1 * d.x + n.x, -1 * d.y + n.y, d.x + n.x, d.y + n.y);\n          pop();\n          \n        }\n      }\n    }\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jdsok6ngq4rdfpvycwxi",
        "width": 1440,
        "height": 1440,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T18:31:12.377Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:38.718Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "esqS6Khuz27JkpQwC",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-03T05:38:53.792Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Played around on Scratch. A simple clicker game",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qbabrj9ccklsk3pwltbk",
        "width": 1550,
        "height": 1150,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:19:57.936Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "euCFbWngiTDwxthfS",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-23T21:30:57.679Z",
    "posted": true,
    "lesson": "Params",
    "description": "Inspired by Shristi's comp form type sketch! I wanted to try something with type 🔠",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vzwue52pza5sjpqtzfyt",
        "width": 2292,
        "height": 1382,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xba3393fq2w5kkt4hqpq",
        "width": 2302,
        "height": 1478,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/m9abhn4z8cqbqdmx4pet",
        "width": 2298,
        "height": 1476,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-24T01:04:16.362Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T15:22:14.89Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ev6qsLcwRZ35EZncy",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-31T03:57:33.661Z",
    "posted": true,
    "lesson": "Music",
    "description": "Experimenting with one of the sketches in the chapter",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n/* global Tone */\n\n// First, create the synth.\nconst synth = new Tone.Synth({\n  oscillator: {\n    type: \"triangle\", // sine, square, triangle, sawtooth, fat*\n  },\n  envelope: {\n    attack: 0.2,\n    decay: 0.3,\n    sustain: 0.6,\n    release: 1.5,\n  },\n});\n\n// Connect to the speakers.\nsynth.toMaster();\n\nwindow.onmousedown = (e) => {\n  // Play a sound when the mouse is pressed\n  const freq = map(e.clientX, 0, window.innerWidth, 220, 440);\n  console.log(`click -> ${Math.floor(freq)}hz`);\n  synth.triggerAttackRelease(freq, \"2n\");\n};\n\nfunction map(value, min1, max1, min2, max2) {\n  const n = (value - min1) / (max1 - min1);\n  return n * (max2 - min2) + min2;\n}\n\nconsole.log(\"click for music!\");",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lmhc9yajz0gvcl4gafrl",
        "width": 3584,
        "height": 1818,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "exjwKHxMfcH6SLn5z",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-24T16:38:16.073Z",
    "posted": true,
    "lesson": "Params",
    "description": "I wanted to continue playing around with more params. With more refinement, I could see this being a great starting point for generating logo ideas",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/eh7ln7shix5rzoj9qsba",
        "width": 1548,
        "height": 1018,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/vdgvihrlwift92cuylxz",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ub09o9xtsm7vc91plhdt",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "f3J4fzHbDG7ahsKxh",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-16T21:39:36.388Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Composite image and original sketch output for the pair challenge with Srishti. I was't able to get the exact colors!",
    "code": "let y1 = 600;\nlet x1 = 600;\nlet x2 = 100;\nlet y2 = 100;\nlet p;\n\nlet startX, startY;\n\nfunction setup() {\n  createCanvas(800, 800);\n  noLoop();\n  \n}\n\nfunction draw() {\n  \n  background(0);\n  \n  stroke(255, 100)\n  \n  for(let x = 100; x < width-100; x+=5){\n      \n    \n    let t = noise(x) * height;\n      \n      startX = x;\n      startY = t;\n    \n    let p = x;\n    \n    p=map(x, 100, width-100, 0, 255)\n    t = t*255/height\n    \n\n  fill(255-p, 255 - t, p, 50)\n    \n  bezier(startX, startY, x1, y1, x2, y2, startX, startY);\n \n    console.log(t)\n\n//   }\n}\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pxjmjna7ezlrnqtfgqxd",
        "width": 1492,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/y3nfh5bdqczsjygc5l8l",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-16T23:44:14.914Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "fLWpXETwrj6PseRMf",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-29T20:20:16.523Z",
    "posted": false,
    "lesson": "Music",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "fcFrescrCpGRXGQMA",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-10T05:40:24.487Z",
    "posted": true,
    "lesson": "Random",
    "description": "Group coding challenge with Keren and Rama",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fregnvvzf9iid5i8om4y",
        "width": 742,
        "height": 732,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-10T13:05:41.365Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ftfizZFizxd3ueFfZ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-24T14:29:41.293Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Here's the shirt I made with the vector that I cut out!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qadvuncnqykw6d0nyzvb",
        "width": 1718,
        "height": 2105,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-24T15:45:31.536Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-08T21:58:02.413Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "fvnri3uzRHyHHp84i",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-05T05:10:09.989Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "I realize this isn't a \"game\" (yet!) but I was having fun playing around with the Tiles constructor",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gau7axttn4pfjfimcowc",
        "width": 1932,
        "height": 1916,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/umevrjo33ehcvc2uxfxr",
        "width": 1980,
        "height": 1634,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-05T19:01:53.503Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-05T19:45:32.746Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "fw4SHy4aCKykZWYAD",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-29T01:50:21.69Z",
    "posted": true,
    "lesson": "Music",
    "description": "Extending the Individual challenge as one of my open sketches for this week as I felt that after getting used to tone.js a bit I felt that I had the capacity to flesh out what I started in the individual challenge.",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.6/Tone.min.js\n// partially adapted from https://compform.net/js_lab/js_lab.html?/music/tone_sketches/simple_song.js\n/* global Tone */\n\nconst synth = new Tone.Synth().toMaster();\n\nTone.Transport.bpm.value = 120;\n\nconst melody = [\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n\"],\n    [\"d5\", \"4n\"],\n    \n    [\"c5\", \"2n\"],\n    // Part 2\n    [\"rest\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n.\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    \n    [\"e5\", \"2n.\"],\n    [\"c5\", \"4n\"],\n    \n    [\"d5\", \"2n.\"],\n    [\"e5\", \"8n\"],\n    [\"f5\", \"8n\"],\n    \n    [\"e5\", \"2n.\"],\n    [\"c5\", \"4n\"],\n    \n    [\"f5\", \"2n.\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    \n    [\"e5\", \"2n.\"],\n    [\"c5\", \"4n\"],\n    \n    [\"g5\", \"1n\"],\n    \n    [\"g5\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n\"],\n    [\"d5\", \"4n\"],\n    \n    [\"c5\", \"2n.\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"4n\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    [\"c5\", \"4n\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"4n\"],\n    [\"g3\", \"8n\"],\n    [\"b3\", \"8n\"],\n    [\"c4\", \"4n\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"4n\"],\n    [\"g3\", \"8n\"],\n    [\"b3\", \"8n\"],\n    [\"c4\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"d4\", \"2n.\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"4n\"],\n    [\"g3\", \"8n\"],\n    [\"b3\", \"8n\"],\n    [\"c4\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"4n\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"4n\"],\n    [\"e5\", \"8n\"],\n    [\"d5\", \"8n\"],\n    [\"c5\", \"4n\"],\n    [\"c5\", \"4n\"],\n    \n    [\"g5\", \"2n.\"],\n    [\"a3\", \"4n\"],\n    \n    [\"g3\", \"2n\"],\n    [\"b3\", \"2n\"],\n    \n    [\"c4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"e4\", \"4n\"],\n    \n    [\"f4\", \"2n\"],\n    [\"e4\", \"2n\"],\n    \n    [\"d4\", \"2n\"],\n    [\"rest\", \"4n\"],\n    [\"a4\", \"4n\"],\n    \n    [\"g4\", \"2n\"],\n    [\"b4\", \"2n\"],\n    \n    [\"c5\", \"2n\"],\n    [\"c5\", \"4n\"],\n    [\"e5\", \"4n\"],\n    \n    [\"f5\", \"2n\"],\n    [\"e5\", \"4n.\"],\n    [\"d5\", \"4n.\"],\n    \n    [\"c5\", \"1n\"],\n]; \nwindow.onmousedown = (e) => {\n\n  let t = Tone.now();\n\n  for (const note of melody) {\n    if (note[0] !== \"rest\") {\n      synth.triggerAttackRelease(note[0], Tone.Time(note[1]) - 0.1, t);\n    }\n    t += Tone.Time(note[1]);\n  }\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/daq3o7gjoukqm8i3wkig",
        "width": 1920,
        "height": 993,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:32.182Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "fwFjuSbasPX6Mhjvu",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-28T03:29:37.348Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Here's my first challenge!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/paxtwvu3i5qmlu5emid7",
        "width": 497,
        "height": 497,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "fxpSPqGuM5b5yJ5fA",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-31T13:06:38.724Z",
    "posted": true,
    "lesson": "Music",
    "description": "WEEK 8 (3/4): This was another one I worked on (the first one and it failed as this one did not sound correct?)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/p4qtvxnrsuwxwkamvvwv",
        "width": 336,
        "height": 410,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "fzsW9GTYowMpCf9AG",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-13T21:56:53.858Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Not sure where I was going with this one, but I wanted to use noise to visually illustrate your typical shopping cart experience. Drew upon some inspiration from the skyline noise example from the textbook to figure out the execution for this piece.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet n;\nlet wave = 250;\nlet fr = 0.025;\n\nfunction setup() {\n  createCanvas(400, 450);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(55, 81, 122);\n  \n  for(i = 0; i < width; i += 50) {\n    let n = noise(i * fr, frameCount * fr) * wave/3;\n    \n    //items\n    \n    fill(255, 255, 0);\n    push();\n    noStroke();\n    rotate(90 / n);\n    rect(200, 200, 100, 50);\n    pop();\n    \n    push();\n    noStroke();\n    fill(232, 201, 79);\n    translate(1 * n/5, 0);\n    ellipse(100, 250, 50, 50);\n    pop();\n    \n    push();\n    noStroke();\n    fill(71, 212, 255);\n    rotate(-70 / n);\n    rect(100, 175, 100, 50);\n    pop();\n    \n    push();\n    noStroke();\n    fill(196, 255, 189);\n    translate(1 * n/5, 0);\n    ellipse(265, 175, 85, 75);\n    pop();\n    \n    //shopping cart\n    \n    fill(0, 0);\n    stroke(205);\n    rect(50, 100 + n, 300, 150);\n    line(200, 100 + n, 200, 250 + n);\n    line(100, 100 + n, 100, 250 + n);\n    line(300, 100 + n, 300, 250 + n);\n    line(150, 100 + n, 150, 250 + n);\n    line(250, 100 + n, 250, 250 + n);\n    \n    line(50 + n / 2, 175, 350 - n / 2, 175);\n    line(50 + n / 2, 125, 350 - n / 2, 125);\n    line(50 + n, 225, 350 - n / 2, 225);\n    \n    //shopping cart wheels and handle\n  \n    push();\n    strokeWeight(3);\n    line(50, 115, 25, 50);\n    translate(0, 50);\n    line(150, 250, 75, 300);\n    line(250, 250, 350, 300);\n    line(75, 300 + n / 2, 350, 300 + n / 2);\n    ellipseMode(CENTER);\n    fill(0);\n    noStroke();\n    ellipse(75, 300 + n / 2, 50, 50);\n    ellipse(350, 300 + n / 2, 50, 50);\n    pop();\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rush8zz9mktkqgqzlhuu",
        "width": 601,
        "height": 674,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-14T06:43:08.27Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "g2nTzv22Pqwgka7np",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-18T03:05:25.979Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Had so much fun working with Midjourney! For some reason I wanted to create tennis related visuals. Sometimes the net would look like a tennis net, and other times it would look more like a volleyball or soccer net. I also asked for there to be 20 tennis balls, and sometimes 2 tennis balls would appear, and other times there would be none. But in the last image it looks like an army of humongous pink tennis balls is about to charge. Definitely a lot of trial and error but very fun to play with! The more detailed the description is, the better the result.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ejvyadcs1mzfirqhsvky",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/k7mvyujdpcraqxnoovut",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xhccqcvprhfdon1k1qln",
        "width": 740,
        "height": 737,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-18T04:29:57.539Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-18T17:58:58.691Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-19T19:24:49.076Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T15:01:44.605Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "g67kNobMT6CKXXQwb",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-01T14:55:21.169Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "WEEK 13(2/4): Its p ugly but here is a cat ;) and I just felt like posting the minecraft chicken again",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jnzyqdqmtzvhmmuvtmw9",
        "width": 706,
        "height": 528,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fblducvyhewnkc0oklzd",
        "width": 538,
        "height": 546,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-05-01T16:53:47.794Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-02T00:02:27.247Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:56.841Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T01:39:42.51Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:55.681Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "g6nr9mQT3tT8FaHP2",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-06T04:59:06.523Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "More figuring out how stuff works in p5.play and having fun with physics",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dy094fvefg2yn2eq8b4a",
        "width": 1976,
        "height": 1924,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ionsqzzvvr1vzacnky0h",
        "width": 1280,
        "height": 1248,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-06T05:35:21.402Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "gJenTwpkp3iG9wLXP",
    "author_id": "Bx8aBoWhfqwYX7sG4",
    "author": "Julia Daser",
    "created_at": "2023-01-28T21:08:35.878Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "These are the instructions for Isha, user-tested by my friend Pepi!\n☺️ ☺️\n\nHave fun trying it out, and I can't wait to see if my description is accurate enough to get to the desired end result!🥳",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vbjuzzhgsguzhuqcoafi",
        "width": 2394,
        "height": 1922,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kmjswgrggeqdng1emqtq",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T23:03:48.264Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-01T09:40:19.268Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-03T18:02:55.216Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "gKwrTaLPRNH6HtdQE",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-06T14:24:28.277Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Getting set up with p5.play in Visual Studio Code and exploring animations. This isn't a game yet, but perhaps I'll extend this later on in celebration of Easter.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/r4umlzcdogouma9eqovx",
        "width": 1406,
        "height": 1084,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/kdzdglqmgnblhjzfv6og",
        "width": 1306,
        "height": 988,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "gQSSNL7xEvKBRjJnj",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-08T05:32:20.139Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Image for Sahiti I made for the pair challenge!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/axndq0qzmulmmxiuhfhx",
        "width": 938,
        "height": 937,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:27.222Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:33:57.989Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "gWxKnDzHJWjiAkh4q",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-13T08:13:54.67Z",
    "posted": true,
    "lesson": "Text",
    "description": "Made a fake Twitter bot using the Markov model. Collated a bunch of conservative tweets (for a narrative I'm building for an assignment for another class) to feed as input, and came up with only slightly nonsensical tweets.",
    "code": "const twitterdata = \"Talked to civil society leaders @JGreenblattADL, @YaelEisenstat, @rashadrobinson, @JGo4Justice, @normanlschen, @DerrickNAACP, @TheBushCenter Ken Hersch & @SindyBenavides about how Twitter will continue to combat hate & harassment & enforce its election integrity policies. If not for video, Asian victim would be in jail. Weak white lady does nothing. Weak white male needs black guy to stop assault by knife-wielding black thug ... while Asian victim gets thrown to  ground. And woke  Asians still stand with BLM. Stupid country. NY State Supreme Court reinstates all fired unvaccinated employees, orders backpay, says the state violated rights, acted arbitrary & capricious, notes: Being vaccinated does not prevent an individual from contracting or transmitting Covid-19. Sidenote: The mass poisoning of our children and generations to come will cripple humanity while enriching BigPharma and empowering globalists. Anti-semitism is not the most dangerous threat in the world. Anyone claiming otherwise is a controlled op enemy. Remember when you could stand on a train platform & not get beaten, robbed & pushed onto tracks by black thugs w/endless get-out-of-jail-free cards issued by a justice system that instead punishes nonviolent white conservatives who notice things you're not supposed to name? It's evil & un-American. Nonviolent undergrad Christian Secor was sentenced  today to 42 MONTHS in prison for sitting in Pelosi's chair & leaving when told by cops. Prosecutors argued he deserves prison because of his #AmericaFirst views/ties. I'm old enough to remember when conservatives said they were done with the pro-BLM, anti-white, rainbow-pimping, vaccine-shilling globalist NFL. In this late hour for America, we must confront our primary underlying ailment: A conservative movement and GOP that lacks the traits--collaboration, strategy, boldness--that leadership demands. And we've allowed it. Donald Trump walking out with Kid Rock and Dana White to American Bad Ass at UFC 287 last night was an iconic moment. I am the Speaker of the House. There is no place that China is going to tell me where I can go or who I can speak to. After indictment, ‘highest’ GOP support for 2024 @realDonaldTrump run at 61%. Biden's just 48. That is the biggest enthusiasm gap in a year and fed a flip in the Trump-Biden race now led by Trump 44%-42%. Trump expanded lead over DeSantis to 17 points. The AR-15 is America’s rifle. It’s not an assault rifle. It’s a semi-automatic, modern day sporting rifle; excellent for home defense, hunting, and range time. Any gun control politician who wants to ban the AR-15 is a threat to our Constitutional Republic. Meanwhile, House Oversight Committee chairman @RepJamesComer just revealed that testimony from Joe Biden’s former VP assistant Kathy Chung “undermines” the WH story about his classified documents. They were not in a “locked closet” and they were moved in May 2022, not Nov 2022. I've reviewed the Trump indictment. There's nothing there. Trump and the American people have been abused. Unbelievable support for miles as we depart to New York! Heartbroken and horrified by this cowardly act. The first Japanese leader to address a joint meeting of the United States Congress, @AbeShinzo did much for his country, its friendship with America, and the world. Baffled by the decision at the WTO to give away American IP on COVID vaccines. Won’t do anything to remove vax barriers worldwide. Will make it harder to fight the next pandemic. Gives competitors a windfall. Terrible change of precedent. Been following the global #COVID19 vaccine equity issue, and I agree with this. Hard to believe suspending IP protections would expand access. There's a vax surplus now. Reducing trade barriers and delivery challenges seems like better approach. Put me in the #noIPwaiver camp.\";\n\nconst markovModel = generateModel(twitterdata);\nconst output_text = generateText(markovModel);\n\ndocument.body.innerHTML = output_text;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jowxwjsva6q6snrh3x3l",
        "width": 414,
        "height": 1838,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-13T15:49:33.23Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "gZys2KcytvagiBLam",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-17T04:25:58.962Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Wasn't able to get a video so look it up on ShaderPark! The idea here was to sample noise many, many times and use the corresponding value to adjust both the shape and color of the sphere. Looks kinda like that one Tame Impala album cover",
    "code": "//shaderpark link:\n//https://shaderpark.com/embed/-NNdpUqX_kw2mEBgH-QM",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/d25kzvatdmizmb3ovxjo",
        "width": 840,
        "height": 741,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": [
      {
        "comment": "so cool!",
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-17T15:32:26.746Z"
      }
    ]
  },
  {
    "_id": "gpsPvqhpKbSdtS3ff",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-09T04:01:56.952Z",
    "posted": true,
    "lesson": "Random",
    "description": "Pair Challenge w Juli: A deconstructed deck of cards wallpaper using the deck visualizer:\n1. A random number was generated between 0 and 9\n2. A card was drawn from the top of the deck in that order 30x\n3. They were arranged in the order that they were called\n4. the symbols were laid out as many times as the number on the card\n5. arranged in Figma in the same order as their IRL arrangement. \n6. Textured + Wallpapered",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wahkwnejxclirt57mjsy",
        "width": 1379,
        "height": 1348,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xvuqtyohy2wucttsad6e",
        "width": 1379,
        "height": 1348,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sjvm5dgd9rnywizsenwc",
        "width": 798,
        "height": 1086,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-09T14:43:06.382Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "gwQtPCdJ8aozXLmYX",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-28T13:17:30.297Z",
    "posted": true,
    "lesson": "API",
    "description": "I've been enjoying playing around with ChatGPT quite a bit because it helps me not think too much. Yes, I've used it for codes and writing assignments a lot but there are much more difficult decisions to be made, like what to cook for dinner 😬\nI gave ChatGPT a list of ingredients I have at home, and asked it to suggest recipes only using those. I asked for something that's quicker, and uses a different base for sauce. \nThey seem pretty simple in the first glance with not very complicated aspects which made me wonder why I didn't or couldn't think of these for myself and if coming up with a recipe is just rather simple and does not need overthinking.\nI will be trying one of these tonight and will update! I'm taking votes on which one to try!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lo3je0jnbokdqjg3hgsq",
        "width": 1674,
        "height": 1662,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/drochl1n3lecxflea4jp",
        "width": 1674,
        "height": 1662,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vociqvnx8snczdytb737",
        "width": 1674,
        "height": 1662,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "h7yGo6zY7TkqxwnzL",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-21T14:33:47.966Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I wanted to compare images generated by Midjourney and Stable Diffusion that had the same or a similar prompt. I asked both to create trees that look like tennis balls (back on that tennis theme). The first image was created with Stable Diffusion, the second and third were created with Midjourney. Stable Diffusion definitely took a more realistic approach until I asked for the images to be more illustrative.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xcxi4zu9q3ieirftobvb",
        "width": 2748,
        "height": 1380,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/p1pqwtkglhp7isnp78zh",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bmyx9oi2ekdrom47gyg8",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-21T15:54:29.289Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:09:02.974Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "h8HHmoR5HMFtEYvBR",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-11T02:16:18.319Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "First iteration at the Individual Challenge. Couldn't get as much done as I hoped for so I'm going to go back in and see if I can start adding in more details for a second iteration.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  stroke(255);\n}\n\nfunction draw() {\n  background(50);\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(0, 90);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 3; i++) {\n    myTurtle.moveForward(1000);\n    myTurtle.turnRight(120);\n  }\n  \n  // Eye\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(1);\n    myTurtle.turnRight(1);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 116);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(0.7);\n    myTurtle.turnRight(1);\n  }\n  \n  // Lips\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(64, 200);\n  myTurtle.penDown();\n  myTurtle.moveTo(150, 300);\n  myTurtle.penUp();\n  myTurtle.moveTo(73, 217);\n  myTurtle.penDown();\n  myTurtle.moveTo(200, 400);\n  \n  myTurtle.pushState();\n  \n  // Gills\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(350, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  myTurtle.popState();\n}\n\nfunction drawGills() {\n  for(i = 0; i < 100; i++) {\n    myTurtle.moveForward(3);\n    myTurtle.turnRight(0.5);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/iqb5u5qfomufygkgscbf",
        "width": 750,
        "height": 748,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "hAjZwWsK84PHcoFpB",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-24T13:26:09.909Z",
    "posted": true,
    "lesson": "Params",
    "description": "Combining different styles of cartoon face drawing to create the face generator 👀 A pretty simple sketch - just wanted to try out TweakPane!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  SelectEyes: 0,\n  SelectNose: 2,\n  SelectMouth: 4,\n};\n\npane.addInput(params, \"SelectEyes\", { min: 1, max: 5, step: 1 });\npane.addInput(params, \"SelectNose\", { min: 1, max: 5, step: 1 });\npane.addInput(params, \"SelectMouth\", { min: 1, max: 5, step: 1 });\n\nfunction preload(){\n   \n  eyes1=loadImage(\"FaceAssets/Eyes1.PNG\");\n  eyes2=loadImage(\"FaceAssets/Eyes2.PNG\");\n  eyes3=loadImage(\"FaceAssets/Eyes3.PNG\");\n  eyes4=loadImage(\"FaceAssets/Eyes4.PNG\");\n  eyes5=loadImage(\"FaceAssets/Eyes5.png\");\n  \n  nose1=loadImage(\"FaceAssets/Nose1.PNG\");\n  nose2=loadImage(\"FaceAssets/Nose2.PNG\");\n  nose3=loadImage(\"FaceAssets/Nose3.PNG\");\n  nose4=loadImage(\"FaceAssets/Nose4.PNG\");\n  nose5=loadImage(\"FaceAssets/Nose5.png\");\n  \n  mouth1=loadImage(\"FaceAssets/Mouth1.PNG\");\n  mouth2=loadImage(\"FaceAssets/Mouth2.PNG\");\n  mouth3=loadImage(\"FaceAssets/Mouth3.PNG\");\n  mouth4=loadImage(\"FaceAssets/Mouth4.PNG\");\n  mouth5=loadImage(\"FaceAssets/Mouth5.png\");\n  \n  eyes = [eyes1, eyes2, eyes3, eyes4, eyes5];\n  noses = [nose1, nose2, nose3, nose4, nose5];\n  mouths = [mouth1, mouth2, mouth3, mouth4, mouth5];\n  \n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n  imageMode(CENTER);\n}\n\nfunction draw() {\n  background(255);\n  \n  push()\n  translate(width/2, height/2)\n  scale(0.25, 0.25)\n  image(eyes[params.SelectEyes -1], 0, -500);\n  image(noses[params.SelectNose -1], 0, 0);\n  image(mouths[params.SelectMouth -1], 0, 550);\n  pop()\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vn74juioszhbvb9pfsu1",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tpxnvozaesxnr0jtz558",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/nsz7uiyuffgvdbruehoa",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "hJBakZKCixJfwuBFL",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-03T03:04:25.375Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "I wanted to take a stab at my own instructions after I submitted them to my group to see what I would produce from my own process.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jfwmqy7esqgomj0x7828",
        "width": 2561,
        "height": 1962,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T03:05:24.343Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "hNfGYtTckg8WAheyT",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-02T02:29:11.247Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Extension of Challenge 2.. Would like to continue playing with more time!",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet frequency_slider;\nlet amplitude_slider;\nlet time_speed_slider;\n\nlet startX = 50;\nlet startY = 30;\nlet endX = 1000;\nlet endY = 1000;\n\nfunction setup() {\n  createCanvas(800, 800);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 100);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n  createP(\"Time Speed\");\n  time_speed_slider = createSlider(0, 100, 100);\n}\n\nfunction draw() {\n  background(0);\n  ellipseMode(CENTER);\n\n  let frequency = frequency_slider.value();\n  let amplitude = amplitude_slider.value() / 10;\n  let time_speed = time_speed_slider.value() / 1000\n\n  noiseDetail(1, 0.5);\n\n  for (i = 0; i < 2; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startX, endY, i);\n\n    let offsetX = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n    let offsetY = (noise(i*frequency + frameCount*time_speed))*amplitude*10;\n\n    stroke(255-i*100, 255, 255, 255-i*100);\n\n    push();\n    blendMode(OVERLAY);\n    rect(x + offsetX, y + offsetY, x, y);\n    rect(x + offsetX, y + offsetY, x, y);\n    pop();\n\n    noFill();\n\n    blendMode(EXCLUSION);\n    stroke(255, 255-i*100, 255, 255-i*100);\n    rect(x - offsetX, y - offsetY, 1000, 100);\n    rect(x - offsetX, y - offsetY, 1000, 200);\n\n    push();\n    blendMode(DIFFERENCE);\n    fill(255, 255, 10);\n    rect(0, 0, width, height);\n    pop();\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mn5fntqu4y8rrsjwzyk8",
        "width": 1588,
        "height": 1594,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cl1sdp5lzkt603vw5a2b",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-02T04:49:10.095Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "hPgbqMC46YTxEFzuD",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-25T17:54:50.824Z",
    "posted": true,
    "lesson": "API",
    "description": "Already had node installed on my computer so didn't have too much trouble setting everything up. \n\nI loved being able to control the temperature because it's crazy how much personality that you're able to give ChatGPT just by increasing the temperature.\n\nJust for fun, on the second one, I set the temperature to 2 to see what would happen and I got whatever that is LOL. I even tried looking up the words but they returned nothing which is pretty interesting.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lcahgb6izd93eylbbvel",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/fyxwq19grz3qfh8fkyi3",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-25T18:17:40.91Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-26T03:10:22.132Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "hRzf5cbytCSqx6ET7",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-07T22:55:31.01Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "My attempt at the Ouroboros challenge. Was messing around with shifting the RGB values of pixels based on quadratic noise. The first image is the original, followed by the 1st, and then the 3rd feed-throughs. I like the idea but I feel like it gets way too extreme when putting a lot of layers together.",
    "code": "let testImage;\nlet imagePath  =;\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction preload() {\n  testImage = loadImage(`${imagePath}`);\n  noLoop();\n}\n\nfunction setup() {\n  createCanvas(600,600);\n  noLoop();\n  noSmooth();\n  testImage.loadPixels();\n  \n}\n\nfunction draw() {\n    // background(0, 0, 0);\n  let noiseScale = .00008;\n\n  \n  testImage.loadPixels();\n  \n  for (let x = 0; x < testImage.width; x++) {\n    for (let y = 0; y < testImage.height; y++) {\n      const c = getQuick(testImage, x, y);\n      \n      c[0] = noise(x *y * noiseScale, 3* noiseScale) * 255 + c[0] + 10;\n      c[1] = noise((x*y) * noiseScale, 2* noiseScale) * 255 + c[1] + 0;\n      c[2] = noise((y*x) * noiseScale, 1* noiseScale) * 255 + c[2] + 0;\n      \n      if (c[0] >= 255) {\n        c[0] = 0 + (255 - c[0])\n      }\n      \n       if (c[1] >= 255) {\n        c[1] = 0 + (255 - c[1])\n      }\n      \n             if (c[2] >= 255) {\n        c[2] = 0 + (255 - c[2])\n      }\n      \n      setQuick(testImage, x, y, c)\n\n    }\n  }\n  \n  testImage.updatePixels();\n  image(testImage, 0, 0, 600, 600)\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sqg2vhq00dgtnj0x4xi1",
        "width": 817,
        "height": 720,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/upaphvjrwpkdfjbvc8ao",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cdbf2vzvpxkscnxvv0sp",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-08T04:43:00.735Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:18.092Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "hWMHe9YhQ4hskERGM",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-03T13:40:28.021Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Extension of Challenge 2 to make a slinkyyyy",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/oqzsituggz9y2oa1zl7b",
        "width": 996,
        "height": 596,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-03T14:55:21.857Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-05T03:00:49.905Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "hWw4yGY4YXX9R6eg7",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-11T17:52:07.652Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Lightening using the tree turtle sketch as reference.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\nlet c = 0;\nlet buildingwidth =[]\nlet buildingheight =[];\n\nfunction setup() {\n  createCanvas(700, 800);\n  noFill();\n  stroke(255);\n  background(255);\n  frameRate(40);\n//   noLoop();\n  myTurtle = new Turtle();\n  \n  for(i=0; i<100; i+=5){\n      buildingwidth[i]=random(5, 7);\n      buildingheight[i]=random(10, 20);\n  }\n}\n\nfunction draw() {\n    background(3, 8, 46);\n  myTurtle.penUp();\n  myTurtle.moveTo(350, -30);\n  myTurtle.turnTo(random(60, 100));\n  myTurtle.penDown();\n  drawBranch(random(250, 300));\n  \n//   fill(0,255,0)\n//   rect(50,50,100,100)\n  \n  for(i=0; i<100; i+=5){\n      push()\n      noStroke()\n      fill(5, 57, 97)\n      push()\n    //   translate(i*10,800)\n    //   rotate(150)\n      rect(i*10,800, buildingwidth[i]*10, -buildingheight[i]*10)\n      pop()\n      pop()\n  }\n}\n\nfunction drawBranch(length) {\n    \n  if (length < 4) {\n    return;\n  }\n  //152, 212, 207\n  stroke(128, 249, 255)\n//   c+=10;\n  \n  // draw this branch\n  strokeWeight(length / random(40, 50));\n  myTurtle.moveForward(length * 0.6);\n  myTurtle.turnLeft(random(-30, 50));\n  myTurtle.moveForward(length * 0.8);\n\n  // left child\n  myTurtle.pushState();\n  myTurtle.turnRight(random(-10, 10));\n  drawBranch(length * 0.4);\n  //drawBranch(length * random(.5, .9));\n\n  myTurtle.popState();\n\n  // right child\n  myTurtle.pushState();\n  myTurtle.turnRight(random(-80, 80));\n  drawBranch(length * 0.4);\n  //drawBranch(length * random(.5, .9));\n  myTurtle.popState();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/y5pxxa8mv194paiu8msb",
        "width": 1350,
        "height": 1538,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-11T23:28:17.35Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:12:31.573Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "hzpQm6bHifoB7Ds5g",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-20T07:14:59.99Z",
    "posted": true,
    "lesson": "Params",
    "description": "**Improved influence of Perlin Noise on Spirals** But have not quite achieved the intended effect",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Width: 200,\n  AngleFactor: 0.2,\n  StrokeWidth: 2,\n  NoiseAmp: 50,\n  RadiusFactor: 0.01,\n};\n\npane.addInput(params, \"Width\", { min: 50, max: 480 });\npane.addInput(params, \"AngleFactor\", { min: 0.05, max: 0.4 });\npane.addInput(params, \"StrokeWidth\", { min: 2, max: 6 });\npane.addInput(params, \"RadiusFactor\", { min: 0.01, max: 0.2 });\n\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  strokeWeight(2);\n}\n\nfunction draw() {\n  background(\"rgb(0,0,0)\");\n\n  noStroke();\n  \n  fill(\"rgb(24,176,28)\");\n  drawSpiral(width / 1.2, height / 1.4);\n  fill(\"rgb(218,38,38)\");\n  drawSpiral(width / 2, height / 2);\n  fill(\"rgb(38,43,218)\");\n  drawSpiral(width / 6, height / 8);\n  \n\n}\n\nfunction drawSpiral(x, y, angleFactor, radiusFactor) {\n  push();\n\n  \n  for (let angle = 0, radius = 0; radius < params.Width; angle += params.AngleFactor) {\n    let xPos = x + sin(angle) * radius;\n    let yPos = y + cos(angle) * radius;\n    \n    circle(xPos + noise(xPos-x)*10, yPos + noise(yPos-y)*10, params.StrokeWidth);\n    \n    radius+=params.RadiusFactor;\n    \n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/csopsj9tyvgbrozs6xmd",
        "width": 1200,
        "height": 1196,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wqinrpx0cvohwsdjaafp",
        "width": 1204,
        "height": 1196,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xfmfovelldoirztu55cy",
        "width": 1200,
        "height": 1196,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-20T22:16:49.607Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-21T06:00:14.12Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-21T19:42:37.498Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T03:53:52.336Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:39.906Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "i7nz2BQ63DhuG4ieb",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-05T13:38:35.9Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Utilizing linear extrude for organic looking stems - the goal is to build on this idea to make a tree",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/psytkymq0ptnuepf90he",
        "width": 1788,
        "height": 1078,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:05.785Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T22:59:33.748Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "i7sGvZXPB2bbjZn4v",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-21T02:05:18.611Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I went down a Midjourney twitter rabbithole and it was cool/crazy to see how to control the outputs more.. I wanted to do an ad campaign for shoes but it turned into this 😅",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vb8qkohyzlqjffidiiai",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/eg1ttjjtdfhb7cbfmopc",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/b5vnpgahmwgjeyvq9z6i",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-21T02:29:52.9Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-21T03:21:27.571Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-21T04:00:33.511Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:44:13.745Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:01:31.354Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:36:25.114Z"
      }
    ],
    "comments": [
      {
        "comment": "i'd buy these shoes ",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-21T02:30:08.309Z"
      },
      {
        "comment": "yasss",
        "commenter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-21T02:33:28.765Z"
      }
    ]
  },
  {
    "_id": "iB3AJqSP973hnpBiw",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-10T02:23:28.679Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "**Randomly Generated Maps of Design Methodologies** to comment on human bias while creating such maps and human tendencies to look for patterns where there are none. When 7 participants were asked to rate the map (without informing it was randomly generated), people pointed out lack of detail rather than the position or size itself being flawed, i.e they did not question the detail the map already had. Still working on the code so that (1) the Venn diagrams look more like they were drawn by humans - cleaner circles, neater overlaps, tiny circles within overlaps, and (2) methodologies have a higher probability (or bias) to fall closer to the edge they are most associated with - for if Play falls near constrained for e.g. that's a major giveaway that the map is fake",
    "code": "let processes = [\n  {\n    name: \"Double Diamond\",\n    sizeBias: \"large\",\n  },\n\n  {\n    name: \"AGILE\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Lean\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Speculative\",\n    sizeBias: \"large\",\n  },\n\n  {\n    name: \"Play\",\n    sizeBias: \"large\",\n  },\n\n  {\n    name: \"Iterative Game Design\",\n    sizeBias: \"medium\",\n  },\n\n  {\n    name: \"HCD\",\n    sizeBias: \"medium\",\n  },\n\n  {\n    name: \"Creative Learning Spiral\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Reframing\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Mathematical Thinking\",\n    sizeBias: \"medium\",\n  },\n\n  {\n    name: \"Cocreation\",\n    sizeBias: \"medium\",\n  },\n\n  // {\n  //   name: \"Design Fiction\",\n  //   sizeBias: \"small\",\n  // },\n\n  {\n    name: \"Scientific Research\",\n    sizeBias: \"large\",\n  },\n\n  // {\n  //   name: \"Critical Design\",\n  //   sizeBias: \"medium\",\n  // },\n\n  {\n    name: \"Systems Design Framework\",\n    sizeBias: \"small\",\n  },\n\n  {\n    name: \"Sketching/Explorative\",\n    sizeBias: \"medium\",\n  },\n\n  // {\n  //   name: \"Systems Thinking\",\n  //   sizeBias: \"large\",\n  // },\n];\n\nlet diameter, cXPos, cYPos;\n\nfunction setup() {\n  createCanvas(800, 600);\n  colorMode(HSB, 1);\n  noLoop();\n\n  background(255);\n  \n  push();\n  scale(0.8);\n  translate(width - 700, height - 524);\n  strokeWeight(1);\n  stroke(\"rgba(87,87,87,0.6)\");\n  line(width / 2, 0, width / 2, height);\n  line(0, height / 2, width, height / 2);\n  line(0, 0, 0, height);\n  line(0, height, width, height);\n  line(0, 0, width, 0);\n  line(width, 0, width, height);\n  pop();\n  \n  push();\n  fill(\"#686868\");\n  textSize(16);\n  textStyle(BOLD);\n  textAlign(CENTER, CENTER);\n  text(\"FAST\", 0, 0, width, 80);\n  text(\"SLOW\", 0, height-80, width, 80);\n  push();\n  rectMode(CENTER);\n  translate (60, height/2)\n  rotate(-PI/2);\n  text(\"CONSTRAINED\", 0, 0, height, 80);\n  rotate(PI);\n  text(\"UNCONSTRAINED\", 0, -height-80, width, 80);\n  pop();\n  pop();\n}\n\nfunction draw() {\n  \n  push();\n  \n  noFill();\n  \n  for (let i = 0; i < processes.length; i++) {\n    \n    //SIZE\n    diameter = noise(i) * (processes.length - i) * 8 + 100;\n\n    //COLOUR\n    let hue = random();\n    stroke(hue, 0.40, 1);\n    //noStroke();\n    fill(hue, 0.30, 1, 0.4);\n\n    //POSITION\n    // XPos [150, 650] / YPos [150, 550]\n    cXPos = random(150, 650);\n    cYPos = random(100, 500);\n    \n\n    circle(cXPos, cYPos, diameter);\n\n    //LABEL\n    push();\n    noStroke();\n    fill(hue, 1, 0.7, 1);\n    textAlign(CENTER, CENTER);\n    text(\n      processes[i].name,\n      cXPos - diameter / 2,\n      cYPos - diameter / 2,\n      diameter,\n      diameter\n    );\n    pop();\n    \n  }\n  pop();\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kvvjlqpwelbgvnikzeqs",
        "width": 1600,
        "height": 1204,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wmtmztaul0nuhszhlzlq",
        "width": 1810,
        "height": 1386,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xgdtgofzzmi2gzmgqhnx",
        "width": 1600,
        "height": 1204,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T20:45:10.971Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-28T05:20:18.591Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:27.958Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "iJHhqkwgnaiZTZeBR",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-19T16:53:47.227Z",
    "posted": true,
    "lesson": "Params",
    "description": "**Red Lolli: Learning to manipulate spirals,** and parameters have been very useful to understand the effect different variables create on the spiral",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Size: 100,\n  AngleFactor: 3,\n};\n\npane.addInput(params, \"Size\", { min: 50, max: 480 });\npane.addInput(params, \"AngleFactor\", { min: 1, max: 4 });\n\nlet rot = 0;\nconst noiseAmp = 50;\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  strokeWeight(2);\n  \n}\n\nfunction draw() {\n  background(\"rgb(225,225,225)\");\n  \n  noStroke();\n  fill(\"rgb(122,122,122)\");\n  rect(width / 2 - 5, height / 2 - 5, 10, 240, 4, 4, 4, 4);\n  \n  \n  fill(\"rgba(218,38,38,0.42)\");\n  //noFill();\n  drawSpiral(width / 2, height / 2, params.Size, params.AngleFactor);\n  \n  \n  let flag = 2;\n\n  rot += flag;\n  if (rot >= 360) rot=0;\n}\n\nfunction drawSpiral(x, y, radiusMax, angleFactor) {\n  push();\n  translate(x, y);\n  rotate(rot);\n  scale(1.2);\n\n  for (\n    let angle = 0, radius = 0;\n    radius < radiusMax;\n    angle += noise(radius) * angleFactor\n  ) {\n    circle(sin(angle) * radius, cos(angle) * radius, 6);\n    radius +=\n      noise(sin(angle) * radius * noiseAmp, cos(angle) * radius * noiseAmp) *\n      0.1;\n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fpxekdinmak6iqqgvy2c",
        "width": 1200,
        "height": 1196,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-19T17:03:47.809Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-19T17:08:42.309Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-20T22:16:44.721Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:38.944Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "iKFsCMRsLtiaRfJb7",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-08T22:55:04.921Z",
    "posted": true,
    "lesson": "Text",
    "description": "Did some more experimenting with tracey",
    "code": "// require /text/tracery.min.js\n\nconst quoteGrammar = {\nquote: [\n\"#thought.capitalize#, #insult#.\",\n\"#insult.capitalize#, #thought#.\",\n\"#question.capitalize#, #thought#?\",\n],\nthought: [\n\"#adjective# #noun#\",\n\"#verb.capitalize# #object#\",\n\"#object.capitalize# #verb#\",\n],\nadjective: [\n\"hopeless\",\n\"meaningless\",\n\"worthless\",\n\"pointless\",\n\"useless\",\n],\nnoun: [\n\"existence\",\n\"life\",\n\"efforts\",\n\"dreams\",\n\"aspirations\",\n],\nverb: [\n\"give up on\",\n\"abandon\",\n\"ignore\",\n\"fail at\",\n\"waste time on\",\n],\nobject: [\n\"your goals\",\n\"your passions\",\n\"your dreams\",\n\"your ambitions\",\n\"yourself\",\n],\ninsult: [\n\"like always\",\n\"as expected\",\n\"just another failure\",\n\"nothing new\",\n\"you'll never make it\",\n],\nquestion: [\n\"What's the point\",\n\"Why bother\",\n\"What are you even doing\",\n\"How much longer\",\n\"Is it worth it\",\n],\n};\n\nfunction main() {\nconst grammar = tracery.createGrammar(quoteGrammar);\nconst quote = grammar.flatten(\"#quote#\");\ndisplay(quote);\n}\n\nfunction display(...strings) {\nconst div = document.createElement(\"div\");\ndiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\ndiv.innerText = strings.join(\"\\n\");\ndocument.body.append(div);\n}\n\nsetTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yjfgpafm8f6tfadvj6an",
        "width": 1264,
        "height": 934,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "iKqtM2ghZcCrcaL66",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-28T20:49:28.675Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Worked more on the challenge 1 extension. Refined the animation, added more control parameters.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst points = [];\n\nconst pane = new Tweakpane.Pane();\nconst params = {\n  // speed: 1/1750,\n  speed: 0.003,\n  max_size: 22,\n  min_size: 5,\n  noise_factor: 1.1,\n  transparency: 0.75,\n  color_small: 0,\n  color_large: 320,\n};\n// pane.addInput(params, \"speed\", { min: 1/7500, max: 1/900 });\npane.addInput(params, \"speed\", { min: 0.0005, max: 0.008 });\npane.addInput(params, \"max_size\", { min: 15, max: 45 });\npane.addInput(params, \"min_size\", { min: 2, max: 14 });\npane.addInput(params, \"noise_factor\", { min: 0, max: 3 });\npane.addInput(params, \"transparency\", { min: 0.25, max: 1 });\npane.addInput(params, \"color_small\", { min: 0, max: 360 });\npane.addInput(params, \"color_large\", { min: 0, max: 360 });\n\nlet colFactor = 0;\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  ellipseMode(CENTER);\n  colorMode(HSB, 360, 100, 100, 100);\n  frameRate(40);\n\n  // lines 36-43 adapted from lines 9-16 in https://compform.net/js_lab/js_lab.html?/strategy/sketches/grid_stored.js\n  for (let y = 0; y < 30; y++) {\n    for (let x = 0; x < 30; x++) {\n      points.push({\n        x: (random(width) + random(width) + random(width)) / 3,\n        y: (random(height) + random(height) + random(height)) / 3,\n      });\n    }\n  }\n}\n\nfunction draw() {\n  background(60, 0, 20);\n\n  // lines 50-51 adapted from lines 24-25 in https://compform.net/js_lab/js_lab.html?/strategy/sketches/grid_stored.js\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n\n    let dMin = params.min_size;\n    let dMax = params.max_size;\n    let dSize = map(i, 0, points.length, dMin, dMax);\n\n    p.x += params.noise_factor * sin(i * noise(p.x));\n    p.y += params.noise_factor * sin(i * noise(p.y));\n\n    let colH = map(dSize, dMin, dMax, params.color_small, params.color_large);\n    // let alpha = (noise(i,100)*100 + (75 * cos(TWO_PI * millis() * params.speed)) + i)%100 * params.transparency;\n\n    colFactor -= params.speed;\n    if (colFactor < 0) { colFactor = 100; }\n    let alpha = ((noise(i, 100) * 100 + colFactor + i) % 100) * params.transparency;\n    fill(colH, 100, 100, alpha);\n\n    // line 69 adapted from line 26 in https://compform.net/js_lab/js_lab.html?/strategy/sketches/grid_stored.js\n    ellipse(p.x, p.y, dSize);\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/amq3mqzhnxallqnozqv7",
        "width": 1380,
        "height": 980,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "iWmakkvyHjPJ8xJ4Z",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-06T04:33:59.98Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Steer the ballerina into the T.A.R.D.I.S using objects in your literal home. Then, start all over again. Gonna call this game \"Sisyphus\".\n\nThis was a great way to raise the difficulty of a game that would have been very simple to win if you were just using the arrow keys on the keyboard. Interesting to experiment with the game experience where dealing with an unfamiliar \"controller\" is just as effective in adding challenge as the typical obstacles.\n\nAll I had to do was make the character and door really tiny and that makes it challenging too! The added time confuses the trained model and the direction could get affects, phew!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/z0y0y8d7pkx6ut2ft9bx",
        "width": 3456,
        "height": 1666,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/dedwacq1tcyn8yzlzror",
        "width": 1704,
        "height": 1500,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-06T20:15:15.757Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-07T14:10:23.734Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:53.876Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "iY36cuQWwmsHYqGXq",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-23T21:35:19.032Z",
    "posted": true,
    "lesson": "Params",
    "description": "Built off of my type sketch and played around with color!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ipnmisfve43po0pug3qb",
        "width": 1080,
        "height": 1620,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/qvktxbsgtfekqm5kv6tk",
        "width": 1190,
        "height": 1180,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T00:23:55.049Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-24T01:04:18.667Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-24T02:51:17.671Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "iYgjmRYswNaTcPGg9",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-01T03:21:57.236Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My poster for Juliana's instructions :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cmfjlaswam1lxeimrl8q",
        "width": 2048,
        "height": 2048,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-01T06:07:48.64Z"
      },
      {
        "category": "pretty",
        "voter_id": "THfyBvW9hRLZSLcRy",
        "created_at": "2023-02-01T17:34:31.827Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:27:25.403Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ie57X6chngn442bJm",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-16T21:56:45.855Z",
    "posted": true,
    "lesson": "Noise",
    "description": "**Noise influences position & rotation on p5** Wanted to see what the random walker would become when recreated with noise. Watching the piece is exciting and frustrating as you wish for it to make a mark where you know the piece would look good, but it doesn't because - noise. Random and noise has pushed me to look them as co-creators. (Is it the technology, or the people who coded the noise functions I'm co-creating with?)",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x, y, w;\nlet rotAng=0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(\"red\");\n  rectMode(CENTER);\n  angleMode(DEGREES);\n  frameRate(400);\n  \n  x = 0; y = 0;\n\n  w = 40;\n}\n\nfunction draw() {\n  translate(width/2, height/2);\n  rotAng += noise(rotAng, millis()*0.1)*2;\n  rotate(rotAng);\n  \n  rect(x, y, w-35, w-4);\n  \n  let a = noise(millis()*0.0003)*width; console.log(a);\n  let b = noise(millis()*0.0006)*height;\n  x=a; y=b;\n  \n  \n  if (x > width/2) //x=random(-width/6, width/8);\n    x=0;\n  if (x < -width/3) x=-width/20;\n    \n  if (y < -height/2) y=-height/20;\n  if (y> height/2) y=-height/20;\n  \n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/neivselznveazydcogst",
        "width": 802,
        "height": 796,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ydr285tnpq6ai5cwgt0p",
        "width": 802,
        "height": 796,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/au0vibxeoauux5dtfavs",
        "width": 802,
        "height": 796,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-16T23:42:53.122Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-17T00:57:24.172Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:37:55.522Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:36.851Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ikYyxE7btzYZ284CH",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-02T15:26:55.133Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "WEEK 5 ( 4/4): You are going to laugh at how much time I spent on this,  BUT WAIT TILL YOU SEE THE CODE FOR IT.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hkim7rjekwoj06jl1uxb",
        "width": 698,
        "height": 726,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/duig4rs3usmwtabxtilk",
        "width": 684,
        "height": 974,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "ipFkMRSMKuvuHXHC6",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-24T11:12:30.386Z",
    "posted": true,
    "lesson": "Params",
    "description": "Building upon Rama's code, my iteration of the bamboo sketch.",
    "code": "let noiseSlider, strokeWeightSlider, rotationSpeedSlider;\n\nfunction setup() {\n  createCanvas(800, 800);\n  rectMode(CENTER);\n\n  noiseSlider = createSlider(0, 10, 5, 0.1);\n  noiseSlider.position(10, 10);\n\n  strokeWeightSlider = createSlider(0, 10, 2, 0.1);\n  strokeWeightSlider.position(10, 30);\n\n  rotationSpeedSlider = createSlider(0, 2, 1, 0.1);\n  rotationSpeedSlider.position(10, 50);\n}\n\nfunction draw() {\n  background(201, 230, 149);\n\n  let rotationSpeed = rotationSpeedSlider.value();\n\n  push();\n  translate(width/2, height/2);\n  rotate(frameCount * rotationSpeed);\n\n  drawGrid();\n\n  pop();\n\n  let noiseValue = noiseSlider.value();\n  let strokeWeightValue = strokeWeightSlider.value();\n\n  strokeWeight(strokeWeightValue);\n\n  fill(255);\n  text(`Noise: ${noiseValue}`, noiseSlider.x * 2 + noiseSlider.width, 25);\n  text(`Stroke Weight: ${strokeWeightValue}`, strokeWeightSlider.x * 2 + strokeWeightSlider.width, 45);\n  text(`Rotation Speed: ${rotationSpeed}`, rotationSpeedSlider.x * 2 + rotationSpeedSlider.width, 65);\n}\n\nfunction drawGrid(){\n  for(let i=-width; i<width; i+=50){\n    for(let j=-height; j<height; j+=50){\n\n      stroke(112, 102, 74);\n\n      let n = noise(i*0.01, j*0.01) * 200 - 100;\n      n *= noiseSlider.value();\n\n      let p = noise(i, j) * 6 - 3;\n\n      fill(247+n, 232+n, 193+n);\n      rect(j, i+j, 50, 20);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/a2uldqev4qn9rz27j8wf",
        "width": 1622,
        "height": 1568,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-03-01T05:03:15.27Z"
      },
      {
        "category": "funny",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-03-01T05:48:40.802Z"
      },
      {
        "category": "nerdy",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-03-01T05:48:41.774Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ixDCW5JY5Tn3uxJAz",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-19T19:00:12.345Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Mostly figuring out how paper.js works. Inspired by an oil painting by B.C. Binning at the Vancouver Art Gallery. I can't find a title or a link, but the second image is a photo I took of the painting.\n\nStill having trouble with onFrame() in VSCode. It works in the paper.js editor, but for some reason VSCode only calls onFrame once no matter what I do.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n\nvar center = new Point(250, 250);\n\nvar triangle = [];\nvar outerCircle = [];\nvar outerInt = [];\nvar innerCircle = [];\nvar innerInt = [];\nvar group = [];\nvar rotFactor = 1;\n\nfunction onFrame(event) {\n    \nvar bg = new Path.Rectangle(0, 0, center.x*2, center.y*2);\nbg.fillColor = \"rgba(255, 255, 255)\";\n\n    for(var i=0; i<8; i++) {\n    \n        var triFill = 60 + (12*i);\n        var triSide = 71;\n        triangle[i] = new Path;\n        triangle[i].add(center);\n        triangle[i].add(new Point(center.x, center.y-(2.5*triSide)));\n        triangle[i].add(new Point(center.x+triSide, center.y-triSide));\n        triangle[i].fillColor = \"rgba(\" + triFill + \",\" + triFill + \",\" + triFill + \")\";\n    \n        outerCircle[i] = new Path.Circle(center, 100);\n        outerCircle[i].fillColor = \"rgba(0, 0, 0)\";\n        outerInt[i] = outerCircle[i].intersect(triangle[i]);\n        outerCircle[i].remove();\n    \n        var circHue = 40;\n        var circSat = 40 + (5*i);\n        var circLgt = 35 + (2*i);\n        innerCircle[i] = new Path.Circle(center, 87);\n        innerCircle[i].fillColor = \"hsl(\" + circHue + \",\" + circSat + \",\" + circLgt + \")\";\n        innerInt[i] = innerCircle[i].intersect(triangle[i]);\n        innerCircle[i].remove();\n    \n        group[i] = new Group();\n        group[i].addChild(triangle[i]);\n        group[i].addChild(outerInt[i]);\n        group[i].addChild(innerInt[i]);\n        group[i].rotate((45*i) + rotFactor, center);\n        group[i].rotate(10, center);\n    \n    }\n    \n    rotFactor++;\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/crlwyo6zzt3ewmc4rcvc",
        "width": 1000,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/scsyftv9krlonsv2iagn",
        "width": 2190,
        "height": 2190,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-21T05:16:16.364Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-21T08:23:20.844Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ixcRarScmHTWckxZs",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-01T15:21:19.69Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Based on Abha's instruction set! This was so fun and nostalgic 😁",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cyxldmxk2aoltbxjsq2x",
        "width": 2621,
        "height": 2621,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pas6ha8vuoqhyv8bcqzz",
        "width": 473,
        "height": 442,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "j4bDWyzNPFHGKhs5N",
    "author_id": "v7Xju6Lvm2Gnw5aSA",
    "author": "Justin Bakse",
    "created_at": "2023-03-07T00:51:11.266Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.0/p5.min.js\n\nlet mainImage;\n\n// palette generated by ChatGPT March 6, 2023\n// prompt: give me a spring-time palette as a json literal array of arrays of ints representing RGBA colors in the 0 to 255 range\nconst palette = [\n  [250, 202, 204, 255], // Pale pink\n  [250, 222, 176, 255], // Light yellow\n  [150, 203, 187, 255], // Mint green\n  [218, 165, 32, 255], // Goldenrod\n  [252, 228, 236, 255], // Light pink\n];\nfunction setup() {\n  createCanvas(512, 512);\n  mainImage = createImage(512, 512);\n  noiseDetail(4, 0.5);\n  noLoop();\n}\n\nfunction draw() {\n  background(palette[0]);\n\n  mainImage.loadPixels();\n\n  for (let i = 0; i < 1000; i++) {\n    const x = randomInt(width);\n    const y = randomInt(height);\n\n    dab(x, y, 30, random(palette), i);\n  }\n\n  mainImage.updatePixels();\n\n  noSmooth();\n  image(mainImage, 0, 0, width, height);\n}\n\nfunction dab(x, y, r = 10, c = [255, 255, 255, 255], seed = 0) {\n  for (let xx = x - r; xx < x + r; xx++) {\n    for (let yy = y - r; yy < y + r; yy++) {\n      // make a stipplely little circle\n      const d = dist(xx, yy, x, y);\n      const threshold = map(d, 0, r, 1, 0);\n      if (random() < threshold) {\n        // const n = map(noise(xx * 0.1, yy * 0.1, seed), 0, 1, 0.1, 0.5);\n        // let cc = blendColor(c, [0, 0, 0, 0], n);\n        // cc = blendColor(cc, [255, 255, 255, 255], map(yy, y - r, y + r, 0, 1));\n        setPixel(mainImage, xx, yy, c);\n      }\n    }\n  }\n}\n\n// math utils\n\nfunction clamp(value, minimum, maximum) {\n  if (value < minimum) return minimum;\n  if (value > maximum) return maximum;\n  return value;\n}\n\nfunction randomInt(a, b) {\n  return floor(random(a, b));\n}\n\nfunction noiseInt(x, y, z, a, b) {\n  noiseDetail(1);\n  return floor(map(noise(x, y, z), 0, 0.5, a, b));\n}\n\n// color utils\n\nfunction blendColor(a, b, mix) {\n  return [\n    lerp(a[0], b[0], mix),\n    lerp(a[1], b[1], mix),\n    lerp(a[2], b[2], mix),\n    lerp(a[3], b[3], mix),\n  ];\n}\n\nfunction lightestColor(a, b) {\n  return [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2]), max(a[3], b[3])];\n}\n\nfunction setPixel(img, x, y, color) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return;\n  }\n\n  const i = (clampY * img.width + clampX) * 4;\n  img.pixels[i] = color[0];\n  img.pixels[i + 1] = color[1];\n  img.pixels[i + 2] = color[2];\n  img.pixels[i + 3] = color[3];\n}\n\nfunction getPixel(img, x, y) {\n  const clampX = clamp(x, 0, img.width);\n  const clampY = clamp(y, 0, img.height);\n  if (clampX !== x || clampY !== y) {\n    return [0, 0, 0, 0];\n  }\n  const i = (clampY * img.width + clampX) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\nfunction keyPressed() {\n  if (key === \"S\") {\n    save(\"canvas.jpg\");\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wcb7ncnlyjwsurpmetcg",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-07T18:38:16.968Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-07T23:01:48.449Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:05.402Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "j5a6qHmqpFG2kkxCy",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-14T11:54:13.703Z",
    "posted": true,
    "lesson": "Text",
    "description": "Tried to use Tracery to generate inventions, using the sketch from the chapter as a base. Could'nt figure it out properly before running out of time.",
    "code": "// require /text/tracery.min.js\n\nconst inventionGrammar = {\ninvention: [\n\"A #product# that #problem# by #solution#.\",\n\"An innovative #product# that #problem# through #solution#.\",\n\"Introducing the #product#, the perfect solution to #problem# with #solution#.\",\n],\nproduct: [\"#adjective# #noun#\"],\nproblem: [\"#issue.a# #problem_desc#\"],\nsolution: [\n\"#verb# #object#\",\n\"#verb# #object# and #verb# #object#\",\n\"#verb# #object#, #object#, and #object#\",\n],\nissue: [\"concerning\", \"relating to\"],\nproblem_desc: [\n\"difficulty in #problem_verb#\",\n\"the problem of #problem_verb#\",\n\"the challenge of #problem_verb#\",\n],\nverb: [\"solves\", \"eliminates\", \"removes\", \"overcomes\"],\nobject: [\"#adjective# #object_noun#\", \"#object_noun#\"],\nadjective: [\n\"smart\",\n\"efficient\",\n\"portable\",\n\"sleek\",\n\"versatile\",\n\"affordable\",\n],\nobject_noun: [\n\"device\",\n\"tool\",\n\"gadget\",\n\"machine\",\n\"appliance\",\n\"instrument\",\n],\nnoun: [\n\"translator\",\n\"headset\",\n\"watch\",\n\"scanner\",\n\"printer\",\n\"camera\",\n\"drone\",\n],\nproblem_verb: [\n\"translating languages\",\n\"organizing files\",\n\"printing documents\",\n\"managing time\",\n\"finding lost items\",\n\"staying connected\",\n],\n};\n\nfunction main() {\nconst grammar = tracery.createGrammar(inventionGrammar);\nconst invention = grammar.flatten(\"#invention#\");\ndisplay(invention);\n}\n\nfunction display(...strings) {\nconst div = document.createElement(\"div\");\ndiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\ndiv.innerText = strings.join(\"\\n\");\ndocument.body.append(div);\n}\n\n// tracery doesn't load immediately, not sure why, so kludge it\nsetTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ar3xkue36lldtih7weby",
        "width": 952,
        "height": 856,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "j8zQgLufe3y4CKQGY",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-22T15:20:54.191Z",
    "posted": true,
    "lesson": "Params",
    "description": "I wanted to make an illusion based animation using sine waves, so I referred to a tutorial for this sketch.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hvgt0ojiw37jptoe6ucy",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-23T03:06:03.455Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T02:22:36.898Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-24T16:15:37.489Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jHWt6StsfCDrhT8pZ",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-07T05:57:50.596Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "This is based on the idea I had for my \"Autobiographical Game\" assignment from CC Lab last semester. Since I was not able to work on it much at all because of the strike, I tried to make a very low-fidelity and hacky version of it here.",
    "code": "https://editor.p5js.org/dasi496/sketches/9H7WKh5pY",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vjawilhbnycbtwkeh2ta",
        "width": 1242,
        "height": 882,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T07:33:56.612Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-04-14T12:08:28.323Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jJ9QrmtYF3B2P2jbL",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-01T05:45:01.295Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Challenge 1 Attempt",
    "code": "function setup() {\n  createCanvas(400, 400);\n  colorMode(HSB); // setting color mode to HSB\n}\n\nfunction draw() {\n  background(50, 0, 10);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 100; i++) {\n    // using randomGaussian() to concentrate the ellipses towards the center\n    let x = randomGaussian(width/2, 70);\n    let y = randomGaussian(height/2, 50);\n\n    // varying the diameter\n    let diameter = random(5, 25);\n\n    // generating a random hue value\n    let hue = random(0, 360);\n  \n    // using the random hue value and fixed saturation and brightness values to create a colorful ellipse\n    fill(hue, 80, 80);\n\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qbkvlgwcu91728nxn1je",
        "width": 784,
        "height": 794,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-03-01T05:48:38.546Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jdFSd3JBMJXgACyC4",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-05T04:26:51.087Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Focused on building the turret and other details of this castle tower",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/oh4y5vouuk0nrnrgbpaa",
        "width": 478,
        "height": 1174,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/t1zjejuqujel3q5swakn",
        "width": 766,
        "height": 946,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T04:31:45.897Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-05T10:11:10.01Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jduZAh7sWKgozCdq8",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-24T03:33:31.007Z",
    "posted": true,
    "lesson": "Params",
    "description": "**Tinkerbell Map:** a 2D chaotic map involving four control parameters. I happened to come across it on IG and have been trying to understand what chaos maps are.\n\n\"The chaos theory emerged from the observation that very simple dynamical systems can have complicated behaviors. A famous example is the Tinkerbell map, whose iteration gives rise to the beautiful strange attractor, simply computed by iterating the map with initial condition (−0.5, −0.5) using double precision computations).\" *(Goldsztejn, Hayes, Collins 2011)*",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Points: 2000,\n  A1: 1.02, //-1.57 to 1.03\n  A2: -0.66, // -0.66 to -0.26\n  B1: 2.1, //2.11 to -0.05\n  B2: 0.27 // to -0.5\n}\n\n//pane.addInput(params, \"Points\", { min: 100, max: 5000 });\npane.addInput(params, \"A1\", { min: -1.55, max: 1.02 });\npane.addInput(params, \"A2\", { min: -0.66, max: -0.26 });\npane.addInput(params, \"B1\", { min: -0.05, max: 2.1 });\npane.addInput(params, \"B2\", { min: -0.5, max: 0.27 });\n\nlet x = -0.5; \nlet y = -0.5;\n\nfunction setup() {\n  createCanvas(600, 600);\n  hue = floor(random(255));\n  strokeWeight(0.015);\n  stroke(\"red\");\n  \n  //noLoop();\n}\n\nfunction draw() {\n  background(0);\n  translate(width/1.7, height/1.7);\n  scale(200);\n  \n  for (let i =0, x=0.1, y=0.1; i<params.Points; i++) {\n    point(x, y);\n    let tempX = x*x - y*y + params.A1*x + params.A2*y;\n    let tempY = 2*x*y + params.B1*x + params.B2*y;\n    x = tempX;\n    y = tempY;\n    \n    // xₙ₊₁ = xₙ² - yₙ² + 1.02xₙ - 0.66yₙ\n    // yₙ₊₁ = 2xₙyₙ + 2.1xₙ + 0.27yₙ\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/r2qvvznxi1xsamwcglvq",
        "width": 1200,
        "height": 1198,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/gejgqnm5iyqiki2wyhtg",
        "width": 1214,
        "height": 1198,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/e7zsc4yjcipkuviopqlc",
        "width": 1214,
        "height": 1198,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T03:51:50.828Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:44.32Z"
      }
    ],
    "comments": [
      {
        "comment": "Very thoughtul!",
        "commenter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-24T17:35:14.969Z"
      },
      {
        "comment": "so cool!",
        "commenter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-24T20:21:13.272Z"
      }
    ]
  },
  {
    "_id": "jmDxDCa2sq3K4ZBv3",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-09T03:35:57.621Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Here's the image that I made for Ishaan for the pair sketch. I was exploring the mathematical weirdness of trig functions. Cool textile-esque pattern 👍",
    "code": "function getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}\n\n\nfunction setQuick(img, x, y, c) {\n  const i = (y * img.width + x) * 4;\n\n  img.pixels[i + 0] = c[0];\n  img.pixels[i + 1] = c[1];\n  img.pixels[i + 2] = c[2];\n  img.pixels[i + 3] = c[3];\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  pixelDensity(1);\n  noLoop();\n  noSmooth();\n}\n\nfunction draw() {\n  background(200);\n  noSmooth();\n  let img = createImage(80, 80);\n  img.loadPixels();\n  \n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n      \n      let r = noise(sin(x) ,sin(y) )*10 +100;\n      let g = noise(sin(y) ,sin(x) )*200 +50;\n      let b = noise(sin(x/y) ,sin(y/x) )*200 +10;\n\n      let bkg = color(50,50,50)\n      if ( tan((x%y)*9) < 1 && sin((y%x)*90) < 0.5) {\n        img.set( x, y, color(r,g,b));\n      } else {\n        img.set( x, y, bkg)\n      }\n      \n    }\n    \n  }\n  \n  img.updatePixels();\n  \n  image(img, 0, 0, width, height)\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uyuwejbk7ikcrbygfxyu",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T18:59:54.401Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:29.672Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jrCdBs4MXxTCz4k59",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-16T00:50:36.944Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Pair Challenge: Closest I got to recreating Rama's sketch before time ran out.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rskghhoqfw8wckprnt6q",
        "width": 1196,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T01:33:14.086Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T15:20:02.859Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jrnGRgPoHNLvgMA5D",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-06T02:19:36.648Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "I definitely need to learn more. I do not know How I made this bursting rectangle sketch. My first attempt at p5 play",
    "code": "// let x;\n// let y;\n// let speed;\n\n// let rect1;\n// let rect2;\n// let rect3;\n// let rect4;\n\n\n\nfunction setup() {\n  createCanvas(800, 800);\n  \n//   box = createSprite(20, 20);\n  \n//   x = 10;\n//   y = 10;\n//   let speed = 3;\n  \n// }\n\n// function draw() {\n//   background(220);\n  \n// //   rect(x, y, 20, 20);\n  \n//   rect1 = rect(0, 0, width, 10);\n//   rect2 = rect(0, 0, 10, height);\n//   rect3 = rect(0, 390, width, 10);\n//   rect4 = rect(390, 0, 10, height);\n  \n// //   x = x + 1;\n// //   y = y + 1;\n\n  \n// x.position\n// y.position\n\n\n//   if(rect.collide(rect1)) {\n//     x = x - 1;\n//   }\n }\n\nlet spr;\nfunction setup() {\n  createCanvas(400, 400);\n\n\n\n\n  background(50);\n\n}\nfunction draw() {\n  background(50);\n  \n    spr = createSprite(width/2, height/2,\n    40, 40);\n  spr.color = color(255);\n  spr.velocity.y = 0;\n\ndrawSprite ( spr );\n\n  if (spr.position.y >= height) {\n    spr.velocity.y *= -1;\n    // set to height to prevent \"tunneling\"\n    spr.position.y = height;\n  }\n  // constant downward speed\n  // (i.e., gravity)\n  spr.addSpeed(0.25, 90);\n  \n}\nfunction mousePressed() {\n  spr.position.y = mouseY;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vnhhjcdhlzvln65kqbfi",
        "width": 372,
        "height": 366,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T02:39:46.698Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-07T03:06:12.486Z"
      }
    ],
    "comments": [
      {
        "comment": "Love how this feels!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T02:39:58.286Z"
      }
    ]
  },
  {
    "_id": "jsLnSsFsJB7dHetqm",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-23T18:09:35.579Z",
    "posted": true,
    "lesson": "Params",
    "description": "WEEK 4 (3/4): I used eyes and lips parameters for the text of the faces which are from a Japanese emoji website. This is so cute.",
    "code": "function setup() {\n  createCanvas(400, 400);\n  strokeWeight(0.5);\n  //Centers text in the textbox ( textbox is determined in the text perameters)\n  textAlign(CENTER, CENTER);\n  \n  //eyes\n  createP(\"Eyes\");\n  eyeslider = createSlider( 0 , 5 , 0);\n\n\n\n  //lips\n  createP(\"Lips\");\n  lipslider = createSlider( 0 , 5 , 0);\n\n}\n\n\nfunction draw() {\n  background(225);\n  \n  let eye = eyeslider.value();\n  let lip = lipslider.value();\n  \n  //the face\n  textSize(100);\n  text('(      )', 50, 30, 300, 300);\n  \n  \n  //the face values changed by parameters\n  eye = [\"・ ・ \", \" ●´ `● \", \" =① ①= \", \" ✦  ✦ \", \"  •  • \"]\n  lip = [\" ⊝ \", \" ⌓ \", \" ω \", \" ‿ \", \" _ \"]\n  \n  textSize(60);\n  text(eye[int(eyeslider.value())], 50, 30, 300, 300);\n  text(lip[int(lipslider.value())], 50, 30, 300, 310);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t79lvp0vazuiqrvfvase",
        "width": 790,
        "height": 782,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xdpg4asm9hfvudcnvxhm",
        "width": 792,
        "height": 786,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wa4derclxph9whfx2tor",
        "width": 788,
        "height": 788,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T00:24:31.342Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-24T02:51:22.523Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jtYxrz5K8hnqk5tqF",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-09T07:40:09.437Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Redo of the last sketch, but with getQuick() instead of get(): 1st, 3rd, and 7th regenerations. Still needed to reduce image size, but otherwise it worked about twice as fast as get(). Also reversed the size relationship - the image gets darker and darker with regenerations.",
    "code": "let img;\nlet alphabet = [\"t\", \"u\", \"l\", \"i\", \"p\", \"s\"];\n\nfunction preload() {\n  img = loadImage(\"flowers4.jpg\");\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  background(0);\n\n  // image(img, 0, 0);\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      // let imgcolor = img.get(x, y);\n      let imgcolor = getQuick(img, x, y);\n      console.log(imgcolor);\n\n      let size = map(imgcolor[0], 0, 255, 75, 0);\n      let sp = width/img.width;\n      textSize(size);\n      fill(imgcolor[0], imgcolor[1], imgcolor[2], imgcolor[3],);\n      text(alphabet[floor(random(alphabet.length))], x*sp+sp*0.5, y*sp+sp*0.5)\n    }\n  }\n\n  // noSmooth();\n  updatePixels();\n  // noLoop();\n}\n\nfunction getQuick(img, x, y) {\n  const i = (y * img.width + x) * 4;\n  return [\n    img.pixels[i],\n    img.pixels[i + 1],\n    img.pixels[i + 2],\n    img.pixels[i + 3],\n  ];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hjoh73kmpz9emakejqxt",
        "width": 827,
        "height": 827,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kkkizjwer8aqm3ulna79",
        "width": 827,
        "height": 827,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/evsp3kqoxf1fnjkubao1",
        "width": 827,
        "height": 827,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T18:59:52.294Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:35.912Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "juuKTc8vS8EhLAMco",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-13T07:07:18.573Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Visualizing Noise and the flowy/smooth/aesthetic traits typically associated with it through Photoshop before coding with the function itself. @ruido's tutorial very accurately depict what I imagined noise()'s form to be like if I were to translate it from its chapter's descriptions and other tutorials.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zjw0ptu6aepgp3vowjfu",
        "width": 1200,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/sikgxoxnitidej9yvquc",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bdzrvl6catu5qoyqx0nf",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-13T14:52:38.345Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-13T20:18:10.626Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T06:44:07.96Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "jwSfe2pZzkXksNCvw",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-21T05:43:22.498Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Fractal generator but kept feeding it shapes!!!! Beautiful results\n\nhttps://aiartists.org/fractal-art-generators",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jy2ujmgury2axfndtjd6",
        "width": 17236,
        "height": 6983,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-21T06:35:59.73Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-21T12:42:33.023Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:42:49.69Z"
      },
      {
        "category": "nerdy",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-21T15:01:28.976Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-21T15:01:30.173Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:06:49.136Z"
      }
    ],
    "comments": [
      {
        "comment": "Love the colors!!!!",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-21T06:36:09.423Z"
      }
    ]
  },
  {
    "_id": "jyfzvbHiAms5A3a2J",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-21T03:06:23.239Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I spent more time working with Midjourney. It's insane. I asked it to draw an illustration of my childhood stuffed animal (lol). I used a real image of the stuffed animal as an input (see last image - this is an actual photo) and gave instructions on what to draw. The first results were sooo creepy (second image). I kept giving Midjourney more detailed instructions, I blended some of the output images together, and re-uploaded images that midjourney created to see how the results would change. I think the final result (first image) is pretty cute though 🥺",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/n9t5qpznygcehtq14nz5",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ecsujrnwfyfkbftoeo3y",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lmyemyujnn5vde9tmgcu",
        "width": 920,
        "height": 1396,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-21T03:17:15.637Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-21T03:20:00.195Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:02:16.755Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:36:31.807Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "k4S4dXb6MYBaZY8hA",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-10T22:02:56.552Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Pair Challenge sketch based on Alex's image",
    "code": "let img;\nlet glitchImg;\n\nfunction preload() {\n  img = loadImage('Pixel_Week_Pair.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  image(img, 0, 0);\n  \n  // Get pixel values\n  loadPixels();\n  \n  // Apply glitch effect\n  glitchImg = createImage(img.width, img.height);\n  glitchImg.loadPixels();\n  for (let x = 0; x < img.width; x++) {\n    for (let y = 0; y < img.height; y++) {\n      let index = (x + y * img.width) * 4;\n      let glitchIndex = (x + y * glitchImg.width) * 4;\n      \n      // Add random noise to red, green and blue channels\n      let r = pixels[index] + random(0, 10);\n      let g = pixels[index + 0] + random(10, 10);\n      let b = pixels[index + 2] + random(10, 10);\n      \n      // Add a \"glitch\" effect by swapping color channels at random\n      let glitchType = random();\n      if (glitchType < 0.2) { // Swap red and green\n        glitchImg.pixels[glitchIndex] = g;\n        glitchImg.pixels[glitchIndex + 1] = r;\n        glitchImg.pixels[glitchIndex + 2] = b;\n      } else if (glitchType < 0.4) { // Swap red and blue\n        glitchImg.pixels[glitchIndex] = b;\n        glitchImg.pixels[glitchIndex + 1] = g;\n        glitchImg.pixels[glitchIndex + 2] = r;\n      } else if (glitchType < 0.6) { // Swap green and blue\n        glitchImg.pixels[glitchIndex] = r;\n        glitchImg.pixels[glitchIndex + 1] = b;\n        glitchImg.pixels[glitchIndex + 2] = g;\n      } else if (glitchType < 0.8) { // Invert colors\n        glitchImg.pixels[glitchIndex] = 255 - r;\n        glitchImg.pixels[glitchIndex + 1] = 255 - g;\n        glitchImg.pixels[glitchIndex + 2] = 255 - b;\n      } else { // No glitch effect, keep original colors\n        glitchImg.pixels[glitchIndex] = r;\n        glitchImg.pixels[glitchIndex + 1] = g;\n        glitchImg.pixels[glitchIndex + 2] = b;\n      }\n      \n      glitchImg.pixels[glitchIndex + 3] = pixels[index + 3];\n    }\n  }\n  \n  // Update glitch image pixels\n  glitchImg.updatePixels();\n  image(glitchImg, 0, 0);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/atrda6do9vykogof3dr2",
        "width": 1600,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "kBkNZvNQPSkW3ocf9",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-15T08:26:15.698Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Redoing last week's sketch with the in-class feedback in mind. Does noise() make it look better than random()?",
    "code": "//require https://cdnjs.cloudfare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nfloat t = 0;\nfloat l = 1;\nvoid setup(){\n  size(600,600);\n  background(0);\n    //noStroke();\n}\n\nvoid draw(){\n  float x = noise(t);\n  float y = noise(l);\n  t = t+0.05;\n  l = l+0.05;\n  x = map(x,0,1,0, width);\n  y = map(y,0,1,0,height);\n  strokeWeight(1);\nstroke(255, 80);\n//noStroke();\nfloat r = map(x,0,1,0,255);\n  fill(y,200,x,80);\n  //ellipse(x,y/2,50,50);\n  bezier(x, y, 100, 100, 400, 400, x, y); //for petals\n    //bezier(x, y, 100, y, x, 600, y, x);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/elnsil8jj7eqad3txz4c",
        "width": 1140,
        "height": 1094,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ry2c0t2zqrhskc0fyueo",
        "width": 1188,
        "height": 1186,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-15T17:18:44.632Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kG2xewtK4jLDuzwQa",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-30T06:06:01.022Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Spent most of my time familiarising myself with the syntax and getting used to the systems of OpenSCAD. Dunno why I made a tyre but it was fun lol",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kbycnqpmcaxh9loqezgp",
        "width": 1333,
        "height": 1198,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/y8xf6cqjib53fi0a7jo8",
        "width": 1315,
        "height": 1169,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/mwp694bmxdjmdgkckpop",
        "width": 1384,
        "height": 1178,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-30T17:35:44.469Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:18:00.228Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kK7by7n3KGvN7Fv8v",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-28T08:46:55.259Z",
    "posted": true,
    "lesson": "API",
    "description": "Used the OpenAI API to generate images instead of text! Had fun playing around with temperatures. A funny thing I noticed was that lower temperatures gave less realistic images - #2 is a patterned leopard, temperature 0.3, and #3 is a colourful deer, temperature 1.9.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qm6xohycivobmhrdx6xy",
        "width": 1651,
        "height": 1439,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/i45mpfdrdzikugylsahq",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/rwxzmy37wmhyluqkippl",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "kNGEr7KTXd4NxquBA",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-07T19:47:45.501Z",
    "posted": true,
    "lesson": "Random",
    "description": "With this sketch, I tried to generatively produce color palettes and compositions like Mark Rothko. I switched to HSL and flip a coin to choose if it will be a high- or low-contrast piece and produce a background color. I then use some random logic to produce the color for the two rectangles based on the background. I really want to pass this into a displacement shader to give it a little bit more texture and variation!",
    "code": "// I opted to use a class just because I find them more convenient to work with\nclass rothkoGenerator {\n\t\tconstructor() {\n//\t\t\tthis.rectCount = math.floor(math.random()+2);\n//this is where the coinflip is made to choose between a high or low contrast composition\n\t\t\tthis.paletteContrast = round(random());\n\t\t\tthis.colorList = [];\n//i then track the color values in the constructor\t\t\t\n          this.bkgColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.oneColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n\t\t\tthis.twoColor = {\n\t\t\t\th: 0,\n\t\t\t\ts: 0,\n\t\t\t\tl: 0\n\t\t\t}\n// I also want to implement the possibility for compositions with 3 rectangles but not quite there!          \n//\t\t\tthis.threeColor = {\n//\t\t\t\th: 0,\n//\t\t\t\ts: 0,\n//\t\t\t\tl: 0\n//\t\t\t}\n            this.oneBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }\n            this.twoBox = {\n              xMiddle: 0,\n              yMiddle: 0\n            }          \n\t\t\tthis.margin = 50;\n\t\t}\n// this could definitely be optimized but the basic idea is that I generate a random background color\n// I cap the saturation at 80 and light at 90 so the program doesn't get super neon colors which isn't like Rothko\n\t\tgenerateColors() {\n\t\t\tthis.bkgColor.h = floor(random()*360);\n\t\t\tthis.bkgColor.s = floor(random()*80);\n\t\t\tthis.bkgColor.l = floor(random()*90);\n// then, dependent on the contrast value I produce the colors for the two rectangles based off of the background color\n//a high-contrast composition uses end bias for the color whereas a low-contrast composition uses middle bias\n          if (this.paletteContrast === 1) {\n\t\t\tthis.oneColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.endBias()*90+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.endBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.endBias()*10+this.bkgColor.l+5);\n\t\t\t} else {\n\t\t\tthis.oneColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.oneColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.oneColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t\n\t\t\tthis.twoColor.h = floor(this.middleBias()*20+this.bkgColor.h);\n\t\t\tthis.twoColor.s = floor(this.middleBias()*10+this.bkgColor.s+5);\n\t\t\tthis.twoColor.l = floor(this.middleBias()*10+this.bkgColor.l+5);\n\t\t\t}\n\t\t}\n  \n\t\tendBias() {\n\t\t\tlet value = random() + random();  \n\t\t\tvalue = value - 1;\n\t\t\tif (value < 0) value += 2;\n\t\t\treturn value;\n\t\t}\n  \n\t\tmiddleBias() {\n\t\t\tlet value = (random() + random() + random()) / 2;\n\t\t\treturn value;\n        }\n // this is just a way to randomize the position of the line that bounds the two rectangles       \n        divideCanvas() {\n          this.oneBox.yMiddle = floor(windowHeight / 2) + (this.endBias()*100);\n          this.twoBox.yMiddle = windowHeight-(floor(windowHeight / 2) - this.oneBox.yMiddle);\n        }\n //  here is where the rectangles are actually drawn and filled in\n  // I used quad() so I could be more granular with each point of the rectangle\n        draw() {\n          background(this.bkgColor.h, this.bkgColor.s, this.bkgColor.l);\n          noStroke()\n          fill(this.oneColor.h, this.oneColor.s, this.oneColor.l);\n          quad(this.margin, this.margin, \n               windowWidth - this.margin, this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle, \n               this.margin, this.oneBox.yMiddle\n              );\n          \n          fill(this.twoColor.h, this.twoColor.s, this.twoColor.l);\n          quad(this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, this.oneBox.yMiddle + this.margin, \n               windowWidth - this.margin, windowHeight - this.margin, \n               this.margin, windowHeight - this.margin\n              );\n        }\n          \n\t}\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tcolorMode(HSL);\n    frameRate(0.5);\n}\n\nfunction draw() {\n    let rothko = new rothkoGenerator();\n    rothko.generateColors();\n    rothko.divideCanvas();\n    rothko.draw();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mzgqcyrkb6wzw0legegv",
        "width": 611,
        "height": 783,
        "format": "webm",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-07T21:06:20.335Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-07T21:45:23.791Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-08T04:58:32.991Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kQqi6r45NsLYkZF9H",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-07T06:54:18.217Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Still figuring it out, playing with noise",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wbceg3mczhxub8bybizn",
        "width": 1592,
        "height": 1590,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-08T04:43:06.519Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-08T04:55:51.97Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:16.187Z"
      }
    ],
    "comments": [
      {
        "comment": "Oh wow HOW? ",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-08T05:52:30.257Z"
      }
    ]
  },
  {
    "_id": "kRe58jEE49PW3TsM8",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-23T21:12:10.552Z",
    "posted": true,
    "lesson": "Random",
    "description": "**Randomly Generated Text on Walls in Unity** [Interact with it on itch here.](https://reshmarosethomas.itch.io/plural-wording-procedural-generator) I've also used previous comp form work as textures on the walls and floor! This was an exercise completed as part of another class.",
    "code": "//This is only the main part of the code implementing this\n\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing TMPro;\n\n\npublic class ModifyText : MonoBehaviour\n{\n    [SerializeField]\n    TextMeshProUGUI canvasText;\n\n    string[] thinkWords = { \"Plan\", \"Reflect\", \"Question\", \"Map\", \"Converge\", \"Strategise\", \"Identify\", \"Reframe\", \"Think\", \"Analyse\", \"Evaluate\", \"Clarify\" };\n    //string[] findWords = { \"Ask\", \"Feel\", \"Research\", \"Empathise\", \"Read\", \"Observe\", \"Playtest\", \"Measure\", \"Discover\", \"Learn\", \"Check\", \"Watch\", \"Test\", \"Explore\" };\n    string[] shareWords = { \"Launch\", \"Share\", \"Present\", \"Justify\", \"Release\", \"Show\", \"Catalyse\", \"Facilitate\", \"Critique\", \"Launch\", \"Implement\" };\n    string[] playWords = { \"Make\", \"Execute\", \"Create\", \"Develop\", \"Do\", \"Design\", \"Build\", \"Prototype\", \"Visualise\"};\n\n    float timer = 0;\n    float period = 1f;\n    float prevTime = 0;\n\n    bool thinkFlag = false;\n    bool shareFlag = false;\n    bool playFlag = false;\n\n    string tempText;\n\n\n    // Start is called before the first frame update\n    void Start()\n    { \n        canvasText.text = \"<#000000>\";\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        timer += Time.deltaTime;\n\n        if (thinkFlag || shareFlag || playFlag)\n        {\n            if (timer - prevTime > period)\n            {\n                prevTime = timer;\n                tempText = canvasText.text;\n\n                if (thinkFlag)\n                {\n                    int index = Mathf.FloorToInt(Random.Range(0f, thinkWords.Length));\n                    canvasText.text = \"<#3a0ca3>\" + thinkWords[index] + \"</color>\" + \" \" + tempText;\n\n                }\n\n                tempText = canvasText.text;\n\n                if (shareFlag)\n                {\n                    int index = Mathf.FloorToInt(Random.Range(0f, shareWords.Length));\n                    canvasText.text = \"<#7209b7>\" + shareWords[index] + \"</color>\" + \" \" + tempText;\n\n                }\n\n                tempText = canvasText.text;\n\n                if (playFlag)\n                {\n                    int index = Mathf.FloorToInt(Random.Range(0f, playWords.Length));\n                    canvasText.text = \"<#f72585>\" + playWords[index] + \"</color>\" + \" \" + tempText;\n                }\n\n                if (canvasText.text.Length > 2400)\n                {\n                    canvasText.text = canvasText.text.Remove(2400);\n                }\n            }\n        }\n\n        //canvasText.text = canvasText.text.Replace('A', '4');\n    }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vi9f7agk7mnwwjbacjq7",
        "width": 1440,
        "height": 868,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/iezbyqnfdvl9rvaoyank",
        "width": 1440,
        "height": 868,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/v2agzd39fbrclj7urnve",
        "width": 1536,
        "height": 856,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-28T05:20:01.034Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:28:26.37Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T14:33:49.435Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kSusY5LjS8FJJ4gkH",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-04T05:32:54.517Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Made the second prototype for my analog game TODAY, just in time for microgames week, it's fate. You're tasked with retracing the making of lesser known Indian craft forms distributed over a deck of cards. Low strategy, High Learning Quotient.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/eskc96fcd8inihzxya54",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gjsdbne8korgykt5c5jg",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zpyadsrpukzzxb366hsi",
        "width": 3024,
        "height": 4032,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-04T06:25:45.346Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-04T22:57:00.492Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-04-06T17:03:02.278Z"
      },
      {
        "category": "funny",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-04-06T17:03:02.733Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-07T21:32:14.588Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kaX2hW8bhiNKjQLQs",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-20T19:08:24.113Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "French Shiba Inu in a turtleneck",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t9athzerqxpcpvp8w5ld",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "kecaKeF6EdE4bbs8T",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-17T02:35:28.016Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Here's the sketch I sent to Brian for the partner project! A simple isometric construction with a monochrome(ish) color palette.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vyjq5unpfosdhqc215m8",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T03:37:03.767Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-17T05:00:34.284Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kgY4bXgCBy2nizzS9",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-22T00:15:40.293Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Second part of the individual assignment! I wanted to cut the design out of the sheet of acrylic, but the laser cutter didn't cut through the sheet on the first try and the lab was closing. I'm planning on going back to properly cut it out! Also I plan to cut off the little triangles at the edges because they look weird, and I think the design would look nicer as a circle :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/b581t1vwaudbmygtr45o",
        "width": 1346,
        "height": 1302,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T16:59:47.573Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:27.597Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T20:19:57.286Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-03-23T20:40:10.411Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:57:11.46Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kiZAcE4Yk3Y2TAYTp",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-01T17:52:11.617Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "I wanted to see how well ChatGPT could generate code for OpenSCAD. This is the best result I could get for a chicken - most of the other code that ChatGPT gave me created elements that were hidden/obscured by other objects. I could still see ChatGPT being helpful as a starting point for an OpenSCAD project, but you would probably want to quickly adapt it yourself as opposed to constantly asking ChatGPT for updated code.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gevqhwnjexybnk0cijuy",
        "width": 882,
        "height": 908,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/y0mmcur4mcpuacoaajcy",
        "width": 966,
        "height": 884,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/c2biu9mdzzxrnjwvfxo0",
        "width": 1480,
        "height": 852,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-02T00:02:39.1Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:55.762Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:54.286Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kjtc7syhzvnmLC8YJ",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-24T03:45:15.269Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair sketch with Brian's code! I kept some of his original colors and I really liked these chalky textures I was getting",
    "code": "let x;\nlet y;\n\nfunction setup() {\n  createCanvas(1000, 1000);\n  background(3, 5, 31);\n  x = width / 2;\n  y = height;\n}\n\nfunction draw() {\n  \n  for (let i = 0; i < 45; i++) {\n    sketch();\n  }\n}\n\nfunction sketch() {\n  let r = 0;\n  let g = random(0,150);\n  let b = random(150,255);\n\n  let n1 = noise(x*0.7, y*0.7);\n  let n2 = noise(x*0.9, y*0.7);\n  let n3 = noise(x*7, y*9);\n\n  let nextX = x + random(-2, 2);\n  let nextY = y + random(-20, 20);\n\n  nextX = constrain(nextX, -10, width + 100);\n  nextY = constrain(nextY, -10, height + 200);\n\n  g += random(-50, 50);\n  b += random(-50, 50);\n\n  let t = frameCount;\n  stroke(r, g, b, 50);\n  fill(50+mouseX, 200-mouseY, 200, random(255));\n\n  ellipse(x-n1 - 300, y-n1-100, 2, 2);\n\n  push();\n  stroke(3, 5,31, random(255))\n  ellipse(x-n2 + 250, y-n2-100, 1, 1);\n  pop();\n\n  ellipse(x-n2 - 100, y-n2-300, 1, 1);\n  ellipse(x-n3 - 150, y-n3-500, 1, 1);\n  \n  ellipse(x-n1 + 300, y-n1-50, 1, 1);\n\n  x = nextX;\n  y = nextY;\n}\n\n// Adapted from: https://happycoding.io/tutorials/p5js/animation/random-walker\n\nfunction mousePressed() {\n  saveCanvas('myCanvas', 'png');\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nmflqnyju5lzrhg20obr",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T03:51:41.679Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-24T04:31:35.491Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "kqe6QD8xmkwWb8nSj",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-14T09:11:05.059Z",
    "posted": true,
    "lesson": "Text",
    "description": "WEEK 10 (2/4): Lately my friends have all been on dating apps so I made this to make fun of their generic profiles.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wevx5e1pycdfqfungrr3",
        "width": 1354,
        "height": 392,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cdntuuw9qltmhvgybk3x",
        "width": 1348,
        "height": 428,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/nzj8t17uezjczhfvr4nl",
        "width": 1354,
        "height": 488,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "kvzJgLb3ZxkX28rQ4",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-08T02:09:35.618Z",
    "posted": true,
    "lesson": "Random",
    "description": "Can save a random generated inspiration if you run the code!",
    "code": "//Piet Mondrian\n//Make 3 colour rectangles which changes shape and colour red, yellow, blue\n//random operation every100 seconds\n\nlet colorChoice;\n\nlet r = \"rgb(255, 20, 0)\";\nlet y = \"rgb(239, 241, 11)\";\nlet b = \"rgb(0, 9, 255)\";\n\nlet col = [r, y, b];\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  // let r = color(255, 20, 0);\n  // let y = color(239, 241, 11);\n  // let b = color(0, 9, 255);\n\n  // let col = [r, y, b];\n  //    let colorChoice;\n  // timeRect();\n  setTimeout(timeRect, 100);\n}\n\nfunction draw() {\n  push();\n  noStroke();\n  fill(0);\n  textAlign(CENTER);\n  //headline\n  textSize(30);\n  textFont(\"Courier New\");\n  text(\"Facing Colours\", 200, 60);\n  //instruct\n  textSize(15);\n  text(\"Press any key to save a copy\", 200, 370);\n  pop();\n}\n\nfunction timeRect() {\n  let x1 = 40;\n  let y1 = 150;\n  let x2 = random(60, 100);\n  let y2 = random(120, 180);\n  let x3 = random(170, 210);\n  let y3 = random(210, 300);\n\n  clear();\n\n  //rect(x, y, w, [h], [tl], [tr], [br], [bl]);\n\n  colorChoice = floor(random(0, 3));\n\n  fill(col[colorChoice]);\n  rect(40, y1, x2 + x2, y3 - y2);\n\n  colorChoice = floor(random(0, 3));\n\n  fill(col[colorChoice]);\n  rect(x1 + 200, y1 + 100, x2, x1);\n\n  colorChoice = floor(random(0, 3));\n\n  fill(col[colorChoice]);\n  rect(300, 150, 40, 40);\n\n  push();\n  strokeWeight(5);\n  strokeCap(SQUARE);\n  //vertical lines\n  //line(x1, y1, x2, y2);\n  line(x2, height - 50, x2, y1);\n  line(x3, height - 50, x3, y2);\n  line(50, height - 50, 50, 60);\n  line(300, height - 50, 300, x1 + 30);\n\n  //horizontal lines\n  line(width, y2, x2, y2);\n  line(width, y3, x3, y3);\n  line(50, 300, 300, 300);\n  pop();\n\n  push();\n  noFill();\n  rect(0, 0, 400, 400);\n  pop();\n\n  setTimeout(timeRect, 1000);\n}\n\nfunction keyPressed() {\n  saveCanvas(\"My Mondrian\", \"jpg\");\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ofa28yndgemgdng9umat",
        "width": 504,
        "height": 498,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-08T04:58:26.451Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-08T20:10:51.412Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-10T04:29:38.046Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "m7icFAZ4Zd5seTFKo",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-08T21:42:56.947Z",
    "posted": false,
    "lesson": "Random",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yt246z6g7juwhyayzpap",
        "width": 1200,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/uuzwnlgugtyqe3xzfdh1",
        "width": 1200,
        "height": 1200,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "mCHmvPXpevaQxYHhK",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-03T21:18:41.979Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Found a tutorial online to create a castle tower + played around with $fn to alter the texture",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yqlow9bigtjdvp63f5jg",
        "width": 966,
        "height": 902,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/g29z88vc14fvexjgqkmf",
        "width": 888,
        "height": 712,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pv2bkdjpfhqg3duvayfc",
        "width": 772,
        "height": 726,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T22:37:22.549Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-04T04:50:28.792Z"
      },
      {
        "category": "funny",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-04T16:13:33.218Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-04T16:13:34.151Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-05-05T05:13:29.745Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mRG7qEHDc6yy9BcvS",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-04T15:21:55.574Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "First game made with Reshma and Abha in our in class coding session",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wm7dt1eaomonfin4jtav",
        "width": 1000,
        "height": 1000,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-04T16:08:02.389Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-04T22:57:07.205Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mamTRzMDLhKPndHut",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-24T05:29:59.268Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/r1p75wzds7tvt1mabpk4",
        "width": 1158,
        "height": 1138,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-04-14T12:08:33.131Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mdKqTzgLN8cY22JKh",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-07T15:05:42.295Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Made this mostly to get a sense of animations in p5.play! This library really makes animations so easy 🤯\nThere is a slight lag every time the face changes I'm not able to figure out why - maybe next iteration",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hwq4xnqffzovfuqaj41a",
        "width": 2800,
        "height": 1600,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-07T16:08:43.791Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "meMxRFdGj9hCN3cYN",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-22T22:31:29.589Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair Challenge Prompt for Chris!",
    "code": "function setup() {\n  createCanvas(800, 800);\n\n  px = width / 2;\n  py = height / 2;\n\n  dir = 1;\n}\n\nfunction draw() {\n  background(200, 220, 255, 80);\n  \n  for(let i=0; i<width; i+=20){\n    noStroke()\n    fill(255, 200)\n    y = noise(i*0.1)*100-50\n    ellipse(i, 50+y, 100+y, 100+y)\n    fill(255, 130)\n    ellipse(i, 220+y, 80-y, 80-y)\n  }\n\n  if (dist(mouseX, mouseY, px, py) > 15) {\n    push();\n    translate(mouseX, mouseY);\n    if (mouseX < px) {\n      rotate(PI + atan((mouseY - py) / (mouseX - px)));\n    } else {\n      rotate(atan((mouseY - py) / (mouseX - px)));\n    }\n    scale(1, dir);\n    rotate(PI / 12);\n    push();\n    rotate(PI / 2);\n    // stroke(255);\n    fill(0, 0, 255);\n    push();\n    scale(3);\n    triangle(0, 0, -10, 20, 10, 20);\n    triangle(0, 30, -25, 45, 25, 45);\n    fill(255, 0, 0);\n    ellipse(0, 20, 10, 50);\n    pop();\n    pop();\n    pop();\n    px = mouseX;\n    py = mouseY;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pouubx9h8aitasxlbx8d",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T04:12:28.859Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mewjzmHcrwmQ7nwy7",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-19T18:51:21.745Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Reworking pixel type from last week into vectors so they're ready for the laser lab. Shoutout to my friend for laser cutting these for me while I was away. Can't wait to get back and try it out myself!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sopcgeh1nca5ssueyfim",
        "width": 1152,
        "height": 1152,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ucxda2azqrmfzogxptpy",
        "width": 1152,
        "height": 1152,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fjis0weh86hckcv9bejp",
        "width": 2048,
        "height": 1152,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-19T19:00:10.155Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-21T05:16:14.883Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-21T16:36:31.456Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-22T00:01:10.642Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:57:28.156Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-03-24T16:44:38.243Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mgeA4k2bazLAcfLRZ",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-16T23:44:51.224Z",
    "posted": true,
    "lesson": "Noise",
    "description": "This was made using random() and noise()",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wo2jdy67epvsytmmihoe",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-17T05:47:29.345Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:23.762Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mgmNDheJT7HHDKT8k",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-03T06:06:19.818Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Challenge 2 (Could not complete)",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet amplitude_slider;\nlet frequency_slider;\nlet speed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n\n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 10, 5, 0.1);\n\n  createP(\"Speed\");\n  speed_slider = createSlider(0, 10, 5, 0.1);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let frequency = frequency_slider.value();\n  let timespeed = speed_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    let offsetX = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n    let offsetY = (noise(i * frequency, frameCount * timespeed) - 0.5) * amplitude * 10;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bkzo0zni8seh5b4x6lf3",
        "width": 1050,
        "height": 1142,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-03-03T16:41:17.7Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "miJG2cm6J7rDTTCA2",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-05-10T02:19:36.988Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "The sketch we did in class was very hard coded, so I wanted to calculate the correlations between the turn angles, sides, and sizes to make it more parametric. It became a fun little experiment to figure out what the mathematical relationships were and how I could manipulate the sketch using them.",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js   \n\nlet myTurtle;\n\nconst params = {\n  curviness: 0.15,\n  size: 1.5,\n  rotation: 5\n};\n\nconst pane = new Tweakpane.Pane();\npane.addInput(params, \"curviness\", { min: 0, max: 0.8 });\npane.addInput(params, \"size\", { min: 0.1, max: 2.02 });\npane.addInput(params, \"rotation\", { min: 1.05, max: 50 });\n\nfunction setup() {\n  createCanvas(500, 500);\n  frameRate(30);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  background(50);\n  stroke(255);\n  strokeWeight(3);\n\n  myTurtle.penUp();\n  myTurtle.moveTo(width/2, height/2);\n  myTurtle.penDown();\n\n  for (let i = 0; i < 5; i++) {\n    for (let i = 0; i < 100 + 10*params.rotation; i++) {\n      myTurtle.moveForward(params.size);\n      myTurtle.turnRight(params.curviness);\n    }\n    myTurtle.turnRight(136.5 - 1.5*params.rotation - (params.curviness-0.1)*10*15);\n  }\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zy8vfxtyolyqc5hjmezl",
        "width": 1582,
        "height": 1028,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "mmDttQdu2mgFzrvGj",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-24T03:23:18.407Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Another offshoot of the coding challenge",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pwcv6cloydn0spzzisd4",
        "width": 1938,
        "height": 1796,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:56:43.436Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-24T05:27:27.653Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-24T06:34:41.893Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "modzR9zQzmGg8jksh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-24T05:26:16.511Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Playing around with the first sketch in Figma",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zxregzqsnwgppvs4ijs5",
        "width": 1338,
        "height": 1132,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "mrm4Ae2XEKfRNnjvY",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-23T07:30:00.564Z",
    "posted": true,
    "lesson": "API",
    "description": "Took a while to set up and configure the OpenAI API. I used the demo they have in their documentation to download and install the application and enter an API key. The actual application isn't mine, its just what OpenAI has as the demo example on github.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ee7e2aoiz7nlfc4vutl1",
        "width": 2116,
        "height": 1084,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gkfcika9aagqk0xpxc6r",
        "width": 992,
        "height": 1164,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-23T22:12:26.068Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-24T04:40:45.29Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mtyCrPmEBbu9yYsCj",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-26T01:30:41.717Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Trying patterns and Paper.js\n\n.",
    "code": "//http://sketch.paperjs.org/#V/0.12.17/S/tVM9T8MwEP0rT1maqFEpQlWllEwVzAhG0sFNLo1bY1fOQSlV/zt23BQGVMHAYPt8fnf37sOHSIsXirLoaUNcNlEalaby96srzC0JJghYKlnolSK0jdhSha3gBjvpNskt2GyhqGZsjdQMwYUttLM/vGeYTlLs/XGE0JXz1coPgqlx2MmKmwBoSK4a7lDe9PuqjUUskWM8g8QtrsdjLw1zJyQ4eAjgQPE6YNZnzHqYeyk5YQBNOzw44qO5tKWiuLt7xrFMsU5SXE+SUS2VmhvlouYooj0pZXZFNOt99Odlf9PJ0Ll0+y+89h67zI//kPabsKFf+Rfjx76hcQcruOtchmdfiUUadL5TTuUbNJ2clWzNhrpcMgyWSpSbQWh3/apLlkbD6HvrZiqmN9J8Iluwm4c7UTao/VsKa9jPFjcUyC33uEFFK0vUZr2FfxkFZHyTzEKcUKhk9nPh+uXCXSTk3v/OqTP6kRSO7ucs3X/ZdJVso+x5cfwE\n\n// Create a rectangle shaped path with its top left point at\n// {x: 75, y: 75} and a size of {width: 75, height: 75}\n\n\n\nfor (i = 0; i < 1000; i+=100) {\n  for(j = 0; j < 1000; j+= 100){\n    new Path.Circle(new Point(i, j), 15).fillColor = \"yellow\";\n    \n        new Path.Circle(new Point(75+i, 75+j), 15).fillColor = \"yellow\";\n\n    }\n}\n\nfor (i = 0; i < 1000; i+=100) {\n  for(j = 0; j < 1000; j+= 100){\n    var path = new Path.Rectangle({\n\tpoint: [i, j],\n\tsize: [75, 75],\n\tstrokeColor: 'black'\n//function onFrame(event) {\n\t// Each frame, rotate the path by 3 degrees:\n\t//path.rotate(3);\n//}\n});\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u834jbmkodfzymdumr73",
        "width": 1005,
        "height": 1005,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-27T18:07:00.479Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "mxvE8x33aB2fF8HpK",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-14T09:36:14.211Z",
    "posted": true,
    "lesson": "Text",
    "description": "WEEK 10 (4/4): LOL this is where I MANAGED TO FIx IT. My friends made up the scenarios when we were all watching a horror movie but I messed up in the results part and didn't realize till I was looking at these screenshots right now BUT YOU GET THE IDEA.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qnv4jl7sczuznyp3zdvw",
        "width": 1290,
        "height": 301,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/t1dfla2f9pdkoxnihu5s",
        "width": 1290,
        "height": 240,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gjmytvdjgnxi5suxxnbz",
        "width": 1290,
        "height": 254,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "my5d2hcbBMDwGh4pD",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-27T14:54:16.702Z",
    "posted": true,
    "lesson": "Params",
    "description": "A goofy face generator made using parameters",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xpkp28a4bcsjb0zzwk2s",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:18.562Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "n6D29EKsSkW54zBin",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-04-14T05:56:02.764Z",
    "posted": true,
    "lesson": "Text",
    "description": "Just had some fun with \"INVISIBLE\"",
    "code": "/**\n * Very simple typographic animation.\n *\n */\n//\nlet txt = [\n  \"imperceptible, microscopic\",\n  \"unseen, inconspicuous\",\n  \"unseeable, concealed, occult\",\n  \"covert, deceptive, obscured\",\n  \"disguised, ethereal, gaseous\", \n  \"ghostly,  impalpable, wraithlike\",\n  \"imponderable, inappreciable\",\n  \"indiscernible, infinitesimal\",\n  \"insensible, intangible,perdu\",\n  \"masked, obliterated,unreal\",\n \"screened, supernatural, veiled\",\n  \"unapparent, undisclosed, ideal\",\n  \"ungraspable, unnoticeable\",\n  \"unobservable, unperceivable\",\n  \"unviewable, ulterior, vaporous\",\n \n  ,\n];\n\n// \"not in sight\"\n// \"out of sight\"\n\n//let txt=\"INVISIBLE\";\nlet font;\n\nfunction preload() {\n  font = loadFont(\"data/PlayfairDisplay-Black.ttf\");\n}\n\nfunction setup() {\n  createCanvas(650, 550);\n\n  background(255);\n  //for loop to cycle through the data\n  for (let i = 0; i < txt.length; i = i + 1) {\n    //write the contents of the array to the console\n    print(txt[i]);\n\n    //choose a random color\n    //fill(random(100, 255), 0, random(100, 255));\n    /*\n    Write contents of the array to the canvas\n    and move where it draws down vertically by 20 pixels \n    each time through the loop\n    */\n      fill(0);\n  noStroke();\n\n  textFont(font);\n  textSize(40);\n    text(txt[i], 40, 75 + (i * 30));\n  }\n}\n\nfunction draw() {\n\n\n  fill(255);\n  let s = random(20);\n  ellipse(random(width), random(height), s, s);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qe0lljrpgzeb3hc4w4ob",
        "width": 606,
        "height": 510,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:51.567Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "n9DKAReaPDskj53EJ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-13T21:54:34.977Z",
    "posted": true,
    "lesson": "Text",
    "description": "Alter ego generator! It was fun trying to come up with the components to make for goofy outcomes.",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\n  start: \"You are $people, a $age year-old $occupation from $location. Your hobbies include $hobby, $hobby, and $hobby \",\n  age: `${Math.floor(Math.random()*80 + 19)}`,\n  occupation: \"mattress salesperson | meth dealer | consultant | investor | hermit | deadbeat | cook | fixer | wanderer | IT specialist | merchant | blacksmith\",\n  location: \"Florida | Asgoth | Milan | Madrid | Rio de Janeiro | an evil place | Texas | Tenochtitlan | Prussia | Mongolia \",\n  people: \"Musosil | Maria | Desmodia | Hamir | Melchior | Tama | Marlene | Grandene | Bill | Kevin | Greg | John\",\n  hobby: \" Kant philosophy | baking | bowling | crushing the opposition | hustling | billiards | walking empty streets | amassing power | socialism\"\n};\n\n\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\n\n\ndocument.body.innerHTML = \n`\n    <style>\n        body {\n            background-color: #0f0f0f;\n            color: cornsilk\n        }\n    </style>\n    ${g.expand()} \n`",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lvzovmia5imkvlmhztlc",
        "width": 797,
        "height": 160,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ecqdr2tsohuddts0yzfe",
        "width": 797,
        "height": 161,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/wcgujf655qn206dertsx",
        "width": 797,
        "height": 159,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T02:42:14.595Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nDLPkPAxSMtDen8Es",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-17T19:30:55.068Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I played around in ChatGPT to see how much \"creative coding\" it could achieve by using reference such as: in the style of Dali, in the style of the impressionists, etc. Here is the final code it gave me for something originally based on an Infinity Mirror Room with some ethereal music - it ended up looking a bit unsettling",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ww24bkrlde8jgfpl6acd",
        "width": 2540,
        "height": 1220,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/qkkjz8j27bsaow2hnkag",
        "width": 2540,
        "height": 1220,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qouvt0vg8wv3uishhkke",
        "width": 2540,
        "height": 1220,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-18T06:16:28.326Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-18T17:58:52.095Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nFb6j5AbPFXNeQfnr",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-14T01:34:48.92Z",
    "posted": true,
    "lesson": "Text",
    "description": "Text animation continuation, I mapped each point as a # sign using the Pilowlava font.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dyokkl7n6do75ayasqpz",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:30:25.927Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nGjnxT24QhBRXjLK9",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-05-05T02:17:48.742Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "DNA helix pattern! I thought this would be simple but it took sooo much longer than expected",
    "code": "helixradius = 15;\ntwistnum = 5;\ntwistheight = 100;\n\nfor (i=[0:180:180]) {\n    color([1,1,0])\n    rotate([0,0,i])\n    linear_extrude(height=twistheight*twistnum, twist=(360*twistnum), $fn=200)\n    translate([helixradius,0,0])\n    square([2,7]);\n}\n\nfor (i=[0:1:8], j=[0:1:twistnum-1]) {\n    color([i%2,0,(i+1)%2])\n    translate([0,0,(i*twistheight/8) + (j*twistheight)])\n    rotate([0,90,(i*45) - ((i%2)*90) + 11.5])\n    cylinder($fn=20, h=helixradius*2 + 1, r=1.25, center=true);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/r9uhzk8fam0obletzbak",
        "width": 1169,
        "height": 1215,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zwqr0cgar8ksyk3pnufi",
        "width": 1249,
        "height": 539,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/p5j4ro4s8evxfmfuezcs",
        "width": 1049,
        "height": 1210,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-05-05T03:27:48.344Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:14:55.594Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nJNfKm2KaekNXxxzd",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-23T16:58:21.947Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "I tried recreating an abstract print I found online completely from scratch using paper.js. This took much longer than anticipated as I had to play with multiple paths and .subtract a number of times to make the irregular shapes on the right",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/if0enge7o1daopycvhfp",
        "width": 1150,
        "height": 700,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T17:32:58.704Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:02:57.303Z"
      }
    ],
    "comments": [
      {
        "comment": "It's beautiful\n",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T17:33:09.746Z"
      }
    ]
  },
  {
    "_id": "nJqDLcpEvJqhjFwdb",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-01T08:42:44.052Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My response to Julia's instructions! I think I missed or messed up one or two of the steps, but it was fun 🌸",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gvre7jf0acwbn6i2opip",
        "width": 1496,
        "height": 1496,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hlm55vgm09vlekbfdrqm",
        "width": 1496,
        "height": 1496,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T21:33:49.212Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nKjfd3yhLowYGLNiR",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-13T23:28:09.313Z",
    "posted": true,
    "lesson": "Text",
    "description": "I was playing around with Tracery and wanted to see what I could do with HTML tags but ran out of time! I want to continue to explore this though",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uo8kl5h346y2wzvi1jgl",
        "width": 1728,
        "height": 1560,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-13T23:49:10.028Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-04-13T23:58:28.041Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T02:41:59.088Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nTrMDWRuct77gGJpA",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-10T06:26:28.602Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Continuing the flower theme this week - adapting Sahiti's sketch to control the scale and colours of the flowers based on the greyscale and x/y positions of the pixels.",
    "code": "let img;\n\nfunction preload() {\n  img = loadImage(\"sahiti.png\");\n}\n\nfunction setup() {\n  createCanvas(400, 326);\n  noLoop();\n  rectMode(CENTER);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(255);\n\n  // image(img, 0, 0);\n\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y+=3) {\n    for (let x = 0; x < img.width; x+=3) {\n\n      let col = img.get(x, y);\n      console.log(col);\n\n      let size = map(lightness(col), 0, 100, 3, 1);\n      console.log(size);\n\n      let offset = width/img.width;\n      let colRed = map(lightness(col), 0, 100, 0, 255);\n      let flowerCol = color(colRed, 0, 255 * noise(x,y));\n\n      let tX = x * offset;\n      let tY = y * offset;\n\n      push();\n\n      translate(tX, tY);\n      scale(size);\n      rotate(random(360));\n      noStroke();\n        \n      let xPos = 0;\n      let yPos = 0;\n\n      fill(flowerCol);\n      ellipse(xPos-(offset/3),yPos-(offset/3), offset/1.5)\n      ellipse(xPos+(offset/3),yPos-(offset/3), offset/1.5)\n      ellipse(xPos-(offset/3),yPos+(offset/3), offset/1.5)\n      ellipse(xPos+(offset/3),yPos+(offset/3), offset/1.5)\n\n      fill(0);\n      ellipse(xPos, yPos, offset/3);\n\n      pop();\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ch0izxyckn2cdhvuim1j",
        "width": 1587,
        "height": 1293,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:46.809Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T08:49:55.635Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ndrzQoTtx3jM7HnpS",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-05T05:44:11.17Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "No code 3D explorations with cinema 4D.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/g4tnkjkc6yinv39elwfw",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/tixrusjihz2sx1bkpsv8",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:23.21Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:16:03.613Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T10:20:42.637Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nhfdhpe4YeRAk4n4S",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-07T18:14:28.006Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Playing with fire - here is the image I created for Keren for the pair challenge",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nuuqjjvrdeqoxa2e19ml",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-07T23:14:26.784Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-08T00:50:09.647Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:16.242Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-03-10T17:19:18.842Z"
      }
    ],
    "comments": [
      {
        "comment": "Really like this!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T19:50:55.191Z"
      }
    ]
  },
  {
    "_id": "nivBb7Gove8ijJThQ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-01T02:11:19.729Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Constellation map with Shristi's instructions 🤯",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fpyr6qgkdkqohvilbouf",
        "width": 1749,
        "height": 2481,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-01T06:08:02.727Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T01:12:54.18Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nk3WkuFz7zsBLc7HN",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-21T00:44:21.212Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "**ChatGPT vs Google Search on Unity Debugging: Chat GPT wins by -6 Queries!** Encountered a frustrating problem where I couldn't get my canvas drop-downs on Unity to drop down. I had used drop-downs fairly easily before, so I couldn't wrap my head around why they weren't working. I started by using Google's search, leading to Unity forums, Reddit threads and Stack Overflow, but none of them led me in the right directions. I looked up tutorials on Google Search and they didn't help either. Post exactly 11 search queries, I switched to ChatGPT, not expecting much because it was probably trained on much of the same data. However its ability to summarize all possibilities for the error helped me narrow down to arrive at a the heart of the problem AND get detailed instructions to solve the problem in 5 questions. That is 6 queries less than Google Search!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/v5au9g0lqahvztdvanh4",
        "width": 1520,
        "height": 856,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/wj1ntgb9pmd6ypg84le5",
        "width": 1474,
        "height": 1472,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/enhvxrmvo7pqed9facyu",
        "width": 1250,
        "height": 1138,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T01:42:39.703Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:24.035Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nkXBdGHwBv4wAghwg",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-24T03:49:22.262Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Exploring typography and blend modes in paper.js. I was trying to capture the often chaotic feeling of New York in this piece!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/inzcigniddmneykn00zv",
        "width": 1678,
        "height": 1440,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/nh4etraafxnjgonq3ibn",
        "width": 1680,
        "height": 1438,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-24T05:27:14.265Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-24T16:13:13.668Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nscfxfpnDYzKeAYuv",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-10T07:10:36.993Z",
    "posted": true,
    "lesson": "Random",
    "description": "Recreating Piet Modrian's work!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/e9to1p1sd8ocfmirkukj",
        "width": 1084,
        "height": 1178,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-10T13:05:45.069Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T14:19:09.792Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nuwRwhCMf3bvFksgJ",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-19T22:00:59.067Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "So I tried the same thing that I did with ChatGPT this time using Phind. Immediately, this was a lot more useful (and less scary) than ChatGPT. \n\nFor one, Phind is much better at outputting the networks visually than ChatGPT. This is a LOT more convenient to work with than ChatGPT's text-only approach.\n\nPhind did have the same issue as ChatGPT though, where it would create operators that didn't exist in TD. However, it was much better at correcting itself when you specified that the operator didn't exist. I couldn't tell if this was a result of the different ways that ChatGPT and Phind work, but the results from Phind were a lot more useful than what I would get from ChatGPT.\n\nWhat I also really liked about Phind is that it was more or less summarizing the results from a Google search and, more importantly, it gave you the results it was pulling from. This made it much easier to go about researching and troubleshooting specifically what I needed whenever I ran into an issue",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ra7t5nmulv3qehseffkw",
        "width": 1280,
        "height": 720,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/qg1f0cdhbm5imufp5bbt",
        "width": 1493,
        "height": 840,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-20T19:55:42.283Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nv72EZkKXtrRuzLck",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-16T04:45:22.534Z",
    "posted": true,
    "lesson": "Noise",
    "description": "WEEK 3 (3/4)\" my cool bendy thingy? idk, it started off as a bunch of lines but it didn't look as good but i liked the way this looked in the end.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/p8v707tqq2eadv1ose88",
        "width": 576,
        "height": 570,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/exvy8jtongeus9lkwh3y",
        "width": 426,
        "height": 388,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/uf0wpaoziqtsz7yezdlg",
        "width": 814,
        "height": 808,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-16T04:47:32.49Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T05:06:24.403Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:29.84Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nvDu9yo2FmoEeWijp",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-09T22:50:28.136Z",
    "posted": true,
    "lesson": "Random",
    "description": "Pair challenge with Rama and Aabah! We created an abstract scene of a rainy day.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yxngnixlrwbopwqtaliy",
        "width": 1060,
        "height": 1070,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:44:34.037Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-10T13:05:38.448Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "nyhprKtogNHPxj5xK",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "created_at": "2023-01-30T19:26:29.717Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My sketch for John's instructions",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vkdc5jqemzgy2jxuckrd",
        "width": 2457,
        "height": 1967,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T02:04:12.998Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "o87S8RtJxtajBSFTN",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-12T23:17:46.519Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Ripples caused by moving the mouse - using noise\nBased on the class activity sketch",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(800, 800);\n}\n\nlet movement = 0;\n\nfunction draw() {\n  \n  \n  background(0);\n  \n  ripple(300, 400, 6, 120, 250, 255);\n  ripple(600, 200, 10, 20, 50, 255);\n  ripple(1200, 300, 12, 170, 20, 255);\n\n}\n\nfunction ripple(c, r, a, R, G, B){\n   // const steps = 200;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    // const radius = 300;\n  \n  stroke(R, G, B);\n   for (let step = 1; step <= c; step++) {\n    const a1 = map(step - 1, 0, c, 0, a*PI);\n    let a2 = map(step, 0, c, 0,  a*PI);\n    if (a2 >= a * PI) a2 -= a * PI;\n     \n    let x1 = centerX + sin(a1) * r ;\n    let x2 = centerX + sin(a2) * r;\n    let y1 = centerY + cos(a1) * r;\n    let y2 = centerY + cos(a2) * r;\n      \n      // \n      x1 += (noise(a1, mouseX, frameCount * 0.01) - 0.5) * 150;\n       x2 += (noise(a2, mouseX, frameCount * 0.01) - 0.5) * 150;\n       y1 += (noise(a1, mouseY, frameCount * 0.01) - 0.5) * 150;\n       y2 += (noise(a2, mouseY, frameCount * 0.01) - 0.5) * 150;\n    \n     line(x1, y1, x2, y2)\n   }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pa1s9bqw2yisgl1znkpd",
        "width": 1588,
        "height": 1594,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-13T20:18:08.953Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-15T08:35:08.553Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "o8X5L6r4DWw8kT8jE",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-06T05:37:46.481Z",
    "posted": true,
    "lesson": "Random",
    "description": "Inspired by Anni Albers. I was stuck a little with how to control the random more here, but it was cool how some of the results got pretty close using just random( ).",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gridSizeX = 12;\nlet gridSizeY = 9;\nlet gridWidth = 50;\nlet gridHeight = 100;\nlet margin = 100;\n\nfunction setup() {\n  createCanvas(gridSizeX * 50 + 200, gridSizeY * 100 + 200);\n}\n\nfunction draw() {\n  noLoop();\n  background(220);\n  // let colors1 = [color(176, 173, 138), color(35, 32, 33), color(196, 193, 186), color(158, 149, 144), color(165, 153, 139), color(134, 131, 127), color(146, 135, 115) , color(205, 186, 166), color(211, 198, 145)];\n  let colors1 = [color(176, 173, 138), color(35, 32, 33), color(196, 193, 186), color(158, 149, 144), color(165, 153, 139), color(134, 131, 127), color(146, 135, 115) , color(205, 186, 166)];\n  let colors2 = [color(176, 173, 138), color(35, 32, 33), color(196, 193, 186), color(158, 149, 144), color(165, 153, 139), color(134, 131, 127), color(146, 135, 115)];\n\n  for (let i = 0; i < gridSizeY; i++) {\n        for (let j = 0; j < gridSizeX; j++) {\n          let xpos = j * gridWidth + margin;\n          let ypos = i * gridHeight + margin;\n\n          let randomColor1 = colors1[floor(random(colors1.length))];\n          let randomColor2 = colors2[floor(random(colors2.length))];\n\n          stroke(random(7,20), random(5), random(5), random(130, 200));\n          strokeWeight(random(10)/100);\n          rect(xpos, ypos, gridWidth, gridHeight);\n\n          for (let k = 0; k < 12; k++) {\n              print(k % 2);\n              if (k % 2 === 1) {\n                fill(randomColor2);\n              } else {\n                fill(randomColor1);\n              }\n              rect(xpos, ypos + (gridHeight / 12) * k, gridWidth, gridHeight / 12);\n          }\n        }\n      }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/p1xbl7iiitdjd0d88bkj",
        "width": 1600,
        "height": 2200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-06T06:15:34.907Z"
      },
      {
        "category": "pretty",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-06T16:36:45.489Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-06T17:44:40.603Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:08:32.235Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-06T21:24:46.911Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-09T14:43:50.957Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "o92GXQx82cyekaCbf",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-06T21:36:21.956Z",
    "posted": true,
    "lesson": "Random",
    "description": "Inspired by Piet Mondrian's Tableau No. 2/Composition No. VII",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\n// Inspiration: Piet Mondrian's Tableau No. 2/Composition No. VII\n// https://www.guggenheim.org/artwork/3007\n\nlet shapes;\nlet num = 50;\n// let n;\n// let a;\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  //background(205);\n  //background(232, 199, 70);\n  //background(204, 175, 61);\n  background(166, 155, 111),\n  \n  generateRectangles();\n  generateBorder();\n  generateCorners();\n}\n\nfunction generateRectangles() {\n  //n = floor(random(0, 1)); - was supposed to generate variables to determine values for later use\n  \n  //Generate Gold vertical rectangles\n  \n  push();\n  for(i = 0; i < num; i++) {\n    fill(204, 175, 61);\n    stroke(1);\n    strokeWeight(3);\n    rect(random(0, 500), random(0, 600), 50, 100); \n  }\n  pop();\n  \n  //Generate Silver vertical rectangles\n  \n  push();\n  for(i = 0; i < num + 15; i++) {\n    fill(205), random (80, 100);\n    stroke(1);\n    strokeWeight(3);\n    rect(random(0, 500), random(0, 600), 50, 100);  \n  }\n  pop();\n  \n  //Generate Gold horizontal rectangles\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(232, 199, 70);\n    stroke(1);\n    strokeWeight(3);\n    rect(random(0, 500), random(-600, 0), 50, 100); \n  }\n  pop();\n  \n  //Generate Silver horizontal rectangles\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num + 15; i++) {\n    fill(205, random (80, 100));\n    stroke(1);\n    strokeWeight(2);\n    rect(random(0, 500), random(-600, 0), 50, 100); \n  }\n  pop();\n}\n\nfunction generateBorder() {\n  \n  //Left Border\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num + 50; i++) {\n    fill(205, random(65, 100));\n    rect(random(0, 700), random(0, 50), 50, 100); \n  }\n  pop();\n  \n  //Right Border\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num + 50; i++) {\n    fill(205, random(65, 100));\n    rect(random(0, 700), random(-600, -650), 50, 100); \n  }\n  pop();\n}\n\nfunction generateCorners() {\n  \n  //Upper Left Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(0, 150), random(0, -100), 50, 100); \n  }\n  pop();\n  \n  //Upper Right Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(0, 150), random(-500, -600), 50, 100); \n  }\n  pop();\n  \n  //Lower Left Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(500, 600), random(0, -100), 50, 100); \n  }\n  pop();\n  \n  //Lower Right Corner\n  \n  push();\n  rectMode(CENTER);\n  rotate(90);\n  for(i = 0; i < num; i++) {\n    fill(205, random(80, 100));\n    rect(random(500, 600), random(-500, -600), 50, 100); \n  }\n  pop();\n}\n\n//I wanted to add a variable that would randomize if the rectangles were horizontal or vertial but I wasn't able to properly implement this\n\n/* if(a == 1) {\n      rotate(90);\n    } else if (a == 0) {\n        rotate(0);\n      } */",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/prubtoyvk1hcods4n2ol",
        "width": 895,
        "height": 897,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-07T00:15:34.889Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-07T03:25:25.197Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-07T20:15:38.852Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-07T21:45:06.477Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "oEt4bm9Hn5JLFupso",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-06T03:29:47.771Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "using everyday objects instead of arrow keys to play a game of personalized patterns. Ran out of time to work on color profiles. I love teachable machine for all its flaws, and it works for prototyping. Might try using poseNet next!",
    "code": "let video;\nlet classifier;\nlet label;\n//load model\nfunction preload(){\n  classifier = ml5.imageClassifier('https://teachablemachine.withgoogle.com/models/5dy6qiirj/')\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // background(255, 200, 200);\n  background(0);\n  rectMode(CENTER);\n  textAlign(CENTER);\n  video = createCapture(VIDEO);\n  video.hide();\n  classifyVideo();\n}\nfunction  classifyVideo(){\n  classifier.classify(video, gotResults);\n}\n\nfunction gotResults(error,results){\n    if(error){\n      console.error(error);\n      return\n    }\n      label = results[0].label;\n      classifyVideo()\n    }\n\nfunction draw() {\n  noStroke();\n  const rows = 50;\n  const cols = 50;\n  const squareSize = 30;\n  image(video,0,0,video.width*0.2,video.height*0.2);\n\n  for (let i = 50; i < width - 50; i = i + 50) {\n    for (let j = 50; j < height - 50; j = j + 50) {\n      const x = j * squareSize; // Calculate the x position of the square\n      const y = i * squareSize;\n       fill(0);\n      rect(width/2,10,40,20);\n      fill(255);\n      text(label, width/2, 10);\n      \n      //LEFT KEY\n      if (label == 'Up') {\n      fill(\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50\n        );\n         ellipse(i, j, 20, 20);\n      }\n\n      if (label == 'Right') {\n        background(0);\n        //    fill(random(0,130),random(0,100),random(150,250));\n        //     push();\n        //     translate(x + squareSize / 2, y + squareSize / 2);\n        //     rotate(PI/6);\n        //     rectMode(CENTER);\n        //     rect(i,j,30,30);\n        //     pop();\n      }\n      if (label == 'Down') { //nice colors\n        fill(\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50\n        );\n\n        ellipse(i, j, 50, 30);\n      }\n      if (label == 'Left') {\n        //change colors\n        fill(\n         random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50,\n          random(150, 250) + noise(1) * 50\n        );\n\n        ellipse(i, j, 30, 50);\n      }\n    }\n  }\n}\n  \n  class Me {\n  constructor() {\n    this.x = 200;\n    this.y = height - 50;\n    this.w = 50;\n    this.h = 50;\n  }\n\n  body() {\n    // fill(130, 210, 10);\n    // rect(this.x, this.y, this.w, this.h);\n    image(mc, this.x, this.y, this.w, this.h);\n  }\n  // home() {\n  //    if (scene == 4) {\n  //      this.y = height / 2;\n  //    }\n\n  move() {\n    if (keyIsDown(37)) {\n      this.x -= 3;\n    }\n    if (keyIsDown(39)) {\n      this.x += 3;\n    }\n    if (keyIsDown(40)) {\n      this.y += 3;\n    }\n    if (keyIsDown(38)) {\n      this.y -= 3;\n    }\n  }\n  }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jnslkkwcv8h0sgudrw9i",
        "width": 1768,
        "height": 1666,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/z5xw2antmtnpqoihdx2s",
        "width": 2472,
        "height": 1682,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-06T20:15:13.131Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:32:57.587Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "oLAfxjepWSTkKyZ9j",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-28T05:52:35.15Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "**Challenge 1**",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(\"rgb(50,50,50)\");\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 100; i++) \n  {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    let x = noise(i*10, 0)*(width);\n    let y = noise(i*40, 5)*(height);\n\n    // the diameter shouldn't always be 10, it needs to vary\n    // needs to vary 5-20, seems to be evenly distributed\n    // small circles seemed to be drawn first!\n    // let diameter = 10;\n    let diameterNoise = max(noise(i, 1), noise(i, 5));\n    let diameter = diameterNoise*i/4.5 + 6;\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    let hue = diameter*15;\n    console.log(hue);\n    fill(hue, 100, 100);\n    ellipse(x, y, diameter, diameter);\n    \n  }\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qph7zsaks9m79trmze86",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/x2rrpjajxnrwlpp5ukby",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/o9gt2ixusecqekg6bkpo",
        "width": 802,
        "height": 802,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:09.617Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "oLF4yci8cujuzQeTt",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-31T04:54:57.622Z",
    "posted": true,
    "lesson": "Music",
    "description": "More playing around with Reason... I wanted to experiment with importing a Midi file into tone.js. First clip is a little track I generated in Reason which I imported into tone.js using this:\n\nhttps://tonejs.github.io/Midi/\n\nWould be cool to figure out how to go back and forth and play more with the midi files",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gmk7ziztxrtbezymztvv",
        "width": 2076,
        "height": 512,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/qwiywm0qifqfph8gg10g",
        "width": 1718,
        "height": 1548,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:16:44.526Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "oMgErs3KjvrhNPs5b",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-26T21:22:54.746Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "I think this works!! Would love to improve though.",
    "code": "// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(\"black\");\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  //Maybe should have used\n  //let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 300; i = i + 5) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n\n    //x axis need to change the noise value\n    let x = noise(i / 2) * width;\n    //  console.log(x, \"Sahiti\");\n\n    //y axis need to change the noise value from above\n    let y = noise(i / 2.5) * height;\n    //  console.log(y, \"Sahiti2\");\n\n    // the diameter shouldn't always be 10, it needs to vary\n    //let diameter = 10;\n    let diameter = map(noise(i/4), 0, 1, 5,27);\n    \n   // console.log(diameter, \"Sahiti4\");\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    // Mapping colors with i\n    \n    //TRING HSB FOR FIRST TIME\n    //HUe, Color, Saturation\n    h = map(noise(i / 20), 0, 1, 30, 350);\n //   console.log(h, \"Sahiti4col1\");\n    s = map(noise(i * 80), 0, 1,70, 100);\n //   console.log(s, \"Sahiticol2\");\n    b = map(noise(i *100), 0, 1, 90, 100);\n  //  console.log(b, \"Sahiticol3\");\n\n    fill(h, s, b);\n\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/aflkbbfqhhvckr321ddb",
        "width": 377,
        "height": 377,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/aqa2vdy5y2rnlcnotgwf",
        "width": 377,
        "height": 372,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "oRkbmqTAW483baLHc",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-12T02:28:28.964Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Bonus sketch for this week. Wanted to see how ChatGPT handles Turtle Graphics out of curiosity. Like in the Creative AI week, I took the time to sit down with the AI and put it through its processes to see how it comes up with its own sketches and how it chooses to iterate on them. As with what I have noticed throughout my experiments with ChatGPT it creates simple prompts and builds upon them when asked. Also I noticed that it will either use functions from older libraries or make up functions that sound similar to existing ones. I would have to comb through the code to make sure that the correct functions are being called. Overall when asked to make prompts it will be as generic as possible unless I decide to give it a specific task to complete.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(220);\n  turtle = new Turtle();\n  turtle.penUp();\n  turtle.moveTo(width / 2, height / 2);\n  turtle.penDown();\n}\n\nfunction polygon(sides, size) {\n  angle = 360 / sides;\n  //turtle.penColor(color);\n  for (i = 0; i < sides; i++) {\n    turtle.moveForward(size);\n    turtle.turnRight(angle);\n  }\n}\n\nfunction draw() {\n  turtle.moveForward(100);\n  turtle.turnRight(90);\n  //turtle.penColor(color('red'));\n  turtle.moveForward(100);\n  turtle.turnRight(90);\n  //turtle.penColor(color('green'));\n  turtle.moveForward(100);\n  turtle.turnRight(90);\n  //turtle.penColor(color('blue'));\n  turtle.moveForward(100);\n  \n  polygon(3, 50, \"red\");\n  polygon(4, 75, \"green\");\n  polygon(5, 100, \"blue\");\n  polygon(6, 125, \"orange\");\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/patqrnqhejd4utq9jp8d",
        "width": 599,
        "height": 598,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "oYXTX2md2FzPQHTkj",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-02T22:18:56.021Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Extension of the Line Wave Challenge. Made multiple lines and changed radius and hue with noise",
    "code": "let amplitude_slider;\n\nfunction setup() {\n  createCanvas(700, 700);\n  createP(\"Frequency\");\n  frequency_slider = createSlider(10, 800, 200);\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(100, 800, 200);\n  createP(\"Time Scalar\");\n  timeScalar_slider = createSlider(100, 800, 200);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(220);\n  let frequency = 20;\n  let amplitude = 120;\n  let timeScalar = 800;\n\n  noiseDetail(5, 0.05);\n  for (j = 0; j <7; j++) {\n    let startX = 100;\n    let startY = 635 - 90 * j;\n    let endX = 630;\n    let endY = 635 - 90 * j;\n    for (i = 0; i < 1; i += 0.007) {\n      let x = lerp(startX, endX, i);\n      let y = lerp(startY, endY, i);\n\n      let offsetX =\n        (noise(i * frequency + millis() / timeScalar) - 0.5) * amplitude;\n      let offsetY =\n        (noise(i * frequency + millis() / timeScalar) - 0.5) * amplitude;\n      strokeWeight(.3)\n      fill(noise(i * frequency + millis() / timeScalar)*100+250, 100, 100)\n      ellipse(x + offsetX, y + offsetY, 80+ offsetY, 80+ offsetY);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fzjiantzdfypeinquloq",
        "width": 700,
        "height": 700,
        "format": "webm",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T00:54:19.954Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ob2u7yvB4MQpBnczi",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-24T04:01:58.574Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Exploring with joining things into a compound shape but couldn't get anywhere further than this. Looks pretty interesting though!",
    "code": "for (var i = 10; i > 6; i--){\n    var startPoint = new Point (300 - (20*i),300 - (20*i))\n    var pointB = new Point (startPoint.x + 200, startPoint.y);\n    var pointC = new Point (\n        startPoint.x + (startPoint.x * (Math.sqrt(3)/3)), \n        startPoint.y + (startPoint.y * (Math.sqrt(3)/3) - (20*i))\n        )\n    var path2 = new Path.Line(pointB, pointC);\n    var path3 = new Path.Line(pointC, startPoint);\n    var path1 = new Path.Line(startPoint, pointB);\n    path2.strokeColor = 'black'\n    path3.strokeColor = 'black'\n    path1.strokeColor = 'red'\n\n\n\n}\n\n\n\nfor (var i = 0; i < 7; i++) {\n    var startPoint = new Point (300 - (20*i),300 - (20*i))\n    var pointB = new Point (startPoint.x + 200, startPoint.y);\n    var pointC = new Point (\n        startPoint.x + (startPoint.x * (Math.sqrt(3)/3)), \n        startPoint.y + (startPoint.y * (Math.sqrt(3)/3) - (20*i))\n        )\n    var path2 = new Path.Line(pointB, pointC);\n    var path3 = new Path.Line(pointC, startPoint);\n    var path1 = new Path.Line(startPoint, pointB);\n    path2.strokeColor = 'black'\n    path3.strokeColor = 'black'\n    path1.strokeColor = 'red'\n\n\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t7gmrnj2pnrshxkyz2bw",
        "width": 1080,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-08T21:58:18.033Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "obgBB8tzExZrcCoKD",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-17T18:37:32.059Z",
    "posted": true,
    "lesson": "Noise",
    "description": "**Pair Challenge: Noisy spirals on top of Chris' beautiful noise map.** Late, as this is not what I wanted to do - I wanted to plot Perlin noise spirals as plotted by Aidan Lincoln (check inspiration), but couldn't figure it out in time. If anybody has any ideas on how to achieve this, please let me know!",
    "code": "let img;\nlet X = 0, Y = 0;\nlet x1, y1;\nlet radius = 0, angle = 0;\n\nfunction preload() {\n  img = loadImage(\"Chris-NoiseFields.png\");\n}\n\nfunction setup() {\n  createCanvas(600, 600);\n  background(220);\n  \n\n  noStroke();\n  angleMode(DEGREES);\n  colorMode(HSB);\n\n  x1=X;\n  y1=Y;\n\n  // noLoop();\n}\n\nfunction draw() {\n  image(img, 0, 0, width, height);\n  translate(width / 2, height / 2);\n  \n  \n  X=50; Y=60;\n  x1=X;\n  y1=Y;\n  \n  push();\n  \n  translate(noise(millis()*0.0001)*width - width/2, 0);\n  scale(2);\n  for (radius = 0, angle=0; radius <= width / 3; radius += 0.01, angle += 1) {\n    fill(noise(angle*0.01, radius)*255+100, 80, 150);\n    ellipse(x1, y1, 2, 2);\n\n    x1 = X + radius * sin(angle);\n    y1 = Y + radius * cos(angle);\n  }\n  pop();\n  \n  X = -160;\n  x1 = X;\n  Y = -60;\n  y1 = Y;\n\n  push();\n  translate(noise(millis()*0.0001)*width - width/2, noise(millis()*0.0001)*height - height/2);\n  scale(1.5);\n  for (radius = 0; radius <= width / 2.5; radius += 0.01, angle += 1) {\n    //fill(\"blue\");\n    fill(noise(angle*0.1, radius)*250, 80, 150);\n    ellipse(x1, y1, 2, 2);\n\n    x1 = X + radius * sin(angle) ;\n    y1 = Y + radius * cos(angle) ;\n    \n    \n  }\n  pop();\n  \n  X = 120;\n  x1 = X;\n  Y = -80;\n  y1 = Y;\n  \n  push();\n  \n  translate(0, noise(millis()*0.0001)*height - height/2);\n  scale(2);\n  \n  for (radius = 0; radius <= width / 4; radius += 0.01, angle += 1) {\n    //fill(\"blue\");\n    fill(noise(angle*1, radius)*120, 80, 150);\n    ellipse(x1, y1, 2, 2);\n\n    x1 = X + radius * sin(angle) ;\n    y1 = Y + radius * cos(angle) ;\n    \n    //radius+= sin(angle)*0.1;\n    // x1 = X + radius * sin(angle) * noise(radius*0.1)*2;\n    // y1 = Y + radius * cos(angle) * noise(radius*0.3)*2;\n  }\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u6bd4tbj4iirydqkam5x",
        "width": 1204,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/uogpm14yanow4stskgxb",
        "width": 1002,
        "height": 994,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/treqyk2bdmlsrbfd9wwh",
        "width": 1200,
        "height": 1200,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T20:16:34.511Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-17T21:00:33.856Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:41.112Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "odMBdhM9AywfieGue",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-14T03:20:03.963Z",
    "posted": true,
    "lesson": "Text",
    "description": "Part 2 of my generic response text generating program. I tried to experiment with inputting buttons but I couldn't get that to work unfortunately so I came up with the idea to have console.log show the corresponding question to the generic answer to maybe have some kind of conversation with this sketch.",
    "code": "// Partially adapted from https://compform.net/js_lab/js_lab.html?/text/sketches/title/title.js\n\ninjectInterface();\ndocument.getElementById(\"message\").textContent = generateMessage();\n\nfunction generateMessage() {\n  \n  var emotions = [\n    \"content\",\n    \"happy\",\n    \"thoughtful\",\n    \"provoked\",\n    \"sad\",\n    \"scared\",\n    \"angry\",\n    \"tired\",\n    \"suprised\",\n    \"out of it\",\n  ];\n  \n  var thought = [\n    \"getting some homework done\",\n    \"grabbing lunch\",\n    \"check my email soon\",\n    \"getting back home soon\",\n    \"checking out the new book store\",\n    \"going home\",\n    \"taking a walk in the park\",\n  ];\n  \n  var action = [\n    \"go home\",\n    \"grab a snack\",\n    \"go for a run\",\n    \"take a break\",\n    \"play some games\",\n    \"read a book\",\n    \"take a nap\",\n  ];\n  \n  var book = [\n    \"a novel I found in a bookstore\",\n    \"a magazine\",\n    \"a textbook that I need to read for school tomorrow\",\n    \"an e-book on my Kindle\",\n    \"an article for my research\",\n    \"a paper that I have to grade\",\n    \"a comic book\",\n  ];\n  \n  var creature = [\n    \"a human\",\n    \"a cat\",\n    \"a dog\",\n    \"a fish\",\n    \"an AI\",\n    \"a message that was pre-recorded\",\n    \"your conscious\",\n    \"your sub-conscious\",\n    \"your computer\",\n    \"your phone\",\n  ];\n  \n  var emotionalstate = sample(emotions);\n  var thoughts = sample(thought);\n  var actions = sample(action);\n  var books = sample(book);\n  var being = sample(creature);\n  \n  var message = \"\";\n  if(Math.random(0, 1) < 0.15 ) {\n    console.log('Hello, how are you today?');\n    message = `Hello, right now I'm ${emotionalstate}.`;\n  } else if(Math.random(0, 1) < 0.3) {\n    console.log('What are you thinking about right now?');\n    message = `I'm thinking about ${thoughts}.`;\n  } else if(Math.random(0, 1) < 0.45) {\n    console.log('What do you want to do?');\n    message = `I want to ${actions}.`;\n  } else if(Math.random(0, 1) < 0.6) {\n    console.log('What are you reading right now?');\n    message = `I'm reading ${books}.`;\n  } else if(Math.random(0, 1) < 0.75) {\n    console.log('What are you?');\n    message = `I'm ${being}.`;\n  }\n  \n  return message;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#message {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"message\">Message</div>\n\t</div>\n`\n  );\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/euah7qbt5ydzljfcy0sg",
        "width": 1916,
        "height": 958,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "odhNyBoY9bCcjG9S5",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-28T02:00:44.903Z",
    "posted": true,
    "lesson": "API",
    "description": "Revisiting Random",
    "code": "//variables\nlet particles = [];\nlet brushSize = 10;\nlet rectW = 200;\nlet rectH = 200;\nlet moneyCount = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  stroke(0);\n  background(0, 128, 128);\n  textAlign(CENTER);\n  textSize(24);\n  text(\"Click and drag mouse on canvas\", width / 2, rectH / 2);\n}\n\n//drawing the layout\nfunction draw() {\n  background(0, 128, 128);\n  fill(220);\n  rect(width / 2, height / 2, 10, height/2);\n  \n  // update and display particles\n  for (let i = 0; i < particles.length; i++) {\n    particles[i].update();\n    particles[i].display();\n    if (particles[i].isDead()) {\n      particles.splice(i, 1);\n    }\n  }\n}\n\n// Particle class definition\nclass Particle {\n  constructor(x, y, size) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(random(-1, 1), random(-1, 1));\n    this.acc = createVector(0, 0);\n    this.size = size;\n    this.lifespan = 255;\n  }\n\n  // update particle position and lifespan\n  update() {\n    this.acc = p5.Vector.sub(createVector(mouseX, mouseY), this.pos);\n    this.acc.setMag(0.1);\n    this.vel.add(this.acc);\n    this.vel.limit(4);\n    this.pos.add(this.vel);\n    this.lifespan -= 5;\n  }\n\n  // display the particle\n  display() {\n    noStroke();\n    fill(255, this.lifespan);\n    ellipse(this.pos.x, this.pos.y, this.size, this.size);\n  }\n\n  // check if particle is dead\n  isDead() {\n    return this.lifespan < 0;\n  }\n}\n\nfunction mousePressed() {\n  brushSize = 10;\n}\n\n// generate particles on dragging and increase size based on seconds\nfunction mouseDragged() {\n  let s = second();\n  brushSize = s * 2;\n  particles.push(new Particle(mouseX, mouseY, brushSize));\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/snfxr031jwdpk5jhb6vd",
        "width": 822,
        "height": 824,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "ohqFjjfmjDNN3m38q",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-05-05T12:07:29.297Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Final Iteration of my castle! Added some surrounding walls and towers.",
    "code": "$fn = 90;\ndepth = 5;\nbaseRectW = 30;\nbaseRectH = 20;\n\nrightRectW = 15;\nrightRectH = 40;\nbigCylinderDiam = 131;\n\nminiTopRectW = 15;\nminiTopRectH = 7;\nminiTopRectCylinderDiam = 72;\n\nmainBlockW = 140;\nmainBlockH = 55;\nupperBlockW = 120;\nupperBlockH = 18;\n\nmodule buttress() {\n    union() {\n    color(\"white\") cube([baseRectW, depth , baseRectH]);\n\n    translate([baseRectW/2, 0, baseRectH]) {\n        color(\"white\") cube([rightRectW, depth , rightRectH]);\n    }\n\n    translate([0, 0, baseRectH]) {\n        difference() {\n        color(\"white\") cube([rightRectW, depth , rightRectH]);\n            color (\"#3242a8\") {\n                translate([-31,49,40]) rotate([275,0,0])  sphere(d = bigCylinderDiam, center = false);\n            translate([-31,-44,40]) rotate([265,0,0])  sphere(d = bigCylinderDiam, center = false);\n            }\n        }\n        \n    }\n    translate([baseRectW/2, 0, baseRectH + rightRectH]) {\n            difference() {\n        color(\"white\") cube([miniTopRectW, depth , miniTopRectH]);\n        color (\"#3242a8\") { \n                translate([3,29,27]) rotate([275,0,0])  sphere(d = miniTopRectCylinderDiam, center = false);\n                translate([3,-24,27]) rotate([265,0,0])  sphere(d = miniTopRectCylinderDiam, center = false);\n        }\n        }\n    }\n    }\n}\n\nmodule halfWall() {\n    difference () {\n    color(\"white\") cube([30, 5 , 60]);\n\n    translate ([60,-15,15]) color (\"#3242a8\") sphere(50);\n    }   \n\n}\n\n\nmodule fullWall () {\n    translate([0,0,0]) halfWall();\n    translate([60,0,0]) mirror([1,0,0]) halfWall();\n}\n\nmodule pillar() {\n    color(\"white\") {\n        translate([0,0,0]) cylinder(h = 100, r= 20, center = false);\n        translate([0,0,120]) cylinder(40,2,0);\n    }\n    color (\"#3242a8\") {\n    translate([0,0,100]) sphere( 22);\n    }\n    \n}\n\n//color(\"#d69e3e\") {\n\nfor (i = [0:7]) { \ntranslate([0,25*i - depth,0]) buttress();\ntranslate([baseRectW* 6,25*i - depth,0]) mirror([1,0,0]) buttress();\n\n}\n\ncolor(\"white\") translate([baseRectW - 10,-10,0]) cube([mainBlockW, 190 , mainBlockH]);\n\ncolor(\"white\") translate([baseRectW , -5,mainBlockH]) cube([upperBlockW, 180 , upperBlockH]);\n\ntranslate([30,0,0]) pillar();\n\ntranslate([150,0,0]) pillar();\n\ntranslate([250,-70,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ntranslate([-70,-70,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ntranslate([-70,250,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ntranslate([250,250,-2.5]) scale([1.5,1.5,1.5]) pillar();\n\ncolor(\"white\") translate([50,25,60]) cube([80, 135 , 40]);\ndifference() {\n    translate([0,160,0]) scale([3,3,3]) {\n        translate([0,0,0]) buttress();\n        translate([60,0,0]) mirror([1,0,0]) buttress();\n    }\n    translate([90,190,150]) rotate([110,0,0]) color (\"#3242a8\") cylinder(50,30,30);\n}\n\n\nfor (i = [-1:3]) { \n    translate([60 *i,-65,0]) fullWall();\n}\n\nfor (i = [-1:3]) { \n    translate([60 *i,240,0]) fullWall();\n}\n\nrotate([0,0,90]) {\n    for (i = [-1:3]) { \n    translate([60 *i,55,0]) fullWall();\n    }\n}\n\nrotate([0,0,90]) {\n    for (i = [-1:3]) { \n    translate([60 *i,-240,0]) fullWall();\n    }\n}\n\ntranslate([90,90,0]) {\n    color(\"white\") cube([300, 310 , 5], center = true );\n\n}\n\ntranslate([90,90,60]) {\n    difference() {\n         color(\"white\") cube([300, 310 , 5], center = true );\n        color (\"#3242a8\") cube([260, 260 , 8], center = true );\n        \n    }\n}\n//}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/aojx224pwj9ifsc7bjvn",
        "width": 1101,
        "height": 778,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:14.414Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ojWNmoXWkwXgGXZgE",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-20T05:48:06.929Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Spent way too much time playing around with Midjourney 😅. I was initially just making some artistic pieces but the whole game changed when I saw someone else make architectural sketches and plans in the Discord.\n\nI first tried just getting architectural concept sketches in the style of an architect that I really like (Luis Barragan). These were incredible and I definitely wish I could live in a place like this 😭😭😭! \n\nBut what was even crazier is that you could tell Midjourney to make architectural floor plans which is pretty unreal to me. Obviously, the floor plans are definitely not up to code or even significant in engineering value. But there's definitely a point to be made where the images provide an incredible starting point that could later be iterated on.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/syvrq9jkbex0xwdyltqy",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/azhsknfhl3kwyolai5vh",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zsnntweu0tv3eiip2xzi",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-20T06:43:09.368Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-20T19:54:54.698Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-21T02:47:56.123Z"
      }
    ],
    "comments": [
      {
        "comment": "Ooooh Lovely. Did you prompt the textures and watercolor stylings too? ",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-20T06:43:08.037Z"
      },
      {
        "comment": "I actually didn't specifically prompt \"watercolor\" although I wonder if the prompt of \"architectural sketch\" accounted for that since watercolors are pretty common in that style.",
        "commenter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-04-20T22:45:29.816Z"
      }
    ]
  },
  {
    "_id": "osNsQGn3Gce8u5dwc",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-09T17:15:19.348Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "WEEK 6 (3/4): MINECRAFT BEE PIXEL BY PIXEL AND I ALSO MESSED UP ON COLROING",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rlbj87c3sjksp525krir",
        "width": 270,
        "height": 264,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:44.512Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ow4HADFbhXst986LZ",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-17T15:38:03.037Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I used the circle example from the chapter as a starting point for these sketches!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zx2tgjzjdd1vk7e3inu7",
        "width": 1082,
        "height": 1082,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dzv8koxmbkcacrvjeuis",
        "width": 1078,
        "height": 1076,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dpgmdm1uylpphkivwj0e",
        "width": 1102,
        "height": 1090,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T15:39:14.218Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pKNR7xRRhL3wsdr7q",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-28T04:41:02.918Z",
    "posted": true,
    "lesson": "API",
    "description": "My take on the twist challenge. I was actually surprised with how easy it was to make ChatGPT respond to a very specific input. All I did was have a single entry instructing ChatGPT to give 3 recommendations if I input the name of an artist followed by a number, with the number representing the scale of how similar the recommendations should be. \n\nWith literally just that I was able to get an even better interface than what I got with the API. However, I think the quality of the responses was SIGNIFICANTLY better when using the API than with just the web version of ChatGPT",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/s5qx1bq3jxdhfcay6ajv",
        "width": 1616,
        "height": 1024,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "pMcnBaay4AesbkvWa",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-20T19:01:23.362Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Part 1 of the individual challenge. After experimenting with paths I drew up a small sketch of simplified mountains with time I had over Spring Break. Part 2 should be posted up later once I take photos of the physical end product.",
    "code": "// language paperscript\n// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.15/paper-full.min.js\n// Remember: blue - vector cut, red - vector engraving, black fill - raster engraving\n\n// Mountain 1\n\nvar myPath1 = new Path();\nmyPath1.strokeColor = 'blue';\nmyPath1.add(new Point(250, 350));\nmyPath1.add(new Point(50, 350));\nmyPath1.add(new Point(150, 200));\nmyPath1.add(new Point(190, 260));\n//myPath1.closed = true;\n\n// Mountain 2\n\nvar myPath2 = new Path();\nmyPath2.strokeColor = 'blue';\nmyPath2.add(new Point(190, 260));\nmyPath2.add(new Point(300, 50));\nmyPath2.add(new Point(450, 350));\nmyPath2.add(new Point(250, 350));\n\nvar myPath3 = new Path();\nmyPath3.strokeColor = 'red';\nmyPath3.add(new Point(190, 260));\nmyPath3.add(new Point(250, 350));\n\n// Mountain 1 detail\n\nvar myPath4 = new Path();\nmyPath4.fillColor = 'black';\n//myPath4.strokeColor = 'black';\nmyPath4.add(new Point(150, 210));\nmyPath4.add(new Point(122, 250));\nmyPath4.add(new Point(150, 250));\nmyPath4.closed = true;\n\nvar myPath5 = new Path();\nmyPath5.fillColor = 'black';\n//myPath5.strokeColor = 'black';\nmyPath5.add(new Point(140, 260));\nmyPath5.add(new Point(130, 340));\nmyPath5.add(new Point(125, 335));\nmyPath5.add(new Point(134, 265));\nmyPath5.closed = true;\n\n// Mountain 2 detail\n\nvar myPath6 = new Path();\nmyPath6.fillColor = 'black';\n//myPath6.strokeColor = 'black';\nmyPath6.add(new Point(300, 60));\nmyPath6.add(new Point(265, 130));\nmyPath6.add(new Point(300, 130));\nmyPath6.closed = true;\n\nvar myPath7 = new Path();\nmyPath7.fillColor = 'black'\n//myPath7.strokeColor = 'black'\nmyPath7.add(new Point(280, 170));\nmyPath7.add(new Point(260, 320));\nmyPath7.add(new Point(250, 285));\nmyPath7.add(new Point(265, 190));\nmyPath7.closed = true;\n\n/* var triangle1 = new Path.RegularPolygon(new Point(150, 300), 3, 100);\ntriangle1.fillColor = \"'#e9e9ff'\"; */\n\nfunction onKeyDown(event) {\n  if (event.key === \"s\") {\n    downloadAsSVG();\n  }\n}\n\nfunction downloadAsSVG(fileName) {\n  // use default name if not provided\n  fileName = fileName || \"output.svg\";\n\n  // create a data url of the file\n  var svgData = project.exportSVG({ asString: true });\n  var url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(svgData);\n\n  // create a link to the data, and \"click\" it\n  var link = document.createElement(\"a\");\n  link.download = fileName;\n  link.href = url;\n  link.click();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lspczdtwkz5sgwozms41",
        "width": 721,
        "height": 588,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:09.579Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pSNgNpbk5Ava2rYGM",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-26T14:13:37.744Z",
    "posted": true,
    "lesson": "API",
    "description": "Twist challenge - ChatGPT was very quick at creating a good, basic poem generator with just one request. However, I had to ask it multiple times to automatically restart asking questions again after generating a poem - it eventually understood after asking \"After each poem is generated, please ask the same questions again - do not stop\". I also attempted asking ChatGPT to disregard certain questions, which it was generally able to do successfully. I was also able to add three additional questions successfully; however, ChatGPT interestingly reverted to its old behavior and didn't automatically restart asking questions again after generating a poem. This time, when I asked it to start asking questions again, the poem generator broke down and even integrated the questions themselves into the poem.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sloznf2jttdrdvob4g49",
        "width": 1464,
        "height": 970,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gs2bonsbgwyrcuijt9an",
        "width": 1218,
        "height": 1268,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ymzhwz6clpmvnizgls45",
        "width": 1074,
        "height": 1286,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-26T18:05:23.906Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pSth2tDcZZvg7rzFz",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-08T03:27:36.555Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Pixel Ouroboros challenge. Using an image of a card back, I wanted to see if I could try and slowly create more visual static across the whole image and attempt to obscure the original material.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bbigrrb7y8da32nnn4cv",
        "width": 582,
        "height": 862,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hrjy5gh5vxlx1lwyaa03",
        "width": 597,
        "height": 585,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ukoolvthcblpdofkvfvo",
        "width": 599,
        "height": 597,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-08T04:42:38.859Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:20.682Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pX4kauE4BK5e3YsYB",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-27T17:42:21.184Z",
    "posted": true,
    "lesson": "API",
    "description": "Playing around with a different APIs for this sketch. I explored a lot of different options on RapidAPI but I think their Fetch code changed recently as I was consistently receiving errors in the console log and couldn't figure out how to resolve the issue. I was running out of time so I decided to follow a tutorial to get this Jokes API set up in Visual Studio Code. The code fetches a new joke from the Joke API every time you refresh the page.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t6edg4fh2ynwg4vyzccn",
        "width": 1564,
        "height": 550,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "pYCsmPS7LXvp4fLWK",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-23T19:25:00.78Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "WEEK 7 ( 4/4 ): THIS MONSTER",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xsqu38aqfkjjosduyddj",
        "width": 982,
        "height": 984,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/csjwfvweagcuuefapxef",
        "width": 594,
        "height": 598,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T19:26:54.606Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:38.824Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pfsFE9RJJNxnfdWFk",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-10T16:09:20.647Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "it's a get()-set()-go on the digital knitting. these tapestries are \"stitched together\" sketches based off of random + noise renderings.",
    "code": "function setup() {\n  createCanvas(400, 400);\n  // colorMode(HSB);\n}\n\nfunction draw() {\n  let m=noise(2);\n  background(m+millis*0.01,random(200),m*millis()*0.2);\nimg = createImage(100,100);\nimg.loadPixels();\n\n  for(let y=0;y<img.height;y++){\n    for(let x=0;x<img.width;x++){\n      let c= color(random(y,x),random(x,y), random(100,255));\n      img.set(x/m,y*m,c);\n    }\n  }\n  img.updatePixels();\n    noSmooth();\nimage(img,0,0,width,height);\n  push()\n  translate(width/2,height/2)\n  rotate(3*PI/2);\n  image(img,width/2*m,0,width,height);\n  pop()\n  \n    push()\n  translate(width,height)\n  rotate(PI);\n  image(img,0,0,width,height);\n  pop()\n\n//     image(img,width/2,height/2,width,height);\n // noLoop();//\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kgxdupjarh5kmq3pppdc",
        "width": 1600,
        "height": 1600,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jsmh9hw9d3wrcsmygaq1",
        "width": 1600,
        "height": 1600,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fi8xzygib5jdshgkhysm",
        "width": 806,
        "height": 802,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T16:15:20.628Z"
      }
    ],
    "comments": [
      {
        "comment": "This is cool!!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T16:30:49.884Z"
      }
    ]
  },
  {
    "_id": "pgCQGEzYuKwkiuM8d",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-12T00:00:44.659Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Playing around with some ~shapes~",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mde7mlsoodjccwxzahg0",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tfmeczpn0jmd2iqdpyky",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/oe3gge8uxt8h0mqumlt2",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T11:44:14.208Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:13:18.434Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pkZjn9MXvCLR9WvBf",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-20T20:02:29.631Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "**Blue Willow's attempt at generating a labelled diagram of parts of a flower** revealed that it is not very good at (possibly not trained in) diagrams. The three images are in the reverse order of generation. It took few rounds of refining the prompt and regeneration to find a diagram, as most of the direct results of the prompt produced colorful artistic renderings of drawn flowers. I also find the distorted letters that DALLE and Blue Willow produce to be interesting. Is the smeared, approximated aesthetic of AI generated art going to be a norm?",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gkd7gmooiwik8abrjaq7",
        "width": 1024,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fbmvhjzzepqpu7gg7k0d",
        "width": 1024,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/av8ln95porsbh34rdfwx",
        "width": 1024,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:00:04.475Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:42:50.441Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pqBs5KALsQWqd3cju",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-22T06:41:44.589Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "First part of the individual challenge. Spent a while making patterns on paper.js and converted them into workable pieces on Illustrator.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fttj9v1zs4tlujtvqjdo",
        "width": 1451,
        "height": 1268,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bfnlzlc0jiebtoiebanh",
        "width": 832,
        "height": 1227,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:30.177Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:33:45.253Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ptG2XB43gnfD6HxSp",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-26T00:04:40.295Z",
    "posted": true,
    "lesson": "API",
    "description": "This is the week to try out the skipped weeks. In this particular case: Comp Sound. I use p5.sound to make my letterform interactive. It currently only accepts amplitude levels but with more time I’ll try to add a particle visualiser for the fft as well.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kpcejdg8oewo5y1mrj81",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/kp6l0fs7bst6qnksmuhk",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-26T02:27:44.872Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-26T03:10:26.515Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-28T01:14:49.571Z"
      }
    ],
    "comments": [
      {
        "comment": "love this",
        "commenter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-28T01:15:04.121Z"
      }
    ]
  },
  {
    "_id": "pvs7djQwR9wxFShyc",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-19T16:26:34.2Z",
    "posted": true,
    "lesson": "Params",
    "description": "Inspired by Sol Lewitt's Broken Bands of Color in Four Directions at the MoMA, adapted to be editable.",
    "code": "const bricks = { \n  width: 50,\n  height: 25,\n  rotation: 0,\n}\n\nlet colours = [\"red\", \"yellow\", \"blue\", \"green\", \"orange\", \"purple\"];\nlet colPos = 0;\n\nconst pane = new Tweakpane.Pane();\npane.addInput(bricks, \"width\", { min: 5, max: 100 });\npane.addInput(bricks, \"height\", { min: 5, max: 50 });\npane.addInput(bricks, \"rotation\", { min: 0, max: 360 });\n\nfunction setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n  noStroke();\n  noLoop();\n  colours = shuffle(colours);\n  noLoop();\n}\n\nfunction draw() {\n  background(220);\n  translate(width/2,height/2);\n  rotate(bricks.rotation);\n  for (let i=-1*width; i<width; i++) {\n    for (let j=-1*height; j<height; j++) {\n      push();\n        let offset = 0;\n        if (j%2===0) {\n          offset = 0;\n        } else {\n          offset = bricks.width/2;\n        }\n        // let c1 = floor(colourValue());\n        // console.log(colourValue());\n        fill(colourValue());\n        rect((i*bricks.width) - offset, j*bricks.height, bricks.width, bricks.height);\n      pop();\n    }\n  }\n}\n\nfunction colourValue() {\n  let c = colours[colPos];\n  colPos++;\n  if (colPos => colours.length) {\n    colours = shuffle(colours);\n    colPos = 0;\n  }\n  return c;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tzwpycpgfqs9sfzwmr7h",
        "width": 955,
        "height": 828,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gtqficanqbihvijvm0gr",
        "width": 955,
        "height": 828,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ys6qh5yrbguutxspmqvy",
        "width": 955,
        "height": 828,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-19T16:53:19.91Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-19T17:03:50.413Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pyBMtuSkiFhzGr7NK",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-13T19:31:13.4Z",
    "posted": true,
    "lesson": "Text",
    "description": "Shristi, Rama and I used predictive text and Markov chains to write this story.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/d1itmtzzohejyo9hgrqe",
        "width": 1821,
        "height": 1821,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-13T19:34:46.513Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-13T20:56:29.74Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T02:42:39.573Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "pzv7Cy4E3TTN47BHg",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-12T05:10:31.641Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "🖍️",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ej60aex9jglbdcjq3jgg",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/yjpuhzsihpndhi7sahsa",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dflvwhbcmbdas123lb0f",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T10:19:42.418Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "q6Edj7wrrtA7x7Sna",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-03T22:46:16.447Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "A basic p5.js composition! This is my first sketch ever made originally.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bucqa1cmudkjuped28sn",
        "width": 788,
        "height": 663,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-03T23:52:48.858Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-04T02:41:10.141Z"
      },
      {
        "category": "nerdy",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-04T04:13:16.291Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "q8Dfwti7GR67C3No6",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-31T17:54:57.03Z",
    "posted": true,
    "lesson": "Music",
    "description": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/tone/15.1.0/Tone.min.js\n/* global Tone */\n\n// First, create the sampler\nconst sampler = new Tone.Sampler({\n  urls: {\n    kick: \"https://tonejs.github.io/audio/drum-samples/kick.mp3\",\n    snare: \"https://tonejs.github.io/audio/drum-samples/snare.mp3\",\n    hatClosed: \"https://tonejs.github.io/audio/drum-samples/hhc.mp3\",\n    hatOpen: \"https://tonejs.github.io/audio/drum-samples/hho.mp3\",\n  },\n  onload: () => console.log(\"sampler loaded\"),\n}).toMaster();\n\nTone.Transport.bpm.value = 120;\n\nwindow.onmousedown = () => {\n  // Play the drum beat!\n\n  const beat = generateBeat();\n  play(beat);\n};\n\nfunction generateBeat() {\n  const b = [];\n\n  const kickPattern = [1, 0, 0, 0, 1, 0, 0, 0];\n  const snarePattern = [0, 0, 1, 0, 0, 0, 1, 0];\n  const hatPattern = [1, 1, 1, 1, 1, 1, 1, 1];\n\n  for (let i = 0; i < 8; i++) {\n    const time = Tone.Time(\"4n\") * i;\n    if (kickPattern[i]) {\n      b.push([\"kick\", time]);\n    }\n    if (snarePattern[i]) {\n      b.push([\"snare\", time]);\n    }\n    if (hatPattern[i]) {\n      b.push([\"hatClosed\", time]);\n    }\n  }\n\n  return b;\n}\n\nfunction play(beat) {\n  let t = Tone.now();\n  for (const note of beat) {\n    const sound = note[0];\n    const time = note[1];\n    console.log(sound, time);\n    sampler.triggerAttackRelease(sound, Tone.Time(\"16n\"), t + time);\n  }\n}\n\nconsole.log(\"click for music!\");",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-04-03T03:22:56.34Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "qC57s3ZpJPLRYsMhg",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-19T20:02:52.008Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I spent a lot of time playing around on Midjourney – I bought a subscription and think it’s definitely worthwhile. I experimented creating images with corgis in the style of different famous paintings, art styles, etc. A few observations:\n- Midjourney defaulted to the lighter Pembroke corgi. When I specified that I wanted a darker cardigan corgi, Midjourney did not understand and thought I wanted a corgi on a cardigan sweater (see the last photo - quite hilarious), and only understood when I was more specific in writing “cardigan Welsh corgi”. \n- Midjourney seemed to have a hard time with specific numbers. For example, even though I specified “4 corgis,”Midjourney gave me options with 3, 5, 4, and 3 corgis. This happened on multiple occasions. \n- Midjourney also had a hard time understanding when I requested multiple types of subjects (for example adding cats as well).\n\nOverall, I’m very impressed with the level of detail and realism in most of the photos that I was able to request using plain English.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/c8dttfsuybdacr4xwd7g",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/j0buhrxexmrugzjaq4wu",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/h2zqup1fzpmtr9fopqwg",
        "width": 1024,
        "height": 1024,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-19T22:33:47.07Z"
      }
    ],
    "comments": [
      {
        "comment": "I need one of those cardigans. ",
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-19T22:33:58.731Z"
      }
    ]
  },
  {
    "_id": "qGMSLEi9Cgu8yQ5Zb",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-07T02:28:38.001Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Here's a walkcycle animation I made!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/j4vzfvyqe90fnr6y4df2",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T02:38:02.578Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-04-07T03:05:46.267Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "qHMaTsFGADY2fMGtG",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-04T06:26:19.139Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Spent a few hours failing at sprites lol. The program keeps redrawing sprites on top of each other, no matter what I tried. Commenting in lines 69-74 breaks the code entirely.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\nlet gold = [];\nlet rows = 7;\nlet rowWidth;\n\nlet player;\nlet playerY;\n\nlet gameSpeed = 1;\nlet score = 0;\n\nfunction setup() {\n    createCanvas(600, 300);\n\n    rowWidth = height/rows;\n\n    // for (let i=0; i<5; i++) {\n    //     gold[i] = createSprite(\n    //         width/2 + rowWidth*floor(random(0, rows)),\n    //         rowWidth/2 + rowWidth*floor(random(0, rows)),\n    //         rowWidth,\n    //         rowWidth\n    //     );\n    // }\n    \n    for (let i=0; i<5; i++) {\n        gold.push({\n          x: width/2 + rowWidth*floor(random(0, rows)),\n          y: rowWidth/2 + rowWidth*floor(random(0, rows)),\n        });\n    }\n    \n    if (rows%2 === 0) {\n        playerY = rowWidth*(rows/2) - rowWidth/2;\n    } else {\n        playerY = height/2;\n    }\n    player = createSprite(width/4, playerY, rowWidth, rowWidth)\n    \n}\n\nfunction draw() {\n    \n    for (let g of gold) {\n        g = createSprite(g.x, g.y, rowWidth, rowWidth);\n    }\n    for (let g of gold) {\n        g.x-=gameSpeed;\n    }\n    \n    background(255);\n    drawSprites();\n    \n    push();\n        fill(0);\n        textSize(15);\n        text(`Score: ${score}`, 10, 20)\n    pop();\n    \n    if(keyIsDown(38)){\n      player.position.y-=gameSpeed;\n    }\n    if(keyIsDown(40)){\n      player.position.y+=gameSpeed;\n    }\n    \n    // for (let g of gold) {\n    //     if (player.collide(g)) {\n    //         g.remove();\n    //         score++;\n    //     }\n    // }\n    \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fcqjjr0f9xzttk2d63ap",
        "width": 998,
        "height": 502,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-04T22:57:03.193Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:33:35.315Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "qKRCRzsoc2KpEREm8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-05-10T22:12:24.074Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Extension of the previous where each word is now separated and placed randomly on the page and also has a random width. Also added a condition for periods",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zasdrlmvobzd7tl91lop",
        "width": 1510,
        "height": 1134,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-11T23:28:25.963Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T11:44:36.814Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-12T16:28:53.141Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "qRctkCpDfvN3ZW8w9",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-21T02:58:18.436Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I explored the capabilities of Stable Diffusion, including the negative prompt query and guidance scale. I wanted to see what would happen if I instructed the software to make a typographic poster for a festival. I'm curious about the fake language Stable Diffusion invented - the only distinguishable English word I saw was \"music\" (sometimes spelled \"mussic\"). Here are the most interesting results I got.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kn3ul3limgtgb1robpch",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/twyq3tenckcaosaukhq7",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jsf7wjwjk76mq22q0vau",
        "width": 768,
        "height": 768,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-21T03:17:13.616Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:36:29.495Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "qzHy4To6WNSm2Gp6H",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-24T11:11:39.48Z",
    "posted": false,
    "lesson": "Params",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "r4qePSuf3yoGJw6fj",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-06T04:32:42.561Z",
    "posted": true,
    "lesson": "Random",
    "description": "I assigned 6 different colors to each side of a six sided die to color in some graph paper. The number I rolled determined which color would fill each box. I wanted the sketch to have uniform distribution among all the colors. I tried out a few mini sketches with different color palettes. A fully filled page is coming soon!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vm5wawqruy0kijcpcfe1",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vwh1ajwab5exvx57w3ig",
        "width": 750,
        "height": 750,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-06T15:26:59.898Z"
      },
      {
        "category": "nerdy",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-02-06T16:36:43.481Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-06T19:03:08.672Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:08:37.373Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-07T20:15:44.611Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "r5P5v4FiuBBQLc7b3",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-24T03:22:59.435Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "I did not make this in paper.js, this is one of my own vector illustrations that I have been playing around with for a while! I 3d modelled some faces and used an online vector convertor to convert my 3d models to svg wireframes. After that, I used vector lines to compose the illustration in illustrator.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/x0kuswkribtorsvlp6av",
        "width": 5870,
        "height": 9043,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-24T04:56:47.245Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-24T05:27:37.723Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "r9n95CiZGLEpvbcXk",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-24T05:28:30.469Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.5/paper-full.min.js\n\n// Set up the canvas and color palette\nvar canvasWidth = 800;\nvar canvasHeight = 800;\nvar colors = ['#F94144', '#F3722C', '#F8961E', '#F9C74F', '#90BE6D', '#43AA8B', '#577590'];\n\n// Create a group to hold the pattern\nvar pattern = new Group();\n\n// Create a function to generate a random number within a range\nfunction randomInRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n// Create a loop to draw the pattern\nfor (var i = 0; i < 50; i++) {\n  // Create a random color for the path\n  var color = colors[Math.floor(Math.random() * colors.length)];\n\n  // Create a new path and set its properties\n  var path = new Path();\n  path.strokeColor = color;\n  path.strokeWidth = 3;\n  path.opacity = 0.5;\n  path.smooth();\n\n  // Generate a random number of points for the path\n  var numPoints = Math.floor(randomInRange(3, 8));\n  for (var j = 0; j < numPoints; j++) {\n    // Generate a random point within the canvas bounds\n    var x = randomInRange(0, canvasWidth);\n    var y = randomInRange(0, canvasHeight);\n    var point = new Point(x, y);\n\n    // Add the point to the path\n    path.add(point);\n\n    // Add a small circle at the point\n    var circle = new Path.Circle({\n      center: point,\n      radius: 5,\n      fillColor: color\n    });\n\n    // Rotate the circle by a random amount\n    circle.rotate(randomInRange(0, 360));\n\n    // Add the circle to the pattern group\n    pattern.addChild(circle);\n  }\n\n  // Close the path to create a shape\n  path.closed = true;\n\n  // Add the path to the pattern group\n  pattern.addChild(path);\n}\n\n// Move the pattern to the center of the canvas\npattern.position = view.center;",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hlyl76w3raxgtvoxhlac",
        "width": 1696,
        "height": 1596,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-04-14T12:08:34.214Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rDwnKK8qSgkniJi9t",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-31T14:30:47.964Z",
    "posted": true,
    "lesson": "Music",
    "description": "I got this pretty cinematic-sounding track and tone.js always surprises me with what it can do. There's a pretty deep rumble sound that may not come up if you have the volume low. I wanted to add a third instrument that sounded like a horn but I couldn't get it to sound quite like how I wanted it. Also, this uses the newest version of tone.js so I'm not sure if it will break in the js lab browser",
    "code": "const plucky = new Tone.PluckSynth({\n}).toDestination();\nplucky.volume.value = -40\nconst reverb = new Tone.Reverb({\n  decay: 30\n}).toDestination()\n\n\nconst lowPass = new Tone.Filter({\n  frequency: 1250,\n}).toDestination();\n\nconst bwah = new Tone.DuoSynth().connect(lowPass);\n\n\nconst gigra = new Tone.PolySynth( Tone.Synth, {\n  voice:11,\n  oscillator : {\n    type : \"fatsawtooth\"\n  },\n  envelope: {\n    attack: 1,\n    decay: 0.2,\n    sustain: 0.8,\n    release: 9,\n  },\n}).connect(lowPass);\ngigra.volume.value = 10\nvar lfo = new Tone.LFO(30, 10, 90); // hertz, min, max\nlfo.connect(lowPass.frequency);\nlfo.start();\n\n\nwindow.onmousedown = () => {\n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"F2\"], 2, 0) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 4 ) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 6 ) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 8 ) \n  gigra.triggerAttackRelease([\"G2\", \"B#2\", \"D2\", \"G2\"], 2, 10 ) \n  let currentTime = Tone.now()\n  const loop = new Tone.Loop((time) => {\n    \n    plucky.triggerAttack(\"F2\", time + 0.125 );\n    plucky.triggerAttack(\"A2\", time + 0.25);\n    plucky.triggerAttack(\"D2\", time + 0.375);\n    plucky.triggerAttack(\"F2\", time + 0.5);\n    if (plucky.volume.value < -6) {\n    plucky.volume.value = plucky.volume.value + 3\n    }\n    currentTime = time\n    console.log(currentTime)\n  }, \"4n\").start(2);\n\n  const bwahLoop = new Tone.Loop((time) => {\n    \n    bwah.triggerAttackRelease(\"D1\", \"1n\", time)\n\n  }, \"2m\").start(12);\n\n  if (currentTime > 1) {\n    gigra.triggerAttackRelease(\"A1\", \"1n\", currentTime) \n  }\n\n  Tone.Transport.start();\n  Tone.start()\n};",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pyvalzbzkvx8bjotmo9h",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T15:15:58.4Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rJSKd3JK8eeHeGCt8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-02T19:27:04.507Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Response to Reshma's instructions. Definitely spent too much time on this but I really wanted to see the result 😅",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tb1elkhspogzqpqhx3jv",
        "width": 683,
        "height": 1006,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T21:24:43.26Z"
      },
      {
        "category": "nerdy",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-04T04:14:49.122Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-08T22:05:59.137Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rKZ5ugMwtS5qCYqft",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-06T16:37:13.358Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Experimenting with gravity and collision in this sketch. I followed a tutorial online to make this; however, I couldn't resolve some issues like the score count before time ran out",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mdaww0igbae0nj6lr6o2",
        "width": 1160,
        "height": 778,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/zwrcodpqjkprmokudrou",
        "width": 1136,
        "height": 752,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:46:29.479Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rLr8eYAuoeFXJfyeR",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-30T19:15:48.859Z",
    "posted": true,
    "lesson": "Music",
    "description": "**Feeling Melancholy:** a simple sketch in a sad F minor to figure out Tone.js. In this, I'm playing the using mouse position, in the next sketch I'm hoping to let a random walker play.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/x77dafbrmfsjohgbxswj",
        "width": 1212,
        "height": 1194,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/lwr4qmsmzxcgkk2tpm64",
        "width": 1212,
        "height": 1194,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/iop9idc3gptbbcml6znh",
        "width": 1212,
        "height": 1194,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T03:18:53.488Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:13:31.499Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T15:17:07.884Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rMXTAu6EPixXzCdXx",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-10T17:08:52.737Z",
    "posted": true,
    "lesson": "Random",
    "description": "This is a very convoluted and pretentious attempt at visualizing short-term volatility in the financial markets with random() radius ellipses you can draw",
    "code": "// define two areas where ellipses (currency) can be generated. Confifugre mouseDragged function limited to that area with a conditional statement \n\n//variables\nlet brushSize;\nlet rectW = 200;\nlet rectH = 200;\nlet moneyCount = 0;\nfunction setup() {\n  createCanvas(400, 400);\n  stroke(0);\n  background(153,101,21);\n  fill(220);\n  textAlign(CENTER);\n  textSize(24);\n  text(\"Click and drag mouse on canvas\", width / 2, rectH / 2);\n}\n\n//drawing the layout\nfunction draw() {\n  fill(220);\n  fill(0);\n  rect(width / 2, height / 2, 10, height/2)\n}\n\nfunction mousePressed() {\n   background(153,101,21);\n   brushSize = 10;\n}\n\n\n//generate coins on dragging and increase scale based on seconds\nfunction mouseDragged() {\n  let h = hour();\n  let m = minute();\n  let s = second();\n  x = (m == 1);\n  brushSize = s*2;\n  if (mouseY > height / 2 && mouseX < width / 2) {\n    fill(270);\n    ellipse(mouseX, mouseY, random(s,50));\n    fill(0);\n    rect(0, 0, width, rectH);\n\n    //currency count on left\n    fill(0, 255, 0);\n    textSize(64);\n    textAlign(CENTER);\n    moneyCount = moneyCount + (brushSize*2);\n    text(moneyCount,width / 2, rectH / 2)\n  }\n  else if (mouseY > height / 2 && mouseX > width / 2) {\n    fill(270,230,140);\n    ellipse(mouseX, mouseY, random(10, 50));\n    fill(0);\n    rect(0, 0, width, rectH);\n\n    //currency count on right\n    fill(255, 0, 0);\n    textSize(64);\n    textAlign(CENTER);\n    moneyCount = moneyCount + (brushSize);\n    text(moneyCount,width / 2, rectH / 2)\n\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/l3swg9fyypaqlyirwrne",
        "width": 802,
        "height": 880,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-10T17:14:26.744Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T06:00:02.365Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rS6Ld9M3ZhNrcwnQk",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-03-31T03:33:45.744Z",
    "posted": true,
    "lesson": "Music",
    "description": "I wrote a song a few years ago on ADHD & I played around with it a little bit (im embarrassed so pls don't listen to it)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hvanhb4l22zl3svp6rrj",
        "width": 540,
        "height": 540,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T03:51:50.875Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:14:32.432Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rTcczYxYj8yHmWn94",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-09T17:08:48.007Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "WEEK 6 (2/4): What I did with Johnnys code. LOL It got so laggy and I didn't to lose what I had so I screenshot it real quick.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wbyhgkhkka2zdcfpdcjx",
        "width": 796,
        "height": 790,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:42.652Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rbcZnrDWqrpPGjPYy",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-03-23T21:56:03.714Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "Playing around with Shristi's prompt sketch!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/scxho5ot2sbrzlhoit3j",
        "width": 500,
        "height": 700,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bvoh98rmfxsc6vnkdspe",
        "width": 907,
        "height": 700,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "rfLMQg6CiLzyBx7b8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-24T23:09:29.335Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "My take on the first challenge. Trying to get good numbers for noiseDetail() and the noise frequency was pretty tedious but bless Tweakpane! I did some adjustments to the color values to get more pinks because pink is cool 👍",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mfi4s64unno3hddvdnty",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "riWDuPxkpuvAPge9j",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-05-12T14:50:23.88Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "**Replicating Vera Molnar's Interruptions** felt easier using Turtle Graphics. I found this piece while reading [this blogpost](https://www.amygoodchild.com/blog/computer-art-50s-and-60s). Somehow this ended up very similar to one of the first sketches I did for this class (where I'd used the Cartesian system to achieve something similar).",
    "code": "let myTurtle;\n\n\nfunction setup() {\n  \n  createCanvas(600, 600);\n  myTurtle = new Turtle(0, 0);\n  //myTurtle = new Turtle(-120, 170);\n  \n  noFill();\n  stroke(0);\n  strokeWeight(1);\n\n  frameRate(12);\n  //noLoop();\n}\n\nfunction draw() {\n  \n  background(250);\n\n  let lineWidth = 14;\n  \n  for (let i = 0; i<width; i+=lineWidth-2) {\n    for (let j = 0; j<height; j+=lineWidth-4) {\n      \n      myTurtle.penUp();\n      myTurtle.moveTo(i,j);\n      \n      if (i<=width/2)\n        strokeWeight(1+i/60);\n      if (i>width/2)\n        strokeWeight(1 + (width-i)/60)\n      \n      myTurtle.turnTo(setLineDegrees(i, j));\n\n      myTurtle.penDown();\n      if (noise(i*0.03, j*0.02) > 0.3)\n      myTurtle.moveForward(lineWidth);\n    }      \n  }\n   \n}\n\nfunction setLineDegrees(a, b) {\n  \n  let turn = noise(a + frameCount*0.03, b + frameCount*0.01)*180 + 205;\n  //let turn = random(0, -90);\n  \n  return turn;\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zz7ac8qzlndrq78xjrc7",
        "width": 1190,
        "height": 1184,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/u5dtof3yaouzj2lb59dy",
        "width": 1190,
        "height": 1184,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/axlpuwecrpeben4tqdqt",
        "width": 1190,
        "height": 1184,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-23T13:05:13.096Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:16.999Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rmQkFAauhAzFSoDgW",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-17T05:59:21.887Z",
    "posted": true,
    "lesson": "Noise",
    "description": "For Sahiti, part 1 of the pair challenge. Graphed noise and used it control the circular overlays. Inspired by Dan Shiffman's series on Perlin Noise.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nfunction setup() {\n  createCanvas(400, 400);\n  noLoop();\n}\n\nfunction draw() {\n  background(125, 28, 22);\n  drawCircles(200, 200, 0, 200, 0, 50, 5, 50, 150, SCREEN);\n  drawGraph();\n  drawCircles(100, 100, 0, 200, 150, 50, 0.5, 10, 50, OVERLAY);\n}\n\nfunction drawGraph() {\n  let xoff = 0;\n\n  beginShape();\n  for (let x = 0; x < width; x += 2) {\n    let y = noise(xoff) * height;\n\n    //draw line\n    stroke(93, 31, 163);\n    noFill();\n    vertex(x, y);\n\n    //fill\n    push();\n    strokeWeight(2);\n    line(x, y, x, 400);\n    pop();\n\n    xoff += 0.02;\n  }\n  endShape();\n}\n\nfunction drawCircles(r, g1, g2, b1, b2, alpha, density, min, max, blend) {\n  let yoff = 0;\n\n  for (let x = 0; x < width; x += density) {\n    push();\n    blendMode(blend);\n\n    let y = noise(yoff) * 1000 - 300;\n    let colourR = r;\n    let colourG = map(y, width, 0, g1, g2);\n    let colourB = map(y, width, 0, b1, b2);\n\n    noStroke();\n    fill(colourR, colourG, colourB, alpha);\n\n    circle(x, y, round(random(min, max)));\n\n    pop();\n\n    yoff += 10;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ka6f6gew43twrloslosx",
        "width": 826,
        "height": 824,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T14:56:20.601Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rmpWxnen3hRcmqwj4",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-02T21:06:49.564Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Extension of challenge 1. I turned the dots into chaotic fireworks",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yb4twduxunxzxccp8t0y",
        "width": 710,
        "height": 714,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ieooyk8owu2jx11xqohi",
        "width": 712,
        "height": 710,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-02T23:48:06.122Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T00:54:26.097Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-03-03T01:14:17.715Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-03-03T03:01:51.323Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-03T05:56:41.234Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-03T07:45:11.786Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rsXHnFzoTpddQqwP9",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-31T04:47:48.501Z",
    "posted": true,
    "lesson": "Music",
    "description": "Warning: annoying sounds ahead",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jc780vmd5mcfgagroypt",
        "width": 1638,
        "height": 1584,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/i5f9iry5vlrznv7vsgoq",
        "width": 640,
        "height": 636,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/q3txu1t0c4bjj1fhomhb",
        "width": 640,
        "height": 636,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:15:38.687Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ru4gNA3BFHTRXPQqC",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-03T16:50:20.876Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Extension of challenge 2!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bkw584tr2cmoqzfkgdy4",
        "width": 892,
        "height": 534,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/fmqvirt2n6doascq0czs",
        "width": 888,
        "height": 530,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dinej6q3c7uxke7izdrl",
        "width": 890,
        "height": 532,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T19:41:19.039Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ruogMmTy6mzu8LKHr",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-31T13:11:17.106Z",
    "posted": true,
    "lesson": "Music",
    "description": "WEEK 8 (4/4): I didn't necessarily write my own song but I made this prototype in unity a bit ago and I can play this song on it, it uses keyboard input. You can hear my keyboard so SORRY.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/frsbygafeqbfurnje3vi",
        "width": 1920,
        "height": 1080,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T15:25:14.987Z"
      }
    ],
    "comments": [
      {
        "comment": "Love your playing! And the prototype!!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T15:26:14.217Z"
      },
      {
        "comment": "I would want this prototype!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T15:26:33.562Z"
      }
    ]
  },
  {
    "_id": "rw98hsdAQ95wJ6L7W",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-05-05T10:03:38.509Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Learning how to rotate and linear extrude based off of example sketches. rendered the shapes in adobe dimensions.",
    "code": "// Staircase made of cubes\n\ncube_width = 30;        // Width of each cube\ncube_height = 5;       // Height of each cube\ncube_depth = 10;        // Depth of each cube\nnum_steps = 10;         // Number of steps in the staircase\ndoor_width = 6;         // Width of the doorway\ndoor_height = 8; \n// Loop through the number of steps and create a cube for each one\n\nmodule stairs(){\n    \nfor (i = [0:num_steps-1]) {\n  translate([0, i*5, i * cube_height]) cube([cube_width, cube_depth, cube_height]);\n}\n}\nstairs();\n\ntranslate([-50,0,0]){\n    stairs();\n}\n\ntranslate([50,0,0]){\n    stairs();\n}\n\n\n\n// with twist the extruded shape will rotate around the Z axis\n\nrotate([0,0,90])\nfor (x=[0:4]){\ncolor(\"orange\")\n    translate([-30-x*20, -20, 0])\n        linear_extrude(height = 50, twist = 150)\n            square([20, 10], center = true);\n}\n\n  color(\"cyan\")\n              translate([-50, -80, 0])\n        rotate_extrude($fn = 80)\n            text(\"  E\");\n  color(\"magenta\")\n       translate([-50, -40, 0])\n        rotate_extrude($fn = 80)\n            text(\"  X\");\ncolor(\"yellow\")\n   translate([-10, -40, 0])\n        rotate_extrude($fn = 80)\n            text(\"  p\");\n\ncolor(\"yellow\")\n   translate([-10, -80, 0])\n        rotate_extrude($fn = 80)\n            text(\"  J\");",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/snkebialdcwwiw98nklz",
        "width": 1024,
        "height": 768,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gbucd966jc6uzxglq3ng",
        "width": 1596,
        "height": 1202,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T12:47:25.787Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:18.098Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "rxaneYBeX4pD7gyu9",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-28T00:11:28.855Z",
    "posted": true,
    "lesson": "API",
    "description": "Extending the AI week - Style transfer ML model from Playform where I used a set of images of cells to recreate in the style of some of my artwork. It was really interesting to see how the images evolved and the bits of style seen in the final outputs.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jl3k21emnhczwrttlmeo",
        "width": 1280,
        "height": 636,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/kek4xrp3resskdmeiczv",
        "width": 2922,
        "height": 1448,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/oqaljs9xtdv8xzvuegew",
        "width": 2622,
        "height": 1372,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "ryT7tSQqtwfdQETZe",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-14T12:19:53.441Z",
    "posted": true,
    "lesson": "Text",
    "description": "It was a dark and stormy night..",
    "code": "// require https://unpkg.com/rita\n\n/* globals RiTa */\n\nconst storyGrammar = {\nstart: \"It was a dark and stormy night. $phrase. $phrase. $phrase. $phrase.\",\nphrase: \"$subject.art $verb $object.art\",\nsubject: \"$noun | $adjective $noun | $adjective $noun and $adverb.art $adjective $noun\",\nobject: \"$noun | $adjective $noun | $adjective $noun and $adverb.art $adjective $noun\",\nadverb: \"exceptionally | somewhat\",\nadjective: \"surreal | chaotic | hallucinatory | absurd | bizarre | nonsensical\",\nnoun: \"dream | thought | emotion | shadow | mirror | illusion | nightmare | echo | confusion\",\nverb: \"distorted | warped | dissolved | shattered | dissolved | twisted | echoed | reverberated\",\n};\n\nconst context = {};\n\nconst g = RiTa.grammar(storyGrammar, context);\n\ndisplay(g.expand());\n\nfunction display(...strings) {\nconst div = document.createElement(\"div\");\ndiv.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\ndiv.innerText = strings.join(\"\\n\");\ndocument.body.append(div);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rmvdm05uziugg4fwajzz",
        "width": 944,
        "height": 1024,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "s6M5RGJSzNFTg3wD6",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-07T04:12:03.735Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "a continuation of my earlier sketch\nbrick breaker but you can't lose lol",
    "code": "let bricks;\nlet ball;\nlet wallTop, wallLeft, wallRight, wallBottom;\nlet player;\n  \nfunction setup() {\n  createCanvas(1000, 1000);\n  noStroke();\n\n\tbricks = new Group();\n\tbricks.w = 20;\n\tbricks.h = 10;\n\tbricks.tile = '=';\n\tbricks.color = 'limegreen';\n\tbricks.collider = 'static';\n\n\tnew Tiles(\n\t\t[\n\t\t\t'.====...====...==.===..=====.',\n\t\t\t'======.======.========.======',\n\t\t\t'==..==.==..==.==.==.==.==..==',\n\t\t\t'==..==.==..==.==.==.==.==..==',\n\t\t\t'==.....==..==.==.==.==.======',\n\t\t\t'==.....==..==.==.==.==.=====.',\n\t\t\t'==..==.==..==.==.==.==.==....',\n\t\t\t'==..==.==..==.==.==.==.==....',\n\t\t\t'======.======.==.==.==.==....',\n\t\t\t'.====...====..==.==.==.==....',\n\t\t\t'.............................',\n\t\t\t'.............................',\n\t\t\t'======..====..=====...==.===.',\n\t\t\t'======.======.======.========',\n\t\t\t'==.....==..==.==..==.==.==.==',\n\t\t\t'==.....==..==.==..==.==.==.==',\n\t\t\t'==.....==..==.======.==.==.==',\n\t\t\t'====...==..==.=====..==.==.==',\n\t\t\t'====...==..==.==..==.==.==.==',\n\t\t\t'==.....==..==.==..==.==.==.==',\n\t\t\t'==.....======.==..==.==.==.==',\n\t\t\t'==......====..==..==.==.==.==',\n\t\t\t'.............................',\n\t\t],\n\t\t200,\n\t\t200,\n\t\tbricks.w + 1,\n\t\tbricks.h + 1\n\t);\n\n\twallTop = new Sprite(500, 0-5, 1000, 10, 'static');\n\twallRight = new Sprite(0-5, 500, 10, 1000, 'static');\n\twallLeft = new Sprite(1000+5, 500, 10, 1000, 'static');\n\twallBottom = new Sprite(500, 1000+5, 1000, 10, 'static');\n\n  //top\n  ball = createSprite(500, 800, 5, 5);\n\tball.diameter = 5;\n  ball.scale = 4;\n\tball.color = color(random(255), random(255), random(255));\n\n\tplayer = createSprite(500, 900, 100, 10, 'static');\n\tplayer.color = color(random(255), random(255), random(255));\n}\n\nfunction draw() {\n\tplayer.position.x = mouseX;\n\t// player.position.y = 900;\n\tplayer.rotation = 0;\n  background(255, 255, 255);\n  background(0, 0, 0);\n\n\tif ((kb.presses('space'))) {\n\t\tball.addSpeed(-20, 120);\n\t}\n\n\n\tfor (let brick of bricks) {\n\t\tif (ball.collides(brick)) {\n\t\t\t// brick.color = '#AA4A44';\n\t\t\tbrick.remove();   \n\t\t\t// brick.color = 'none';\n      // brick.stroke = 'none';\n\t\t\tbricks.color = color(random(255), random(255), random(255));\n\t\t}\n\n\t\tif (brick.color == '#AA4A44' && ball.collides(brick)) {\n\t\t\tbrick.remove();\n\t\t}\n\t}\n\n\tball.bounciness = 1;\n\tworld.gravity.y = 1;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kkh1btthxzc2wiqomily",
        "width": 1784,
        "height": 1778,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zpl3mp8nv42c11pa2ymd",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-07T04:17:42.508Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T04:23:39.364Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "s6Pqoz3JfbKvxTgeC",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-21T08:13:40.039Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "quick swiss style poster graphics made w paperscript. hybrid workflow with type done in illustrator. made 3 other graphics but only had time to complete one poster.",
    "code": "// The amount we will move when one of the keys is pressed:\nvar step = 10;\n\nvar bounds = new Rectangle(new Point(0, 0), new Point(500, 700));\nvar rectangle = new Path.Rectangle(bounds);\nrectangle.fillColor = '#FAF4D3';\n\n//poster 3\nvar triangle1 = new Path.RegularPolygon(new Point(250, 350), 4, 150);\nvar triangle2 = new Path.RegularPolygon(new Point(150, 170), 3, 120);\nvar triangle3 = new Path.RegularPolygon(new Point(300, 250), 5, 100);\n\ttriangle1.strokeColor = '#67597A';\n\t\ttriangle1.strokeWidth = 5;\n\t\ttriangle2.style=triangle1.style;\n\t\t\ttriangle3.style=triangle1.style;\nfunction onFrame(event) {\n\t// Each frame, rotate the path by 3 degrees:\ntriangle2.rotate(-1);\n\ttriangle1.rotate(1);\n\t\ttriangle3.rotate(1);\n}\n\n\n\n\n\n\n//poster2\n// var position = new Point(0, 0);\n// var path = new Path();\n// path.strokeColor = 'white';\n// path.strokeWidth = 8;\n// path.add(position);\n\n\n//poster 1\n// var position = new Point(150, 600);\n// rectangle.add(position);\n// var triangle1 = new Path(new Point(0, 100), new Point(120,250), new Point(0,330));\n// triangle1.fillColor = '#FDF7D8';\n// var triangle = new Path(new Point(150, 500), new Point(500,700), new Point(0,700));\n// triangle.fillColor = '#FDF7D8';\n\n// var myCircle1 = new Path.Circle(new Point(100, 180), 60);\n// myCircle1.fillColor = '#fb8f67';\n// var myCircle = new Path.Circle(new Point(300, 500), 100);\n// myCircle.fillColor = 'pink';\n\n// function onFrame(event){\n//     triangle.rotate(1);\n//     myCircle.fillColor.hue +=1;\n// }\n\nfunction onKeyDown(event) {\n\tif(event.key == 'a') {\n\t\tposition.x -= step;\n\t}\n\n\tif(event.key == 'd') {\n\t\tposition.x += step;\n\t}\n\n\tif(event.key == 'w') {\n\t\tposition.y -= step;\n\t}\n\n\tif(event.key == 's') {\n\t\tposition.y += step;\n\t}\n\tpath.add(position);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mun6z3ci6ej4rnqjnyji",
        "width": 998,
        "height": 1403,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hilzmcwzedifabqlchsb",
        "width": 998,
        "height": 1403,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-21T17:56:50.434Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:13.537Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "s8XQDacyjit4xHKtg",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-05-04T18:46:17.704Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "First take on the individual challenge. It took me a while to get suitable sizes for the spheres I was using to carve out the lateral supports of the castle. I'll definitely get it finalized in the next iteration",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kcnqq75bxbpfgyyf0ge8",
        "width": 1101,
        "height": 778,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T00:41:11.084Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "sA6fH33Lkr4TLZkqY",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-05-05T01:33:42.212Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "**Loops in OpenSCAD**",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/shkdg4aptpcegay4wa2o",
        "width": 1064,
        "height": 1064,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jglrrb02cka26tloegbz",
        "width": 1064,
        "height": 1064,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/vlvcbmafkqzmhpqyd0w4",
        "width": 1064,
        "height": 1064,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-05-05T02:05:45.08Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T02:17:31.4Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T02:59:27.475Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:15:14.628Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "sG7z2LMB2MaDZXrNB",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-24T10:36:46.58Z",
    "posted": true,
    "lesson": "Params",
    "description": "Cloud Generator with tweakpane. I could not get this work how I wanted in time -\nI don't want the sketch to loop and create the animation - I wanted them to generate based on cloudCount",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n//Global variables for cloud stuff\nlet cloudW;\nlet cloudH;\nlet cloudX;\nlet cloudY;\n// let cloudCount = 200;\n\n\n//Tweakpane params object\nconst params = {\n  cloudCount: 1,\n  width1: 60,\n  height1:70,\n  width2: 70,\n  height2:70,\n  width3: 60,\n  height3:70,\n  width4: 70,\n  height4:70,\n  width5: 80,\n  height5:80,\n  background: { r: 50, g: 100, b: 200 },\n}\n\n// Tweakpane setup\nconst pane = new Tweakpane.Pane();\npane.addInput(params, \"cloudCount\" , { min: 0, max: 1000, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width1\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height1\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width2\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height2\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width3\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height3\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width4\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height4\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"width5\", { min: 50, max: 90, step: 1 });\npane.addInput(params, \"height5\", { min: 50, max: 90, step: 1 });\npane.addSeparator();\npane.addInput(params, \"background\");\n\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  frameRate(2);\n}\n\nfunction draw() {\n  background(params.background.r, params.background.g, params.background.b);\n  noStroke();\n  fill(255);\n\n  // for ()\n  // drawCloud(100,100);\n  for (let i = 0; i < params.cloudCount; i++) {\n    translate(20, 0)\n    drawCloud(random(i, width) ,random(0, height));\n  }\n}\n\n\nfunction drawCloud(x,y) {\n  //x and y positions of cloud\n  // let x = 100;\n  // let y = 100;\n  // Draw cloud using ellipse function\n  ellipse(x, y, params.width1, params.height1);\n  ellipse(x+40, y, params.width2, params.height2);\n  ellipse(x+80, y, params.width3, params.height3);\n  ellipse(x+120, y, params.width4, params.height4);\n  ellipse(x+160, y, params.width5, params.height5);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/adq6rgeo2dsmhtzfvrrx",
        "width": 1762,
        "height": 1564,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "sKwRzqzuCRhJFGb4A",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-31T04:51:21.323Z",
    "posted": true,
    "lesson": "Music",
    "description": "I was playing around with Reason and wanted to make a visualizer to go with a track I made, would like to get more fidelity with the visuals though!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rvucfqkzzgcgbvifl725",
        "width": 1614,
        "height": 1528,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/vvtjkr74sejkn2orm85p",
        "width": 1630,
        "height": 1562,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:16:07.812Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "sMF2T95NSaeDiqk2N",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-02-10T09:37:08.316Z",
    "posted": true,
    "lesson": "Random",
    "description": "WEEK 2 SKETCH (5/4) : PLAYED WITH THE PAIR CHALLENGE TO MAKE CHESS BOARDS???",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mlcqpwpx30iassxyg6bq",
        "width": 1190,
        "height": 1188,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T14:18:55.657Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-10T15:14:09.273Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "sNpKjDRxGpSu6p6Gg",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-17T14:59:34.008Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "**Reverse Traditional Product Design wasn't reversed!** As part of an introspection in the linearity that specific renowned design processes suggest, I asked ChatGPT to come up with a project that mixed up the stages of a traditional product design approach. Traditional approach refers to the following stages in order: User Research - Define Problem - Ideate - Prototype - Test. ChatGPT managed to reveal a simple & straightforward reversal - which was not enough to disprove the \"chronology\" traditional processes suggest. It utilized the open-ended nature of english words to fit stages it did feel belonged to the top. For example, Launch as Stage 1 launched the project, and as Stage 4 launched the product. When I explicitly set the stage as \"Launch the Product\" at Stage 1, it evaded the stage -  \"The first stage of this design project is the \"Launch the product\" stage, where we will define the target market and user personas for the next-generation smartphone. \"",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yzcegk0kotyojgvtpxhq",
        "width": 1180,
        "height": 1122,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ymrwxxua1d2yn1uoqsrh",
        "width": 1180,
        "height": 1122,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cdaapitiia1a7l3ixqz8",
        "width": 1180,
        "height": 1008,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-17T15:57:02.65Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-20T19:05:12.514Z"
      },
      {
        "category": "nerdy",
        "voter_id": null,
        "created_at": "2023-04-21T15:00:01.914Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-08-29T21:47:32.25Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "sPisdnZLvFfdzr8cW",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-03T03:02:41.222Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Attempt at Challenge 2. Unfortunately even with the maximum allotted time I couldn't put this one together so here's my attempt with the time that I set.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// draws a rectangle, where you tell it to!\n\nlet frequency_slider;\nlet amplitude_slider;\nlet timespeed_slider;\n\nlet startX = 50;\nlet startY = 250;\nlet endX = 450;\nlet endY = 50;\n\nfunction setup() {\n  createCanvas(500, 300);\n  \n  createP(\"Frequency\");\n  frequency_slider = createSlider(0, 100, 25);\n\n  createP(\"Amplitude\");\n  amplitude_slider = createSlider(0, 100, 50);\n  \n  createP(\"Time Speed\");\n  timespeed_slider = createSlider(0, 100, 50);\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 100;\n  let timeSpeed = frameCount / 10;\n  let frequency = frequency_slider.value();\n\n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    let offsetX = (noise(i * frequency, 0) - 0.5) * amplitude * timeSpeed;\n    let offsetY = (noise(i * timeSpeed, 1000) - 0.5) * amplitude * timeSpeed;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/e5rz0qlfd4obwm5uw0to",
        "width": 832,
        "height": 800,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "sYLzNCtRcf7D4i5pM",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-10T00:41:48.682Z",
    "posted": true,
    "lesson": "Random",
    "description": "Wanted to create a fish tank using random!!",
    "code": "//Draw fishes with using random\n//make different kind of fishes at different interval\n//inspired from justin Bakse's \"Horizon\"\n\nvar r;\nvar g;\nvar b;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noLoop();\n\n  noStroke();\n  fill(50, 82, 123);\n}\n\nfunction draw() {\n  background(104,211,255);\n\n  for (let i = 0; i < random(0, 400); i = i + 1) {\n    drawFish(random(100, width), random(100, height));\n   // console.log(i, \"Sahi1\");\n    \n  }\n}\n\nfunction drawFish(x, y) {\n  if (random() < 0.1) {\n    drawFishbig(x, y);\n  } else {\n    drawFishsmall(x, y);\n    //console.log(random(), \"Sahi2\");\n  }\n}\n\nfunction drawFishbig(x, y) {\n  push();\n  r = random(255); // r is a random number between 0 - 255\n  g = random(100, 255); // g is a random number betwen 100 - 200\n  b = random(200); // b is a random number between 0 - 100\n  fill(r, g, b);\n  ellipse(x, y, 100, random(100, 150));\n\n  triangle(-15 + x, 75 + y, 5 + x, 20 + y, 25 + x, 75 + y);\n\n  pop();\n\n  fill(54, 69, 79);\n  ellipse(-20 + x, -40 + y, 10, 10);\n  fill(255);\n  ellipse(-20 + x, -42 + y, 5, 5);\n}\n\nfunction drawFishsmall(x, y) {\n  push();\n  r = random(255); \n  g = random(100, 200); \n  b = random(100); \n  fill(r, g, b);\n  ellipse(x, y, 20, 20);\n  triangle(-5 + x, 15 + y, x, y, 5 + x, 15 + y);\n\n  pop();\n\n  fill(54, 69, 79);\n  ellipse( -3+x, -5+ y, 5, 5);\n  fill(255);\n  ellipse( -3+x, -5+ y, 2, 2);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fhfwcnyhpnwwqzx3fcvp",
        "width": 368,
        "height": 370,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T01:19:54.699Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-10T02:02:55.035Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-10T04:29:27.432Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-10T13:05:59.465Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-10T23:55:32.766Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "scGkjbTi6yZEbG2rs",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-24T08:40:12.308Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair coding with Srishti: It reminds of hours I spend coding for Compform and using all of my keyboard's buttons, which have gotten harder to press, I added a keyboard interaction to Srishti's sketch.\n\n(I am sure there is a better way to achieve this)",
    "code": "let img;\nlet numimage = [];\nlet keys = [];\n\n\nlet chrom; //hold my font\nlet chromArray = []; //set up an array to receive coordinates\n// let fontSize=150; //initialize size of text\n\nfunction preload() {\n  chrom = loadFont(\"MAISONNEUE-BOLD.TTF\");\n  img = loadImage(\"bcone.jpg\");\n\n  // numimage[0] = loadImage('bcone.jpg');\n}\n\nconst params = {\n  circle_size: 5,\n  bg_color: \"#40E0D0\",\n  color: \"#6B40E0\",\n};\n\nconst pane = new Tweakpane.Pane();\n\npane.addInput(params, \"circle_size\", { min: 0, max: 20 });\npane.addInput(params, \"bg_color\");\npane.addInput(params, \"color\");\n\nfunction setup() {\n  createCanvas(725, 400);\n  \n  textFont(chrom);\n  frameRate(30);\n  textSize(150);\n  noStroke();\n  textAlign(CENTER);\n  // textWrap(CHAR);\n  stroke(2);\n  // rectMode(CENTER);\n  chromArray1 = chrom.textToPoints(\"comp form\", width/2 , height / 2, 100, {\n    sampleFactor: 0.2,\n  });\n\n  // chromArray2 = chrom.textToPoints(\"form\", width / 2, height / 2, params.fontSize, {\n  //   sampleFactor: 0.08,\n  // });\n\n  // print(chromArray);\n  push();\n  \n    keys.push(new Key(0, 0, 50, \"~\\n`\", 192));\n  keys.push(new Key(50, 0, 50, \"!\\n1\", 49));\n  keys.push(new Key(100, 0, 50, \"@\\n2\", 50));\n  keys.push(new Key(150, 0, 50, \"#\\n3\", 51));\n  keys.push(new Key(200, 0, 50, \"$\\n4\", 52));\n  keys.push(new Key(250, 0, 50, \"%\\n5\", 53));\n  keys.push(new Key(300, 0, 50, \"^\\n6\", 54));\n  keys.push(new Key(350, 0, 50, \"&\\n7\", 55));\n  keys.push(new Key(400, 0, 50, \"*\\n8\", 56));\n  keys.push(new Key(450, 0, 50, \"(\\n9\", 57));\n  keys.push(new Key(500, 0, 50, \")\\n0\", 48));\n  keys.push(new Key(550, 0, 50, \"_\\n-\", 189));\n  keys.push(new Key(600, 0, 50, \"+\\n=\", 187));\n  keys.push(new Key(650, 0, 75, \"Backspace\", 8));\n  keys.push(new Key(0, 50, 75, \"Tab\", 9));\n  keys.push(new Key(75, 50, 50, \"Q\", 81));\n  keys.push(new Key(125, 50, 50, \"W\", 87));\n  keys.push(new Key(175, 50, 50, \"E\", 69));\n  keys.push(new Key(225, 50, 50, \"R\", 82));\n  keys.push(new Key(275, 50, 50, \"T\", 84));\n  keys.push(new Key(325, 50, 50, \"Y\", 89));\n  keys.push(new Key(375, 50, 50, \"U\", 85));\n  keys.push(new Key(425, 50, 50, \"I\", 73));\n  keys.push(new Key(475, 50, 50, \"O\", 79));\n  keys.push(new Key(525, 50, 50, \"P\", 80));\n  keys.push(new Key(575, 50, 50, \"{\\n[\", 219));\n  keys.push(new Key(625, 50, 50, \"}\\n]\", 221));\n  keys.push(new Key(675, 50, 50, \"Enter\", 13));\n  keys.push(new Key(0, 100, 87.5, \"Caps Lock\", 20));\n  keys.push(new Key(87.5, 100, 50, \"A\", 65));\n  keys.push(new Key(137.5, 100, 50, \"S\", 83));\n  keys.push(new Key(187.5, 100, 50, \"D\", 68));\n  keys.push(new Key(237.5, 100, 50, \"F\", 70));\n  keys.push(new Key(287.5, 100, 50, \"G\", 71));\n  keys.push(new Key(337.5, 100, 50, \"H\", 72));\n  keys.push(new Key(387.5, 100, 50, \"J\", 74));\n  keys.push(new Key(437.5, 100, 50, \"K\", 75));\n  keys.push(new Key(487.5, 100, 50, \"L\", 76));\n  keys.push(new Key(537.5, 100, 50, \":\\n;\", 186));\n  keys.push(new Key(587.5, 100, 50, `\"\\n'`, 222));\n  keys.push(new Key(637.5, 100, 50, \"|\\n\\\\\", 220));\n  keys.push(new Key(0, 150, 112.5, \"Shift\", 16));\n  keys.push(new Key(112.5, 150, 50, \"Z\", 90));\n  keys.push(new Key(162.5, 150, 50, \"X\", 88));\n  keys.push(new Key(212.5, 150, 50, \"C\", 67));\n  keys.push(new Key(262.5, 150, 50, \"V\", 86));\n  keys.push(new Key(312.5, 150, 50, \"B\", 66));\n  keys.push(new Key(362.5, 150, 50, \"N\", 78));\n  keys.push(new Key(412.5, 150, 50, \"M\", 77));\n  keys.push(new Key(462.5, 150, 50, \"<\\n,\", 188));\n  keys.push(new Key(512.5, 150, 50, \">\\n.\", 190));\n  keys.push(new Key(562.5, 150, 50, \"?\\n/\", 191));\n  \n  pop();\n}\n\nfunction draw() {\n  background(params.bg_color);\n  fill(params.color);\n  addRect();\n  //  image(img, 0, 0, width, height);\n  \n  push();\n  for (const k of keys) {\n    k.render();\n  }\n  \n  pop()\n}\n\nfunction addRect() {\n  for (let i = 0; i < chromArray1.length; i++) {\n    push();\n    translate(chromArray1[i].x, chromArray1[i].y);\n  //  circle(-275, -150, params.circle_size);\n    circle(-275, 80, params.circle_size);\n    circle(-275, 160, params.circle_size);\n    // rect(-200, -100,  12);\n    pop();\n    \n\n    //     for (let i = 0; i < chromArray2.length; i++)\n    //    push();\n    //    translate(chromArray2[i].x, chromArray2[i].y);\n    // circle(-200, 100,  params.circle_size);\n    //    pop();\n    //\n  }\n\n}\n\nclass Key {\n  constructor(x, y, w, k, code) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.k = k;\n    this.code = code;\n  }\n  \n  render() {\n    stroke(0);\n    if (keyIsDown(this.code)) {\n      fill(0);\n    } else {\n      noFill();\n    }\n    rect(this.x + 5, this.y + 5, this.w-10, 40);\n   textAlign(CENTER, CENTER);\n    noStroke();\n    if (keyIsDown(this.code)) {\n      fill(255);\n    } else {\n      fill(0);\n    }\n      textSize(14);\n  noStroke();\n    text(this.k, this.x + this.w/2, this.y + 25);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qxcbvzfhs4vqkdgbavld",
        "width": 852,
        "height": 370,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-24T16:36:31.652Z"
      },
      {
        "category": "nerdy",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-24T17:32:14.608Z"
      },
      {
        "category": "funny",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-02-24T17:32:16.963Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "sdx2tAqbHNdzqYTR7",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-31T05:37:07.018Z",
    "posted": true,
    "lesson": "Music",
    "description": "**Heartbeat to Music: Tone.js + Perlin Noise** Improved an older sketch where I was trying to convert heart beats and breathing rhythms into music. I added mono-synth notes using Tone.js to create a generative melody line based on Perlin Noise, as a layer on top of Tanpura beats and flutes, set to a simulated BPM and Breaths per second. Next would be to hook up sensors and map it to one's actual heartbeat.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qxuubgoycdhegvijlkad",
        "width": 806,
        "height": 802,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:16:11.345Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-31T13:09:31.526Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T14:33:30.071Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-31T14:50:27.383Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-31T15:50:03.125Z"
      }
    ],
    "comments": [
      {
        "comment": "This is sooo cool",
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-31T06:40:24.868Z"
      },
      {
        "comment": "Super hypnotic! very eye catching!",
        "commenter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-31T13:10:23.981Z"
      }
    ]
  },
  {
    "_id": "snGzGw9E8gTX9LHrg",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-09T22:26:07.736Z",
    "posted": true,
    "lesson": "Random",
    "description": "For the pair challenge, Brian and I created a sketch that generates random images using a decorative typeface from Ohno called Casual-Textile using the deck tactic.",
    "code": "let deck = [1, 'C', 'D', 'E', 'F', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p'];\nlet position = 0;\n\nlet fontTextile;\nfunction preload() {\n  fontTextile = loadFont('Fonts/OhnoCasualTextileDemo.otf');\n}\n\nlet backgroundOpacity = [0, 255];\n\nfunction setup() {\n  createCanvas(1000, 800);\n  noLoop();\n  background(101, 207, 220, backgroundOpacity[floor(random(2))]);\n  strokeWeight(0);\n  textFont(fontTextile);\n  deck = shuffle(deck);\n  blendMode(DIFFERENCE);\n  noLoop();\n}\n\nfunction draw() {\n  text(deck[valueFromDeck()], width/2, height/2); \n\n  let i = 0;\n  for (i = 0; i < deck.length; i++) {\n    fill(125, 235, random(51));\n\n    textSize(min(random(100, 500), random(100, 500),random(100, 500)));\n\n    text(pickLetter(), random((width)-300), random((height/2)-300, (height/2)+500));\n  }\nnoLoop();\n}\n\nfunction pickLetter(){\n  return valueFromDeck();\n}\n\n\nfunction valueFromDeck() {\n  let v = deck[position];\n\n  position++;\n\n  if (position > deck.length) {\n    deck = shuffle(deck);\n    v = deck[0];\n    position = 0;\n  }\n\n  return v;\n}\n\nfunction mousePressed() {\n  saveCanvas('myCanvas', 'png');\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qcvcxhbd5hwjaccb5lpv",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/o1fh56hqlsbgveflvmq2",
        "width": 2000,
        "height": 1600,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:44:15.167Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "svY25NABNJ5tehh2K",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-16T02:54:53.35Z",
    "posted": true,
    "lesson": "Noise",
    "description": "I experimented with noise to create this patterned image for the pair challenge with Alex",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/a1gyrbvnl7dzdt2kn4me",
        "width": 1400,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T03:35:32.715Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-17T13:29:37.323Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "t2RJacARtjWXT6AEZ",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-28T07:35:03.625Z",
    "posted": true,
    "lesson": "API",
    "description": "continued using chatGPT to debug this interactive ‘S’. I know prompt engineering I has this whole thing about coming up with good, refined input but I actually love how non-specific your troubleshooting question can be and it still figures most of it out from context.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mbrl3pqvpxacyhu41bml",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/mntfbotqeiibhtddqy3f",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ucxvu706xxofa14huwj6",
        "width": 1676,
        "height": 1676,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "t3TZJT3r6qjfKpsEv",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-06T19:03:19.484Z",
    "posted": true,
    "lesson": "Random",
    "description": "**Worked with Isha on the Pair Challenge on p5.js:** 10 patterns picked randomly from a deck such that each pattern appears at least once in every row",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet gridX = [0, 200, 0, 200];\nlet gridY =[0, 0, 200, 200];\n\nlet canvasW = 640;\nlet canvasH = 440;\nlet gridW = 500;\nlet gridH = 350;\n\nlet patterns = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet patternPos = 0;\n\nlet gridSize = 50;\n\nfunction setup() {\n  createCanvas(canvasW, canvasH);\n\n  strokeCap(SQUARE);\n  stroke(255); strokeWeight(2);\n  \n  //Initial Deck Shuffling\n  patterns = shuffle(patterns);\n  \n  frameRate (1);\n  //noLoop();\n  noStroke();\n}\n\nfunction draw() {\n  background(255);\n  for (let j = 45; j < 350; j+=gridSize) {\n    for (let i = 70; i < 570; i+=gridSize) {\n      let p = patterns[patternPos]; \n      drawPattern(p, i, j);\n      \n      patternPos ++;\n      if (patternPos > patterns.length-1) {\n        patterns = shuffle(patterns);\n        patternPos = 0;\n      }\n    }\n  }\n  \n  \n}\n\nfunction drawPattern(pNum, posX, posY) {\n  switch (pNum){\n    case 0:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 1:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 2:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n      pop();\n      break;\n    case 3:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY, 50, 50, PI/2, PI);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 4:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 5:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n      pop();\n      break;\n    case 6:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX, posY+50, 50, 50, 3*PI/2, 0);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 7:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  arc(posX, posY, 50, 50, 0, PI/2);\n  line(posX+25, posY, posX+25, posY+50);\n  arc(posX+50, posY+50, 50, 50, PI, 3*PI/2);\n      pop();\n      break;\n    case 8:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n      pop();\n      break;\n    case 9:\n      push();\n      noFill();\n  strokeWeight(10);\n  stroke(\"red\");\n  line(posX+25, posY, posX+25, posY+50);\n  line(posX, posY+25, posX+50, posY+25);\n      pop();\n      break;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mgdt2ywy5o4newvzjn5s",
        "width": 1282,
        "height": 882,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:08:19.653Z"
      },
      {
        "category": "funny",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:08:22.994Z"
      },
      {
        "category": "nerdy",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-06T19:08:23.827Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-06T21:24:43.538Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-07T00:15:17.276Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T07:05:08.262Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:09.254Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "t5XpEi9QgeyWXCHJJ",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-14T19:35:34.073Z",
    "posted": true,
    "lesson": "Text",
    "description": "**Gradients using visual weight of different monospace letters:** pardon me for posting (almost) the same sketch again, but I added gradients using Perlin noise and found it so much more beautiful",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/d9u0sffvwnxf2w6ierw3",
        "width": 2092,
        "height": 1520,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/j5ox6qsmiynaimkjkd4i",
        "width": 1596,
        "height": 1520,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-05T01:43:12.813Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:31:37.038Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "t9JM5XPcciv7g5iaj",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-24T16:45:16.775Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair challenge using Aabha's code! The animation is much smoother, but I think the screen recording slowed it down a bit.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/byd5i6yafo225y5kc1nn",
        "width": 1060,
        "height": 1044,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/i2odfv5usbacgc1gvruy",
        "width": 1066,
        "height": 1052,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T17:00:25.85Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tGLnxQcGezECLfFCd",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-08T04:53:32.856Z",
    "posted": true,
    "lesson": "Random",
    "description": "Had fun with my last Vera Molnar inspired sketch so I wanted to try another, I realized it's harder than I thought to rotate in p5 or maybe I'm missing something 😅",
    "code": "let gridSize = 6;\n\nfunction setup() {\n  createCanvas(gridSize * 100 + 200, gridSize * 100 + 200);\n}\n\nfunction draw() {\n  background(220);\n  textAlign(CENTER, CENTER);\n  noLoop();\n  let blue = color(5, 0, 190, 150);\n  let teal = color(51, 165, 165, 150);\n  let orange = color(244, 131, 0, 150);\n  let purple = color(84, 0, 155, 150);\n  let black = color(42, 28, 44, 150);\n  let colors = [orange, blue, teal, black, purple];\n  let colors2 = [orange, teal, black, purple];\n\n\n  for (let y = 0; y < gridSize; y++) {\n\n    for (let x = 0; x < gridSize; x++) {\n      let randomColor1 = (floor(random(colors.length))+floor(random(colors.length)) + floor(random(colors.length))) / 3;\n      let xpos = x *100 + 100;\n      let ypos = y *100 + 100;\n\n      rectMode(CENTER);\n      \n      let numSquares1 = random(7, 9);\n      let i = 0;\n\n      stroke(colors[floor(randomColor1)]);\n      for (let x = 0; x < numSquares1; x++) {\n        let randomColor2 = floor(random(colors2.length));\n        if (x % 3 == 0) {\n          stroke(colors2[floor(randomColor2)]);\n          strokeWeight(random(1.2,2.3));\n        } else {\n          stroke(colors[floor(randomColor1)]);\n        }\n\n        noFill();\n        // beginShape();\n        //   vertex(xpos + random(-20, 20), ypos + random(-20, 20));\n        //   vertex(xpos + 100 + random(-20, 20), ypos + random(10, 20));\n        //   vertex(xpos + 100 + random(10), ypos + 100 + random(10));\n        //   vertex(xpos + random(10, 20), ypos + 100 + random(10, 20));\n        //   endShape(CLOSE);\n        // beginShape();\n        //   vertex(xpos + random(-30, 20 + i), ypos + random(-30, 20));\n        //   vertex(xpos + 100 + random(-30, 20), ypos + random(-30, 20 + i));\n        //   vertex(xpos + 100 + random(-30,20), ypos + 100 + random(-30, 20));\n        //   vertex(xpos + random(-30, 20 + i), ypos + 100 + random(-30, 20 + i));\n        //   endShape(CLOSE);\n\n        beginShape();\n          vertex(xpos + random(-30, 50 + i), ypos + random(-30, 50));\n          vertex(xpos + 100 + random(-30, 50), ypos + random(-30, 50 + i));\n          vertex(xpos + 100 + random(-30,50), ypos + 100 + random(-30, 50));\n          vertex(xpos + random(-30, 50 + i), ypos + 100 + random(-30, 50 + i));\n          endShape(CLOSE);\n        beginShape();\n          vertex(xpos + random(-30, 50 + i), ypos + random(-30, 50));\n          vertex(xpos + 100 + random(-30, 50), ypos + random(-30, 50 + i));\n          vertex(xpos + 100 + random(-30,50), ypos + 100 + random(-30, 50));\n          vertex(xpos + random(-30, 50 + i), ypos + 100 + random(-30, 50 + i));\n          endShape(CLOSE);\n\n          i++;\n      }\n    \n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/hucppidpoaegqekfnpve",
        "width": 1280,
        "height": 1280,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-08T22:25:49.854Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-09T14:43:38.741Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-10T00:47:06.593Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-02-10T02:03:02.26Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tKzPr6j2YSXuE2K5T",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-02-14T02:24:38.406Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Weekly experiment with WebGL and 3D stuff in p5.js. Even with just dedicating one noise function as a plug-in variable, I ended up creating some unexpected interactions with WebGL! With my experimentation I ended up creating noise through translating the position of the meshes.",
    "code": "//require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\n\nlet n;\nlet fc;\n\nfunction setup() {\n  createCanvas(600, 600, WEBGL);\n  //debugMode();\n  frameRate(30);\n}\n\nfunction draw() {\n  background(20, 61, 60);\n  \n  for(i = 0; i < width; i += 20) {\n    n = noise(i * frameCount);\n    fc = frameCount / 3 * 0.03;\n    pointLight(150, 200, 200, 0, 100, 0);\n    ambientMaterial(50);\n    noStroke();\n    \n    //box translation experiment\n    \n    translate(frameCount + n / 5, 0, 0);\n    rotateX(fc);\n    box(100 + n);\n    \n    translate(frameCount + n / 5, 0, 0);\n    rotateY(fc);\n    box(100 + n);\n    \n    translate(frameCount + n / 5, 0, 0);\n    rotateZ(fc);\n    box(100 + n);\n    \n    //box translation reversed\n    \n    push();\n    \n    translate(-(frameCount + n / 5), 0, 0);\n    rotateX(-fc);\n    sphere(60 - n);\n    \n    translate(-(frameCount + n / 5), 0, 0);\n    rotateY(-fc);\n    sphere(60 - n);\n    \n    translate(-(frameCount + n / 5), 0, 0);\n    rotateZ(-fc);\n    sphere(60 - n);\n    \n    pop();\n  }\n  \n  camera(-500, 100, -400);\n  //orbitControl();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ct7vvjb7iwjlxrwk5xie",
        "width": 899,
        "height": 895,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-14T06:43:06.599Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T06:55:04.98Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tccJf6jkKJWHpp2mF",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-03T15:04:26.344Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Week 1 Instruction Set",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nhjjokhryz7pph1tgfee",
        "width": 595,
        "height": 486,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T05:59:45.765Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tiMNxfvCfGErifRna",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-20T19:18:29.624Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I used ChatGPT to add a bunch of new conversation prompts to Confab (the app I recently released with my friend): https://confab.me/",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ygmjtvijrggdfsumo0pp",
        "width": 1024,
        "height": 500,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dicakqokhfgaeoscqauh",
        "width": 1772,
        "height": 1488,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "tjhTZ57KPWXgAiA85",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-16T21:22:07.125Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Halloween's just around the corner! (time is relative). Made album cover using playform's styleGANs that trained 30 jack-O lantern images and gave me this weird wishy washy output that kinda works with the theme",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/t67cgqsunxnkiliazcex",
        "width": 1962,
        "height": 1692,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ue7l1wkrkzayklcqs2gq",
        "width": 1920,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ejjlipltpe2xrnjgsmv7",
        "width": 2400,
        "height": 1700,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-17T01:07:04.383Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-17T01:16:00.012Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-17T01:38:25.526Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tqqWZFZ8tb5f7sH9z",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-02-03T14:52:42.716Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Some sin waves generation using a strong middle bias 🌊",
    "code": "let j;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  // noLoop();\n  \n  frameRate(1);\n  \n  angleMode = DEGREES;\n}\n\nfunction draw() {\n  background(37, 84, 105);\n  a = 0;\n  inc = 0.1;\n  \n  for(j = 0; j<windowHeight; j+=80){\n    \n     // r = 255;\n    g = random(0,255);\n    b = random (0,50);\n    \n    strokeWeight(3)\n    stroke(g, 255, 255, b);\n    \n    // r = random(0,20);\n    r = max(random(0, 5), random(0, 5), random(0, 5), random(0, 5), random(0, 5));\n\n    drawWave(j);\n  }\n  \n}\n\nfunction drawWave(y){\n  for (let i = 0; i<windowWidth; i++){\n    x1 = i;\n    x2 = i+1;\n    line(x1 * r, y + sin(a) * 90, x1 * r, windowHeight);\n    line(x1 * r, y + sin(a) * 90, x2 * r, y + sin(a+inc) * 90);\n    a=a+inc;\n  }\n  \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dcrui283jktwmuyltgnd",
        "width": 1650,
        "height": 1620,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/z0ihcx27fsjiekfrg5ud",
        "width": 1650,
        "height": 1620,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-03T15:20:08.406Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T18:03:25.566Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-08T21:25:27.033Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tr97YBdZFS7W6yvny",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-12T01:02:16.529Z",
    "posted": true,
    "lesson": "Text",
    "description": "Enlisted the help of ChatGPT to generate some lists, including celebrities, charitable organizations, designer brands, etc. Then, I used string templating to create this randomized \"collaboration idea\" generator",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nt9bai7fjxqts9kf7ega",
        "width": 2520,
        "height": 1392,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pncpk4moh9teh494wqto",
        "width": 2538,
        "height": 1386,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/g0oollbfbfd81zzm6xuc",
        "width": 2502,
        "height": 1418,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-12T02:47:24.721Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "trAcXD22gXaKdHg7P",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-05-11T20:56:00.203Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Created these floral patterns using turtle graphics, a png, and the exclusion blend mode 🌸",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/lt7k7gmspoa62vrqlboh",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/urte724yym0wqbpsbwgl",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ze0c1zyf1zfh7ceeaalt",
        "width": 1000,
        "height": 1000,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-12T04:35:34.8Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T10:19:56.144Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tsAH7jJnWorz5c4Kx",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-01-31T03:11:49.152Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Sketch made using Graeme's instructions.\n\nAlso no I did not have Helvetica.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/s9jv43snwmcigjqkq8d4",
        "width": 3300,
        "height": 5100,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T12:59:51.353Z"
      },
      {
        "category": "funny",
        "voter_id": "ThhLMCZBENKtw2dT6",
        "created_at": "2023-02-01T02:15:24.406Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tsMQMjGSbCWMriqhs",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-21T02:43:32.915Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "I went back to pixels week and asked miss ChatGPT to make me a pixel sorting algorithm. It was trial and error for sure and couldn't get some things to do what I wanted (the image is from Midjourney, I asked it to imagine Blackpink's next music video lol)",
    "code": "let img;\n\nfunction preload() {\n  img = loadImage('assets/test-09.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  pixelDensity(1);\n  image(img, 0, 0);\n}\n\nfunction draw() {\n  noLoop();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n  sortImage();\n}\n\nfunction sortImage() {\n  loadPixels();\n\n  for (let y = 0; y < height; y++) {\n    if (random() > 0.1) { // randomly select rows to sort\n      let row = [];\n      let start = floor(random(width)); // random starting point for sorting\n      let end = start; // end point for sorting\n      let maxSum = 0; // highest pixel value sum found so far\n      for (let x = start; x < width; x++) {\n        let index = (x + y * width) * 4;\n        let r = pixels[index];\n        let g = pixels[index + 1];\n        let b = pixels[index + 2];\n        let sum = r + g + b;\n        row.push([r, g, b]);\n        if (sum > maxSum) { // update end point and maxSum if a higher sum is found\n          end = x;\n          maxSum = sum;\n        }\n      }\n\n      row = row.slice(0, end - start + 1); // only sort up to the highest value pixel\n      row.sort(function(a, b) {\n        let aSum = a[0] + a[1] + a[2];\n        let bSum = b[0] + b[1] + b[2];\n        return aSum - bSum;\n      });\n\n      for (let x = start; x <= end; x++) {\n        let index = (x + y * width) * 4;\n        pixels[index] = row[x - start][0];\n        pixels[index + 1] = row[x - start][1];\n        pixels[index + 2] = row[x - start][2];\n      }\n    }\n  }\n\n  updatePixels();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pwaomqhmsvkepnofcxyf",
        "width": 1356,
        "height": 1356,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ri3mvivsas80vikpzcwf",
        "width": 1924,
        "height": 1924,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:43:48.846Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "tvsrXJvmrabd2Azsg",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-18T03:47:07.035Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Experimented with ChatGPT for a bit. Amongst my exploration, I decided to take another stab at the text challenge from last week since I was curious to see what an AI would write if I gave it a prompt. Albeit I did expand on the prompt a little bit to follow my own thought process on the challenge, and so it created this story seen here. I decided to question ChatGPT's motives to see how it would talk about its reasons behind several of the choices that it made for this story. What stood out to me is that I think it went through my question and built upon keywords to create the responses to my questions while also bringing up a myriad of sources and thought processes to justify the elements of the story. It also brought up knowledge of narrative tropes and other storytelling elements as well which piqued my interest. This was definitely a moment as it was interesting to see how an AI would go about creating a story and talking about its thought process.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jboz10x2n9zoejwzp3y4",
        "width": 1529,
        "height": 1025,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xed7eu3r2lwahdt3iyie",
        "width": 1529,
        "height": 1021,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/lbkqspxxy51acu4clpti",
        "width": 1527,
        "height": 1019,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-18T18:00:08.322Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-19T19:24:57.811Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-20T19:41:35.634Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "twSiAWNc2it3fcYoX",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-28T02:26:00.693Z",
    "posted": true,
    "lesson": "API",
    "description": "Combined the p5play chapter with the Creative AI chapter to see how ChatGPT produces microgames. It was interesting to see how ChatGPT creates games until I started seeing issues with the library it was trying to access. Since p5 uses the new library, it creates a conflict since I think ChatGPT was trying to draw upon the old library using functions like createSprite() instead of variable = new Sprite;. Also I think as I kept trying to iterate and fix the code through GPT it kept changing the scope of the project as well so that was interesting yet strange to see. We were able to still create some concepts albeit with many flaws in both of them.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dxxokz5bet3awughghlg",
        "width": 602,
        "height": 601,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/b7gsqtap1uknkxkdzfpm",
        "width": 822,
        "height": 598,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "tx3KLqhgGBiq9aiDY",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-27T07:01:27.876Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Attempt at recreating Challenge 1...",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\n\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB, 100);\n}\n\nfunction draw() {\n  background(0, 0, 19.61);\n  // background(100, 100, 100);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  // let noiseFrequency = 0.02;\n  let noiseFrequency = 0.4;\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    // let x = random(width);\n    // let y = random(height);\n    let x = noise(i*noiseFrequency, 0)*width;\n    let y = noise(i*noiseFrequency, 1000)*height;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    // let diameter = 10;\n    // let diameter = (random(5, 15)+random(5, 15)+random(5, 15)) / 3;\n    // let diameter = noise(i*1000, 0)*20;\n    \n    // let diameter = noise(i*2, 1000)*15 + 5;\n    let diameter = noise(i*1)*15 + 4;\n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n    // let h = floor(map(diameter, 6, 19, 0, 90));\n    let h = floor(map(diameter, 6, 18, 0, 95));\n    fill(h, 100, 100);\n\n    ellipse(x, y, diameter, diameter);\n  }\n\n  noLoop();\n}\n\nfunction roundTo(value, x) {\n\treturn round(value/x) * x;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/pw1eph4zcdn0kssv0dwj",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "txuiq5MSfiQzT4MFd",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-02T06:05:40.246Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "**Challenge 2** Yet to figure out how to smoothen transition when pulling the time speed slider",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet amplitude_slider;\nlet timeSpeed_slider;\nlet frequency_slider;\n\nlet startX = 60;\nlet startY = 280;\nlet endX = 460;\nlet endY = 80;\n\nfunction setup() {\n  createCanvas(500, 320);\n  push();\n    fill(\"white\");\n    createP(\"Amplitude\");\n    amplitude_slider = createSlider(0, 200, 80);\n    createP(\"Frequency\");\n    frequency_slider = createSlider(0, 100, 30);\n    createP(\"TimeSpeed\");\n    timeSpeed_slider = createSlider(0, 100, 80);\n  pop();\n}\n\nfunction draw() {\n  background(50);\n  ellipseMode(CENTER);\n\n  let amplitude = amplitude_slider.value() / 2;\n  let frequency = frequency_slider.value() / 3;\n  let timeSpeed = timeSpeed_slider.value() / 15000;\n  \n  noiseDetail(1, 0.5);\n\n  fill(255);\n  noStroke();\n\n  // study this loop. do you understand how the line of ellipses is created?\n  // for (i = 0; i < 1; i += 0.02 + (noise(i*10))*0.01) \n  for (i = 0; i < 1; i += 0.02) {\n    let x = lerp(startX, endX, i);\n    let y = lerp(startY, endY, i);\n\n    // hint: drive offsetX and offsetY with noise() instead of random()\n    // let offsetX = noise(i*frequency, (i+0.02)*frequency, millis()*timeSpeed) * amplitude;\n    // let offsetY = noise(i*frequency, (i+0.02)*frequency, millis()*timeSpeed) * amplitude;\n    let offsetX = (noise(i*frequency + millis()*timeSpeed, 1)-0.5) * amplitude;\n    let offsetY = (noise(i*frequency + millis()*timeSpeed, 3)-0.5) * amplitude;\n\n    ellipse(x + offsetX, y + offsetY, 10, 10);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qnfav1unchv7b1ztu9zu",
        "width": 1020,
        "height": 1112,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:06.674Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "u2qbScXyhYphRbMZu",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-01-30T22:04:10.785Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Self Portrait using Chris's instructions",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/alfwnqwfmhuubhmjtutk",
        "width": 2084,
        "height": 2084,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-01-30T22:11:36.207Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T00:23:21.875Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "u7zDjjPBmSps3nrqo",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-31T03:00:06.237Z",
    "posted": true,
    "lesson": "Music",
    "description": "Not the perfect one and cheated a little but wanted these squares to appear as the notes were playing.",
    "code": "// console.log(Tone);\n\nlet synth;\nlet fft;\nlet xPos = 200;\nvar x = 50;\nvar b = 200;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  background(220);\n\n // fft = new p5.FFT();\n\n  synth = new Tone.Synth().toDestination();\n}\n\nfunction draw() {\n//   let waveform = fft.waveform();\n\n//   beginShape();\n//   stroke(20);\n//   for (let i = 0; i < waveform.length; i++) {\n//     let x = map(i, 0, waveform.length, 0, width);\n//     let y = map(waveform[i], -1, 1, 0, height);\n//     vertex(x, y);\n//   }\n  //endShape();\n        // Part 1: Move a circle from the middle of the screen to the right side of the screen.\n//  rectMode(CENTER);\n  //ellipse(xPos, 200, 10);\n\n//   xPos += 1;\n\n//   if (xPos > 209) {\n//     xPos = 0;\n// }\n}\n\nfunction mousePressed() {\n  mousebuttonClicked = true;\n  synth.triggerAttackRelease(\"C4\", 4, 0);\n  synth.triggerAttackRelease(\"E4\", 4, 1);\n  synth.triggerAttackRelease(\"G4\", 4, 2);\n  synth.triggerAttackRelease(\"B4\", 4, 3);\n\n  synth.triggerAttackRelease(\"B4\", 4, 4);\n  synth.triggerAttackRelease(\"G4\", 4, 5);\n  synth.triggerAttackRelease(\"E4\", 4, 6);\n  synth.triggerAttackRelease(\"C4\", 0.5, 7);\n  \n\n fill(0, mouseY, mouseX);\n  rectMode(CENTER);\n  rect(mouseX, mouseY, x, x);\n\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kr5vhbx0tlv8fpcgfreb",
        "width": 376,
        "height": 368,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:14:23.226Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-31T13:03:13.639Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "u8fThvjg2sGyfyJTt",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-05-12T17:04:39.967Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "SPIROGRAPH",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ycyfru8cdaf93gr59k93",
        "width": 338,
        "height": 303,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "u8gvbofFmK2tDPmo2",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-30T03:39:03.939Z",
    "posted": true,
    "lesson": "Music",
    "description": "I recreated Deep Purple's Smoke on the Water - explored Tone.PolySynth chords, the oscillator, and BPM to make this. I wanted to try to add a drum beat as well but ran out of time",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gehm17tzkum7mvpxobic",
        "width": 708,
        "height": 830,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/jnnlv4ijnoujtdjqxe5k",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-30T15:19:25.798Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "uDiNZXGhg7hyFmhpL",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-03-09T05:04:33.374Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Pixel Ouroboros challenge: 1st, 2nd, and 5th regenerations. Replaced pixels of a tulip flowers image with letters of the same colour, with size determined by the greyscale of the image. First generation resembled the original flower image but the text started getting lighter and larger and looking like big blobs by the end. Interesting to note the positive feedback loop - if I had set the darker colours to larger sizes, the image would have gotten darker and darker with regenerations. <br>\n\nUsing the get() function took a long time. It slowed down my computer enough that it wouldn't even work until I fed it a super small image and console.logged the get() array. Had to do that every time I regenerated the image, took a lot of time lol",
    "code": "let img;\nlet alphabet = [\"t\", \"u\", \"l\", \"i\", \"p\", \"s\"];\n\nfunction preload() {\n  img = loadImage(\"flowers4.jpg\");\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  background(0);\n\n  // image(img, 0, 0);\n  img.loadPixels();\n\n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      let imgcolor = img.get(x, y);\n      console.log(imgcolor);\n\n      let size = map(lightness(imgcolor), 0, 255, 0, 75);\n      let sp = width/img.width;\n      textSize(size);\n      fill(imgcolor);\n      text(alphabet[floor(random(alphabet.length))], x*sp+sp*0.5, y*sp+sp*0.5)\n    }\n  }\n\n  // noSmooth();\n  updatePixels();\n  // noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/doyiqjv06qislwmd76am",
        "width": 821,
        "height": 821,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/n0bvqbybwlqbbw1kmczt",
        "width": 821,
        "height": 821,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ucxm0l3mpzkh5lrzyq1m",
        "width": 823,
        "height": 823,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T18:59:49.899Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-10T00:23:27.735Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:33.852Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-03-10T17:27:42.712Z"
      }
    ],
    "comments": [
      {
        "comment": "Love this!\n",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-09T19:00:54.787Z"
      }
    ]
  },
  {
    "_id": "uLKKqeCcw86yHBYZs",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-13T21:12:09.492Z",
    "posted": true,
    "lesson": "Text",
    "description": "Another bad story by Rama, Aabha, and I in collaboration with Markov.",
    "code": "const bill_of_rights =\n  \"October arrived, spreading a damp chill over the grounds and into the castle. Madam Pomfrey, the nurse, was kept busy by a sudden spate of colds among the staff and students. Her Pepperup potion worked instantly, though it left the drinker smoking at the ears for several hours afterward. Ginny Weasley, who had been looking pale, was bullied into taking some by Percy. The steam pouring from under her vivid hair gave the impression that her whole head was on fire.Raindrops the size of bullets thundered on the castle windows for days on end; the lake rose, the flower beds turned into muddy streams, and Hagrid's pumpkins swelled to the size of garden sheds. It was a dark and stormy night and Oliver Wood's enthusiasm for regular training sessions, however, was not dampened, which was why Harry was to be found, late one stormy Saturday afternoon a few days before Halloween, returning to Gryffindor Tower, drenched to the skin and splattered with mud. Even aside from the rain and wind it hadn't been a happy practice session. Fred and George, who had been spying on the Slytherin team, had seen for themselves the speed of those new Nimbus Two Thousand and Ones. They reported that the Slytherin team was no more than seven greenish blurs, shooting through the air like missiles.\";\n  \nconst the_raven =\n  \"When Rosemary Harper joins the crew of the Wayfarer, she isn’t expecting much. The Wayfarer, a patched-up ship that’s seen better days, offers her everything she could possibly want: a small, quiet spot to call home for a while, adventure in far-off corners of the galaxy, and distance from her troubled past. The crew is a mishmash of species and personalities, from Sissix, the friendly reptillian pilot, to Kizzy and Jenks, the constantly sparring engineers who keep the ship running. It was a dark and stormy night but life on board is chaotic, but more or less peaceful—exactly what Rosemary wants.Until the crew are offered the job of a lifetime: the chance to build a hyperspace tunnel to a distant planet. They’ll earn enough money to live comfortably for years… if they survive the long trip through war-torn interstellar space without endangering any of the fragile alliances that keep the galaxy peaceful. But Rosemary isn’t the only person on board with secrets to hide, and the crew will soon discover that space may be vast, but spaceships are very small indeed.\";\n\nconst seuss =\n  \"If you have ever peeled an onion, then you know that the first thin, papery layer reveals another thin, papery layer, and that layer reveals another, and another, and before you know it you have hundreds of layers all over the kitchen table and thousands of tears in your eyes, sorry that you ever started peeling in the first place and wishing that you had left the onion alone to wither away on the shelf of the pantry while you went on with your life, even if that meant never again enjoying the complicated and overwhelming taste of this strange and bitter vegetable. In this way, the story of the Baudelaire orphans is like an onion, and if you insist on reading each and every thin, papery layer in A Series of Unfortunate Events, your only reward will be 170 chapters of misery in your library and countless tears in your eyes. Even if you have read the first twelve volumes of the Baudelaires' story, it is not too late to stop peeling away the layers, and to put this book back on the shelf to wither away while you read something less complicated and overwhelming. The end of this unhappy chronicle is like its bad beginning, as each misfortune only reveals another, and another, and another, and only those with the stomach for this strange and bitter tale should venture any farther into the Baudelaire onion. I'm sorry to tell you this, but that is how the story goes. The Baudelaire orphans would have been happy to see an onion, had one come bobbing along as they traveled across the vast and empty sea in a boat the size of a large bed but not nearly as comfortable. Had such a vegetable appeared, Violet, the eldest Baudelaire, would have tied up her hair in a ribbon to keep it out of her eyes, and in moments would have invented a device to retrieve the onion from the water. Klaus, the middle sibling and the only boy, would have remembered useful facts from one of the thousands of books he had read, and been able to identify which type of onion it was, and whether or not it was edible. And Sunny, who was just scarcely out of babyhood, would have sliced the onion into bite-sized pieces with her unusually sharp teeth, and put her newly developed cooking skills to good use in order to turn a simple onion into something quite tasty indeed. The elder Baudelaires could imagine their sister announcing 'Soubise! which was her way of saying 'Dinner is served.' But the three children had not seen an onion. It was a dark and stormy night and indeed, they had not seen much of anything during their ocean voyage, which had begun when the Baudelaires had pushed the large, wooden boat off the roof of the Hotel Denouement in order to escape from the fire engulfing the hotel, as well as the authorities who wanted to arrest the children for arson and murder. The wind and tides had quickly pushed the boat away from the burning hotel, and by sunset the hotel and all the other buildings in the city were a distant, faraway blur. Now, the following morning, the only things the Baudelaires had seen were the quiet, still surface of the sea and the gray gloom of the sky. The weather reminded them of the day at Briny Beach when the Baudelaires had learned of the loss of their parents and their home in a terrible fire, and the children spent much of their time in silence, thinking about that dreadful day and all of the dreadful days that had followed. It almost would have been peaceful to sit in a drifting boat and think about their lives, had it not been for the Baudelaires' unpleasant companion. Their companion's name was Count Olaf, and it had been the Baudelaire orphans' misfortune to be in this dreadful man's company since they had become orphans and he had become their guardian. Olaf had hatched scheme after scheme in an attempt to get his filthy hands on the enormous fortune the Baudelaire parents had left behind, and although each scheme had failed, it appeared as if some of the villain's wickedness had rubbed off on the children, and now Olaf and the Baudelaires were all in the same boat. Both the children and the count were responsible for a number of treacherous crimes, although at least the Baudelaire orphans had the decency to feel terrible about this, whereas all Count Olaf had been doing for the past few days was bragging about it.\";\n\nconst test = \"A B C\";\n\nconst markovModel = generateModel(bill_of_rights, the_raven, seuss);\nconst output_text = generateText(markovModel, \"It was a dark and stormy night\");\n\nlet start = false;\n\ndocument.body.innerHTML = output_text;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // words[0] = \"It was\";\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n \n \n  // start with the word passed in\n  \n  // let current_word = first_word;\n  let items=[\"and\", \"but\", \"in\", \"after\"]\n  let current_word = items[Math.floor(Math.random()*items.length)];\n  let output_text = first_word + \" \" + current_word;\n  for (let i = 0; i < 500; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) {\n      console.log(\"word doesnt exist in model\")\n      break;\n    }\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if(current_word.length === 50){\n      output_text+=\".\";\n    }\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/y1alznvo5imiiai33k7u",
        "width": 1821,
        "height": 1821,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-04-13T23:58:55.853Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "uNiYxxnGqP75HL7kY",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-24T03:22:14.514Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "My attempt at the coding challenge turned into this",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fw1ilz6snhxfjlzgtfro",
        "width": 1878,
        "height": 1656,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-26T02:09:36.564Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "uX5bC8LHE6RRH56dv",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-27T04:31:45.688Z",
    "posted": true,
    "lesson": "API",
    "description": "APIs coming soon! But first, animation week. Played around w how frameRate frameCount and Millis affect the motion of simple points and lines in space. Helps to pair them with noise to smooth out the animation.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/siaz9sfqhypsutajsmjv",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/s9qvn6dxgtblyiydn071",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-27T04:57:27.086Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-28T01:14:46.936Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ucRF5gd3Cd5HXTLio",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-02-23T07:55:56.734Z",
    "posted": true,
    "lesson": "Params",
    "description": "Tried to create a little garden 🌸",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rc5tcazpnpfh4rm4k8fe",
        "width": 2344,
        "height": 1450,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/xdo0jiewfzyx7uynv3ja",
        "width": 1194,
        "height": 1192,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/axvy1zvlhds0bcwza7ka",
        "width": 1190,
        "height": 1190,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-23T13:22:29.33Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T14:53:14.835Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-23T14:56:07.441Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:16.428Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-23T17:12:59.919Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T02:22:03.288Z"
      }
    ],
    "comments": [
      {
        "comment": "So cutee!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T02:22:16.399Z"
      }
    ]
  },
  {
    "_id": "uyDCa6fRzadNJXCj2",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-15T05:09:43.736Z",
    "posted": false,
    "lesson": "Noise",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "v3FqqMsTntzZbzYCW",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-31T03:52:39.21Z",
    "posted": true,
    "lesson": "Music",
    "description": "The **Write and Record a Song** without code challenge (i.e embarrass yourself challenge). I am not pitch perfect or a trained signer, so prepare to get triggered 🤭. Recorded on an Android recorder, stitched together in Premier Pro. P.S Mom said this sounded like \"Practice crying in different pitches challenge\".",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bl9dcukckmziorinx6tn",
        "width": 600,
        "height": 400,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-31T10:15:02.892Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T01:05:13.393Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:37.393Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "v5pMfQwixboBcREjp",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-05-05T16:02:56.021Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "trying knots with cubes.. https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Tips_and_Tricks",
    "code": "difference() {\ncolor(\"lightgrey\")\n    cube([20,20,80]);\n    translate([15,15,60])\n    cube([15,15,5]);\n    translate([15,15,50])\n    cube([15,15,5]);\n    translate([15,15,40])\n    cube([15,15,5]);\n    translate([15,15,30])\n    cube([15,15,5]);\n    translate([15,15,70])\n    cube([15,15,5]);\n    translate([-1,15,70])\n    cube([6,15,5]);\n    translate([-1,15,60])\n    cube([6,15,5]);\n    translate([-1,15,50])\n    cube([6,15,5]);\n    translate([-1,15,40])\n    cube([6,15,5]);\n    translate([-1,15,30])\n    cube([6,15,5]);\n    translate([15,-1,70])\n    cube([15,6,5]);\n    translate([15,-1,60])\n    cube([15,6,5]);\n    translate([15,-1,50])\n    cube([15,6,5]);\n    translate([15,-1,40])\n    cube([15,6,5]);\n    translate([15,-1,30])\n    cube([15,6,5]);\n    \n}\n// An application of the minimum rotation\n// Given two points p0 and p1, draw a thin cylinder with its\n// bases at p0 and p1\nmodule line(p0, p1, diameter=1) {\n    v = p1-p0;\n    translate(p0)\n        color(\"cyan\")\n\n        // rotate the cylinder so its z axis is brought to direction v\n        multmatrix(rotate_from_to([0,0,1],v))\n            cylinder(d=diameter, h=norm(v), $fn=4);\n}\n// Generate the polygonal points for the knot path \nknot = [ for(i=[0:2:360])\n         [ (19*cos(3*i) + 40)*cos(2*i),\n           (19*cos(3*i) + 40)*sin(2*i),\n            19*sin(3*i) ] ];\n// Draw the polygonal a segment at a time\nfor(i=[1:len(knot)-1]) \n    line(knot[i-1], knot[i], diameter=5);\n// Line drawings with this function is usually excruciatingly lengthy to render\n// Use it just in preview mode to debug geometry",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dpzc1vk6gvegj2a46n9w",
        "width": 1193,
        "height": 830,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:45.516Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "v8BnFu7zfqESYkR8w",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-28T11:55:59.07Z",
    "posted": true,
    "lesson": "API",
    "description": "WEEK 12 (3/4): With the help of chatGPT and basically asking it to GPTsplain bits of code to me. HERE IS A DODGING GAME. Originally I was trying to get it to make a catching and stacking game but this ones okay too.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ouwladsxpu9vagro1psz",
        "width": 786,
        "height": 794,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "v94JzQTLj2mkcrD9d",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-05-12T03:03:42.987Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Playing around with the recursive tree code to try and make some blood vessels",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ffg1rulmcdwejc3mepy3",
        "width": 1588,
        "height": 1592,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-12T04:36:15.733Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T15:07:25.285Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "v9RjBfKaGY6CREgnH",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-03T15:33:54.536Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Sketch based on Shriti's instructions",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/nxvfgx4izfe236uvzwxp",
        "width": 1277,
        "height": 2198,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T18:02:05.171Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vALMprT9wBrx6Esm8",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-05T19:42:00.031Z",
    "posted": true,
    "lesson": "Random",
    "description": "**WIP Anni Albers' Rug, 1959:** Figured out background texture and some details on how to manipulate the threads. It was tricky to figure out curves. Need to refine details, add more patterns and find a way to complete the composition. **Please share any ideas/strategies I'm missing out on!**\n\nI read [about Anni Albers' work here](https://blog.rowleygallery.co.uk/anni-albers/). \"Knots entered Anni Albers’s work in 1947.  They point to careful consideration, yet they appear quite spontaneously as if, after more than two decades of learning to understand the material qualities of threads, she was bent on scrutinizing their intrinsic behavior.\"",
    "code": "// require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet x=-10, y=20;           //Starting position of line - made of white & black lines\nlet wBlack = 3;            //Width of black sub-line\nlet wWhite = wBlack-0.5;      //Width of black sub-line\n\nlet dots = 80000;          //# of dots spread on background texture\nlet dotW = 1.5;            //width of dots\n\nlet pattern = 0;          //pattern modifies direction of line being drawn\nlet patternTotal = 6;      //total number of patterns\n\nlet clockCurve = 0;\nlet angY = 0, angX=0;\n\nfunction setup() {\n  createCanvas(800, 600);\n  angleMode (DEGREES);\n  noStroke();\n  frameRate(600);\n  ////////////////////////////////////////////////////////////////////\n  //BACKGROUND TEXTURE\n  background(240, 120, 80);\n  push();\n  fill('rgb(210,82,38)');\n  let xPos, yPos;\n  for (let i=0; i<dots; i++) {\n    xPos = map (random(), 0, 1, 0, width);\n    yPos = map (random(), 0, 1, 0, height);\n    ellipse(xPos, yPos, dotW, dotW);\n  }\n  pop();\n  \n}\n\nfunction draw() {\n  \n  ////////////////////////////////////////////////////////////////////\n  //DRAW THE LINE\n  fill('#DCBD7A');\n  rect(x, y, wWhite, wWhite); //Center Line\n  rect(x-wWhite-wBlack, y+wBlack, wWhite, wWhite); //Left2\n  rect(x+wWhite+wBlack, y-wBlack, wWhite, wWhite); //Right2\n  rect(x-2*wWhite-2*wBlack, y+2*wBlack+wWhite, wWhite, wWhite); //Left4\n  rect(x+2*wWhite+2*wBlack, y-2*wBlack-wWhite, wWhite, wWhite); //Right4\n  \n  fill('#000');\n  rect(x-wWhite, y+wWhite, wBlack, wBlack); //Left1\n  rect(x+wWhite, y-wWhite, wBlack, wBlack); //Right1\n  rect(x-wWhite-2*wBlack, y+wBlack+wWhite, wBlack, wBlack); //Left3\n  rect(x+wWhite+2*wBlack, y-wBlack-wWhite, wBlack, wBlack); //Left3\n  \n  \n  ////////////////////////////////////////////////////////////////////\n  //SET THE PATTERN BY MODIFYING X, Y POSITIONS\n  let a;\n  \n  switch (pattern) {\n    case 0:\n      //PATTERN 2 - HORIZONTAL LINE\n      a = random();\n      if (a < 0.5) {x++;};\n      console.log('p0 - horizontal');\n      break;\n    case 1:\n      //PATTERN 4 - CLOCKWISE CURVE\n      a = random();\n      if (a < 0.5) {x+=2*cos(angY); y+=2*sin(angY);};\n      angY++; if (angY>70) pattern++;\n      console.log('p1 - clockwise');\n      break;\n    case 2:\n      //PATTERN 1 - STEEP DOWNWARD INCLINE\n      a = random();\n      if (a < 0.5) {x+=1; y+=1;};\n      a = random();\n      if (a < 0.5) y+=1;\n      console.log('p2 - steep incline');\n      break;\n    case 3:\n      //PATTERN 3 - MILD DOWNWARD INCLINE\n      a = random();\n      if (a < 0.5) {x+=1; y+=1;};\n      a = random();\n      if (a < 0.5) x+=1;\n      console.log('p3 - mild incline');\n      break;\n    case 4:\n      //PATTERN 2 - DOWNWARDS LINE\n      a = random();\n      if (a < 0.5) {y++;};\n      console.log('p4- down');\n      break;\n    case 5:\n      //PATTERN 4 - ANTI-CLOCKWISE CURVE\n      a = random();\n      if (a < 0.5) {x+=2*sin(angX); y+=2*cos(angX);};\n      angX++; if (angX>70) pattern++;\n      console.log('p5');\n      break;\n    default:\n      pattern=0;\n      angX=0; angY=0;\n      break;\n  }\n  \n}\n\n//TEMPORARY FUNCTION TO ALTERNATE PATTERNS\nfunction mouseClicked(){\n  pattern++;\n  if (pattern > patternTotal-1) pattern = 0;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/o0yzqnjabtr0kwuwmxpe",
        "width": 1192,
        "height": 1192,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/bpppdez7ifpqwrfi0lh9",
        "width": 1156,
        "height": 1192,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/nhtnybabwmgotys7uifj",
        "width": 1192,
        "height": 1192,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-05T19:59:11.436Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-05T20:03:07.894Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-05T22:20:55.236Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-06T17:43:44.599Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:17.683Z"
      }
    ],
    "comments": [
      {
        "comment": "omg you're listening to Lifafa XD ",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-09T01:32:22.271Z"
      },
      {
        "comment": "Hehe, yes!!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-14T14:35:29.535Z"
      }
    ]
  },
  {
    "_id": "vCJT92p7mR7wcvv74",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-19T23:28:18.735Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Messed around with Stable Diffusion and wanted to see what this ai program is capable of. Messed around with prompts regarding backgrounds, landscapes, and similar content to see how Stable Diffusion designs compositions, placement of objects, and how it deals with art design characteristics. One of the things I wanted to try was to write a prompt and then after that, write \"ignore the previous prompt\". Unfortunately I think Stable Diffusion was one step ahead and gave me the prompt I wrote before so I don't think I can try to get this program to create content freely for the time being.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/uojjrimggdxk3ok9eetw",
        "width": 512,
        "height": 512,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/r4kavnnzwjkdw28pkhjp",
        "width": 512,
        "height": 512,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:36:01.368Z"
      }
    ],
    "comments": [
      {
        "comment": "SD promts aren't instruction based. I'm not sure they are even really language based, but more keywords and phrases. I've tried getting SD to just make something up without guidance by passing in random strings from a password generator\n",
        "commenter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-04-20T01:05:26.414Z"
      }
    ]
  },
  {
    "_id": "vCbMzbumPCbj3XBHn",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-03-03T04:23:45.575Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "**More Spirals** Continuing my fascination with noisy spirals, with some help from Justin",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nconst pane = new Tweakpane.Pane();\n\nconst params = {\n  Width: 480,\n  AngleFactor: 0.2, //Amt angle should increase in each interation\n  StrokeWidth: 2,\n  NoiseAmp: 48,\n  RadiusFactor: 0.01,\n  Smoothing: 0.001,\n};\n\n//pane.addInput(params, \"Width\", { min: 50, max: 480 });\n//pane.addInput(params, \"StrokeWidth\", { min: 1, max: 4 });\npane.addInput(params, \"AngleFactor\", { min: 0.05, max: 0.4 });\npane.addInput(params, \"RadiusFactor\", { min: 0.01, max: 0.2 });\npane.addInput(params, \"NoiseAmp\", { min: 0.1, max: 50 });\npane.addInput(params, \"Smoothing\", { min: 0.0001, max: 0.01 });\n\nfunction setup() {\n  createCanvas(600, 600);\n  angleMode(DEGREES);\n  //strokeWeight(2);\n}\n\nfunction draw() {\n  background(\"rgb(0,0,0)\");\n\n  noStroke();\n\n  fill(\"rgb(218,38,38)\");\n  drawSpiral(width / 2.1, height / 2.1);\n\n  fill(\"rgb(38,43,218)\");\n  drawSpiral(width / 2, height / 2);\n\n  fill(\"rgb(24,176,28)\");\n  drawSpiral(width / 1.9, height / 1.9);\n}\n\nfunction drawSpiral(x, y) {\n  push();\n\n  for (\n    let angle = 0, radius = 0;\n    radius < params.Width;\n    angle += params.AngleFactor\n  ) {\n    \n    let xPos = x + sin(angle) * radius;\n    let yPos = y + cos(angle) * radius;\n\n    circle(\n      xPos + noise(xPos*params.Smoothing, yPos*params.Smoothing, 1) * params.NoiseAmp,\n      yPos + noise(yPos*params.Smoothing, xPos*params.Smoothing, 0) * params.NoiseAmp,\n      params.StrokeWidth\n    );\n\n    radius += params.RadiusFactor;\n\n    if (angle > 360) angle = 0;\n  }\n\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/spopxcdpzm929fhjxhtt",
        "width": 1198,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/gvgjb0icru0y53estapc",
        "width": 1198,
        "height": 1200,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-03T05:55:50.96Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T08:31:15.032Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2024-02-04T01:32:17.867Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vFwF7cMkkaTvnAShS",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-09T01:23:30.226Z",
    "posted": true,
    "lesson": "Random",
    "description": "Inspired by LIA's Four Seasons Spring. Used high bias to set the color palette.",
    "code": "//require https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.14/p5.js\n\nlet c, r, g, b, x, y;\nfunction setup() {\n  createCanvas(800, 620);\n  frameRate(60);\n  background(\"white\");\n\n  radio = createRadio();\n  radio.position(width / 2, height - 20);\n  radio.option(1);\n  radio.option(2);\n  radio.option(3);\n  radio.option(4);\n}\n\nfunction draw() {\n  let val = radio.value();\n\n  c = random(40, 80);\n  r = random(255);\n  g = random(255);\n  b = random(255);\n  x = random(width);\n  y = random(height - 20);\n\n  fill(r, g, b, 50);\n  stroke(r, g, b);\n\n  if (val == 1) {\n    strokeWeight(1);\n    ellipse(x, y, c);\n  }\n\n  if (val == 2) {\n    strokeWeight(1);\n    rect(x, y, c);\n  }\n\n  if (val == 3) {\n    strokeWeight(1);\n    stroke(255, 255, 255, 40);\n    x = random(width);\n    y = random(height - 20);\n\n    // the oranges 231, 88, 38\n    r1 = max(random(228), random(231), random(233));\n    g1 = max(random(84), random(88), random(90));\n    b1 = max(random(35), random(38), random(40));\n\n    fill(r1, g1, b1, 80);\n    bezier(x, y, 300, 400, 500, 600, x, y);\n\n    // greens 144, 158, 42\n\n    r2 = max(random(142), random(144), random(146));\n    g2 = max(random(156), random(158), random(160));\n    b2 = max(random(40), random(42));\n    fill(r2, b2, g2, 80);\n    bezier(x, y, 100, 200, 300, 400, x, y); //petal effect\n\n// //     //blues 97, 99, 170\n    r4 = max(random(95), random(97), random(100));\n    b4 = max(random(97), random(99), random(102));\n    g4 = max(random(168), random(170), random(172));\n    fill(r4, b4, g4, 80);\n    bezier(x, y, 200, 300, 400, 500, x, y); //petal effect\n\n    // yellow (247, 187, 77)\n    r3 = max(random(245), random(247), random(250));\n    g3 = max(random(185), random(187), random(190));\n    b3 = max(random(77));\n    fill(r3, g3, b3, 80);\n  bezier(x, y, 400, 500, 200, 300,  x, y); //petal effect\n    \n    //magenta 207, 36, 64\n      r5 = max(random(207), random(204), random(210));\n    g5 = max(random(34), random(36), random(38));\n    b5 = max(random(62), random(64), random(66));\n     fill(r5, g5, b5, 80);\n  bezier(x, y, 50, 500, 600, 100,  x, y); //petal effect\n    \n    \n  }\n\n  // bezier(x, y, 50, x, y, 100, x, y, 250, x, y, 300);\n\n  if (val == 4) {\n    strokeWeight(3);\n    bezier(x, y, 40, 80, x, y, x, y); //line effect\n  }\n\n  if (mouseIsPressed) {\n    background(\"white\");\n  }\n\n  if (keyIsPressed) {\n    if (keyCode === 13) {\n      saveCanvas(\"myCanvas\", \"png\");\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tmxnc0ozc0qqy6swtn95",
        "width": 1214,
        "height": 1204,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xm7niaxnalq5bueshgad",
        "width": 1610,
        "height": 1208,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hw119ani72hhdr1pmhrc",
        "width": 1208,
        "height": 1208,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "vHaEHgvM5ZcxXqZLs",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-28T01:17:19.977Z",
    "posted": true,
    "lesson": "API",
    "description": "Decided to continue AI week using ChatGPT as a tool for coding... For this I tried playing with matter.js which I haven't used before but was curious about. I was able to make a sketch without really knowing anything about how to use matter or the syntax or anything, but I did go through a few rounds of revisions to get it to do what I wanted using plain language. What I really wanted was to use vector outlines for the text but I wasn't able to get that working yet",
    "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Letter Bounce</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.18.0/matter.min.js\"></script>\n    \n\n    <style>\n      * {\n        margin: 0;\n        padding: 0;\n      }\n      .letter {\n    font-size: 36px;\n    font-family: Arial !important;\n    color: #333;\n    text-align: center;\n}\n    </style>\n  </head>\n  <body>\n    <canvas id=\"canvas\" width=\"700\" height=\"700\"></canvas>\n    <script>\n      const Engine = Matter.Engine;\n      const Render = Matter.Render;\n      const World = Matter.World;\n      const Bodies = Matter.Bodies;\n\n      const canvas = document.getElementById(\"canvas\");\n\n      const engine = Engine.create({\n        // enableSleeping: true,\n      });\n\n      const render = Render.create({\n        element: document.body,\n        canvas: canvas,\n        engine: engine,\n        options: {\n          width: window.innerWidth-4,\n          height: window.innerHeight-4,\n          wireframes: false,\n          background: \"#000000\",\n        },\n      });\n\n      const word = \"COMPFORMCOMPFORMCOMPFORMCOMPFORM\";\n      const letters = [];\n\n        // Create letter bodies\n        for (let i = 0; i < word.length; i++) {\n        // const x = 100 + i * 60;\n        const x = Math.random() * window.innerWidth;\n        const y = Math.random() * window.innerHeight;\n        const letter = Bodies.rectangle(x, y, 70, 90, {\n          friction: 0.001,\n          restitution: 0.8,\n          label: word[i],\n          render: {\n            // fillStyle: '#000000',\n            sprite: {\n              texture: `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 50'%3E%3Ctext x='50' y='32' class='letter' fill='white' stroke='white' font-size='32' font-family='helvetica' text-anchor='middle'%3E${word[i]}%3C/text%3E%3C/svg%3E`,\n            },\n          },\n        });\n        letter.isLetter = true;\n        letters.push(letter);\n      }\n\n      // Add letter bodies to world\n      World.add(engine.world, letters);\n\n      // Add mouse constraint\n      const mouse = Matter.Mouse.create(canvas);\n      const mouseConstraint = Matter.MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: false,\n          },\n        },\n      });\n      World.add(engine.world, mouseConstraint);\n\n      // Add collision handler with walls\n      Matter.Events.on(engine, \"collisionStart\", (event) => {\n        event.pairs.forEach((pair) => {\n          const bodyA = pair.bodyA;\n          const bodyB = pair.bodyB;\n          const velocityA = bodyA.velocity;\n          const velocityB = bodyB.velocity;\n          if (bodyA.isLetter && bodyB.isWall) {\n            velocityA.x = -velocityA.x;\n          }\n          if (bodyA.isWall && bodyB.isLetter) {\n            velocityB.x = -velocityB.x;\n          }\n        });\n      });\n\n      // Add walls\n      const wallOptions = {\n        isStatic: true,\n        restitution: 1,\n      };\n      const leftWall = Bodies.rectangle(-25, canvas.height / 2, 50, canvas.height, wallOptions);\n      leftWall.isWall = true;\n      const rightWall = Bodies.rectangle(\n        canvas.width + 25,\n        canvas.height / 2,\n        50,\n        canvas.height,\n        wallOptions\n      );\n      rightWall.isWall = true;\n      const topWall = Bodies.rectangle(\n        canvas.width / 2,\n        -25,\n        canvas.width,\n        50,\n        wallOptions\n      );\n      topWall.isWall = true;\n      const bottomWall = Bodies.rectangle(\n        canvas.width / 2,\n        canvas.height + 25,\n        canvas.width,\n        50,\n        wallOptions\n      );\n      bottomWall.isWall = true;\n      World.add(engine.world, [leftWall, rightWall, topWall, bottomWall]);\n\n      // Run the engine and renderer\n      Matter.Runner.run(engine)\n      Render.run(render);\n</script>\n</body>\n</html>",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ixsp2ixqxsxuryegu2pb",
        "width": 1558,
        "height": 1660,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dxb52bhplut8uxjgujv1",
        "width": 1176,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-28T03:09:13.986Z"
      }
    ],
    "comments": [
      {
        "comment": "This is *fire emoji* ",
        "commenter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-28T03:09:41.853Z"
      }
    ]
  },
  {
    "_id": "vPRRQiRxEttSt29CK",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-04T06:51:03.668Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Reshma and I converted a sketch we did in one of the first few weeks of class into a microgame. Inspired by the games where you have to rotate each element until you get it to its correct configuration. We still have to figure out a win/lose system",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\nlet pattern = [];\nconst patternSize = 50;\nconst xNum = 7;\nconst yNum = 6;\n\nlet pipeImages = [];\n// const pipeImagesSize = 50;\n\nfunction setup() {\n  createCanvas(xNum*patternSize, yNum*patternSize);\n  background(0);\n\n  for (let i=0; i<9; i++) {\n    pipeImages[i] = loadImage(\"Frame_\" + i + \".png\");\n  }\n  // let pipeImage = loadImage(\"pipe.jpg\");\n\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      pattern[x + y*10] = createSprite(\n        patternSize/2 + x*patternSize,\n        patternSize/2 + y*patternSize,\n        patternSize,\n        patternSize\n      );\n      pattern[x + y*10].addImage(\"main\", random(pipeImages))\n      // pattern[x + y*10].scale = patternSize/pipeImagesSize;\n      pattern[x + y*10].mouseActive = true;\n      pattern[x + y*10].rotation = 90 * (floor(random(0,4)));\n    }\n  }\n\n}\n\nfunction draw() {\n  drawSprites();\n}\n\nfunction mousePressed() {\n  for (let x=0; x<xNum; x++) {\n    for (let y=0; y<yNum; y++) {\n      if (pattern[x + y*10].mouseIsOver) {\n        pattern[x + y*10].rotation += 90;\n      } \n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mbtlqk7nvgq13vzachvz",
        "width": 718,
        "height": 620,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-04T16:08:03.744Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-04T22:57:06.211Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vWdCqvE9yH8Abv6w4",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-03T21:08:40.271Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Individual Challenge for this week. Had some ideas going around in my head but had to trim things down to the scale that it is. Happy with how this came out though!",
    "code": "// Field\n\ncolor(\"green\"){\n    cube([160, 160, 4], center = true);\n}\n\n// Walls\n\ntranslate([0, -20, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([-20, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n    cube([40, 2, 20], center = true);\n        }\n    }\n}\n\ntranslate([0, 20, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([20, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n    cube([40, 2, 20], center = true);\n        }\n    }\n}\n\n// Right flank\n\ntranslate([40, 10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([40, -10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([60, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n        cube([20, 2, 20],   center = true);\n    }\n    }\n}\n\n// Left flank\n\ntranslate([-40, 10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([-40, -10, 10]){\ncolor(\"white\"){\n    cube([40, 2, 20], center = true);\n    }\n}\n\ntranslate([-60, 0, 10]){\n    rotate([0, 0, 90]){\n    color(\"white\"){\n        cube([20, 2, 20],   center = true);\n    }\n    }\n}\n\n// Center Pillar\n\nunion(){\ncolor(\"grey\"){\n    translate([0, 10, 20]){\n        cylinder(40, 5, 5, center = true);\n    translate([0, 0, -5]){\n        cube([30, 15, 25], center = true);\n    }\n    }\n    translate([0, 10, 40]){\n        cylinder(5, 8, 8, center = true);\n    }\n    }\n}\n\ncenterpillars = 8;\n\ncolor(\"grey\"){\ntranslate([0, 10, 40]){\nfor (i = [0:centerpillars-1]) {\n    rotate([0, 0, 360 / centerpillars * i]) {\n        translate([7, 0, 3]){\n          cube([2, 2, 2], center = true);\n    }\n    }\n    }\n    }\n}\n\n// Right Pillar\n\nscale([.75, .75, .75]){\ntranslate([40, -10, 0]){\nunion(){\ncolor(\"grey\"){\n    translate([0, 10, 20]){\n        cylinder(40, 5, 5, center = true);\n    translate([0, 0, -10]){\n        cube([20, 20, 20], center = true);\n    }\n    }\n    translate([0, 10, 40]){\n        cylinder(5, 8, 8, center = true);\n    }\n    }\n}\n\nrightpillars = 8;\n\ncolor(\"grey\"){\ntranslate([0, 10, 40]){\nfor (i = [0:rightpillars-1]) {\n    rotate([0, 0, 360 / rightpillars * i]) {\n        translate([7, 0, 3]){\n          cube([2, 2, 2], center = true);\n    }\n    }\n    }\n    }\n}    \n}\n}\n\n// Left Pillar\n\nscale([.75, .75, .75]){\ntranslate([-40, -10, 0]){\nunion(){\ncolor(\"grey\"){\n    translate([0, 10, 20]){\n        cylinder(40, 5, 5, center = true);\n    translate([0, 0, -10]){\n        cube([20, 20, 20], center = true);\n    }\n    }\n    translate([0, 10, 40]){\n        cylinder(5, 8, 8, center = true);\n    }\n    }\n}\n\nleftpillars = 8;\n\ncolor(\"grey\"){\ntranslate([0, 10, 40]){\nfor (i = [0:leftpillars-1]) {\n    rotate([0, 0, 360 / leftpillars * i]) {\n        translate([7, 0, 3]){\n          cube([2, 2, 2], center = true);\n    }\n    }\n    }\n    }\n}    \n}\n}\n\n// Door\n\ncolor(\"brown\"){\n    translate([0, -20, 5]){\n    translate([-2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n    translate([0, -20, 5]){\n    translate([2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n}\n\n// Castle Door \n\ncolor(\"brown\"){\n    translate([0, 4, 5]){\n    translate([-2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n    translate([0, 4, 5]){\n    translate([2.6, 0, 0]){\n    cube([5, 5, 10], center = true);    \n    }\n    }\n}   \n\n// Windows\n\nrotate([90, 0, 0]){\n    translate([0, 20, -3]){\n    cylinder(2, 5, 5, center = true);\n    }\n}\n\nrotate([90, 0, 0]){\n    translate([30, 13, 10.5]){\n    cylinder(2, 3, 3, center = true);\n    }\n}\n\nrotate([90, 0, 0]){\n    translate([-30, 13, 10.5]){\n    cylinder(2, 3, 3, center = true);\n    }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jmycxuhm13bodgmo0o14",
        "width": 962,
        "height": 703,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/apphxnrsawjeddefsd9t",
        "width": 967,
        "height": 711,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ai5cucoxokx7a9ss9p57",
        "width": 964,
        "height": 702,
        "format": "jpg",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T22:37:22.609Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T00:41:08.995Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-05-05T05:13:31.476Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vXXogL2gKusqHeDKs",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-24T02:07:23.485Z",
    "posted": true,
    "lesson": "Params",
    "description": "**Pair Challenge** Isha's beautiful sketch, with just the background removed became a brush! [Open it full screen here](https://editor.p5js.org/reshmarosethomas/full/KROYYe5sd)",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n//require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\nconst pane = new Tweakpane.Pane();\n\n\nlet circles = [];\nconst numCircles = 8;\nconst radius = 40;\n\nlet inc = 0.04;\n\n// const params = {\n//   Easing: 0.01,\n//   NoiseFactor: 40,\n//   AngleIncrease: 0.07\n// }\n\nconst params = {\n  Easing: 0.02,\n  NoiseFactor: 5,\n  AngleIncrease: 0.02\n}\n\npane.addInput(params, \"Easing\", { min: 0, max: 0.2 });\npane.addInput(params, \"NoiseFactor\", { min: 0, max: 50 });\npane.addInput(params, \"AngleIncrease\", { min: 0.01, max: 0.1 });\n\n\nlet theta = 0;\n\nlet colours = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noStroke();\n  createCircle ();\n  setColours(numCircles);\n  frameRate(60);\n  \n  rectMode(CENTER);\n  fill(\"rgb(90,90,90)\");\n  textSize(24);\n  text(\"Click to change colour\", width/2 -120, height/2);\n}\n\nfunction createCircle () {\n  for (let i = 0; i < numCircles; i++) {\n    const x = mouseX;\n    const y = mouseY;\n    circles.push({ x, y });\n  }\n}\n\nfunction setColours(num) {\n  \n  let startR = floor(random(255));\n  let startG = floor(random(255));\n  let startB = floor(random(255)); \n  let startColor = color(startR, startG, startB);\n  \n  let endR = floor(random(255));\n  let endG = floor(random(255));\n  let endB = floor(random(255));\n  let endColor = color(endR, endG, endB);\n  \n  for (let i = 0; i<num; i++) {\n    colours[i] = lerpColor (startColor, endColor, i/num);\n  }\n}\n\nfunction draw() {\n  \n  for (let i = 0; i < numCircles; i++) {\n    let circle = circles[i];\n    const dx = mouseX - circle.x;\n    const dy = mouseY - circle.y;\n    circle.x += dx * params.Easing;\n    circle.y += dy * params.Easing;\n\n    let r = 50;\n    let a = r * cos(theta);\n    let b = r * sin(theta);\n    theta += params.AngleIncrease; if (theta > TWO_PI ) theta = 0;\n\n    let ex = noise(i * dx * 5) * params.NoiseFactor;\n    let ey = noise(i * dy * 5) * params.NoiseFactor;\n    // let ex=0, ey=0;\n\n    fill(colours[i]);\n    ellipse(circle.x + ex + a, circle.y + ey + b, radius);\n  }\n}\n\nfunction mouseClicked() {\n  setColours(circles.length);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/rgrapigxagech9cscvye",
        "width": 1318,
        "height": 1320,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ns0z4ulyzr2gifeukfap",
        "width": 1318,
        "height": 1320,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/z05h0fizce3rmrgbtovp",
        "width": 1210,
        "height": 1210,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-24T02:51:09.782Z"
      },
      {
        "category": "pretty",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-02-24T02:54:51.016Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T03:51:58.306Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:43.463Z"
      }
    ],
    "comments": [
      {
        "comment": "This looks amazing!!!",
        "commenter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-24T02:50:23.424Z"
      }
    ]
  },
  {
    "_id": "vcxJPmRzCfkQfzTD7",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-02-23T04:14:17.534Z",
    "posted": true,
    "lesson": "Params",
    "description": "Sketch from Rama's code! I was trying to make bubbles but then it turned into a non-bubbly thing that I ended up liking",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  px = width / 2;\n  py = height / 2;\n\n  dir = 1;\n}\n\nfunction draw() {\n  background(0, 0, 50, 80);\n\n  for(let i=0; i<width; i+=20){\n    // noStroke()\n    stroke(255, 255, 255, 100);\n    noFill();\n    // fill(255, 255, 255, 10);\n    // y = noise(i*0.1)*100-50;\n    y = noise(frameCount+i*.001)*1000-50;    \n    y = noise(frameCount*.01+i*.001)*1000-50;\n    y = noise(frameCount*.001+i*.001)*1000-50;\n    ellipse((width/10+y), i, 100+y, 100+y)\n    ellipse(width/6+y, i, 80-y, 80-y)\n  }\n\n  if (dist(mouseX, mouseY, px, py) > 15) {\n    push();\n    translate(mouseX, mouseY);\n    if (mouseX < px) {\n      rotate(PI + atan((mouseY - py) / (mouseX - px)));\n    } else {\n      rotate(atan((mouseY - py) / (mouseX - px)));\n    }\n    scale(1, dir);\n    rotate(PI / 12);\n    push();\n    rotate(PI / 2);\n    // stroke(255);\n    // fill(0, 0, 255);\n    push();\n    scale(3);\n    fill(255, 200);\n    triangle(0, 0, -12, 22, 12, 22);\n    \n    fill(255, 75)\n\n    triangle(0, 30, 0, 40, 20, 50);\n    triangle(0, 30, 0, 45, 20, 50);\n    // triangle(0, 30, 20, 45, 20, 50);\n    triangle(0, 30, 0, 40, -20, 50);\n    triangle(0, 30, 0, 45, -20, 50);\n    triangle(0, 30, 0, 45, -20, 50);\n\n    fill(255, 64.7, 0);\n    ellipse(0, 20, 15, 40);\n    stroke(0)\n    fill(255, 255, 255);\n    ellipse(0, 20, 15, 30);\n    fill(255, 64.7, 0);\n    ellipse(0, 20, 15, 20);\n    // fill(255, 255, 255);\n    // ellipse(0, 20, 15, 5);\n    push()\n    stroke(255);\n    strokeWeight(1);\n    fill(0);\n    ellipse(5, 5, 5, 5);\n    ellipse(-5, 5, 5, 5);\n    pop()\n    pop();\n    pop();\n    pop();\n    px = mouseX;\n    py = mouseY;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ybw5vjmqtujh1x2yc6sh",
        "width": 1895,
        "height": 1895,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ubytsjvqamicnoqiigbw",
        "width": 1280,
        "height": 1204,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-23T13:22:30.562Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:21.265Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T02:56:16.32Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vfuwnRzE2RA7MroKx",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-19T06:33:13.981Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Abstract take on a treasure map using noise and random; randomly placed \"target\" on the animated grid",
    "code": "let rows = 10;\nlet cols = 10;\nlet tileSize = 40;\nlet noiseScale = 0.02;\nlet uniqueX, uniqueY;\n\nfunction setup() {\n  createCanvas(500, 500);\n  noStroke();\n  // Set a noise seed for consistency\n  noiseSeed(12345);\n  uniqueX = int(random(cols));\n  uniqueY = int(random(rows));\n}\n\nfunction draw() {\n  background(220);\n  \n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * tileSize;\n      let y = j * tileSize;\n      \n      if (i === uniqueX && j === uniqueY) {\n        // Unique color for a specific square\n        fill(255, 0, 0);\n      } else {\n        let noiseVal = noise(i * noiseScale, j * noiseScale, frameCount * 0.01);\n        let c = map(noiseVal, 0, 1, 0, 255);\n        fill(c);\n      }\n      \n      rect(x, y, tileSize, tileSize);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/v5vtfkzwqzkvpzednvzc",
        "width": 782,
        "height": 790,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T06:00:19.164Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-03T05:26:47.274Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vg8bhK9X8tMBzNiMv",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-10T04:48:03.588Z",
    "posted": true,
    "lesson": "Random",
    "description": "Tried to vary size & colour with a deck.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet deck = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet ePos = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  noLoop();\n  noStroke();\n  colorMode(HSB);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(10);\n  let d = deck.length;\n  for (let i = d; i < width; i += d) {\n    for (let j = d; j < height; j += d) {\n      let colour = map(ePosDeck(), 1, 10, 40, 120);\n      fill(colour, 50, 100);\n      rect(i, j, ePosDeck()*1.5);\n    }\n  }\n}\n\nfunction ePosDeck() {\n  let e = deck[ePos];\n  ePos++;\n  if (ePos > deck.length) {\n    deck = shuffle(deck);\n    ePos = 0;\n  }\n  return e;\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fyolwpih79v7oei7ak8h",
        "width": 826,
        "height": 826,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-17T21:33:30.184Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vkcXJGHJkEGvQa33w",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-05T01:17:05.184Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Microgame I made over the weekend. I wanted to start off from my inspiration from trying to learn how to riffle shuffle despite playing card games for quite a while. Also since I really wanted to use p5.js I did put in the time to experiment with the p5.play v3 library.\n\nPress the F and G keys to pile on cards on top of each other.",
    "code": "let img;\nlet cardnum = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // template to spawn cards\n  \n  /* card = createSprite();\n  card.scale *= 0.3;\n  card.img = loadImage(\"Image/og_card_5@2x.png\"); */\n}\n\nfunction draw() {\n  background(72, 184, 103);\n\n  // draw spawned cards for riffle shuffling\n  \n  if(keyIsPressed) {\n    if(i = 0, i < 1, i++){\n      keyPressed();\n    }\n  }\n  \n  fill(255, 0, 0);\n  text('cards stacked: ' + cardnum, 10, 30);\n}\n\n// spawn cards for riffle shuffling\n\nfunction keyPressed() {\n  if(keyCode == 70) {\n    card1 = createSprite(width/2 - 50, height/2);\n    card1.rotation = 35;\n    card1.scale *= 0.3;\n    card1.img = loadImage(\"Image/og_card_5@2x.png\");\n    cardnum++;\n  }\n  \n  if(keyCode == 71) {\n    card2 = createSprite(width/2 + 50, height/2);\n    card2.rotation = -35;\n    card2.scale *= 0.3;\n    card2.img = loadImage(\"Image/og_card_5@2x.png\");\n    cardnum++;\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/tfnbpunu8wbjyz5q7qjg",
        "width": 599,
        "height": 600,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "vxTaJ3mfHaJzpSN3k",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-23T02:40:53.232Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "I watched a tutorial on Paper.js to create this generative diagonal grid-like pattern",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zbajiq2ufi4vetiwqw3t",
        "width": 1514,
        "height": 1428,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T16:59:45.772Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T20:03:29.054Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "vz6ETBmEMpg6airpm",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-04-21T03:14:50.46Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "An extension of my earlier chatgpt sketch... I will say it does make adding sliders a little less tedious!",
    "code": "const canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\nconst svg = document.getElementById('svg');\nconst textPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\nconst textContentX = 'COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM! COMP FORM!';\n\n// let amplitude = 50;\n// let frequency = 0.5;\n// let fontSize = 12;\nlet amplitude = 25;\nlet frequency = .03;\nlet fontSize = 12;\nconst xOffset = 0;\nconst yOffset = canvas.height / 2;\nfunction setup() {\n  background(0);\n}\nfunction draw() {\n\n\n\n  const font = 'Helvetica-light';\n  // Get number of copies from slider\n  const numCopies = parseInt(document.getElementById('copies').value);\n  const spaceBetweenCopies = parseInt(document.getElementById('space').value);\n\n  // Remove existing text and text path elements\n  for (let i = 0; i < numCopies; i++) {\n    const textPath = document.getElementById(`text-path-${i}`);\n    const textEl = document.getElementById(`text-${i}`);\n    if (textPath) {\n      textPath.remove();\n    }\n    if (textEl) {\n      textEl.remove();\n    }\n  }\n\n  // Clear canvas\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  // Draw sine wave path for each copy\n  for (let i = 0; i < numCopies; i++) {\n    // const yOffset = i * (canvas.height / numCopies);\n    const yOffset = i * (canvas.height / numCopies) + i * spaceBetweenCopies;\n    ctx.beginPath();\n    for (let x = 0; x < canvas.width; x++) {\n      const y = amplitude * Math.sin(x * frequency + xOffset) + yOffset;\n      ctx.lineTo(x, y);\n    }\n    ctx.stroke();\n\n    // Set text path to sine wave path for each copy\n    const textPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    textPath.setAttribute('d', `M 0 ${yOffset}`);\n    for (let x = 0; x < canvas.width; x++) {\n      const y = amplitude * Math.sin(x * frequency + xOffset + millis()/1000) + yOffset;\n      // const y = amplitude * Math.sin(x * frequency + xOffset) + yOffset;\n      textPath.setAttribute('d', `${textPath.getAttribute('d')} L ${x} ${y}`);\n    }\n    textPath.setAttribute('id', `text-path-${i}`);\n    textPath.setAttribute('fill', 'none');\n    svg.appendChild(textPath);\n\n    // Create new text element and set its text path to the sine wave path for each copy\n    const textEl = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    textEl.setAttribute('id', `text-${i}`);\n    textEl.setAttribute('font-size', fontSize);\n    textEl.setAttribute('fill', 'white');\n\n    \n  textEl.setAttribute('style', `font-family: ${font};`);\n    const textPathEl = document.createElementNS('http://www.w3.org/2000/svg', 'textPath');\n    textPathEl.setAttribute('href', `#text-path-${i}`);\n    // textPathEl.setAttribute('startOffset', '50%');\n    textPathEl.setAttribute('startOffset', '0%');\n    textPathEl.textContent = textContentX;\n    textEl.appendChild(textPathEl);\n    svg.appendChild(textEl);\n\n\n  }\n}\n\n\n\n\nfunction updateAmplitude(event) {\n  amplitude = event.target.value;\n  svg.innerHTML = '';\n  draw();\n}\n\nfunction updateFrequency(event) {\n  frequency = event.target.value;\n  svg.innerHTML = '';\n  draw();\n}\n\nfunction updateFontSize(event) {\n  fontSize = event.target.value;\n  const textEl = document.getElementById('text');\n  if (textEl) {\n    textEl.setAttribute('font-size', fontSize);\n  }\n}\n\ndocument.getElementById('amplitude-slider').addEventListener('input', updateAmplitude);\ndocument.getElementById('frequency-slider').addEventListener('input', updateFrequency);\ndocument.getElementById('font-size-slider').addEventListener('input', updateFontSize);\n\ndraw();",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cbid9renmsxroe7vxzbm",
        "width": 1272,
        "height": 1004,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/brc35bicqiziz7icrp0r",
        "width": 640,
        "height": 560,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-21T03:16:50.696Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-04-21T03:19:58.703Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-21T03:27:34.896Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:43:33.408Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:05:55.061Z"
      },
      {
        "category": "nerdy",
        "voter_id": null,
        "created_at": "2023-04-21T16:05:55.546Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-21T16:06:57.828Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "wEafMFsFr8CE3QhB7",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-23T03:02:25.601Z",
    "posted": true,
    "lesson": "Params",
    "description": "Neat results that I got from doing the pair sketch with Chris' code! Noise sure looks cool at scale!",
    "code": "let scale;\nlet grid;\n\nfunction setup() {\n  createCanvas(800, 800);\n\n  noLoop();\n  colorMode(HSB);\n}\n// scale = .05;\n// scale = .01;\nscale = .005;\n// scale = .002;\n\n\n// grid = 1;\ngrid = 7;\n\nfunction draw() {\n  background(210, 11, 96);\n  strokeWeight(0.1);\n  for (var x = -grid*2; x < width; x+=grid) {\n    for (var y = -grid*2; y < height; y+=grid) {\n\n      var h = 80 * noise(pow(x,100)*scale, y*scale) + 120;\n\n      let s = 100 * noise(y*scale);\n      let b = 50;\n  fill (h, s, b + noise(x*x*scale)*10 + 10, random(100));\n      if (h > 281) {\n\n        fill (h, s, b + noise(x*scale)*10 + 10, random(100));\n\n      } else if (h > 271) {\n\n        fill (h, s, b + noise(x*scale)*10, random(100));\n\n      } else if (h > 251) {\n\n        fill (h, s, b, random(255));\n    \n      } else if (h > 231) {\n\n        fill (h, s, b  - noise(x*scale)*10, random(255));\n\n      } else if (h > 221) {\n\n        fill (h, s, b - noise(x*scale)*10 - 10, random(255));\n\n      }\n      \n      rect(x+(noise(x,y)*20), y+(noise(y,x)*20), 20, 20);\n\n    }\t\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wnannqqzrrtrifqcpmsn",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cjqfyhklwxxup5ky3yxv",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/hyfbx5fz40wan80rgwk6",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-23T04:12:43.66Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-23T13:22:52.697Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:23.361Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "wjQg7DCzat6Sz7oLD",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-03-02T04:23:22.565Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "My attempt on challenge 2. A bit tricky to figure out how to process the arguments for noise to make it behave properly.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/d10ram1hqsuynddldsby",
        "width": 720,
        "height": 1000,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "wkcGvmbuXmdSKHRMG",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-03-09T23:05:49.673Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Had some fun with zoom in and zoom out! Also image challenge for Isha.",
    "code": "let img; // creates image variable\n\nlet size = 7 // element size\n\nlet startx = 0 // starting x coordinate\nlet starty = 0 // starting y coordinate\n\n\nfunction preload() {\n  img = loadImage('assets/img7.jpg');\n}\nfunction setup() {\n  createCanvas(windowWidth, windowHeight-40); // creates canvas\n\n  img.loadPixels(); // loads image\n  img.resize(windowWidth, 0); // resizes image to window size\n  img.updatePixels(); // updates image\n\n}\n\nfunction draw() {\n  clear();\n  background(0);\n\n  let size = floor(map(mouseX, 0, width, 7, 40)); // maps mouseX value to element size\n\n  for (let starty = 0; starty < img.height; starty++) { // creates pixel index\n    for (let startx = 0; startx < img.width; startx++) {\n      let index = (startx + starty * img.width) * 4;\n      let r = img.pixels[index + 0];\n      let g = img.pixels[index + 1];\n      let b = img.pixels[index + 2];\n\n      \n\n      fill(r,g,b); // fills element with adjusted grayscale\n\n      ellipse(startx, starty, size, size)\n      \n      //triangle(startx, starty, startx + (size / 2), starty + size, startx + size, starty) // upside down triangle\n       //triangle(startx, starty, startx, starty + size, startx + size, starty)\n\n      startx = startx + size -1 // set new startx value\n    }\n   starty = starty + size -1 // set new starty value\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/kcbirdlcl4iqtjgsrnyk",
        "width": 865,
        "height": 705,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/okhzpmd9sadvprn0ptko",
        "width": 920,
        "height": 726,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-10T02:15:27.336Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:14.071Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-10T17:31:20.372Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-03-26T01:02:58.694Z"
      },
      {
        "category": "funny",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-31T19:06:02.282Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ws2F5MAqyXkBxx8LM",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-10T19:56:56.757Z",
    "posted": true,
    "lesson": "Text",
    "description": "I used two stories by Dr. Seuss in the Markov Model to see what inspirational quotes it would come up with",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/h49te0wpctwgrby47bsp",
        "width": 2532,
        "height": 1170,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/cthtepppha8usslg2nkr",
        "width": 2536,
        "height": 1412,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xkesk1ycgetcrkjjd9ad",
        "width": 2528,
        "height": 1212,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": "4bHpKt9dPkcFuNAuM",
        "created_at": "2023-04-10T20:38:08.891Z"
      },
      {
        "category": "funny",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-04-10T21:05:48.969Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-12T05:58:47.71Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "wsxcZnRDgb7WvRNgT",
    "author_id": "eeksZiGaSD3xMNF54",
    "author": "Sahiti Agarwal",
    "created_at": "2023-02-02T01:15:07.321Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Thanks for the punishment, Gramme!\nFYI: There is no \"free\" version of Helvetica included with Windows, and the MacOS version is a '.dfont' variant of TrueType Helvetica that may be problematic for publishing use. Otherwise, Helvetica is a commercial, trademarked font. Adobe does not include any version of Helvetica with any of its products. It's also not available through 'TypeKit'.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qcgrx7ms5gcstqfx2t3c",
        "width": 792,
        "height": 1224,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T02:02:05.413Z"
      }
    ],
    "comments": [
      {
        "comment": "could've just used Arial girl, its not that deep!",
        "commenter_id": "ThhLMCZBENKtw2dT6",
        "created_at": "2023-02-03T17:13:32.832Z"
      }
    ]
  },
  {
    "_id": "wtDExsv4obDEtySnT",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-01-29T22:29:27.599Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My sketch based on Keren's instructions!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cdfzr9odkikzydrbatmv",
        "width": 4032,
        "height": 3024,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-30T01:57:21.402Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "wtinfEPF2vBQWtQE5",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-02-24T04:44:58.162Z",
    "posted": true,
    "lesson": "Params",
    "description": "Face generator. The speed slider won't work for some reason, but I couldn't figure it out - maybe because it's in setup?",
    "code": "// require https://cdn.jsdelivr.net/npm/tweakpane@3.0.7/dist/tweakpane.min.js\n// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n\nlet img = [];\nlet imgsize = 140;\n\nconst pane = new Tweakpane.Pane();\nconst slider = {\n  scale: 0.75,\n  speed: 3,\n};\npane.addInput(slider, \"scale\", { min: 0.25, max: 1 });\npane.addInput(slider, \"speed\", { min: 1, max: 15 });\n\nfunction preload() {\n  for (let i=0; i<36; i++) {\n    img[i] = loadImage(\"squares/\" + i + \".png\");\n  }\n}\n\nfunction setup() {\n  createCanvas(imgsize*3,imgsize*3);\n  frameRate(slider.speed);  \n}\n\nfunction draw() {\n  background(255);\n  drawImage(0,4,0,0);\n  drawImage(4,8,imgsize,0);\n  drawImage(8,12,2*imgsize,0);\n  drawImage(12,16,0,imgsize);\n  drawImage(16,20,imgsize,imgsize);\n  drawImage(20,24,2*imgsize,imgsize);\n  drawImage(24,28,0,2*imgsize);\n  drawImage(28,32,imgsize,2*imgsize);\n  drawImage(32,36,2*imgsize,2*imgsize);  \n}\n\nfunction drawImage(min,max,x,y) {\n  let r = floor(random(min,max));\n  push();\n  scale(slider.scale)\n  image(img[r],x,y);\n  pop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/fnktxvqxiqqrzkcxm6vw",
        "width": 928,
        "height": 634,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-24T14:20:53.811Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "wvB8XYwyBKAu74mho",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-28T04:22:59.871Z",
    "posted": true,
    "lesson": "API",
    "description": "Wanted to continue using AI to write p5 sketches. Here's one chat gpt came up with with I asked for \"wavy lines\", I played around with the code and made it overlap a little",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/wciyuajiy1v5ksxwdmhn",
        "width": 1510,
        "height": 1312,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "wxSYK49t4pHB5gKZ3",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-14T10:45:39.531Z",
    "posted": true,
    "lesson": "Text",
    "description": "Edited the sketch from the chapter to generate News Headlines instead of book titles",
    "code": "injectInterface();\ndocument.getElementById(\"title\").textContent = generateTitle();\ndocument.getElementById(\"subtitle\").textContent = generateSubtitle();\n\nfunction generateTitle() {\n  var subjects = [\n    \"Man\",\n    \"Woman\",\n    \"Dog\",\n    \"Cat\",\n    \"Alien\",\n    \"Robot\",\n    \"Zombie\",\n    \"Vampire\",\n    \"Ghost\",\n    \"Politician\",\n    \"Celebrity\",\n    \"Baby\",\n    \"Grandma\",\n    \"Grandpa\",\n    \"Teacher\",\n    \"Student\",\n  ];\n  var actions = [\n    \"Wins\",\n    \"Loses\",\n    \"Eats\",\n    \"Dances\",\n    \"Sings\",\n    \"Fights\",\n    \"Runs\",\n    \"Jumps\",\n    \"Flies\",\n    \"Swims\",\n    \"Steals\",\n    \"Invents\",\n    \"Discovers\",\n    \"Solves\",\n    \"Escapes\",\n    \"Crashes\",\n    \"Explodes\",\n    \"Burns\",\n    \"Freezes\",\n    \"Melts\",\n    \"Teleports\",\n    \"Transforms\",\n    \"Morphs\",\n    \"Clones\",\n    \"Messes Up\",\n    \"Fixes\",\n    \"Breaks\",\n  ];\n  var objects = [\n    \"Car\",\n    \"Plane\",\n    \"Train\",\n    \"Boat\",\n    \"Rocket\",\n    \"Computer\",\n    \"Phone\",\n    \"Pizza\",\n    \"Burger\",\n    \"Fries\",\n    \"Ice Cream\",\n    \"Cake\",\n    \"Money\",\n    \"Gold\",\n    \"Diamond\",\n    \"Guitar\",\n    \"Drums\",\n    \"Piano\",\n    \"Camera\",\n    \"Book\",\n    \"Movie\",\n    \"TV Show\",\n    \"Video Game\",\n    \"Toy\",\n    \"House\",\n    \"Building\",\n    \"City\",\n    \"Country\",\n    \"World\",\n  ];\n\n  var subject = sample(subjects);\n  var action = sample(actions);\n  var object = sample(objects);\n\n  var title = `${subject} ${action} ${object}`;\n\n  return title;\n}\n\nfunction generateSubtitle() {\n  var sources = [\n    \"Local Zoo\",\n    \"International Space Station\",\n    \"Underwater Cave\",\n    \"Haunted House\",\n    \"Alien Planet\",\n    \"Secret Government Lab\",\n    \"Time Machine\",\n    \"Interdimensional Portal\",\n    \"Parallel Universe\",\n    \"Famous Landmark\",\n    \"Middle of Nowhere\",\n    \"Bottom of the Ocean\",\n  ];\n  var types = [\n    \"Breaking News\",\n    \"Exclusive Report\",\n    \"In-Depth Investigation\",\n    \"Eye-Witness Account\",\n    \"Special Feature\",\n    \"Live Coverage\",\n    \"Late-Breaking Update\",\n    \"Worldwide Scoop\",\n  ];\n\n  var source = sample(sources);\n  var type = sample(types);\n  var subtitle = `${type} from the ${source}`;\n\n  return subtitle;\n}\n\nfunction sample(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nfunction injectInterface() {\n  document.body.insertAdjacentHTML(\n    \"beforeend\",\n    `\n<style type=\"text/css\">\n\t\t@import url('https://fonts.googleapis.com/css?family=Roboto:300,700');\n\t\tbody {\n\t\t\ttext-align: center;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t}\n\t\t.wrap {\n\t\t\tdisplay: table;\n\t\t\tpadding: 50px;\n\t\t\tmargin: 50px auto;\n\t\t\ttext-align: center;\n\t\t}\n\t\t#title {\n\t\t\tfont-size: 50px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: .9em;\n\n\t\t}\n\t\t#subtitle {\n\t\t\tmargin-top: .75em;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: normal;\n\t\t}\n\t</style>\n\t<div class=\"wrap\">\n\t\t<div id=\"title\">Title</div>\n\t\t<div id=\"subtitle\">Subtitle</div>\n\t</div>\n`\n  );\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dnscu7dmyjnlcbtruqse",
        "width": 954,
        "height": 1014,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "xBTyLTyMDdF2yXras",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-11T16:51:54.278Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "🍃",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  strokeWeight(2);\n  stroke(0);\n  background(\"#5D5D5D\");\n  noLoop();\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  myTurtle.penUp();\n  myTurtle.moveTo(250, 450);\n  myTurtle.turnTo(-70);\n  myTurtle.penDown();\n  drawBranch(100);\n}\n\nfunction drawBranch(length) {\n  if (length < 4) {\n    return;\n  }\n\n  // draw this branch\n  let branchColor = color(random(50, 200), random(50, 200), random(50, 200));\n  stroke(branchColor);\n  myTurtle.moveForward(length * 0.5);\n  myTurtle.turnLeft(10);\n  myTurtle.moveForward(length * 0.5);\n\n  // left child\n  myTurtle.pushState();\n  myTurtle.turnLeft(random(20, 40));\n  drawBranch(length * 0.75);\n  myTurtle.popState();\n\n  // right child\n  myTurtle.pushState();\n  myTurtle.turnRight(random(10, 30));\n  drawBranch(length * 0.75);\n  myTurtle.popState();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cvzggjcqwaia2fafvjnj",
        "width": 900,
        "height": 898,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-15T19:12:22.365Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xBjHRTQ2SzTYkqpTW",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-05-05T13:05:15.659Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Understanding animation on OpenSCAD",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/jd7z1slbnjfqletfaswq",
        "width": 1966,
        "height": 1064,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:32:06.915Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-05-06T03:17:26.335Z"
      },
      {
        "category": "nerdy",
        "voter_id": null,
        "created_at": "2023-05-06T03:17:26.957Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xHM5RHg7bh6aJwmHd",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-03T14:31:00.718Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Custom Typeface from Brian Instructions.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/edazraqngeygv7ubfwva",
        "width": 1668,
        "height": 2388,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-03T16:24:52.851Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xKbRpKWiLsqyCR9pJ",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-09T18:50:21.352Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Experimenting with the push+pop example sketch",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(900, 900);\n  noFill();\n  stroke(255);\n  background(50);\n  noLoop();\n\n  myTurtle = new Turtle(width/2, height/2);\n}\n\nfunction draw() {\n  const numCircles = 10;\n  const circleSpacing = 30;\n  const circleSize = 200;\n\n  for (let i = 0; i < numCircles; i++) {\n    myTurtle.pushState();\n    myTurtle.penUp();\n    myTurtle.moveForward(i * circleSpacing);\n    myTurtle.penDown();\n    drawCircle(circleSize - i * 20);\n    myTurtle.popState();\n  }\n}\n\nfunction drawCircle(radius) {\n  const numPoints = 60;\n  const angle = 360 / numPoints;\n\n  myTurtle.moveForward(radius);\n  for (let i = 0; i < numPoints; i++) {\n    myTurtle.turnLeft(angle);\n    myTurtle.moveForward(2 * radius * Math.PI / numPoints);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/shkiyiifwd9wheeo1710",
        "width": 1440,
        "height": 1446,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-05-09T19:03:05.6Z"
      },
      {
        "category": "funny",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-05-09T19:03:07.158Z"
      },
      {
        "category": "nerdy",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-05-09T19:03:08.88Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xNu7xHnGbcZcBGkw7",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-21T03:18:36.897Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Tried to get ChatGPT to work on the isometric sketch that I did for the noise week pair sketch. \n\nChatGPT had a really tough time understanding isometric perspective which made this pretty difficult to work on. Ultimately, ChatGPT didn't seem to be able to get what I was asking it so the result isn't exactly where I would want it to be.",
    "code": "let buildings = [];\n\nfunction setup() {\n  createCanvas(600,600, WEBGL);\n  rectMode(CENTER);\n  noStroke();\n  for (let i = 0; i < 20; i++) {\n    let building = new Building(random(50, width-50), random(50, height-50), random(20, 80), 3);\n    buildings.push(building);\n  }\n}\n\nfunction draw() {\n  background(220);\n  \n  // Set the camera position and target\n  camera(width/2, -height/2, 400, width/2, height/2, 0, 0, 1, 0);\n\n  for (let building of buildings) {\n    building.display();\n  }\n}\n\nclass Building {\n  constructor(x, z, size, maxSubdivisions) {\n    this.x = x;\n    this.y = 0;\n    this.z = z;\n    this.width = size * random(0.5, 1.5);\n    this.depth = size * random(0.5, 1.5);\n    this.height = size * random(0.5, 1.5);\n    this.color = color(random(50, 200), random(50, 200), random(50, 200));\n    this.maxSubdivisions = maxSubdivisions;\n    this.subdivided = false;\n  }\n\n  display() {\n    fill(this.color);\n    push();\n    translate(this.x, this.y + this.height / 2, this.z);\n    box(this.width, this.height, this.depth);\n    pop();\n    if (!this.subdivided && this.maxSubdivisions > 0 && random() < 0.2) {\n      this.subdivided = true;\n      this.maxSubdivisions--;\n      let newSize = this.width/2;\n      let building1 = new Building(this.x-newSize, this.z, newSize, this.maxSubdivisions);\n      let building2 = new Building(this.x+newSize, this.z, newSize, this.maxSubdivisions);\n      buildings.push(building1, building2);\n    }\n  }\n  \n  getBoundingBox() {\n    return {\n      minX: this.x - this.width / 2,\n      minY: this.y,\n      minZ: this.z - this.depth / 2,\n      maxX: this.x + this.width / 2,\n      maxY: this.y + this.height,\n      maxZ: this.z + this.depth / 2\n    }\n  }\n  \n  getBottomCenter() {\n    const bbox = this.getBoundingBox();\n    return createVector((bbox.minX + bbox.maxX) / 2, bbox.minY, (bbox.minZ + bbox.maxZ) / 2);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mxsvngstdmudacxt8hn6",
        "width": 1200,
        "height": 1200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-04-21T03:29:33.262Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-21T13:43:39.001Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xPGmr58wRXFARnhZf",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-02-17T02:53:28.499Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Simple sketch inspired by the Circle Grid example, I used the slider value to manipulate the circle grid and diameter",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@latest/lib/p5.min.js\nlet slider;\n\nfunction setup() {\n  createCanvas(400, 400);\n  slider = createSlider(10, 100, 50, 1);\n}\n\nfunction draw() {\n  background(220);\n  noStroke();\n  \n  //map value of slider\n  let size = slider.value();\n  \n  //Draw the grid of cricles\n  for (let x = 0; x <= width; x += size) {\n    for (let y = 0; y <= height; y += size) {\n      // Get noise value for this position\n      let noiseVal = noise(x * 0.01, y * 0.01);\n      // Set fill color based on noise value\n      fill(noiseVal * 255, noiseVal * 255, 300); \n      // circle with diameter based on noise value\n      circle(x, y, size * noiseVal);\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/sigidt4ytgeaztlbwws5",
        "width": 820,
        "height": 878,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-02-21T06:00:10.79Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xT32CXjJ3SsJGTJCw",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-12T02:25:54.604Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Second iteration of the individual challenge. Was able to expand on the details I drew and brushed up this sketch to a more presentable state that I'm happy with.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(500, 500);\n  myTurtle = new Turtle();\n  stroke(255);\n}\n\nfunction draw() {\n  background(50);\n  \n  // Body\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(0, 90);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 3; i++) {\n    myTurtle.moveForward(1000);\n    myTurtle.turnRight(120);\n    //curveSides(myTurtle);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(20, 90);\n  myTurtle.penDown();\n  myTurtle.moveTo(104, 125);\n  myTurtle.penUp();\n  myTurtle.moveTo(10, 105);\n  myTurtle.penDown();\n  myTurtle.moveTo(94, 145);\n  myTurtle.penUp();\n  myTurtle.moveTo(207, 165);\n  myTurtle.penDown();\n  myTurtle.moveTo(500, 275);\n  myTurtle.penUp();\n  myTurtle.moveTo(200, 185);\n  myTurtle.penDown();\n  myTurtle.moveTo(500, 305);\n  \n  // Eye\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(1);\n    myTurtle.turnRight(1);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(150, 116);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(0.7);\n    myTurtle.turnRight(1);\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(165, 110);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(0.3);\n    myTurtle.turnRight(1);\n  }\n  \n  // Lips\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(64, 200);\n  myTurtle.penDown();\n  myTurtle.moveTo(150, 300);\n  myTurtle.penUp();\n  myTurtle.moveTo(73, 217);\n  myTurtle.penDown();\n  myTurtle.moveTo(270, 500);\n  \n  myTurtle.pushState();\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(500, 400);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(135);\n    drawGills();\n  }\n  \n  myTurtle.popState();\n  \n  // Gills\n  \n  myTurtle.pushState();\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(350, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(350, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  \n  myTurtle.popState();\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(450, 100);\n  myTurtle.penDown();\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(35);\n    myTurtle.turnTo(90);\n    drawGills();\n  }\n  \n  noLoop();\n}\n\n/* function curveSides(t) {\n  for(i = 0; i < 3; i++) {\n    t.moveForward(100);\n    t.turnRight(120);\n  }\n} */\n\nfunction drawGills() {\n  for(i = 0; i < 100; i++) {\n    myTurtle.moveForward(3);\n    myTurtle.turnRight(0.5);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/beb2nssrzxtzh5vlyvch",
        "width": 751,
        "height": 749,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-12T04:35:34.733Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T16:17:20.763Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xYrbwmCRKbditDppp",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-01-28T01:04:02.615Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Instructions for Group Activity",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vueueed4o3luymcshd4e",
        "width": 960,
        "height": 960,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "nerdy",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T16:10:29.672Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-03T06:51:05.965Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:25:14.47Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:25.467Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xZYsjfzsgw45Et5gH",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-17T04:05:54.597Z",
    "posted": true,
    "lesson": "Noise",
    "description": "Finally got a good way to export ShaderPark code! Here's my take on the map challenge. I used noise to simulate the terrain and water as well as to color the objects. The scene looks better on the ShaderPark site but I like how it looks here too!",
    "code": "//shaderpark link:\n//https://shaderpark.com/embed/-NORMF5Y1eUzQ_fSkDnZ",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mdpsjzgfwafhqvxhnjj3",
        "width": 1280,
        "height": 1280,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "xaJeMZYTQfDetxtmm",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-05-05T01:11:05.985Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Started building a sandcastle! This was more fun than building a stone castle, so I abandoned my other trial.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/shhfodszyzmletuxth9l",
        "width": 716,
        "height": 427,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T02:17:34.533Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-05-05T03:56:20.289Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xafACaEZXjZYJBxyt",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-28T23:00:01.871Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "My extension of the first challenge. Used a nested for loop to distinguish more in the x and y directions. Did some noise math to get these cool patterns",
    "code": "function setup() {\n  createCanvas(800, 800);\n  colorMode(HSL);\n}\n\nfunction draw() {\n  background(100);\n  let noiseScale = .5;\n  for (let i=0; i<50; i++) {\n    for (let j=0; j<50; j++) {\n      let x = (noise(i*noiseScale)*2 - 1) * 400 + 400;\n      let y = (noise(j*noiseScale)*2 - 1) * 400 + 400;\n\n      let d = noise (i * j * noiseScale) * 20 + 5;\n      \n      let h = noise (i * noiseScale, j * noiseScale) * 50 + 10;\n      strokeWeight(.2);\n      fill(h, 90, 50);\n      circle(x, y, d);\n      \n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gzz0jlvw7sbfwpek7zeu",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/a0lawzwclsn9dmnesdrp",
        "width": 800,
        "height": 800,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-03T00:54:37.875Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-03-03T07:58:24.087Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xdgxfgYR3wgRxc3uz",
    "author_id": "DgrD5so94kzZH8ktA",
    "author": "Rama Deshpande",
    "created_at": "2023-04-14T14:33:31.591Z",
    "posted": true,
    "lesson": "Text",
    "description": "A Netflix description generator using Tracery",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/mge8jbb8fpvz0zocaazj",
        "width": 1564,
        "height": 540,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/e80qmgl3tgxgagwnbszz",
        "width": 1564,
        "height": 540,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/uu0xxwiorl6hvg2j6seh",
        "width": 1564,
        "height": 540,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T15:00:51.649Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xhXLwMcztWuNbHt3M",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-31T15:39:01.492Z",
    "posted": true,
    "lesson": "Music",
    "description": "My attempt at recording a song without using code. I can't stop laughing. Shoutout to my amazing band",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u7ia1rzruxotls3g4hmc",
        "width": 1842,
        "height": 1376,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ihb1jxh28r2o5kkmdr8c",
        "width": 2044,
        "height": 1340,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-03-31T15:44:46.167Z"
      },
      {
        "category": "pretty",
        "voter_id": "eeksZiGaSD3xMNF54",
        "created_at": "2023-03-31T19:03:50.84Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xmWy2u6eh5e5WJFJa",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-03-10T05:28:37.396Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Playing with pixels!",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/gnrw2yhyeuzqibnxaame",
        "width": 1000,
        "height": 1000,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:43.093Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xqqt6Ggj4pL5d88WX",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-04-07T02:53:59.097Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "",
    "code": "// initialize variables\nlet playerX = 50;\nlet playerY = 50;\nlet playerSize = 20;\nlet playerSpeed = 5;\nlet coinX;\nlet coinY;\nlet coinSize = 15;\nlet score = 0;\nlet obstacleX = 300;\nlet obstacleY = 100;\nlet obstacleWidth = 50;\nlet obstacleHeight = 80;\n\nfunction setup() {\n  createCanvas(500, 500);\n  // set the initial position of the coin randomly\n  coinX = random(width - coinSize);\n  coinY = random(height - coinSize);\n}\n\nfunction draw() {\n  background(200);\n\n  // move the player based on arrow key inputs\n  if (keyIsDown(LEFT_ARROW)) {\n    playerX -= playerSpeed;\n  }\n  if (keyIsDown(RIGHT_ARROW)) {\n    playerX += playerSpeed;\n  }\n  if (keyIsDown(UP_ARROW)) {\n    playerY -= playerSpeed;\n  }\n  if (keyIsDown(DOWN_ARROW)) {\n    playerY += playerSpeed;\n  }\n\n  // check if the player has collided with the coin\n  if (dist(playerX, playerY, coinX, coinY) < playerSize/2 + coinSize/2) {\n    // increase the score and reset the coin's position\n    score++;\n    coinX = random(width - coinSize);\n    coinY = random(height - coinSize);\n  }\n\n  // check if the player has collided with the obstacle\n  if (playerX + playerSize > obstacleX &&\n      playerX < obstacleX + obstacleWidth &&\n      playerY + playerSize > obstacleY &&\n      playerY < obstacleY + obstacleHeight) {\n    // reset the player's position and score\n    playerX = 50;\n    playerY = 50;\n    score = 0;\n  }\n\n  // draw the player, coin, and obstacle\n  fill(255, 0, 0);\n  rect(obstacleX, obstacleY, obstacleWidth, obstacleHeight);\n  fill(255, 255, 0);\n  ellipse(coinX, coinY, coinSize);\n  fill(0, 0, 255);\n  rect(playerX, playerY, playerSize, playerSize);\n\n  // display the score\n  textSize(24);\n  fill(0);\n  text(`Score: ${score}`, 20, 30);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/zxqwzft0xqrr0ksvyjqi",
        "width": 1002,
        "height": 1000,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:48:12.344Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-04-14T12:08:31.047Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xtPANFos22cvNqCuh",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-10T02:29:21.009Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Using Justin's heart sketch from the noise week as input, tried to create a chaotic mosaic visual",
    "code": "let img;\n\nfunction preload() {\n  img = loadImage('heart.png');\n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  image(img, 0, 0);\n  \n  // Get pixel values\n  loadPixels();\n  let tileSize = 10;\n  for (let x = 0; x < img.width; x += tileSize) {\n    for (let y = 0; y < img.height; y += tileSize) {\n      let tileX = x + tileSize / 2;\n      let tileY = y + tileSize / 2;\n      let index = (tileX + tileY * img.width) * 4;\n      let r = pixels[index];\n      let g = pixels[index + 1];\n      let b = pixels[index + 2];\n      \n      // Draw random mosaic tile\n      noStroke();\n      fill(r, g, b, 100);\n      push();\n      translate(x, y);\n      rotate(random(-PI/4, PI/4));\n      rect(0, 0, tileSize + random(-5, 5), tileSize + random(-5, 5));\n      pop();\n    }\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cokch8jqouga4psku4d1",
        "width": 3200,
        "height": 3200,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:47:29.261Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xwQKf57co4PrqqQAd",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-07T12:36:39.372Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "you are baby. baby do not like brogli",
    "code": "let baby, bottomBox;\nlet babyImg, brogliImg;\nlet allBrogli\nlet bottomBounds\nfunction preload() {\n  babyImg = loadImage('bebe.png')\n  brogliImg = loadImage('brogli.png')\n}\n\nfunction setup() {\n  createCanvas(800, 800);\n  allBrogli = new Group()\n  babyImg.resize(110, 0)\n  brogliImg.resize(82, 0)\n  baby = createSprite(400+(110/2), 600, 100, 307);\n  baby.addImage(babyImg);\n  bottomBounds = createSprite(0, 810, 1600, 10)\n  for (let i = 0; i < 20; i++) {\n    let brogli = createSprite(0, -100 , 82, 78);\n    brogli.addToGroup(allBrogli)\n    brogli.addImage(brogliImg)\n    brogli.rotation = 180\n\n  }\n}\nlet initGameState = 0\nlet gameOverState = 0\nlet brogliOverlap = 0\nlet speedIncrease = 0;\nlet gameCount = 0\nfunction draw() {\n  background(227, 196, 242);\n  textAlign(CENTER)\n  let time = millis();\n  if (time > 1000) {\n    textSize(48)\n    text('you are baby', 400, 200)\n  }\n\n  if (time > 2000) {\n    textSize(48)\n    text('baby do not like brogli', 400, 270)\n  }\n\n  if (time > 4000) {\n    push();\n    strokeWeight(0)\n    fill(227,196,242)\n    rect(160, 160, 500, 200)\n    pop();\n  }\n\n  if ( time > 4000 && initGameState === 0) {\n    push();\n    strokeWeight(0)\n    fill(227,196,242)\n    rect(160, 160, 500, 200)\n    textSize(62)\n    fill('black')\n    text('AVOID!!!', 400, 230)\n    pop();\n  }\n\n  if (time > 4000 && initGameState === 0) {\n    initGameState = 1\n    initGame()\n  }\n  drawSprites()\n  if (keyDown(37)) {\n    baby.position.x -= 10;\n\n  }\n\n  if (keyDown(39)) {\n    baby.position.x += 10;\n  }\n\n  if (baby.collide(allBrogli)) {\n\n    gameOverState = 1\n  }\n\n  if (gameOverState === 1 ) {\n\n    endGame();\n    push();\n    strokeWeight(0)\n    fill(227,196,242)\n    rect(140, 160, 520, 200)\n    textSize(38)\n    fill('black')\n    text('there is no win against brogli', 400, 220)\n    textSize(30)\n    text('the struggle continues', 400, 280)\n    text('press space to tread forth', 400, 320)\n    pop();\n  }\n\n  if (gameOverState === 1 && keyWentDown(32) ) {\n    resetGame()\n    gameOverState = 0\n    baby.position.y = 600\n    baby.position.x = 400+(110/2)\n    speedIncrease = 0\n  }\n\n  if (allBrogli.overlap(bottomBounds)) {\n    brogliOverlap = 1\n    console.log(brogliOverlap)\n  }\n\n  if (brogliOverlap === 1) {\n    console.log('game reset')\n    resetGame();\n    brogliOverlap = 0\n  }\n  \n}\n\nfunction endGame() {\n  for (let i = 0; i < allBrogli.length; i++) {\n    allBrogli[i].setVelocity(0,0);\n    allBrogli[i].position.y = Math.floor(Math.random() * 600 + 100)\n    allBrogli[i].position.x = Math.floor(Math.random() * 600 + 100)\n  }\n}\n\nfunction resetGame() {\n  speedIncrease += .5\n  for (let i = 0; i < allBrogli.length; i++) {\n    allBrogli[i].setVelocity(0,0);\n    allBrogli[i].position.y = -100\n    \n  }\n  initGame()\n}\n\nfunction initGame() {\n  console.log('game init')\n\n  let safePoint = Math.floor(Math.random() * 400 + 200);\n  let lowerDiv = (safePoint - 200) / (allBrogli.length / 2)\n  let higherDiv = (700 - (safePoint + 200)) / (allBrogli.length / 2)\n  for (let i = 0; i < allBrogli.length; i++) {\n    allBrogli[i].position.y = Math.random() * 80 + 10;\n\n    if ( i < allBrogli.length / 2) {\n      let distX = 100 + (lowerDiv*i)\n      allBrogli[i].position.x = distX; \n    } else {\n      let distX = (safePoint + 100) + (higherDiv * i)\n      allBrogli[i].position.x = distX; \n    }\n    allBrogli[i].setVelocity(0, 4 + speedIncrease)\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ggj8aqxh5ls01qzcr9cp",
        "width": 1920,
        "height": 1080,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-07T13:52:45.247Z"
      }
    ],
    "comments": [
      {
        "comment": "brogli 😭",
        "commenter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-07T13:52:43.157Z"
      }
    ]
  },
  {
    "_id": "xxieCRS46H3AByPEE",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-02-02T15:15:40.282Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Poster using Juliana's instructions",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/ijehmjluhsmqn0ytd4je",
        "width": 3508,
        "height": 5807,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-03T14:26:55.746Z"
      },
      {
        "category": "nerdy",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-10T02:00:44.236Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "xxjMq4SLa3tRNkxx8",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-04-28T06:19:04.498Z",
    "posted": true,
    "lesson": "API",
    "description": "Super simple sketch where I made a standings table using the Football API! I decided to use the current standings for the Brazilian Serie A. I was actually surprised that there's a free-to-use API for almost every major sport and it's all incredibly well-maintained and documented, who knew?",
    "code": "const url = 'https://api-football-v1.p.rapidapi.com/v3/standings?season=2023&league=71';\nconst options = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'content-type': 'application/octet-stream',\n\t\t'X-RapidAPI-Key': '0b101e81b2mshd4f788c3dbddae8p13f927jsn98ed3394b228',\n\t\t'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com'\n\t}\n};\n\n  fetch(url, options)\n  .then(response => response.json())\n  .then(data => buildSite(data.response[0]))\n  .catch(error => console.error(error))\n\n\n  function buildSite(data) {\n    const main = document.getElementById('main')\n \n    main.innerHTML = `\n      <header>\n      <img src='${data.league.logo}'>\n      <h1>${data.league.name}</h1>\n\n      </header>\n      <article id='standings'></article>\n    `\n    const standingsContainer = document.getElementById('standings')\n    const topEntry = document.createElement('section')\n\n    topEntry.innerHTML = `\n    <section class='rank'>\n\n    </section>\n\n    <h3 class='name'>Team Name</h3>\n\n    <section class='points'>\n    League Points\n    </section>\n\n    <section class='goals-diff'>\n    Goal Differential\n    </section>\n    \n    `\n    topEntry.classList.add('team')\n    topEntry.classList.add('top')\n    standingsContainer.append(topEntry)\n    data.league.standings[0].forEach(team => {\n      const currentTeamEntry = document.createElement('section')\n\n      currentTeamEntry.innerHTML = `\n      <section class='rank'>\n      ${team.rank}\n      </section>\n\n      <h3 class='name'>${team.team.name}</h3>\n\n      <section class='points'>\n      ${team.points}\n      </section>\n\n      <section class='goals-diff'>\n      ${team.goalsDiff}\n      </section>\n      \n      `\n      currentTeamEntry.classList.add('team')\n      standingsContainer.append(currentTeamEntry)\n    });\n    console.log(data.league.standings[0][0])\n  }",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/dlko9y9ikygyzqv4oxed",
        "width": 734,
        "height": 920,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "xzeh7CQkAfgSPk3tK",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-04-21T14:31:46.781Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "WEEK 11 ( 3/4): I wanted to use Midjourney so badly but it kept asking me to pay so I tried to look for other AI image/art generators and fed it prompts for my strawberry themed game and to create a cgi character of my cat for my animation finals. ( I now have a folder of 50+ images to help me with my animation moodboard and character creation ideas.) These were the cutest ones I found.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bozg6wbywxcivl9sr4lb",
        "width": 568,
        "height": 558,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/rqwe1ppub8tigzjgrs7y",
        "width": 572,
        "height": 564,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/g0folbgazbcwz1bnt9po",
        "width": 568,
        "height": 566,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-04-21T15:24:34.344Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-21T16:08:26.056Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "y2JF9rjKBGqroQcJA",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-03-31T17:52:00.878Z",
    "posted": true,
    "lesson": "Music",
    "description": "tried to make a music player",
    "code": "// Display Operator\n\nfunction set(op) {\n    document.getElementById(\"display\").value += op;\n    document.getElementById(\"display-mobile\").value += op;\n    console.log(op)\n}\n\n// Operation functions\n\nfunction sine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.sin(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.sin(tempStoreM));\n}\n\nfunction cosine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.cos(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.cos(tempStoreM));\n}\n\nfunction tan() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.tan(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.tan(tempStoreM));\n}\n\nfunction asine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.asin(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.asin(tempStoreM));\n}\n\nfunction acosine() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.acos(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.acos(tempStoreM));\n\n}\n\nfunction atan() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.atan(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.atan(tempStoreM));\n\n}\n\nfunction sqrRoot() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.sqrt(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.sqrt(tempStoreM));\n\n}\n\nfunction fLog() {\n    let tempStore = document.getElementById(\"display\").value;\n    document.getElementById(\"display\").value = eval(Math.log(tempStore));\n    let tempStoreM = document.getElementById(\"display-mobile\").value;\n    document.getElementById(\"display-mobile\").value = eval(Math.log(tempStoreM));\n \n}\n\n// Result function \n\nfunction answer() {\n    let phrase = random();\n    let gentext = document.querySelector(\".genText\")\n    gentext.innerHTML=phrase\n    let Exp = document.getElementById(\"display\");\n    Exp.value = 1;\n    let Exp1 = document.getElementById(\"display-mobile\");\n    Exp1.value = 1;\n    if (randomNum < 6) {\n        randomNum = randomNum + 1;\n    } else {\n        randomNum = 0;\n    }\n}\n\ndocument.addEventListener(\"keyup\", function(event) {\n    if (event.code === 'Enter') {\n    answer();\n    }\n});\n\n// CE and AC functions\n\nfunction ce() {\n    let elem = document.getElementById(\"display\").value;\n    let elem1 = document.getElementById(\"display-mobile\").value;\n    let length = elem.length;\n    length--;\n    let a = elem.substr(0, length);\n    document.getElementById(\"display\").value = a;\n    let b = elem1.substr(0, length);\n    document.getElementById(\"display-mobile\").value = b;\n}\n\nfunction ac() {\n    let elem = document.getElementById(\"display\").value;\n    let elem1 = document.getElementById(\"display-mobile\").value;\n    let length = 0;\n    let a = elem.substr(0, length);\n    let b = elem1.substr(0, length);\n    document.getElementById(\"display\").value = a;\n    document.getElementById(\"display-mobile\").value = b;\n}\n\n// Randomm text generated after result \n \nlet randomNum = 0;\n\nfunction random() {\n    // let randomNum = Math.floor(Math.random() * 7);   \n    let phrase;\n    switch (randomNum) {\n        case 0:\n        phrase = `wow you're fucking dumb <img class=\"emoji\" src=\"assets/crying.png\"><img class=\"emoji\" src=\"assets/crying.png\">`;\n        break;\n        case 1:\n        phrase = `you can't even do basic math <img class=\"emoji\" src=\"assets/skull.png\">`;\n        break;\n        case 2:\n        phrase = \"lmao\";\n        break;\n        case 3:\n        phrase = \"you're a failure\";\n        break;\n        case 4:\n        phrase = `are you even trying <img class=\"emoji\" src=\"assets/crying.png\">`;\n        break;\n        case 5:\n        phrase = \"you're a failure\";\n        break;\n        case 6:\n        phrase = \"just give up man\";\n    }\n    return phrase;\n}\n\n// Fx and 123 table on mobile view\n\nlet table1 = document.querySelector(\".table1\")\nlet table2 = document.querySelector(\".table2\")\n\nlet e1 = document.querySelector(\".e1\")\nlet e2 = document.querySelector(\".e2\");\n\ne1.onclick = function() {\n    table1.classList.remove(\"hide\");\n    table2.classList.add(\"hide\");\n    e1.classList.add(\"active\");\n    e2.classList.remove(\"active\");\n\n}\n\ne2.onclick = function() {\n    table1.classList.add(\"hide\");\n    table2.classList.remove(\"hide\");\n    e1.classList.remove(\"active\");\n    e2.classList.add(\"active\");\n}\n\n// Rad and Deg \n\nlet btnRadM = document.querySelector(\"#btnRadM\");\nlet btnDegM = document.querySelector(\"#btnDegM\");\n\nbtnDegM.onclick = function() {\n    btnDegM.classList.add(\"btnBorder\");\n    btnRadM.classList.remove(\"btnBorder\");\n}\n\nbtnRadM.onclick = function() {\n    btnRadM.classList.add(\"btnBorder\");\n    btnDegM.classList.remove(\"btnBorder\");\n}\n\nlet btnRad = document.querySelector(\"#btnRad\");\nlet btnDeg = document.querySelector(\"#btnDeg\");\n\nbtnDeg.onclick = function() {\n    btnDeg.classList.add(\"btnBorder\");\n    btnRad.classList.remove(\"btnBorder\");\n}\n\nbtnRad.onclick = function() {\n    btnRad.classList.add(\"btnBorder\");\n    btnDeg.classList.remove(\"btnBorder\");\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/bqmfj6vbacuvgicfycmg",
        "width": 3584,
        "height": 1838,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "y82w2qHxqNHhJkMMe",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-03-07T02:46:03.113Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Wanted to create something else but it wasn't working out the way I wanted it to. Instead I ended up taking my work and made a pixel gradient grid that is influenced by user inputs for each of the hues.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\nlet c;\nlet r;\nlet g;\nlet b;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  createP(\"Red\");\n  r_slider = createSlider(0, 255, 50);\n  \n  createP(\"Green\");\n  g_slider = createSlider(0, 255, 50);\n  \n  createP(\"Blue\");\n  b_slider = createSlider(0, 255, 50);\n}\n\nfunction draw() {\n  background(10);\n  \n  img = createImg(600, 600);\n  loadPixels();\n  \n  r = r_slider.value();\n  g = g_slider.value();\n  b = b_slider.value();\n  \n  for(y = 0; y < height; y = y + 10) {\n    for(x = 0; x < width; x = x + 10) {\n        c = color(y * (r/50), x * (g/50), y * b/50);\n        set(x, y, c);\n    }\n  }\n  \n  updatePixels();\n  image(img, 0, 0, width, height);\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/qq5eo7qqz328bwgkaeo7",
        "width": 599,
        "height": 598,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:46:03.774Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "y8y2DEihNwwR8rE3M",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-02-01T09:43:49.14Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "Thought I'd do a sketch following my own instructions.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/y5vaog0ohs94kwkwc9ig",
        "width": 1500,
        "height": 1500,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bmosuzdq5su2dqq0eglo",
        "width": 565,
        "height": 467,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-02T02:02:08.941Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "yQKbLcj8PpqrNwKYP",
    "author_id": "me69bqQXDu4jtokwu",
    "author": "Chris Kim",
    "created_at": "2023-03-03T04:01:36.198Z",
    "posted": false,
    "lesson": "Strategies",
    "description": "",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-03-03T16:09:50.78Z"
      },
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-24T02:06:31.475Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "yh42KRaWciJnJGgTc",
    "author_id": "4bHpKt9dPkcFuNAuM",
    "author": "Alex Silva",
    "created_at": "2023-02-20T23:37:51.499Z",
    "posted": true,
    "lesson": "Params",
    "description": "Goofy sketch for the face generator. I used clippings from various fruit still lifes and parameterized their positions to generate faces with them! Would've like to add some sort of background/head but ran out of time",
    "code": "// p5js editor link:\n//https://editor.p5js.org/avs-codes/sketches/jw6vEnf5Q",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/w89uffngp5gbtwrprdlb",
        "width": 601,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/knvqipuzipdzhjy2f0lc",
        "width": 598,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/zhqfx0vnebnvewjqrnrw",
        "width": 595,
        "height": 783,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-21T00:15:12.039Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-21T00:19:28.675Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-02-21T02:00:38.157Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-21T06:00:16.951Z"
      },
      {
        "category": "pretty",
        "voter_id": "pdEGqtMcHKJMaEqaj",
        "created_at": "2023-02-21T23:39:13.498Z"
      },
      {
        "category": "pretty",
        "voter_id": "rDFkC5Xf7kf3Rwcbj",
        "created_at": "2023-02-22T00:15:05.891Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-22T10:26:30.674Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-02-23T16:55:37.57Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "yrs6XMngkj9LvuAzR",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-04-07T01:13:35.683Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Tackled the challenge for this week. Created a microgame where two players have to cooperate to keep a block from breaking the floor by jumping up and pushing the block. Didn't have enough time to iron out the bugs though so there may be some issues here and there.\n\nPlayer on left uses s, f, e and Player on the right uses the arrow keys.",
    "code": "function setup() {\n  createCanvas(600, 800);\n  world.gravity.y = 10;\n\n  // Establish sprites\n  \n  player1 = new Sprite();\n  player1.x = 200;\n  player1.y = 600;\n  player1.collision = 'kinematic';\n  \n  player2 = new Sprite();\n  player2.x = 400;\n  player2.y = 600;\n  player2.collision = 'kinematic';\n  \n  obstacle = new Sprite();\n  obstacle.y = 100;\n  obstacle.width = random(100, 400);\n  obstacle.height = random(100, 400);\n  \n  floor = new Sprite(400, 700, 800, 30, 'static');\n}\n\nfunction draw() {\n  background(220);\n  \n  // Establish movement\n  \n  // Player 1 - use s, f, e\n  \n  if(kb.pressing('s')) {\n    player1.vel.x = -3;\n  } else if(kb.pressing('f')) {\n    player1.vel.x = 3;\n  } else if(kb.pressing('e')) {\n    player1.vel.y = -5;\n  } else {\n    player1.vel.x = 0;\n  }\n  \n  // Player 2 - uses arrow keys\n  \n  if(kb.pressing('left')) {\n    player2.vel.x = -3;\n  } else if(kb.pressing('right')) {\n    player2.vel.x = 3;\n  } else if(kb.pressing('up')) {\n    player2.vel.y = -5;\n  } else {\n    player2.vel.x = 0;\n  }\n  \n  // Establish lose condition\n  \n  if(obstacle.collides(floor)) {\n    floor.collider = 'dynamic';\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vgxotiln6bvetehbyog4",
        "width": 897,
        "height": 912,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-07T03:47:17.899Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "ysv5ZaRKABmiuBvmR",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-02-27T16:42:27.418Z",
    "posted": true,
    "lesson": "Params",
    "description": "Pair challenge with Keren's code, I loved her flower pattern, I decided to make one of the circles look like rain, so the whole composition looks like a field of flowers in the rain",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xml7hgaodoqp23c2odbc",
        "width": 720,
        "height": 720,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:31:17.623Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "yswJoi6KskXpQncHa",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-24T22:04:23.049Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "Comparing Google's Bard with ChatGPT.  \n1 - Asked Bard to solve a coding problem. It randomly invented an ml5.js class, which absolutely does not exist, and wrote a piece of code which obv doesn't work. Trying to get it to iterate on its solution was very little help.  \n2 - Asked ChatGPT to solve the same problem. Its initial solution didn't work, but at least it didn't make up classes and methods.  \n3 - Made ChatGPT go through a few iterations, and worked with the code it came up with to vary output with speed of movement of a tracked point.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.min.js\n// require https://unpkg.com/ml5@0.1.1/dist/ml5.min.js\n\nlet video;\nlet poseNet;\nlet pose;\nlet prevNosePos;\nlet noseVelocity;\n\nlet col;\n\nfunction setup() {\n  createCanvas(640, 480);\n  noStroke();\n\n  video = createCapture(VIDEO);\n  video.size(width, height);\n\n  poseNet = ml5.poseNet(video, modelReady);\n  poseNet.on('pose', gotPose);\n}\n\nfunction modelReady() {\n  console.log('PoseNet model loaded');\n}\n\nfunction gotPose(results) {\n  if (results.length > 0) {\n    pose = results[0].pose;\n  }\n}\n\nfunction draw() {\n    push();\n    tint(255, 30);\n    image(video, 0, 0);\n    pop();\n    \n  if (pose) {\n    let nose = pose.keypoints[0];\n    let nosePos = createVector(nose.position.x, nose.position.y);\n\n    if (prevNosePos) {\n      let deltaTime = 1 / frameRate();\n      noseVelocity = p5.Vector.sub(nosePos, prevNosePos).div(deltaTime);\n      console.log('Nose velocity:', noseVelocity.mag());\n      \n      if (noseVelocity.mag() > 200) {\n          col = 255;\n      } else {\n          col = 0;\n      }\n    }\n\n    prevNosePos = nosePos;\n    \n    fill(col, 0, 0);\n    ellipse(nose.position.x, nose.position.y, 10);\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/twnzwtojeebae6obsx2w",
        "width": 2136,
        "height": 1099,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/iy2sh18qprvze3qi55pk",
        "width": 1296,
        "height": 1043,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/kcbc4vdast0uy17ahrns",
        "width": 1048,
        "height": 778,
        "format": "mp4",
        "resource_type": "video"
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "yxcGsJ4co2E4fsxmP",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-05-05T15:56:11.151Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "My take on the challenge! It's giving Princess Peach's castle.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/j2790fld1zcrg5hbzqt6",
        "width": 1200,
        "height": 856,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bihhyfp8ctqxyhizow4x",
        "width": 892,
        "height": 790,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/f2homzl5d8zsop3jupst",
        "width": 1282,
        "height": 866,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:50.637Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "yy6rR8nJtbopgPhR9",
    "author_id": "rDFkC5Xf7kf3Rwcbj",
    "author": "aabha sewak",
    "created_at": "2023-04-28T04:06:03.768Z",
    "posted": true,
    "lesson": "Creative AI",
    "description": "My friend and I were playing around with AI generated photos and used an AI face erasure tool to create some interesting visuals.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vn9t1o69opmdext397vy",
        "width": 716,
        "height": 1024,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-05-12T13:22:04.528Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "yyyZbax2pBAtXzrGT",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-02-16T02:35:56.643Z",
    "posted": true,
    "lesson": "Noise",
    "description": "VARWAVE",
    "code": "var col = 0;\nvar inc = 0.01;\nvar start = 0\n\nfunction setup() {\n   createCanvas(windowWidth, windowHeight);\n\t\n}\n\nfunction draw() {\n\tbackground(0,10);\n\tfill(120);\n\tvar xoff = start;\n\tfor (var x = 0; x < width; x++) {\n\n\t\tvar y = noise(xoff)*height;\n\t\t\n\t\tellipse(x,y,y)\n\t\t\n\t\txoff += inc;\n}\n\t\n\tstart += inc;\n\t\n\t//endShape();\n\t//noLoop();\n\t\n\tif (col <= 255) {\n\t\tcol++;\n\t} else if (col > 255) {\n\t\tcol = 0;\n}\n\t\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/cxzbv6ugmfyl1km51hi8",
        "width": 1356,
        "height": 1294,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-16T05:06:43.813Z"
      },
      {
        "category": "pretty",
        "voter_id": "DgrD5so94kzZH8ktA",
        "created_at": "2023-02-16T20:13:54.745Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "z6bLu6cvPFCQNJz6A",
    "author_id": "5igS7Z3tRxbSg93TQ",
    "author": "Ishaan Das",
    "created_at": "2023-05-05T15:11:12.488Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Castle",
    "code": "// Define variables\ntower_height = 50;\ntower_radius = 10;\nwall_length = 100;\nwall_thickness = 5;\nwall_height = 20;\nroof_height = 30;\n\n// Define tower module\nmodule tower() {\n  difference() {\n    cylinder(h=tower_height, r=tower_radius, center=true);\n    translate([0, 0, tower_height/2]) cylinder(h=5, r=tower_radius*2, center=true);\n  }\n}\n\n// Draw castle walls\ndifference() {\n  color(\"gray\") cube([wall_length, wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([0, -wall_length/2 + wall_thickness/2, 0]) cube([wall_thickness, wall_length - wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([0, wall_length/2 - wall_thickness/2, 0]) cube([wall_thickness, wall_length - wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([-wall_length/2 + wall_thickness/2, 0, 0]) cube([wall_length - wall_thickness*2, wall_thickness, wall_height], center=true);\n  color(\"gray\") translate([wall_length/2 - wall_thickness/2, 0, 0]) cube([wall_length - wall_thickness*2, wall_thickness, wall_height], center=true);\n}\n\n// Draw towers\ntranslate([-wall_length/2 + tower_radius, -wall_length/2 + tower_radius, 0]) color(\"darkred\") tower();\ntranslate([-wall_length/2 + tower_radius, wall_length/2 - tower_radius, 0]) color(\"darkred\") tower();\ntranslate([wall_length/2 - tower_radius, wall_length/2 - tower_radius, 0]) color(\"darkred\") tower();\ntranslate([wall_length/2 - tower_radius, -wall_length/2 + tower_radius, 0]) color(\"darkred\") tower();\n\n// Roof\ntranslate([0, 0, wall_height + 20]) color(\"darkgray\") cube([wall_length, wall_length, roof_height], center=true);\n\n// Add tower on top of roof\ntranslate([0, 0, wall_height + roof_height + 10]) color(\"darkred\") tower();\n\n// Add triangle on top of top tower\ntranslate([0, 0, 85]) color(\"gold\") polyhedron(points=[[-10, -10, 0], [10, -10, 0], [0, 0, 20], [0, 10, 0]], faces=[[0, 1, 2], [1, 3, 2], [3, 0, 2], [0, 3, 1]]);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/e2ewprljl8hpnrjnnivp",
        "width": 928,
        "height": 1130,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-05T16:31:58.973Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "z6pbRWcEnW4k92Qpx",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-04-13T04:11:37.44Z",
    "posted": true,
    "lesson": "Text",
    "description": "Layered poetry experimentation using context free grammars",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/yorlshb3mai4p8orb6wa",
        "width": 1270,
        "height": 610,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/afclcyd7cjrqnbx49jcq",
        "width": 1270,
        "height": 610,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T01:13:57.16Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zCwWrfRBKbpc46gGt",
    "author_id": "aFZYuqXuhejWXg6yv",
    "author": "Isha Agarwal",
    "created_at": "2023-04-04T06:27:09.494Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Made a bouncing ball game, inspired by the coding challenge we did in class. Also added some sound effects",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /microgames/sketches/p5.play.js\n\n//sound from https://pixabay.com/sound-effects/search/bounce/\n\nlet topwall;\nlet leftwall;\nlet rightwall;\nlet wallwidth = 10;\n\nlet object;\nlet objectwidth = 20;\nlet playerwall;\nlet playerwallwidth = 100;\n\nlet gamespeed = 5;\nlet score = 0;\nlet bouncesound;\n\nlet mode = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  object = createSprite(width/2, 50, objectwidth, objectwidth);\n  object.setSpeed(gamespeed, random(360));\n\n  walls = new Group();\n  topwall = createSprite(width/2, wallwidth/2, width, wallwidth);\n  topwall.immovable = true;\n  walls.add(topwall);\n  leftwall = createSprite(wallwidth/2, height/2, wallwidth, height);\n  leftwall.immovable = true;\n  walls.add(leftwall);\n  rightwall = createSprite(width - wallwidth/2, height/2, wallwidth, height);\n  rightwall.immovable = true;\n  walls.add(rightwall);\n\n  playerwall = createSprite(width/2, height - wallwidth/2 , playerwallwidth, wallwidth);\n  playerwall.immovable = true;\n\n  bouncesound = createAudio('bounce.mp3');\n\n}\n\nfunction draw() {\n  background(30);\n  \n  object.bounce(walls);\n  object.bounce(playerwall);\n\n  drawSprites();\n\n  if(keyIsDown(37)){\n    playerwall.position.x-=gamespeed;\n  }\n  if(keyIsDown(39)){\n    playerwall.position.x+=gamespeed;\n  }\n  if(playerwall.position.x < playerwallwidth/2){\n    playerwall.position.x = playerwallwidth/2;\n  }\n  if(playerwall.position.x > width - playerwallwidth/2){\n    playerwall.position.x = width - playerwallwidth/2;\n  }\n\n  push();\n    fill(255);\n    textAlign(LEFT);\n    text(\"Score: \" + score, 20, 30);\n    textAlign(RIGHT);\n    text(\"Use ← → to navigate\", width - 20, 30);\n  pop();\n\n  if (object.position.y >= height - wallwidth - objectwidth/2 && object.position.y < 1 + height - wallwidth - objectwidth/2) {\n    console.log(\"bounce\");\n    score++;\n    bouncesound.play();\n  }\n  \n  if (object.position.y > height) {\n    push();\n      fill(255);\n      textAlign(CENTER, CENTER);\n      text(\"Oops\", width/2, height/2 - 10);\n      text(\"Press right arrow to try again\", width/2, height/2 + 10);\n      if (keyIsDown(39)) {\n        window.location.reload();\n      }\n    pop();\n  }\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/niyfjredyzyqvthcxrsw",
        "width": 818,
        "height": 822,
        "format": "mp4",
        "resource_type": "video"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-04T22:57:05.093Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-14T16:33:33.697Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zECXeTYEwMpMnjfXC",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-04-11T03:16:59.731Z",
    "posted": true,
    "lesson": "Text",
    "description": "**UX Persona Generator using the Markov Model** as an attempt to comment on the templatisation prevalent in UX case studies, using a training set of 15 ChatGPT generated personas. No one reads the fine print on personas anyway. Stuff them with keywords.",
    "code": "const personaDetail =\n    \"She's a 32-year-old working mother of two children (ages 4 and 6) who frequently travels for work. She's often stressed about keeping her kids occupied during flights, and finds it difficult to come up with new activities and games to keep them engaged. They're a 35-year-old couple with one child (age 8), who are planning a family vacation to Europe. They've never flown with their child before, and are worried about how he'll handle the long flight and potential boredom. He's a 40-year-old single father of three children (ages 3, 5, and 7) who often travels for leisure with his kids. He's always looking for new and creative ways to keep his children entertained during flights, and values apps that offer educational and interactive content. She's a 27-year-old new mother traveling with her first child (age 10 months). She's never flown with a baby before, and is nervous about how she'll manage to keep him entertained and comfortable during the flight. He's a 29-year-old father of two children (ages 3 and 5) who often travels with his family for leisure. He's always looking for apps that offer age-appropriate content and activities that can keep his kids entertained during flights. They're a 42-year-old couple with two children (ages 7 and 10) who are planning a long-haul flight to visit family overseas. They're looking for an app that offers a mix of educational and entertaining content that can keep their kids engaged for the duration of the flight. She's a 33-year-old mother of two children (ages 2 and 4) who often travels with her family for leisure. She's looking for an app that offers content specifically tailored to young children, such as interactive stories and games that can be played offline. They're a 38-year-old couple with three children (ages 4, 7, and 9) who are planning a family vacation to Hawaii. They're looking for an app that offers a variety of content and activities that can be customized to each child's age and interests, such as puzzles, coloring pages, and interactive quizzes.\";\n\nconst names = [\"Aaran\", \"Aaren\", \"Aarez\", \"Aarman\", \"Aaron\", \"Aaron-James\", \"Aarron\", \"Aaryan\", \"Aaryn\", \"Aayan\", \"Aazaan\", \"Abaan\", \"Abbas\", \"Abdallah\", \"Abdalroof\", \"Abdihakim\", \"Abdirahman\", \"Abdisalam\", \"Abdul\", \"Abdul-Aziz\", \"Abdulbasir\", \"Abdulkadir\", \"Abdulkarem\", \"Abdulkhader\", \"Abdullah\", \"Abdul-Majeed\", \"Abdulmalik\", \"Abdul-Rehman\", \"Abdur\", \"Abdurraheem\", \"Abdur-Rahman\", \"Abdur-Rehmaan\", \"Abel\", \"Abhinav\", \"Abhisumant\", \"Abid\", \"Abir\", \"Abraham\", \"Abu\", \"Abubakar\", \"Ace\", \"Adain\", \"Adam\", \"Adam-James\", \"Addison\", \"Addisson\", \"Adegbola\", \"Adegbolahan\", \"Aden\", \"Adenn\", \"Adie\", \"Adil\", \"Aditya\", \"Adnan\", \"Adrian\", \"Adrien\", \"Aedan\", \"Aedin\", \"Aedyn\", \"Aeron\", \"Afonso\", \"Ahmad\", \"Ahmed\", \"Ahmed-Aziz\", \"Ahoua\", \"Ahtasham\", \"Aiadan\", \"Aidan\", \"Aiden\", \"Aiden-Jack\", \"Aiden-Vee\", \"Aidian\", \"Aidy\", \"Ailin\", \"Aiman\", \"Ainsley\", \"Ainslie\", \"Airen\", \"Airidas\", \"Airlie\", \"AJ\", \"Ajay\", \"A-Jay\", \"Ajayraj\", \"Akan\", \"Akram\", \"Al\", \"Ala\", \"Alan\", \"Alanas\", \"Alasdair\", \"Alastair\", \"Alber\", \"Albert\", \"Albie\", \"Aldred\", \"Alec\", \"Aled\", \"Aleem\", \"Aleksandar\", \"Aleksander\", \"Aleksandr\", \"Aleksandrs\", \"Alekzander\", \"Alessandro\", \"Alessio\", \"Alex\", \"Alexander\", \"Alexei\", \"Alexx\", \"Alexzander\", \"Alf\", \"Alfee\", \"Alfie\", \"Alfred\", \"Alfy\", \"Alhaji\", \"Al-Hassan\", \"Ali\", \"Aliekber\", \"Alieu\", \"Alihaider\", \"Alisdair\", \"Alishan\", \"Alistair\", \"Alistar\", \"Alister\", \"Aliyaan\", \"Allan\", \"Allan-Laiton\", \"Allen\", \"Allesandro\", \"Allister\", \"Ally\", \"Alphonse\", \"Altyiab\", \"Alum\", \"Alvern\", \"Alvin\", \"Alyas\", \"Amaan\", \"Aman\", \"Amani\", \"Ambanimoh\", \"Ameer\", \"Amgad\", \"Ami\", \"Amin\", \"Amir\", \"Ammaar\", \"Ammar\", \"Ammer\", \"Amolpreet\", \"Amos\", \"Amrinder\", \"Amrit\", \"Amro\", \"Anay\", \"Andrea\", \"Andreas\", \"Andrei\", \"Andrejs\", \"Andrew\", \"Andy\", \"Anees\", \"Anesu\", \"Angel\", \"Angelo\", \"Angus\", \"Anir\", \"Anis\", \"Anish\", \"Anmolpreet\", \"Annan\", \"Anndra\", \"Anselm\", \"Anthony\", \"Anthony-John\", \"Antoine\", \"Anton\", \"Antoni\", \"Antonio\", \"Antony\", \"Antonyo\", \"Anubhav\", \"Aodhan\", \"Aon\", \"Aonghus\", \"Apisai\", \"Arafat\", \"Aran\", \"Arandeep\", \"Arann\", \"Aray\", \"Arayan\", \"Archibald\", \"Archie\", \"Arda\", \"Ardal\", \"Ardeshir\", \"Areeb\", \"Areez\", \"Aref\", \"Arfin\", \"Argyle\", \"Argyll\", \"Ari\", \"Aria\", \"Arian\", \"Arihant\", \"Aristomenis\", \"Aristotelis\", \"Arjuna\", \"Arlo\", \"Armaan\", \"Arman\", \"Armen\", \"Arnab\", \"Arnav\", \"Arnold\", \"Aron\", \"Aronas\", \"Arran\", \"Arrham\", \"Arron\", \"Arryn\", \"Arsalan\", \"Artem\", \"Arthur\", \"Artur\", \"Arturo\", \"Arun\", \"Arunas\", \"Arved\", \"Arya\", \"Aryan\", \"Aryankhan\", \"Aryian\", \"Aryn\", \"Asa\", \"Asfhan\", \"Ash\", \"Ashlee-jay\", \"Ashley\", \"Ashton\", \"Ashton-Lloyd\", \"Ashtyn\", \"Ashwin\", \"Asif\", \"Asim\", \"Aslam\", \"Asrar\", \"Ata\", \"Atal\", \"Atapattu\", \"Ateeq\", \"Athol\", \"Athon\", \"Athos-Carlos\", \"Atli\", \"Atom\", \"Attila\", \"Aulay\", \"Aun\", \"Austen\", \"Austin\", \"Avani\", \"Averon\", \"Avi\", \"Avinash\", \"Avraham\", \"Awais\", \"Awwal\", \"Axel\", \"Ayaan\", \"Ayan\", \"Aydan\", \"Ayden\", \"Aydin\", \"Aydon\", \"Ayman\", \"Ayomide\", \"Ayren\", \"Ayrton\", \"Aytug\", \"Ayub\", \"Ayyub\", \"Azaan\", \"Azedine\", \"Azeem\", \"Azim\", \"Aziz\", \"Azlan\", \"Azzam\", \"Azzedine\", \"Babatunmise\", \"Babur\", \"Bader\", \"Badr\", \"Badsha\", \"Bailee\", \"Bailey\", \"Bailie\", \"Bailley\", \"Baillie\", \"Baley\", \"Balian\", \"Banan\", \"Barath\", \"Barkley\", \"Barney\", \"Baron\", \"Barrie\", \"Barry\", \"Bartlomiej\", \"Bartosz\", \"Basher\", \"Basile\", \"Baxter\", \"Baye\", \"Bayley\", \"Beau\", \"Beinn\", \"Bekim\", \"Believe\", \"Ben\", \"Bendeguz\", \"Benedict\", \"Benjamin\", \"Benjamyn\", \"Benji\", \"Benn\", \"Bennett\", \"Benny\", \"Benoit\", \"Bentley\", \"Berkay\", \"Bernard\", \"Bertie\", \"Bevin\", \"Bezalel\", \"Bhaaldeen\", \"Bharath\", \"Bilal\", \"Bill\", \"Billy\", \"Binod\", \"Bjorn\", \"Blaike\", \"Blaine\", \"Blair\", \"Blaire\", \"Blake\", \"Blazej\", \"Blazey\", \"Blessing\", \"Blue\", \"Blyth\", \"Bo\", \"Boab\", \"Bob\", \"Bobby\", \"Bobby-Lee\", \"Bodhan\", \"Boedyn\", \"Bogdan\", \"Bohbi\", \"Bony\", \"Bowen\", \"Bowie\", \"Boyd\", \"Bracken\", \"Brad\", \"Bradan\", \"Braden\", \"Bradley\", \"Bradlie\", \"Bradly\", \"Brady\", \"Bradyn\", \"Braeden\", \"Braiden\", \"Brajan\", \"Brandan\", \"Branden\", \"Brandon\", \"Brandonlee\", \"Brandon-Lee\", \"Brandyn\", \"Brannan\", \"Brayden\", \"Braydon\", \"Braydyn\", \"Breandan\", \"Brehme\", \"Brendan\", \"Brendon\", \"Brendyn\", \"Breogan\", \"Bret\", \"Brett\", \"Briaddon\", \"Brian\", \"Brodi\", \"Brodie\", \"Brody\", \"Brogan\", \"Broghan\", \"Brooke\", \"Brooklin\", \"Brooklyn\", \"Bruce\", \"Bruin\", \"Bruno\", \"Brunon\", \"Bryan\", \"Bryce\", \"Bryden\", \"Brydon\", \"Brydon-Craig\", \"Bryn\", \"Brynmor\", \"Bryson\", \"Buddy\", \"Bully\", \"Burak\", \"Burhan\", \"Butali\", \"Butchi\", \"Byron\", \"Cabhan\", \"Cadan\", \"Cade\", \"Caden\", \"Cadon\", \"Cadyn\", \"Caedan\", \"Caedyn\", \"Cael\", \"Caelan\", \"Caelen\", \"Caethan\", \"Cahl\", \"Cahlum\", \"Cai\", \"Caidan\", \"Caiden\", \"Caiden-Paul\", \"Caidyn\", \"Caie\", \"Cailaen\", \"Cailean\", \"Caileb-John\", \"Cailin\", \"Cain\", \"Caine\", \"Cairn\", \"Cal\", \"Calan\", \"Calder\", \"Cale\", \"Calean\", \"Caleb\", \"Calen\", \"Caley\", \"Calib\", \"Calin\", \"Callahan\", \"Callan\", \"Callan-Adam\", \"Calley\", \"Callie\", \"Callin\", \"Callum\", \"Callun\", \"Callyn\", \"Calum\", \"Calum-James\", \"Calvin\", \"Cambell\", \"Camerin\", \"Cameron\", \"Campbel\", \"Campbell\", \"Camron\", \"Caolain\", \"Caolan\", \"Carl\", \"Carlo\", \"Carlos\", \"Carrich\", \"Carrick\", \"Carson\", \"Carter\", \"Carwyn\", \"Casey\", \"Casper\", \"Cassy\", \"Cathal\", \"Cator\", \"Cavan\", \"Cayden\", \"Cayden-Robert\", \"Cayden-Tiamo\", \"Ceejay\", \"Ceilan\", \"Ceiran\", \"Ceirin\", \"Ceiron\", \"Cejay\", \"Celik\", \"Cephas\", \"Cesar\", \"Cesare\", \"Chad\", \"Chaitanya\", \"Chang-Ha\", \"Charles\", \"Charley\", \"Charlie\", \"Charly\", \"Chase\", \"Che\", \"Chester\", \"Chevy\", \"Chi\", \"Chibudom\", \"Chidera\", \"Chimsom\", \"Chin\", \"Chintu\", \"Chiqal\", \"Chiron\", \"Chris\", \"Chris-Daniel\", \"Chrismedi\", \"Christian\", \"Christie\", \"Christoph\", \"Christopher\", \"Christopher-Lee\", \"Christy\", \"Chu\", \"Chukwuemeka\", \"Cian\", \"Ciann\", \"Ciar\", \"Ciaran\", \"Ciarian\", \"Cieran\", \"Cillian\", \"Cillin\", \"Cinar\", \"CJ\", \"C-Jay\", \"Clark\", \"Clarke\", \"Clayton\", \"Clement\", \"Clifford\", \"Clyde\", \"Cobain\", \"Coban\", \"Coben\", \"Cobi\", \"Cobie\", \"Coby\", \"Codey\", \"Codi\", \"Codie\", \"Cody\", \"Cody-Lee\", \"Coel\", \"Cohan\", \"Cohen\", \"Colby\", \"Cole\", \"Colin\", \"Coll\", \"Colm\", \"Colt\", \"Colton\", \"Colum\", \"Colvin\", \"Comghan\", \"Conal\", \"Conall\", \"Conan\", \"Conar\", \"Conghaile\", \"Conlan\", \"Conley\", \"Conli\", \"Conlin\", \"Conlly\", \"Conlon\", \"Conlyn\", \"Connal\", \"Connall\", \"Connan\", \"Connar\", \"Connel\", \"Connell\", \"Conner\", \"Connolly\", \"Connor\", \"Connor-David\", \"Conor\", \"Conrad\", \"Cooper\", \"Copeland\", \"Coray\", \"Corben\", \"Corbin\", \"Corey\", \"Corey-James\", \"Corey-Jay\", \"Cori\", \"Corie\", \"Corin\", \"Cormac\", \"Cormack\", \"Cormak\", \"Corran\", \"Corrie\", \"Cory\", \"Cosmo\", \"Coupar\", \"Craig\", \"Craig-James\", \"Crawford\", \"Creag\", \"Crispin\", \"Cristian\", \"Crombie\", \"Cruiz\", \"Cruz\", \"Cuillin\", \"Cullen\", \"Cullin\", \"Curtis\", \"Cyrus\", \"Daanyaal\", \"Daegan\", \"Daegyu\", \"Dafydd\", \"Dagon\", \"Dailey\", \"Daimhin\", \"Daithi\", \"Dakota\", \"Daksh\", \"Dale\", \"Dalong\", \"Dalton\", \"Damian\", \"Damien\", \"Damon\", \"Dan\", \"Danar\", \"Dane\", \"Danial\", \"Daniel\", \"Daniele\", \"Daniel-James\", \"Daniels\", \"Daniil\", \"Danish\", \"Daniyal\", \"Danniel\", \"Danny\", \"Dante\", \"Danyal\", \"Danyil\", \"Danys\", \"Daood\", \"Dara\", \"Darach\", \"Daragh\", \"Darcy\", \"D'arcy\", \"Dareh\", \"Daren\", \"Darien\", \"Darius\", \"Darl\", \"Darn\", \"Darrach\", \"Darragh\", \"Darrel\", \"Darrell\", \"Darren\", \"Darrie\", \"Darrius\", \"Darroch\", \"Darryl\", \"Darryn\", \"Darwyn\", \"Daryl\", \"Daryn\", \"Daud\", \"Daumantas\", \"Davi\", \"David\", \"David-Jay\", \"David-Lee\", \"Davie\", \"Davis\", \"Davy\", \"Dawid\", \"Dawson\", \"Dawud\", \"Dayem\", \"Daymian\", \"Deacon\", \"Deagan\", \"Dean\", \"Deano\", \"Decklan\", \"Declain\", \"Declan\", \"Declyan\", \"Declyn\", \"Dedeniseoluwa\", \"Deecan\", \"Deegan\", \"Deelan\", \"Deklain-Jaimes\", \"Del\", \"Demetrius\", \"Denis\", \"Deniss\", \"Dennan\", \"Dennin\", \"Dennis\", \"Denny\", \"Dennys\", \"Denon\", \"Denton\", \"Denver\", \"Denzel\", \"Deon\", \"Derek\", \"Derick\", \"Derin\", \"Dermot\", \"Derren\", \"Derrie\", \"Derrin\", \"Derron\", \"Derry\", \"Derryn\", \"Deryn\", \"Deshawn\", \"Desmond\", \"Dev\", \"Devan\", \"Devin\", \"Devlin\", \"Devlyn\", \"Devon\", \"Devrin\", \"Devyn\", \"Dex\", \"Dexter\", \"Dhani\", \"Dharam\", \"Dhavid\", \"Dhyia\", \"Diarmaid\", \"Diarmid\", \"Diarmuid\", \"Didier\", \"Diego\", \"Diesel\", \"Diesil\", \"Digby\", \"Dilan\", \"Dilano\", \"Dillan\", \"Dillon\", \"Dilraj\", \"Dimitri\", \"Dinaras\", \"Dion\", \"Dissanayake\", \"Dmitri\", \"Doire\", \"Dolan\", \"Domanic\", \"Domenico\", \"Domhnall\", \"Dominic\", \"Dominick\", \"Dominik\", \"Donald\", \"Donnacha\", \"Donnie\", \"Dorian\", \"Dougal\", \"Douglas\", \"Dougray\", \"Drakeo\", \"Dre\", \"Dregan\", \"Drew\", \"Dugald\", \"Duncan\", \"Duriel\", \"Dustin\", \"Dylan\", \"Dylan-Jack\", \"Dylan-James\", \"Dylan-John\", \"Dylan-Patrick\", \"Dylin\", \"Dyllan\", \"Dyllan-James\", \"Dyllon\", \"Eadie\", \"Eagann\", \"Eamon\", \"Eamonn\", \"Eason\", \"Eassan\", \"Easton\", \"Ebow\", \"Ed\", \"Eddie\", \"Eden\", \"Ediomi\", \"Edison\", \"Eduardo\", \"Eduards\", \"Edward\", \"Edwin\", \"Edwyn\", \"Eesa\", \"Efan\", \"Efe\", \"Ege\", \"Ehsan\", \"Ehsen\", \"Eiddon\", \"Eidhan\", \"Eihli\", \"Eimantas\", \"Eisa\", \"Eli\", \"Elias\", \"Elijah\", \"Eliot\", \"Elisau\", \"Eljay\", \"Eljon\", \"Elliot\", \"Elliott\", \"Ellis\", \"Ellisandro\", \"Elshan\", \"Elvin\", \"Elyan\", \"Emanuel\", \"Emerson\", \"Emil\", \"Emile\", \"Emir\", \"Emlyn\", \"Emmanuel\", \"Emmet\", \"Eng\", \"Eniola\", \"Enis\", \"Ennis\", \"Enrico\", \"Enrique\", \"Enzo\", \"Eoghain\", \"Eoghan\", \"Eoin\", \"Eonan\", \"Erdehan\", \"Eren\", \"Erencem\", \"Eric\", \"Ericlee\", \"Erik\", \"Eriz\", \"Ernie-Jacks\", \"Eroni\", \"Eryk\", \"Eshan\", \"Essa\", \"Esteban\", \"Ethan\", \"Etienne\", \"Etinosa\", \"Euan\", \"Eugene\", \"Evan\", \"Evann\", \"Ewan\", \"Ewen\", \"Ewing\", \"Exodi\", \"Ezekiel\", \"Ezra\", \"Fabian\", \"Fahad\", \"Faheem\", \"Faisal\", \"Faizaan\", \"Famara\", \"Fares\", \"Farhaan\", \"Farhan\", \"Farren\", \"Farzad\", \"Fauzaan\", \"Favour\", \"Fawaz\", \"Fawkes\", \"Faysal\", \"Fearghus\", \"Feden\", \"Felix\", \"Fergal\", \"Fergie\", \"Fergus\", \"Ferre\", \"Fezaan\", \"Fiachra\", \"Fikret\", \"Filip\", \"Filippo\", \"Finan\", \"Findlay\", \"Findlay-James\", \"Findlie\", \"Finlay\", \"Finley\", \"Finn\", \"Finnan\", \"Finnean\", \"Finnen\", \"Finnlay\", \"Finnley\", \"Fintan\", \"Fionn\", \"Firaaz\", \"Fletcher\", \"Flint\", \"Florin\", \"Flyn\", \"Flynn\", \"Fodeba\", \"Folarinwa\", \"Forbes\", \"Forgan\", \"Forrest\", \"Fox\", \"Francesco\", \"Francis\", \"Francisco\", \"Franciszek\", \"Franco\", \"Frank\", \"Frankie\", \"Franklin\", \"Franko\", \"Fraser\", \"Frazer\", \"Fred\", \"Freddie\", \"Frederick\", \"Fruin\", \"Fyfe\", \"Fyn\", \"Fynlay\", \"Fynn\", \"Gabriel\", \"Gallagher\", \"Gareth\", \"Garren\", \"Garrett\", \"Garry\", \"Gary\", \"Gavin\", \"Gavin-Lee\", \"Gene\", \"Geoff\", \"Geoffrey\", \"Geomer\", \"Geordan\", \"Geordie\", \"George\", \"Georgia\", \"Georgy\", \"Gerard\", \"Ghyll\", \"Giacomo\", \"Gian\", \"Giancarlo\", \"Gianluca\", \"Gianmarco\", \"Gideon\", \"Gil\", \"Gio\", \"Girijan\", \"Girius\", \"Gjan\", \"Glascott\", \"Glen\", \"Glenn\", \"Gordon\", \"Grady\", \"Graeme\", \"Graham\", \"Grahame\", \"Grant\", \"Grayson\", \"Greg\", \"Gregor\", \"Gregory\", \"Greig\", \"Griffin\", \"Griffyn\", \"Grzegorz\", \"Guang\", \"Guerin\", \"Guillaume\", \"Gurardass\", \"Gurdeep\", \"Gursees\", \"Gurthar\", \"Gurveer\", \"Gurwinder\", \"Gus\", \"Gustav\", \"Guthrie\", \"Guy\", \"Gytis\", \"Habeeb\", \"Hadji\", \"Hadyn\", \"Hagun\", \"Haiden\", \"Haider\", \"Hamad\", \"Hamid\", \"Hamish\", \"Hamza\", \"Hamzah\", \"Han\", \"Hansen\", \"Hao\", \"Hareem\", \"Hari\", \"Harikrishna\", \"Haris\", \"Harish\", \"Harjeevan\", \"Harjyot\", \"Harlee\", \"Harleigh\", \"Harley\", \"Harman\", \"Harnek\", \"Harold\", \"Haroon\", \"Harper\", \"Harri\", \"Harrington\", \"Harris\", \"Harrison\", \"Harry\", \"Harvey\", \"Harvie\", \"Harvinder\", \"Hasan\", \"Haseeb\", \"Hashem\", \"Hashim\", \"Hassan\", \"Hassanali\", \"Hately\", \"Havila\", \"Hayden\", \"Haydn\", \"Haydon\", \"Haydyn\", \"Hcen\", \"Hector\", \"Heddle\", \"Heidar\", \"Heini\", \"Hendri\", \"Henri\", \"Henry\", \"Herbert\", \"Heyden\", \"Hiro\", \"Hirvaansh\", \"Hishaam\", \"Hogan\", \"Honey\", \"Hong\", \"Hope\", \"Hopkin\", \"Hosea\", \"Howard\", \"Howie\", \"Hristomir\", \"Hubert\", \"Hugh\", \"Hugo\", \"Humza\", \"Hunter\", \"Husnain\", \"Hussain\", \"Hussan\", \"Hussnain\", \"Hussnan\", \"Hyden\", \"I\", \"Iagan\", \"Iain\", \"Ian\", \"Ibraheem\", \"Ibrahim\", \"Idahosa\", \"Idrees\", \"Idris\", \"Iestyn\", \"Ieuan\", \"Igor\", \"Ihtisham\", \"Ijay\", \"Ikechukwu\", \"Ikemsinachukwu\", \"Ilyaas\", \"Ilyas\", \"Iman\", \"Immanuel\", \"Inan\", \"Indy\", \"Ines\", \"Innes\", \"Ioannis\", \"Ireayomide\", \"Ireoluwa\", \"Irvin\", \"Irvine\", \"Isa\", \"Isaa\", \"Isaac\", \"Isaiah\", \"Isak\", \"Isher\", \"Ishwar\", \"Isimeli\", \"Isira\", \"Ismaeel\", \"Ismail\", \"Israel\", \"Issiaka\", \"Ivan\", \"Ivar\", \"Izaak\", \"J\", \"Jaay\", \"Jac\", \"Jace\", \"Jack\", \"Jacki\", \"Jackie\", \"Jack-James\", \"Jackson\", \"Jacky\", \"Jacob\", \"Jacques\", \"Jad\", \"Jaden\", \"Jadon\", \"Jadyn\", \"Jae\", \"Jagat\", \"Jago\", \"Jaheim\", \"Jahid\", \"Jahy\", \"Jai\", \"Jaida\", \"Jaiden\", \"Jaidyn\", \"Jaii\", \"Jaime\", \"Jai-Rajaram\", \"Jaise\", \"Jak\", \"Jake\", \"Jakey\", \"Jakob\", \"Jaksyn\", \"Jakub\", \"Jamaal\", \"Jamal\", \"Jameel\", \"Jameil\", \"James\", \"James-Paul\", \"Jamey\", \"Jamie\", \"Jan\", \"Jaosha\", \"Jardine\", \"Jared\", \"Jarell\", \"Jarl\", \"Jarno\", \"Jarred\", \"Jarvi\", \"Jasey-Jay\", \"Jasim\", \"Jaskaran\", \"Jason\", \"Jasper\", \"Jaxon\", \"Jaxson\", \"Jay\", \"Jaydan\", \"Jayden\", \"Jayden-James\", \"Jayden-Lee\", \"Jayden-Paul\", \"Jayden-Thomas\", \"Jaydn\", \"Jaydon\", \"Jaydyn\", \"Jayhan\", \"Jay-Jay\", \"Jayke\", \"Jaymie\", \"Jayse\", \"Jayson\", \"Jaz\", \"Jazeb\", \"Jazib\", \"Jazz\", \"Jean\", \"Jean-Lewis\", \"Jean-Pierre\", \"Jebadiah\", \"Jed\", \"Jedd\", \"Jedidiah\", \"Jeemie\", \"Jeevan\", \"Jeffrey\", \"Jensen\", \"Jenson\", \"Jensyn\", \"Jeremy\", \"Jerome\", \"Jeronimo\", \"Jerrick\", \"Jerry\", \"Jesse\", \"Jesuseun\", \"Jeswin\", \"Jevan\", \"Jeyun\", \"Jez\", \"Jia\", \"Jian\", \"Jiao\", \"Jimmy\", \"Jincheng\", \"JJ\", \"Joaquin\", \"Joash\", \"Jock\", \"Jody\", \"Joe\", \"Joeddy\", \"Joel\", \"Joey\", \"Joey-Jack\", \"Johann\", \"Johannes\", \"Johansson\", \"John\", \"Johnathan\", \"Johndean\", \"Johnjay\", \"John-Michael\", \"Johnnie\", \"Johnny\", \"Johnpaul\", \"John-Paul\", \"John-Scott\", \"Johnson\", \"Jole\", \"Jomuel\", \"Jon\", \"Jonah\", \"Jonatan\", \"Jonathan\", \"Jonathon\", \"Jonny\", \"Jonothan\", \"Jon-Paul\", \"Jonson\", \"Joojo\", \"Jordan\", \"Jordi\", \"Jordon\", \"Jordy\", \"Jordyn\", \"Jorge\", \"Joris\", \"Jorryn\", \"Josan\", \"Josef\", \"Joseph\", \"Josese\", \"Josh\", \"Joshiah\", \"Joshua\", \"Josiah\", \"Joss\", \"Jostelle\", \"Joynul\", \"Juan\", \"Jubin\", \"Judah\", \"Jude\", \"Jules\", \"Julian\", \"Julien\", \"Jun\", \"Junior\", \"Jura\", \"Justan\", \"Justin\", \"Justinas\", \"Kaan\", \"Kabeer\", \"Kabir\", \"Kacey\", \"Kacper\", \"Kade\", \"Kaden\", \"Kadin\", \"Kadyn\", \"Kaeden\", \"Kael\", \"Kaelan\", \"Kaelin\", \"Kaelum\", \"Kai\", \"Kaid\", \"Kaidan\", \"Kaiden\", \"Kaidinn\", \"Kaidyn\", \"Kaileb\", \"Kailin\", \"Kain\", \"Kaine\", \"Kainin\", \"Kainui\", \"Kairn\", \"Kaison\", \"Kaiwen\", \"Kajally\", \"Kajetan\", \"Kalani\", \"Kale\", \"Kaleb\", \"Kaleem\", \"Kal-el\", \"Kalen\", \"Kalin\", \"Kallan\", \"Kallin\", \"Kalum\", \"Kalvin\", \"Kalvyn\", \"Kameron\", \"Kames\", \"Kamil\", \"Kamran\", \"Kamron\", \"Kane\", \"Karam\", \"Karamvir\", \"Karandeep\", \"Kareem\", \"Karim\", \"Karimas\", \"Karl\", \"Karol\", \"Karson\", \"Karsyn\", \"Karthikeya\", \"Kasey\", \"Kash\", \"Kashif\", \"Kasim\", \"Kasper\", \"Kasra\", \"Kavin\", \"Kayam\", \"Kaydan\", \"Kayden\", \"Kaydin\", \"Kaydn\", \"Kaydyn\", \"Kaydyne\", \"Kayleb\", \"Kaylem\", \"Kaylum\", \"Kayne\", \"Kaywan\", \"Kealan\", \"Kealon\", \"Kean\", \"Keane\", \"Kearney\", \"Keatin\", \"Keaton\", \"Keavan\", \"Keayn\", \"Kedrick\", \"Keegan\", \"Keelan\", \"Keelin\", \"Keeman\", \"Keenan\", \"Keenan-Lee\", \"Keeton\", \"Kehinde\", \"Keigan\", \"Keilan\", \"Keir\", \"Keiran\", \"Keiren\", \"Keiron\", \"Keiryn\", \"Keison\", \"Keith\", \"Keivlin\", \"Kelam\", \"Kelan\", \"Kellan\", \"Kellen\", \"Kelso\", \"Kelum\", \"Kelvan\", \"Kelvin\", \"Ken\", \"Kenan\", \"Kendall\", \"Kendyn\", \"Kenlin\", \"Kenneth\", \"Kensey\", \"Kenton\", \"Kenyon\", \"Kenzeigh\", \"Kenzi\", \"Kenzie\", \"Kenzo\", \"Kenzy\", \"Keo\", \"Ker\", \"Kern\", \"Kerr\", \"Kevan\", \"Kevin\", \"Kevyn\", \"Kez\", \"Khai\", \"Khalan\", \"Khaleel\", \"Khaya\", \"Khevien\", \"Khizar\", \"Khizer\", \"Kia\", \"Kian\", \"Kian-James\", \"Kiaran\", \"Kiarash\", \"Kie\", \"Kiefer\", \"Kiegan\", \"Kienan\", \"Kier\", \"Kieran\", \"Kieran-Scott\", \"Kieren\", \"Kierin\", \"Kiern\", \"Kieron\", \"Kieryn\", \"Kile\", \"Killian\", \"Kimi\", \"Kingston\", \"Kinneil\", \"Kinnon\", \"Kinsey\", \"Kiran\", \"Kirk\", \"Kirwin\", \"Kit\", \"Kiya\", \"Kiyonari\", \"Kjae\", \"Klein\", \"Klevis\", \"Kobe\", \"Kobi\", \"Koby\", \"Koddi\", \"Koden\", \"Kodi\", \"Kodie\", \"Kody\", \"Kofi\", \"Kogan\", \"Kohen\", \"Kole\", \"Konan\", \"Konar\", \"Konnor\", \"Konrad\", \"Koray\", \"Korben\", \"Korbyn\", \"Korey\", \"Kori\", \"Korrin\", \"Kory\", \"Koushik\", \"Kris\", \"Krish\", \"Krishan\", \"Kriss\", \"Kristian\", \"Kristin\", \"Kristofer\", \"Kristoffer\", \"Kristopher\", \"Kruz\", \"Krzysiek\", \"Krzysztof\", \"Ksawery\", \"Ksawier\", \"Kuba\", \"Kurt\", \"Kurtis\", \"Kurtis-Jae\", \"Kyaan\", \"Kyan\", \"Kyde\", \"Kyden\", \"Kye\", \"Kyel\", \"Kyhran\", \"Kyie\", \"Kylan\", \"Kylar\", \"Kyle\", \"Kyle-Derek\", \"Kylian\", \"Kym\", \"Kynan\", \"Kyral\", \"Kyran\", \"Kyren\", \"Kyrillos\", \"Kyro\", \"Kyron\", \"Kyrran\", \"Lachlainn\", \"Lachlan\", \"Lachlann\", \"Lael\", \"Lagan\", \"Laird\", \"Laison\", \"Lakshya\", \"Lance\", \"Lancelot\", \"Landon\", \"Lang\", \"Lasse\", \"Latif\", \"Lauchlan\", \"Lauchlin\", \"Laughlan\", \"Lauren\", \"Laurence\", \"Laurie\", \"Lawlyn\", \"Lawrence\", \"Lawrie\", \"Lawson\", \"Layne\", \"Layton\", \"Lee\", \"Leigh\", \"Leigham\", \"Leighton\", \"Leilan\", \"Leiten\", \"Leithen\", \"Leland\", \"Lenin\", \"Lennan\", \"Lennen\", \"Lennex\", \"Lennon\", \"Lennox\", \"Lenny\", \"Leno\", \"Lenon\", \"Lenyn\", \"Leo\", \"Leon\", \"Leonard\", \"Leonardas\", \"Leonardo\", \"Lepeng\", \"Leroy\", \"Leven\", \"Levi\", \"Levon\", \"Levy\", \"Lewie\", \"Lewin\", \"Lewis\", \"Lex\", \"Leydon\", \"Leyland\", \"Leylann\", \"Leyton\", \"Liall\", \"Liam\", \"Liam-Stephen\", \"Limo\", \"Lincoln\", \"Lincoln-John\", \"Lincon\", \"Linden\", \"Linton\", \"Lionel\", \"Lisandro\", \"Litrell\", \"Liyonela-Elam\", \"LLeyton\", \"Lliam\", \"Lloyd\", \"Lloyde\", \"Loche\", \"Lochlan\", \"Lochlann\", \"Lochlan-Oliver\", \"Lock\", \"Lockey\", \"Logan\", \"Logann\", \"Logan-Rhys\", \"Loghan\", \"Lokesh\", \"Loki\", \"Lomond\", \"Lorcan\", \"Lorenz\", \"Lorenzo\", \"Lorne\", \"Loudon\", \"Loui\", \"Louie\", \"Louis\", \"Loukas\", \"Lovell\", \"Luc\", \"Luca\", \"Lucais\", \"Lucas\", \"Lucca\", \"Lucian\", \"Luciano\", \"Lucien\", \"Lucus\", \"Luic\", \"Luis\", \"Luk\", \"Luka\", \"Lukas\", \"Lukasz\", \"Luke\", \"Lukmaan\", \"Luqman\", \"Lyall\", \"Lyle\", \"Lyndsay\", \"Lysander\", \"Maanav\", \"Maaz\", \"Mac\", \"Macallum\", \"Macaulay\", \"Macauley\", \"Macaully\", \"Machlan\", \"Maciej\", \"Mack\", \"Mackenzie\", \"Mackenzy\", \"Mackie\", \"Macsen\", \"Macy\", \"Madaki\", \"Maddison\", \"Maddox\", \"Madison\", \"Madison-Jake\", \"Madox\", \"Mael\", \"Magnus\", \"Mahan\", \"Mahdi\", \"Mahmoud\", \"Maias\", \"Maison\", \"Maisum\", \"Maitlind\", \"Majid\", \"Makensie\", \"Makenzie\", \"Makin\", \"Maksim\", \"Maksymilian\", \"Malachai\", \"Malachi\", \"Malachy\", \"Malakai\", \"Malakhy\", \"Malcolm\", \"Malik\", \"Malikye\", \"Malo\", \"Ma'moon\", \"Manas\", \"Maneet\", \"Manmohan\", \"Manolo\", \"Manson\", \"Mantej\", \"Manuel\", \"Manus\", \"Marc\", \"Marc-Anthony\", \"Marcel\", \"Marcello\", \"Marcin\", \"Marco\", \"Marcos\", \"Marcous\", \"Marcquis\", \"Marcus\", \"Mario\", \"Marios\", \"Marius\", \"Mark\", \"Marko\", \"Markus\", \"Marley\", \"Marlin\", \"Marlon\", \"Maros\", \"Marshall\", \"Martin\", \"Marty\", \"Martyn\", \"Marvellous\", \"Marvin\", \"Marwan\", \"Maryk\", \"Marzuq\", \"Mashhood\", \"Mason\", \"Mason-Jay\", \"Masood\", \"Masson\", \"Matas\", \"Matej\", \"Mateusz\", \"Mathew\", \"Mathias\", \"Mathu\", \"Mathuyan\", \"Mati\", \"Matt\", \"Matteo\", \"Matthew\", \"Matthew-William\", \"Matthias\", \"Max\", \"Maxim\", \"Maximilian\", \"Maximillian\", \"Maximus\", \"Maxwell\", \"Maxx\", \"Mayeul\", \"Mayson\", \"Mazin\", \"Mcbride\", \"McCaulley\", \"McKade\", \"McKauley\", \"McKay\", \"McKenzie\", \"McLay\", \"Meftah\", \"Mehmet\", \"Mehraz\", \"Meko\", \"Melville\", \"Meshach\", \"Meyzhward\", \"Micah\", \"Michael\", \"Michael-Alexander\", \"Michael-James\", \"Michal\", \"Michat\", \"Micheal\", \"Michee\", \"Mickey\", \"Miguel\", \"Mika\", \"Mikael\", \"Mikee\", \"Mikey\", \"Mikhail\", \"Mikolaj\", \"Miles\", \"Millar\", \"Miller\", \"Milo\", \"Milos\", \"Milosz\", \"Mir\", \"Mirza\", \"Mitch\", \"Mitchel\", \"Mitchell\", \"Moad\", \"Moayd\", \"Mobeen\", \"Modoulamin\", \"Modu\", \"Mohamad\", \"Mohamed\", \"Mohammad\", \"Mohammad-Bilal\", \"Mohammed\", \"Mohanad\", \"Mohd\", \"Momin\", \"Momooreoluwa\", \"Montague\", \"Montgomery\", \"Monty\", \"Moore\", \"Moosa\", \"Moray\", \"Morgan\", \"Morgyn\", \"Morris\", \"Morton\", \"Moshy\", \"Motade\", \"Moyes\", \"Msughter\", \"Mueez\", \"Muhamadjavad\", \"Muhammad\", \"Muhammed\", \"Muhsin\", \"Muir\", \"Munachi\", \"Muneeb\", \"Mungo\", \"Munir\", \"Munmair\", \"Munro\", \"Murdo\", \"Murray\", \"Murrough\", \"Murry\", \"Musa\", \"Musse\", \"Mustafa\", \"Mustapha\", \"Muzammil\", \"Muzzammil\", \"Mykie\", \"Myles\", \"Mylo\", \"Nabeel\", \"Nadeem\", \"Nader\", \"Nagib\", \"Naif\", \"Nairn\", \"Narvic\", \"Nash\", \"Nasser\", \"Nassir\", \"Natan\", \"Nate\", \"Nathan\", \"Nathanael\", \"Nathanial\", \"Nathaniel\", \"Nathan-Rae\", \"Nawfal\", \"Nayan\", \"Neco\", \"Neil\", \"Nelson\", \"Neo\", \"Neshawn\", \"Nevan\", \"Nevin\", \"Ngonidzashe\", \"Nial\", \"Niall\", \"Nicholas\", \"Nick\", \"Nickhill\", \"Nicki\", \"Nickson\", \"Nicky\", \"Nico\", \"Nicodemus\", \"Nicol\", \"Nicolae\", \"Nicolas\", \"Nidhish\", \"Nihaal\", \"Nihal\", \"Nikash\", \"Nikhil\", \"Niki\", \"Nikita\", \"Nikodem\", \"Nikolai\", \"Nikos\", \"Nilav\", \"Niraj\", \"Niro\", \"Niven\", \"Noah\", \"Noel\", \"Nolan\", \"Noor\", \"Norman\", \"Norrie\", \"Nuada\", \"Nyah\", \"Oakley\", \"Oban\", \"Obieluem\", \"Obosa\", \"Odhran\", \"Odin\", \"Odynn\", \"Ogheneochuko\", \"Ogheneruno\", \"Ohran\", \"Oilibhear\", \"Oisin\", \"Ojima-Ojo\", \"Okeoghene\", \"Olaf\", \"Ola-Oluwa\", \"Olaoluwapolorimi\", \"Ole\", \"Olie\", \"Oliver\", \"Olivier\", \"Oliwier\", \"Ollie\", \"Olurotimi\", \"Oluwadamilare\", \"Oluwadamiloju\", \"Oluwafemi\", \"Oluwafikunayomi\", \"Oluwalayomi\", \"Oluwatobiloba\", \"Oluwatoni\", \"Omar\", \"Omri\", \"Oran\", \"Orin\", \"Orlando\", \"Orley\", \"Orran\", \"Orrick\", \"Orrin\", \"Orson\", \"Oryn\", \"Oscar\", \"Osesenagha\", \"Oskar\", \"Ossian\", \"Oswald\", \"Otto\", \"Owain\", \"Owais\", \"Owen\", \"Owyn\", \"Oz\", \"Ozzy\", \"Pablo\", \"Pacey\", \"Padraig\", \"Paolo\", \"Pardeepraj\", \"Parkash\", \"Parker\", \"Pascoe\", \"Pasquale\", \"Patrick\", \"Patrick-John\", \"Patrikas\", \"Patryk\", \"Paul\", \"Pavit\", \"Pawel\", \"Pawlo\", \"Pearce\", \"Pearse\", \"Pearsen\", \"Pedram\", \"Pedro\", \"Peirce\", \"Peiyan\", \"Pele\", \"Peni\", \"Peregrine\", \"Peter\", \"Phani\", \"Philip\", \"Philippos\", \"Phinehas\", \"Phoenix\", \"Phoevos\", \"Pierce\", \"Pierre-Antoine\", \"Pieter\", \"Pietro\", \"Piotr\", \"Porter\", \"Prabhjoit\", \"Prabodhan\", \"Praise\", \"Pranav\", \"Pravin\", \"Precious\", \"Prentice\", \"Presley\", \"Preston\", \"Preston-Jay\", \"Prinay\", \"Prince\", \"Prithvi\", \"Promise\", \"Puneetpaul\", \"Pushkar\", \"Qasim\", \"Qirui\", \"Quinlan\", \"Quinn\", \"Radmiras\", \"Raees\", \"Raegan\", \"Rafael\", \"Rafal\", \"Rafferty\", \"Rafi\", \"Raheem\", \"Rahil\", \"Rahim\", \"Rahman\", \"Raith\", \"Raithin\", \"Raja\", \"Rajab-Ali\", \"Rajan\", \"Ralfs\", \"Ralph\", \"Ramanas\", \"Ramit\", \"Ramone\", \"Ramsay\", \"Ramsey\", \"Rana\", \"Ranolph\", \"Raphael\", \"Rasmus\", \"Rasul\", \"Raul\", \"Raunaq\", \"Ravin\", \"Ray\", \"Rayaan\", \"Rayan\", \"Rayane\", \"Rayden\", \"Rayhan\", \"Raymond\", \"Rayne\", \"Rayyan\", \"Raza\", \"Reace\", \"Reagan\", \"Reean\", \"Reece\", \"Reed\", \"Reegan\", \"Rees\", \"Reese\", \"Reeve\", \"Regan\", \"Regean\", \"Reggie\", \"Rehaan\", \"Rehan\", \"Reice\", \"Reid\", \"Reigan\", \"Reilly\", \"Reily\", \"Reis\", \"Reiss\", \"Remigiusz\", \"Remo\", \"Remy\", \"Ren\", \"Renars\", \"Reng\", \"Rennie\", \"Reno\", \"Reo\", \"Reuben\", \"Rexford\", \"Reynold\", \"Rhein\", \"Rheo\", \"Rhett\", \"Rheyden\", \"Rhian\", \"Rhoan\", \"Rholmark\", \"Rhoridh\", \"Rhuairidh\", \"Rhuan\", \"Rhuaridh\", \"Rhudi\", \"Rhy\", \"Rhyan\", \"Rhyley\", \"Rhyon\", \"Rhys\", \"Rhys-Bernard\", \"Rhyse\", \"Riach\", \"Rian\", \"Ricards\", \"Riccardo\", \"Ricco\", \"Rice\", \"Richard\", \"Richey\", \"Richie\", \"Ricky\", \"Rico\", \"Ridley\", \"Ridwan\", \"Rihab\", \"Rihan\", \"Rihards\", \"Rihonn\", \"Rikki\", \"Riley\", \"Rio\", \"Rioden\", \"Rishi\", \"Ritchie\", \"Rivan\", \"Riyadh\", \"Riyaj\", \"Roan\", \"Roark\", \"Roary\", \"Rob\", \"Robbi\", \"Robbie\", \"Robbie-lee\", \"Robby\", \"Robert\", \"Robert-Gordon\", \"Robertjohn\", \"Robi\", \"Robin\", \"Rocco\", \"Roddy\", \"Roderick\", \"Rodrigo\", \"Roen\", \"Rogan\", \"Roger\", \"Rohaan\", \"Rohan\", \"Rohin\", \"Rohit\", \"Rokas\", \"Roman\", \"Ronald\", \"Ronan\", \"Ronan-Benedict\", \"Ronin\", \"Ronnie\", \"Rooke\", \"Roray\", \"Rori\", \"Rorie\", \"Rory\", \"Roshan\", \"Ross\", \"Ross-Andrew\", \"Rossi\", \"Rowan\", \"Rowen\", \"Roy\", \"Ruadhan\", \"Ruaidhri\", \"Ruairi\", \"Ruairidh\", \"Ruan\", \"Ruaraidh\", \"Ruari\", \"Ruaridh\", \"Ruben\", \"Rubhan\", \"Rubin\", \"Rubyn\", \"Rudi\", \"Rudy\", \"Rufus\", \"Rui\", \"Ruo\", \"Rupert\", \"Ruslan\", \"Russel\", \"Russell\", \"Ryaan\", \"Ryan\", \"Ryan-Lee\", \"Ryden\", \"Ryder\", \"Ryese\", \"Ryhs\", \"Rylan\", \"Rylay\", \"Rylee\", \"Ryleigh\", \"Ryley\", \"Rylie\", \"Ryo\", \"Ryszard\", \"Saad\", \"Sabeen\", \"Sachkirat\", \"Saffi\", \"Saghun\", \"Sahaib\", \"Sahbian\", \"Sahil\", \"Saif\", \"Saifaddine\", \"Saim\", \"Sajid\", \"Sajjad\", \"Salahudin\", \"Salman\", \"Salter\", \"Salvador\", \"Sam\", \"Saman\", \"Samar\", \"Samarjit\", \"Samatar\", \"Sambrid\", \"Sameer\", \"Sami\", \"Samir\", \"Sami-Ullah\", \"Samual\", \"Samuel\", \"Samuela\", \"Samy\", \"Sanaullah\", \"Sandro\", \"Sandy\", \"Sanfur\", \"Sanjay\", \"Santiago\", \"Santino\", \"Satveer\", \"Saul\", \"Saunders\", \"Savin\", \"Sayad\", \"Sayeed\", \"Sayf\", \"Scot\", \"Scott\", \"Scott-Alexander\", \"Seaan\", \"Seamas\", \"Seamus\", \"Sean\", \"Seane\", \"Sean-James\", \"Sean-Paul\", \"Sean-Ray\", \"Seb\", \"Sebastian\", \"Sebastien\", \"Selasi\", \"Seonaidh\", \"Sephiroth\", \"Sergei\", \"Sergio\", \"Seth\", \"Sethu\", \"Seumas\", \"Shaarvin\", \"Shadow\", \"Shae\", \"Shahmir\", \"Shai\", \"Shane\", \"Shannon\", \"Sharland\", \"Sharoz\", \"Shaughn\", \"Shaun\", \"Shaunpaul\", \"Shaun-Paul\", \"Shaun-Thomas\", \"Shaurya\", \"Shaw\", \"Shawn\", \"Shawnpaul\", \"Shay\", \"Shayaan\", \"Shayan\", \"Shaye\", \"Shayne\", \"Shazil\", \"Shea\", \"Sheafan\", \"Sheigh\", \"Shenuk\", \"Sher\", \"Shergo\", \"Sheriff\", \"Sherwyn\", \"Shiloh\", \"Shiraz\", \"Shreeram\", \"Shreyas\", \"Shyam\", \"Siddhant\", \"Siddharth\", \"Sidharth\", \"Sidney\", \"Siergiej\", \"Silas\", \"Simon\", \"Sinai\", \"Skye\", \"Sofian\", \"Sohaib\", \"Sohail\", \"Soham\", \"Sohan\", \"Sol\", \"Solomon\", \"Sonneey\", \"Sonni\", \"Sonny\", \"Sorley\", \"Soul\", \"Spencer\", \"Spondon\", \"Stanislaw\", \"Stanley\", \"Stefan\", \"Stefano\", \"Stefin\", \"Stephen\", \"Stephenjunior\", \"Steve\", \"Steven\", \"Steven-lee\", \"Stevie\", \"Stewart\", \"Stewarty\", \"Strachan\", \"Struan\", \"Stuart\", \"Su\", \"Subhaan\", \"Sudais\", \"Suheyb\", \"Suilven\", \"Sukhi\", \"Sukhpal\", \"Sukhvir\", \"Sulayman\", \"Sullivan\", \"Sultan\", \"Sung\", \"Sunny\", \"Suraj\", \"Surien\", \"Sweyn\", \"Syed\", \"Sylvain\", \"Symon\", \"Szymon\", \"Tadd\", \"Taddy\", \"Tadhg\", \"Taegan\", \"Taegen\", \"Tai\", \"Tait\", \"Taiwo\", \"Talha\", \"Taliesin\", \"Talon\", \"Talorcan\", \"Tamar\", \"Tamiem\", \"Tammam\", \"Tanay\", \"Tane\", \"Tanner\", \"Tanvir\", \"Tanzeel\", \"Taonga\", \"Tarik\", \"Tariq-Jay\", \"Tate\", \"Taylan\", \"Taylar\", \"Tayler\", \"Taylor\", \"Taylor-Jay\", \"Taylor-Lee\", \"Tayo\", \"Tayyab\", \"Tayye\", \"Tayyib\", \"Teagan\", \"Tee\", \"Teejay\", \"Tee-jay\", \"Tegan\", \"Teighen\", \"Teiyib\", \"Te-Jay\", \"Temba\", \"Teo\", \"Teodor\", \"Teos\", \"Terry\", \"Teydren\", \"Theo\", \"Theodore\", \"Thiago\", \"Thierry\", \"Thom\", \"Thomas\", \"Thomas-Jay\", \"Thomson\", \"Thorben\", \"Thorfinn\", \"Thrinei\", \"Thumbiko\", \"Tiago\", \"Tian\", \"Tiarnan\", \"Tibet\", \"Tieran\", \"Tiernan\", \"Timothy\", \"Timucin\", \"Tiree\", \"Tisloh\", \"Titi\", \"Titus\", \"Tiylar\", \"TJ\", \"Tjay\", \"T-Jay\", \"Tobey\", \"Tobi\", \"Tobias\", \"Tobie\", \"Toby\", \"Todd\", \"Tokinaga\", \"Toluwalase\", \"Tom\", \"Tomas\", \"Tomasz\", \"Tommi-Lee\", \"Tommy\", \"Tomson\", \"Tony\", \"Torin\", \"Torquil\", \"Torran\", \"Torrin\", \"Torsten\", \"Trafford\", \"Trai\", \"Travis\", \"Tre\", \"Trent\", \"Trey\", \"Tristain\", \"Tristan\", \"Troy\", \"Tubagus\", \"Turki\", \"Turner\", \"Ty\", \"Ty-Alexander\", \"Tye\", \"Tyelor\", \"Tylar\", \"Tyler\", \"Tyler-James\", \"Tyler-Jay\", \"Tyllor\", \"Tylor\", \"Tymom\", \"Tymon\", \"Tymoteusz\", \"Tyra\", \"Tyree\", \"Tyrnan\", \"Tyrone\", \"Tyson\", \"Ubaid\", \"Ubayd\", \"Uchenna\", \"Uilleam\", \"Umair\", \"Umar\", \"Umer\", \"Umut\", \"Urban\", \"Uri\", \"Usman\", \"Uzair\", \"Uzayr\", \"Valen\", \"Valentin\", \"Valentino\", \"Valery\", \"Valo\", \"Vasyl\", \"Vedantsinh\", \"Veeran\", \"Victor\", \"Victory\", \"Vinay\", \"Vince\", \"Vincent\", \"Vincenzo\", \"Vinh\", \"Vinnie\", \"Vithujan\", \"Vladimir\", \"Vladislav\", \"Vrishin\", \"Vuyolwethu\", \"Wabuya\", \"Wai\", \"Walid\", \"Wallace\", \"Walter\", \"Waqaas\", \"Warkhas\", \"Warren\", \"Warrick\", \"Wasif\", \"Wayde\", \"Wayne\", \"Wei\", \"Wen\", \"Wesley\", \"Wesley-Scott\", \"Wiktor\", \"Wilkie\", \"Will\", \"William\", \"William-John\", \"Willum\", \"Wilson\", \"Windsor\", \"Wojciech\", \"Woyenbrakemi\", \"Wyatt\", \"Wylie\", \"Wynn\", \"Xabier\", \"Xander\", \"Xavier\", \"Xiao\", \"Xida\", \"Xin\", \"Xue\", \"Yadgor\", \"Yago\", \"Yahya\", \"Yakup\", \"Yang\", \"Yanick\", \"Yann\", \"Yannick\", \"Yaseen\", \"Yasin\", \"Yasir\", \"Yassin\", \"Yoji\", \"Yong\", \"Yoolgeun\", \"Yorgos\", \"Youcef\", \"Yousif\", \"Youssef\", \"Yu\", \"Yuanyu\", \"Yuri\", \"Yusef\", \"Yusuf\", \"Yves\", \"Zaaine\", \"Zaak\", \"Zac\", \"Zach\", \"Zachariah\", \"Zacharias\", \"Zacharie\", \"Zacharius\", \"Zachariya\", \"Zachary\", \"Zachary-Marc\", \"Zachery\", \"Zack\", \"Zackary\", \"Zaid\", \"Zain\", \"Zaine\", \"Zaineddine\", \"Zainedin\", \"Zak\", \"Zakaria\", \"Zakariya\", \"Zakary\", \"Zaki\", \"Zakir\", \"Zakk\", \"Zamaar\", \"Zander\", \"Zane\", \"Zarran\", \"Zayd\", \"Zayn\", \"Zayne\", \"Ze\", \"Zechariah\", \"Zeek\", \"Zeeshan\", \"Zeid\", \"Zein\", \"Zen\", \"Zendel\", \"Zenith\", \"Zennon\", \"Zeph\", \"Zerah\", \"Zhen\", \"Zhi\", \"Zhong\", \"Zhuo\", \"Zi\", \"Zidane\", \"Zijie\", \"Zinedine\", \"Zion\", \"Zishan\", \"Ziya\", \"Ziyaan\", \"Zohaib\", \"Zohair\", \"Zoubaeir\", \"Zubair\", \"Zubayr\", \"Zuriel\"];\n\nconst markovModel = generateModel(personaDetail);\nconst output_text1 = generateText(markovModel, \"They're\");\nconst output_text2 = generateText(markovModel, \"She's\");\nconst name1 = pick(names);\nconst name2 = pick(names);\nconst name3 = pick(names);\n\ndocument.body.innerHTML \n    = \"<h2> Persona Generation </h2>\" \n        + \"<p id = 'subtitle'> Generating user personas for an app that helps parents keep children busy on flights. </p> &#10;&#13;\" \n        + \"<p> <b> PERSONA 01 </b> </p>\" \n        + name1 + \" and \" + name2 + \": \"\n        + output_text1\n        + \"<p> <b> PERSONA 02 </b> </p>\" \n        + name3 + \": \"\n        + output_text2;\n\n// creates a markov chain model based on one or more input strings\n\nfunction generateModel(...args) {\n  const words = args.join(\" \").split(\" \");\n  const model = {};\n\n  // loop through all the words except the last one.\n  for (let i = 0; i < words.length - 1; i++) {\n    const target_word = words[i];\n    const next_word = words[i + 1];\n\n    // if the model doesn't contain the target word, add it.\n    if (!model[target_word]) {\n      model[target_word] = [];\n    }\n\n    // add the next word to the possibilities for target_word\n    model[target_word].push(next_word);\n  }\n\n  return model;\n}\n\nfunction generateText(model, first_word) {\n  // if first_word isn't provided use a random word in the model object\n  first_word = first_word ?? pick(Object.keys(model));\n\n  // start with the word passed in\n  let output_text = first_word;\n  let current_word = first_word;\n  for (let i = 0; i < 120; i++) {\n    // verify that the current word is in the model\n    if (!model[current_word]) break;\n\n    // choose the next word by sampling from options in the model\n    current_word = pick(model[current_word]);\n\n    // append word to output\n    output_text += \" \";\n    output_text += current_word;\n\n    // if we get to a word that ends with \".\" we are done.\n    const last_character = current_word.substr(current_word.length - 1);\n    if (last_character === \".\") {\n      break;\n    }\n  }\n  return output_text;\n}\n\nfunction pick(array) {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/q9aripahqcwar9esp9d7",
        "width": 1518,
        "height": 1518,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/nvr9j5lpvdwqbzfvzqcs",
        "width": 1518,
        "height": 1518,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/pruwrh38bxzaznzzbhuo",
        "width": 1518,
        "height": 1518,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-11T17:02:38.488Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-12T05:59:00.398Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-12T05:59:01.202Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-12T16:28:47.612Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zFXRP4iYXtcb56AJS",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-10T00:16:31.189Z",
    "posted": true,
    "lesson": "Turtles",
    "description": "Sketch that I developed. Wanted to create some code that highlighted the growth of the shapes and create a reference in a sense as well.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n// require /turtles/turtle/turtle.js\n\nlet myTurtle;\n\nfunction setup() {\n  createCanvas(400, 400);\n  background(50);\n  stroke(255);\n  myTurtle = new Turtle();\n}\n\nfunction draw() {\n  \n  // 1st Row\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(50, 50);\n  myTurtle.penDown();\n  \n  myTurtle.moveTo(100, 50);\n  \n  for(i = 0; i < 3; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(120);\n  }\n  \n  myTurtle.moveTo(200, 50);\n  \n  for(i = 0; i < 4; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(90);\n  }\n  \n  myTurtle.moveTo(300, 50);\n  \n  for(i = 0; i < 5; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(72);\n  }\n  \n  // 2nd Row\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(50, 125);\n  myTurtle.penDown();\n  \n  myTurtle.moveTo(100, 125);\n  \n  for(i = 0; i < 6; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(60);\n  }\n  \n  myTurtle.moveTo(200, 125);\n  \n  for(i = 0; i < 7; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(51.4);\n  }\n  \n  myTurtle.moveTo(300, 125);\n  \n  for(i = 0; i < 8; i++) {\n    myTurtle.moveForward(30);\n    myTurtle.turnRight(45);\n  }\n  \n  // 3rd Row\n  \n  myTurtle.penUp();\n  myTurtle.moveTo(50, 225);\n  myTurtle.penDown();\n  \n  myTurtle.moveTo(100, 225);\n  \n  for(i = 0; i < 9; i++) {\n    myTurtle.moveForward(25);\n    myTurtle.turnRight(40);\n  }\n  \n  myTurtle.moveTo(200, 225);\n  \n  for(i = 0; i < 10; i++) {\n    myTurtle.moveForward(25);\n    myTurtle.turnRight(36);\n  }\n  \n  myTurtle.moveTo(315, 225);\n  \n  for(i = 0; i < 360; i++) {\n    myTurtle.moveForward(.8);\n    myTurtle.turnRight(1);\n  }\n  \n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/a346kakgbqaj2lsc86ia",
        "width": 599,
        "height": 597,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "zFswJAR3fMpZdk3Ro",
    "author_id": "THfyBvW9hRLZSLcRy",
    "author": "Juliana Serna Mesa",
    "created_at": "2023-01-31T02:04:40.854Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "🖤",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/vyxms6hx9eurhjn3dppt",
        "width": 1125,
        "height": 1842,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-01-31T02:21:43.388Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-01T03:28:25.976Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zJbvNcKd2NyAWaXa6",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-04-05T01:36:38.812Z",
    "posted": true,
    "lesson": "Microgames",
    "description": "Help the witch-initiate collect all the items she needs to become a legit WITCH. Used a lot of the practice code from in the session. Ran out of time to figure out a score-tracker that works.",
    "code": "let witch;\nlet vessel;\nlet trinket1, trinket2, trinket3;\nlet obstacles;\nlet score = 0;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n// frameRate(10);\n\nwitch = createSprite(width/2,100);\nwitch.addImage(loadImage('img/witch.png'));\n\n\n\n// obstacles = new Group();\n\n\ttrinket1 = createSprite(random(0+50,width-250), random(0+50,height-250));\n\ttrinket1.addImage(loadImage('img/ob1.png'));\n\n\ttrinket2 = createSprite(random(0+50,width-250), random(0+50,height-250));\n\ttrinket2.addImage(loadImage('img/ob2.png'));\n\n\ttrinket3 = createSprite(random(0+50,width-250), random(0+50,height-250));\n\ttrinket3.addImage(loadImage('img/ob3.png'));\n\n\ttrinket4 = createSprite(random(50,width-250), random(0+50,height-250));\n\ttrinket4.addImage(loadImage('img/ob4.png'));\n\n\tvessel = createSprite(width-200,height-150);\n\tvessel.addAnimation('normal', 'img/pot1.png','img/pot1.png', 'img/pot2.png','img/pot2.png');\n\n\n// for (let i = 0; i < 4; i++) {\n// \tlet box = createSprite(random(0, width), random(0, height));\n// \tbox.addAnimation('default', 'assets/box0001.png', 'assets/box0003.png');\n// \tobstacles.add(box);\n// }\n\n\n\t//assets should be preloaded in the preload() function\n\t//to avoid delays in the visualization\n\t//but they can be loaded in setup() and draw() as well\ntextAlign(CENTER);\n}\n\nfunction draw(){\n\tbackground(250, 130, 180);\n\tdrawSprites();\ntextSize(100);\ntext(\"A Witch's Concoction\", width/2,100)\nwitch.position.x = mouseX;\nwitch.position.y = mouseY;\n\nvessel.scale = 0.5;\nwitch.scale = 0.5;\ntrinket1.scale = 0.5;\ntrinket2.scale = 0.75;\ntrinket3.scale = 0.5;\n\nwitch.collide(vessel);\n\nwitch.displace(trinket1);\nwitch.displace(trinket2);\nwitch.displace(trinket3);\nwitch.displace(trinket4);\n\nif (trinket1.overlap(vessel)){\ntrinket1.remove();\n}\n\nif (trinket2.overlap(vessel)){\n\ttrinket2.remove();\n\t}\n\nif (trinket3.overlap(vessel)){\n\ttrinket3.remove();\n\t}\n\n\tif (trinket4.overlap(vessel)){\n\t\ttrinket4.remove();\n\t\t}\n\n \n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/g0d93v3lwpef0oatdz0x",
        "width": 3456,
        "height": 2002,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/l7nqcgxxikcdxkfxrfrz",
        "width": 3456,
        "height": 1998,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-05T19:00:51.872Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-05T19:45:37.557Z"
      },
      {
        "category": "funny",
        "voter_id": null,
        "created_at": "2023-04-05T19:45:38.103Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-04-06T20:14:58.899Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zR9TigB8cTtixR9S2",
    "author_id": "F64LC2E5aSDKftSj9",
    "author": "John Kim",
    "created_at": "2023-05-02T21:38:30.427Z",
    "posted": true,
    "lesson": "3D Forms",
    "description": "Made some keys to experiment with varying designs on the same object. Had some fun making this one and messing around with when to use the union() function vs the difference() function.",
    "code": "//I can spend an hour on this\n\n// Key 1\n\nunion(){\n    color(\"grey\"){\n        difference(){\n        cylinder(1, 2, 2,    center = true);\n            \n        translate([-1, 0, 0]){\n        cylinder(2, .5, .5, center = true);\n        }\n    }\n    \n    difference(){\n        translate([3, 0, 0]){\n        cube([5, 2, 1], center = true);\n            }\n        \n        difference(){\n        translate([3, -1, 0]){\n        rotate([0, 0, 13]){\n        cylinder(3, 2, 2);\n            }\n            }\n            \n        }\n        }\n    }\n}\n\n// Key 2\n\ntranslate([0, 5, 0]){\n    union(){\n        difference(){\n        cylinder(1, 2, 2,    center = true);\n            \n        translate([-0.2, 0, 0]){\n        rotate([0, 0, 36]){\n        cylinder(2, 1.5, 1.5, center = true);\n            }\n        }\n    }\n    \n        translate([5, 0, 0]){\n        cube([7, 1, 1], center = true);\n        }\n        \n        translate([6, -1, 0]){\n        cube([1, 1, 0.5], center = true);    \n        }\n        \n        translate([8, -1, 0]){\n        cube([1, 1, 0.5], center = true);    \n        }\n}\n}\n\n// Key 3\n\ntranslate([0, 10, 0]){\n    union(){\n    color(\"white\"){\n        difference(){\n            cylinder(1, 2, 2,    center = true);\n            \n            translate([-1, 0, 0]){\n            cylinder(2, .5, .5, center = true);\n        }\n    }\n    \n        translate([3, 0, 0]){\n        cube([3, 1, 1], center = true);\n        }\n        \n        translate([3, 0.5, 0]){\n        cube([7, 1, 1], center = true);    \n        }\n        \n        \n       translate([2, -1, 0]){\n         cube([1, 1, 1], center = true);    \n            }\n    \n        translate([4, -1, 0]){\n         cube([1, 1, 1], center = true);    \n            }\n        }\n    }\n}\n\n// Key 4\n\ntranslate([0, 15, 0]){\n    union(){\n    color(\"brown\"){\n        difference(){\n            cube([3, 3, 1],    center = true);\n            \n            translate([-0.7, 0, 0]){\n            cylinder(4, .5, .5, center = true);\n        }\n    }\n    \n    difference(){\n        translate([3, 0, 0]){\n        cube([5, 2, 0.5], center = true);\n        }\n        translate([3, -0.7, 0]){\n        cube([3, 1.5, 3], center = true);\n        }    \n    }\n    }\n}\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/onuw7v8edhqgqrr9rbid",
        "width": 963,
        "height": 706,
        "format": "jpg",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-05-03T06:51:36.91Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-05-03T23:17:48.563Z"
      },
      {
        "category": "pretty",
        "voter_id": "5igS7Z3tRxbSg93TQ",
        "created_at": "2023-05-05T05:13:34.087Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zb2kX9Fk4sQ47D5bC",
    "author_id": "pdEGqtMcHKJMaEqaj",
    "author": "Keren Mevorach",
    "created_at": "2023-04-14T15:41:13.836Z",
    "posted": true,
    "lesson": "Text",
    "description": "I modified the tracery story teller example from the chapter to create stories about ALL OF YOU and comp form :)",
    "code": "// require /text/tracery.min.js\n\nconst storyGrammar = {\n  story: [\"#person# #feeling#. So, for their comp form sketch, they #sketch#. This week, they made #number# sketches! Finally, #reason#, they #verb#, and #verb#.\"],\n  \n  number: [\"4\", \"5\", \"10\", \"100\", \"500\", \"1000\", \"1 million\"],\n  person: [\"Chris\", \"Isha\", \"Justin\", \"Rama\", \"Reshma\", \"Alex\", \"Aabha\", \"Brian\", \"Shristi\", \"Sora\", \"John\", \"Sahiti\", \"Ishaan\", \"Keren\"],\n  reason: [\"before it was too late\", \"just for the hell of it\", \"because they wanted to go above and beyond\"], \n  feeling: [\"felt determined\", \"felt stressed\", \"felt inspired\", \"felt cRaZy\"],\n  adjective: [\"cool\", \"weird\", \"strange\", \"nice\", \"insane\", \"crazy\", \"comical\", \"wild\", \"quirky\", \"funky\"],\n  sketch: [\"did something #adjective# with circles\", \"made a #adjective# animation\", \"created #adjective# custom type\", \"made a #adjective# beat with tone.js\", \"generated #adjective# text\", \"made a #adjective# microgame\", \"tried to figure out the strategies homework but failed\", \"tried to figure out the strategies homework and SUCCEEDED\" ],\n  verb: [\"read the chapter\", \"asked #number# questions on the notion page\", \"did the solo challenge\", \"tried something new in p5\", \"did the pair challenge with #person#\", \"printed a sketch in the laser lab\"],\n};\n\nfunction main() {\n  const grammar = tracery.createGrammar(storyGrammar);\n  const story = grammar.flatten(\"#story#\");\n  display(story);\n}\n\nfunction display(...strings) {\n  const div = document.createElement(\"div\");\n  div.style = \"font-size: 30px; margin: 10%; line-height: 1.5;\";\n  div.innerText = strings.join(\"\\n\");\n  document.body.append(div);\n}\n\n// tracery doesn't load immediately, not sure why, so kludge it\nsetTimeout(main, 10);",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/isnybgcfigja3llh6sva",
        "width": 1072,
        "height": 846,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/r9m2bnetzqpauhn6fm2z",
        "width": 996,
        "height": 756,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dvubrqnktk7akvlf8qfh",
        "width": 1012,
        "height": 850,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-04-14T16:19:15.378Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-17T14:12:12.436Z"
      },
      {
        "category": "funny",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-17T14:12:13.771Z"
      }
    ],
    "comments": [
      {
        "comment": "Love it!",
        "commenter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-04-17T14:12:43.863Z"
      }
    ]
  },
  {
    "_id": "zbmTkSbKKWnTnmHYL",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-06T04:21:55.015Z",
    "posted": true,
    "lesson": "Pixels",
    "description": "Recreated our YouTube friend, the Nyan Cat, pixel by pixel",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/g3awplvur6ezpgbzhgvs",
        "width": 1628,
        "height": 792,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/y4o0fipmr5114c2smf8x",
        "width": 1562,
        "height": 772,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-06T06:26:00.726Z"
      },
      {
        "category": "funny",
        "voter_id": "v7Xju6Lvm2Gnw5aSA",
        "created_at": "2023-03-07T02:15:52.639Z"
      },
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-07T23:01:54.367Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-10T08:45:56.972Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zbsr4yqzQGrZiFc3N",
    "author_id": "dPng55tLHcDzdX24f",
    "author": "Brian Lau",
    "created_at": "2023-03-30T17:54:31.339Z",
    "posted": true,
    "lesson": "Music",
    "description": "Inspired by Imagine by John Lennon - I played with the melody generator and the notes from the chorus. I've also included the non-randomized version here",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/xnl4f6waum9xg25uoytw",
        "width": 888,
        "height": 980,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/bwu2srowz8edoii4kumz",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video"
      },
      {
        "public_id": "avalanche2023spring/ln1lc8v3eutykkbmpkzn",
        "width": 1602,
        "height": 826,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-30T19:10:49.779Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-03-31T03:38:28.813Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zcKheuJqtMcPxQMDJ",
    "author_id": "ThhLMCZBENKtw2dT6",
    "author": "Graeme M",
    "created_at": "2023-01-30T18:58:40.048Z",
    "posted": true,
    "lesson": "Introduction",
    "description": "My instructions :)",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/u27spqbdbvayf9lhk5no",
        "width": 1014,
        "height": 572,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [],
    "comments": []
  },
  {
    "_id": "zdZrPsuxkDdqstoeE",
    "author_id": "gEfwZ6zFL4RzKDXpH",
    "author": "Reshma Thomas",
    "created_at": "2023-02-15T16:40:33.955Z",
    "posted": true,
    "lesson": "Noise",
    "description": "**Terrain Map using Perlin Noise on Unity** [View on itch.io here](https://reshmarosethomas.itch.io/noise-map) Made of cylinders placed at varying heights. Wanted to pick a random spot and mark treasure. Also wanted to generate some movement of terrain map over time, or some response from the map when the mouse is close to the treasure.",
    "code": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.Diagnostics;\n\npublic class PlaceTerrain : MonoBehaviour\n{\n    public GameObject terrainCyl;\n    public int NoOfCyls = 6400; //16*30\n\n    // Start is called before the first frame update\n    void Start()\n    {\n\n        int RandomI = Random.Range(0, 80);\n        int RandomJ = Random.Range(0, 80);\n\n        for (int i = 1; i <= NoOfCyls/80; i++)\n        {\n            for (int j = 1; j <= NoOfCyls /80; j++)\n            {\n                Vector3 position;\n                float y = Mathf.PerlinNoise(i * 0.1f, j * 0.1f) * -4.6f + 3;\n              \n                if (i%2 == 0)\n                {\n                    position = new(i * 0.8f, y, j * 0.8f);\n\n                }\n                else\n                {\n                    position = new(i * 0.8f, y, j * 0.8f - 0.4f);\n                }\n\n                Instantiate(terrainCyl, position, Quaternion.identity, transform);\n            }\n\n        }\n\n\n    }\n\n\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/imkkqohestusonr03vyo",
        "width": 1922,
        "height": 1198,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/tcc7xri0tycn7pzth9kk",
        "width": 1732,
        "height": 920,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/xofn1yijmni1nxyyitk3",
        "width": 1634,
        "height": 1080,
        "format": "png",
        "resource_type": "image"
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-02-15T16:49:21.904Z"
      },
      {
        "category": "pretty",
        "voter_id": "aFZYuqXuhejWXg6yv",
        "created_at": "2023-02-15T18:43:01.62Z"
      },
      {
        "category": "pretty",
        "voter_id": "me69bqQXDu4jtokwu",
        "created_at": "2023-02-16T23:42:50.196Z"
      },
      {
        "category": "pretty",
        "voter_id": null,
        "created_at": "2023-04-28T02:31:34.397Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zgqhD85Gx986F6QT3",
    "author_id": "EZGFdZAsGvyhaQ3Gi",
    "author": "Sora Wong",
    "created_at": "2023-03-23T19:11:03.518Z",
    "posted": true,
    "lesson": "Vectors",
    "description": "WEEK 7 (3/4): My original first sketch on paper.js, I got very confused with points and for some reason had a very hard time with this but it make the creations i did later easier to understand.",
    "code": "",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/emkqavmaae26ondamaqi",
        "width": 1198,
        "height": 1194,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      },
      {
        "public_id": "",
        "width": 0,
        "height": 0,
        "format": "",
        "resource_type": ""
      }
    ],
    "votes": [
      {
        "category": "pretty",
        "voter_id": "gEfwZ6zFL4RzKDXpH",
        "created_at": "2023-03-23T19:22:33.801Z"
      },
      {
        "category": "pretty",
        "voter_id": "SY2nyF7M3fdW2mxkj",
        "created_at": "2023-03-23T19:53:28.028Z"
      },
      {
        "category": "pretty",
        "voter_id": "dPng55tLHcDzdX24f",
        "created_at": "2023-03-23T20:40:02.379Z"
      }
    ],
    "comments": []
  },
  {
    "_id": "zw2MF7rESxmxY2u3o",
    "author_id": "SY2nyF7M3fdW2mxkj",
    "author": "Shristi Singh",
    "created_at": "2023-03-02T06:53:45.995Z",
    "posted": true,
    "lesson": "Strategies",
    "description": "Coding Challenge 1. \nThe noise() was strong in this one (for me). Worked with the starting code in the textbook.",
    "code": "// require https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js\n\n// Dot Challenge Starting Point\nlet diameter;\nfunction setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(20);\n\n  noStroke();\n  ellipseMode(CENTER);\n\n  let noiseFrequency = 0.02;\n\n  for (let i = 0; i < 100; i++) {\n    // these points are not scattered in the same way\n    // how can you make the arrangement match the challenge?\n    let x = noise(i * 20, 0) * 400;\n    let y = noise(i * 20, 1000) * 400;\n\n    // the diameter shouldn't always be 10, it needs to vary\n    if(x>120&&x<280&&y>120&&y<280){\n         \n       fill(max(random(280),random(290),random(300)),100,100);\n      diameter = random(12,18)+ noise(1.05)*2;\n    }\n    else{\n          fill(max(random(100),random(110),random(120)),100,100);\n      diameter = random(4,10)+noise(1.001)*5;\n    }\n \n\n    // the colors also need to change\n    // what colorMode would be easiest to work with?\n\n\n    ellipse(x+noise(1)*10, y+noise(1.001)*10, diameter, diameter);\n  }\n\n  noLoop();\n}",
    "cloudinary_media": [
      {
        "public_id": "avalanche2023spring/njrd0rzon8xyb5j9nuyf",
        "width": 798,
        "height": 796,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/dwxykrw6osofxopm9cds",
        "width": 596,
        "height": 596,
        "format": "png",
        "resource_type": "image"
      },
      {
        "public_id": "avalanche2023spring/ymxzhpn53q3wn90xs8f8",
        "width": 794,
        "height": 792,
        "format": "mov",
        "resource_type": "video"
      }
    ],
    "votes": [],
    "comments": []
  }
]
